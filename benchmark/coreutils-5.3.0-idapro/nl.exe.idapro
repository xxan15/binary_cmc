.text:00401000 ;
.text:00401000 ; +-------------------------------------------------------------------------+
.text:00401000 ; |      This file was generated by The Interactive Disassembler (IDA)      |
.text:00401000 ; |           Copyright (c) 2021 Hex-Rays, <support@hex-rays.com>           |
.text:00401000 ; |                      License info: 48-357D-7BC4-C6                      |
.text:00401000 ; |                              Virginia Tech                              |
.text:00401000 ; +-------------------------------------------------------------------------+
.text:00401000 ;
.text:00401000 ; Input SHA256 : A8C999486066760D9959AE8AA0FC5F1B66AD3671C732E4EABEA3DCE448D27147
.text:00401000 ; Input MD5    : 179F37495C36DF151FEC33A888B8D2A5
.text:00401000 ; Input CRC32  : 283FF7F9
.text:00401000
.text:00401000 ; File Name   : /home/cindy/Documents/Projects/binary_cmc/benchmark/coreutils-5.3.0-bin/bin/nl.exe
.text:00401000 ; Format      : Portable executable for 80386 (PE)
.text:00401000 ; Imagebase   : 400000
.text:00401000 ; Timestamp   : 4266A259 (Wed Apr 20 18:41:29 2005)
.text:00401000 ; Section 1. (virtual address 00001000)
.text:00401000 ; Virtual size                  : 0000E290 (  58000.)
.text:00401000 ; Section size in file          : 0000E400 (  58368.)
.text:00401000 ; Offset to raw data for section: 00000400
.text:00401000 ; Flags 60000020: Text Executable Readable
.text:00401000 ; Alignment     : default
.text:00401000
.text:00401000                 .686p
.text:00401000                 .mmx
.text:00401000                 .model flat
.text:00401000
.text:00401000 ; ===========================================================================
.text:00401000
.text:00401000 ; Segment type: Pure code
.text:00401000 ; Segment permissions: Read/Execute
.text:00401000 _text           segment para public 'CODE' use32
.text:00401000                 assume cs:_text
.text:00401000                 ;org 401000h
.text:00401000                 assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
.text:00401000
.text:00401000 ; =============== S U B R O U T I N E =======================================
.text:00401000
.text:00401000 ; Attributes: noreturn bp-based frame
.text:00401000
.text:00401000                 public start
.text:00401000 start           proc near
.text:00401000
.text:00401000 Type            = dword ptr -8
.text:00401000
.text:00401000                 push    ebp
.text:00401001                 mov     ebp, esp
.text:00401003                 sub     esp, 8
.text:00401006                 mov     [esp+8+Type], 1 ; Type
.text:0040100D                 call    ds:__set_app_type
.text:00401013                 call    sub_401080
.text:00401013 start           endp
.text:00401013
.text:00401018 ; ---------------------------------------------------------------------------
.text:00401018                 mov     esp, ebp
.text:0040101A                 xor     eax, eax
.text:0040101C                 pop     ebp
.text:0040101D                 retn
.text:0040101D ; ---------------------------------------------------------------------------
.text:0040101E                 align 10h
.text:00401020                 push    ebp
.text:00401021                 mov     ebp, esp
.text:00401023                 sub     esp, 8
.text:00401026                 mov     dword ptr [esp], 2
.text:0040102D                 call    ds:__set_app_type
.text:00401033                 call    sub_401080
.text:00401038 ; ---------------------------------------------------------------------------
.text:00401038                 mov     esp, ebp
.text:0040103A                 xor     eax, eax
.text:0040103C                 pop     ebp
.text:0040103D                 retn
.text:0040103D ; ---------------------------------------------------------------------------
.text:0040103E                 align 10h
.text:00401040
.text:00401040 ; =============== S U B R O U T I N E =======================================
.text:00401040
.text:00401040 ; Attributes: bp-based frame
.text:00401040
.text:00401040 ; int __cdecl sub_401040(void (__cdecl *)())
.text:00401040 sub_401040      proc near               ; CODE XREF: sub_401E90+64↓p
.text:00401040                                         ; .text:0040E910↓p ...
.text:00401040
.text:00401040 var_8           = dword ptr -8
.text:00401040 arg_0           = dword ptr  8
.text:00401040
.text:00401040                 push    ebp
.text:00401041                 mov     ebp, esp
.text:00401043                 sub     esp, 8
.text:00401046                 mov     edx, [ebp+arg_0]
.text:00401049                 mov     [esp+8+var_8], edx ; void (__cdecl *)()
.text:0040104C                 call    ds:atexit
.text:00401052                 mov     esp, ebp
.text:00401054                 pop     ebp
.text:00401055                 retn
.text:00401055 sub_401040      endp
.text:00401055
.text:00401055 ; ---------------------------------------------------------------------------
.text:00401056                 align 10h
.text:00401060                 push    ebp
.text:00401061                 mov     ebp, esp
.text:00401063                 sub     esp, 8
.text:00401066                 mov     edx, [ebp+8]
.text:00401069                 mov     [esp], edx
.text:0040106C                 call    ds:_onexit
.text:00401072                 mov     esp, ebp
.text:00401074                 pop     ebp
.text:00401075                 retn
.text:00401075 ; ---------------------------------------------------------------------------
.text:00401076                 align 10h
.text:00401080
.text:00401080 ; =============== S U B R O U T I N E =======================================
.text:00401080
.text:00401080 ; Attributes: noreturn bp-based frame
.text:00401080
.text:00401080 sub_401080      proc near               ; CODE XREF: start+13↑p
.text:00401080                                         ; .text:00401033↑p
.text:00401080
.text:00401080 lpTopLevelExceptionFilter= dword ptr -28h
.text:00401080 Mode            = dword ptr -24h
.text:00401080 var_20          = dword ptr -20h
.text:00401080 var_1C          = dword ptr -1Ch
.text:00401080 var_18          = dword ptr -18h
.text:00401080 var_C           = byte ptr -0Ch
.text:00401080 var_8           = dword ptr -8
.text:00401080
.text:00401080                 push    ebp
.text:00401081                 mov     ebp, esp
.text:00401083                 push    ebx
.text:00401084                 sub     esp, 24h
.text:00401087                 mov     [esp+28h+lpTopLevelExceptionFilter], offset TopLevelExceptionFilter ; lpTopLevelExceptionFilter
.text:0040108E                 call    SetUnhandledExceptionFilter
.text:00401093                 sub     esp, 4
.text:00401096                 call    sub_40E8B0
.text:0040109B                 mov     [esp+28h+lpTopLevelExceptionFilter], offset dword_410000
.text:004010A2                 mov     edx, dword_4100A0
.text:004010A8                 lea     ecx, [ebp+var_8]
.text:004010AB                 mov     [ebp+var_8], 0
.text:004010B2                 mov     [esp+28h+var_18], ecx
.text:004010B6                 mov     [esp+28h+var_1C], edx
.text:004010BA                 lea     edx, [ebp+var_C]
.text:004010BD                 mov     [esp+28h+var_20], edx
.text:004010C1                 mov     [esp+28h+Mode], offset dword_410004
.text:004010C9                 call    __getmainargs
.text:004010CE                 mov     eax, Mode
.text:004010D3                 test    eax, eax
.text:004010D5                 jz      short loc_401135
.text:004010D7                 mov     dword_4100C0, eax
.text:004010DC                 mov     edx, ds:_iob
.text:004010E2                 test    edx, edx
.text:004010E4                 jz      short loc_4010FB
.text:004010E6                 mov     [esp+28h+Mode], eax ; Mode
.text:004010EA                 mov     ebx, [edx+10h]
.text:004010ED                 mov     [esp+28h+lpTopLevelExceptionFilter], ebx ; FileHandle
.text:004010F0                 call    _setmode
.text:004010F5                 mov     edx, ds:_iob
.text:004010FB
.text:004010FB loc_4010FB:                             ; CODE XREF: sub_401080+64↑j
.text:004010FB                 cmp     edx, 0FFFFFFE0h
.text:004010FE                 jz      short loc_40111B
.text:00401100                 mov     ebx, Mode
.text:00401106                 mov     [esp+28h+Mode], ebx ; Mode
.text:0040110A                 mov     ecx, [edx+30h]
.text:0040110D                 mov     [esp+28h+lpTopLevelExceptionFilter], ecx ; FileHandle
.text:00401110                 call    _setmode
.text:00401115                 mov     edx, ds:_iob
.text:0040111B
.text:0040111B loc_40111B:                             ; CODE XREF: sub_401080+7E↑j
.text:0040111B                 cmp     edx, 0FFFFFFC0h
.text:0040111E                 jz      short loc_401135
.text:00401120                 mov     ebx, Mode
.text:00401126                 mov     [esp+28h+Mode], ebx ; Mode
.text:0040112A                 mov     ecx, [edx+50h]
.text:0040112D                 mov     [esp+28h+lpTopLevelExceptionFilter], ecx ; FileHandle
.text:00401130                 call    _setmode
.text:00401135
.text:00401135 loc_401135:                             ; CODE XREF: sub_401080+55↑j
.text:00401135                                         ; sub_401080+9E↑j
.text:00401135                 call    __p__fmode
.text:0040113A                 mov     ecx, dword_4100C0
.text:00401140                 mov     [eax], ecx
.text:00401142                 call    sub_40E880
.text:00401147                 call    __p__environ
.text:0040114C                 mov     edx, dword_410000
.text:00401152                 mov     ebx, [eax]
.text:00401154                 mov     ecx, dword_410004
.text:0040115A                 mov     [esp+28h+lpTopLevelExceptionFilter], edx
.text:0040115D                 mov     [esp+28h+var_20], ebx
.text:00401161                 mov     [esp+28h+Mode], ecx
.text:00401165                 call    sub_401E90
.text:00401165 sub_401080      endp
.text:00401165
.text:0040116A ; ---------------------------------------------------------------------------
.text:0040116A                 mov     ebx, eax
.text:0040116C                 call    _cexit
.text:00401171                 mov     [esp], ebx
.text:00401174                 call    ExitProcess
.text:00401174 ; ---------------------------------------------------------------------------
.text:00401179                 align 10h
.text:00401180
.text:00401180 ; =============== S U B R O U T I N E =======================================
.text:00401180
.text:00401180 ; Attributes: bp-based frame
.text:00401180
.text:00401180 ; LONG __stdcall TopLevelExceptionFilter(struct _EXCEPTION_POINTERS *ExceptionInfo)
.text:00401180 TopLevelExceptionFilter proc near       ; DATA XREF: sub_401080+7↑o
.text:00401180
.text:00401180 Signal          = dword ptr -18h
.text:00401180 Function        = dword ptr -14h
.text:00401180 var_8           = dword ptr -8
.text:00401180 var_4           = dword ptr -4
.text:00401180 ExceptionInfo   = dword ptr  8
.text:00401180
.text:00401180                 push    ebp
.text:00401181                 mov     ebp, esp
.text:00401183                 sub     esp, 18h
.text:00401186                 mov     [ebp+var_8], ebx
.text:00401189                 mov     ecx, [ebp+ExceptionInfo]
.text:0040118C                 xor     ebx, ebx
.text:0040118E                 mov     [ebp+var_4], esi
.text:00401191                 xor     esi, esi
.text:00401193                 mov     edx, [ecx]
.text:00401195                 mov     eax, [edx]
.text:00401197                 cmp     eax, 0C0000091h
.text:0040119C                 ja      loc_401260
.text:004011A2                 cmp     eax, 0C000008Dh
.text:004011A7                 jnb     short loc_401210
.text:004011A9                 cmp     eax, 0C0000005h
.text:004011AE                 jz      short loc_4011BE
.text:004011B0
.text:004011B0 loc_4011B0:                             ; CODE XREF: TopLevelExceptionFilter+59↓j
.text:004011B0                                         ; TopLevelExceptionFilter+77↓j ...
.text:004011B0                 mov     eax, ebx
.text:004011B2                 mov     esi, [ebp+var_4]
.text:004011B5                 mov     ebx, [ebp+var_8]
.text:004011B8                 mov     esp, ebp
.text:004011BA                 pop     ebp
.text:004011BB                 retn    4
.text:004011BE ; ---------------------------------------------------------------------------
.text:004011BE
.text:004011BE loc_4011BE:                             ; CODE XREF: TopLevelExceptionFilter+2E↑j
.text:004011BE                 mov     [esp+18h+Function], 0 ; Function
.text:004011C6                 mov     [esp+18h+Signal], 0Bh ; Signal
.text:004011CD                 call    signal
.text:004011D2                 cmp     eax, 1
.text:004011D5                 jz      short loc_4011F9
.text:004011D7                 test    eax, eax
.text:004011D9                 jz      short loc_4011B0
.text:004011DB                 mov     [esp+18h+Signal], 0Bh
.text:004011E2                 lea     esi, [esi+0]
.text:004011E9                 lea     edi, [edi+0]
.text:004011F0
.text:004011F0 loc_4011F0:                             ; CODE XREF: TopLevelExceptionFilter+BD↓j
.text:004011F0                 call    eax
.text:004011F2
.text:004011F2 loc_4011F2:                             ; CODE XREF: TopLevelExceptionFilter+8D↓j
.text:004011F2                                         ; TopLevelExceptionFilter+D5↓j ...
.text:004011F2                 mov     ebx, 0FFFFFFFFh
.text:004011F7                 jmp     short loc_4011B0
.text:004011F9 ; ---------------------------------------------------------------------------
.text:004011F9
.text:004011F9 loc_4011F9:                             ; CODE XREF: TopLevelExceptionFilter+55↑j
.text:004011F9                 mov     [esp+18h+Function], 1 ; Function
.text:00401201                 mov     [esp+18h+Signal], 0Bh ; Signal
.text:00401208                 call    signal
.text:0040120D                 jmp     short loc_4011F2
.text:0040120D ; ---------------------------------------------------------------------------
.text:0040120F                 align 10h
.text:00401210
.text:00401210 loc_401210:                             ; CODE XREF: TopLevelExceptionFilter+27↑j
.text:00401210                                         ; TopLevelExceptionFilter+E5↓j
.text:00401210                 mov     esi, 1
.text:00401215
.text:00401215 loc_401215:                             ; CODE XREF: TopLevelExceptionFilter+EC↓j
.text:00401215                 mov     [esp+18h+Function], 0 ; Function
.text:0040121D                 mov     [esp+18h+Signal], 8 ; Signal
.text:00401224                 call    signal
.text:00401229                 cmp     eax, 1
.text:0040122C                 jz      short loc_40123F
.text:0040122E                 test    eax, eax
.text:00401230                 jz      loc_4011B0
.text:00401236                 mov     [esp+18h+Signal], 8
.text:0040123D                 jmp     short loc_4011F0
.text:0040123F ; ---------------------------------------------------------------------------
.text:0040123F
.text:0040123F loc_40123F:                             ; CODE XREF: TopLevelExceptionFilter+AC↑j
.text:0040123F                 mov     [esp+18h+Function], 1 ; Function
.text:00401247                 mov     [esp+18h+Signal], 8 ; Signal
.text:0040124E                 call    signal
.text:00401253                 test    esi, esi
.text:00401255                 jz      short loc_4011F2
.text:00401257                 call    sub_40E8B0
.text:0040125C                 jmp     short loc_4011F2
.text:0040125C ; ---------------------------------------------------------------------------
.text:0040125E                 align 10h
.text:00401260
.text:00401260 loc_401260:                             ; CODE XREF: TopLevelExceptionFilter+1C↑j
.text:00401260                 cmp     eax, 0C0000093h
.text:00401265                 jz      short loc_401210
.text:00401267                 cmp     eax, 0C0000094h
.text:0040126C                 jz      short loc_401215
.text:0040126E                 jmp     loc_4011B0
.text:0040126E TopLevelExceptionFilter endp
.text:0040126E
.text:0040126E ; ---------------------------------------------------------------------------
.text:00401273                 align 10h
.text:00401280 aI64dS_0        db '%*I64d%s',0         ; DATA XREF: sub_401E90+3FD↓o
.text:00401280                                         ; .data:Format↓o
.text:00401289 a0I64dS         db '%0*I64d%s',0        ; DATA XREF: sub_401E90+41E↓o
.text:00401293 aI64dS          db '%-*I64d%s',0        ; DATA XREF: sub_401E90+3DD↓o
.text:0040129D asc_40129D      db '\:',0               ; DATA XREF: .data:Source↓o
.text:004012A0 aTn:                                    ; DATA XREF: .data:off_410010↓o
.text:004012A0                                         ; .data:off_410014↓o ...
.text:004012A0                 text "UTF-16LE", 'tn',9
.text:004012A6 aHeaderNumberin db 'header-numbering',0 ; DATA XREF: .text:off_401380↓o
.text:004012B7 aBodyNumbering  db 'body-numbering',0   ; DATA XREF: .text:00401390↓o
.text:004012C6 aFooterNumberin db 'footer-numbering',0 ; DATA XREF: .text:004013A0↓o
.text:004012D7 aStartingLineNu db 'starting-line-number',0
.text:004012D7                                         ; DATA XREF: .text:004013B0↓o
.text:004012EC aPageIncrement  db 'page-increment',0   ; DATA XREF: .text:004013C0↓o
.text:004012FB aNoRenumber     db 'no-renumber',0      ; DATA XREF: .text:004013D0↓o
.text:00401307 aJoinBlankLines db 'join-blank-lines',0 ; DATA XREF: .text:004013E0↓o
.text:00401318 aNumberSeparato db 'number-separator',0 ; DATA XREF: .text:004013F0↓o
.text:00401329 aNumberWidth    db 'number-width',0     ; DATA XREF: .text:00401400↓o
.text:00401336 aNumberFormat   db 'number-format',0    ; DATA XREF: .text:00401410↓o
.text:00401344 aSectionDelimit db 'section-delimiter',0
.text:00401344                                         ; DATA XREF: .text:00401420↓o
.text:00401356 aHelp           db 'help',0             ; DATA XREF: .text:00401430↓o
.text:0040135B aVersion        db 'version',0          ; DATA XREF: .text:00401440↓o
.text:00401363                 align 20h
.text:00401380 off_401380      dd offset aHeaderNumberin
.text:00401380                                         ; DATA XREF: sub_401E90+7E↓o
.text:00401380                                         ; "header-numbering"
.text:00401384                 dd 1, 0
.text:0040138C                 dd 68h
.text:00401390                 dd offset aBodyNumbering ; "body-numbering"
.text:00401394                 dd 1, 0
.text:0040139C                 dd 62h
.text:004013A0                 dd offset aFooterNumberin ; "footer-numbering"
.text:004013A4                 dd 1, 0
.text:004013AC                 dd 66h
.text:004013B0                 dd offset aStartingLineNu ; "starting-line-number"
.text:004013B4                 dd 1, 0
.text:004013BC                 dd 76h
.text:004013C0                 dd offset aPageIncrement ; "page-increment"
.text:004013C4                 dd 1, 0
.text:004013CC                 dd 69h
.text:004013D0                 dd offset aNoRenumber   ; "no-renumber"
.text:004013D4                 dd 2 dup(0)
.text:004013DC                 dd 70h
.text:004013E0                 dd offset aJoinBlankLines ; "join-blank-lines"
.text:004013E4                 dd 1, 0
.text:004013EC                 dd 6Ch
.text:004013F0                 dd offset aNumberSeparato ; "number-separator"
.text:004013F4                 dd 1, 0
.text:004013FC                 dd 73h
.text:00401400                 dd offset aNumberWidth  ; "number-width"
.text:00401404                 dd 1, 0
.text:0040140C                 dd 77h
.text:00401410                 dd offset aNumberFormat ; "number-format"
.text:00401414                 dd 1, 0
.text:0040141C                 dd 6Eh
.text:00401420                 dd offset aSectionDelimit ; "section-delimiter"
.text:00401424                 dd 1, 0
.text:0040142C                 dd 64h
.text:00401430                 dd offset aHelp         ; "help"
.text:00401434                 dd 2 dup(0)
.text:0040143C                 dd 0FFFFFF7Eh
.text:00401440                 dd offset aVersion      ; "version"
.text:00401444                 dd 2 dup(0)
.text:0040144C                 dd 0FFFFFF7Dh, 4 dup(0)
.text:00401460 ; const char Locale
.text:00401460 Locale          db 0                    ; DATA XREF: sub_401E90+21↓o
.text:00401460                                         ; sub_401E90:loc_4022D2↓o ...
.text:00401461                 align 20h
.text:00401480 aCProgra1Coreut db 'c:/progra~1/CoreUtils/share/locale',0
.text:00401480                                         ; DATA XREF: sub_401E90+3B↓o
.text:004014A3 aCoreutils      db 'coreutils',0        ; DATA XREF: sub_401E90+43↓o
.text:004014A3                                         ; sub_401E90+50↓o
.text:004014AD aHBFVIPlSWND    db 'h:b:f:v:i:pl:s:w:n:d:',0
.text:004014AD                                         ; DATA XREF: sub_401E90+86↓o
.text:004014C3                 align 20h
.text:004014E0 aUsageSOptionFi db 'Usage: %s [OPTION]... [FILE]...',0Ah,0
.text:004014E0                                         ; DATA XREF: sub_401E90:loc_401F76↓o
.text:004014E0                                         ; .text:loc_402710↓o
.text:00401501                 align 20h
.text:00401520 aWriteEachFileT db 'Write each FILE to standard output, with line numbers added.',0Ah
.text:00401520                                         ; DATA XREF: sub_401E90+105↓o
.text:00401520                                         ; .text:0040272F↓o
.text:00401520                 db 'With no FILE, or when FILE is -, read standard input.',0Ah
.text:00401520                 db 0Ah,0
.text:00401595                 align 10h
.text:004015A0 aMandatoryArgum db 'Mandatory arguments to long options are mandatory for short optio'
.text:004015A0                                         ; DATA XREF: sub_401E90+127↓o
.text:004015A0                                         ; .text:00402751↓o
.text:004015A0                 db 'ns too.',0Ah,0
.text:004015EA                 align 20h
.text:00401600 aBBodyNumbering db '  -b, --body-numbering=STYLE      use STYLE for numbering body li'
.text:00401600                                         ; DATA XREF: sub_401E90+149↓o
.text:00401600                                         ; .text:00402773↓o
.text:00401600                 db 'nes',0Ah
.text:00401600                 db '  -d, --section-delimiter=CC      use CC for separating logical p'
.text:00401600                 db 'ages',0Ah
.text:00401600                 db '  -f, --footer-numbering=STYLE    use STYLE for numbering footer '
.text:00401600                 db 'lines',0Ah,0
.text:004016D3                 align 10h
.text:004016E0 aHHeaderNumberi db '  -h, --header-numbering=STYLE    use STYLE for numbering header '
.text:004016E0                                         ; DATA XREF: sub_401E90+16B↓o
.text:004016E0                                         ; .text:00402795↓o
.text:004016E0                 db 'lines',0Ah
.text:004016E0                 db '  -i, --page-increment=NUMBER     line number increment at each l'
.text:004016E0                 db 'ine',0Ah
.text:004016E0                 db '  -l, --join-blank-lines=NUMBER   group of NUMBER empty lines cou'
.text:004016E0                 db 'nted as one',0Ah
.text:004016E0                 db '  -n, --number-format=FORMAT      insert line numbers according t'
.text:004016E0                 db 'o FORMAT',0Ah
.text:004016E0                 db '  -p, --no-renumber               do not reset line numbers at lo'
.text:004016E0                 db 'gical pages',0Ah
.text:004016E0                 db '  -s, --number-separator=STRING   add STRING after (possible) lin'
.text:004016E0                 db 'e number',0Ah,0
.text:0040189B                 align 10h
.text:004018A0 aVFirstPageNumb db '  -v, --first-page=NUMBER         first line number on each logic'
.text:004018A0                                         ; DATA XREF: sub_401E90+18D↓o
.text:004018A0                                         ; .text:004027B7↓o
.text:004018A0                 db 'al page',0Ah
.text:004018A0                 db '  -w, --number-width=NUMBER       use NUMBER columns for line num'
.text:004018A0                 db 'bers',0Ah,0
.text:00401930                 align 20h
.text:00401940 aHelpDisplayThi db '      --help     display this help and exit',0Ah,0
.text:00401940                                         ; DATA XREF: sub_401E90+1AF↓o
.text:00401940                                         ; .text:004027D9↓o
.text:0040196D                 align 20h
.text:00401980 aVersionOutputV db '      --version  output version information and exit',0Ah,0
.text:00401980                                         ; DATA XREF: sub_401E90+1D1↓o
.text:00401980                                         ; .text:004027FB↓o
.text:004019B6                 align 10h
.text:004019C0 aByDefaultSelec db 0Ah                  ; DATA XREF: sub_401E90+1F3↓o
.text:004019C0                                         ; .text:0040281D↓o
.text:004019C0                 db 'By default, selects -v1 -i1 -l1 -sTAB -w6 -nrn -hn -bt -fn.  CC a'
.text:004019C0                 db 're',0Ah
.text:004019C0                 db 'two delimiter characters for separating logical pages, a missing',0Ah
.text:004019C0                 db 'second character implies :.  Type \\ for \.  STYLE is one of:',0Ah
.text:004019C0                 db 0
.text:00401A85                 align 20h
.text:00401AA0 aANumberAllLine db 0Ah                  ; DATA XREF: sub_401E90+215↓o
.text:00401AA0                                         ; .text:0040283F↓o
.text:00401AA0                 db '  a         number all lines',0Ah
.text:00401AA0                 db '  t         number only nonempty lines',0Ah
.text:00401AA0                 db '  n         number no lines',0Ah
.text:00401AA0                 db '  pBRE      number only lines that contain a match for the basic '
.text:00401AA0                 db 'regular',0Ah
.text:00401AA0                 db '              expression, BRE',0Ah
.text:00401AA0                 db 0Ah
.text:00401AA0                 db 'FORMAT is one of:',0Ah
.text:00401AA0                 db 0Ah
.text:00401AA0                 db '  ln   left justified, no leading zeros',0Ah
.text:00401AA0                 db '  rn   right justified, no leading zeros',0Ah
.text:00401AA0                 db '  rz   right justified, leading zeros',0Ah
.text:00401AA0                 db 0Ah,0
.text:00401BF5 aReportBugsToS  db 0Ah                  ; DATA XREF: sub_401E90+237↓o
.text:00401BF5                                         ; .text:00402861↓o
.text:00401BF5                 db 'Report bugs to <%s>.',0Ah,0
.text:00401C0C aBugCoreutilsGn db 'bug-coreutils@gnu.org',0
.text:00401C0C                                         ; DATA XREF: sub_401E90+244↓o
.text:00401C0C                                         ; .text:0040286E↓o
.text:00401C22 aDavidMackenzie db 'David MacKenzie',0  ; DATA XREF: sub_401E90+26E↓o
.text:00401C32 aScottBartram   db 'Scott Bartram',0    ; DATA XREF: sub_401E90+276↓o
.text:00401C40 a530            db '5.3.0',0            ; DATA XREF: sub_401E90+281↓o
.text:00401C46 aGnuCoreutils   db 'GNU coreutils',0    ; DATA XREF: sub_401E90+289↓o
.text:00401C54 ; const FILE stru_401C54
.text:00401C54 stru_401C54     FILE <89006C6Eh, 27BC8DF6h, 0, 61766E69h, 2064696Ch, 64616568h, \
.text:00401C54                                         ; DATA XREF: sub_401E90+291↓o
.text:00401C54                                         ; sub_401E90+2FE↓o
.text:00401C54                       6E207265h, 65626D75h>
.text:00401C74                 db  72h ; r
.text:00401C75                 db  69h ; i
.text:00401C76                 db  6Eh ; n
.text:00401C77                 db  67h ; g
.text:00401C78                 db  20h
.text:00401C79                 db  73h ; s
.text:00401C7A                 db  74h ; t
.text:00401C7B                 db  79h ; y
.text:00401C7C                 db  6Ch ; l
.text:00401C7D                 db  65h ; e
.text:00401C7E                 db  3Ah ; :
.text:00401C7F                 db  20h
.text:00401C80                 db  25h ; %
.text:00401C81                 db  73h ; s
.text:00401C82                 db    0
.text:00401C83                 align 20h
.text:00401CA0 aInvalidFooterN db 'invalid footer numbering style: %s',0
.text:00401CA0                                         ; DATA XREF: sub_401E90+363↓o
.text:00401CC3                 align 20h
.text:00401CE0 aInvalidBodyNum db 'invalid body numbering style: %s',0
.text:00401CE0                                         ; DATA XREF: sub_401E90+396↓o
.text:00401D01 aLn             db 'ln',0               ; DATA XREF: sub_401E90+3CD↓o
.text:00401D04 aRn             db 'rn',0               ; DATA XREF: sub_401E90+3ED↓o
.text:00401D07 aRz             db 'rz',0               ; DATA XREF: sub_401E90+40E↓o
.text:00401D0A                 align 20h
.text:00401D20 aInvalidLineNum db 'invalid line numbering format: %s',0
.text:00401D20                                         ; DATA XREF: sub_401E90+436↓o
.text:00401D42                 align 20h
.text:00401D60 aInvalidNumberO db 'invalid number of blank lines: %s',0
.text:00401D60                                         ; DATA XREF: sub_401E90+4A2↓o
.text:00401D82                 align 20h
.text:00401DA0 aInvalidLineNum_0 db 'invalid line number field width: %s',0
.text:00401DA0                                         ; DATA XREF: sub_401E90+531↓o
.text:00401DC4                 align 20h
.text:00401DE0 aInvalidStartin db 'invalid starting line number: %s',0
.text:00401DE0                                         ; DATA XREF: sub_401E90+581↓o
.text:00401E01                 align 20h
.text:00401E20 aInvalidLineNum_1 db 'invalid line number increment: %s',0
.text:00401E20                                         ; DATA XREF: sub_401E90+600↓o
.text:00401E42                 align 20h
.text:00401E60 aTrySHelpForMor db 'Try `%s --help',27h,' for more information.',0Ah,0
.text:00401E60                                         ; DATA XREF: sub_401E90+612↓o
.text:00401E60                                         ; .text:004026DC↓o
.text:00401E87 ; const char FileName[]
.text:00401E87 FileName        db '-',0                ; DATA XREF: sub_401E90+7DB↓o
.text:00401E87                                         ; sub_401E90:loc_4026B8↓o ...
.text:00401E89                 align 10h
.text:00401E90
.text:00401E90 ; =============== S U B R O U T I N E =======================================
.text:00401E90
.text:00401E90 ; Attributes: noreturn bp-based frame fuzzy-sp
.text:00401E90
.text:00401E90 sub_401E90      proc near               ; CODE XREF: sub_401080+E5↑p
.text:00401E90
.text:00401E90 Category        = dword ptr -38h
.text:00401E90 Locale          = dword ptr -34h
.text:00401E90 Size            = dword ptr -30h
.text:00401E90 var_2C          = byte ptr -2Ch
.text:00401E90 Str             = dword ptr -28h
.text:00401E90 var_24          = dword ptr -24h
.text:00401E90 var_20          = dword ptr -20h
.text:00401E90 var_11          = byte ptr -11h
.text:00401E90 var_10          = dword ptr -10h
.text:00401E90 arg_0           = dword ptr  8
.text:00401E90 arg_4           = dword ptr  0Ch
.text:00401E90
.text:00401E90                 push    ebp
.text:00401E91                 xor     eax, eax
.text:00401E93                 mov     ebp, esp
.text:00401E95                 push    edi
.text:00401E96                 push    esi
.text:00401E97                 push    ebx
.text:00401E98                 sub     esp, 2Ch
.text:00401E9B                 and     esp, 0FFFFFFF0h
.text:00401E9E                 call    __alloca
.text:00401EA3                 call    sub_40E950
.text:00401EA8                 mov     [ebp+var_11], 1
.text:00401EAC                 mov     eax, [ebp+arg_4]
.text:00401EAF                 mov     ecx, [eax]
.text:00401EB1                 mov     [esp+38h+Locale], offset Locale ; Locale
.text:00401EB9                 mov     [esp+38h+Category], 0 ; Category
.text:00401EC0                 mov     ds:dword_4113E0, ecx
.text:00401EC6                 call    setlocale
.text:00401ECB                 mov     [esp+38h+Locale], offset aCProgra1Coreut ; "c:/progra~1/CoreUtils/share/locale"
.text:00401ED3                 mov     [esp+38h+Category], offset aCoreutils ; "coreutils"
.text:00401EDA                 call    ds:__imp_libintl_bindtextdomain
.text:00401EE0                 mov     [esp+38h+Category], offset aCoreutils ; "coreutils"
.text:00401EE7                 call    ds:libintl_textdomain
.text:00401EED                 mov     [esp+38h+Category], offset sub_40C880 ; void (__cdecl *)()
.text:00401EF4                 call    sub_401040
.text:00401EF9                 mov     ds:byte_411120, 0
.text:00401F00
.text:00401F00 loc_401F00:                             ; CODE XREF: sub_401E90+E4↓j
.text:00401F00                                         ; sub_401E90+2C6↓j ...
.text:00401F00                 mov     [esp+38h+Str], 0
.text:00401F08                 mov     esi, [ebp+arg_4]
.text:00401F0B                 mov     eax, [ebp+arg_0]
.text:00401F0E                 mov     dword ptr [esp+38h+var_2C], offset off_401380 ; char
.text:00401F16                 mov     [esp+38h+Size], offset aHBFVIPlSWND ; "h:b:f:v:i:pl:s:w:n:d:"
.text:00401F1E                 mov     [esp+38h+Locale], esi
.text:00401F22                 mov     [esp+38h+Category], eax
.text:00401F25                 call    sub_40C710
.text:00401F2A                 cmp     eax, 0FFFFFFFFh
.text:00401F2D                 jz      loc_40249C
.text:00401F33                 cmp     eax, 69h ; 'i'
.text:00401F36                 jz      loc_402430
.text:00401F3C                 cmp     eax, 69h ; 'i'
.text:00401F3F                 jg      loc_402232
.text:00401F45                 cmp     eax, 62h ; 'b'
.text:00401F48                 jz      loc_4021FC
.text:00401F4E                 cmp     eax, 62h ; 'b'
.text:00401F51                 jg      loc_402133
.text:00401F57                 cmp     eax, 0FFFFFF7Dh
.text:00401F5C                 jz      loc_4020F0
.text:00401F62                 cmp     eax, 0FFFFFF7Eh
.text:00401F67                 jz      short loc_401F76
.text:00401F69                 lea     esi, [esi+0]
.text:00401F70
.text:00401F70 loc_401F70:                             ; CODE XREF: sub_401E90+2B4↓j
.text:00401F70                                         ; sub_401E90+2CE↓j ...
.text:00401F70                 mov     [ebp+var_11], 0
.text:00401F74                 jmp     short loc_401F00
.text:00401F76 ; ---------------------------------------------------------------------------
.text:00401F76
.text:00401F76 loc_401F76:                             ; CODE XREF: sub_401E90+D7↑j
.text:00401F76                 mov     [esp+38h+Category], offset aUsageSOptionFi ; "Usage: %s [OPTION]... [FILE]...\n"
.text:00401F7D                 call    ds:libintl_gettext
.text:00401F83                 mov     ebx, ds:dword_4113E0
.text:00401F89                 mov     [esp+38h+Category], eax ; Format
.text:00401F8C                 mov     [esp+38h+Locale], ebx
.text:00401F90                 call    printf
.text:00401F95                 mov     [esp+38h+Category], offset aWriteEachFileT ; "Write each FILE to standard output, wit"...
.text:00401F9C                 call    ds:libintl_gettext
.text:00401FA2                 mov     ecx, ds:_iob
.text:00401FA8                 add     ecx, 20h ; ' '
.text:00401FAB                 mov     [esp+38h+Locale], ecx ; Stream
.text:00401FAF                 mov     [esp+38h+Category], eax ; Buffer
.text:00401FB2                 call    fputs
.text:00401FB7                 mov     [esp+38h+Category], offset aMandatoryArgum ; "Mandatory arguments to long options are"...
.text:00401FBE                 call    ds:libintl_gettext
.text:00401FC4                 mov     edi, ds:_iob
.text:00401FCA                 add     edi, 20h ; ' '
.text:00401FCD                 mov     [esp+38h+Locale], edi ; Stream
.text:00401FD1                 mov     [esp+38h+Category], eax ; Buffer
.text:00401FD4                 call    fputs
.text:00401FD9                 mov     [esp+38h+Category], offset aBBodyNumbering ; "  -b, --body-numbering=STYLE      use S"...
.text:00401FE0                 call    ds:libintl_gettext
.text:00401FE6                 mov     esi, ds:_iob
.text:00401FEC                 add     esi, 20h ; ' '
.text:00401FEF                 mov     [esp+38h+Locale], esi ; Stream
.text:00401FF3                 mov     [esp+38h+Category], eax ; Buffer
.text:00401FF6                 call    fputs
.text:00401FFB                 mov     [esp+38h+Category], offset aHHeaderNumberi ; "  -h, --header-numbering=STYLE    use S"...
.text:00402002                 call    ds:libintl_gettext
.text:00402008                 mov     ebx, ds:_iob
.text:0040200E                 add     ebx, 20h ; ' '
.text:00402011                 mov     [esp+38h+Locale], ebx ; Stream
.text:00402015                 mov     [esp+38h+Category], eax ; Buffer
.text:00402018                 call    fputs
.text:0040201D                 mov     [esp+38h+Category], offset aVFirstPageNumb ; "  -v, --first-page=NUMBER         first"...
.text:00402024                 call    ds:libintl_gettext
.text:0040202A                 mov     ecx, ds:_iob
.text:00402030                 add     ecx, 20h ; ' '
.text:00402033                 mov     [esp+38h+Locale], ecx ; Stream
.text:00402037                 mov     [esp+38h+Category], eax ; Buffer
.text:0040203A                 call    fputs
.text:0040203F                 mov     [esp+38h+Category], offset aHelpDisplayThi ; "      --help     display this help and "...
.text:00402046                 call    ds:libintl_gettext
.text:0040204C                 mov     edi, ds:_iob
.text:00402052                 add     edi, 20h ; ' '
.text:00402055                 mov     [esp+38h+Locale], edi ; Stream
.text:00402059                 mov     [esp+38h+Category], eax ; Buffer
.text:0040205C                 call    fputs
.text:00402061                 mov     [esp+38h+Category], offset aVersionOutputV ; "      --version  output version informa"...
.text:00402068                 call    ds:libintl_gettext
.text:0040206E                 mov     esi, ds:_iob
.text:00402074                 add     esi, 20h ; ' '
.text:00402077                 mov     [esp+38h+Locale], esi ; Stream
.text:0040207B                 mov     [esp+38h+Category], eax ; Buffer
.text:0040207E                 call    fputs
.text:00402083                 mov     [esp+38h+Category], offset aByDefaultSelec ; "\nBy default, selects -v1 -i1 -l1 -sTAB"...
.text:0040208A                 call    ds:libintl_gettext
.text:00402090                 mov     ebx, ds:_iob
.text:00402096                 add     ebx, 20h ; ' '
.text:00402099                 mov     [esp+38h+Locale], ebx ; Stream
.text:0040209D                 mov     [esp+38h+Category], eax ; Buffer
.text:004020A0                 call    fputs
.text:004020A5                 mov     [esp+38h+Category], offset aANumberAllLine ; "\n  a         number all lines\n  t    "...
.text:004020AC                 call    ds:libintl_gettext
.text:004020B2                 mov     ecx, ds:_iob
.text:004020B8                 add     ecx, 20h ; ' '
.text:004020BB                 mov     [esp+38h+Locale], ecx ; Stream
.text:004020BF                 mov     [esp+38h+Category], eax ; Buffer
.text:004020C2                 call    fputs
.text:004020C7                 mov     [esp+38h+Category], offset aReportBugsToS ; "\nReport bugs to <%s>.\n"
.text:004020CE                 call    ds:libintl_gettext
.text:004020D4                 mov     [esp+38h+Locale], offset aBugCoreutilsGn ; "bug-coreutils@gnu.org"
.text:004020DC                 mov     [esp+38h+Category], eax ; Format
.text:004020DF                 call    printf
.text:004020E4
.text:004020E4 loc_4020E4:                             ; CODE XREF: sub_401E90+2A1↓j
.text:004020E4                 mov     [esp+38h+Category], 0 ; Code
.text:004020EB
.text:004020EB loc_4020EB:                             ; CODE XREF: sub_401E90+645↓j
.text:004020EB                                         ; sub_401E90+7C0↓j
.text:004020EB                 call    exit
.text:004020F0 ; ---------------------------------------------------------------------------
.text:004020F0
.text:004020F0 loc_4020F0:                             ; CODE XREF: sub_401E90+CC↑j
.text:004020F0                 mov     [esp+38h+var_20], 0
.text:004020F8                 mov     edx, ds:_iob
.text:004020FE                 mov     [esp+38h+var_24], offset aDavidMackenzie ; "David MacKenzie"
.text:00402106                 mov     [esp+38h+Str], offset aScottBartram ; "Scott Bartram"
.text:0040210E                 add     edx, 20h ; ' '
.text:00402111                 mov     dword ptr [esp+38h+var_2C], offset a530 ; "5.3.0"
.text:00402119                 mov     [esp+38h+Size], offset aGnuCoreutils ; "GNU coreutils"
.text:00402121                 mov     [esp+38h+Locale], offset stru_401C54 ; FILE *
.text:00402129                 mov     [esp+38h+Category], edx ; FILE *
.text:0040212C                 call    sub_40B050
.text:00402131                 jmp     short loc_4020E4
.text:00402133 ; ---------------------------------------------------------------------------
.text:00402133
.text:00402133 loc_402133:                             ; CODE XREF: sub_401E90+C1↑j
.text:00402133                 cmp     eax, 66h ; 'f'
.text:00402136                 jz      loc_4021C9
.text:0040213C                 cmp     eax, 66h ; 'f'
.text:0040213F                 jg      short loc_40215B
.text:00402141                 cmp     eax, 64h ; 'd'
.text:00402144                 jnz     loc_401F70
.text:0040214A                 mov     edx, ds:dword_411410
.text:00402150                 mov     Source, edx
.text:00402156                 jmp     loc_401F00
.text:0040215B ; ---------------------------------------------------------------------------
.text:0040215B
.text:0040215B loc_40215B:                             ; CODE XREF: sub_401E90+2AF↑j
.text:0040215B                 cmp     eax, 68h ; 'h'
.text:0040215E                 jnz     loc_401F70
.text:00402164                 mov     [esp+38h+Locale], offset unk_411090
.text:0040216C                 mov     [esp+38h+Category], offset off_410014 ; "n\t"
.text:00402173                 call    sub_402890
.text:00402178                 test    al, al
.text:0040217A                 jnz     loc_401F00
.text:00402180                 mov     edx, ds:dword_411410
.text:00402186                 mov     [esp+38h+Category], edx ; char *
.text:00402189                 call    sub_40C6E0
.text:0040218E                 mov     [esp+38h+Category], offset stru_401C54._flag
.text:00402195                 lea     esi, [esi+0]
.text:00402199                 lea     edi, [edi+0]
.text:004021A0
.text:004021A0 loc_4021A0:                             ; CODE XREF: sub_401E90+36A↓j
.text:004021A0                                         ; sub_401E90+39D↓j ...
.text:004021A0                 mov     ebx, eax
.text:004021A2                 call    ds:libintl_gettext
.text:004021A8                 mov     dword ptr [esp+38h+var_2C], ebx ; char
.text:004021AC                 mov     [esp+38h+Locale], 0 ; ErrorMessage
.text:004021B4                 mov     [esp+38h+Category], 0 ; Code
.text:004021BB                 mov     [esp+38h+Size], eax ; char *
.text:004021BF                 call    sub_40E080
.text:004021C4                 jmp     loc_401F70
.text:004021C9 ; ---------------------------------------------------------------------------
.text:004021C9
.text:004021C9 loc_4021C9:                             ; CODE XREF: sub_401E90+2A6↑j
.text:004021C9                 mov     [esp+38h+Locale], offset unk_4110B0
.text:004021D1                 mov     [esp+38h+Category], offset off_410018 ; "n\t"
.text:004021D8                 call    sub_402890
.text:004021DD                 test    al, al
.text:004021DF                 jnz     loc_401F00
.text:004021E5                 mov     ebx, ds:dword_411410
.text:004021EB                 mov     [esp+38h+Category], ebx ; char *
.text:004021EE                 call    sub_40C6E0
.text:004021F3                 mov     [esp+38h+Category], offset aInvalidFooterN ; "invalid footer numbering style: %s"
.text:004021FA                 jmp     short loc_4021A0
.text:004021FC ; ---------------------------------------------------------------------------
.text:004021FC
.text:004021FC loc_4021FC:                             ; CODE XREF: sub_401E90+B8↑j
.text:004021FC                 mov     [esp+38h+Locale], offset unk_411070
.text:00402204                 mov     [esp+38h+Category], offset off_410010 ; "tn\t"
.text:0040220B                 call    sub_402890
.text:00402210                 test    al, al
.text:00402212                 jnz     loc_401F00
.text:00402218                 mov     ecx, ds:dword_411410
.text:0040221E                 mov     [esp+38h+Category], ecx ; char *
.text:00402221                 call    sub_40C6E0
.text:00402226                 mov     [esp+38h+Category], offset aInvalidBodyNum ; "invalid body numbering style: %s"
.text:0040222D                 jmp     loc_4021A0
.text:00402232 ; ---------------------------------------------------------------------------
.text:00402232
.text:00402232 loc_402232:                             ; CODE XREF: sub_401E90+AF↑j
.text:00402232                 cmp     eax, 70h ; 'p'
.text:00402235                 jz      loc_402420
.text:0040223B                 cmp     eax, 70h ; 'p'
.text:0040223E                 jg      loc_402340
.text:00402244                 cmp     eax, 6Ch ; 'l'
.text:00402247                 jz      loc_4022D2
.text:0040224D                 cmp     eax, 6Eh ; 'n'
.text:00402250                 jnz     loc_401F70
.text:00402256                 cld
.text:00402257                 mov     ebx, ds:dword_411410
.text:0040225D                 mov     edi, offset aLn ; "ln"
.text:00402262                 mov     ecx, 3
.text:00402267                 mov     esi, ebx
.text:00402269                 repe cmpsb
.text:0040226B                 jnz     short loc_40227C
.text:0040226D                 mov     eax, offset aI64dS ; "%-*I64d%s"
.text:00402272                 mov     Format, eax
.text:00402277                 jmp     loc_401F00
.text:0040227C ; ---------------------------------------------------------------------------
.text:0040227C
.text:0040227C loc_40227C:                             ; CODE XREF: sub_401E90+3DB↑j
.text:0040227C                 cld
.text:0040227D                 mov     edi, offset aRn ; "rn"
.text:00402282                 mov     ecx, 3
.text:00402287                 mov     esi, ebx
.text:00402289                 repe cmpsb
.text:0040228B                 jnz     short loc_40229D
.text:0040228D                 mov     esi, offset aI64dS_0 ; "%*I64d%s"
.text:00402292                 mov     Format, esi
.text:00402298                 jmp     loc_401F00
.text:0040229D ; ---------------------------------------------------------------------------
.text:0040229D
.text:0040229D loc_40229D:                             ; CODE XREF: sub_401E90+3FB↑j
.text:0040229D                 cld
.text:0040229E                 mov     edi, offset aRz ; "rz"
.text:004022A3                 mov     ecx, 3
.text:004022A8                 mov     esi, ebx
.text:004022AA                 repe cmpsb
.text:004022AC                 jnz     short loc_4022BE
.text:004022AE                 mov     edi, offset a0I64dS ; "%0*I64d%s"
.text:004022B3                 mov     Format, edi
.text:004022B9                 jmp     loc_401F00
.text:004022BE ; ---------------------------------------------------------------------------
.text:004022BE
.text:004022BE loc_4022BE:                             ; CODE XREF: sub_401E90+41C↑j
.text:004022BE                 mov     [esp+38h+Category], ebx ; char *
.text:004022C1                 call    sub_40C6E0
.text:004022C6                 mov     [esp+38h+Category], offset aInvalidLineNum ; "invalid line numbering format: %s"
.text:004022CD                 jmp     loc_4021A0
.text:004022D2 ; ---------------------------------------------------------------------------
.text:004022D2
.text:004022D2 loc_4022D2:                             ; CODE XREF: sub_401E90+3B7↑j
.text:004022D2                 mov     [esp+38h+Str], offset Locale ; char *
.text:004022DA                 mov     ebx, ds:dword_411410
.text:004022E0                 mov     dword ptr [esp+38h+var_2C], offset dword_410040 ; int
.text:004022E8                 mov     [esp+38h+Size], 0Ah ; int
.text:004022F0                 mov     [esp+38h+Locale], 0 ; int
.text:004022F8                 mov     [esp+38h+Category], ebx ; int
.text:004022FB                 call    sub_40B7E0
.text:00402300                 test    eax, eax
.text:00402302                 jnz     short loc_402324
.text:00402304                 mov     edx, dword_410044
.text:0040230A                 mov     eax, dword_410040
.text:0040230F                 test    edx, edx
.text:00402311                 js      short loc_402324
.text:00402313                 test    edx, edx
.text:00402315                 jg      loc_401F00
.text:0040231B                 cmp     eax, 0
.text:0040231E                 ja      loc_401F00
.text:00402324
.text:00402324 loc_402324:                             ; CODE XREF: sub_401E90+472↑j
.text:00402324                                         ; sub_401E90+481↑j
.text:00402324                 mov     esi, ds:dword_411410
.text:0040232A                 mov     [esp+38h+Category], esi ; char *
.text:0040232D                 call    sub_40C6E0
.text:00402332                 mov     [esp+38h+Category], offset aInvalidNumberO ; "invalid number of blank lines: %s"
.text:00402339                 jmp     loc_4021A0
.text:00402339 ; ---------------------------------------------------------------------------
.text:0040233E                 align 10h
.text:00402340
.text:00402340 loc_402340:                             ; CODE XREF: sub_401E90+3AE↑j
.text:00402340                 cmp     eax, 76h ; 'v'
.text:00402343                 jz      loc_4023CD
.text:00402349                 cmp     eax, 76h ; 'v'
.text:0040234C                 jg      short loc_402368
.text:0040234E                 cmp     eax, 73h ; 's'
.text:00402351                 jnz     loc_401F70
.text:00402357                 mov     edi, ds:dword_411410
.text:0040235D                 mov     Str, edi
.text:00402363                 jmp     loc_401F00
.text:00402368 ; ---------------------------------------------------------------------------
.text:00402368
.text:00402368 loc_402368:                             ; CODE XREF: sub_401E90+4BC↑j
.text:00402368                 cmp     eax, 77h ; 'w'
.text:0040236B                 jnz     loc_401F70
.text:00402371                 mov     [esp+38h+Str], offset Locale ; Str
.text:00402379                 mov     edx, ds:dword_411410
.text:0040237F                 lea     ecx, [ebp+var_10]
.text:00402382                 mov     dword ptr [esp+38h+var_2C], ecx ; int
.text:00402386                 mov     [esp+38h+Size], 0Ah ; int
.text:0040238E                 mov     [esp+38h+Locale], 0 ; char **
.text:00402396                 mov     [esp+38h+Category], edx ; char *
.text:00402399                 call    sub_40B100
.text:0040239E                 test    eax, eax
.text:004023A0                 jnz     short loc_4023B3
.text:004023A2                 mov     eax, [ebp+var_10]
.text:004023A5                 test    eax, eax
.text:004023A7                 jle     short loc_4023B3
.text:004023A9                 mov     dword_410048, eax
.text:004023AE                 jmp     loc_401F00
.text:004023B3 ; ---------------------------------------------------------------------------
.text:004023B3
.text:004023B3 loc_4023B3:                             ; CODE XREF: sub_401E90+510↑j
.text:004023B3                                         ; sub_401E90+517↑j
.text:004023B3                 mov     ebx, ds:dword_411410
.text:004023B9                 mov     [esp+38h+Category], ebx ; char *
.text:004023BC                 call    sub_40C6E0
.text:004023C1                 mov     [esp+38h+Category], offset aInvalidLineNum_0 ; "invalid line number field width: %s"
.text:004023C8                 jmp     loc_4021A0
.text:004023CD ; ---------------------------------------------------------------------------
.text:004023CD
.text:004023CD loc_4023CD:                             ; CODE XREF: sub_401E90+4B3↑j
.text:004023CD                 mov     [esp+38h+Str], offset Locale ; char *
.text:004023D5                 mov     esi, ds:dword_411410
.text:004023DB                 mov     dword ptr [esp+38h+var_2C], offset dword_410028 ; int
.text:004023E3                 mov     [esp+38h+Size], 0Ah ; int
.text:004023EB                 mov     [esp+38h+Locale], 0 ; int
.text:004023F3                 mov     [esp+38h+Category], esi ; int
.text:004023F6                 call    sub_40B7E0
.text:004023FB                 test    eax, eax
.text:004023FD                 jz      loc_401F00
.text:00402403                 mov     edi, ds:dword_411410
.text:00402409                 mov     [esp+38h+Category], edi ; char *
.text:0040240C                 call    sub_40C6E0
.text:00402411                 mov     [esp+38h+Category], offset aInvalidStartin ; "invalid starting line number: %s"
.text:00402418                 jmp     loc_4021A0
.text:00402418 ; ---------------------------------------------------------------------------
.text:0040241D                 align 10h
.text:00402420
.text:00402420 loc_402420:                             ; CODE XREF: sub_401E90+3A5↑j
.text:00402420                 mov     byte_410038, 0
.text:00402427                 jmp     loc_401F00
.text:00402427 ; ---------------------------------------------------------------------------
.text:0040242C                 align 10h
.text:00402430
.text:00402430 loc_402430:                             ; CODE XREF: sub_401E90+A6↑j
.text:00402430                 mov     [esp+38h+Str], offset Locale ; char *
.text:00402438                 mov     edx, ds:dword_411410
.text:0040243E                 mov     dword ptr [esp+38h+var_2C], offset dword_410030 ; int
.text:00402446                 mov     [esp+38h+Size], 0Ah ; int
.text:0040244E                 mov     [esp+38h+Locale], 0 ; int
.text:00402456                 mov     [esp+38h+Category], edx ; int
.text:00402459                 call    sub_40B7E0
.text:0040245E                 test    eax, eax
.text:00402460                 jnz     short loc_402482
.text:00402462                 mov     edx, dword_410034
.text:00402468                 mov     eax, dword_410030
.text:0040246D                 test    edx, edx
.text:0040246F                 js      short loc_402482
.text:00402471                 test    edx, edx
.text:00402473                 jg      loc_401F00
.text:00402479                 cmp     eax, 0
.text:0040247C                 ja      loc_401F00
.text:00402482
.text:00402482 loc_402482:                             ; CODE XREF: sub_401E90+5D0↑j
.text:00402482                                         ; sub_401E90+5DF↑j
.text:00402482                 mov     ecx, ds:dword_411410
.text:00402488                 mov     [esp+38h+Category], ecx ; char *
.text:0040248B                 call    sub_40C6E0
.text:00402490                 mov     [esp+38h+Category], offset aInvalidLineNum_1 ; "invalid line number increment: %s"
.text:00402497                 jmp     loc_4021A0
.text:0040249C ; ---------------------------------------------------------------------------
.text:0040249C
.text:0040249C loc_40249C:                             ; CODE XREF: sub_401E90+9D↑j
.text:0040249C                 cmp     [ebp+var_11], 0
.text:004024A0                 jnz     short loc_4024DA
.text:004024A2                 mov     [esp+38h+Category], offset aTrySHelpForMor ; "Try `%s --help' for more information.\n"
.text:004024A9                 call    ds:libintl_gettext
.text:004024AF                 mov     edi, ds:_iob
.text:004024B5                 mov     ecx, ds:dword_4113E0
.text:004024BB                 add     edi, 40h ; '@'
.text:004024BE                 mov     [esp+38h+Size], ecx
.text:004024C2                 mov     [esp+38h+Locale], eax ; Format
.text:004024C6                 mov     [esp+38h+Category], edi ; Stream
.text:004024C9                 call    fprintf
.text:004024CE                 mov     [esp+38h+Category], 1
.text:004024D5                 jmp     loc_4020EB
.text:004024DA ; ---------------------------------------------------------------------------
.text:004024DA
.text:004024DA loc_4024DA:                             ; CODE XREF: sub_401E90+610↑j
.text:004024DA                 mov     edi, Source
.text:004024E0                 mov     [esp+38h+Category], edi ; Str
.text:004024E3                 call    strlen
.text:004024E8                 lea     esi, [eax+eax]
.text:004024EB                 mov     edi, eax
.text:004024ED                 lea     edx, [eax+esi]
.text:004024F0                 mov     ds:dword_4110D0, edx
.text:004024F6                 inc     edx
.text:004024F7                 mov     [esp+38h+Category], edx ; size_t
.text:004024FA                 call    sub_40C9A0
.text:004024FF                 mov     ds:dword_411010, eax
.text:00402504                 mov     ecx, Source
.text:0040250A                 mov     [esp+38h+Category], eax ; Destination
.text:0040250D                 mov     [esp+38h+Locale], ecx ; Source
.text:00402511                 call    strcpy
.text:00402516                 mov     [esp+38h+Category], eax ; Destination
.text:00402519                 mov     ebx, Source
.text:0040251F                 mov     [esp+38h+Locale], ebx ; Source
.text:00402523                 call    strcat
.text:00402528                 mov     [esp+38h+Category], eax ; Destination
.text:0040252B                 mov     ecx, Source
.text:00402531                 mov     [esp+38h+Locale], ecx ; Source
.text:00402535                 call    strcat
.text:0040253A                 mov     ds:dword_4110E0, esi
.text:00402540                 inc     esi
.text:00402541                 mov     [esp+38h+Category], esi ; size_t
.text:00402544                 call    sub_40C9A0
.text:00402549                 mov     ds:dword_411020, eax
.text:0040254E                 mov     esi, Source
.text:00402554                 mov     [esp+38h+Category], eax ; Destination
.text:00402557                 mov     [esp+38h+Locale], esi ; Source
.text:0040255B                 call    strcpy
.text:00402560                 mov     [esp+38h+Category], eax ; Destination
.text:00402563                 mov     ebx, Source
.text:00402569                 mov     [esp+38h+Locale], ebx ; Source
.text:0040256D                 call    strcat
.text:00402572                 mov     ds:dword_4110F0, edi
.text:00402578                 lea     ecx, [edi+1]
.text:0040257B                 mov     [esp+38h+Category], ecx ; size_t
.text:0040257E                 call    sub_40C9A0
.text:00402583                 mov     ds:dword_411030, eax
.text:00402588                 mov     esi, Source
.text:0040258E                 mov     [esp+38h+Category], eax ; Destination
.text:00402591                 mov     [esp+38h+Locale], esi ; Source
.text:00402595                 call    strcpy
.text:0040259A                 mov     [esp+38h+Category], offset unk_411100
.text:004025A1                 call    sub_40AB60
.text:004025A6                 mov     edi, Str
.text:004025AC                 mov     [esp+38h+Category], edi ; Str
.text:004025AF                 call    strlen
.text:004025B4                 mov     edx, dword_410048
.text:004025BA                 mov     esi, eax
.text:004025BC                 add     edx, eax
.text:004025BE                 inc     edx
.text:004025BF                 mov     [esp+38h+Category], edx ; size_t
.text:004025C2                 call    sub_40C9A0
.text:004025C7                 mov     ds:dword_411040, eax
.text:004025CC                 mov     ebx, dword_410048
.text:004025D2                 mov     [esp+38h+Locale], 20h ; ' ' ; Val
.text:004025DA                 mov     [esp+38h+Category], eax ; void *
.text:004025DD                 add     ebx, esi
.text:004025DF                 mov     [esp+38h+Size], ebx ; Size
.text:004025E3                 mov     ebx, offset unk_411070
.text:004025E8                 call    memset
.text:004025ED                 mov     eax, dword_410048
.text:004025F2                 mov     ecx, ds:dword_411040
.text:004025F8                 add     esi, eax
.text:004025FA                 mov     byte ptr [esi+ecx], 0
.text:004025FE                 mov     eax, dword_410060
.text:00402603                 mov     ds:dword_411000, ebx
.text:00402609                 mov     edi, dword_410028
.text:0040260F                 mov     esi, dword_41002C
.text:00402615                 cmp     eax, [ebp+arg_0]
.text:00402618                 mov     edx, off_410010 ; "tn\t"
.text:0040261E                 mov     ds:dword_411110, edi
.text:00402624                 mov     ds:dword_411114, esi
.text:0040262A                 mov     ds:dword_411060, edx
.text:00402630                 jz      loc_4026B8
.text:00402636                 cmp     eax, [ebp+arg_0]
.text:00402639                 jl      short loc_402687
.text:0040263B
.text:0040263B loc_40263B:                             ; CODE XREF: sub_401E90+826↓j
.text:0040263B                                         ; sub_401E90+837↓j
.text:0040263B                 cmp     ds:byte_411120, 0
.text:00402642                 jnz     short loc_402655
.text:00402644
.text:00402644 loc_402644:                             ; CODE XREF: sub_401E90+7D4↓j
.text:00402644                                         ; sub_401E90+7F5↓j
.text:00402644                 xor     ecx, ecx
.text:00402646                 cmp     [ebp+var_11], 0
.text:0040264A                 setz    cl
.text:0040264D                 mov     [esp+38h+Category], ecx
.text:00402650                 jmp     loc_4020EB
.text:00402655 ; ---------------------------------------------------------------------------
.text:00402655
.text:00402655 loc_402655:                             ; CODE XREF: sub_401E90+7B2↑j
.text:00402655                 mov     ebx, ds:_iob
.text:0040265B                 mov     [esp+38h+Category], ebx ; Stream
.text:0040265E                 call    fclose
.text:00402663                 inc     eax
.text:00402664                 jnz     short loc_402644
.text:00402666                 call    _errno
.text:0040266B                 mov     [esp+38h+Size], offset FileName ; "-"
.text:00402673                 mov     edx, [eax]
.text:00402675                 mov     [esp+38h+Category], 1 ; Code
.text:0040267C                 mov     [esp+38h+Locale], edx ; ErrorMessage
.text:00402680                 call    sub_40E080
.text:00402685                 jmp     short loc_402644
.text:00402687 ; ---------------------------------------------------------------------------
.text:00402687
.text:00402687 loc_402687:                             ; CODE XREF: sub_401E90+7A9↑j
.text:00402687                                         ; sub_401E90+824↓j
.text:00402687                 mov     ecx, [ebp+arg_4]
.text:0040268A                 xor     ebx, ebx
.text:0040268C                 mov     esi, [ecx+eax*4]
.text:0040268F                 mov     [esp+38h+Category], esi ; FileName
.text:00402692                 call    sub_402980
.text:00402697                 test    al, al
.text:00402699                 jz      short loc_4026A3
.text:0040269B                 cmp     [ebp+var_11], 0
.text:0040269F                 jz      short loc_4026A3
.text:004026A1                 mov     bl, 1
.text:004026A3
.text:004026A3 loc_4026A3:                             ; CODE XREF: sub_401E90+809↑j
.text:004026A3                                         ; sub_401E90+80F↑j
.text:004026A3                 mov     [ebp+var_11], bl
.text:004026A6                 mov     eax, dword_410060
.text:004026AB                 inc     eax
.text:004026AC                 cmp     eax, [ebp+arg_0]
.text:004026AF                 mov     dword_410060, eax
.text:004026B4                 jl      short loc_402687
.text:004026B6                 jmp     short loc_40263B
.text:004026B8 ; ---------------------------------------------------------------------------
.text:004026B8
.text:004026B8 loc_4026B8:                             ; CODE XREF: sub_401E90+7A0↑j
.text:004026B8                 mov     [esp+38h+Category], offset FileName ; "-"
.text:004026BF                 call    sub_402980
.text:004026C4                 mov     [ebp+var_11], al
.text:004026C7                 jmp     loc_40263B
.text:004026C7 sub_401E90      endp
.text:004026C7
.text:004026C7 ; ---------------------------------------------------------------------------
.text:004026CC                 align 10h
.text:004026D0                 push    ebx
.text:004026D1                 sub     esp, 18h
.text:004026D4                 mov     ebx, [esp+20h]
.text:004026D8                 test    ebx, ebx
.text:004026DA                 jz      short loc_402710
.text:004026DC                 mov     dword ptr [esp], offset aTrySHelpForMor ; "Try `%s --help' for more information.\n"
.text:004026E3                 call    ds:libintl_gettext
.text:004026E9                 mov     edx, ds:_iob
.text:004026EF                 mov     ecx, ds:dword_4113E0
.text:004026F5                 add     edx, 40h ; '@'
.text:004026F8                 mov     [esp+8], ecx
.text:004026FC                 mov     [esp+4], eax
.text:00402700                 mov     [esp], edx
.text:00402703                 call    fprintf
.text:00402708
.text:00402708 loc_402708:                             ; CODE XREF: .text:0040287E↓j
.text:00402708                 mov     [esp], ebx
.text:0040270B                 call    exit
.text:00402710 ; ---------------------------------------------------------------------------
.text:00402710
.text:00402710 loc_402710:                             ; CODE XREF: .text:004026DA↑j
.text:00402710                 mov     dword ptr [esp], offset aUsageSOptionFi ; "Usage: %s [OPTION]... [FILE]...\n"
.text:00402717                 call    ds:libintl_gettext
.text:0040271D                 mov     ecx, ds:dword_4113E0
.text:00402723                 mov     [esp], eax
.text:00402726                 mov     [esp+4], ecx
.text:0040272A                 call    printf
.text:0040272F                 mov     dword ptr [esp], offset aWriteEachFileT ; "Write each FILE to standard output, wit"...
.text:00402736                 call    ds:libintl_gettext
.text:0040273C                 mov     ecx, ds:_iob
.text:00402742                 add     ecx, 20h ; ' '
.text:00402745                 mov     [esp+4], ecx
.text:00402749                 mov     [esp], eax
.text:0040274C                 call    fputs
.text:00402751                 mov     dword ptr [esp], offset aMandatoryArgum ; "Mandatory arguments to long options are"...
.text:00402758                 call    ds:libintl_gettext
.text:0040275E                 mov     ecx, ds:_iob
.text:00402764                 add     ecx, 20h ; ' '
.text:00402767                 mov     [esp+4], ecx
.text:0040276B                 mov     [esp], eax
.text:0040276E                 call    fputs
.text:00402773                 mov     dword ptr [esp], offset aBBodyNumbering ; "  -b, --body-numbering=STYLE      use S"...
.text:0040277A                 call    ds:libintl_gettext
.text:00402780                 mov     ecx, ds:_iob
.text:00402786                 add     ecx, 20h ; ' '
.text:00402789                 mov     [esp+4], ecx
.text:0040278D                 mov     [esp], eax
.text:00402790                 call    fputs
.text:00402795                 mov     dword ptr [esp], offset aHHeaderNumberi ; "  -h, --header-numbering=STYLE    use S"...
.text:0040279C                 call    ds:libintl_gettext
.text:004027A2                 mov     ecx, ds:_iob
.text:004027A8                 add     ecx, 20h ; ' '
.text:004027AB                 mov     [esp+4], ecx
.text:004027AF                 mov     [esp], eax
.text:004027B2                 call    fputs
.text:004027B7                 mov     dword ptr [esp], offset aVFirstPageNumb ; "  -v, --first-page=NUMBER         first"...
.text:004027BE                 call    ds:libintl_gettext
.text:004027C4                 mov     ecx, ds:_iob
.text:004027CA                 add     ecx, 20h ; ' '
.text:004027CD                 mov     [esp+4], ecx
.text:004027D1                 mov     [esp], eax
.text:004027D4                 call    fputs
.text:004027D9                 mov     dword ptr [esp], offset aHelpDisplayThi ; "      --help     display this help and "...
.text:004027E0                 call    ds:libintl_gettext
.text:004027E6                 mov     ecx, ds:_iob
.text:004027EC                 add     ecx, 20h ; ' '
.text:004027EF                 mov     [esp+4], ecx
.text:004027F3                 mov     [esp], eax
.text:004027F6                 call    fputs
.text:004027FB                 mov     dword ptr [esp], offset aVersionOutputV ; "      --version  output version informa"...
.text:00402802                 call    ds:libintl_gettext
.text:00402808                 mov     ecx, ds:_iob
.text:0040280E                 add     ecx, 20h ; ' '
.text:00402811                 mov     [esp+4], ecx
.text:00402815                 mov     [esp], eax
.text:00402818                 call    fputs
.text:0040281D                 mov     dword ptr [esp], offset aByDefaultSelec ; "\nBy default, selects -v1 -i1 -l1 -sTAB"...
.text:00402824                 call    ds:libintl_gettext
.text:0040282A                 mov     ecx, ds:_iob
.text:00402830                 add     ecx, 20h ; ' '
.text:00402833                 mov     [esp+4], ecx
.text:00402837                 mov     [esp], eax
.text:0040283A                 call    fputs
.text:0040283F                 mov     dword ptr [esp], offset aANumberAllLine ; "\n  a         number all lines\n  t    "...
.text:00402846                 call    ds:libintl_gettext
.text:0040284C                 mov     ecx, ds:_iob
.text:00402852                 add     ecx, 20h ; ' '
.text:00402855                 mov     [esp+4], ecx
.text:00402859                 mov     [esp], eax
.text:0040285C                 call    fputs
.text:00402861                 mov     dword ptr [esp], offset aReportBugsToS ; "\nReport bugs to <%s>.\n"
.text:00402868                 call    ds:libintl_gettext
.text:0040286E                 mov     dword ptr [esp+4], offset aBugCoreutilsGn ; "bug-coreutils@gnu.org"
.text:00402876                 mov     [esp], eax
.text:00402879                 call    printf
.text:0040287E                 jmp     loc_402708
.text:0040287E ; ---------------------------------------------------------------------------
.text:00402883 ; const char byte_402883
.text:00402883 byte_402883     db 25h                  ; DATA XREF: sub_402890+BF↓o
.text:00402883                                         ; sub_402980:loc_402B5A↓o
.text:00402884 ; ---------------------------------------------------------------------------
.text:00402884                 jnb     short $+2
.text:00402886
.text:00402886 loc_402886:                             ; CODE XREF: .text:00402884↑j
.text:00402886                 lea     esi, [esi+0]
.text:00402889                 lea     edi, [edi+0]
.text:00402890
.text:00402890 ; =============== S U B R O U T I N E =======================================
.text:00402890
.text:00402890
.text:00402890 sub_402890      proc near               ; CODE XREF: sub_401E90+2E3↑p
.text:00402890                                         ; sub_401E90+348↑p ...
.text:00402890
.text:00402890 Str             = dword ptr -1Ch
.text:00402890 ErrorMessage    = dword ptr -18h
.text:00402890 var_14          = dword ptr -14h
.text:00402890 var_10          = byte ptr -10h
.text:00402890 var_C           = dword ptr -0Ch
.text:00402890 var_8           = dword ptr -8
.text:00402890 var_4           = dword ptr -4
.text:00402890 arg_0           = dword ptr  4
.text:00402890 arg_4           = dword ptr  8
.text:00402890
.text:00402890                 sub     esp, 1Ch
.text:00402893                 mov     edx, ds:dword_411410
.text:00402899                 mov     [esp+1Ch+var_C], ebx
.text:0040289D                 mov     ecx, [esp+1Ch+arg_0]
.text:004028A1                 mov     bl, 1
.text:004028A3                 mov     [esp+1Ch+var_8], esi
.text:004028A7                 mov     esi, [esp+1Ch+arg_4]
.text:004028AB                 mov     [esp+1Ch+var_4], edi
.text:004028AF                 movsx   eax, byte ptr [edx]
.text:004028B2                 cmp     eax, 6Eh ; 'n'
.text:004028B5                 jz      short loc_4028D6
.text:004028B7                 cmp     eax, 6Eh ; 'n'
.text:004028BA                 jg      short loc_4028E0
.text:004028BC                 cmp     eax, 61h ; 'a'
.text:004028BF
.text:004028BF loc_4028BF:                             ; CODE XREF: sub_402890+58↓j
.text:004028BF                 jz      short loc_4028D6
.text:004028C1                 xor     ebx, ebx
.text:004028C3
.text:004028C3 loc_4028C3:                             ; CODE XREF: sub_402890+48↓j
.text:004028C3                                         ; sub_402890+B5↓j ...
.text:004028C3                 movzx   eax, bl
.text:004028C6                 mov     esi, [esp+1Ch+var_8]
.text:004028CA                 mov     ebx, [esp+1Ch+var_C]
.text:004028CE                 mov     edi, [esp+1Ch+var_4]
.text:004028D2                 add     esp, 1Ch
.text:004028D5                 retn
.text:004028D6 ; ---------------------------------------------------------------------------
.text:004028D6
.text:004028D6 loc_4028D6:                             ; CODE XREF: sub_402890+25↑j
.text:004028D6                                         ; sub_402890:loc_4028BF↑j
.text:004028D6                 mov     [ecx], edx
.text:004028D8                 jmp     short loc_4028C3
.text:004028D8 ; ---------------------------------------------------------------------------
.text:004028DA                 align 10h
.text:004028E0
.text:004028E0 loc_4028E0:                             ; CODE XREF: sub_402890+2A↑j
.text:004028E0                 cmp     eax, 70h ; 'p'
.text:004028E3                 jz      short loc_4028EA
.text:004028E5                 cmp     eax, 74h ; 't'
.text:004028E8                 jmp     short loc_4028BF
.text:004028EA ; ---------------------------------------------------------------------------
.text:004028EA
.text:004028EA loc_4028EA:                             ; CODE XREF: sub_402890+53↑j
.text:004028EA                 mov     [ecx], edx
.text:004028EC                 mov     ecx, ds:dword_411410
.text:004028F2                 inc     ecx
.text:004028F3                 mov     ds:dword_411410, ecx
.text:004028F9                 mov     [esp+1Ch+Str], ecx ; Str
.text:004028FC                 call    strlen
.text:00402901                 lea     edx, [eax+eax]
.text:00402904                 mov     edi, eax
.text:00402906                 mov     [esi+4], edx
.text:00402909                 mov     [esp+1Ch+Str], edx ; size_t
.text:0040290C                 call    sub_40C9A0
.text:00402911                 mov     [esi], eax
.text:00402913                 mov     dword ptr [esi+14h], 0
.text:0040291A                 mov     [esp+1Ch+Str], 100h ; size_t
.text:00402921                 call    sub_40C9A0
.text:00402926                 and     byte ptr [esi+1Ch], 0F7h
.text:0040292A                 mov     [esi+10h], eax
.text:0040292D                 mov     [esp+1Ch+var_14], esi
.text:00402931                 mov     edx, ds:dword_411410
.text:00402937                 mov     [esp+1Ch+ErrorMessage], edi
.text:0040293B                 mov     [esp+1Ch+Str], edx
.text:0040293E                 call    sub_405F00
.text:00402943                 test    eax, eax
.text:00402945                 jz      loc_4028C3
.text:0040294B                 mov     dword ptr [esp+1Ch+var_10], eax ; char
.text:0040294F                 mov     [esp+1Ch+var_14], offset byte_402883 ; char *
.text:00402957                 mov     [esp+1Ch+ErrorMessage], 0 ; ErrorMessage
.text:0040295F                 mov     [esp+1Ch+Str], 1 ; Code
.text:00402966                 call    sub_40E080
.text:0040296B                 jmp     loc_4028C3
.text:0040296B sub_402890      endp
.text:0040296B
.text:00402970
.text:00402970 ; =============== S U B R O U T I N E =======================================
.text:00402970
.text:00402970
.text:00402970 sub_402970      proc near               ; DATA XREF: sub_402980:loc_402B87↓o
.text:00402970                 jb      short $+2
.text:00402972
.text:00402972 loc_402972:                             ; CODE XREF: sub_402970↑j
.text:00402972                 lea     esi, [esi+0]
.text:00402979                 lea     edi, [edi+0]
.text:00402979 sub_402970      endp
.text:00402979
.text:00402980
.text:00402980 ; =============== S U B R O U T I N E =======================================
.text:00402980
.text:00402980
.text:00402980 ; int __cdecl sub_402980(char *FileName)
.text:00402980 sub_402980      proc near               ; CODE XREF: sub_401E90+802↑p
.text:00402980                                         ; sub_401E90+82F↑p
.text:00402980
.text:00402980 Stream          = dword ptr -2Ch
.text:00402980 File            = dword ptr -28h
.text:00402980 var_24          = dword ptr -24h
.text:00402980 var_20          = byte ptr -20h
.text:00402980 var_14          = dword ptr -14h
.text:00402980 FileName        = dword ptr  4
.text:00402980
.text:00402980                 push    ebp
.text:00402981                 mov     ecx, 2
.text:00402986                 push    edi
.text:00402987                 mov     edi, offset FileName ; "-"
.text:0040298C                 push    esi
.text:0040298D                 push    ebx
.text:0040298E                 sub     esp, 1Ch
.text:00402991                 mov     esi, [esp+2Ch+FileName]
.text:00402995                 cld
.text:00402996                 repe cmpsb
.text:00402998                 jnz     loc_402B87
.text:0040299E                 mov     ds:byte_411120, 1
.text:004029A5                 mov     ebp, ds:_iob
.text:004029AB                 nop
.text:004029AC                 lea     esi, [esi+0]
.text:004029B0
.text:004029B0 loc_4029B0:                             ; CODE XREF: sub_402980+A5↓j
.text:004029B0                                         ; sub_402980+EE↓j ...
.text:004029B0                 mov     [esp+2Ch+File], ebp
.text:004029B4                 mov     [esp+2Ch+Stream], offset unk_411100
.text:004029BB                 call    sub_40AAA0
.text:004029C0                 test    eax, eax
.text:004029C2                 jz      loc_402B14
.text:004029C8                 mov     eax, ds:ElementCount
.text:004029CD                 dec     eax
.text:004029CE                 cmp     eax, 1
.text:004029D1                 mov     [esp+2Ch+var_14], eax
.text:004029D5                 jbe     short loc_402A20
.text:004029D7                 cld
.text:004029D8                 mov     ebx, ds:Buffer
.text:004029DE                 mov     eax, 2
.text:004029E3                 mov     edi, Source
.text:004029E9                 mov     ecx, eax
.text:004029EB                 mov     esi, ebx
.text:004029ED                 repe cmpsb
.text:004029EF                 jnz     short loc_402A20
.text:004029F1                 mov     eax, [esp+2Ch+var_14]
.text:004029F5                 cmp     eax, ds:dword_4110D0
.text:004029FB                 jz      loc_402ABF
.text:00402A01
.text:00402A01 loc_402A01:                             ; CODE XREF: sub_402980+14D↓j
.text:00402A01                 mov     eax, [esp+2Ch+var_14]
.text:00402A05                 cmp     eax, ds:dword_4110E0
.text:00402A0B                 jz      loc_402A91
.text:00402A11
.text:00402A11 loc_402A11:                             ; CODE XREF: sub_402980+120↓j
.text:00402A11                 mov     eax, [esp+2Ch+var_14]
.text:00402A15                 cmp     eax, ds:dword_4110F0
.text:00402A1B                 jz      short loc_402A27
.text:00402A1D                 lea     esi, [esi+0]
.text:00402A20
.text:00402A20 loc_402A20:                             ; CODE XREF: sub_402980+55↑j
.text:00402A20                                         ; sub_402980+6F↑j ...
.text:00402A20                 call    sub_402BC0
.text:00402A25                 jmp     short loc_4029B0
.text:00402A27 ; ---------------------------------------------------------------------------
.text:00402A27
.text:00402A27 loc_402A27:                             ; CODE XREF: sub_402980+9B↑j
.text:00402A27                 cld
.text:00402A28                 mov     edi, ds:dword_411030
.text:00402A2E                 cmp     eax, eax
.text:00402A30                 mov     esi, ebx
.text:00402A32                 mov     ecx, eax
.text:00402A34                 repe cmpsb
.text:00402A36                 jnz     short loc_402A20
.text:00402A38                 mov     ecx, off_410018 ; "n\t"
.text:00402A3E                 mov     eax, offset unk_4110B0
.text:00402A43                 mov     ds:dword_411000, eax
.text:00402A48                 mov     ds:dword_411060, ecx
.text:00402A4E
.text:00402A4E loc_402A4E:                             ; CODE XREF: sub_402980+13D↓j
.text:00402A4E                                         ; sub_402980+171↓j ...
.text:00402A4E                 mov     esi, ds:_iob
.text:00402A54                 mov     ebx, [esi+24h]
.text:00402A57                 dec     ebx
.text:00402A58                 mov     [esi+24h], ebx
.text:00402A5B                 test    ebx, ebx
.text:00402A5D                 js      short loc_402A73
.text:00402A5F                 mov     edi, ds:_iob
.text:00402A65                 mov     eax, [edi+20h]
.text:00402A68                 mov     byte ptr [eax], 0Ah
.text:00402A6B                 inc     dword ptr [edi+20h]
.text:00402A6E                 jmp     loc_4029B0
.text:00402A73 ; ---------------------------------------------------------------------------
.text:00402A73
.text:00402A73 loc_402A73:                             ; CODE XREF: sub_402980+DD↑j
.text:00402A73                 mov     [esp+2Ch+Stream], 0Ah ; Ch
.text:00402A7A                 mov     edx, ds:_iob
.text:00402A80                 add     edx, 20h ; ' '
.text:00402A83                 mov     [esp+2Ch+File], edx ; File
.text:00402A87                 call    _flsbuf
.text:00402A8C                 jmp     loc_4029B0
.text:00402A91 ; ---------------------------------------------------------------------------
.text:00402A91
.text:00402A91 loc_402A91:                             ; CODE XREF: sub_402980+8B↑j
.text:00402A91                 cld
.text:00402A92                 mov     edi, ds:dword_411020
.text:00402A98                 cmp     eax, eax
.text:00402A9A                 mov     esi, ebx
.text:00402A9C                 mov     ecx, eax
.text:00402A9E                 repe cmpsb
.text:00402AA0                 jnz     loc_402A11
.text:00402AA6                 mov     edx, off_410010 ; "tn\t"
.text:00402AAC                 mov     edi, offset unk_411070
.text:00402AB1                 mov     ds:dword_411000, edi
.text:00402AB7                 mov     ds:dword_411060, edx
.text:00402ABD                 jmp     short loc_402A4E
.text:00402ABF ; ---------------------------------------------------------------------------
.text:00402ABF
.text:00402ABF loc_402ABF:                             ; CODE XREF: sub_402980+7B↑j
.text:00402ABF                 mov     edi, ds:dword_411010
.text:00402AC5                 cmp     eax, eax
.text:00402AC7                 mov     esi, ebx
.text:00402AC9                 mov     ecx, eax
.text:00402ACB                 repe cmpsb
.text:00402ACD                 jnz     loc_402A01
.text:00402AD3                 cmp     byte_410038, 0
.text:00402ADA                 mov     edx, offset unk_411090
.text:00402ADF                 mov     ecx, off_410014 ; "n\t"
.text:00402AE5                 mov     ds:dword_411000, edx
.text:00402AEB                 mov     ds:dword_411060, ecx
.text:00402AF1                 jz      loc_402A4E
.text:00402AF7                 mov     esi, dword_410028
.text:00402AFD                 mov     ebx, dword_41002C
.text:00402B03                 mov     ds:dword_411110, esi
.text:00402B09                 mov     ds:dword_411114, ebx
.text:00402B0F                 jmp     loc_402A4E
.text:00402B14 ; ---------------------------------------------------------------------------
.text:00402B14
.text:00402B14 loc_402B14:                             ; CODE XREF: sub_402980+42↑j
.text:00402B14                 test    byte ptr [ebp+0Ch], 20h
.text:00402B18                 jnz     short loc_402B78
.text:00402B1A                 cld
.text:00402B1B                 mov     esi, [esp+2Ch+FileName]
.text:00402B1F                 mov     ecx, 2
.text:00402B24                 mov     edi, offset FileName ; "-"
.text:00402B29                 repe cmpsb
.text:00402B2B                 jnz     short loc_402B42
.text:00402B2D                 mov     [esp+2Ch+Stream], ebp ; Stream
.text:00402B30                 call    clearerr
.text:00402B35
.text:00402B35 loc_402B35:                             ; CODE XREF: sub_402980+1CB↓j
.text:00402B35                 mov     eax, 1
.text:00402B3A
.text:00402B3A loc_402B3A:                             ; CODE XREF: sub_402980+1F6↓j
.text:00402B3A                 add     esp, 1Ch
.text:00402B3D                 pop     ebx
.text:00402B3E                 pop     esi
.text:00402B3F                 pop     edi
.text:00402B40                 pop     ebp
.text:00402B41                 retn
.text:00402B42 ; ---------------------------------------------------------------------------
.text:00402B42
.text:00402B42 loc_402B42:                             ; CODE XREF: sub_402980+1AB↑j
.text:00402B42                 mov     [esp+2Ch+Stream], ebp ; Stream
.text:00402B45                 call    fclose
.text:00402B4A                 inc     eax
.text:00402B4B                 jnz     short loc_402B35
.text:00402B4D                 call    _errno
.text:00402B52                 mov     ebx, [esp+2Ch+FileName]
.text:00402B56                 mov     dword ptr [esp+2Ch+var_20], ebx ; char
.text:00402B5A
.text:00402B5A loc_402B5A:                             ; CODE XREF: sub_402980+205↓j
.text:00402B5A                 mov     [esp+2Ch+var_24], offset byte_402883 ; char *
.text:00402B62                 mov     ecx, [eax]
.text:00402B64                 mov     [esp+2Ch+Stream], 0 ; Code
.text:00402B6B                 mov     [esp+2Ch+File], ecx ; ErrorMessage
.text:00402B6F                 call    sub_40E080
.text:00402B74                 xor     eax, eax
.text:00402B76                 jmp     short loc_402B3A
.text:00402B78 ; ---------------------------------------------------------------------------
.text:00402B78
.text:00402B78 loc_402B78:                             ; CODE XREF: sub_402980+198↑j
.text:00402B78                                         ; sub_402980+225↓j
.text:00402B78                 call    _errno
.text:00402B7D                 mov     ebp, [esp+2Ch+FileName]
.text:00402B81                 mov     dword ptr [esp+2Ch+var_20], ebp
.text:00402B85                 jmp     short loc_402B5A
.text:00402B87 ; ---------------------------------------------------------------------------
.text:00402B87
.text:00402B87 loc_402B87:                             ; CODE XREF: sub_402980+18↑j
.text:00402B87                 mov     [esp+2Ch+File], offset sub_402970 ; Mode
.text:00402B8F                 mov     edx, [esp+2Ch+FileName]
.text:00402B93                 mov     [esp+2Ch+Stream], edx ; FileName
.text:00402B96                 call    fopen
.text:00402B9B                 test    eax, eax
.text:00402B9D                 mov     ebp, eax
.text:00402B9F                 jnz     loc_4029B0
.text:00402BA5                 jmp     short loc_402B78
.text:00402BA5 sub_402980      endp
.text:00402BA5
.text:00402BA5 ; ---------------------------------------------------------------------------
.text:00402BA7 aLineNumberOver db 'line number overflow',0
.text:00402BA7                                         ; DATA XREF: sub_402BC0:loc_402CDA↓o
.text:00402BA7                                         ; sub_402BC0:loc_402DAB↓o
.text:00402BBC                 align 10h
.text:00402BC0
.text:00402BC0 ; =============== S U B R O U T I N E =======================================
.text:00402BC0
.text:00402BC0
.text:00402BC0 sub_402BC0      proc near               ; CODE XREF: sub_402980:loc_402A20↑p
.text:00402BC0
.text:00402BC0 Buffer          = dword ptr -2Ch
.text:00402BC0 ElementSize     = dword ptr -28h
.text:00402BC0 ElementCount    = dword ptr -24h
.text:00402BC0 Stream          = dword ptr -20h
.text:00402BC0 var_1C          = dword ptr -1Ch
.text:00402BC0 var_18          = dword ptr -18h
.text:00402BC0 var_8           = dword ptr -8
.text:00402BC0 var_4           = dword ptr -4
.text:00402BC0
.text:00402BC0                 sub     esp, 2Ch
.text:00402BC3                 mov     edx, ds:dword_411060
.text:00402BC9                 mov     [esp+2Ch+var_8], ebx
.text:00402BCD                 mov     [esp+2Ch+var_4], esi
.text:00402BD1                 movsx   eax, byte ptr [edx]
.text:00402BD4                 cmp     eax, 6Eh ; 'n'
.text:00402BD7                 jz      loc_402D20
.text:00402BDD                 cmp     eax, 6Eh ; 'n'
.text:00402BE0                 jg      loc_402DE1
.text:00402BE6                 cmp     eax, 61h ; 'a'
.text:00402BE9                 jz      short loc_402C30
.text:00402BEB                 nop
.text:00402BEC                 lea     esi, [esi+0]
.text:00402BF0
.text:00402BF0 loc_402BF0:                             ; CODE XREF: sub_402BC0+15B↓j
.text:00402BF0                                         ; sub_402BC0+17B↓j ...
.text:00402BF0                 mov     [esp+2Ch+ElementSize], 1 ; ElementSize
.text:00402BF8                 mov     ecx, ds:_iob
.text:00402BFE                 mov     esi, ds:ElementCount
.text:00402C04                 mov     ebx, ds:Buffer
.text:00402C0A                 add     ecx, 20h ; ' '
.text:00402C0D                 mov     [esp+2Ch+ElementCount], esi ; ElementCount
.text:00402C11                 mov     [esp+2Ch+Buffer], ebx ; Buffer
.text:00402C14                 mov     [esp+2Ch+Stream], ecx ; Stream
.text:00402C18                 call    fwrite
.text:00402C1D                 mov     ebx, [esp+2Ch+var_8]
.text:00402C21                 mov     esi, [esp+2Ch+var_4]
.text:00402C25                 add     esp, 2Ch
.text:00402C28                 retn
.text:00402C28 ; ---------------------------------------------------------------------------
.text:00402C29                 align 10h
.text:00402C30
.text:00402C30 loc_402C30:                             ; CODE XREF: sub_402BC0+29↑j
.text:00402C30                 mov     esi, dword_410044
.text:00402C36                 mov     ebx, dword_410040
.text:00402C3C                 test    esi, esi
.text:00402C3E                 js      loc_402D50
.text:00402C44                 test    esi, esi
.text:00402C46                 jle     loc_402D40
.text:00402C4C
.text:00402C4C loc_402C4C:                             ; CODE XREF: sub_402BC0+183↓j
.text:00402C4C                 cmp     ds:ElementCount, 1
.text:00402C53                 ja      short loc_402C7F
.text:00402C55                 mov     eax, ds:dword_411050
.text:00402C5A                 mov     edx, ds:dword_411054
.text:00402C60                 add     eax, 1
.text:00402C63                 adc     edx, 0
.text:00402C66                 mov     ecx, edx
.text:00402C68                 xor     ecx, esi
.text:00402C6A                 mov     ds:dword_411050, eax
.text:00402C6F                 xor     eax, ebx
.text:00402C71                 or      ecx, eax
.text:00402C73                 mov     ds:dword_411054, edx
.text:00402C79                 jnz     loc_402D20
.text:00402C7F
.text:00402C7F loc_402C7F:                             ; CODE XREF: sub_402BC0+93↑j
.text:00402C7F                 mov     edx, Str
.text:00402C85                 mov     ecx, ds:dword_411110
.text:00402C8B                 mov     esi, ds:dword_411114
.text:00402C91                 mov     [esp+2Ch+var_1C], edx
.text:00402C95                 mov     ebx, dword_410048
.text:00402C9B                 mov     edx, Format
.text:00402CA1                 mov     [esp+2Ch+ElementCount], ecx
.text:00402CA5                 mov     [esp+2Ch+Stream], esi ; char
.text:00402CA9                 mov     [esp+2Ch+ElementSize], ebx
.text:00402CAD                 mov     [esp+2Ch+Buffer], edx ; Format
.text:00402CB0                 call    printf
.text:00402CB5                 mov     eax, ds:dword_411110
.text:00402CBA                 mov     ecx, ds:dword_411114
.text:00402CC0                 mov     ebx, eax
.text:00402CC2                 add     ebx, dword_410030
.text:00402CC8                 mov     esi, ecx
.text:00402CCA                 adc     esi, dword_410034
.text:00402CD0                 cmp     esi, ecx
.text:00402CD2                 jg      short loc_402CFF
.text:00402CD4                 jl      short loc_402CDA
.text:00402CD6                 cmp     ebx, eax
.text:00402CD8                 jnb     short loc_402CFF
.text:00402CDA
.text:00402CDA loc_402CDA:                             ; CODE XREF: sub_402BC0+114↑j
.text:00402CDA                 mov     [esp+2Ch+Buffer], offset aLineNumberOver ; "line number overflow"
.text:00402CE1                 call    ds:libintl_gettext
.text:00402CE7                 mov     [esp+2Ch+ElementSize], 0 ; ErrorMessage
.text:00402CEF                 mov     [esp+2Ch+Buffer], 1 ; Code
.text:00402CF6                 mov     [esp+2Ch+ElementCount], eax ; char *
.text:00402CFA                 call    sub_40E080
.text:00402CFF
.text:00402CFF loc_402CFF:                             ; CODE XREF: sub_402BC0+112↑j
.text:00402CFF                                         ; sub_402BC0+118↑j
.text:00402CFF                 mov     ds:dword_411110, ebx
.text:00402D05                 xor     ebx, ebx
.text:00402D07                 mov     ds:dword_411114, esi
.text:00402D0D                 xor     esi, esi
.text:00402D0F                 mov     ds:dword_411050, esi
.text:00402D15                 mov     ds:dword_411054, ebx
.text:00402D1B                 jmp     loc_402BF0
.text:00402D20 ; ---------------------------------------------------------------------------
.text:00402D20
.text:00402D20 loc_402D20:                             ; CODE XREF: sub_402BC0+17↑j
.text:00402D20                                         ; sub_402BC0+B9↑j ...
.text:00402D20                 mov     ecx, ds:_iob
.text:00402D26                 mov     esi, ds:dword_411040
.text:00402D2C                 add     ecx, 20h ; ' '
.text:00402D2F                 mov     [esp+2Ch+ElementSize], ecx ; Stream
.text:00402D33                 mov     [esp+2Ch+Buffer], esi ; Buffer
.text:00402D36                 call    fputs
.text:00402D3B                 jmp     loc_402BF0
.text:00402D40 ; ---------------------------------------------------------------------------
.text:00402D40
.text:00402D40 loc_402D40:                             ; CODE XREF: sub_402BC0+86↑j
.text:00402D40                 cmp     ebx, 1
.text:00402D43                 ja      loc_402C4C
.text:00402D49                 lea     esi, [esi+0]
.text:00402D50
.text:00402D50 loc_402D50:                             ; CODE XREF: sub_402BC0+7E↑j
.text:00402D50                                         ; sub_402BC0+23C↓j ...
.text:00402D50                 mov     edx, Str
.text:00402D56                 mov     ecx, ds:dword_411110
.text:00402D5C                 mov     esi, ds:dword_411114
.text:00402D62                 mov     [esp+2Ch+var_1C], edx
.text:00402D66                 mov     ebx, dword_410048
.text:00402D6C                 mov     edx, Format
.text:00402D72                 mov     [esp+2Ch+ElementCount], ecx
.text:00402D76                 mov     [esp+2Ch+Stream], esi ; char
.text:00402D7A                 mov     [esp+2Ch+ElementSize], ebx
.text:00402D7E                 mov     [esp+2Ch+Buffer], edx ; Format
.text:00402D81                 call    printf
.text:00402D86                 mov     eax, ds:dword_411110
.text:00402D8B                 mov     ecx, ds:dword_411114
.text:00402D91                 mov     ebx, eax
.text:00402D93                 add     ebx, dword_410030
.text:00402D99                 mov     esi, ecx
.text:00402D9B                 adc     esi, dword_410034
.text:00402DA1                 cmp     esi, ecx
.text:00402DA3                 jg      short loc_402DD0
.text:00402DA5                 jl      short loc_402DAB
.text:00402DA7                 cmp     ebx, eax
.text:00402DA9                 jnb     short loc_402DD0
.text:00402DAB
.text:00402DAB loc_402DAB:                             ; CODE XREF: sub_402BC0+1E5↑j
.text:00402DAB                 mov     [esp+2Ch+Buffer], offset aLineNumberOver ; "line number overflow"
.text:00402DB2                 call    ds:libintl_gettext
.text:00402DB8                 mov     [esp+2Ch+ElementSize], 0 ; ErrorMessage
.text:00402DC0                 mov     [esp+2Ch+Buffer], 1 ; Code
.text:00402DC7                 mov     [esp+2Ch+ElementCount], eax ; char *
.text:00402DCB                 call    sub_40E080
.text:00402DD0
.text:00402DD0 loc_402DD0:                             ; CODE XREF: sub_402BC0+1E3↑j
.text:00402DD0                                         ; sub_402BC0+1E9↑j
.text:00402DD0                 mov     ds:dword_411110, ebx
.text:00402DD6                 mov     ds:dword_411114, esi
.text:00402DDC                 jmp     loc_402BF0
.text:00402DE1 ; ---------------------------------------------------------------------------
.text:00402DE1
.text:00402DE1 loc_402DE1:                             ; CODE XREF: sub_402BC0+20↑j
.text:00402DE1                 cmp     eax, 70h ; 'p'
.text:00402DE4                 jz      short loc_402E01
.text:00402DE6                 cmp     eax, 74h ; 't'
.text:00402DE9                 jnz     loc_402BF0
.text:00402DEF                 cmp     ds:ElementCount, 1
.text:00402DF6                 jbe     loc_402D20
.text:00402DFC                 jmp     loc_402D50
.text:00402E01 ; ---------------------------------------------------------------------------
.text:00402E01
.text:00402E01 loc_402E01:                             ; CODE XREF: sub_402BC0+224↑j
.text:00402E01                 mov     [esp+2Ch+var_18], 0
.text:00402E09                 mov     ebx, ds:ElementCount
.text:00402E0F                 mov     edx, ds:Buffer
.text:00402E15                 mov     [esp+2Ch+Stream], 0
.text:00402E1D                 mov     ecx, ds:dword_411000
.text:00402E23                 dec     ebx
.text:00402E24                 mov     [esp+2Ch+var_1C], ebx
.text:00402E28                 mov     [esp+2Ch+ElementCount], ebx
.text:00402E2C                 mov     [esp+2Ch+ElementSize], edx
.text:00402E30                 mov     [esp+2Ch+Buffer], ecx
.text:00402E33                 call    sub_405E40
.text:00402E38                 test    eax, eax
.text:00402E3A                 jns     loc_402D50
.text:00402E40                 jmp     loc_402D20
.text:00402E40 sub_402BC0      endp
.text:00402E40
.text:00402E40 ; ---------------------------------------------------------------------------
.text:00402E45                 align 20h
.text:00402E60
.text:00402E60 ; =============== S U B R O U T I N E =======================================
.text:00402E60
.text:00402E60
.text:00402E60 sub_402E60      proc near               ; CODE XREF: sub_402EB0+3A↓j
.text:00402E60                                         ; sub_406090+46B↓p ...
.text:00402E60
.text:00402E60 arg_0           = dword ptr  4
.text:00402E60 arg_4           = dword ptr  8
.text:00402E60 arg_8           = dword ptr  0Ch
.text:00402E60
.text:00402E60                 mov     edx, [esp+arg_8]
.text:00402E64                 mov     ecx, [esp+arg_4]
.text:00402E68                 mov     eax, [esp+arg_0]
.text:00402E6C                 mov     [ecx+1], dl
.text:00402E6F                 sar     edx, 8
.text:00402E72                 mov     [ecx], al
.text:00402E74                 mov     [ecx+2], dl
.text:00402E77                 retn
.text:00402E77 sub_402E60      endp
.text:00402E77
.text:00402E77 ; ---------------------------------------------------------------------------
.text:00402E78                 align 10h
.text:00402E80
.text:00402E80 ; =============== S U B R O U T I N E =======================================
.text:00402E80
.text:00402E80
.text:00402E80 sub_402E80      proc near               ; CODE XREF: sub_402EF0+3F↓j
.text:00402E80                                         ; sub_406090+313B↓p
.text:00402E80
.text:00402E80 arg_0           = dword ptr  4
.text:00402E80 arg_4           = dword ptr  8
.text:00402E80 arg_8           = dword ptr  0Ch
.text:00402E80 arg_C           = dword ptr  10h
.text:00402E80
.text:00402E80                 push    ebx
.text:00402E81                 mov     edx, [esp+4+arg_8]
.text:00402E85                 mov     ebx, [esp+4+arg_C]
.text:00402E89                 mov     ecx, [esp+4+arg_4]
.text:00402E8D                 mov     eax, [esp+4+arg_0]
.text:00402E91                 mov     [ecx+1], dl
.text:00402E94                 sar     edx, 8
.text:00402E97                 mov     [ecx+3], bl
.text:00402E9A                 sar     ebx, 8
.text:00402E9D                 mov     [ecx], al
.text:00402E9F                 mov     [ecx+2], dl
.text:00402EA2                 mov     [ecx+4], bl
.text:00402EA5                 pop     ebx
.text:00402EA6                 retn
.text:00402EA6 sub_402E80      endp
.text:00402EA6
.text:00402EA6 ; ---------------------------------------------------------------------------
.text:00402EA7                 align 10h
.text:00402EB0
.text:00402EB0 ; =============== S U B R O U T I N E =======================================
.text:00402EB0
.text:00402EB0
.text:00402EB0 sub_402EB0      proc near               ; CODE XREF: sub_406090+967↓p
.text:00402EB0                                         ; sub_406090+137C↓p ...
.text:00402EB0
.text:00402EB0 arg_0           = dword ptr  4
.text:00402EB0 arg_4           = dword ptr  8
.text:00402EB0 arg_8           = dword ptr  0Ch
.text:00402EB0 arg_C           = dword ptr  10h
.text:00402EB0
.text:00402EB0                 push    edi
.text:00402EB1                 push    esi
.text:00402EB2                 push    ebx
.text:00402EB3                 mov     edx, [esp+0Ch+arg_C]
.text:00402EB7                 mov     ebx, [esp+0Ch+arg_4]
.text:00402EBB                 mov     edi, [esp+0Ch+arg_0]
.text:00402EBF                 mov     esi, [esp+0Ch+arg_8]
.text:00402EC3                 lea     ecx, [edx+3]
.text:00402EC6                 cmp     edx, ebx
.text:00402EC8                 jz      short loc_402EDB
.text:00402ECA                 lea     esi, [esi+0]
.text:00402ED0
.text:00402ED0 loc_402ED0:                             ; CODE XREF: sub_402EB0+29↓j
.text:00402ED0                 dec     edx
.text:00402ED1                 dec     ecx
.text:00402ED2                 cmp     edx, ebx
.text:00402ED4                 movzx   eax, byte ptr [edx]
.text:00402ED7                 mov     [ecx], al
.text:00402ED9                 jnz     short loc_402ED0
.text:00402EDB
.text:00402EDB loc_402EDB:                             ; CODE XREF: sub_402EB0+18↑j
.text:00402EDB                 mov     [esp+0Ch+arg_8], esi
.text:00402EDF                 mov     [esp+0Ch+arg_0], edi
.text:00402EE3                 mov     [esp+0Ch+arg_4], ebx
.text:00402EE7                 pop     ebx
.text:00402EE8                 pop     esi
.text:00402EE9                 pop     edi
.text:00402EEA                 jmp     sub_402E60
.text:00402EEA sub_402EB0      endp
.text:00402EEA
.text:00402EEA ; ---------------------------------------------------------------------------
.text:00402EEF                 align 10h
.text:00402EF0
.text:00402EF0 ; =============== S U B R O U T I N E =======================================
.text:00402EF0
.text:00402EF0
.text:00402EF0 sub_402EF0      proc near               ; CODE XREF: sub_406090+30CC↓p
.text:00402EF0                                         ; sub_406090+30F8↓p ...
.text:00402EF0
.text:00402EF0 arg_0           = dword ptr  4
.text:00402EF0 arg_4           = dword ptr  8
.text:00402EF0 arg_8           = dword ptr  0Ch
.text:00402EF0 arg_C           = dword ptr  10h
.text:00402EF0 arg_10          = dword ptr  14h
.text:00402EF0
.text:00402EF0                 push    ebp
.text:00402EF1                 push    edi
.text:00402EF2                 push    esi
.text:00402EF3                 push    ebx
.text:00402EF4                 mov     edx, [esp+10h+arg_10]
.text:00402EF8                 mov     ebx, [esp+10h+arg_4]
.text:00402EFC                 mov     ebp, [esp+10h+arg_0]
.text:00402F00                 mov     edi, [esp+10h+arg_8]
.text:00402F04                 lea     ecx, [edx+5]
.text:00402F07                 cmp     edx, ebx
.text:00402F09                 mov     esi, [esp+10h+arg_C]
.text:00402F0D                 jz      short loc_402F1B
.text:00402F0F                 nop
.text:00402F10
.text:00402F10 loc_402F10:                             ; CODE XREF: sub_402EF0+29↓j
.text:00402F10                 dec     edx
.text:00402F11                 dec     ecx
.text:00402F12                 cmp     edx, ebx
.text:00402F14                 movzx   eax, byte ptr [edx]
.text:00402F17                 mov     [ecx], al
.text:00402F19                 jnz     short loc_402F10
.text:00402F1B
.text:00402F1B loc_402F1B:                             ; CODE XREF: sub_402EF0+1D↑j
.text:00402F1B                 mov     [esp+10h+arg_C], esi
.text:00402F1F                 mov     [esp+10h+arg_8], edi
.text:00402F23                 mov     [esp+10h+arg_0], ebp
.text:00402F27                 mov     [esp+10h+arg_4], ebx
.text:00402F2B                 pop     ebx
.text:00402F2C                 pop     esi
.text:00402F2D                 pop     edi
.text:00402F2E                 pop     ebp
.text:00402F2F                 jmp     sub_402E80
.text:00402F2F sub_402EF0      endp
.text:00402F2F
.text:00402F2F ; ---------------------------------------------------------------------------
.text:00402F34                 align 10h
.text:00402F40
.text:00402F40 ; =============== S U B R O U T I N E =======================================
.text:00402F40
.text:00402F40
.text:00402F40 sub_402F40      proc near               ; CODE XREF: sub_406090+5C6↓p
.text:00402F40
.text:00402F40 arg_0           = dword ptr  4
.text:00402F40 arg_4           = dword ptr  8
.text:00402F40 arg_8           = dword ptr  0Ch
.text:00402F40
.text:00402F40                 push    ebx
.text:00402F41                 mov     edx, [esp+4+arg_4]
.text:00402F45                 xor     ebx, ebx
.text:00402F47                 mov     ecx, [esp+4+arg_8]
.text:00402F4B                 sub     edx, 2
.text:00402F4E                 cmp     edx, [esp+4+arg_0]
.text:00402F52                 jbe     short loc_402F5A
.text:00402F54                 cmp     byte ptr [edx-1], 5Ch ; '\'
.text:00402F58                 jz      short loc_402F92
.text:00402F5A
.text:00402F5A loc_402F5A:                             ; CODE XREF: sub_402F40+12↑j
.text:00402F5A                                         ; sub_402F40+54↓j
.text:00402F5A                 movzx   edx, byte ptr [edx]
.text:00402F5D                 xor     eax, eax
.text:00402F5F                 cmp     dl, 28h ; '('
.text:00402F62                 jz      short loc_402F87
.text:00402F64
.text:00402F64 loc_402F64:                             ; CODE XREF: sub_402F40+50↓j
.text:00402F64                 cmp     dl, 7Ch ; '|'
.text:00402F67                 jz      short loc_402F70
.text:00402F69
.text:00402F69 loc_402F69:                             ; CODE XREF: sub_402F40+3D↓j
.text:00402F69                                         ; sub_402F40+45↓j
.text:00402F69                 pop     ebx
.text:00402F6A                 retn
.text:00402F6A ; ---------------------------------------------------------------------------
.text:00402F6B                 align 10h
.text:00402F70
.text:00402F70 loc_402F70:                             ; CODE XREF: sub_402F40+27↑j
.text:00402F70                 and     ecx, 0FFFF8000h
.text:00402F76                 test    cx, cx
.text:00402F79                 jnz     short loc_402F80
.text:00402F7B                 test    bl, bl
.text:00402F7D                 jz      short loc_402F69
.text:00402F7F                 nop
.text:00402F80
.text:00402F80 loc_402F80:                             ; CODE XREF: sub_402F40+39↑j
.text:00402F80                                         ; sub_402F40+4A↓j ...
.text:00402F80                 mov     eax, 1
.text:00402F85                 jmp     short loc_402F69
.text:00402F87 ; ---------------------------------------------------------------------------
.text:00402F87
.text:00402F87 loc_402F87:                             ; CODE XREF: sub_402F40+22↑j
.text:00402F87                 test    ch, 20h
.text:00402F8A                 jnz     short loc_402F80
.text:00402F8C                 test    bl, bl
.text:00402F8E                 jnz     short loc_402F80
.text:00402F90                 jmp     short loc_402F64
.text:00402F92 ; ---------------------------------------------------------------------------
.text:00402F92
.text:00402F92 loc_402F92:                             ; CODE XREF: sub_402F40+18↑j
.text:00402F92                 mov     bl, 1
.text:00402F94                 jmp     short loc_402F5A
.text:00402F94 sub_402F40      endp
.text:00402F94
.text:00402F94 ; ---------------------------------------------------------------------------
.text:00402F96                 align 10h
.text:00402FA0
.text:00402FA0 ; =============== S U B R O U T I N E =======================================
.text:00402FA0
.text:00402FA0
.text:00402FA0 sub_402FA0      proc near               ; CODE XREF: sub_406090+B9A↓p
.text:00402FA0
.text:00402FA0 var_9           = byte ptr -9
.text:00402FA0 var_8           = dword ptr -8
.text:00402FA0 var_4           = dword ptr -4
.text:00402FA0 arg_0           = dword ptr  4
.text:00402FA0 arg_4           = dword ptr  8
.text:00402FA0 arg_8           = dword ptr  0Ch
.text:00402FA0
.text:00402FA0                 sub     esp, 0Ch
.text:00402FA3                 mov     edx, [esp+0Ch+arg_8]
.text:00402FA7                 mov     [esp+0Ch+var_4], esi
.text:00402FAB                 mov     esi, [esp+0Ch+arg_0]
.text:00402FAF                 mov     [esp+0Ch+var_8], ebx
.text:00402FB3                 lea     eax, [esi+1]
.text:00402FB6                 movzx   ebx, byte ptr [esi]
.text:00402FB9                 cmp     bl, 5Ch ; '\'
.text:00402FBC                 setz    [esp+0Ch+var_9]
.text:00402FC1                 cmp     eax, [esp+0Ch+arg_4]
.text:00402FC5                 sbb     ecx, ecx
.text:00402FC7                 and     ecx, eax
.text:00402FC9                 xor     eax, eax
.text:00402FCB                 test    dh, 20h
.text:00402FCE                 jz      short loc_403008
.text:00402FD0                 cmp     bl, 29h ; ')'
.text:00402FD3
.text:00402FD3 loc_402FD3:                             ; CODE XREF: sub_402FA0+76↓j
.text:00402FD3                 jz      short loc_402FF1
.text:00402FD5
.text:00402FD5 loc_402FD5:                             ; CODE XREF: sub_402FA0+6D↓j
.text:00402FD5                                         ; sub_402FA0+71↓j
.text:00402FD5                 and     edx, 0FFFF8000h
.text:00402FDB                 test    dx, dx
.text:00402FDE                 jz      short loc_402FF8
.text:00402FE0                 cmp     byte ptr [esi], 7Ch ; '|'
.text:00402FE3
.text:00402FE3 loc_402FE3:                             ; CODE XREF: sub_402FA0+66↓j
.text:00402FE3                 jz      short loc_402FF1
.text:00402FE5
.text:00402FE5 loc_402FE5:                             ; CODE XREF: sub_402FA0+56↓j
.text:00402FE5                                         ; sub_402FA0+5D↓j ...
.text:00402FE5                 mov     ebx, [esp+0Ch+var_8]
.text:00402FE9                 mov     esi, [esp+0Ch+var_4]
.text:00402FED                 add     esp, 0Ch
.text:00402FF0                 retn
.text:00402FF1 ; ---------------------------------------------------------------------------
.text:00402FF1
.text:00402FF1 loc_402FF1:                             ; CODE XREF: sub_402FA0:loc_402FD3↑j
.text:00402FF1                                         ; sub_402FA0:loc_402FE3↑j
.text:00402FF1                 mov     eax, 1
.text:00402FF6                 jmp     short loc_402FE5
.text:00402FF8 ; ---------------------------------------------------------------------------
.text:00402FF8
.text:00402FF8 loc_402FF8:                             ; CODE XREF: sub_402FA0+3E↑j
.text:00402FF8                 cmp     [esp+0Ch+var_9], 0
.text:00402FFD                 jz      short loc_402FE5
.text:00402FFF                 test    ecx, ecx
.text:00403001                 jz      short loc_402FE5
.text:00403003                 cmp     byte ptr [ecx], 7Ch ; '|'
.text:00403006                 jmp     short loc_402FE3
.text:00403008 ; ---------------------------------------------------------------------------
.text:00403008
.text:00403008 loc_403008:                             ; CODE XREF: sub_402FA0+2E↑j
.text:00403008                 cmp     [esp+0Ch+var_9], 0
.text:0040300D                 jz      short loc_402FD5
.text:0040300F                 test    ecx, ecx
.text:00403011                 jz      short loc_402FD5
.text:00403013                 cmp     byte ptr [ecx], 29h ; ')'
.text:00403016                 jmp     short loc_402FD3
.text:00403016 sub_402FA0      endp
.text:00403016
.text:00403016 ; ---------------------------------------------------------------------------
.text:00403018                 align 10h
.text:00403020
.text:00403020 ; =============== S U B R O U T I N E =======================================
.text:00403020
.text:00403020
.text:00403020 sub_403020      proc near               ; CODE XREF: sub_406090:loc_408173↓p
.text:00403020
.text:00403020 arg_0           = dword ptr  4
.text:00403020 arg_4           = dword ptr  8
.text:00403020 arg_8           = dword ptr  0Ch
.text:00403020 arg_C           = dword ptr  10h
.text:00403020 arg_10          = dword ptr  14h
.text:00403020 arg_14          = dword ptr  18h
.text:00403020
.text:00403020                 push    ebp
.text:00403021                 push    edi
.text:00403022                 push    esi
.text:00403023                 push    ebx
.text:00403024                 mov     ecx, [esp+10h+arg_4]
.text:00403028                 mov     esi, [esp+10h+arg_0]
.text:0040302C                 mov     ebx, [esp+10h+arg_C]
.text:00403030                 mov     edx, [ecx]
.text:00403032                 cmp     edx, [esp+10h+arg_8]
.text:00403036                 jz      loc_4030EA
.text:0040303C                 lea     edi, [edx+1]
.text:0040303F                 mov     [ecx], edi
.text:00403041                 xor     ecx, ecx
.text:00403043                 test    [esp+10h+arg_10], 10000h
.text:0040304B                 setz    cl
.text:0040304E                 dec     ecx
.text:0040304F                 and     ecx, 0Bh
.text:00403052                 test    ebx, ebx
.text:00403054                 jz      loc_4030E5
.text:0040305A                 movzx   edi, byte ptr [edx]
.text:0040305D                 and     esi, 0FFh
.text:00403063                 movsx   esi, byte ptr [esi+ebx]
.text:00403067                 movzx   ebp, byte ptr [edi+ebx]
.text:0040306B
.text:0040306B loc_40306B:                             ; CODE XREF: sub_403020+C8↓j
.text:0040306B                 cmp     esi, ebp
.text:0040306D                 mov     edx, esi
.text:0040306F                 ja      short loc_4030DE
.text:00403071                 jmp     short loc_403080
.text:00403071 ; ---------------------------------------------------------------------------
.text:00403073                 align 10h
.text:00403080
.text:00403080 loc_403080:                             ; CODE XREF: sub_403020+51↑j
.text:00403080                                         ; sub_403020+BC↓j
.text:00403080                 test    ebx, ebx
.text:00403082                 movzx   eax, dl
.text:00403085                 jz      short loc_40308E
.text:00403087                 movzx   ecx, dl
.text:0040308A                 movzx   eax, byte ptr [ecx+ebx]
.text:0040308E
.text:0040308E loc_40308E:                             ; CODE XREF: sub_403020+65↑j
.text:0040308E                 mov     edi, [esp+10h+arg_14]
.text:00403092                 sar     eax, 3
.text:00403095                 add     edi, eax
.text:00403097                 test    ebx, ebx
.text:00403099                 movzx   eax, dl
.text:0040309C                 jz      short loc_4030A5
.text:0040309E                 movzx   esi, dl
.text:004030A1                 movzx   eax, byte ptr [esi+ebx]
.text:004030A5
.text:004030A5 loc_4030A5:                             ; CODE XREF: sub_403020+7C↑j
.text:004030A5                 mov     esi, [esp+10h+arg_14]
.text:004030A9                 sar     eax, 3
.text:004030AC                 movzx   ecx, dl
.text:004030AF                 add     eax, esi
.text:004030B1                 test    ebx, ebx
.text:004030B3                 movzx   esi, byte ptr [eax]
.text:004030B6                 jz      short loc_4030BF
.text:004030B8                 movzx   eax, dl
.text:004030BB                 movzx   ecx, byte ptr [eax+ebx]
.text:004030BF
.text:004030BF loc_4030BF:                             ; CODE XREF: sub_403020+96↑j
.text:004030BF                 mov     eax, ecx
.text:004030C1                 inc     edx
.text:004030C2                 and     eax, 1F8h
.text:004030C7                 sub     ecx, eax
.text:004030C9                 mov     eax, 1
.text:004030CE                 shl     eax, cl
.text:004030D0                 mov     ecx, eax
.text:004030D2                 mov     eax, esi
.text:004030D4                 or      al, cl
.text:004030D6                 mov     [edi], al
.text:004030D8                 xor     ecx, ecx
.text:004030DA                 cmp     edx, ebp
.text:004030DC                 jbe     short loc_403080
.text:004030DE
.text:004030DE loc_4030DE:                             ; CODE XREF: sub_403020+4F↑j
.text:004030DE                 mov     eax, ecx
.text:004030E0
.text:004030E0 loc_4030E0:                             ; CODE XREF: sub_403020+CF↓j
.text:004030E0                 pop     ebx
.text:004030E1                 pop     esi
.text:004030E2                 pop     edi
.text:004030E3                 pop     ebp
.text:004030E4                 retn
.text:004030E5 ; ---------------------------------------------------------------------------
.text:004030E5
.text:004030E5 loc_4030E5:                             ; CODE XREF: sub_403020+34↑j
.text:004030E5                 movzx   ebp, byte ptr [edx]
.text:004030E8                 jmp     short loc_40306B
.text:004030EA ; ---------------------------------------------------------------------------
.text:004030EA
.text:004030EA loc_4030EA:                             ; CODE XREF: sub_403020+16↑j
.text:004030EA                 mov     eax, 0Bh
.text:004030EF                 jmp     short loc_4030E0
.text:004030EF sub_403020      endp
.text:004030EF
.text:004030EF ; ---------------------------------------------------------------------------
.text:004030F1                 db 0EBh, 0Dh, 90h
.text:004030F4                 align 10h
.text:00403100 jpt_4033F7      dd offset loc_4039AB    ; DATA XREF: sub_403180:loc_4033F0↓r
.text:00403100                                         ; sub_403180+BEF↓r ...
.text:00403100                 dd offset loc_4039C3    ; jump table for switch statement
.text:00403100                 dd offset loc_4039C8
.text:00403100                 dd offset loc_403AC3
.text:00403100                 dd offset loc_405326
.text:00403100                 dd offset loc_405230
.text:00403118 jpt_403B84      dd offset loc_405144    ; DATA XREF: sub_403180+9FD↓r
.text:00403118                 dd offset loc_404D40    ; jump table for switch statement
.text:00403120 ; ---------------------------------------------------------------------------
.text:00403120                 mov     ds:5900404Bh, eax
.text:00403125                 dec     ebx
.text:00403126                 inc     eax
.text:00403127                 add     ch, bh
.text:00403129                 dec     edx
.text:0040312A                 inc     eax
.text:0040312B                 add     al, al
.text:0040312D                 dec     edx
.text:0040312E                 inc     eax
.text:0040312F                 add     [esi+1A00404Ah], ah
.text:00403135                 inc     ecx
.text:00403136                 inc     eax
.text:00403137                 add     [ecx-63FFBFB6h], ah
.text:0040313D                 dec     edx
.text:0040313E                 inc     eax
.text:0040313F                 add     [ecx], ah
.text:00403141                 dec     ecx
.text:00403142                 inc     eax
.text:00403143                 add     ds:8C004047h, ah
.text:00403149                 inc     esi
.text:0040314A                 inc     eax
.text:0040314B                 add     [esi], al
.text:0040314D                 inc     ebp
.text:0040314E                 inc     eax
.text:0040314F                 add     [eax+38004043h], al
.text:00403155                 inc     ecx
.text:00403156                 inc     eax
.text:00403157                 add     bh, ch
.text:00403159                 inc     eax
.text:0040315A                 inc     eax
.text:0040315B                 add     [edi-18FFBFC0h], dl
.text:00403161                 aas
.text:00403162                 inc     eax
.text:00403163                 add     [esi], dh
.text:00403165                 aas
.text:00403166                 inc     eax
.text:00403167                 add     [edx+3Eh], cl
.text:0040316A                 inc     eax
.text:0040316B                 add     [eax+3Dh], bh
.text:0040316E                 inc     eax
.text:0040316F                 add     [edx+3Ch], dh
.text:00403172                 inc     eax
.text:00403173                 add     [esi-6FFFBFC5h], al
.text:00403179                 lea     esi, [esi+0]
.text:00403180
.text:00403180 ; =============== S U B R O U T I N E =======================================
.text:00403180
.text:00403180
.text:00403180 sub_403180      proc near               ; CODE XREF: .text:00405EDE↓p
.text:00403180                                         ; .text:00405EF0↓j ...
.text:00403180
.text:00403180 Size            = dword ptr -0BCh
.text:00403180 var_B8          = dword ptr -0B8h
.text:00403180 var_B4          = dword ptr -0B4h
.text:00403180 var_B0          = dword ptr -0B0h
.text:00403180 var_A5          = byte ptr -0A5h
.text:00403180 var_A4          = dword ptr -0A4h
.text:00403180 var_A0          = dword ptr -0A0h
.text:00403180 var_9C          = dword ptr -9Ch
.text:00403180 var_97          = byte ptr -97h
.text:00403180 var_96          = byte ptr -96h
.text:00403180 var_95          = byte ptr -95h
.text:00403180 var_94          = dword ptr -94h
.text:00403180 var_90          = dword ptr -90h
.text:00403180 var_8C          = dword ptr -8Ch
.text:00403180 var_88          = dword ptr -88h
.text:00403180 var_84          = dword ptr -84h
.text:00403180 var_80          = dword ptr -80h
.text:00403180 var_7C          = dword ptr -7Ch
.text:00403180 var_78          = dword ptr -78h
.text:00403180 var_74          = dword ptr -74h
.text:00403180 var_70          = dword ptr -70h
.text:00403180 var_6C          = dword ptr -6Ch
.text:00403180 var_68          = dword ptr -68h
.text:00403180 var_64          = dword ptr -64h
.text:00403180 var_60          = dword ptr -60h
.text:00403180 var_5C          = dword ptr -5Ch
.text:00403180 var_58          = dword ptr -58h
.text:00403180 var_54          = dword ptr -54h
.text:00403180 var_50          = dword ptr -50h
.text:00403180 var_4C          = dword ptr -4Ch
.text:00403180 var_48          = dword ptr -48h
.text:00403180 var_44          = dword ptr -44h
.text:00403180 var_40          = dword ptr -40h
.text:00403180 var_3C          = dword ptr -3Ch
.text:00403180 var_38          = dword ptr -38h
.text:00403180 var_34          = dword ptr -34h
.text:00403180 var_30          = dword ptr -30h
.text:00403180 Src             = dword ptr -2Ch
.text:00403180 var_28          = dword ptr -28h
.text:00403180 var_24          = dword ptr -24h
.text:00403180 arg_0           = dword ptr  4
.text:00403180 arg_4           = dword ptr  8
.text:00403180 arg_8           = dword ptr  0Ch
.text:00403180 arg_C           = dword ptr  10h
.text:00403180 arg_10          = dword ptr  14h
.text:00403180 arg_14          = dword ptr  18h
.text:00403180 arg_18          = dword ptr  1Ch
.text:00403180 arg_1C          = dword ptr  20h
.text:00403180
.text:00403180                 push    ebp
.text:00403181                 push    edi
.text:00403182                 push    esi
.text:00403183                 push    ebx
.text:00403184                 sub     esp, 0ACh
.text:0040318A                 mov     ebx, [esp+0BCh+arg_0]
.text:00403191                 mov     [esp+0BCh+var_54], 0
.text:00403199                 mov     ecx, [esp+0BCh+arg_0]
.text:004031A0                 mov     esi, [esp+0BCh+arg_1C]
.text:004031A7                 mov     [esp+0BCh+var_60], 101h
.text:004031AF                 mov     ebp, [ebx+8]
.text:004031B2                 mov     edi, [ecx]
.text:004031B4                 mov     [esp+0BCh+var_64], 100h
.text:004031BC                 mov     eax, [ebx+18h]
.text:004031BF                 mov     edx, [ebx+14h]
.text:004031C2                 mov     [esp+0BCh+var_4C], edi
.text:004031C6                 inc     eax
.text:004031C7                 add     edi, ebp
.text:004031C9                 mov     [esp+0BCh+var_58], edx
.text:004031CD                 mov     [esp+0BCh+var_50], edi
.text:004031D1                 mov     [esp+0BCh+var_5C], eax
.text:004031D5                 mov     [esp+0BCh+var_7C], 0
.text:004031DD                 mov     [esp+0BCh+var_88], 0
.text:004031E5                 mov     [esp+0BCh+var_8C], 0
.text:004031ED                 mov     [esp+0BCh+Size], 14h ; Size
.text:004031F4                 call    malloc
.text:004031F9                 mov     [esp+0BCh+Src], eax
.text:00403200                 mov     edx, eax
.text:00403202                 test    edx, edx
.text:00403204                 mov     eax, 0FFFFFFFEh
.text:00403209                 jz      loc_4038D7
.text:0040320F                 mov     edx, [esp+0BCh+arg_0]
.text:00403216                 xor     edi, edi
.text:00403218                 mov     ebp, 5
.text:0040321D                 mov     [esp+0BCh+var_28], ebp
.text:00403224                 mov     [esp+0BCh+var_24], edi
.text:0040322B                 mov     ebx, [edx+18h]
.text:0040322E                 test    ebx, ebx
.text:00403230                 jnz     loc_405417
.text:00403236                 mov     [esp+0BCh+var_90], 0
.text:0040323E                 mov     [esp+0BCh+var_84], 0
.text:00403246                 mov     [esp+0BCh+var_80], 0
.text:0040324E                 mov     [esp+0BCh+var_74], 0
.text:00403256                 mov     [esp+0BCh+var_70], 0
.text:0040325E                 mov     [esp+0BCh+var_6C], 0
.text:00403266                 mov     [esp+0BCh+var_68], 0
.text:0040326E                 mov     [esp+0BCh+var_94], 0
.text:00403276                 mov     [esp+0BCh+var_78], 0
.text:0040327E
.text:0040327E loc_40327E:                             ; CODE XREF: sub_403180+236C↓j
.text:0040327E                 mov     eax, [esp+0BCh+arg_14]
.text:00403285                 test    eax, eax
.text:00403287                 js      loc_403975
.text:0040328D                 mov     ebp, [esp+0BCh+arg_8]
.text:00403294                 mov     ecx, [esp+0BCh+arg_10]
.text:0040329B                 add     ebp, ecx
.text:0040329D                 cmp     [esp+0BCh+arg_14], ebp
.text:004032A4                 jg      loc_403975
.text:004032AA                 mov     ebp, 1
.text:004032AF                 cmp     ebp, [esp+0BCh+var_5C]
.text:004032B3                 jnb     short loc_4032F8
.text:004032B5                 mov     eax, [esp+0BCh+var_78]
.text:004032B9                 add     eax, 4
.text:004032BC
.text:004032BC loc_4032BC:                             ; CODE XREF: sub_403180+176↓j
.text:004032BC                 mov     ecx, [esp+0BCh+var_74]
.text:004032C0                 mov     ebx, [esp+0BCh+var_70]
.text:004032C4                 mov     edx, [esp+0BCh+var_6C]
.text:004032C8                 mov     dword ptr [ecx+ebp*4], offset unk_411240
.text:004032CF                 mov     edi, [esp+0BCh+var_68]
.text:004032D3                 mov     dword ptr [ebx+ebp*4], offset unk_411240
.text:004032DA                 mov     dword ptr [edx+ebp*4], offset unk_411240
.text:004032E1                 mov     dword ptr [edi+ebp*4], offset unk_411240
.text:004032E8                 inc     ebp
.text:004032E9                 or      dword ptr [eax], 3
.text:004032EC                 and     byte ptr [eax], 0E3h
.text:004032EF                 add     eax, 4
.text:004032F2                 cmp     ebp, [esp+0BCh+var_5C]
.text:004032F6                 jb      short loc_4032BC
.text:004032F8
.text:004032F8 loc_4032F8:                             ; CODE XREF: sub_403180+133↑j
.text:004032F8                 mov     eax, [esp+0BCh+arg_10]
.text:004032FF                 test    eax, eax
.text:00403301                 jnz     short loc_40333C
.text:00403303                 mov     ebp, [esp+0BCh+arg_4]
.text:0040330A                 test    ebp, ebp
.text:0040330C                 jz      short loc_40333C
.text:0040330E                 mov     ebx, [esp+0BCh+arg_4]
.text:00403315                 xor     edx, edx
.text:00403317                 xor     edi, edi
.text:00403319                 mov     [esp+0BCh+arg_4], edx
.text:00403320                 mov     ecx, [esp+0BCh+arg_8]
.text:00403327                 mov     [esp+0BCh+arg_8], edi
.text:0040332E                 mov     [esp+0BCh+arg_C], ebx
.text:00403335                 mov     [esp+0BCh+arg_10], ecx
.text:0040333C
.text:0040333C loc_40333C:                             ; CODE XREF: sub_403180+181↑j
.text:0040333C                                         ; sub_403180+18C↑j
.text:0040333C                 mov     ecx, [esp+0BCh+arg_4]
.text:00403343                 mov     eax, [esp+0BCh+arg_8]
.text:0040334A                 mov     ebp, [esp+0BCh+arg_C]
.text:00403351                 mov     edi, [esp+0BCh+arg_10]
.text:00403358                 add     ecx, eax
.text:0040335A                 mov     [esp+0BCh+var_34], ecx
.text:00403361                 add     ebp, edi
.text:00403363                 cmp     esi, [esp+0BCh+arg_8]
.text:0040336A                 mov     [esp+0BCh+var_38], ebp
.text:00403371                 jg      loc_4053F2
.text:00403377                 mov     edx, [esp+0BCh+arg_4]
.text:0040337E                 add     esi, edx
.text:00403380                 mov     [esp+0BCh+var_3C], esi
.text:00403387                 mov     esi, [esp+0BCh+arg_C]
.text:0040338E
.text:0040338E loc_40338E:                             ; CODE XREF: sub_403180+2292↓j
.text:0040338E                 mov     [esp+0BCh+var_40], esi
.text:00403392                 mov     ecx, [esp+0BCh+arg_8]
.text:00403399                 test    ecx, ecx
.text:0040339B                 jle     loc_4053C8
.text:004033A1                 mov     eax, [esp+0BCh+arg_8]
.text:004033A8                 cmp     [esp+0BCh+arg_14], eax
.text:004033AF                 jg      loc_4053C8
.text:004033B5                 mov     edx, [esp+0BCh+arg_4]
.text:004033BC                 mov     ebx, [esp+0BCh+arg_14]
.text:004033C3                 mov     esi, [esp+0BCh+var_3C]
.text:004033CA                 add     edx, ebx
.text:004033CC                 mov     [esp+0BCh+var_44], edx
.text:004033D0                 mov     [esp+0BCh+var_48], esi
.text:004033D4
.text:004033D4 loc_4033D4:                             ; CODE XREF: sub_403180+469↓j
.text:004033D4                                         ; sub_403180+47A↓j ...
.text:004033D4                 mov     edx, [esp+0BCh+var_50]
.text:004033D8                 mov     eax, offset loc_4033F9
.text:004033DD                 cmp     [esp+0BCh+var_4C], edx
.text:004033E1                 jz      short loc_4033F7
.text:004033E3
.text:004033E3 loc_4033E3:                             ; CODE XREF: sub_403180+838↓j
.text:004033E3                 mov     ebp, [esp+0BCh+var_4C]
.text:004033E7                 movzx   ebx, byte ptr [ebp+0]
.text:004033EB                 inc     ebp
.text:004033EC                 mov     [esp+0BCh+var_4C], ebp
.text:004033F0
.text:004033F0 loc_4033F0:                             ; CODE XREF: sub_403180+1CA0↓j
.text:004033F0                 mov     eax, ds:jpt_4033F7[ebx*4] ; switch 6 cases
.text:004033F7
.text:004033F7 loc_4033F7:                             ; CODE XREF: sub_403180+261↑j
.text:004033F7                                         ; sub_403180+83E↓j ...
.text:004033F7                 jmp     eax             ; switch jump
.text:004033F9 ; ---------------------------------------------------------------------------
.text:004033F9
.text:004033F9 loc_4033F9:                             ; DATA XREF: sub_403180+258↑o
.text:004033F9                                         ; sub_403180+82F↓o ...
.text:004033F9                 mov     eax, [esp+0BCh+var_40]
.text:004033FD                 cmp     [esp+0BCh+var_44], eax
.text:00403401                 jz      loc_403689
.text:00403407                 mov     edi, [esp+0BCh+arg_8]
.text:0040340E                 xor     edx, edx
.text:00403410                 test    edi, edi
.text:00403412                 jz      short loc_40342C
.text:00403414                 mov     eax, [esp+0BCh+var_88]
.text:00403418                 cmp     [esp+0BCh+arg_4], eax
.text:0040341F                 ja      short loc_40342C
.text:00403421                 mov     esi, [esp+0BCh+var_34]
.text:00403428                 cmp     eax, esi
.text:0040342A                 jbe     short loc_40342E
.text:0040342C
.text:0040342C loc_40342C:                             ; CODE XREF: sub_403180+292↑j
.text:0040342C                                         ; sub_403180+29F↑j
.text:0040342C                 mov     dl, 1
.text:0040342E
.text:0040342E loc_40342E:                             ; CODE XREF: sub_403180+2AA↑j
.text:0040342E                 mov     ebp, [esp+0BCh+var_3C]
.text:00403435                 cmp     [esp+0BCh+var_48], ebp
.text:00403439                 setz    cl
.text:0040343C                 cmp     dl, cl
.text:0040343E                 jz      loc_403998
.text:00403444                 mov     edx, [esp+0BCh+var_88]
.text:00403448                 cmp     [esp+0BCh+var_44], edx
.text:0040344C                 setnbe  al
.text:0040344F
.text:0040344F loc_40344F:                             ; CODE XREF: sub_403180+826↓j
.text:0040344F                 mov     esi, [esp+0BCh+var_24]
.text:00403456                 test    esi, esi
.text:00403458                 jz      loc_40397F
.text:0040345E                 mov     ecx, [esp+0BCh+var_7C]
.text:00403462                 test    ecx, ecx
.text:00403464                 jz      short loc_40346A
.text:00403466                 test    al, al
.text:00403468                 jz      short loc_4034B0
.text:0040346A
.text:0040346A loc_40346A:                             ; CODE XREF: sub_403180+2E4↑j
.text:0040346A                 mov     [esp+0BCh+var_7C], 1
.text:00403472                 mov     eax, [esp+0BCh+var_5C]
.text:00403476                 mov     ebp, 1
.text:0040347B                 mov     edi, [esp+0BCh+var_44]
.text:0040347F                 cmp     ebp, eax
.text:00403481                 mov     [esp+0BCh+var_88], edi
.text:00403485                 jnb     short loc_4034B0
.text:00403487
.text:00403487 loc_403487:                             ; CODE XREF: sub_403180+328↓j
.text:00403487                 mov     edx, [esp+0BCh+var_68]
.text:0040348B                 mov     ecx, [esp+0BCh+var_80]
.text:0040348F                 mov     eax, [esp+0BCh+var_6C]
.text:00403493                 mov     edi, [edx+ebp*4]
.text:00403496                 mov     edx, [esp+0BCh+var_84]
.text:0040349A                 mov     [ecx+ebp*4], edi
.text:0040349D                 mov     ebx, [eax+ebp*4]
.text:004034A0                 mov     [edx+ebp*4], ebx
.text:004034A3                 inc     ebp
.text:004034A4                 cmp     ebp, [esp+0BCh+var_5C]
.text:004034A8                 jb      short loc_403487
.text:004034AA                 lea     esi, [esi+0]
.text:004034B0
.text:004034B0 loc_4034B0:                             ; CODE XREF: sub_403180+2E8↑j
.text:004034B0                                         ; sub_403180+305↑j ...
.text:004034B0                 test    esi, esi
.text:004034B2                 mov     eax, esi
.text:004034B4                 jz      loc_40361E
.text:004034BA                 mov     ebx, [esp+0BCh+Src]
.text:004034C1                 dec     esi
.text:004034C2                 mov     [esp+0BCh+var_24], esi
.text:004034C9                 mov     esi, [ebx+esi*4]
.text:004034CC                 test    esi, esi
.text:004034CE                 jz      short loc_4034D4
.text:004034D0                 mov     [esp+0BCh+var_44], esi
.text:004034D4
.text:004034D4 loc_4034D4:                             ; CODE XREF: sub_403180+34E↑j
.text:004034D4                 lea     ecx, [eax-2]
.text:004034D7                 lea     edx, [eax-3]
.text:004034DA                 mov     [esp+0BCh+var_24], ecx
.text:004034E1                 mov     ebp, [ebx+ecx*4]
.text:004034E4                 lea     ecx, [eax-4]
.text:004034E7                 mov     [esp+0BCh+var_24], edx
.text:004034EE                 mov     [esp+0BCh+var_4C], ebp
.text:004034F2                 mov     edi, [ebx+edx*4]
.text:004034F5                 mov     [esp+0BCh+var_24], ecx
.text:004034FC                 mov     [esp+0BCh+var_64], edi
.text:00403500                 mov     ebp, [ebx+ecx*4]
.text:00403503                 mov     ecx, [esp+0BCh+var_64]
.text:00403507                 mov     [esp+0BCh+var_60], ebp
.text:0040350B                 cmp     ecx, ebp
.text:0040350D                 jb      short loc_403569
.text:0040350F                 nop
.text:00403510
.text:00403510 loc_403510:                             ; CODE XREF: sub_403180+3E7↓j
.text:00403510                 mov     eax, [esp+0BCh+var_24]
.text:00403517                 mov     ebp, [esp+0BCh+var_78]
.text:0040351B                 dec     eax
.text:0040351C                 mov     [esp+0BCh+var_24], eax
.text:00403523                 mov     edi, [ebx+eax*4]
.text:00403526                 mov     [ebp+ecx*4+0], edi
.text:0040352A                 mov     ebp, [esp+0BCh+var_24]
.text:00403531                 mov     esi, [esp+0BCh+Src]
.text:00403538                 lea     edx, [ebp-1]
.text:0040353B                 sub     ebp, 2
.text:0040353E                 mov     ebx, esi
.text:00403540                 mov     [esp+0BCh+var_24], edx
.text:00403547                 mov     edi, [esi+edx*4]
.text:0040354A                 mov     edx, [esp+0BCh+var_6C]
.text:0040354E                 mov     [esp+0BCh+var_24], ebp
.text:00403555                 mov     [edx+ecx*4], edi
.text:00403558                 mov     edi, [esi+ebp*4]
.text:0040355B                 mov     esi, [esp+0BCh+var_68]
.text:0040355F                 mov     [esi+ecx*4], edi
.text:00403562                 dec     ecx
.text:00403563                 cmp     ecx, [esp+0BCh+var_60]
.text:00403567                 jnb     short loc_403510
.text:00403569
.text:00403569 loc_403569:                             ; CODE XREF: sub_403180+38D↑j
.text:00403569                 mov     [esp+0BCh+var_8C], 0
.text:00403571                 mov     ebx, [esp+0BCh+var_4C]
.text:00403575                 test    ebx, ebx
.text:00403577                 jz      short loc_4035D2
.text:00403579                 mov     edx, [esp+0BCh+var_50]
.text:0040357D                 cmp     [esp+0BCh+var_4C], edx
.text:00403581                 jnb     short loc_4035DE
.text:00403583                 mov     ecx, [esp+0BCh+var_4C]
.text:00403587                 xor     edx, edx
.text:00403589                 movzx   eax, byte ptr [ecx]
.text:0040358C                 cmp     eax, 12h
.text:0040358F                 ja      loc_403615
.text:00403595                 cmp     eax, 11h
.text:00403598                 jnb     short loc_4035A0
.text:0040359A                 cmp     eax, 0Dh
.text:0040359D                 jnz     short loc_4035DE
.text:0040359F                 nop
.text:004035A0
.text:004035A0 loc_4035A0:                             ; CODE XREF: sub_403180+418↑j
.text:004035A0                                         ; sub_403180+49C↓j
.text:004035A0                 mov     ebp, [esp+0BCh+var_4C]
.text:004035A4                 mov     ecx, [esp+0BCh+var_4C]
.text:004035A8                 inc     ebp
.text:004035A9                 mov     [esp+0BCh+var_30], ebp
.text:004035B0                 movsx   esi, byte ptr [ebp+1]
.text:004035B4                 movzx   eax, byte ptr [ecx+1]
.text:004035B8                 shl     esi, 8
.text:004035BB                 lea     edi, [esi+eax]
.text:004035BE                 lea     eax, [edi+ecx+3]
.text:004035C2                 test    dl, dl
.text:004035C4                 mov     [esp+0BCh+var_30], eax
.text:004035CB                 jz      short loc_403610
.text:004035CD                 cmp     byte ptr [eax], 15h
.text:004035D0
.text:004035D0 loc_4035D0:                             ; CODE XREF: sub_403180+493↓j
.text:004035D0                 jnz     short loc_4035DE
.text:004035D2
.text:004035D2 loc_4035D2:                             ; CODE XREF: sub_403180+3F7↑j
.text:004035D2                                         ; sub_403180+889↓j ...
.text:004035D2                 mov     esi, [esp+0BCh+var_24]
.text:004035D9                 jmp     loc_4034B0
.text:004035DE ; ---------------------------------------------------------------------------
.text:004035DE
.text:004035DE loc_4035DE:                             ; CODE XREF: sub_403180+401↑j
.text:004035DE                                         ; sub_403180+41D↑j ...
.text:004035DE                 mov     ebx, [esp+0BCh+arg_4]
.text:004035E5                 cmp     [esp+0BCh+var_44], ebx
.text:004035E9                 jb      loc_4033D4
.text:004035EF                 mov     edi, [esp+0BCh+var_34]
.text:004035F6                 cmp     [esp+0BCh+var_44], edi
.text:004035FA                 ja      loc_4033D4
.text:00403600                 mov     edx, [esp+0BCh+var_3C]
.text:00403607                 mov     [esp+0BCh+var_48], edx
.text:0040360B                 jmp     loc_4033D4
.text:00403610 ; ---------------------------------------------------------------------------
.text:00403610
.text:00403610 loc_403610:                             ; CODE XREF: sub_403180+44B↑j
.text:00403610                 cmp     byte ptr [eax], 0Fh
.text:00403613                 jmp     short loc_4035D0
.text:00403615 ; ---------------------------------------------------------------------------
.text:00403615
.text:00403615 loc_403615:                             ; CODE XREF: sub_403180+40F↑j
.text:00403615                 cmp     eax, 16h
.text:00403618                 jnz     short loc_4035DE
.text:0040361A                 mov     dl, 1
.text:0040361C                 jmp     short loc_4035A0
.text:0040361E ; ---------------------------------------------------------------------------
.text:0040361E
.text:0040361E loc_40361E:                             ; CODE XREF: sub_403180+334↑j
.text:0040361E                 mov     ecx, [esp+0BCh+var_7C]
.text:00403622                 test    ecx, ecx
.text:00403624                 jz      loc_403975
.text:0040362A
.text:0040362A loc_40362A:                             ; CODE XREF: sub_403180+813↓j
.text:0040362A                 mov     esi, [esp+0BCh+var_88]
.text:0040362E                 mov     ebx, [esp+0BCh+arg_4]
.text:00403635                 mov     [esp+0BCh+var_44], esi
.text:00403639                 cmp     esi, ebx
.text:0040363B                 jb      short loc_403653
.text:0040363D                 mov     eax, [esp+0BCh+var_34]
.text:00403644                 mov     ecx, [esp+0BCh+var_3C]
.text:0040364B                 cmp     esi, eax
.text:0040364D                 mov     [esp+0BCh+var_48], ecx
.text:00403651                 jbe     short loc_40365B
.text:00403653
.text:00403653 loc_403653:                             ; CODE XREF: sub_403180+4BB↑j
.text:00403653                 mov     esi, [esp+0BCh+var_40]
.text:00403657                 mov     [esp+0BCh+var_48], esi
.text:0040365B
.text:0040365B loc_40365B:                             ; CODE XREF: sub_403180+4D1↑j
.text:0040365B                 mov     ebp, 1
.text:00403660                 cmp     ebp, [esp+0BCh+var_5C]
.text:00403664                 jnb     short loc_403689
.text:00403666
.text:00403666 loc_403666:                             ; CODE XREF: sub_403180+507↓j
.text:00403666                 mov     eax, [esp+0BCh+var_80]
.text:0040366A                 mov     ecx, [esp+0BCh+var_68]
.text:0040366E                 mov     ebx, [esp+0BCh+var_84]
.text:00403672                 mov     edi, [eax+ebp*4]
.text:00403675                 mov     [ecx+ebp*4], edi
.text:00403678                 mov     edx, [ebx+ebp*4]
.text:0040367B                 mov     edi, [esp+0BCh+var_6C]
.text:0040367F                 mov     [edi+ebp*4], edx
.text:00403682                 inc     ebp
.text:00403683                 cmp     ebp, [esp+0BCh+var_5C]
.text:00403687                 jb      short loc_403666
.text:00403689
.text:00403689 loc_403689:                             ; CODE XREF: sub_403180+281↑j
.text:00403689                                         ; sub_403180+4E4↑j ...
.text:00403689                 mov     ebp, [esp+0BCh+arg_18]
.text:00403690                 test    ebp, ebp
.text:00403692                 jz      loc_4038A2
.text:00403698                 mov     edx, [esp+0BCh+arg_0]
.text:0040369F                 movzx   eax, byte ptr [edx+1Ch]
.text:004036A3                 test    al, 10h
.text:004036A5                 jnz     loc_4038A2
.text:004036AB                 shr     al, 1
.text:004036AD                 and     eax, 3
.text:004036B0                 jnz     loc_403908
.text:004036B6                 mov     eax, [esp+0BCh+var_5C]
.text:004036BA                 inc     eax
.text:004036BB                 cmp     eax, 1Eh
.text:004036BE                 jnb     short loc_4036C5
.text:004036C0                 mov     eax, 1Eh
.text:004036C5
.text:004036C5 loc_4036C5:                             ; CODE XREF: sub_403180+53E↑j
.text:004036C5                 mov     ebp, [esp+0BCh+arg_18]
.text:004036CC                 mov     [ebp+0], eax
.text:004036CF                 shl     eax, 2
.text:004036D2                 mov     [esp+0BCh+Size], eax ; Size
.text:004036D5                 call    malloc
.text:004036DA                 mov     edi, [esp+0BCh+arg_18]
.text:004036E1                 mov     ebx, [edi]
.text:004036E3                 mov     [edi+4], eax
.text:004036E6                 shl     ebx, 2
.text:004036E9                 mov     [esp+0BCh+Size], ebx ; Size
.text:004036EC                 call    malloc
.text:004036F1                 mov     ecx, [esp+0BCh+arg_18]
.text:004036F8                 mov     esi, [ecx+4]
.text:004036FB                 mov     [ecx+8], eax
.text:004036FE                 test    esi, esi
.text:00403700                 jz      loc_403901
.text:00403706                 test    eax, eax
.text:00403708                 jz      loc_403901
.text:0040370E                 mov     edx, [esp+0BCh+arg_0]
.text:00403715                 movzx   ecx, byte ptr [edx+1Ch]
.text:00403719                 and     cl, 0F9h
.text:0040371C                 or      cl, 2
.text:0040371F                 mov     [edx+1Ch], cl
.text:00403722
.text:00403722 loc_403722:                             ; CODE XREF: sub_403180+7ED↓j
.text:00403722                 mov     ecx, [esp+0BCh+arg_18]
.text:00403729                 mov     edx, [ecx]
.text:0040372B
.text:0040372B loc_40372B:                             ; CODE XREF: sub_403180+794↓j
.text:0040372B                                         ; sub_403180+7A9↓j
.text:0040372B                 test    edx, edx
.text:0040372D                 jz      short loc_403778
.text:0040372F                 mov     esi, [esp+0BCh+arg_18]
.text:00403736                 mov     edi, [esp+0BCh+var_3C]
.text:0040373D                 mov     edx, [esp+0BCh+arg_14]
.text:00403744                 cmp     [esp+0BCh+var_48], edi
.text:00403748                 mov     ebp, [esi+4]
.text:0040374B                 mov     [ebp+0], edx
.text:0040374E                 mov     edx, [esi+8]
.text:00403751                 jz      loc_4038EF
.text:00403757                 mov     eax, [esp+0BCh+var_44]
.text:0040375B                 mov     esi, [esp+0BCh+arg_C]
.text:00403762                 mov     ecx, [esp+0BCh+arg_8]
.text:00403769                 sub     eax, esi
.text:0040376B                 add     eax, ecx
.text:0040376D
.text:0040376D loc_40376D:                             ; CODE XREF: sub_403180+77C↓j
.text:0040376D                 mov     [edx], eax
.text:0040376F                 mov     edi, [esp+0BCh+arg_18]
.text:00403776                 mov     edx, [edi]
.text:00403778
.text:00403778 loc_403778:                             ; CODE XREF: sub_403180+5AD↑j
.text:00403778                 mov     ebp, 1
.text:0040377D
.text:0040377D loc_40377D:                             ; CODE XREF: sub_403180+6A8↓j
.text:0040377D                 cmp     edx, [esp+0BCh+var_5C]
.text:00403781                 mov     eax, edx
.text:00403783                 jbe     short loc_403789
.text:00403785                 mov     eax, [esp+0BCh+var_5C]
.text:00403789
.text:00403789 loc_403789:                             ; CODE XREF: sub_403180+603↑j
.text:00403789                 cmp     ebp, eax
.text:0040378B                 jnb     loc_403873
.text:00403791                 mov     ebx, [esp+0BCh+var_68]
.text:00403795                 mov     eax, [ebx+ebp*4]
.text:00403798                 cmp     eax, offset unk_411240
.text:0040379D                 jz      loc_403856
.text:004037A3                 mov     esi, [esp+0BCh+var_6C]
.text:004037A7                 mov     edx, [esi+ebp*4]
.text:004037AA                 cmp     edx, offset unk_411240
.text:004037B0                 jz      loc_403856
.text:004037B6                 mov     edi, [esp+0BCh+arg_8]
.text:004037BD                 mov     ebx, [esp+0BCh+arg_18]
.text:004037C4                 test    edi, edi
.text:004037C6                 mov     ecx, [ebx+4]
.text:004037C9                 jz      short loc_403842
.text:004037CB                 cmp     [esp+0BCh+arg_4], eax
.text:004037D2                 ja      short loc_403842
.text:004037D4                 cmp     eax, [esp+0BCh+var_34]
.text:004037DB                 ja      short loc_403842
.text:004037DD                 mov     esi, [esp+0BCh+arg_4]
.text:004037E4                 sub     eax, esi
.text:004037E6
.text:004037E6 loc_4037E6:                             ; CODE XREF: sub_403180+6D4↓j
.text:004037E6                 mov     [ecx+ebp*4], eax
.text:004037E9                 mov     esi, [esp+0BCh+arg_18]
.text:004037F0                 mov     eax, [esp+0BCh+arg_8]
.text:004037F7                 mov     ecx, [esi+8]
.text:004037FA                 test    eax, eax
.text:004037FC                 jz      short loc_40382D
.text:004037FE                 cmp     [esp+0BCh+arg_4], edx
.text:00403805                 ja      short loc_40382D
.text:00403807                 cmp     edx, [esp+0BCh+var_34]
.text:0040380E                 ja      short loc_40382D
.text:00403810                 mov     eax, edx
.text:00403812                 mov     edx, [esp+0BCh+arg_4]
.text:00403819                 sub     eax, edx
.text:0040381B
.text:0040381B loc_40381B:                             ; CODE XREF: sub_403180+6C0↓j
.text:0040381B                 mov     [ecx+ebp*4], eax
.text:0040381E
.text:0040381E loc_40381E:                             ; CODE XREF: sub_403180+6F1↓j
.text:0040381E                 mov     ecx, [esp+0BCh+arg_18]
.text:00403825                 inc     ebp
.text:00403826                 mov     edx, [ecx]
.text:00403828                 jmp     loc_40377D
.text:0040382D ; ---------------------------------------------------------------------------
.text:0040382D
.text:0040382D loc_40382D:                             ; CODE XREF: sub_403180+67C↑j
.text:0040382D                                         ; sub_403180+685↑j ...
.text:0040382D                 mov     eax, [esp+0BCh+arg_C]
.text:00403834                 mov     edi, [esp+0BCh+arg_8]
.text:0040383B                 sub     edx, eax
.text:0040383D                 lea     eax, [edi+edx]
.text:00403840                 jmp     short loc_40381B
.text:00403842 ; ---------------------------------------------------------------------------
.text:00403842
.text:00403842 loc_403842:                             ; CODE XREF: sub_403180+649↑j
.text:00403842                                         ; sub_403180+652↑j ...
.text:00403842                 mov     ebx, [esp+0BCh+arg_C]
.text:00403849                 mov     edi, [esp+0BCh+arg_8]
.text:00403850                 sub     eax, ebx
.text:00403852                 add     eax, edi
.text:00403854                 jmp     short loc_4037E6
.text:00403856 ; ---------------------------------------------------------------------------
.text:00403856
.text:00403856 loc_403856:                             ; CODE XREF: sub_403180+61D↑j
.text:00403856                                         ; sub_403180+630↑j
.text:00403856                 mov     eax, [esp+0BCh+arg_18]
.text:0040385D                 mov     ecx, [eax+4]
.text:00403860                 mov     edx, [eax+8]
.text:00403863                 mov     dword ptr [edx+ebp*4], 0FFFFFFFFh
.text:0040386A                 mov     dword ptr [ecx+ebp*4], 0FFFFFFFFh
.text:00403871                 jmp     short loc_40381E
.text:00403873 ; ---------------------------------------------------------------------------
.text:00403873
.text:00403873 loc_403873:                             ; CODE XREF: sub_403180+60B↑j
.text:00403873                 mov     ebp, [esp+0BCh+var_5C]
.text:00403877                 cmp     ebp, edx
.text:00403879                 jnb     short loc_4038A2
.text:0040387B                 mov     esi, [esp+0BCh+arg_18]
.text:00403882                 mov     edx, [esi+4]
.text:00403885                 mov     eax, [esi+8]
.text:00403888
.text:00403888 loc_403888:                             ; CODE XREF: sub_403180+720↓j
.text:00403888                 mov     dword ptr [eax+ebp*4], 0FFFFFFFFh
.text:0040388F                 mov     edi, [esp+0BCh+arg_18]
.text:00403896                 mov     dword ptr [edx+ebp*4], 0FFFFFFFFh
.text:0040389D                 inc     ebp
.text:0040389E                 cmp     ebp, [edi]
.text:004038A0                 jb      short loc_403888
.text:004038A2
.text:004038A2 loc_4038A2:                             ; CODE XREF: sub_403180+512↑j
.text:004038A2                                         ; sub_403180+525↑j ...
.text:004038A2                 mov     eax, [esp+0BCh+var_44]
.text:004038A6                 mov     ecx, [esp+0BCh+arg_14]
.text:004038AD                 mov     ebp, [esp+0BCh+var_3C]
.text:004038B4                 sub     eax, ecx
.text:004038B6                 cmp     [esp+0BCh+var_48], ebp
.text:004038BA                 jz      short loc_4038E2
.text:004038BC                 mov     ebx, [esp+0BCh+arg_8]
.text:004038C3                 mov     ebp, eax
.text:004038C5                 sub     [esp+0BCh+arg_C], ebx
.text:004038CC                 mov     edx, [esp+0BCh+arg_C]
.text:004038D3                 sub     ebp, edx
.text:004038D5
.text:004038D5 loc_4038D5:                             ; CODE XREF: sub_403180+76D↓j
.text:004038D5                 mov     eax, ebp
.text:004038D7
.text:004038D7 loc_4038D7:                             ; CODE XREF: sub_403180+89↑j
.text:004038D7                                         ; sub_403180+786↓j ...
.text:004038D7                 add     esp, 0ACh
.text:004038DD                 pop     ebx
.text:004038DE                 pop     esi
.text:004038DF                 pop     edi
.text:004038E0                 pop     ebp
.text:004038E1                 retn
.text:004038E2 ; ---------------------------------------------------------------------------
.text:004038E2
.text:004038E2 loc_4038E2:                             ; CODE XREF: sub_403180+73A↑j
.text:004038E2                 mov     esi, [esp+0BCh+arg_4]
.text:004038E9                 mov     ebp, eax
.text:004038EB                 sub     ebp, esi
.text:004038ED                 jmp     short loc_4038D5
.text:004038EF ; ---------------------------------------------------------------------------
.text:004038EF
.text:004038EF loc_4038EF:                             ; CODE XREF: sub_403180+5D1↑j
.text:004038EF                 mov     eax, [esp+0BCh+var_44]
.text:004038F3                 mov     ebx, [esp+0BCh+arg_4]
.text:004038FA                 sub     eax, ebx
.text:004038FC                 jmp     loc_40376D
.text:00403901 ; ---------------------------------------------------------------------------
.text:00403901
.text:00403901 loc_403901:                             ; CODE XREF: sub_403180+580↑j
.text:00403901                                         ; sub_403180+588↑j ...
.text:00403901                 mov     eax, 0FFFFFFFEh
.text:00403906                 jmp     short loc_4038D7
.text:00403908 ; ---------------------------------------------------------------------------
.text:00403908
.text:00403908 loc_403908:                             ; CODE XREF: sub_403180+530↑j
.text:00403908                 dec     eax
.text:00403909                 jz      short loc_403919
.text:0040390B                 mov     eax, [esp+0BCh+arg_18]
.text:00403912                 mov     edx, [eax]
.text:00403914                 jmp     loc_40372B
.text:00403919 ; ---------------------------------------------------------------------------
.text:00403919
.text:00403919 loc_403919:                             ; CODE XREF: sub_403180+789↑j
.text:00403919                 mov     ecx, [esp+0BCh+arg_18]
.text:00403920                 mov     eax, [esp+0BCh+var_5C]
.text:00403924                 mov     edx, [ecx]
.text:00403926                 inc     eax
.text:00403927                 cmp     edx, eax
.text:00403929                 jnb     loc_40372B
.text:0040392F                 mov     [ecx], eax
.text:00403931                 shl     eax, 2
.text:00403934                 mov     [esp+0BCh+var_B8], eax ; Size
.text:00403938                 mov     edx, [ecx+4]
.text:0040393B                 mov     [esp+0BCh+Size], edx ; Block
.text:0040393E                 call    realloc
.text:00403943                 mov     edi, [esp+0BCh+arg_18]
.text:0040394A                 mov     ebp, [edi]
.text:0040394C                 mov     [edi+4], eax
.text:0040394F                 shl     ebp, 2
.text:00403952                 mov     [esp+0BCh+var_B8], ebp ; Size
.text:00403956                 mov     ebx, [edi+8]
.text:00403959                 mov     [esp+0BCh+Size], ebx ; Block
.text:0040395C                 call    realloc
.text:00403961                 mov     [edi+8], eax
.text:00403964                 mov     esi, [edi+4]
.text:00403967                 test    esi, esi
.text:00403969                 jz      short loc_403901
.text:0040396B                 test    eax, eax
.text:0040396D                 jnz     loc_403722
.text:00403973                 jmp     short loc_403901
.text:00403975 ; ---------------------------------------------------------------------------
.text:00403975
.text:00403975 loc_403975:                             ; CODE XREF: sub_403180+107↑j
.text:00403975                                         ; sub_403180+124↑j ...
.text:00403975                 mov     eax, 0FFFFFFFFh
.text:0040397A                 jmp     loc_4038D7
.text:0040397F ; ---------------------------------------------------------------------------
.text:0040397F
.text:0040397F loc_40397F:                             ; CODE XREF: sub_403180+2D8↑j
.text:0040397F                 mov     ebp, [esp+0BCh+var_7C]
.text:00403983                 test    ebp, ebp
.text:00403985                 jz      loc_403689
.text:0040398B                 test    al, al
.text:0040398D                 jnz     loc_403689
.text:00403993                 jmp     loc_40362A
.text:00403998 ; ---------------------------------------------------------------------------
.text:00403998
.text:00403998 loc_403998:                             ; CODE XREF: sub_403180+2BE↑j
.text:00403998                 mov     ebx, [esp+0BCh+var_3C]
.text:0040399F                 cmp     [esp+0BCh+var_48], ebx
.text:004039A3                 setnz   al
.text:004039A6                 jmp     loc_40344F
.text:004039AB ; ---------------------------------------------------------------------------
.text:004039AB
.text:004039AB loc_4039AB:                             ; CODE XREF: sub_403180:loc_4033F7↑j
.text:004039AB                                         ; sub_403180+898↓j ...
.text:004039AB                 mov     edx, [esp+0BCh+var_50] ; jumptable 004033F7 case 0
.text:004039AB                                         ; jumptable 00403D76 case 0
.text:004039AB                                         ; jumptable 00403E48 case 0
.text:004039AF                 mov     eax, offset loc_4033F9
.text:004039B4                 cmp     [esp+0BCh+var_4C], edx
.text:004039B8                 jnz     loc_4033E3
.text:004039BE                 jmp     loc_4033F7
.text:004039C3 ; ---------------------------------------------------------------------------
.text:004039C3
.text:004039C3 loc_4039C3:                             ; CODE XREF: sub_403180:loc_4033F7↑j
.text:004039C3                                         ; sub_403180+BF6↓j ...
.text:004039C3                 jmp     loc_403689      ; jumptable 004033F7 case 1
.text:004039C3                                         ; jumptable 00403D76 case 1
.text:004039C3                                         ; jumptable 00403E48 case 1
.text:004039C8 ; ---------------------------------------------------------------------------
.text:004039C8
.text:004039C8 loc_4039C8:                             ; CODE XREF: sub_403180:loc_4033F7↑j
.text:004039C8                                         ; sub_403180+BF6↓j ...
.text:004039C8                 mov     eax, [esp+0BCh+var_4C] ; jumptable 004033F7 case 2
.text:004039C8                                         ; jumptable 00403D76 case 2
.text:004039C8                                         ; jumptable 00403E48 case 2
.text:004039CC                 mov     edi, [esp+0BCh+var_58]
.text:004039D0                 movzx   ebp, byte ptr [eax]
.text:004039D3                 inc     eax
.text:004039D4                 test    edi, edi
.text:004039D6                 mov     [esp+0BCh+var_4C], eax
.text:004039DA                 jz      loc_403A69
.text:004039E0
.text:004039E0 loc_4039E0:                             ; CODE XREF: sub_403180+890↓j
.text:004039E0                 mov     ecx, [esp+0BCh+var_48]
.text:004039E4                 cmp     [esp+0BCh+var_44], ecx
.text:004039E8                 jz      short loc_403A46
.text:004039EA
.text:004039EA loc_4039EA:                             ; CODE XREF: sub_403180+8E7↓j
.text:004039EA                 mov     ecx, [esp+0BCh+var_44]
.text:004039EE                 mov     ebx, [esp+0BCh+var_4C]
.text:004039F2                 mov     edx, [esp+0BCh+var_58]
.text:004039F6                 movzx   edi, byte ptr [ecx]
.text:004039F9                 inc     ecx
.text:004039FA                 movzx   eax, byte ptr [ebx]
.text:004039FD                 inc     ebx
.text:004039FE                 mov     [esp+0BCh+var_4C], ebx
.text:00403A02                 mov     [esp+0BCh+var_44], ecx
.text:00403A06                 cmp     [edi+edx], al
.text:00403A09                 jnz     loc_4035D2
.text:00403A0F                 dec     ebp
.text:00403A10                 jnz     short loc_4039E0
.text:00403A12
.text:00403A12 loc_403A12:                             ; CODE XREF: sub_403180+916↓j
.text:00403A12                 mov     ebp, [esp+0BCh+var_8C]
.text:00403A16                 test    ebp, ebp
.text:00403A18                 jnz     short loc_4039AB ; jumptable 004033F7 case 0
.text:00403A18                                         ; jumptable 00403D76 case 0
.text:00403A18                                         ; jumptable 00403E48 case 0
.text:00403A1A                 mov     [esp+0BCh+var_8C], 1
.text:00403A22                 mov     eax, [esp+0BCh+var_60]
.text:00403A26                 mov     edx, [esp+0BCh+var_64]
.text:00403A2A                 cmp     eax, edx
.text:00403A2C                 ja      loc_4039AB      ; jumptable 004033F7 case 0
.text:00403A2C                                         ; jumptable 00403D76 case 0
.text:00403A2C                                         ; jumptable 00403E48 case 0
.text:00403A32
.text:00403A32 loc_403A32:                             ; CODE XREF: sub_403180+8BF↓j
.text:00403A32                 mov     esi, [esp+0BCh+var_78]
.text:00403A36                 or      byte ptr [esi+eax*4], 18h
.text:00403A3A                 inc     eax
.text:00403A3B                 cmp     eax, [esp+0BCh+var_64]
.text:00403A3F                 jbe     short loc_403A32
.text:00403A41                 jmp     loc_4039AB      ; jumptable 004033F7 case 0
.text:00403A41                                         ; jumptable 00403D76 case 0
.text:00403A41                                         ; jumptable 00403E48 case 0
.text:00403A46 ; ---------------------------------------------------------------------------
.text:00403A46
.text:00403A46 loc_403A46:                             ; CODE XREF: sub_403180+868↑j
.text:00403A46                                         ; sub_403180+8E5↓j
.text:00403A46                 mov     edx, [esp+0BCh+var_40]
.text:00403A4A                 cmp     [esp+0BCh+var_48], edx
.text:00403A4E                 jz      loc_4035D2
.text:00403A54                 mov     [esp+0BCh+var_48], edx
.text:00403A58                 mov     ebx, [esp+0BCh+arg_C]
.text:00403A5F                 cmp     ebx, edx
.text:00403A61                 mov     [esp+0BCh+var_44], ebx
.text:00403A65                 jz      short loc_403A46
.text:00403A67                 jmp     short loc_4039EA
.text:00403A69 ; ---------------------------------------------------------------------------
.text:00403A69
.text:00403A69 loc_403A69:                             ; CODE XREF: sub_403180+85A↑j
.text:00403A69                                         ; sub_403180+914↓j
.text:00403A69                 mov     esi, [esp+0BCh+var_48]
.text:00403A6D                 cmp     [esp+0BCh+var_44], esi
.text:00403A71                 jz      short loc_403AA0
.text:00403A73
.text:00403A73 loc_403A73:                             ; CODE XREF: sub_403180+941↓j
.text:00403A73                 mov     ebx, [esp+0BCh+var_4C]
.text:00403A77                 mov     eax, [esp+0BCh+var_44]
.text:00403A7B                 movzx   edx, byte ptr [ebx]
.text:00403A7E                 inc     ebx
.text:00403A7F                 mov     [esp+0BCh+var_4C], ebx
.text:00403A83                 movzx   ecx, byte ptr [eax]
.text:00403A86                 inc     eax
.text:00403A87                 mov     [esp+0BCh+var_44], eax
.text:00403A8B                 cmp     cl, dl
.text:00403A8D                 jnz     loc_4035D2
.text:00403A93                 dec     ebp
.text:00403A94                 jnz     short loc_403A69
.text:00403A96                 jmp     loc_403A12
.text:00403A96 ; ---------------------------------------------------------------------------
.text:00403A9B                 align 10h
.text:00403AA0
.text:00403AA0 loc_403AA0:                             ; CODE XREF: sub_403180+8F1↑j
.text:00403AA0                                         ; sub_403180+93F↓j
.text:00403AA0                 mov     esi, [esp+0BCh+var_40]
.text:00403AA4                 cmp     [esp+0BCh+var_48], esi
.text:00403AA8                 jz      loc_4035D2
.text:00403AAE                 mov     [esp+0BCh+var_48], esi
.text:00403AB2                 mov     edi, [esp+0BCh+arg_C]
.text:00403AB9                 cmp     edi, esi
.text:00403ABB                 mov     [esp+0BCh+var_44], edi
.text:00403ABF                 jz      short loc_403AA0
.text:00403AC1                 jmp     short loc_403A73
.text:00403AC3 ; ---------------------------------------------------------------------------
.text:00403AC3
.text:00403AC3 loc_403AC3:                             ; CODE XREF: sub_403180:loc_4033F7↑j
.text:00403AC3                                         ; sub_403180+BF6↓j ...
.text:00403AC3                 mov     edi, [esp+0BCh+var_48] ; jumptable 004033F7 case 3
.text:00403AC3                                         ; jumptable 00403D76 case 3
.text:00403AC3                                         ; jumptable 00403E48 case 3
.text:00403AC7                 cmp     [esp+0BCh+var_44], edi
.text:00403ACB                 jz      loc_4053A2
.text:00403AD1
.text:00403AD1 loc_403AD1:                             ; CODE XREF: sub_403180+2243↓j
.text:00403AD1                 mov     eax, [esp+0BCh+arg_0]
.text:00403AD8                 test    byte ptr [eax+0Ch], 40h
.text:00403ADC                 jnz     short loc_403B00
.text:00403ADE                 mov     ebx, [esp+0BCh+var_58]
.text:00403AE2                 test    ebx, ebx
.text:00403AE4                 jz      loc_405396
.text:00403AEA                 mov     esi, [esp+0BCh+var_44]
.text:00403AEE                 mov     edx, [esp+0BCh+var_58]
.text:00403AF2                 movzx   ebp, byte ptr [esi]
.text:00403AF5                 cmp     byte ptr [ebp+edx+0], 0Ah
.text:00403AFA
.text:00403AFA loc_403AFA:                             ; CODE XREF: sub_403180+221D↓j
.text:00403AFA                 jz      loc_4035D2
.text:00403B00
.text:00403B00 loc_403B00:                             ; CODE XREF: sub_403180+95C↑j
.text:00403B00                 mov     ecx, [esp+0BCh+arg_0]
.text:00403B07                 cmp     byte ptr [ecx+0Ch], 0
.text:00403B0B                 jns     short loc_403B2F
.text:00403B0D                 mov     ebx, [esp+0BCh+var_58]
.text:00403B11                 test    ebx, ebx
.text:00403B13                 jz      loc_40538A
.text:00403B19                 mov     edx, [esp+0BCh+var_44]
.text:00403B1D                 mov     eax, [esp+0BCh+var_58]
.text:00403B21                 movzx   ebp, byte ptr [edx]
.text:00403B24                 cmp     byte ptr [ebp+eax+0], 0
.text:00403B29
.text:00403B29 loc_403B29:                             ; CODE XREF: sub_403180+2211↓j
.text:00403B29                 jz      loc_4035D2
.text:00403B2F
.text:00403B2F loc_403B2F:                             ; CODE XREF: sub_403180+98B↑j
.text:00403B2F                 mov     esi, [esp+0BCh+var_8C]
.text:00403B33                 test    esi, esi
.text:00403B35                 jnz     short loc_403B5A
.text:00403B37                 mov     [esp+0BCh+var_8C], 1
.text:00403B3F                 mov     eax, [esp+0BCh+var_60]
.text:00403B43                 mov     ecx, [esp+0BCh+var_64]
.text:00403B47                 cmp     eax, ecx
.text:00403B49                 ja      short loc_403B5A
.text:00403B4B
.text:00403B4B loc_403B4B:                             ; CODE XREF: sub_403180+9D8↓j
.text:00403B4B                 mov     ebx, [esp+0BCh+var_78]
.text:00403B4F                 or      byte ptr [ebx+eax*4], 18h
.text:00403B53                 inc     eax
.text:00403B54                 cmp     eax, [esp+0BCh+var_64]
.text:00403B58                 jbe     short loc_403B4B
.text:00403B5A
.text:00403B5A loc_403B5A:                             ; CODE XREF: sub_403180+9B5↑j
.text:00403B5A                                         ; sub_403180+9C9↑j
.text:00403B5A                 inc     [esp+0BCh+var_44]
.text:00403B5E
.text:00403B5E loc_403B5E:                             ; CODE XREF: sub_403180:loc_403C24↓j
.text:00403B5E                                         ; sub_403180+B8C↓j ...
.text:00403B5E                 mov     edx, [esp+0BCh+var_50]
.text:00403B62                 mov     eax, offset loc_4033F9
.text:00403B67                 cmp     [esp+0BCh+var_4C], edx
.text:00403B6B                 jz      loc_4033F7
.text:00403B71                 mov     esi, [esp+0BCh+var_4C]
.text:00403B75
.text:00403B75 loc_403B75:                             ; CODE XREF: sub_403180+F64↓j
.text:00403B75                 movzx   edi, byte ptr [esi]
.text:00403B78                 inc     esi
.text:00403B79                 mov     [esp+0BCh+var_4C], esi
.text:00403B7D                 mov     eax, ds:(jpt_403B84-18h)[edi*4] ; switch 2 cases
.text:00403B84                 jmp     eax             ; switch jump
.text:00403B86 ; ---------------------------------------------------------------------------
.text:00403B86                 mov     edx, [esp+0BCh+arg_8]
.text:00403B8D                 test    edx, edx
.text:00403B8F                 jz      loc_403C62
.text:00403B95                 mov     edi, [esp+0BCh+arg_4]
.text:00403B9C                 cmp     [esp+0BCh+var_44], edi
.text:00403BA0
.text:00403BA0 loc_403BA0:                             ; CODE XREF: sub_403180+AED↓j
.text:00403BA0                 jz      loc_4035D2
.text:00403BA6                 mov     ecx, [esp+0BCh+arg_10]
.text:00403BAD                 test    ecx, ecx
.text:00403BAF                 jz      loc_4035D2
.text:00403BB5                 mov     ebp, [esp+0BCh+var_38]
.text:00403BBC                 cmp     [esp+0BCh+var_44], ebp
.text:00403BC0                 jz      loc_4035D2
.text:00403BC6                 mov     edx, [esp+0BCh+var_44]
.text:00403BCA                 dec     edx
.text:00403BCB                 cmp     edx, [esp+0BCh+var_34]
.text:00403BD2                 jz      loc_403C56
.text:00403BD8                 mov     ebx, [esp+0BCh+arg_C]
.text:00403BDF                 dec     ebx
.text:00403BE0                 cmp     edx, ebx
.text:00403BE2                 jz      short loc_403C49
.text:00403BE4                 mov     edi, [esp+0BCh+var_44]
.text:00403BE8                 movzx   eax, byte ptr [edi-1]
.text:00403BEC
.text:00403BEC loc_403BEC:                             ; CODE XREF: sub_403180+AD4↓j
.text:00403BEC                                         ; sub_403180+AE0↓j
.text:00403BEC                 cmp     ds:byte_411140[eax], 1
.text:00403BF3                 mov     eax, [esp+0BCh+var_34]
.text:00403BFA                 setz    dl
.text:00403BFD                 cmp     [esp+0BCh+var_44], eax
.text:00403C01                 jz      short loc_403C3D
.text:00403C03                 mov     ebp, [esp+0BCh+arg_C]
.text:00403C0A                 dec     ebp
.text:00403C0B                 cmp     [esp+0BCh+var_44], ebp
.text:00403C0F                 jz      short loc_403C30
.text:00403C11                 mov     esi, [esp+0BCh+var_44]
.text:00403C15                 movzx   eax, byte ptr [esi]
.text:00403C18
.text:00403C18 loc_403C18:                             ; CODE XREF: sub_403180+ABB↓j
.text:00403C18                                         ; sub_403180+AC7↓j
.text:00403C18                 cmp     ds:byte_411140[eax], 1
.text:00403C1F                 setz    cl
.text:00403C22                 cmp     dl, cl
.text:00403C24
.text:00403C24 loc_403C24:                             ; CODE XREF: sub_403180+1A07↓j
.text:00403C24                 jz      loc_403B5E
.text:00403C2A                 jmp     loc_4035D2
.text:00403C2A ; ---------------------------------------------------------------------------
.text:00403C2F                 align 10h
.text:00403C30
.text:00403C30 loc_403C30:                             ; CODE XREF: sub_403180+A8F↑j
.text:00403C30                 mov     ebx, [esp+0BCh+var_34]
.text:00403C37                 movzx   eax, byte ptr [ebx-1]
.text:00403C3B                 jmp     short loc_403C18
.text:00403C3D ; ---------------------------------------------------------------------------
.text:00403C3D
.text:00403C3D loc_403C3D:                             ; CODE XREF: sub_403180+A81↑j
.text:00403C3D                 mov     ecx, [esp+0BCh+arg_C]
.text:00403C44                 movzx   eax, byte ptr [ecx]
.text:00403C47                 jmp     short loc_403C18
.text:00403C49 ; ---------------------------------------------------------------------------
.text:00403C49
.text:00403C49 loc_403C49:                             ; CODE XREF: sub_403180+A62↑j
.text:00403C49                 mov     edx, [esp+0BCh+var_34]
.text:00403C50                 movzx   eax, byte ptr [edx-1]
.text:00403C54                 jmp     short loc_403BEC
.text:00403C56 ; ---------------------------------------------------------------------------
.text:00403C56
.text:00403C56 loc_403C56:                             ; CODE XREF: sub_403180+A52↑j
.text:00403C56                 mov     esi, [esp+0BCh+arg_C]
.text:00403C5D                 movzx   eax, byte ptr [esi]
.text:00403C60                 jmp     short loc_403BEC
.text:00403C62 ; ---------------------------------------------------------------------------
.text:00403C62
.text:00403C62 loc_403C62:                             ; CODE XREF: sub_403180+A0F↑j
.text:00403C62                 mov     eax, [esp+0BCh+arg_C]
.text:00403C69                 cmp     [esp+0BCh+var_44], eax
.text:00403C6D                 jmp     loc_403BA0
.text:00403C72 ; ---------------------------------------------------------------------------
.text:00403C72                 mov     esi, [esp+0BCh+arg_8]
.text:00403C79                 test    esi, esi
.text:00403C7B                 jz      loc_40537A
.text:00403C81                 mov     ebp, [esp+0BCh+arg_4]
.text:00403C88                 cmp     [esp+0BCh+var_44], ebp
.text:00403C8C
.text:00403C8C loc_403C8C:                             ; CODE XREF: sub_403180+2205↓j
.text:00403C8C                 jz      loc_403D50
.text:00403C92                 mov     edi, [esp+0BCh+arg_10]
.text:00403C99                 test    edi, edi
.text:00403C9B                 jz      loc_403D50
.text:00403CA1                 mov     edx, [esp+0BCh+var_38]
.text:00403CA8                 cmp     [esp+0BCh+var_44], edx
.text:00403CAC                 jz      loc_403D50
.text:00403CB2                 mov     edx, [esp+0BCh+var_44]
.text:00403CB6                 dec     edx
.text:00403CB7                 cmp     edx, [esp+0BCh+var_34]
.text:00403CBE                 jz      short loc_403D3D
.text:00403CC0                 mov     esi, [esp+0BCh+arg_C]
.text:00403CC7                 dec     esi
.text:00403CC8                 cmp     edx, esi
.text:00403CCA                 jz      short loc_403D30
.text:00403CCC                 mov     ebx, [esp+0BCh+var_44]
.text:00403CD0                 movzx   eax, byte ptr [ebx-1]
.text:00403CD4
.text:00403CD4 loc_403CD4:                             ; CODE XREF: sub_403180+BBB↓j
.text:00403CD4                                         ; sub_403180+BC7↓j
.text:00403CD4                 cmp     ds:byte_411140[eax], 1
.text:00403CDB                 mov     eax, [esp+0BCh+var_34]
.text:00403CE2                 setz    dl
.text:00403CE5                 cmp     [esp+0BCh+var_44], eax
.text:00403CE9                 jz      short loc_403D24
.text:00403CEB                 mov     ecx, [esp+0BCh+arg_C]
.text:00403CF2                 dec     ecx
.text:00403CF3                 cmp     [esp+0BCh+var_44], ecx
.text:00403CF7                 jz      short loc_403D17
.text:00403CF9                 mov     esi, [esp+0BCh+var_44]
.text:00403CFD                 movzx   eax, byte ptr [esi]
.text:00403D00
.text:00403D00 loc_403D00:                             ; CODE XREF: sub_403180+BA2↓j
.text:00403D00                                         ; sub_403180+BAE↓j
.text:00403D00                 cmp     ds:byte_411140[eax], 1
.text:00403D07                 setz    bl
.text:00403D0A                 cmp     dl, bl
.text:00403D0C                 jnz     loc_403B5E
.text:00403D12                 jmp     loc_4035D2
.text:00403D17 ; ---------------------------------------------------------------------------
.text:00403D17
.text:00403D17 loc_403D17:                             ; CODE XREF: sub_403180+B77↑j
.text:00403D17                 mov     ebp, [esp+0BCh+var_34]
.text:00403D1E                 movzx   eax, byte ptr [ebp-1]
.text:00403D22                 jmp     short loc_403D00
.text:00403D24 ; ---------------------------------------------------------------------------
.text:00403D24
.text:00403D24 loc_403D24:                             ; CODE XREF: sub_403180+B69↑j
.text:00403D24                 mov     edi, [esp+0BCh+arg_C]
.text:00403D2B                 movzx   eax, byte ptr [edi]
.text:00403D2E                 jmp     short loc_403D00
.text:00403D30 ; ---------------------------------------------------------------------------
.text:00403D30
.text:00403D30 loc_403D30:                             ; CODE XREF: sub_403180+B4A↑j
.text:00403D30                 mov     ebp, [esp+0BCh+var_34]
.text:00403D37                 movzx   eax, byte ptr [ebp-1]
.text:00403D3B                 jmp     short loc_403CD4
.text:00403D3D ; ---------------------------------------------------------------------------
.text:00403D3D
.text:00403D3D loc_403D3D:                             ; CODE XREF: sub_403180+B3E↑j
.text:00403D3D                 mov     ecx, [esp+0BCh+arg_C]
.text:00403D44                 movzx   eax, byte ptr [ecx]
.text:00403D47                 jmp     short loc_403CD4
.text:00403D47 ; ---------------------------------------------------------------------------
.text:00403D49                 align 10h
.text:00403D50
.text:00403D50 loc_403D50:                             ; CODE XREF: sub_403180:loc_403C8C↑j
.text:00403D50                                         ; sub_403180+B1B↑j ...
.text:00403D50                 mov     ebp, [esp+0BCh+var_50]
.text:00403D54                 mov     eax, offset loc_4033F9
.text:00403D59                 cmp     [esp+0BCh+var_4C], ebp
.text:00403D5D                 jz      loc_4033F7
.text:00403D63                 mov     ebx, [esp+0BCh+var_4C]
.text:00403D67                 movzx   esi, byte ptr [ebx]
.text:00403D6A                 inc     ebx
.text:00403D6B                 mov     [esp+0BCh+var_4C], ebx
.text:00403D6F                 mov     eax, ds:jpt_4033F7[esi*4] ; switch 6 cases
.text:00403D76                 jmp     eax             ; switch jump
.text:00403D78 ; ---------------------------------------------------------------------------
.text:00403D78                 mov     ecx, [esp+0BCh+arg_8]
.text:00403D7F                 test    ecx, ecx
.text:00403D81                 jz      loc_40536A
.text:00403D87                 mov     eax, [esp+0BCh+arg_4]
.text:00403D8E                 cmp     [esp+0BCh+var_44], eax
.text:00403D92
.text:00403D92 loc_403D92:                             ; CODE XREF: sub_403180+21F5↓j
.text:00403D92                 jz      loc_4035D2
.text:00403D98                 mov     edi, [esp+0BCh+arg_10]
.text:00403D9F                 test    edi, edi
.text:00403DA1                 jz      loc_4035D2
.text:00403DA7                 mov     edx, [esp+0BCh+var_44]
.text:00403DAB                 dec     edx
.text:00403DAC                 cmp     edx, [esp+0BCh+var_34]
.text:00403DB3                 jz      loc_40535A
.text:00403DB9                 mov     ebx, [esp+0BCh+arg_C]
.text:00403DC0                 dec     ebx
.text:00403DC1                 cmp     edx, ebx
.text:00403DC3                 jz      loc_40534A
.text:00403DC9                 mov     ecx, [esp+0BCh+var_44]
.text:00403DCD                 movzx   eax, byte ptr [ecx-1]
.text:00403DD1
.text:00403DD1 loc_403DD1:                             ; CODE XREF: sub_403180+21D5↓j
.text:00403DD1                                         ; sub_403180+21E5↓j
.text:00403DD1                 cmp     ds:byte_411140[eax], 1
.text:00403DD8                 jnz     loc_4035D2
.text:00403DDE                 mov     eax, [esp+0BCh+var_38]
.text:00403DE5                 cmp     [esp+0BCh+var_44], eax
.text:00403DE9                 jz      short loc_403E22
.text:00403DEB                 mov     edx, [esp+0BCh+var_34]
.text:00403DF2                 cmp     [esp+0BCh+var_44], edx
.text:00403DF6                 jz      loc_40533B
.text:00403DFC                 mov     ebp, [esp+0BCh+arg_C]
.text:00403E03                 dec     ebp
.text:00403E04                 cmp     [esp+0BCh+var_44], ebp
.text:00403E08                 jz      loc_40532B
.text:00403E0E                 mov     esi, [esp+0BCh+var_44]
.text:00403E12                 movzx   eax, byte ptr [esi]
.text:00403E15
.text:00403E15 loc_403E15:                             ; CODE XREF: sub_403180+21B6↓j
.text:00403E15                                         ; sub_403180+21C5↓j
.text:00403E15                 cmp     ds:byte_411140[eax], 1
.text:00403E1C                 jz      loc_4035D2
.text:00403E22
.text:00403E22 loc_403E22:                             ; CODE XREF: sub_403180+C69↑j
.text:00403E22                                         ; sub_403180+E23↓j ...
.text:00403E22                 mov     ecx, [esp+0BCh+var_50]
.text:00403E26                 mov     eax, offset loc_4033F9
.text:00403E2B                 cmp     [esp+0BCh+var_4C], ecx
.text:00403E2F                 jz      loc_4033F7
.text:00403E35                 mov     edi, [esp+0BCh+var_4C]
.text:00403E39                 movzx   edx, byte ptr [edi]
.text:00403E3C                 inc     edi
.text:00403E3D                 mov     [esp+0BCh+var_4C], edi
.text:00403E41                 mov     eax, ds:jpt_4033F7[edx*4] ; switch 6 cases
.text:00403E48                 jmp     eax             ; switch jump
.text:00403E4A ; ---------------------------------------------------------------------------
.text:00403E4A                 mov     ebp, [esp+0BCh+var_38]
.text:00403E51                 cmp     [esp+0BCh+var_44], ebp
.text:00403E55                 jz      loc_4035D2
.text:00403E5B                 mov     eax, [esp+0BCh+var_34]
.text:00403E62                 cmp     [esp+0BCh+var_44], eax
.text:00403E66                 jz      loc_403F27
.text:00403E6C                 mov     esi, [esp+0BCh+arg_C]
.text:00403E73                 dec     esi
.text:00403E74                 cmp     [esp+0BCh+var_44], esi
.text:00403E78                 jz      loc_403F17
.text:00403E7E                 mov     edx, [esp+0BCh+var_44]
.text:00403E82                 movzx   eax, byte ptr [edx]
.text:00403E85
.text:00403E85 loc_403E85:                             ; CODE XREF: sub_403180+DA2↓j
.text:00403E85                                         ; sub_403180+DB1↓j
.text:00403E85                 cmp     ds:byte_411140[eax], 1
.text:00403E8C                 jnz     loc_4035D2
.text:00403E92                 mov     edi, [esp+0BCh+arg_8]
.text:00403E99                 test    edi, edi
.text:00403E9B                 jz      short loc_403F0A
.text:00403E9D                 mov     ebp, [esp+0BCh+arg_4]
.text:00403EA4                 cmp     [esp+0BCh+var_44], ebp
.text:00403EA8
.text:00403EA8 loc_403EA8:                             ; CODE XREF: sub_403180+D95↓j
.text:00403EA8                 jz      loc_403D50
.text:00403EAE                 mov     ebx, [esp+0BCh+arg_10]
.text:00403EB5                 test    ebx, ebx
.text:00403EB7                 jz      loc_403D50
.text:00403EBD                 mov     edx, [esp+0BCh+var_44]
.text:00403EC1                 dec     edx
.text:00403EC2                 cmp     edx, [esp+0BCh+var_34]
.text:00403EC9                 jz      short loc_403EFE
.text:00403ECB                 mov     ecx, [esp+0BCh+arg_C]
.text:00403ED2                 dec     ecx
.text:00403ED3                 cmp     edx, ecx
.text:00403ED5                 jz      short loc_403EF1
.text:00403ED7                 mov     edi, [esp+0BCh+var_44]
.text:00403EDB                 movzx   eax, byte ptr [edi-1]
.text:00403EDF
.text:00403EDF loc_403EDF:                             ; CODE XREF: sub_403180+D7C↓j
.text:00403EDF                                         ; sub_403180+D88↓j
.text:00403EDF                 cmp     ds:byte_411140[eax], 1
.text:00403EE6                 jnz     loc_403D50
.text:00403EEC                 jmp     loc_4035D2
.text:00403EF1 ; ---------------------------------------------------------------------------
.text:00403EF1
.text:00403EF1 loc_403EF1:                             ; CODE XREF: sub_403180+D55↑j
.text:00403EF1                 mov     edx, [esp+0BCh+var_34]
.text:00403EF8                 movzx   eax, byte ptr [edx-1]
.text:00403EFC                 jmp     short loc_403EDF
.text:00403EFE ; ---------------------------------------------------------------------------
.text:00403EFE
.text:00403EFE loc_403EFE:                             ; CODE XREF: sub_403180+D49↑j
.text:00403EFE                 mov     esi, [esp+0BCh+arg_C]
.text:00403F05                 movzx   eax, byte ptr [esi]
.text:00403F08                 jmp     short loc_403EDF
.text:00403F0A ; ---------------------------------------------------------------------------
.text:00403F0A
.text:00403F0A loc_403F0A:                             ; CODE XREF: sub_403180+D1B↑j
.text:00403F0A                 mov     eax, [esp+0BCh+arg_C]
.text:00403F11                 cmp     [esp+0BCh+var_44], eax
.text:00403F15                 jmp     short loc_403EA8
.text:00403F17 ; ---------------------------------------------------------------------------
.text:00403F17
.text:00403F17 loc_403F17:                             ; CODE XREF: sub_403180+CF8↑j
.text:00403F17                 mov     ecx, [esp+0BCh+var_34]
.text:00403F1E                 movzx   eax, byte ptr [ecx-1]
.text:00403F22                 jmp     loc_403E85
.text:00403F27 ; ---------------------------------------------------------------------------
.text:00403F27
.text:00403F27 loc_403F27:                             ; CODE XREF: sub_403180+CE6↑j
.text:00403F27                 mov     ebx, [esp+0BCh+arg_C]
.text:00403F2E                 movzx   eax, byte ptr [ebx]
.text:00403F31                 jmp     loc_403E85
.text:00403F36 ; ---------------------------------------------------------------------------
.text:00403F36                 mov     ebp, [esp+0BCh+var_48]
.text:00403F3A                 cmp     [esp+0BCh+var_44], ebp
.text:00403F3E                 jz      loc_403FC1
.text:00403F44
.text:00403F44 loc_403F44:                             ; CODE XREF: sub_403180+E62↓j
.text:00403F44                 mov     esi, [esp+0BCh+var_34]
.text:00403F4B                 cmp     [esp+0BCh+var_44], esi
.text:00403F4F                 jz      short loc_403FB5
.text:00403F51                 mov     edi, [esp+0BCh+arg_C]
.text:00403F58                 dec     edi
.text:00403F59                 cmp     [esp+0BCh+var_44], edi
.text:00403F5D                 jz      short loc_403FA8
.text:00403F5F                 mov     ebp, [esp+0BCh+var_44]
.text:00403F63                 movzx   eax, byte ptr [ebp+0]
.text:00403F67
.text:00403F67 loc_403F67:                             ; CODE XREF: sub_403180+E33↓j
.text:00403F67                                         ; sub_403180+E3F↓j
.text:00403F67                 cmp     ds:byte_411140[eax], 1
.text:00403F6E                 jz      loc_4035D2
.text:00403F74                 mov     eax, [esp+0BCh+var_8C]
.text:00403F78                 test    eax, eax
.text:00403F7A                 jnz     short loc_403F9F
.text:00403F7C                 mov     [esp+0BCh+var_8C], 1
.text:00403F84                 mov     eax, [esp+0BCh+var_60]
.text:00403F88                 mov     ebx, [esp+0BCh+var_64]
.text:00403F8C                 cmp     eax, ebx
.text:00403F8E                 ja      short loc_403F9F
.text:00403F90
.text:00403F90 loc_403F90:                             ; CODE XREF: sub_403180+E1D↓j
.text:00403F90                 mov     esi, [esp+0BCh+var_78]
.text:00403F94                 or      byte ptr [esi+eax*4], 18h
.text:00403F98                 inc     eax
.text:00403F99                 cmp     eax, [esp+0BCh+var_64]
.text:00403F9D                 jbe     short loc_403F90
.text:00403F9F
.text:00403F9F loc_403F9F:                             ; CODE XREF: sub_403180+DFA↑j
.text:00403F9F                                         ; sub_403180+E0E↑j ...
.text:00403F9F                 inc     [esp+0BCh+var_44]
.text:00403FA3                 jmp     loc_403E22
.text:00403FA8 ; ---------------------------------------------------------------------------
.text:00403FA8
.text:00403FA8 loc_403FA8:                             ; CODE XREF: sub_403180+DDD↑j
.text:00403FA8                 mov     edx, [esp+0BCh+var_34]
.text:00403FAF                 movzx   eax, byte ptr [edx-1]
.text:00403FB3                 jmp     short loc_403F67
.text:00403FB5 ; ---------------------------------------------------------------------------
.text:00403FB5
.text:00403FB5 loc_403FB5:                             ; CODE XREF: sub_403180+DCF↑j
.text:00403FB5                 mov     ecx, [esp+0BCh+arg_C]
.text:00403FBC                 movzx   eax, byte ptr [ecx]
.text:00403FBF                 jmp     short loc_403F67
.text:00403FC1 ; ---------------------------------------------------------------------------
.text:00403FC1
.text:00403FC1 loc_403FC1:                             ; CODE XREF: sub_403180+DBE↑j
.text:00403FC1                                         ; sub_403180+E60↓j
.text:00403FC1                 mov     eax, [esp+0BCh+var_40]
.text:00403FC5                 cmp     [esp+0BCh+var_48], eax
.text:00403FC9                 jz      loc_4035D2
.text:00403FCF                 mov     [esp+0BCh+var_48], eax
.text:00403FD3                 mov     ebx, [esp+0BCh+arg_C]
.text:00403FDA                 cmp     ebx, eax
.text:00403FDC                 mov     [esp+0BCh+var_44], ebx
.text:00403FE0                 jz      short loc_403FC1
.text:00403FE2                 jmp     loc_403F44
.text:00403FE7 ; ---------------------------------------------------------------------------
.text:00403FE7                 mov     eax, [esp+0BCh+var_48]
.text:00403FEB                 cmp     [esp+0BCh+var_44], eax
.text:00403FEF                 jz      loc_404071
.text:00403FF5
.text:00403FF5 loc_403FF5:                             ; CODE XREF: sub_403180+F12↓j
.text:00403FF5                 mov     edx, [esp+0BCh+var_34]
.text:00403FFC                 cmp     [esp+0BCh+var_44], edx
.text:00404000                 jz      short loc_404065
.text:00404002                 mov     ebp, [esp+0BCh+arg_C]
.text:00404009                 dec     ebp
.text:0040400A                 cmp     [esp+0BCh+var_44], ebp
.text:0040400E                 jz      short loc_404058
.text:00404010                 mov     esi, [esp+0BCh+var_44]
.text:00404014                 movzx   eax, byte ptr [esi]
.text:00404017
.text:00404017 loc_404017:                             ; CODE XREF: sub_403180+EE3↓j
.text:00404017                                         ; sub_403180+EEF↓j
.text:00404017                 cmp     ds:byte_411140[eax], 1
.text:0040401E                 jnz     loc_4035D2
.text:00404024                 mov     eax, [esp+0BCh+var_8C]
.text:00404028                 test    eax, eax
.text:0040402A                 jnz     short loc_40404F
.text:0040402C                 mov     [esp+0BCh+var_8C], 1
.text:00404034                 mov     eax, [esp+0BCh+var_60]
.text:00404038                 mov     ecx, [esp+0BCh+var_64]
.text:0040403C                 cmp     eax, ecx
.text:0040403E                 ja      short loc_40404F
.text:00404040
.text:00404040 loc_404040:                             ; CODE XREF: sub_403180+ECD↓j
.text:00404040                 mov     edi, [esp+0BCh+var_78]
.text:00404044                 or      byte ptr [edi+eax*4], 18h
.text:00404048                 inc     eax
.text:00404049                 cmp     eax, [esp+0BCh+var_64]
.text:0040404D                 jbe     short loc_404040
.text:0040404F
.text:0040404F loc_40404F:                             ; CODE XREF: sub_403180+EAA↑j
.text:0040404F                                         ; sub_403180+EBE↑j
.text:0040404F                 inc     [esp+0BCh+var_44]
.text:00404053                 jmp     loc_4039AB      ; jumptable 004033F7 case 0
.text:00404053                                         ; jumptable 00403D76 case 0
.text:00404053                                         ; jumptable 00403E48 case 0
.text:00404058 ; ---------------------------------------------------------------------------
.text:00404058
.text:00404058 loc_404058:                             ; CODE XREF: sub_403180+E8E↑j
.text:00404058                 mov     ebx, [esp+0BCh+var_34]
.text:0040405F                 movzx   eax, byte ptr [ebx-1]
.text:00404063                 jmp     short loc_404017
.text:00404065 ; ---------------------------------------------------------------------------
.text:00404065
.text:00404065 loc_404065:                             ; CODE XREF: sub_403180+E80↑j
.text:00404065                 mov     edi, [esp+0BCh+arg_C]
.text:0040406C                 movzx   eax, byte ptr [edi]
.text:0040406F                 jmp     short loc_404017
.text:00404071 ; ---------------------------------------------------------------------------
.text:00404071
.text:00404071 loc_404071:                             ; CODE XREF: sub_403180+E6F↑j
.text:00404071                                         ; sub_403180+F10↓j
.text:00404071                 mov     ebx, [esp+0BCh+var_40]
.text:00404075                 cmp     [esp+0BCh+var_48], ebx
.text:00404079                 jz      loc_4035D2
.text:0040407F                 mov     [esp+0BCh+var_48], ebx
.text:00404083                 mov     ecx, [esp+0BCh+arg_C]
.text:0040408A                 cmp     ecx, ebx
.text:0040408C                 mov     [esp+0BCh+var_44], ecx
.text:00404090                 jz      short loc_404071
.text:00404092                 jmp     loc_403FF5
.text:00404097 ; ---------------------------------------------------------------------------
.text:00404097                 mov     esi, [esp+0BCh+var_4C]
.text:0040409B                 movsx   ecx, byte ptr [esi+1]
.text:0040409F                 movzx   eax, byte ptr [esi]
.text:004040A2                 add     esi, 2
.text:004040A5                 mov     ebp, esi
.text:004040A7                 shl     ecx, 8
.text:004040AA                 lea     edi, [ecx+eax]
.text:004040AD                 add     ebp, edi
.text:004040AF                 mov     [esp+0BCh+var_30], ebp
.text:004040B6                 mov     eax, offset loc_4033F9
.text:004040BB                 movsx   edx, byte ptr [esi+1]
.text:004040BF                 movzx   ecx, byte ptr [esi]
.text:004040C2                 add     esi, 2
.text:004040C5                 mov     [esp+0BCh+var_4C], esi
.text:004040C9                 shl     edx, 8
.text:004040CC                 add     ecx, edx
.text:004040CE                 mov     [ebp+0], cl
.text:004040D1                 mov     edi, [esp+0BCh+var_30]
.text:004040D8                 sar     ecx, 8
.text:004040DB                 mov     [edi+1], cl
.text:004040DE                 mov     edx, [esp+0BCh+var_50]
.text:004040E2                 cmp     esi, edx
.text:004040E4                 jnz     loc_403B75
.text:004040EA                 jmp     loc_4033F7
.text:004040EF ; ---------------------------------------------------------------------------
.text:004040EF                 mov     esi, [esp+0BCh+var_4C]
.text:004040F3                 movsx   edi, byte ptr [esi+3]
.text:004040F7                 movzx   ebp, byte ptr [esi+2]
.text:004040FB                 shl     edi, 8
.text:004040FE                 add     ebp, edi
.text:00404100                 jnz     short loc_40410C
.text:00404102                 add     [esp+0BCh+var_4C], 4
.text:00404107                 jmp     loc_4039AB      ; jumptable 004033F7 case 0
.text:00404107                                         ; jumptable 00403D76 case 0
.text:00404107                                         ; jumptable 00403E48 case 0
.text:0040410C ; ---------------------------------------------------------------------------
.text:0040410C
.text:0040410C loc_40410C:                             ; CODE XREF: sub_403180+F80↑j
.text:0040410C                 dec     ebp
.text:0040410D                 mov     ebx, ebp
.text:0040410F                 sar     ebp, 8
.text:00404112                 mov     [esi+2], bl
.text:00404115                 mov     ecx, ebp
.text:00404117                 mov     [esi+3], cl
.text:0040411A
.text:0040411A loc_40411A:                             ; CODE XREF: sub_403180+14FE↓j
.text:0040411A                                         ; sub_403180+15A0↓j ...
.text:0040411A                 mov     ebx, [esp+0BCh+var_4C]
.text:0040411E                 movsx   ecx, byte ptr [ebx+1]
.text:00404122                 movzx   edx, byte ptr [ebx]
.text:00404125                 shl     ecx, 8
.text:00404128                 lea     esi, [ecx+edx]
.text:0040412B                 lea     edi, [esi+ebx+2]
.text:0040412F                 mov     [esp+0BCh+var_4C], edi
.text:00404133                 jmp     loc_403B5E
.text:00404138 ; ---------------------------------------------------------------------------
.text:00404138                 mov     ecx, [esp+0BCh+var_4C]
.text:0040413C                 movsx   ebx, byte ptr [ecx+3]
.text:00404140                 movzx   ebp, byte ptr [ecx+2]
.text:00404144                 shl     ebx, 8
.text:00404147                 add     ebp, ebx
.text:00404149                 test    ebp, ebp
.text:0040414B                 jle     short loc_404169
.text:0040414D                 dec     ebp
.text:0040414E                 add     ecx, 2
.text:00404151                 mov     eax, ebp
.text:00404153                 mov     [ecx], al
.text:00404155                 sar     ebp, 8
.text:00404158                 mov     edx, ebp
.text:0040415A                 mov     [ecx+1], dl
.text:0040415D                 add     ecx, 2
.text:00404160                 mov     [esp+0BCh+var_4C], ecx
.text:00404164                 jmp     loc_4039AB      ; jumptable 004033F7 case 0
.text:00404164                                         ; jumptable 00403D76 case 0
.text:00404164                                         ; jumptable 00403E48 case 0
.text:00404169 ; ---------------------------------------------------------------------------
.text:00404169
.text:00404169 loc_404169:                             ; CODE XREF: sub_403180+FCB↑j
.text:00404169                 test    ebp, ebp
.text:0040416B                 jnz     loc_4039AB      ; jumptable 004033F7 case 0
.text:0040416B                                         ; jumptable 00403D76 case 0
.text:0040416B                                         ; jumptable 00403E48 case 0
.text:00404171                 mov     ebp, [esp+0BCh+var_4C]
.text:00404175                 mov     byte ptr [ebp+2], 0
.text:00404179                 mov     byte ptr [ebp+3], 0
.text:0040417D
.text:0040417D loc_40417D:                             ; CODE XREF: sub_403180+191C↓j
.text:0040417D                 mov     edx, [esp+0BCh+var_4C]
.text:00404181                 movsx   ecx, byte ptr [edx+1]
.text:00404185                 movzx   ebp, byte ptr [edx]
.text:00404188                 add     edx, 2
.text:0040418B                 mov     ebx, edx
.text:0040418D                 mov     [esp+0BCh+var_4C], edx
.text:00404191                 shl     ecx, 8
.text:00404194                 add     ebp, ecx
.text:00404196                 cmp     edx, [esp+0BCh+var_50]
.text:0040419A                 mov     [esp+0BCh+var_30], edx
.text:004041A1                 jnb     short loc_4041D2
.text:004041A3                 cmp     byte ptr [edx], 0
.text:004041A6                 jnz     short loc_4041C3
.text:004041A8                 lea     eax, [edx+1]
.text:004041AB
.text:004041AB loc_4041AB:                             ; CODE XREF: sub_403180+1041↓j
.text:004041AB                 mov     [esp+0BCh+var_30], eax
.text:004041B2                 mov     ebx, eax
.text:004041B4                 lea     eax, [eax+1]
.text:004041B7                 cmp     ebx, [esp+0BCh+var_50]
.text:004041BB                 jnb     short loc_4041D2
.text:004041BD                 cmp     byte ptr [eax-1], 0
.text:004041C1                 jz      short loc_4041AB
.text:004041C3
.text:004041C3 loc_4041C3:                             ; CODE XREF: sub_403180+1026↑j
.text:004041C3                 cmp     ebx, [esp+0BCh+var_50]
.text:004041C7                 jnb     short loc_4041D2
.text:004041C9                 cmp     byte ptr [ebx], 6
.text:004041CC                 jz      loc_40435A
.text:004041D2
.text:004041D2 loc_4041D2:                             ; CODE XREF: sub_403180+1021↑j
.text:004041D2                                         ; sub_403180+103B↑j ...
.text:004041D2                 mov     edi, [esp+0BCh+var_60]
.text:004041D6                 mov     ebx, [esp+0BCh+var_64]
.text:004041DA                 mov     ecx, [esp+0BCh+var_28]
.text:004041E1                 mov     esi, [esp+0BCh+var_24]
.text:004041E8                 sub     ebx, edi
.text:004041EA                 mov     edx, ecx
.text:004041EC                 lea     edi, [ebx+ebx]
.text:004041EF                 sub     edx, esi
.text:004041F1                 lea     eax, [ebx+edi+7]
.text:004041F5                 cmp     edx, eax
.text:004041F7                 jnb     short loc_40426D
.text:004041F9                 mov     edi, eax
.text:004041FB
.text:004041FB loc_4041FB:                             ; CODE XREF: sub_403180+10EB↓j
.text:004041FB                 mov     edx, dword_410050
.text:00404201                 lea     ebx, [edx+edx*8]
.text:00404204                 lea     esi, [edx+ebx*2]
.text:00404207                 cmp     ecx, esi
.text:00404209                 ja      loc_403901
.text:0040420F                 lea     edx, ds:0[ecx*8]
.text:00404216                 mov     [esp+0BCh+Size], edx ; Size
.text:00404219                 call    malloc
.text:0040421E                 mov     [esp+0BCh+Size], eax ; void *
.text:00404221                 mov     ebx, [esp+0BCh+var_28]
.text:00404228                 mov     esi, [esp+0BCh+Src]
.text:0040422F                 shl     ebx, 2
.text:00404232                 mov     [esp+0BCh+var_B4], ebx ; Size
.text:00404236                 mov     [esp+0BCh+var_B8], esi ; Src
.text:0040423A                 call    memcpy
.text:0040423F                 mov     [esp+0BCh+Src], eax
.text:00404246                 test    eax, eax
.text:00404248                 jz      loc_403901
.text:0040424E                 mov     ebx, [esp+0BCh+var_28]
.text:00404255                 mov     esi, [esp+0BCh+var_24]
.text:0040425C                 add     ebx, ebx
.text:0040425E                 mov     [esp+0BCh+var_28], ebx
.text:00404265                 mov     ecx, ebx
.text:00404267                 sub     ebx, esi
.text:00404269                 cmp     ebx, edi
.text:0040426B                 jb      short loc_4041FB
.text:0040426D
.text:0040426D loc_40426D:                             ; CODE XREF: sub_403180+1077↑j
.text:0040426D                 mov     ecx, [esp+0BCh+var_60]
.text:00404271                 mov     eax, [esp+0BCh+var_64]
.text:00404275                 cmp     ecx, eax
.text:00404277                 ja      loc_404351
.text:0040427D                 mov     ebx, [esp+0BCh+Src]
.text:00404284
.text:00404284 loc_404284:                             ; CODE XREF: sub_403180+1162↓j
.text:00404284                 mov     eax, [esp+0BCh+var_68]
.text:00404288                 mov     edi, [eax+ecx*4]
.text:0040428B                 mov     [ebx+esi*4], edi
.text:0040428E                 mov     edx, [esp+0BCh+var_6C]
.text:00404292                 mov     edi, [esp+0BCh+var_24]
.text:00404299                 mov     ebx, [esp+0BCh+Src]
.text:004042A0                 mov     esi, [edx+ecx*4]
.text:004042A3                 inc     edi
.text:004042A4                 mov     [esp+0BCh+var_24], edi
.text:004042AB                 mov     [ebx+edi*4], esi
.text:004042AE                 mov     edi, [esp+0BCh+var_24]
.text:004042B5                 mov     eax, [esp+0BCh+var_78]
.text:004042B9                 mov     ebx, [esp+0BCh+Src]
.text:004042C0                 inc     edi
.text:004042C1                 mov     [esp+0BCh+var_24], edi
.text:004042C8                 mov     esi, [eax+ecx*4]
.text:004042CB                 inc     ecx
.text:004042CC                 mov     [ebx+edi*4], esi
.text:004042CF                 mov     esi, [esp+0BCh+var_24]
.text:004042D6                 inc     esi
.text:004042D7                 cmp     ecx, [esp+0BCh+var_64]
.text:004042DB                 mov     [esp+0BCh+var_24], esi
.text:004042E2                 jbe     short loc_404284
.text:004042E4
.text:004042E4 loc_4042E4:                             ; CODE XREF: sub_403180+11D8↓j
.text:004042E4                 mov     eax, [esp+0BCh+var_60]
.text:004042E8                 mov     [ebx+esi*4], eax
.text:004042EB                 mov     ecx, [esp+0BCh+var_24]
.text:004042F2                 mov     edi, [esp+0BCh+var_64]
.text:004042F6                 mov     edx, [esp+0BCh+Src]
.text:004042FD                 inc     ecx
.text:004042FE                 mov     [esp+0BCh+var_24], ecx
.text:00404305                 mov     [edx+ecx*4], edi
.text:00404308                 mov     eax, [esp+0BCh+var_24]
.text:0040430F                 mov     esi, [esp+0BCh+var_4C]
.text:00404313                 mov     edi, [esp+0BCh+Src]
.text:0040431A                 inc     eax
.text:0040431B                 add     esi, ebp
.text:0040431D                 mov     [esp+0BCh+var_24], eax
.text:00404324                 mov     [edi+eax*4], esi
.text:00404327                 mov     ecx, [esp+0BCh+var_24]
.text:0040432E                 mov     ebp, [esp+0BCh+Src]
.text:00404335                 mov     ebx, [esp+0BCh+var_44]
.text:00404339                 inc     ecx
.text:0040433A                 mov     [esp+0BCh+var_24], ecx
.text:00404341                 mov     [ebp+ecx*4+0], ebx
.text:00404345                 inc     [esp+0BCh+var_24]
.text:0040434C                 jmp     loc_4039AB      ; jumptable 004033F7 case 0
.text:0040434C                                         ; jumptable 00403D76 case 0
.text:0040434C                                         ; jumptable 00403E48 case 0
.text:00404351 ; ---------------------------------------------------------------------------
.text:00404351
.text:00404351 loc_404351:                             ; CODE XREF: sub_403180+10F7↑j
.text:00404351                 mov     ebx, [esp+0BCh+Src]
.text:00404358                 jmp     short loc_4042E4
.text:0040435A ; ---------------------------------------------------------------------------
.text:0040435A
.text:0040435A loc_40435A:                             ; CODE XREF: sub_403180+104C↑j
.text:0040435A                 movzx   edx, byte ptr [ebx+1]
.text:0040435E                 movzx   edi, byte ptr [ebx+2]
.text:00404362                 cmp     [esp+0BCh+var_60], 101h
.text:0040436A                 lea     ebx, [edi+edx]
.text:0040436D                 mov     [esp+0BCh+var_64], ebx
.text:00404371                 jnz     loc_4041D2
.text:00404377                 mov     [esp+0BCh+var_60], edx
.text:0040437B                 jmp     loc_4041D2
.text:00404380 ; ---------------------------------------------------------------------------
.text:00404380                 mov     eax, [esp+0BCh+var_60]
.text:00404384                 mov     edx, [esp+0BCh+var_64]
.text:00404388                 mov     ecx, [esp+0BCh+var_28]
.text:0040438F                 mov     esi, [esp+0BCh+var_24]
.text:00404396                 sub     edx, eax
.text:00404398                 mov     ebp, ecx
.text:0040439A                 lea     ebx, [edx+edx]
.text:0040439D                 sub     ebp, esi
.text:0040439F                 lea     eax, [edx+ebx+7]
.text:004043A3                 cmp     ebp, eax
.text:004043A5                 jnb     short loc_40441B
.text:004043A7                 mov     edi, eax
.text:004043A9
.text:004043A9 loc_4043A9:                             ; CODE XREF: sub_403180+1299↓j
.text:004043A9                 mov     edx, dword_410050
.text:004043AF                 lea     ebp, [edx+edx*8]
.text:004043B2                 lea     esi, [edx+ebp*2]
.text:004043B5                 cmp     ecx, esi
.text:004043B7                 ja      loc_403901
.text:004043BD                 lea     ebp, ds:0[ecx*8]
.text:004043C4                 mov     [esp+0BCh+Size], ebp ; Size
.text:004043C7                 call    malloc
.text:004043CC                 mov     [esp+0BCh+Size], eax ; void *
.text:004043CF                 mov     esi, [esp+0BCh+var_28]
.text:004043D6                 mov     ebx, [esp+0BCh+Src]
.text:004043DD                 shl     esi, 2
.text:004043E0                 mov     [esp+0BCh+var_B4], esi ; Size
.text:004043E4                 mov     [esp+0BCh+var_B8], ebx ; Src
.text:004043E8                 call    memcpy
.text:004043ED                 mov     [esp+0BCh+Src], eax
.text:004043F4                 test    eax, eax
.text:004043F6                 jz      loc_403901
.text:004043FC                 mov     edx, [esp+0BCh+var_28]
.text:00404403                 mov     esi, [esp+0BCh+var_24]
.text:0040440A                 add     edx, edx
.text:0040440C                 mov     [esp+0BCh+var_28], edx
.text:00404413                 mov     ecx, edx
.text:00404415                 sub     edx, esi
.text:00404417                 cmp     edx, edi
.text:00404419                 jb      short loc_4043A9
.text:0040441B
.text:0040441B loc_40441B:                             ; CODE XREF: sub_403180+1225↑j
.text:0040441B                 mov     ecx, [esp+0BCh+var_60]
.text:0040441F                 mov     edi, [esp+0BCh+var_64]
.text:00404423                 cmp     ecx, edi
.text:00404425                 ja      loc_4044FD
.text:0040442B                 mov     ebx, [esp+0BCh+Src]
.text:00404432
.text:00404432 loc_404432:                             ; CODE XREF: sub_403180+1310↓j
.text:00404432                 mov     eax, [esp+0BCh+var_68]
.text:00404436                 mov     edi, [eax+ecx*4]
.text:00404439                 mov     [ebx+esi*4], edi
.text:0040443C                 mov     edx, [esp+0BCh+var_6C]
.text:00404440                 mov     edi, [esp+0BCh+var_24]
.text:00404447                 mov     ebx, [esp+0BCh+Src]
.text:0040444E                 mov     ebp, [edx+ecx*4]
.text:00404451                 inc     edi
.text:00404452                 mov     [esp+0BCh+var_24], edi
.text:00404459                 mov     [ebx+edi*4], ebp
.text:0040445C                 mov     ebp, [esp+0BCh+var_24]
.text:00404463                 mov     eax, [esp+0BCh+var_78]
.text:00404467                 mov     ebx, [esp+0BCh+Src]
.text:0040446E                 inc     ebp
.text:0040446F                 mov     [esp+0BCh+var_24], ebp
.text:00404476                 mov     esi, [eax+ecx*4]
.text:00404479                 inc     ecx
.text:0040447A                 mov     [ebx+ebp*4], esi
.text:0040447D                 mov     esi, [esp+0BCh+var_24]
.text:00404484                 inc     esi
.text:00404485                 cmp     ecx, [esp+0BCh+var_64]
.text:00404489                 mov     [esp+0BCh+var_24], esi
.text:00404490                 jbe     short loc_404432
.text:00404492
.text:00404492 loc_404492:                             ; CODE XREF: sub_403180+1384↓j
.text:00404492                 mov     edi, [esp+0BCh+var_60]
.text:00404496                 mov     [ebx+esi*4], edi
.text:00404499                 mov     edx, [esp+0BCh+var_24]
.text:004044A0                 mov     ebp, [esp+0BCh+Src]
.text:004044A7                 mov     esi, [esp+0BCh+var_64]
.text:004044AB                 inc     edx
.text:004044AC                 mov     [esp+0BCh+var_24], edx
.text:004044B3                 mov     [ebp+edx*4+0], esi
.text:004044B7                 mov     ebx, [esp+0BCh+var_24]
.text:004044BE                 mov     ecx, [esp+0BCh+Src]
.text:004044C5                 inc     ebx
.text:004044C6                 mov     [esp+0BCh+var_24], ebx
.text:004044CD                 mov     dword ptr [ecx+ebx*4], 0
.text:004044D4
.text:004044D4 loc_4044D4:                             ; CODE XREF: sub_403180+190E↓j
.text:004044D4                 mov     eax, [esp+0BCh+var_24]
.text:004044DB                 mov     ecx, [esp+0BCh+Src]
.text:004044E2                 inc     eax
.text:004044E3                 mov     [esp+0BCh+var_24], eax
.text:004044EA                 mov     dword ptr [ecx+eax*4], 0
.text:004044F1                 inc     [esp+0BCh+var_24]
.text:004044F8                 jmp     loc_403E22
.text:004044FD ; ---------------------------------------------------------------------------
.text:004044FD
.text:004044FD loc_4044FD:                             ; CODE XREF: sub_403180+12A5↑j
.text:004044FD                 mov     ebx, [esp+0BCh+Src]
.text:00404504                 jmp     short loc_404492
.text:00404506 ; ---------------------------------------------------------------------------
.text:00404506                 mov     eax, [esp+0BCh+var_60]
.text:0040450A                 mov     ebx, [esp+0BCh+var_64]
.text:0040450E                 mov     ecx, [esp+0BCh+var_28]
.text:00404515                 mov     esi, [esp+0BCh+var_24]
.text:0040451C                 sub     ebx, eax
.text:0040451E                 mov     edx, ecx
.text:00404520                 lea     ebp, [ebx+ebx]
.text:00404523                 sub     edx, esi
.text:00404525                 lea     eax, [ebx+ebp+7]
.text:00404529                 cmp     edx, eax
.text:0040452B                 jnb     short loc_4045A1
.text:0040452D                 mov     edi, eax
.text:0040452F
.text:0040452F loc_40452F:                             ; CODE XREF: sub_403180+141F↓j
.text:0040452F                 mov     edx, dword_410050
.text:00404535                 lea     ebx, [edx+edx*8]
.text:00404538                 lea     esi, [edx+ebx*2]
.text:0040453B                 cmp     ecx, esi
.text:0040453D                 ja      loc_403901
.text:00404543                 lea     ebx, ds:0[ecx*8]
.text:0040454A                 mov     [esp+0BCh+Size], ebx ; Size
.text:0040454D                 call    malloc
.text:00404552                 mov     [esp+0BCh+Size], eax ; void *
.text:00404555                 mov     esi, [esp+0BCh+var_28]
.text:0040455C                 mov     ebp, [esp+0BCh+Src]
.text:00404563                 shl     esi, 2
.text:00404566                 mov     [esp+0BCh+var_B4], esi ; Size
.text:0040456A                 mov     [esp+0BCh+var_B8], ebp ; Src
.text:0040456E                 call    memcpy
.text:00404573                 mov     [esp+0BCh+Src], eax
.text:0040457A                 test    eax, eax
.text:0040457C                 jz      loc_403901
.text:00404582                 mov     edx, [esp+0BCh+var_28]
.text:00404589                 mov     esi, [esp+0BCh+var_24]
.text:00404590                 add     edx, edx
.text:00404592                 mov     [esp+0BCh+var_28], edx
.text:00404599                 mov     ecx, edx
.text:0040459B                 sub     edx, esi
.text:0040459D                 cmp     edx, edi
.text:0040459F                 jb      short loc_40452F
.text:004045A1
.text:004045A1 loc_4045A1:                             ; CODE XREF: sub_403180+13AB↑j
.text:004045A1                 mov     ecx, [esp+0BCh+var_60]
.text:004045A5                 mov     edi, [esp+0BCh+var_64]
.text:004045A9                 cmp     ecx, edi
.text:004045AB                 ja      loc_404683
.text:004045B1                 mov     ebx, [esp+0BCh+Src]
.text:004045B8
.text:004045B8 loc_4045B8:                             ; CODE XREF: sub_403180+1496↓j
.text:004045B8                 mov     eax, [esp+0BCh+var_68]
.text:004045BC                 mov     edi, [eax+ecx*4]
.text:004045BF                 mov     [ebx+esi*4], edi
.text:004045C2                 mov     edx, [esp+0BCh+var_6C]
.text:004045C6                 mov     edi, [esp+0BCh+var_24]
.text:004045CD                 mov     ebx, [esp+0BCh+Src]
.text:004045D4                 mov     ebp, [edx+ecx*4]
.text:004045D7                 inc     edi
.text:004045D8                 mov     [esp+0BCh+var_24], edi
.text:004045DF                 mov     [ebx+edi*4], ebp
.text:004045E2                 mov     ebp, [esp+0BCh+var_24]
.text:004045E9                 mov     eax, [esp+0BCh+var_78]
.text:004045ED                 mov     ebx, [esp+0BCh+Src]
.text:004045F4                 inc     ebp
.text:004045F5                 mov     [esp+0BCh+var_24], ebp
.text:004045FC                 mov     esi, [eax+ecx*4]
.text:004045FF                 inc     ecx
.text:00404600                 mov     [ebx+ebp*4], esi
.text:00404603                 mov     esi, [esp+0BCh+var_24]
.text:0040460A                 inc     esi
.text:0040460B                 cmp     ecx, [esp+0BCh+var_64]
.text:0040460F                 mov     [esp+0BCh+var_24], esi
.text:00404616                 jbe     short loc_4045B8
.text:00404618
.text:00404618 loc_404618:                             ; CODE XREF: sub_403180+150A↓j
.text:00404618                 mov     ebp, [esp+0BCh+var_60]
.text:0040461C                 mov     [ebx+esi*4], ebp
.text:0040461F                 mov     eax, [esp+0BCh+var_24]
.text:00404626                 mov     edi, [esp+0BCh+Src]
.text:0040462D                 mov     esi, [esp+0BCh+var_64]
.text:00404631                 inc     eax
.text:00404632                 mov     [esp+0BCh+var_24], eax
.text:00404639                 mov     [edi+eax*4], esi
.text:0040463C                 mov     edx, [esp+0BCh+var_24]
.text:00404643                 mov     ebp, [esp+0BCh+Src]
.text:0040464A                 inc     edx
.text:0040464B                 mov     [esp+0BCh+var_24], edx
.text:00404652                 mov     dword ptr [ebp+edx*4+0], 0
.text:0040465A                 mov     ebx, [esp+0BCh+var_24]
.text:00404661                 mov     ecx, [esp+0BCh+Src]
.text:00404668                 inc     ebx
.text:00404669                 mov     [esp+0BCh+var_24], ebx
.text:00404670                 mov     dword ptr [ecx+ebx*4], 0
.text:00404677                 inc     [esp+0BCh+var_24]
.text:0040467E                 jmp     loc_40411A
.text:00404683 ; ---------------------------------------------------------------------------
.text:00404683
.text:00404683 loc_404683:                             ; CODE XREF: sub_403180+142B↑j
.text:00404683                 mov     ebx, [esp+0BCh+Src]
.text:0040468A                 jmp     short loc_404618
.text:0040468C ; ---------------------------------------------------------------------------
.text:0040468C                 mov     esi, [esp+0BCh+var_4C]
.text:00404690                 movsx   ebx, byte ptr [esi+1]
.text:00404694                 movzx   ebp, byte ptr [esi]
.text:00404697                 add     esi, 2
.text:0040469A                 mov     [esp+0BCh+var_4C], esi
.text:0040469E                 shl     ebx, 8
.text:004046A1                 add     ebp, ebx
.text:004046A3
.text:004046A3 loc_4046A3:                             ; CODE XREF: sub_403180+153A↓j
.text:004046A3                                         ; sub_403180+154C↓j
.text:004046A3                 lea     edx, [esi+2]
.text:004046A6                 cmp     edx, [esp+0BCh+var_50]
.text:004046AA                 jnb     short def_403B84 ; jumptable 00403B84 default case
.text:004046AC                 movzx   ecx, byte ptr [esi]
.text:004046AF                 sub     cl, 6
.text:004046B2                 cmp     cl, 1
.text:004046B5                 ja      short def_403B84 ; jumptable 00403B84 default case
.text:004046B7                 add     esi, 3
.text:004046BA                 jmp     short loc_4046A3
.text:004046BC ; ---------------------------------------------------------------------------
.text:004046BC
.text:004046BC def_403B84:                             ; CODE XREF: sub_403180+152A↑j
.text:004046BC                                         ; sub_403180+1535↑j
.text:004046BC                 lea     eax, [esi+6]    ; jumptable 00403B84 default case
.text:004046BF                 cmp     eax, [esp+0BCh+var_50]
.text:004046C3                 jnb     short loc_4046CE
.text:004046C5                 cmp     byte ptr [esi], 13h
.text:004046C8                 jnz     short loc_4046CE
.text:004046CA                 mov     esi, eax
.text:004046CC                 jmp     short loc_4046A3
.text:004046CE ; ---------------------------------------------------------------------------
.text:004046CE
.text:004046CE loc_4046CE:                             ; CODE XREF: sub_403180+1543↑j
.text:004046CE                                         ; sub_403180+1548↑j
.text:004046CE                 mov     edi, [esp+0BCh+var_4C]
.text:004046D2                 add     edi, ebp
.text:004046D4                 cmp     esi, [esp+0BCh+var_50]
.text:004046D8                 mov     [esp+0BCh+var_30], edi
.text:004046DF                 jz      loc_404865
.text:004046E5                 movzx   eax, byte ptr [esi]
.text:004046E8                 cmp     al, 2
.text:004046EA                 jz      loc_40491B
.text:004046F0                 mov     ebp, [esp+0BCh+arg_0]
.text:004046F7                 test    byte ptr [ebp+1Ch], 80h
.text:004046FB                 jz      short loc_404705
.text:004046FD                 cmp     al, 0Ah
.text:004046FF                 jz      loc_4048AB
.text:00404705
.text:00404705 loc_404705:                             ; CODE XREF: sub_403180+157B↑j
.text:00404705                 cmp     al, 4
.text:00404707                 jz      loc_4047B5
.text:0040470D
.text:0040470D loc_40470D:                             ; CODE XREF: sub_403180+1652↓j
.text:0040470D                                         ; sub_403180:loc_404814↓j ...
.text:0040470D                 sub     [esp+0BCh+var_4C], 2
.text:00404712                 mov     esi, [esp+0BCh+var_4C]
.text:00404716                 cmp     byte ptr [esi-1], 11h
.text:0040471A                 jz      short loc_404725
.text:0040471C                 mov     byte ptr [esi-1], 0Dh
.text:00404720                 jmp     loc_40411A
.text:00404725 ; ---------------------------------------------------------------------------
.text:00404725
.text:00404725 loc_404725:                             ; CODE XREF: sub_403180+159A↑j
.text:00404725                 mov     edi, [esp+0BCh+var_24]
.text:0040472C                 mov     ebx, [esp+0BCh+Src]
.text:00404733                 lea     eax, [edi-3]
.text:00404736                 mov     [esp+0BCh+var_24], eax
.text:0040473D                 lea     ecx, [edi-4]
.text:00404740                 mov     ebp, [ebx+eax*4]
.text:00404743                 mov     [esp+0BCh+var_24], ecx
.text:0040474A                 mov     edi, [ebx+ecx*4]
.text:0040474D                 mov     ecx, ebp
.text:0040474F                 cmp     ebp, edi
.text:00404751                 jb      short loc_4047A8
.text:00404753
.text:00404753 loc_404753:                             ; CODE XREF: sub_403180+1626↓j
.text:00404753                 mov     eax, [esp+0BCh+var_24]
.text:0040475A                 dec     eax
.text:0040475B                 mov     [esp+0BCh+var_24], eax
.text:00404762                 mov     edx, [ebx+eax*4]
.text:00404765                 mov     ebx, [esp+0BCh+var_94]
.text:00404769                 mov     [ebx+ecx*4], edx
.text:0040476C                 mov     edx, [esp+0BCh+var_24]
.text:00404773                 mov     ebx, [esp+0BCh+Src]
.text:0040477A                 mov     esi, [esp+0BCh+var_90]
.text:0040477E                 lea     ebp, [edx-1]
.text:00404781                 mov     [esp+0BCh+var_24], ebp
.text:00404788                 mov     eax, [ebx+ebp*4]
.text:0040478B                 mov     ebp, [esp+0BCh+var_90]
.text:0040478F                 mov     [ebp+ecx*4+0], eax
.text:00404793                 lea     ebp, [edx-2]
.text:00404796                 mov     [esp+0BCh+var_24], ebp
.text:0040479D                 mov     edx, [ebx+ebp*4]
.text:004047A0                 mov     [esi+ecx*4], edx
.text:004047A3                 dec     ecx
.text:004047A4                 cmp     ecx, edi
.text:004047A6                 jnb     short loc_404753
.text:004047A8
.text:004047A8 loc_4047A8:                             ; CODE XREF: sub_403180+15D1↑j
.text:004047A8                 mov     [esp+0BCh+var_8C], 0
.text:004047B0                 jmp     loc_40411A
.text:004047B5 ; ---------------------------------------------------------------------------
.text:004047B5
.text:004047B5 loc_4047B5:                             ; CODE XREF: sub_403180+1587↑j
.text:004047B5                 mov     ebx, [esp+0BCh+var_30]
.text:004047BC                 mov     edi, ebx
.text:004047BE                 cmp     byte ptr [ebx+3], 2
.text:004047C2                 jz      loc_404872
.text:004047C8
.text:004047C8 loc_4047C8:                             ; CODE XREF: sub_403180+1718↓j
.text:004047C8                 movzx   eax, byte ptr [edi+3]
.text:004047CC                 cmp     al, 5
.text:004047CE                 jz      short loc_404827
.text:004047D0                 cmp     al, 4
.text:004047D2                 jnz     loc_40470D
.text:004047D8                 movzx   eax, byte ptr [esi+1]
.text:004047DC                 xor     edx, edx
.text:004047DE                 movzx   ebx, al
.text:004047E1                 mov     [esp+0BCh+var_A5], al
.text:004047E5                 cmp     edx, ebx
.text:004047E7                 jge     short loc_404805
.text:004047E9                 movzx   ecx, byte ptr [edi+4]
.text:004047ED                 cmp     edx, ecx
.text:004047EF                 jge     short loc_404805
.text:004047F1
.text:004047F1 loc_4047F1:                             ; CODE XREF: sub_403180+1683↓j
.text:004047F1                 movzx   eax, byte ptr [edx+edi+5]
.text:004047F6                 test    [edx+esi+2], al
.text:004047FA                 jnz     short loc_404805
.text:004047FC                 inc     edx
.text:004047FD                 cmp     edx, ebx
.text:004047FF                 jge     short loc_404805
.text:00404801                 cmp     edx, ecx
.text:00404803                 jl      short loc_4047F1
.text:00404805
.text:00404805 loc_404805:                             ; CODE XREF: sub_403180+1667↑j
.text:00404805                                         ; sub_403180+166F↑j ...
.text:00404805                 movzx   ebp, [esp+0BCh+var_A5]
.text:0040480A                 cmp     edx, ebp
.text:0040480C                 jz      short loc_40481A
.text:0040480E                 movzx   ebx, byte ptr [edi+4]
.text:00404812                 cmp     edx, ebx
.text:00404814
.text:00404814 loc_404814:                             ; CODE XREF: sub_403180+1784↓j
.text:00404814                 jnz     loc_40470D
.text:0040481A
.text:0040481A loc_40481A:                             ; CODE XREF: sub_403180+168C↑j
.text:0040481A                 mov     edx, [esp+0BCh+var_4C]
.text:0040481E                 mov     byte ptr [edx-3], 11h
.text:00404822                 jmp     loc_40470D
.text:00404827 ; ---------------------------------------------------------------------------
.text:00404827
.text:00404827 loc_404827:                             ; CODE XREF: sub_403180+164E↑j
.text:00404827                 movzx   ebx, byte ptr [esi+1]
.text:0040482B                 xor     ecx, ecx
.text:0040482D                 movzx   eax, bl
.text:00404830                 cmp     ecx, eax
.text:00404832                 jge     short loc_40485A
.text:00404834                 mov     ebp, eax
.text:00404836
.text:00404836 loc_404836:                             ; CODE XREF: sub_403180+16D8↓j
.text:00404836                 movzx   edx, byte ptr [ecx+esi+2]
.text:0040483B                 test    dl, dl
.text:0040483D                 jz      short loc_404855
.text:0040483F                 movzx   eax, byte ptr [edi+4]
.text:00404843                 cmp     ecx, eax
.text:00404845                 jge     short loc_40485A
.text:00404847                 movzx   eax, byte ptr [ecx+edi+5]
.text:0040484C                 movzx   edx, dl
.text:0040484F                 not     eax
.text:00404851                 test    eax, edx
.text:00404853                 jnz     short loc_40485A
.text:00404855
.text:00404855 loc_404855:                             ; CODE XREF: sub_403180+16BD↑j
.text:00404855                 inc     ecx
.text:00404856                 cmp     ecx, ebp
.text:00404858                 jl      short loc_404836
.text:0040485A
.text:0040485A loc_40485A:                             ; CODE XREF: sub_403180+16B2↑j
.text:0040485A                                         ; sub_403180+16C5↑j ...
.text:0040485A                 movzx   esi, bl
.text:0040485D                 cmp     ecx, esi
.text:0040485F                 jnz     loc_40470D
.text:00404865
.text:00404865 loc_404865:                             ; CODE XREF: sub_403180+155F↑j
.text:00404865                 mov     ecx, [esp+0BCh+var_4C]
.text:00404869                 mov     byte ptr [ecx-3], 11h
.text:0040486D                 jmp     loc_40470D
.text:00404872 ; ---------------------------------------------------------------------------
.text:00404872
.text:00404872 loc_404872:                             ; CODE XREF: sub_403180+1642↑j
.text:00404872                 movzx   edx, byte ptr [esi+1]
.text:00404876                 movzx   ecx, byte ptr [ebx+5]
.text:0040487A                 shl     edx, 3
.text:0040487D                 movzx   ebp, cl
.text:00404880                 cmp     edx, ebp
.text:00404882                 jle     short loc_40489E
.text:00404884                 mov     dl, cl
.text:00404886                 shr     dl, 3
.text:00404889                 and     ecx, 7
.text:0040488C                 movzx   ebx, dl
.text:0040488F                 movzx   eax, byte ptr [ebx+esi+2]
.text:00404894                 sar     eax, cl
.text:00404896                 test    al, 1
.text:00404898                 jnz     loc_4047C8
.text:0040489E
.text:0040489E loc_40489E:                             ; CODE XREF: sub_403180+1702↑j
.text:0040489E                 mov     edi, [esp+0BCh+var_4C]
.text:004048A2                 mov     byte ptr [edi-3], 11h
.text:004048A6                 jmp     loc_40470D
.text:004048AB ; ---------------------------------------------------------------------------
.text:004048AB
.text:004048AB loc_4048AB:                             ; CODE XREF: sub_403180+157F↑j
.text:004048AB                 mov     cl, 0Ah
.text:004048AD
.text:004048AD loc_4048AD:                             ; CODE XREF: sub_403180+179F↓j
.text:004048AD                 mov     ebx, [esp+0BCh+var_30]
.text:004048B4                 mov     esi, ebx
.text:004048B6                 cmp     byte ptr [ebx+3], 2
.text:004048BA                 jz      short loc_404909
.text:004048BC
.text:004048BC loc_4048BC:                             ; CODE XREF: sub_403180+178C↓j
.text:004048BC                 movzx   edx, byte ptr [esi+3]
.text:004048C0                 mov     bl, dl
.text:004048C2                 sub     bl, 4
.text:004048C5                 cmp     bl, 1
.text:004048C8                 ja      loc_40470D
.text:004048CE                 movzx   edi, byte ptr [esi+4]
.text:004048D2                 xor     ebx, ebx
.text:004048D4                 cmp     dl, 5
.text:004048D7                 setz    bl
.text:004048DA                 movzx   eax, cl
.text:004048DD                 shl     edi, 3
.text:004048E0                 cmp     eax, edi
.text:004048E2                 jnb     short loc_404902
.text:004048E4                 mov     al, cl
.text:004048E6                 shr     al, 3
.text:004048E9                 and     ecx, 7
.text:004048EC                 movzx   edx, al
.text:004048EF                 movzx   eax, byte ptr [edx+esi+5]
.text:004048F4                 sar     eax, cl
.text:004048F6                 test    al, 1
.text:004048F8                 jz      short loc_404902
.text:004048FA                 test    ebx, ebx
.text:004048FC                 setz    cl
.text:004048FF                 movzx   ebx, cl
.text:00404902
.text:00404902 loc_404902:                             ; CODE XREF: sub_403180+1762↑j
.text:00404902                                         ; sub_403180+1778↑j
.text:00404902                 test    ebx, ebx
.text:00404904                 jmp     loc_404814
.text:00404909 ; ---------------------------------------------------------------------------
.text:00404909
.text:00404909 loc_404909:                             ; CODE XREF: sub_403180+173A↑j
.text:00404909                 cmp     [ebx+5], cl
.text:0040490C                 jz      short loc_4048BC
.text:0040490E                 mov     esi, [esp+0BCh+var_4C]
.text:00404912                 mov     byte ptr [esi-3], 11h
.text:00404916                 jmp     loc_40470D
.text:0040491B ; ---------------------------------------------------------------------------
.text:0040491B
.text:0040491B loc_40491B:                             ; CODE XREF: sub_403180+156A↑j
.text:0040491B                 movzx   ecx, byte ptr [esi+2]
.text:0040491F                 jmp     short loc_4048AD
.text:00404921 ; ---------------------------------------------------------------------------
.text:00404921                 mov     edx, [esp+0BCh+var_4C]
.text:00404925                 mov     edi, [esp+0BCh+var_60]
.text:00404929                 mov     ebx, [esp+0BCh+var_64]
.text:0040492D                 movsx   ecx, byte ptr [edx+1]
.text:00404931                 mov     esi, [esp+0BCh+var_24]
.text:00404938                 sub     ebx, edi
.text:0040493A                 movzx   ebp, byte ptr [edx]
.text:0040493D                 lea     edi, [ebx+ebx]
.text:00404940                 shl     ecx, 8
.text:00404943                 add     edx, 2
.text:00404946                 lea     eax, [ebx+edi+7]
.text:0040494A                 mov     [esp+0BCh+var_4C], edx
.text:0040494E                 add     ebp, ecx
.text:00404950                 mov     ecx, [esp+0BCh+var_28]
.text:00404957                 mov     edx, ecx
.text:00404959                 sub     edx, esi
.text:0040495B                 cmp     edx, eax
.text:0040495D                 jnb     short loc_4049D3
.text:0040495F                 mov     edi, eax
.text:00404961
.text:00404961 loc_404961:                             ; CODE XREF: sub_403180+1851↓j
.text:00404961                 mov     edx, dword_410050
.text:00404967                 lea     esi, [edx+edx*8]
.text:0040496A                 lea     ebx, [edx+esi*2]
.text:0040496D                 cmp     ecx, ebx
.text:0040496F                 ja      loc_403901
.text:00404975                 lea     edx, ds:0[ecx*8]
.text:0040497C                 mov     [esp+0BCh+Size], edx ; Size
.text:0040497F                 call    malloc
.text:00404984                 mov     [esp+0BCh+Size], eax ; void *
.text:00404987                 mov     esi, [esp+0BCh+var_28]
.text:0040498E                 mov     ebx, [esp+0BCh+Src]
.text:00404995                 shl     esi, 2
.text:00404998                 mov     [esp+0BCh+var_B4], esi ; Size
.text:0040499C                 mov     [esp+0BCh+var_B8], ebx ; Src
.text:004049A0                 call    memcpy
.text:004049A5                 mov     [esp+0BCh+Src], eax
.text:004049AC                 test    eax, eax
.text:004049AE                 jz      loc_403901
.text:004049B4                 mov     ebx, [esp+0BCh+var_28]
.text:004049BB                 mov     esi, [esp+0BCh+var_24]
.text:004049C2                 add     ebx, ebx
.text:004049C4                 mov     [esp+0BCh+var_28], ebx
.text:004049CB                 mov     ecx, ebx
.text:004049CD                 sub     ebx, esi
.text:004049CF                 cmp     ebx, edi
.text:004049D1                 jb      short loc_404961
.text:004049D3
.text:004049D3 loc_4049D3:                             ; CODE XREF: sub_403180+17DD↑j
.text:004049D3                 mov     ecx, [esp+0BCh+var_60]
.text:004049D7                 mov     eax, [esp+0BCh+var_64]
.text:004049DB                 cmp     ecx, eax
.text:004049DD                 ja      loc_404A93
.text:004049E3                 mov     ebx, [esp+0BCh+Src]
.text:004049EA
.text:004049EA loc_4049EA:                             ; CODE XREF: sub_403180+18C8↓j
.text:004049EA                 mov     eax, [esp+0BCh+var_68]
.text:004049EE                 mov     edi, [eax+ecx*4]
.text:004049F1                 mov     [ebx+esi*4], edi
.text:004049F4                 mov     edx, [esp+0BCh+var_6C]
.text:004049F8                 mov     edi, [esp+0BCh+var_24]
.text:004049FF                 mov     ebx, [esp+0BCh+Src]
.text:00404A06                 mov     esi, [edx+ecx*4]
.text:00404A09                 inc     edi
.text:00404A0A                 mov     [esp+0BCh+var_24], edi
.text:00404A11                 mov     [ebx+edi*4], esi
.text:00404A14                 mov     edi, [esp+0BCh+var_24]
.text:00404A1B                 mov     eax, [esp+0BCh+var_78]
.text:00404A1F                 mov     ebx, [esp+0BCh+Src]
.text:00404A26                 inc     edi
.text:00404A27                 mov     [esp+0BCh+var_24], edi
.text:00404A2E                 mov     esi, [eax+ecx*4]
.text:00404A31                 inc     ecx
.text:00404A32                 mov     [ebx+edi*4], esi
.text:00404A35                 mov     esi, [esp+0BCh+var_24]
.text:00404A3C                 inc     esi
.text:00404A3D                 cmp     ecx, [esp+0BCh+var_64]
.text:00404A41                 mov     [esp+0BCh+var_24], esi
.text:00404A48                 jbe     short loc_4049EA
.text:00404A4A
.text:00404A4A loc_404A4A:                             ; CODE XREF: sub_403180+191A↓j
.text:00404A4A                 mov     eax, [esp+0BCh+var_60]
.text:00404A4E                 mov     [ebx+esi*4], eax
.text:00404A51                 mov     edi, [esp+0BCh+var_24]
.text:00404A58                 mov     edx, [esp+0BCh+Src]
.text:00404A5F                 mov     esi, [esp+0BCh+var_64]
.text:00404A63                 inc     edi
.text:00404A64                 mov     [esp+0BCh+var_24], edi
.text:00404A6B                 mov     [edx+edi*4], esi
.text:00404A6E                 mov     ebx, [esp+0BCh+var_4C]
.text:00404A72                 mov     ecx, [esp+0BCh+var_24]
.text:00404A79                 add     ebx, ebp
.text:00404A7B                 mov     ebp, [esp+0BCh+Src]
.text:00404A82                 inc     ecx
.text:00404A83                 mov     [esp+0BCh+var_24], ecx
.text:00404A8A                 mov     [ebp+ecx*4+0], ebx
.text:00404A8E                 jmp     loc_4044D4
.text:00404A93 ; ---------------------------------------------------------------------------
.text:00404A93
.text:00404A93 loc_404A93:                             ; CODE XREF: sub_403180+185D↑j
.text:00404A93                 mov     ebx, [esp+0BCh+Src]
.text:00404A9A                 jmp     short loc_404A4A
.text:00404A9C ; ---------------------------------------------------------------------------
.text:00404A9C                 jmp     loc_40417D
.text:00404AA1 ; ---------------------------------------------------------------------------
.text:00404AA1                 jmp     loc_40411A
.text:00404AA6 ; ---------------------------------------------------------------------------
.text:00404AA6                 mov     eax, [esp+0BCh+var_38]
.text:00404AAD                 cmp     [esp+0BCh+var_44], eax
.text:00404AB1                 jz      loc_403E22
.text:00404AB7                 jmp     loc_4035D2
.text:00404AB7 ; ---------------------------------------------------------------------------
.text:00404ABC                 align 10h
.text:00404AC0                 mov     ecx, [esp+0BCh+arg_8]
.text:00404AC7                 test    ecx, ecx
.text:00404AC9                 jz      short loc_404AF0
.text:00404ACB                 mov     ebx, [esp+0BCh+arg_4]
.text:00404AD2                 cmp     [esp+0BCh+var_44], ebx
.text:00404AD6
.text:00404AD6 loc_404AD6:                             ; CODE XREF: sub_403180+197B↓j
.text:00404AD6                 jz      loc_403D50
.text:00404ADC                 mov     edi, [esp+0BCh+arg_10]
.text:00404AE3                 test    edi, edi
.text:00404AE5
.text:00404AE5 loc_404AE5:                             ; CODE XREF: sub_403180+19D7↓j
.text:00404AE5                 jz      loc_403D50
.text:00404AEB                 jmp     loc_4035D2
.text:00404AF0 ; ---------------------------------------------------------------------------
.text:00404AF0
.text:00404AF0 loc_404AF0:                             ; CODE XREF: sub_403180+1949↑j
.text:00404AF0                 mov     esi, [esp+0BCh+arg_C]
.text:00404AF7                 cmp     [esp+0BCh+var_44], esi
.text:00404AFB                 jmp     short loc_404AD6
.text:00404AFD ; ---------------------------------------------------------------------------
.text:00404AFD                 mov     ebx, [esp+0BCh+var_38]
.text:00404B04                 cmp     [esp+0BCh+var_44], ebx
.text:00404B08                 jz      short loc_404B4C
.text:00404B0A                 mov     edi, [esp+0BCh+var_34]
.text:00404B11                 cmp     [esp+0BCh+var_44], edi
.text:00404B15                 jz      short loc_404B40
.text:00404B17                 mov     edx, [esp+0BCh+var_44]
.text:00404B1B                 cmp     byte ptr [edx], 0Ah
.text:00404B1E
.text:00404B1E loc_404B1E:                             ; CODE XREF: sub_403180+19CA↓j
.text:00404B1E                                         ; sub_403180+1A14↓j
.text:00404B1E                 jnz     loc_4035D2
.text:00404B24                 mov     ebp, [esp+0BCh+arg_0]
.text:00404B2B                 test    byte ptr [ebp+1Ch], 80h
.text:00404B2F                 jnz     loc_4039AB      ; jumptable 004033F7 case 0
.text:00404B2F                                         ; jumptable 00403D76 case 0
.text:00404B2F                                         ; jumptable 00403E48 case 0
.text:00404B35                 jmp     loc_4035D2
.text:00404B35 ; ---------------------------------------------------------------------------
.text:00404B3A                 align 10h
.text:00404B40
.text:00404B40 loc_404B40:                             ; CODE XREF: sub_403180+1995↑j
.text:00404B40                 mov     eax, [esp+0BCh+arg_C]
.text:00404B47                 cmp     byte ptr [eax], 0Ah
.text:00404B4A                 jmp     short loc_404B1E
.text:00404B4C ; ---------------------------------------------------------------------------
.text:00404B4C
.text:00404B4C loc_404B4C:                             ; CODE XREF: sub_403180+1988↑j
.text:00404B4C                 mov     esi, [esp+0BCh+arg_0]
.text:00404B53                 test    byte ptr [esi+1Ch], 40h
.text:00404B57                 jmp     short loc_404AE5
.text:00404B59 ; ---------------------------------------------------------------------------
.text:00404B59                 mov     ebx, [esp+0BCh+arg_8]
.text:00404B60                 test    ebx, ebx
.text:00404B62                 jz      short loc_404B96
.text:00404B64                 mov     edi, [esp+0BCh+arg_4]
.text:00404B6B                 cmp     [esp+0BCh+var_44], edi
.text:00404B6F
.text:00404B6F loc_404B6F:                             ; CODE XREF: sub_403180+1A21↓j
.text:00404B6F                 jz      short loc_404B7C
.text:00404B71                 mov     edx, [esp+0BCh+arg_10]
.text:00404B78                 test    edx, edx
.text:00404B7A                 jnz     short loc_404B8C
.text:00404B7C
.text:00404B7C loc_404B7C:                             ; CODE XREF: sub_403180:loc_404B6F↑j
.text:00404B7C                 mov     ebp, [esp+0BCh+arg_0]
.text:00404B83                 test    byte ptr [ebp+1Ch], 20h
.text:00404B87                 jmp     loc_403C24
.text:00404B8C ; ---------------------------------------------------------------------------
.text:00404B8C
.text:00404B8C loc_404B8C:                             ; CODE XREF: sub_403180+19FA↑j
.text:00404B8C                 mov     ecx, [esp+0BCh+var_44]
.text:00404B90                 cmp     byte ptr [ecx-1], 0Ah
.text:00404B94                 jmp     short loc_404B1E
.text:00404B96 ; ---------------------------------------------------------------------------
.text:00404B96
.text:00404B96 loc_404B96:                             ; CODE XREF: sub_403180+19E2↑j
.text:00404B96                 mov     eax, [esp+0BCh+arg_C]
.text:00404B9D                 cmp     [esp+0BCh+var_44], eax
.text:00404BA1                 jmp     short loc_404B6F
.text:00404BA3 ; ---------------------------------------------------------------------------
.text:00404BA3                 mov     eax, [esp+0BCh+var_4C]
.text:00404BA7                 mov     ecx, [esp+0BCh+var_68]
.text:00404BAB                 movzx   esi, byte ptr [eax]
.text:00404BAE                 inc     [esp+0BCh+var_4C]
.text:00404BB2                 mov     edi, [ecx+esi*4]
.text:00404BB5                 mov     [esp+0BCh+var_A4], esi
.text:00404BB9                 cmp     edi, offset unk_411240
.text:00404BBF                 jz      loc_4035D2
.text:00404BC5                 mov     ebp, [esp+0BCh+var_6C]
.text:00404BC9                 mov     eax, [ebp+esi*4+0]
.text:00404BCD                 cmp     eax, offset unk_411240
.text:00404BD2                 jz      loc_4035D2
.text:00404BD8                 mov     [esp+0BCh+var_A0], edi
.text:00404BDC                 mov     esi, [esp+0BCh+arg_8]
.text:00404BE3                 xor     ecx, ecx
.text:00404BE5                 test    esi, esi
.text:00404BE7                 jz      short loc_404BFD
.text:00404BE9                 cmp     [esp+0BCh+arg_4], edi
.text:00404BF0                 ja      short loc_404BFD
.text:00404BF2                 mov     edx, [esp+0BCh+var_34]
.text:00404BF9                 cmp     edi, edx
.text:00404BFB                 jbe     short loc_404C02
.text:00404BFD
.text:00404BFD loc_404BFD:                             ; CODE XREF: sub_403180+1A67↑j
.text:00404BFD                                         ; sub_403180+1A70↑j
.text:00404BFD                 mov     ecx, 1
.text:00404C02
.text:00404C02 loc_404C02:                             ; CODE XREF: sub_403180+1A7B↑j
.text:00404C02                 mov     edi, [esp+0BCh+arg_8]
.text:00404C09                 xor     edx, edx
.text:00404C0B                 test    edi, edi
.text:00404C0D                 jz      short loc_404C26
.text:00404C0F                 cmp     [esp+0BCh+arg_4], eax
.text:00404C16                 ja      short loc_404C26
.text:00404C18                 cmp     eax, [esp+0BCh+var_34]
.text:00404C1F                 ja      short loc_404C26
.text:00404C21                 mov     edx, 1
.text:00404C26
.text:00404C26 loc_404C26:                             ; CODE XREF: sub_403180+1A8D↑j
.text:00404C26                                         ; sub_403180+1A96↑j ...
.text:00404C26                 cmp     ecx, edx
.text:00404C28                 mov     ebx, eax
.text:00404C2A                 jnz     short loc_404C33
.text:00404C2C                 mov     ebx, [esp+0BCh+var_3C]
.text:00404C33
.text:00404C33 loc_404C33:                             ; CODE XREF: sub_403180+1AAA↑j
.text:00404C33                                         ; sub_403180+1B21↓j ...
.text:00404C33                 cmp     [esp+0BCh+var_A0], ebx
.text:00404C37                 jz      loc_404D06
.text:00404C3D
.text:00404C3D loc_404C3D:                             ; CODE XREF: sub_403180+1BAC↓j
.text:00404C3D                                         ; sub_403180+1BB5↓j
.text:00404C3D                 mov     eax, [esp+0BCh+var_48]
.text:00404C41                 cmp     [esp+0BCh+var_44], eax
.text:00404C45                 jz      loc_404CE0
.text:00404C4B
.text:00404C4B loc_404C4B:                             ; CODE XREF: sub_403180+1B81↓j
.text:00404C4B                 mov     ecx, [esp+0BCh+var_44]
.text:00404C4F                 mov     ebp, [esp+0BCh+var_48]
.text:00404C53                 mov     edx, [esp+0BCh+var_A0]
.text:00404C57                 sub     ebp, ecx
.text:00404C59                 mov     ecx, ebx
.text:00404C5B                 sub     ecx, edx
.text:00404C5D                 cmp     ebp, ecx
.text:00404C5F                 jle     short loc_404C63
.text:00404C61                 mov     ebp, ecx
.text:00404C63
.text:00404C63 loc_404C63:                             ; CODE XREF: sub_403180+1ADF↑j
.text:00404C63                 mov     esi, [esp+0BCh+var_58]
.text:00404C67                 test    esi, esi
.text:00404C69                 jz      short loc_404CCF
.text:00404C6B                 mov     [esp+0BCh+var_B4], ebp
.text:00404C6F                 mov     edx, [esp+0BCh+var_58]
.text:00404C73                 mov     eax, [esp+0BCh+var_A0]
.text:00404C77                 mov     edi, [esp+0BCh+var_44]
.text:00404C7B                 mov     [esp+0BCh+var_B0], edx
.text:00404C7F                 mov     [esp+0BCh+var_B8], eax
.text:00404C83                 mov     [esp+0BCh+Size], edi
.text:00404C86                 call    sub_405840
.text:00404C8B                 test    eax, eax
.text:00404C8D
.text:00404C8D loc_404C8D:                             ; CODE XREF: sub_403180+1B5E↓j
.text:00404C8D                 jnz     loc_4035D2
.text:00404C93                 add     [esp+0BCh+var_44], ebp
.text:00404C97                 add     [esp+0BCh+var_A0], ebp
.text:00404C9B                 mov     ebp, [esp+0BCh+var_8C]
.text:00404C9F                 test    ebp, ebp
.text:00404CA1                 jnz     short loc_404C33
.text:00404CA3                 mov     [esp+0BCh+var_8C], 1
.text:00404CAB                 mov     eax, [esp+0BCh+var_60]
.text:00404CAF                 mov     ecx, [esp+0BCh+var_64]
.text:00404CB3                 cmp     eax, ecx
.text:00404CB5                 ja      loc_404C33
.text:00404CBB
.text:00404CBB loc_404CBB:                             ; CODE XREF: sub_403180+1B48↓j
.text:00404CBB                 mov     esi, [esp+0BCh+var_78]
.text:00404CBF                 or      byte ptr [esi+eax*4], 18h
.text:00404CC3                 inc     eax
.text:00404CC4                 cmp     eax, [esp+0BCh+var_64]
.text:00404CC8                 jbe     short loc_404CBB
.text:00404CCA                 jmp     loc_404C33
.text:00404CCF ; ---------------------------------------------------------------------------
.text:00404CCF
.text:00404CCF loc_404CCF:                             ; CODE XREF: sub_403180+1AE9↑j
.text:00404CCF                 cld
.text:00404CD0                 mov     esi, [esp+0BCh+var_44]
.text:00404CD4                 cmp     ebp, ebp
.text:00404CD6                 mov     edi, [esp+0BCh+var_A0]
.text:00404CDA                 mov     ecx, ebp
.text:00404CDC                 repe cmpsb
.text:00404CDE                 jmp     short loc_404C8D
.text:00404CE0 ; ---------------------------------------------------------------------------
.text:00404CE0
.text:00404CE0 loc_404CE0:                             ; CODE XREF: sub_403180+1AC5↑j
.text:00404CE0                                         ; sub_403180+1B7F↓j
.text:00404CE0                 mov     eax, [esp+0BCh+var_40]
.text:00404CE4                 cmp     [esp+0BCh+var_48], eax
.text:00404CE8                 jz      loc_4035D2
.text:00404CEE                 mov     [esp+0BCh+var_48], eax
.text:00404CF2                 mov     edi, [esp+0BCh+arg_C]
.text:00404CF9                 cmp     edi, eax
.text:00404CFB                 mov     [esp+0BCh+var_44], edi
.text:00404CFF                 jz      short loc_404CE0
.text:00404D01                 jmp     loc_404C4B
.text:00404D06 ; ---------------------------------------------------------------------------
.text:00404D06
.text:00404D06 loc_404D06:                             ; CODE XREF: sub_403180+1AB7↑j
.text:00404D06                                         ; sub_403180+1BAA↓j
.text:00404D06                 cmp     ebx, [esp+0BCh+var_40]
.text:00404D0A                 jz      short loc_404D31
.text:00404D0C                 mov     ebp, [esp+0BCh+var_A4]
.text:00404D10                 mov     ecx, [esp+0BCh+var_6C]
.text:00404D14                 mov     eax, [ecx+ebp*4]
.text:00404D17                 cmp     ebx, eax
.text:00404D19                 jz      short loc_404D31
.text:00404D1B                 mov     esi, [esp+0BCh+arg_C]
.text:00404D22                 mov     ebx, eax
.text:00404D24                 cmp     esi, eax
.text:00404D26                 mov     [esp+0BCh+var_A0], esi
.text:00404D2A                 jz      short loc_404D06
.text:00404D2C                 jmp     loc_404C3D
.text:00404D31 ; ---------------------------------------------------------------------------
.text:00404D31
.text:00404D31 loc_404D31:                             ; CODE XREF: sub_403180+1B8A↑j
.text:00404D31                                         ; sub_403180+1B99↑j
.text:00404D31                 cmp     [esp+0BCh+var_A0], ebx
.text:00404D35                 jnz     loc_404C3D
.text:00404D3B                 jmp     loc_403B5E
.text:00404D40 ; ---------------------------------------------------------------------------
.text:00404D40
.text:00404D40 loc_404D40:                             ; CODE XREF: sub_403180+A04↑j
.text:00404D40                                         ; DATA XREF: .text:jpt_403B84↑o
.text:00404D40                 mov     esi, [esp+0BCh+var_4C] ; jumptable 00403B84 case 7
.text:00404D44                 mov     ebx, [esp+0BCh+var_78]
.text:00404D48                 movzx   edx, byte ptr [esi]
.text:00404D4B                 test    byte ptr [ebx+edx*4], 3
.text:00404D4F                 jz      loc_405137
.text:00404D55                 mov     edi, [esp+0BCh+var_6C]
.text:00404D59                 mov     eax, [edi+edx*4]
.text:00404D5C                 cmp     eax, offset unk_411240
.text:00404D61                 jz      loc_40512E
.text:00404D67
.text:00404D67 loc_404D67:                             ; CODE XREF: sub_403180+1FB2↓j
.text:00404D67                                         ; sub_403180+1FBF↓j
.text:00404D67                 mov     ecx, [esp+0BCh+var_74]
.text:00404D6B                 mov     edi, [esp+0BCh+var_6C]
.text:00404D6F                 mov     ebx, [esp+0BCh+var_78]
.text:00404D73                 mov     [ecx+edx*4], eax
.text:00404D76                 mov     edx, [esp+0BCh+var_4C]
.text:00404D7A                 mov     eax, [esp+0BCh+var_44]
.text:00404D7E                 movzx   ebp, byte ptr [edx]
.text:00404D81                 mov     [edi+ebp*4], eax
.text:00404D84                 movzx   esi, byte ptr [edx]
.text:00404D87                 and     byte ptr [ebx+esi*4], 0FBh
.text:00404D8B                 mov     [esp+0BCh+var_8C], 0
.text:00404D93                 mov     ecx, [esp+0BCh+var_64]
.text:00404D97                 cmp     [esp+0BCh+var_60], ecx
.text:00404D9B                 jz      loc_405116
.text:00404DA1                 mov     ebx, [esp+0BCh+var_4C]
.text:00404DA5                 movzx   ecx, byte ptr [ebx]
.text:00404DA8                 mov     dl, cl
.text:00404DAA                 dec     dl
.text:00404DAC                 jz      short loc_404DD5
.text:00404DAE                 mov     esi, [esp+0BCh+var_78]
.text:00404DB2                 movzx   edi, dl
.text:00404DB5                 test    byte ptr [esi+edi*4], 4
.text:00404DB9                 jnz     short loc_404DCD
.text:00404DBB
.text:00404DBB loc_404DBB:                             ; CODE XREF: sub_403180+1C4B↓j
.text:00404DBB                 dec     dl
.text:00404DBD                 jz      short loc_404DD5
.text:00404DBF                 mov     ebp, [esp+0BCh+var_78]
.text:00404DC3                 movzx   ebx, dl
.text:00404DC6                 test    byte ptr [ebp+ebx*4+0], 4
.text:00404DCB                 jz      short loc_404DBB
.text:00404DCD
.text:00404DCD loc_404DCD:                             ; CODE XREF: sub_403180+1C39↑j
.text:00404DCD                 test    dl, dl
.text:00404DCF                 jnz     loc_40510A
.text:00404DD5
.text:00404DD5 loc_404DD5:                             ; CODE XREF: sub_403180+1C2C↑j
.text:00404DD5                                         ; sub_403180+1C3D↑j
.text:00404DD5                 mov     [esp+0BCh+var_60], 101h
.text:00404DDD                 mov     [esp+0BCh+var_64], 100h
.text:00404DE5
.text:00404DE5 loc_404DE5:                             ; CODE XREF: sub_403180+1F91↓j
.text:00404DE5                                         ; sub_403180+1FA9↓j
.text:00404DE5                 movzx   edx, cl
.text:00404DE8                 mov     ecx, [esp+0BCh+var_78]
.text:00404DEC                 test    byte ptr [ecx+edx*4], 8
.text:00404DF0                 jz      short loc_404E25
.text:00404DF2                 mov     esi, [esp+0BCh+var_4C]
.text:00404DF6                 mov     edi, [esp+0BCh+var_4C]
.text:00404DFA                 dec     esi
.text:00404DFB                 cmp     [esp+0BCh+var_54], esi
.text:00404DFF                 lea     ecx, [edi+2]
.text:00404E02                 jz      short loc_404E25
.text:00404E04
.text:00404E04 loc_404E04:                             ; CODE XREF: sub_403180+1CB0↓j
.text:00404E04                                         ; sub_403180+1D01↓j ...
.text:00404E04                 mov     [esp+0BCh+var_4C], ecx
.text:00404E08                 mov     ebp, [esp+0BCh+var_50]
.text:00404E0C                 mov     eax, offset loc_4033F9
.text:00404E11                 cmp     ecx, ebp
.text:00404E13                 jz      loc_4033F7
.text:00404E19                 movzx   ebx, byte ptr [ecx]
.text:00404E1C                 inc     [esp+0BCh+var_4C]
.text:00404E20                 jmp     loc_4033F0
.text:00404E25 ; ---------------------------------------------------------------------------
.text:00404E25
.text:00404E25 loc_404E25:                             ; CODE XREF: sub_403180+1C70↑j
.text:00404E25                                         ; sub_403180+1C82↑j
.text:00404E25                 mov     ecx, [esp+0BCh+var_4C]
.text:00404E29                 add     ecx, 2
.text:00404E2C                 cmp     ecx, [esp+0BCh+var_50]
.text:00404E30                 jnb     short loc_404E04
.text:00404E32                 mov     [esp+0BCh+var_30], ecx
.text:00404E39                 mov     ebx, [esp+0BCh+var_4C]
.text:00404E3D                 xor     ebp, ebp
.text:00404E3F                 mov     [esp+0BCh+var_97], 0
.text:00404E44                 mov     edx, ebx
.text:00404E46                 add     edx, 3
.text:00404E49                 movzx   eax, byte ptr [ebx+2]
.text:00404E4D                 mov     [esp+0BCh+var_30], edx
.text:00404E54                 cmp     eax, 13h
.text:00404E57                 ja      loc_4050FA
.text:00404E5D                 cmp     eax, 11h
.text:00404E60                 jnb     loc_4050C3
.text:00404E66                 cmp     eax, 0Dh
.text:00404E69                 jz      loc_4050C3
.text:00404E6F
.text:00404E6F loc_404E6F:                             ; CODE XREF: sub_403180+1F65↓j
.text:00404E6F                                         ; sub_403180+1F75↓j ...
.text:00404E6F                 mov     ebx, [esp+0BCh+var_30]
.text:00404E76                 add     ebx, ebp
.text:00404E78                 test    ebp, ebp
.text:00404E7A                 mov     [esp+0BCh+var_30], ebx
.text:00404E81                 jns     short loc_404E04
.text:00404E83                 cmp     byte ptr [ebx], 0Fh
.text:00404E86                 jnz     loc_404E04
.text:00404E8C                 cmp     byte ptr [ebx+3], 6
.text:00404E90                 jnz     loc_404E04
.text:00404E96                 movzx   eax, byte ptr [ebx+4]
.text:00404E9A                 mov     ebp, [esp+0BCh+var_4C]
.text:00404E9E                 cmp     al, [ebp+0]
.text:00404EA1                 jnz     loc_404E04
.text:00404EA7                 mov     ecx, [esp+0BCh+var_78]
.text:00404EAB                 movzx   edx, al
.text:00404EAE                 movzx   eax, byte ptr [ecx+edx*4]
.text:00404EB2                 test    al, 10h
.text:00404EB4                 jz      short loc_404F08
.text:00404EB6                 and     al, 0EFh
.text:00404EB8                 mov     [ecx+edx*4], al
.text:00404EBB                 mov     eax, [esp+0BCh+var_4C]
.text:00404EBF                 movzx   ecx, byte ptr [eax]
.text:00404EC2                 movzx   esi, byte ptr [eax+1]
.text:00404EC6                 lea     edx, [esi+ecx]
.text:00404EC9                 cmp     ecx, edx
.text:00404ECB                 jnb     short loc_404F01
.text:00404ECD
.text:00404ECD loc_404ECD:                             ; CODE XREF: sub_403180+1D7F↓j
.text:00404ECD                 mov     edx, [esp+0BCh+var_70]
.text:00404ED1                 mov     ebx, [esp+0BCh+var_68]
.text:00404ED5                 mov     ebp, [esp+0BCh+var_74]
.text:00404ED9                 mov     edi, [edx+ecx*4]
.text:00404EDC                 mov     [ebx+ecx*4], edi
.text:00404EDF                 mov     edx, [ebp+ecx*4+0]
.text:00404EE3                 cmp     edx, edi
.text:00404EE5                 jb      short loc_404EEE
.text:00404EE7                 mov     eax, [esp+0BCh+var_6C]
.text:00404EEB                 mov     [eax+ecx*4], edx
.text:00404EEE
.text:00404EEE loc_404EEE:                             ; CODE XREF: sub_403180+1D65↑j
.text:00404EEE                 mov     ebp, [esp+0BCh+var_4C]
.text:00404EF2                 inc     ecx
.text:00404EF3                 movzx   esi, byte ptr [ebp+0]
.text:00404EF7                 movzx   edi, byte ptr [ebp+1]
.text:00404EFB                 add     esi, edi
.text:00404EFD                 cmp     ecx, esi
.text:00404EFF                 jb      short loc_404ECD
.text:00404F01
.text:00404F01 loc_404F01:                             ; CODE XREF: sub_403180+1D4B↑j
.text:00404F01                 mov     ebx, [esp+0BCh+var_30]
.text:00404F08
.text:00404F08 loc_404F08:                             ; CODE XREF: sub_403180+1D34↑j
.text:00404F08                 mov     esi, ebx
.text:00404F0A                 mov     eax, [esp+0BCh+var_60]
.text:00404F0E                 inc     ebx
.text:00404F0F                 mov     [esp+0BCh+var_30], ebx
.text:00404F16                 lea     ecx, [esi+3]
.text:00404F19                 mov     edi, [esp+0BCh+var_28]
.text:00404F20                 movsx   edx, byte ptr [ebx+1]
.text:00404F24                 movzx   ebp, byte ptr [esi+1]
.text:00404F28                 mov     esi, [esp+0BCh+var_24]
.text:00404F2F                 mov     [esp+0BCh+var_30], ecx
.text:00404F36                 mov     ecx, [esp+0BCh+var_64]
.text:00404F3A                 shl     edx, 8
.text:00404F3D                 add     ebp, edx
.text:00404F3F                 mov     edx, edi
.text:00404F41                 sub     ecx, eax
.text:00404F43                 lea     ebx, [ecx+ecx]
.text:00404F46                 sub     edx, esi
.text:00404F48                 lea     eax, [ecx+ebx+7]
.text:00404F4C                 cmp     edx, eax
.text:00404F4E                 jnb     short loc_404FC8
.text:00404F50                 mov     [esp+0BCh+var_9C], eax
.text:00404F54
.text:00404F54 loc_404F54:                             ; CODE XREF: sub_403180+1E46↓j
.text:00404F54                 mov     edx, dword_410050
.text:00404F5A                 lea     esi, [edx+edx*8]
.text:00404F5D                 lea     ebx, [edx+esi*2]
.text:00404F60                 cmp     edi, ebx
.text:00404F62                 ja      loc_403901
.text:00404F68                 lea     esi, ds:0[edi*8]
.text:00404F6F                 mov     [esp+0BCh+Size], esi ; Size
.text:00404F72                 call    malloc
.text:00404F77                 mov     [esp+0BCh+Size], eax ; void *
.text:00404F7A                 mov     ebx, [esp+0BCh+var_28]
.text:00404F81                 mov     ecx, [esp+0BCh+Src]
.text:00404F88                 shl     ebx, 2
.text:00404F8B                 mov     [esp+0BCh+var_B4], ebx ; Size
.text:00404F8F                 mov     [esp+0BCh+var_B8], ecx ; Src
.text:00404F93                 call    memcpy
.text:00404F98                 mov     [esp+0BCh+Src], eax
.text:00404F9F                 test    eax, eax
.text:00404FA1                 jz      loc_403901
.text:00404FA7                 mov     edx, [esp+0BCh+var_28]
.text:00404FAE                 mov     esi, [esp+0BCh+var_24]
.text:00404FB5                 add     edx, edx
.text:00404FB7                 mov     [esp+0BCh+var_28], edx
.text:00404FBE                 mov     edi, edx
.text:00404FC0                 sub     edx, esi
.text:00404FC2                 cmp     edx, [esp+0BCh+var_9C]
.text:00404FC6                 jb      short loc_404F54
.text:00404FC8
.text:00404FC8 loc_404FC8:                             ; CODE XREF: sub_403180+1DCE↑j
.text:00404FC8                 mov     ecx, [esp+0BCh+var_60]
.text:00404FCC                 mov     eax, [esp+0BCh+var_64]
.text:00404FD0                 cmp     ecx, eax
.text:00404FD2                 ja      loc_4050B7
.text:00404FD8                 mov     ebx, [esp+0BCh+Src]
.text:00404FDF
.text:00404FDF loc_404FDF:                             ; CODE XREF: sub_403180+1EBD↓j
.text:00404FDF                 mov     eax, [esp+0BCh+var_68]
.text:00404FE3                 mov     edi, [eax+ecx*4]
.text:00404FE6                 mov     [ebx+esi*4], edi
.text:00404FE9                 mov     edx, [esp+0BCh+var_6C]
.text:00404FED                 mov     edi, [esp+0BCh+var_24]
.text:00404FF4                 mov     ebx, [esp+0BCh+Src]
.text:00404FFB                 mov     esi, [edx+ecx*4]
.text:00404FFE                 inc     edi
.text:00404FFF                 mov     [esp+0BCh+var_24], edi
.text:00405006                 mov     [ebx+edi*4], esi
.text:00405009                 mov     edi, [esp+0BCh+var_24]
.text:00405010                 mov     eax, [esp+0BCh+var_78]
.text:00405014                 mov     ebx, [esp+0BCh+Src]
.text:0040501B                 inc     edi
.text:0040501C                 mov     [esp+0BCh+var_24], edi
.text:00405023                 mov     esi, [eax+ecx*4]
.text:00405026                 inc     ecx
.text:00405027                 mov     [ebx+edi*4], esi
.text:0040502A                 mov     esi, [esp+0BCh+var_24]
.text:00405031                 inc     esi
.text:00405032                 cmp     ecx, [esp+0BCh+var_64]
.text:00405036                 mov     [esp+0BCh+var_24], esi
.text:0040503D                 jbe     short loc_404FDF
.text:0040503F
.text:0040503F loc_40503F:                             ; CODE XREF: sub_403180+1F3E↓j
.text:0040503F                 mov     edi, [esp+0BCh+var_60]
.text:00405043                 mov     [ebx+esi*4], edi
.text:00405046                 mov     eax, [esp+0BCh+var_24]
.text:0040504D                 mov     ecx, [esp+0BCh+Src]
.text:00405054                 mov     edx, [esp+0BCh+var_64]
.text:00405058                 inc     eax
.text:00405059                 mov     [esp+0BCh+var_24], eax
.text:00405060                 mov     [ecx+eax*4], edx
.text:00405063                 mov     edi, [esp+0BCh+var_24]
.text:0040506A                 mov     esi, [esp+0BCh+var_30]
.text:00405071                 mov     edx, [esp+0BCh+Src]
.text:00405078                 inc     edi
.text:00405079                 add     ebp, esi
.text:0040507B                 mov     [esp+0BCh+var_24], edi
.text:00405082                 mov     [edx+edi*4], ebp
.text:00405085                 mov     ecx, [esp+0BCh+var_24]
.text:0040508C                 mov     ebp, [esp+0BCh+Src]
.text:00405093                 mov     ebx, [esp+0BCh+var_44]
.text:00405097                 inc     ecx
.text:00405098                 mov     [esp+0BCh+var_24], ecx
.text:0040509F                 mov     [ebp+ecx*4+0], ebx
.text:004050A3                 mov     esi, [esp+0BCh+var_24]
.text:004050AA                 inc     esi
.text:004050AB                 mov     [esp+0BCh+var_24], esi
.text:004050B2                 jmp     loc_4034B0
.text:004050B7 ; ---------------------------------------------------------------------------
.text:004050B7
.text:004050B7 loc_4050B7:                             ; CODE XREF: sub_403180+1E52↑j
.text:004050B7                 mov     ebx, [esp+0BCh+Src]
.text:004050BE                 jmp     loc_40503F
.text:004050C3 ; ---------------------------------------------------------------------------
.text:004050C3
.text:004050C3 loc_4050C3:                             ; CODE XREF: sub_403180+1CE0↑j
.text:004050C3                                         ; sub_403180+1CE9↑j ...
.text:004050C3                 mov     edx, [esp+0BCh+var_30]
.text:004050CA                 lea     eax, [edx+2]
.text:004050CD                 movsx   esi, byte ptr [edx+1]
.text:004050D1                 movzx   ebp, byte ptr [edx]
.text:004050D4                 mov     [esp+0BCh+var_30], eax
.text:004050DB                 shl     esi, 8
.text:004050DE                 add     ebp, esi
.text:004050E0                 cmp     [esp+0BCh+var_97], 0
.text:004050E5                 jz      loc_404E6F
.text:004050EB                 lea     edi, [edx+4]
.text:004050EE                 mov     [esp+0BCh+var_30], edi
.text:004050F5                 jmp     loc_404E6F
.text:004050FA ; ---------------------------------------------------------------------------
.text:004050FA
.text:004050FA loc_4050FA:                             ; CODE XREF: sub_403180+1CD7↑j
.text:004050FA                 cmp     eax, 16h
.text:004050FD                 jnz     loc_404E6F
.text:00405103                 mov     [esp+0BCh+var_97], 1
.text:00405108                 jmp     short loc_4050C3
.text:0040510A ; ---------------------------------------------------------------------------
.text:0040510A
.text:0040510A loc_40510A:                             ; CODE XREF: sub_403180+1C4F↑j
.text:0040510A                 movzx   eax, dl
.text:0040510D                 mov     [esp+0BCh+var_64], eax
.text:00405111                 jmp     loc_404DE5
.text:00405116 ; ---------------------------------------------------------------------------
.text:00405116
.text:00405116 loc_405116:                             ; CODE XREF: sub_403180+1C1B↑j
.text:00405116                 mov     [esp+0BCh+var_60], 101h
.text:0040511E                 mov     [esp+0BCh+var_64], 100h
.text:00405126                 movzx   ecx, byte ptr [edx]
.text:00405129                 jmp     loc_404DE5
.text:0040512E ; ---------------------------------------------------------------------------
.text:0040512E
.text:0040512E loc_40512E:                             ; CODE XREF: sub_403180+1BE1↑j
.text:0040512E                 mov     eax, [esp+0BCh+var_44]
.text:00405132                 jmp     loc_404D67
.text:00405137 ; ---------------------------------------------------------------------------
.text:00405137
.text:00405137 loc_405137:                             ; CODE XREF: sub_403180+1BCF↑j
.text:00405137                 mov     ebp, [esp+0BCh+var_6C]
.text:0040513B                 mov     eax, [ebp+edx*4+0]
.text:0040513F                 jmp     loc_404D67
.text:00405144 ; ---------------------------------------------------------------------------
.text:00405144
.text:00405144 loc_405144:                             ; CODE XREF: sub_403180+A04↑j
.text:00405144                                         ; DATA XREF: .text:jpt_403B84↑o
.text:00405144                 mov     ebx, [esp+0BCh+var_4C] ; jumptable 00403B84 case 6
.text:00405148                 mov     edx, [esp+0BCh+var_78]
.text:0040514C                 mov     [esp+0BCh+var_30], ebx
.text:00405153                 movzx   ecx, byte ptr [ebx]
.text:00405156                 movzx   esi, cl
.text:00405159                 movzx   ebp, byte ptr [edx+esi*4]
.text:0040515D                 and     ebp, 3
.text:00405160                 cmp     ebp, 3
.text:00405163                 jz      loc_4051F4
.text:00405169
.text:00405169 loc_405169:                             ; CODE XREF: sub_403180+20A6↓j
.text:00405169                 mov     esi, [esp+0BCh+var_78]
.text:0040516D                 movzx   edx, cl
.text:00405170                 test    byte ptr [esi+edx*4], 3
.text:00405174                 jz      short loc_4051EB
.text:00405176                 mov     ebx, [esp+0BCh+var_68]
.text:0040517A                 mov     eax, [ebx+edx*4]
.text:0040517D                 cmp     eax, offset unk_411240
.text:00405182                 jz      short loc_4051E5
.text:00405184
.text:00405184 loc_405184:                             ; CODE XREF: sub_403180+2069↓j
.text:00405184                                         ; sub_403180+2072↓j
.text:00405184                 mov     ebp, [esp+0BCh+var_70]
.text:00405188                 mov     ebx, [esp+0BCh+var_68]
.text:0040518C                 mov     ecx, [esp+0BCh+var_78]
.text:00405190                 mov     [ebp+edx*4+0], eax
.text:00405194                 mov     ebp, [esp+0BCh+var_4C]
.text:00405198                 mov     eax, [esp+0BCh+var_44]
.text:0040519C                 movzx   edi, byte ptr [ebp+0]
.text:004051A0                 mov     [ebx+edi*4], eax
.text:004051A3                 movzx   esi, byte ptr [ebp+0]
.text:004051A7                 or      byte ptr [ecx+esi*4], 4
.text:004051AB                 movzx   edx, byte ptr [ebp+0]
.text:004051AF                 and     byte ptr [ecx+edx*4], 0F7h
.text:004051B3                 mov     [esp+0BCh+var_8C], 0
.text:004051BB                 movzx   esi, byte ptr [ebp+0]
.text:004051BF                 cmp     [esp+0BCh+var_60], 101h
.text:004051C7                 mov     [esp+0BCh+var_64], esi
.text:004051CB                 jz      short loc_4051DF
.text:004051CD
.text:004051CD loc_4051CD:                             ; CODE XREF: sub_403180+2063↓j
.text:004051CD                 add     [esp+0BCh+var_4C], 2
.text:004051D2                 mov     ecx, [esp+0BCh+var_4C]
.text:004051D6                 mov     [esp+0BCh+var_54], ecx
.text:004051DA                 jmp     loc_403D50
.text:004051DF ; ---------------------------------------------------------------------------
.text:004051DF
.text:004051DF loc_4051DF:                             ; CODE XREF: sub_403180+204B↑j
.text:004051DF                 mov     [esp+0BCh+var_60], esi
.text:004051E3                 jmp     short loc_4051CD
.text:004051E5 ; ---------------------------------------------------------------------------
.text:004051E5
.text:004051E5 loc_4051E5:                             ; CODE XREF: sub_403180+2002↑j
.text:004051E5                 mov     eax, [esp+0BCh+var_44]
.text:004051E9                 jmp     short loc_405184
.text:004051EB ; ---------------------------------------------------------------------------
.text:004051EB
.text:004051EB loc_4051EB:                             ; CODE XREF: sub_403180+1FF4↑j
.text:004051EB                 mov     edi, [esp+0BCh+var_68]
.text:004051EF                 mov     eax, [edi+edx*4]
.text:004051F2                 jmp     short loc_405184
.text:004051F4 ; ---------------------------------------------------------------------------
.text:004051F4
.text:004051F4 loc_4051F4:                             ; CODE XREF: sub_403180+1FE3↑j
.text:004051F4                 mov     [esp+0BCh+var_B4], edx
.text:004051F8                 mov     eax, [esp+0BCh+var_50]
.text:004051FC                 lea     edx, [esp+0BCh+var_30]
.text:00405203                 mov     [esp+0BCh+Size], edx
.text:00405206                 mov     [esp+0BCh+var_B8], eax
.text:0040520A                 call    sub_405500
.text:0040520F                 mov     edi, [esp+0BCh+var_78]
.text:00405213                 mov     ebp, eax
.text:00405215                 and     ebp, 3
.text:00405218                 mov     ecx, [edi+esi*4]
.text:0040521B                 and     ecx, 0FFFFFFFCh
.text:0040521E                 or      ecx, ebp
.text:00405220                 mov     [edi+esi*4], ecx
.text:00405223                 movzx   ecx, byte ptr [ebx]
.text:00405226                 jmp     loc_405169
.text:00405226 ; ---------------------------------------------------------------------------
.text:0040522B                 align 10h
.text:00405230
.text:00405230 loc_405230:                             ; CODE XREF: sub_403180:loc_4033F7↑j
.text:00405230                                         ; sub_403180+BF6↑j ...
.text:00405230                 mov     edx, [esp+0BCh+var_4C] ; jumptable 004033F7 case 5
.text:00405230                                         ; jumptable 00403D76 case 5
.text:00405230                                         ; jumptable 00403E48 case 5
.text:00405234                 mov     ebp, [esp+0BCh+var_48]
.text:00405238                 cmp     byte ptr [edx-1], 5
.text:0040523C                 setz    [esp+0BCh+var_95]
.text:00405241                 cmp     [esp+0BCh+var_44], ebp
.text:00405245                 jz      loc_405300
.text:0040524B
.text:0040524B loc_40524B:                             ; CODE XREF: sub_403180+21A1↓j
.text:0040524B                 mov     esi, [esp+0BCh+var_58]
.text:0040524F                 test    esi, esi
.text:00405251                 jz      loc_4052EF
.text:00405257                 mov     ebx, [esp+0BCh+var_44]
.text:0040525B                 mov     ecx, [esp+0BCh+var_58]
.text:0040525F                 movzx   edi, byte ptr [ebx]
.text:00405262                 movzx   ebx, byte ptr [edi+ecx]
.text:00405266
.text:00405266 loc_405266:                             ; CODE XREF: sub_403180+2177↓j
.text:00405266                 mov     esi, [esp+0BCh+var_4C]
.text:0040526A                 movzx   eax, bl
.text:0040526D                 movzx   edx, byte ptr [esi]
.text:00405270                 movzx   edi, dl
.text:00405273                 shl     edi, 3
.text:00405276                 mov     [esp+0BCh+var_96], dl
.text:0040527A                 cmp     eax, edi
.text:0040527C                 jnb     short loc_40529B
.text:0040527E                 mov     dl, bl
.text:00405280                 shr     dl, 3
.text:00405283                 movzx   ecx, dl
.text:00405286                 movzx   eax, byte ptr [ecx+esi+1]
.text:0040528B                 mov     ecx, ebx
.text:0040528D                 and     ecx, 7
.text:00405290                 sar     eax, cl
.text:00405292                 test    al, 1
.text:00405294                 jz      short loc_40529B
.text:00405296                 xor     [esp+0BCh+var_95], 1
.text:0040529B
.text:0040529B loc_40529B:                             ; CODE XREF: sub_403180+20FC↑j
.text:0040529B                                         ; sub_403180+2114↑j
.text:0040529B                 movzx   ebx, [esp+0BCh+var_96]
.text:004052A0                 mov     ebp, [esp+0BCh+var_4C]
.text:004052A4                 cmp     [esp+0BCh+var_95], 0
.text:004052A9                 lea     esi, [ebx+ebp+1]
.text:004052AD                 mov     [esp+0BCh+var_4C], esi
.text:004052B1                 jz      loc_4035D2
.text:004052B7                 mov     edi, [esp+0BCh+var_8C]
.text:004052BB                 test    edi, edi
.text:004052BD                 jnz     loc_403F9F
.text:004052C3                 mov     [esp+0BCh+var_8C], 1
.text:004052CB                 mov     eax, [esp+0BCh+var_60]
.text:004052CF                 mov     edx, [esp+0BCh+var_64]
.text:004052D3                 cmp     eax, edx
.text:004052D5                 ja      loc_403F9F
.text:004052DB
.text:004052DB loc_4052DB:                             ; CODE XREF: sub_403180+2168↓j
.text:004052DB                 mov     ecx, [esp+0BCh+var_78]
.text:004052DF                 or      byte ptr [ecx+eax*4], 18h
.text:004052E3                 inc     eax
.text:004052E4                 cmp     eax, [esp+0BCh+var_64]
.text:004052E8                 jbe     short loc_4052DB
.text:004052EA                 jmp     loc_403F9F
.text:004052EF ; ---------------------------------------------------------------------------
.text:004052EF
.text:004052EF loc_4052EF:                             ; CODE XREF: sub_403180+20D1↑j
.text:004052EF                 mov     ebp, [esp+0BCh+var_44]
.text:004052F3                 movzx   ebx, byte ptr [ebp+0]
.text:004052F7                 jmp     loc_405266
.text:004052F7 ; ---------------------------------------------------------------------------
.text:004052FC                 align 10h
.text:00405300
.text:00405300 loc_405300:                             ; CODE XREF: sub_403180+20C5↑j
.text:00405300                                         ; sub_403180+219F↓j
.text:00405300                 mov     ecx, [esp+0BCh+var_40]
.text:00405304                 cmp     [esp+0BCh+var_48], ecx
.text:00405308                 jz      loc_4035D2
.text:0040530E                 mov     [esp+0BCh+var_48], ecx
.text:00405312                 mov     eax, [esp+0BCh+arg_C]
.text:00405319                 cmp     eax, ecx
.text:0040531B                 mov     [esp+0BCh+var_44], eax
.text:0040531F                 jz      short loc_405300
.text:00405321                 jmp     loc_40524B
.text:00405326 ; ---------------------------------------------------------------------------
.text:00405326
.text:00405326 loc_405326:                             ; CODE XREF: sub_403180:loc_4033F7↑j
.text:00405326                                         ; sub_403180+BF6↑j ...
.text:00405326                 jmp     loc_405230      ; jumptable 004033F7 case 4
.text:00405326                                         ; jumptable 00403D76 case 4
.text:00405326                                         ; jumptable 00403E48 case 4
.text:0040532B ; ---------------------------------------------------------------------------
.text:0040532B
.text:0040532B loc_40532B:                             ; CODE XREF: sub_403180+C88↑j
.text:0040532B                 mov     ebx, [esp+0BCh+var_34]
.text:00405332                 movzx   eax, byte ptr [ebx-1]
.text:00405336                 jmp     loc_403E15
.text:0040533B ; ---------------------------------------------------------------------------
.text:0040533B
.text:0040533B loc_40533B:                             ; CODE XREF: sub_403180+C76↑j
.text:0040533B                 mov     edi, [esp+0BCh+arg_C]
.text:00405342                 movzx   eax, byte ptr [edi]
.text:00405345                 jmp     loc_403E15
.text:0040534A ; ---------------------------------------------------------------------------
.text:0040534A
.text:0040534A loc_40534A:                             ; CODE XREF: sub_403180+C43↑j
.text:0040534A                 mov     esi, [esp+0BCh+var_34]
.text:00405351                 movzx   eax, byte ptr [esi-1]
.text:00405355                 jmp     loc_403DD1
.text:0040535A ; ---------------------------------------------------------------------------
.text:0040535A
.text:0040535A loc_40535A:                             ; CODE XREF: sub_403180+C33↑j
.text:0040535A                 mov     ebp, [esp+0BCh+arg_C]
.text:00405361                 movzx   eax, byte ptr [ebp+0]
.text:00405365                 jmp     loc_403DD1
.text:0040536A ; ---------------------------------------------------------------------------
.text:0040536A
.text:0040536A loc_40536A:                             ; CODE XREF: sub_403180+C01↑j
.text:0040536A                 mov     edx, [esp+0BCh+arg_C]
.text:00405371                 cmp     [esp+0BCh+var_44], edx
.text:00405375                 jmp     loc_403D92
.text:0040537A ; ---------------------------------------------------------------------------
.text:0040537A
.text:0040537A loc_40537A:                             ; CODE XREF: sub_403180+AFB↑j
.text:0040537A                 mov     ebx, [esp+0BCh+arg_C]
.text:00405381                 cmp     [esp+0BCh+var_44], ebx
.text:00405385                 jmp     loc_403C8C
.text:0040538A ; ---------------------------------------------------------------------------
.text:0040538A
.text:0040538A loc_40538A:                             ; CODE XREF: sub_403180+993↑j
.text:0040538A                 mov     edi, [esp+0BCh+var_44]
.text:0040538E                 cmp     byte ptr [edi], 0
.text:00405391                 jmp     loc_403B29
.text:00405396 ; ---------------------------------------------------------------------------
.text:00405396
.text:00405396 loc_405396:                             ; CODE XREF: sub_403180+964↑j
.text:00405396                 mov     edi, [esp+0BCh+var_44]
.text:0040539A                 cmp     byte ptr [edi], 0Ah
.text:0040539D                 jmp     loc_403AFA
.text:004053A2 ; ---------------------------------------------------------------------------
.text:004053A2
.text:004053A2 loc_4053A2:                             ; CODE XREF: sub_403180+94B↑j
.text:004053A2                                         ; sub_403180+2241↓j
.text:004053A2                 mov     eax, [esp+0BCh+var_40]
.text:004053A6                 cmp     [esp+0BCh+var_48], eax
.text:004053AA                 jz      loc_4035D2
.text:004053B0                 mov     [esp+0BCh+var_48], eax
.text:004053B4                 mov     ecx, [esp+0BCh+arg_C]
.text:004053BB                 cmp     ecx, eax
.text:004053BD                 mov     [esp+0BCh+var_44], ecx
.text:004053C1                 jz      short loc_4053A2
.text:004053C3                 jmp     loc_403AD1
.text:004053C8 ; ---------------------------------------------------------------------------
.text:004053C8
.text:004053C8 loc_4053C8:                             ; CODE XREF: sub_403180+21B↑j
.text:004053C8                                         ; sub_403180+22F↑j
.text:004053C8                 mov     edi, [esp+0BCh+arg_C]
.text:004053CF                 mov     esi, [esp+0BCh+arg_14]
.text:004053D6                 mov     ecx, [esp+0BCh+arg_8]
.text:004053DD                 mov     ebp, [esp+0BCh+var_40]
.text:004053E1                 add     edi, esi
.text:004053E3                 sub     edi, ecx
.text:004053E5                 mov     [esp+0BCh+var_44], edi
.text:004053E9                 mov     [esp+0BCh+var_48], ebp
.text:004053ED                 jmp     loc_4033D4
.text:004053F2 ; ---------------------------------------------------------------------------
.text:004053F2
.text:004053F2 loc_4053F2:                             ; CODE XREF: sub_403180+1F1↑j
.text:004053F2                 mov     ebp, [esp+0BCh+arg_C]
.text:004053F9                 mov     ebx, [esp+0BCh+arg_8]
.text:00405400                 mov     edi, [esp+0BCh+var_34]
.text:00405407                 add     esi, ebp
.text:00405409                 sub     esi, ebx
.text:0040540B                 mov     [esp+0BCh+var_3C], edi
.text:00405412                 jmp     loc_40338E
.text:00405417 ; ---------------------------------------------------------------------------
.text:00405417
.text:00405417 loc_405417:                             ; CODE XREF: sub_403180+B0↑j
.text:00405417                 mov     edi, [esp+0BCh+var_5C]
.text:0040541B                 shl     edi, 2
.text:0040541E                 mov     [esp+0BCh+Size], edi ; Size
.text:00405421                 call    malloc
.text:00405426                 mov     [esp+0BCh+var_68], eax
.text:0040542A                 mov     [esp+0BCh+Size], edi ; Size
.text:0040542D                 call    malloc
.text:00405432                 mov     [esp+0BCh+var_6C], eax
.text:00405436                 mov     [esp+0BCh+Size], edi ; Size
.text:00405439                 call    malloc
.text:0040543E                 mov     [esp+0BCh+var_70], eax
.text:00405442                 mov     [esp+0BCh+Size], edi ; Size
.text:00405445                 call    malloc
.text:0040544A                 mov     [esp+0BCh+var_74], eax
.text:0040544E                 mov     [esp+0BCh+Size], edi ; Size
.text:00405451                 call    malloc
.text:00405456                 mov     [esp+0BCh+var_80], eax
.text:0040545A                 mov     [esp+0BCh+Size], edi ; Size
.text:0040545D                 call    malloc
.text:00405462                 mov     [esp+0BCh+var_84], eax
.text:00405466                 mov     [esp+0BCh+Size], edi ; Size
.text:00405469                 call    malloc
.text:0040546E                 mov     [esp+0BCh+var_78], eax
.text:00405472                 mov     [esp+0BCh+Size], edi ; Size
.text:00405475                 call    malloc
.text:0040547A                 mov     [esp+0BCh+var_90], eax
.text:0040547E                 mov     [esp+0BCh+Size], edi ; Size
.text:00405481                 call    malloc
.text:00405486                 mov     [esp+0BCh+var_94], eax
.text:0040548A                 mov     ecx, [esp+0BCh+var_68]
.text:0040548E                 test    ecx, ecx
.text:00405490                 jz      loc_403901
.text:00405496                 mov     ebx, [esp+0BCh+var_6C]
.text:0040549A                 test    ebx, ebx
.text:0040549C                 jz      loc_403901
.text:004054A2                 mov     edx, [esp+0BCh+var_70]
.text:004054A6                 test    edx, edx
.text:004054A8                 jz      loc_403901
.text:004054AE                 mov     ebp, [esp+0BCh+var_74]
.text:004054B2                 test    ebp, ebp
.text:004054B4                 jz      loc_403901
.text:004054BA                 mov     ecx, [esp+0BCh+var_78]
.text:004054BE                 test    ecx, ecx
.text:004054C0                 jz      loc_403901
.text:004054C6                 mov     edi, [esp+0BCh+var_80]
.text:004054CA                 test    edi, edi
.text:004054CC                 jz      loc_403901
.text:004054D2                 mov     ebx, [esp+0BCh+var_84]
.text:004054D6                 test    ebx, ebx
.text:004054D8                 jz      loc_403901
.text:004054DE                 mov     edx, [esp+0BCh+var_90]
.text:004054E2                 test    edx, edx
.text:004054E4                 jz      loc_403901
.text:004054EA                 test    eax, eax
.text:004054EC                 jnz     loc_40327E
.text:004054F2                 jmp     loc_403901
.text:004054F2 sub_403180      endp
.text:004054F2
.text:004054F2 ; ---------------------------------------------------------------------------
.text:004054F7                 align 10h
.text:00405500
.text:00405500 ; =============== S U B R O U T I N E =======================================
.text:00405500
.text:00405500
.text:00405500 sub_405500      proc near               ; CODE XREF: sub_403180+208A↑p
.text:00405500                                         ; sub_4056B0+CA↓p
.text:00405500
.text:00405500 var_2C          = dword ptr -2Ch
.text:00405500 var_28          = dword ptr -28h
.text:00405500 var_24          = dword ptr -24h
.text:00405500 var_14          = dword ptr -14h
.text:00405500 arg_0           = dword ptr  4
.text:00405500 arg_4           = dword ptr  8
.text:00405500 arg_8           = dword ptr  0Ch
.text:00405500
.text:00405500                 push    ebp
.text:00405501                 push    edi
.text:00405502                 push    esi
.text:00405503                 push    ebx
.text:00405504                 sub     esp, 1Ch
.text:00405507                 mov     ebp, [esp+2Ch+arg_0]
.text:0040550B                 mov     edi, [esp+2Ch+arg_4]
.text:0040550F                 mov     esi, [esp+2Ch+arg_8]
.text:00405513                 mov     eax, [ebp+0]
.text:00405516                 add     eax, 2
.text:00405519                 cmp     eax, edi
.text:0040551B                 mov     ecx, eax
.text:0040551D                 mov     [esp+2Ch+var_14], eax
.text:00405521                 jnb     short loc_405563
.text:00405523                 lea     esi, [esi+0]
.text:00405529                 lea     edi, [edi+0]
.text:00405530
.text:00405530 loc_405530:                             ; CODE XREF: sub_405500+61↓j
.text:00405530                 movzx   eax, byte ptr [ecx]
.text:00405533                 cmp     eax, 7
.text:00405536                 jz      loc_405613
.text:0040553C                 cmp     eax, 0Fh
.text:0040553F                 jz      short loc_405570
.text:00405541                 mov     [esp+2Ch+var_24], esi
.text:00405545                 lea     ebx, [esp+2Ch+var_14]
.text:00405549                 mov     [esp+2Ch+var_28], edi
.text:0040554D                 mov     [esp+2Ch+var_2C], ebx
.text:00405550                 call    sub_4056B0
.text:00405555                 xor     edx, edx
.text:00405557                 test    al, al
.text:00405559                 jz      short loc_405565
.text:0040555B
.text:0040555B loc_40555B:                             ; CODE XREF: sub_405500+8B↓j
.text:0040555B                                         ; sub_405500+BE↓j
.text:0040555B                 mov     ecx, [esp+2Ch+var_14]
.text:0040555F                 cmp     ecx, edi
.text:00405561                 jb      short loc_405530
.text:00405563
.text:00405563 loc_405563:                             ; CODE XREF: sub_405500+21↑j
.text:00405563                 xor     edx, edx
.text:00405565
.text:00405565 loc_405565:                             ; CODE XREF: sub_405500+59↑j
.text:00405565                                         ; sub_405500+B8↓j ...
.text:00405565                 add     esp, 1Ch
.text:00405568                 mov     eax, edx
.text:0040556A                 pop     ebx
.text:0040556B                 pop     esi
.text:0040556C                 pop     edi
.text:0040556D                 pop     ebp
.text:0040556E                 retn
.text:0040556E ; ---------------------------------------------------------------------------
.text:0040556F                 align 10h
.text:00405570
.text:00405570 loc_405570:                             ; CODE XREF: sub_405500+3F↑j
.text:00405570                 lea     edx, [ecx+1]
.text:00405573                 mov     [esp+2Ch+var_14], edx
.text:00405577                 movsx   eax, byte ptr [edx+1]
.text:0040557B                 lea     edx, [ecx+3]
.text:0040557E                 movzx   ebx, byte ptr [ecx+1]
.text:00405582                 mov     [esp+2Ch+var_14], edx
.text:00405586                 shl     eax, 8
.text:00405589                 add     ebx, eax
.text:0040558B                 js      short loc_40555B
.text:0040558D                 cmp     byte ptr [ebx+edx-3], 0Eh
.text:00405592                 jz      short loc_4055C0
.text:00405594
.text:00405594 loc_405594:                             ; CODE XREF: sub_405500+E9↓j
.text:00405594                                         ; sub_405500+111↓j
.text:00405594                 movsx   ecx, byte ptr [edx-1]
.text:00405598                 movzx   ebx, byte ptr [edx-2]
.text:0040559C                 mov     [esp+2Ch+var_2C], edx
.text:0040559F                 mov     [esp+2Ch+var_24], esi
.text:004055A3                 shl     ecx, 8
.text:004055A6                 add     ebx, ecx
.text:004055A8                 lea     ecx, [ebx+edx]
.text:004055AB                 mov     [esp+2Ch+var_28], ecx
.text:004055AF                 call    sub_405630
.text:004055B4                 xor     edx, edx
.text:004055B6                 test    al, al
.text:004055B8                 jz      short loc_405565
.text:004055BA                 add     [esp+2Ch+var_14], ebx
.text:004055BE                 jmp     short loc_40555B
.text:004055C0 ; ---------------------------------------------------------------------------
.text:004055C0
.text:004055C0 loc_4055C0:                             ; CODE XREF: sub_405500+92↑j
.text:004055C0                                         ; sub_405500+109↓j
.text:004055C0                 mov     [esp+2Ch+var_2C], edx
.text:004055C3                 lea     ecx, [ebx+edx-3]
.text:004055C7                 mov     [esp+2Ch+var_24], esi
.text:004055CB                 mov     [esp+2Ch+var_28], ecx
.text:004055CF                 call    sub_405630
.text:004055D4                 xor     edx, edx
.text:004055D6                 test    al, al
.text:004055D8                 jz      short loc_405565
.text:004055DA                 mov     ecx, [esp+2Ch+var_14]
.text:004055DE                 add     ecx, ebx
.text:004055E0                 mov     edx, ecx
.text:004055E2                 mov     [esp+2Ch+var_14], ecx
.text:004055E6                 cmp     byte ptr [ecx], 0Fh
.text:004055E9                 jnz     short loc_405594
.text:004055EB                 inc     edx
.text:004055EC                 mov     [esp+2Ch+var_14], edx
.text:004055F0                 movsx   eax, byte ptr [edx+1]
.text:004055F4                 lea     edx, [ecx+3]
.text:004055F7                 movzx   ebx, byte ptr [ecx+1]
.text:004055FB                 mov     [esp+2Ch+var_14], edx
.text:004055FF                 shl     eax, 8
.text:00405602                 add     ebx, eax
.text:00405604                 cmp     byte ptr [ebx+edx-3], 0Eh
.text:00405609                 jz      short loc_4055C0
.text:0040560B                 mov     [esp+2Ch+var_14], ecx
.text:0040560F                 mov     edx, ecx
.text:00405611                 jmp     short loc_405594
.text:00405613 ; ---------------------------------------------------------------------------
.text:00405613
.text:00405613 loc_405613:                             ; CODE XREF: sub_405500+36↑j
.text:00405613                 lea     edx, [ecx+2]
.text:00405616                 mov     [ebp+0], edx
.text:00405619                 mov     edx, 1
.text:0040561E                 jmp     loc_405565
.text:0040561E sub_405500      endp
.text:0040561E
.text:0040561E ; ---------------------------------------------------------------------------
.text:00405623                 align 10h
.text:00405630
.text:00405630 ; =============== S U B R O U T I N E =======================================
.text:00405630
.text:00405630
.text:00405630 sub_405630      proc near               ; CODE XREF: sub_405500+AF↑p
.text:00405630                                         ; sub_405500+CF↑p
.text:00405630
.text:00405630 var_1C          = dword ptr -1Ch
.text:00405630 var_18          = dword ptr -18h
.text:00405630 var_14          = dword ptr -14h
.text:00405630 var_C           = dword ptr -0Ch
.text:00405630 arg_0           = dword ptr  4
.text:00405630 arg_4           = dword ptr  8
.text:00405630 arg_8           = dword ptr  0Ch
.text:00405630
.text:00405630                 push    esi
.text:00405631                 push    ebx
.text:00405632                 sub     esp, 14h
.text:00405635                 mov     edx, [esp+1Ch+arg_0]
.text:00405639                 mov     ebx, [esp+1Ch+arg_4]
.text:0040563D                 mov     esi, [esp+1Ch+arg_8]
.text:00405641                 mov     ecx, edx
.text:00405643                 mov     [esp+1Ch+var_C], edx
.text:00405647                 cmp     edx, ebx
.text:00405649                 jnb     short loc_405677
.text:0040564B                 nop
.text:0040564C                 lea     esi, [esi+0]
.text:00405650
.text:00405650 loc_405650:                             ; CODE XREF: sub_405630+45↓j
.text:00405650                 cmp     byte ptr [ecx], 0Fh
.text:00405653                 jz      short loc_405684
.text:00405655                 mov     [esp+1Ch+var_14], esi
.text:00405659                 lea     edx, [esp+1Ch+var_C]
.text:0040565D                 mov     [esp+1Ch+var_1C], edx
.text:00405660                 mov     [esp+1Ch+var_18], ebx
.text:00405664                 call    sub_4056B0
.text:00405669                 xor     edx, edx
.text:0040566B                 test    al, al
.text:0040566D                 jz      short loc_40567C
.text:0040566F
.text:0040566F loc_40566F:                             ; CODE XREF: sub_405630+70↓j
.text:0040566F                 mov     ecx, [esp+1Ch+var_C]
.text:00405673                 cmp     ecx, ebx
.text:00405675                 jb      short loc_405650
.text:00405677
.text:00405677 loc_405677:                             ; CODE XREF: sub_405630+19↑j
.text:00405677                 mov     edx, 1
.text:0040567C
.text:0040567C loc_40567C:                             ; CODE XREF: sub_405630+3D↑j
.text:0040567C                 add     esp, 14h
.text:0040567F                 mov     eax, edx
.text:00405681                 pop     ebx
.text:00405682                 pop     esi
.text:00405683                 retn
.text:00405684 ; ---------------------------------------------------------------------------
.text:00405684
.text:00405684 loc_405684:                             ; CODE XREF: sub_405630+23↑j
.text:00405684                 lea     eax, [ecx+1]
.text:00405687                 mov     [esp+1Ch+var_C], eax
.text:0040568B                 movsx   eax, byte ptr [eax+1]
.text:0040568F                 movzx   edx, byte ptr [ecx+1]
.text:00405693                 shl     eax, 8
.text:00405696                 add     edx, eax
.text:00405698                 lea     eax, [edx+ecx+3]
.text:0040569C                 mov     [esp+1Ch+var_C], eax
.text:004056A0                 jmp     short loc_40566F
.text:004056A0 sub_405630      endp
.text:004056A0
.text:004056A0 ; ---------------------------------------------------------------------------
.text:004056A2                 align 10h
.text:004056B0
.text:004056B0 ; =============== S U B R O U T I N E =======================================
.text:004056B0
.text:004056B0
.text:004056B0 sub_4056B0      proc near               ; CODE XREF: sub_405500+50↑p
.text:004056B0                                         ; sub_405630+34↑p
.text:004056B0
.text:004056B0 var_1C          = dword ptr -1Ch
.text:004056B0 var_18          = dword ptr -18h
.text:004056B0 var_14          = dword ptr -14h
.text:004056B0 var_10          = dword ptr -10h
.text:004056B0 var_C           = dword ptr -0Ch
.text:004056B0 var_8           = dword ptr -8
.text:004056B0 var_4           = dword ptr -4
.text:004056B0 arg_0           = dword ptr  4
.text:004056B0 arg_4           = dword ptr  8
.text:004056B0 arg_8           = dword ptr  0Ch
.text:004056B0
.text:004056B0                 sub     esp, 1Ch
.text:004056B3                 mov     [esp+1Ch+var_4], edi
.text:004056B7                 mov     edi, [esp+1Ch+arg_0]
.text:004056BB                 mov     [esp+1Ch+var_C], ebx
.text:004056BF                 mov     ebx, [esp+1Ch+arg_8]
.text:004056C3                 mov     [esp+1Ch+var_8], esi
.text:004056C7                 mov     edx, [edi]
.text:004056C9                 mov     [esp+1Ch+var_10], edx
.text:004056CD                 movzx   eax, byte ptr [edx]
.text:004056D0                 inc     edx
.text:004056D1                 mov     [esp+1Ch+var_10], edx
.text:004056D5                 cmp     eax, 1Dh        ; switch 30 cases
.text:004056D8                 ja      def_4056DE      ; jumptable 004056DE default case, cases 1-5,7,14-20,22,24,25
.text:004056DE                 jmp     ds:jpt_4056DE[eax*4] ; switch jump
.text:004056DE ; ---------------------------------------------------------------------------
.text:004056E5                 align 4
.text:004056E8 jpt_4056DE      dd offset loc_405793    ; DATA XREF: sub_4056B0+2E↑r
.text:004056E8                 dd offset def_4056DE    ; jump table for switch statement
.text:004056E8                 dd offset def_4056DE
.text:004056E8                 dd offset def_4056DE
.text:004056E8                 dd offset def_4056DE
.text:004056E8                 dd offset def_4056DE
.text:004056E8                 dd offset loc_405760
.text:004056E8                 dd offset def_4056DE
.text:004056E8                 dd offset loc_4057C2
.text:004056E8                 dd offset loc_405793
.text:004056E8                 dd offset loc_405793
.text:004056E8                 dd offset loc_405793
.text:004056E8                 dd offset loc_405793
.text:004056E8                 dd offset loc_4057D4
.text:004056E8                 dd offset def_4056DE
.text:004056E8                 dd offset def_4056DE
.text:004056E8                 dd offset def_4056DE
.text:004056E8                 dd offset def_4056DE
.text:004056E8                 dd offset def_4056DE
.text:004056E8                 dd offset def_4056DE
.text:004056E8                 dd offset def_4056DE
.text:004056E8                 dd offset loc_4057F5
.text:004056E8                 dd offset def_4056DE
.text:004056E8                 dd offset loc_405831
.text:004056E8                 dd offset def_4056DE
.text:004056E8                 dd offset def_4056DE
.text:004056E8                 dd offset loc_405793
.text:004056E8                 dd offset loc_405793
.text:004056E8                 dd offset loc_405793
.text:004056E8                 dd offset loc_405793
.text:00405760 ; ---------------------------------------------------------------------------
.text:00405760
.text:00405760 loc_405760:                             ; CODE XREF: sub_4056B0+2E↑j
.text:00405760                                         ; DATA XREF: sub_4056B0:jpt_4056DE↑o
.text:00405760                 mov     ecx, [esp+1Ch+var_10] ; jumptable 004056DE case 6
.text:00405764                 mov     edx, [esp+1Ch+arg_4]
.text:00405768                 movzx   esi, byte ptr [ecx]
.text:0040576B                 lea     ecx, [esp+1Ch+var_10]
.text:0040576F                 mov     [esp+1Ch+var_18], edx
.text:00405773                 mov     [esp+1Ch+var_1C], ecx
.text:00405776                 mov     [esp+1Ch+var_14], ebx
.text:0040577A                 call    sub_405500
.text:0040577F                 movzx   edx, byte ptr [ebx+esi*4]
.text:00405783                 mov     cl, al
.text:00405785                 and     edx, 3
.text:00405788                 cmp     edx, 3
.text:0040578B                 jz      short loc_4057B0
.text:0040578D
.text:0040578D loc_40578D:                             ; CODE XREF: sub_4056B0+110↓j
.text:0040578D                 xor     eax, eax
.text:0040578F                 test    cl, cl
.text:00405791                 jz      short loc_4057A0
.text:00405793
.text:00405793 loc_405793:                             ; CODE XREF: sub_4056B0+2E↑j
.text:00405793                                         ; DATA XREF: sub_4056B0:jpt_4056DE↑o
.text:00405793                 mov     ecx, [esp+1Ch+var_10] ; jumptable 004056DE cases 0,9-12,26-29
.text:00405797
.text:00405797 loc_405797:                             ; CODE XREF: sub_4056B0+11D↓j
.text:00405797                                         ; sub_4056B0+143↓j
.text:00405797                 mov     [edi], ecx
.text:00405799                 mov     eax, 1
.text:0040579E                 mov     esi, esi
.text:004057A0
.text:004057A0 loc_4057A0:                             ; CODE XREF: sub_4056B0+E1↑j
.text:004057A0                                         ; sub_4056B0+122↓j ...
.text:004057A0                 mov     ebx, [esp+1Ch+var_C]
.text:004057A4                 mov     esi, [esp+1Ch+var_8]
.text:004057A8                 mov     edi, [esp+1Ch+var_4]
.text:004057AC                 add     esp, 1Ch
.text:004057AF                 retn
.text:004057B0 ; ---------------------------------------------------------------------------
.text:004057B0
.text:004057B0 loc_4057B0:                             ; CODE XREF: sub_4056B0+DB↑j
.text:004057B0                 mov     eax, [ebx+esi*4]
.text:004057B3                 mov     edx, ecx
.text:004057B5                 and     edx, 3
.text:004057B8                 and     eax, 0FFFFFFFCh
.text:004057BB                 or      eax, edx
.text:004057BD                 mov     [ebx+esi*4], eax
.text:004057C0                 jmp     short loc_40578D
.text:004057C2 ; ---------------------------------------------------------------------------
.text:004057C2
.text:004057C2 loc_4057C2:                             ; CODE XREF: sub_4056B0+2E↑j
.text:004057C2                                         ; DATA XREF: sub_4056B0:jpt_4056DE↑o
.text:004057C2                 mov     ecx, [esp+1Ch+var_10] ; jumptable 004056DE case 8
.text:004057C6                 movzx   esi, byte ptr [ecx]
.text:004057C9                 test    byte ptr [ebx+esi*4], 3
.text:004057CD                 jnz     short loc_405797
.text:004057CF                 nop
.text:004057D0
.text:004057D0 def_4056DE:                             ; CODE XREF: sub_4056B0+28↑j
.text:004057D0                                         ; sub_4056B0+2E↑j ...
.text:004057D0                 xor     eax, eax        ; jumptable 004056DE default case, cases 1-5,7,14-20,22,24,25
.text:004057D2                 jmp     short loc_4057A0
.text:004057D4 ; ---------------------------------------------------------------------------
.text:004057D4
.text:004057D4 loc_4057D4:                             ; CODE XREF: sub_4056B0+2E↑j
.text:004057D4                                         ; DATA XREF: sub_4056B0:jpt_4056DE↑o
.text:004057D4                 mov     edx, [esp+1Ch+var_10] ; jumptable 004056DE case 13
.text:004057D8                 lea     ecx, [edx+2]
.text:004057DB                 movsx   esi, byte ptr [edx+1]
.text:004057DF                 movzx   ebx, byte ptr [edx]
.text:004057E2                 mov     [esp+1Ch+var_10], ecx
.text:004057E6                 shl     esi, 8
.text:004057E9                 add     ebx, esi
.text:004057EB                 js      short def_4056DE ; jumptable 004056DE default case, cases 1-5,7,14-20,22,24,25
.text:004057ED                 add     ecx, ebx
.text:004057EF
.text:004057EF loc_4057EF:                             ; CODE XREF: sub_4056B0+17F↓j
.text:004057EF                 mov     [esp+1Ch+var_10], ecx
.text:004057F3                 jmp     short loc_405797
.text:004057F5 ; ---------------------------------------------------------------------------
.text:004057F5
.text:004057F5 loc_4057F5:                             ; CODE XREF: sub_4056B0+2E↑j
.text:004057F5                                         ; DATA XREF: sub_4056B0:jpt_4056DE↑o
.text:004057F5                 mov     edx, [esp+1Ch+var_10] ; jumptable 004056DE case 21
.text:004057F9                 lea     esi, [edx+2]
.text:004057FC                 mov     [esp+1Ch+var_10], esi
.text:00405800                 movsx   eax, byte ptr [esi+1]
.text:00405804                 movzx   ebx, byte ptr [edx+2]
.text:00405808                 shl     eax, 8
.text:0040580B                 add     ebx, eax
.text:0040580D                 lea     eax, [edx+4]
.text:00405810                 mov     [esp+1Ch+var_10], eax
.text:00405814                 xor     eax, eax
.text:00405816                 test    ebx, ebx
.text:00405818                 jnz     short loc_4057A0
.text:0040581A                 mov     [esp+1Ch+var_10], edx
.text:0040581E                 mov     eax, edx
.text:00405820                 movsx   ebx, byte ptr [eax+1]
.text:00405824                 movzx   edx, byte ptr [edx]
.text:00405827                 shl     ebx, 8
.text:0040582A                 add     edx, ebx
.text:0040582C                 lea     ecx, [edx+esi]
.text:0040582F                 jmp     short loc_4057EF
.text:00405831 ; ---------------------------------------------------------------------------
.text:00405831
.text:00405831 loc_405831:                             ; CODE XREF: sub_4056B0+2E↑j
.text:00405831                                         ; DATA XREF: sub_4056B0:jpt_4056DE↑o
.text:00405831                 add     [esp+1Ch+var_10], 4 ; jumptable 004056DE case 23
.text:00405836                 jmp     short def_4056DE ; jumptable 004056DE default case, cases 1-5,7,14-20,22,24,25
.text:00405836 sub_4056B0      endp
.text:00405836
.text:00405836 ; ---------------------------------------------------------------------------
.text:00405838                 align 10h
.text:00405840
.text:00405840 ; =============== S U B R O U T I N E =======================================
.text:00405840
.text:00405840
.text:00405840 sub_405840      proc near               ; CODE XREF: sub_403180+1B06↑p
.text:00405840
.text:00405840 arg_0           = dword ptr  4
.text:00405840 arg_4           = dword ptr  8
.text:00405840 arg_8           = dword ptr  0Ch
.text:00405840 arg_C           = dword ptr  10h
.text:00405840
.text:00405840                 push    edi
.text:00405841                 push    esi
.text:00405842                 push    ebx
.text:00405843                 mov     esi, [esp+0Ch+arg_8]
.text:00405847                 mov     edi, [esp+0Ch+arg_C]
.text:0040584B                 mov     ebx, [esp+0Ch+arg_0]
.text:0040584F                 test    esi, esi
.text:00405851                 mov     ecx, [esp+0Ch+arg_4]
.text:00405855                 jz      short loc_405874
.text:00405857                 mov     esi, esi
.text:00405859                 lea     edi, [edi+0]
.text:00405860
.text:00405860 loc_405860:                             ; CODE XREF: sub_405840+32↓j
.text:00405860                 movzx   eax, byte ptr [ecx]
.text:00405863                 inc     ecx
.text:00405864                 movzx   edx, byte ptr [ebx]
.text:00405867                 inc     ebx
.text:00405868                 movzx   eax, byte ptr [eax+edi]
.text:0040586C                 cmp     [edx+edi], al
.text:0040586F                 jnz     short loc_40587A
.text:00405871                 dec     esi
.text:00405872                 jnz     short loc_405860
.text:00405874
.text:00405874 loc_405874:                             ; CODE XREF: sub_405840+15↑j
.text:00405874                 xor     eax, eax
.text:00405876
.text:00405876 loc_405876:                             ; CODE XREF: sub_405840+3F↓j
.text:00405876                 pop     ebx
.text:00405877                 pop     esi
.text:00405878                 pop     edi
.text:00405879                 retn
.text:0040587A ; ---------------------------------------------------------------------------
.text:0040587A
.text:0040587A loc_40587A:                             ; CODE XREF: sub_405840+2F↑j
.text:0040587A                 mov     eax, 1
.text:0040587F                 jmp     short loc_405876
.text:0040587F sub_405840      endp
.text:0040587F
.text:0040587F ; ---------------------------------------------------------------------------
.text:00405881                 align 20h
.text:004058A0 aSuccess        db 'Success',0          ; DATA XREF: sub_405F00+41↓o
.text:004058A0                                         ; .text:00405F8B↓o
.text:004058A8 aNoMatch        db 'No match',0
.text:004058B1 aInvalidRegular db 'Invalid regular expression',0
.text:004058CC aInvalidCollati db 'Invalid collation character',0
.text:004058E8 aInvalidCharact db 'Invalid character class name',0
.text:00405905 aTrailingBacksl db 'Trailing backslash',0
.text:00405918 aInvalidBackRef db 'Invalid back reference',0
.text:0040592F aUnmatchedOr    db 'Unmatched [ or [^',0
.text:00405941 aUnmatchedOr_0  db 'Unmatched ( or \(',0
.text:00405953 aUnmatched      db 'Unmatched \{',0
.text:00405960 aInvalidContent db 'Invalid content of \{\}',0
.text:00405978 aInvalidRangeEn db 'Invalid range end',0
.text:0040598A aMemoryExhauste db 'Memory exhausted',0
.text:0040599B aInvalidPrecedi db 'Invalid preceding regular expression',0
.text:004059C0 aPrematureEndOf db 'Premature end of regular expression',0
.text:004059E4 aRegularExpress db 'Regular expression too big',0
.text:004059FF aUnmatchedOr_1  db 'Unmatched ) or \)',0
.text:00405A11                 db 0EBh, 0Dh, 90h
.text:00405A14                 align 10h
.text:00405A20 dword_405A20    dd 0                    ; DATA XREF: sub_405F00+3A↓r
.text:00405A20                                         ; .text:00405F84↓r
.text:00405A24                 dd 8, 11h, 2Ch, 48h, 65h, 78h, 8Fh, 0A1h, 0B3h, 0C0h, 0D8h
.text:00405A24                 dd 0EAh, 0FBh, 120h, 144h, 15Fh, 0B68Dh, 0BF8D0000h, 0
.text:00405A70
.text:00405A70 ; =============== S U B R O U T I N E =======================================
.text:00405A70
.text:00405A70
.text:00405A70 sub_405A70      proc near               ; CODE XREF: sub_406090+25A0↓p
.text:00405A70
.text:00405A70 arg_0           = dword ptr  4
.text:00405A70 arg_8           = dword ptr  0Ch
.text:00405A70 arg_C           = dword ptr  10h
.text:00405A70
.text:00405A70                 mov     edx, [esp+arg_8]
.text:00405A74                 mov     ecx, [esp+arg_C]
.text:00405A78                 dec     edx
.text:00405A79                 js      short loc_405A9A
.text:00405A7B                 lea     eax, [edx+edx*4]
.text:00405A7E                 shl     eax, 2
.text:00405A81                 add     eax, [esp+arg_0]
.text:00405A85                 add     eax, 10h
.text:00405A88                 nop
.text:00405A89                 lea     esi, [esi+0]
.text:00405A90
.text:00405A90 loc_405A90:                             ; CODE XREF: sub_405A70+28↓j
.text:00405A90                 cmp     [eax], ecx
.text:00405A92                 jz      short loc_405A9D
.text:00405A94                 sub     eax, 14h
.text:00405A97                 dec     edx
.text:00405A98                 jns     short loc_405A90
.text:00405A9A
.text:00405A9A loc_405A9A:                             ; CODE XREF: sub_405A70+9↑j
.text:00405A9A                 xor     eax, eax
.text:00405A9C                 retn
.text:00405A9D ; ---------------------------------------------------------------------------
.text:00405A9D
.text:00405A9D loc_405A9D:                             ; CODE XREF: sub_405A70+22↑j
.text:00405A9D                 mov     eax, 1
.text:00405AA2                 retn
.text:00405AA2 sub_405A70      endp
.text:00405AA2
.text:00405AA2 ; ---------------------------------------------------------------------------
.text:00405AA3                 align 10h
.text:00405AB0
.text:00405AB0 ; =============== S U B R O U T I N E =======================================
.text:00405AB0
.text:00405AB0 ; Attributes: thunk
.text:00405AB0
.text:00405AB0 sub_405AB0      proc near               ; CODE XREF: .text:00405B91↓p
.text:00405AB0                                         ; sub_409400+258↓p
.text:00405AB0                 jmp     sub_4096A0
.text:00405AB0 sub_405AB0      endp
.text:00405AB0
.text:00405AB0 ; ---------------------------------------------------------------------------
.text:00405AB5                 align 10h
.text:00405AC0                 push    ebp
.text:00405AC1                 push    edi
.text:00405AC2                 push    esi
.text:00405AC3                 push    ebx
.text:00405AC4                 sub     esp, 1Ch
.text:00405AC7                 mov     edi, [esp+30h]
.text:00405ACB                 test    byte ptr [esp+38h], 1
.text:00405AD0                 mov     dword ptr [edi], 0
.text:00405AD6                 setnz   dl
.text:00405AD9                 mov     dword ptr [edi+4], 0
.text:00405AE0                 mov     dword ptr [edi+8], 0
.text:00405AE7                 mov     dword ptr [esp], 100h
.text:00405AEE                 movzx   ebp, dl
.text:00405AF1                 dec     ebp
.text:00405AF2                 and     ebp, 0FFFD4FCAh
.text:00405AF8                 add     ebp, 3B2FCh
.text:00405AFE                 call    malloc
.text:00405B03                 test    byte ptr [esp+38h], 2
.text:00405B08                 mov     [edi+10h], eax
.text:00405B0B                 jnz     loc_405BC0
.text:00405B11                 mov     dword ptr [edi+14h], 0
.text:00405B18
.text:00405B18 loc_405B18:                             ; CODE XREF: .text:00405C10↓j
.text:00405B18                 test    byte ptr [esp+38h], 4
.text:00405B1D                 jz      loc_405BB7
.text:00405B23                 or      byte ptr [edi+1Ch], 80h
.text:00405B27                 and     ebp, 0FFFFFFBFh
.text:00405B2A                 or      ebp, 100h
.text:00405B30
.text:00405B30 loc_405B30:                             ; CODE XREF: .text:00405BBB↓j
.text:00405B30                 shr     dword ptr [esp+38h], 3
.text:00405B35                 movzx   edx, byte ptr [esp+38h]
.text:00405B3A                 movzx   ecx, byte ptr [edi+1Ch]
.text:00405B3E                 and     dl, 1
.text:00405B41                 shl     dl, 4
.text:00405B44                 and     cl, 0EFh
.text:00405B47                 or      cl, dl
.text:00405B49                 mov     [edi+1Ch], cl
.text:00405B4C                 mov     esi, [esp+34h]
.text:00405B50                 mov     [esp], esi
.text:00405B53                 call    strlen
.text:00405B58                 mov     [esp+4], eax
.text:00405B5C                 mov     ebx, [esp+34h]
.text:00405B60                 mov     [esp+0Ch], edi
.text:00405B64                 mov     [esp+8], ebp
.text:00405B68                 mov     [esp], ebx
.text:00405B6B                 call    sub_406090
.text:00405B70                 cmp     eax, 10h
.text:00405B73                 mov     ebx, eax
.text:00405B75                 jz      short loc_405BB0
.text:00405B77
.text:00405B77 loc_405B77:                             ; CODE XREF: .text:00405BB5↓j
.text:00405B77                 test    ebx, ebx
.text:00405B79                 jnz     short loc_405B82
.text:00405B7B                 mov     ebp, [edi+10h]
.text:00405B7E                 test    ebp, ebp
.text:00405B80                 jnz     short loc_405B8E
.text:00405B82
.text:00405B82 loc_405B82:                             ; CODE XREF: .text:00405B79↑j
.text:00405B82                                         ; .text:00405B99↓j ...
.text:00405B82                 mov     edx, ebx
.text:00405B84
.text:00405B84 loc_405B84:                             ; CODE XREF: .text:00405BD6↓j
.text:00405B84                 add     esp, 1Ch
.text:00405B87                 mov     eax, edx
.text:00405B89                 pop     ebx
.text:00405B8A                 pop     esi
.text:00405B8B                 pop     edi
.text:00405B8C                 pop     ebp
.text:00405B8D                 retn
.text:00405B8E ; ---------------------------------------------------------------------------
.text:00405B8E
.text:00405B8E loc_405B8E:                             ; CODE XREF: .text:00405B80↑j
.text:00405B8E                 mov     [esp], edi
.text:00405B91                 call    sub_405AB0
.text:00405B96                 cmp     eax, 0FFFFFFFEh
.text:00405B99                 jnz     short loc_405B82
.text:00405B9B                 mov     esi, [edi+10h]
.text:00405B9E                 mov     [esp], esi
.text:00405BA1                 call    free
.text:00405BA6                 mov     dword ptr [edi+10h], 0
.text:00405BAD                 jmp     short loc_405B82
.text:00405BAD ; ---------------------------------------------------------------------------
.text:00405BAF                 align 10h
.text:00405BB0
.text:00405BB0 loc_405BB0:                             ; CODE XREF: .text:00405B75↑j
.text:00405BB0                 mov     ebx, 8
.text:00405BB5                 jmp     short loc_405B77
.text:00405BB7 ; ---------------------------------------------------------------------------
.text:00405BB7
.text:00405BB7 loc_405BB7:                             ; CODE XREF: .text:00405B1D↑j
.text:00405BB7                 and     byte ptr [edi+1Ch], 7Fh
.text:00405BBB                 jmp     loc_405B30
.text:00405BC0 ; ---------------------------------------------------------------------------
.text:00405BC0
.text:00405BC0 loc_405BC0:                             ; CODE XREF: .text:00405B0B↑j
.text:00405BC0                 mov     dword ptr [esp], 100h
.text:00405BC7                 call    malloc
.text:00405BCC                 mov     [edi+14h], eax
.text:00405BCF                 test    eax, eax
.text:00405BD1                 mov     edx, 0Ch
.text:00405BD6                 jz      short loc_405B84
.text:00405BD8                 xor     ebx, ebx
.text:00405BDA                 lea     esi, [esi+0]
.text:00405BE0
.text:00405BE0 loc_405BE0:                             ; CODE XREF: .text:00405C0E↓j
.text:00405BE0                 mov     edx, ds:__mb_cur_max
.text:00405BE6                 mov     esi, [edi+14h]
.text:00405BE9                 cmp     dword ptr [edx], 1
.text:00405BEC                 jz      short loc_405C21
.text:00405BEE                 mov     dword ptr [esp+4], 1
.text:00405BF6                 mov     [esp], ebx
.text:00405BF9                 call    _isctype
.text:00405BFE
.text:00405BFE loc_405BFE:                             ; CODE XREF: .text:00405C30↓j
.text:00405BFE                 test    eax, eax
.text:00405C00                 mov     dl, bl
.text:00405C02                 jnz     short loc_405C15
.text:00405C04
.text:00405C04 loc_405C04:                             ; CODE XREF: .text:00405C1F↓j
.text:00405C04                 mov     [ebx+esi], dl
.text:00405C07                 inc     ebx
.text:00405C08                 cmp     ebx, 0FFh
.text:00405C0E                 jbe     short loc_405BE0
.text:00405C10                 jmp     loc_405B18
.text:00405C15 ; ---------------------------------------------------------------------------
.text:00405C15
.text:00405C15 loc_405C15:                             ; CODE XREF: .text:00405C02↑j
.text:00405C15                 mov     [esp], ebx
.text:00405C18                 call    tolower
.text:00405C1D                 mov     dl, al
.text:00405C1F                 jmp     short loc_405C04
.text:00405C21 ; ---------------------------------------------------------------------------
.text:00405C21
.text:00405C21 loc_405C21:                             ; CODE XREF: .text:00405BEC↑j
.text:00405C21                 mov     edx, ds:_pctype
.text:00405C27                 mov     ecx, [edx]
.text:00405C29                 movzx   eax, word ptr [ecx+ebx*2]
.text:00405C2D                 and     eax, 1
.text:00405C30                 jmp     short loc_405BFE
.text:00405C30 ; ---------------------------------------------------------------------------
.text:00405C32                 align 10h
.text:00405C40                 push    ebp
.text:00405C41                 push    edi
.text:00405C42                 push    esi
.text:00405C43                 push    ebx
.text:00405C44                 sub     esp, 7Ch
.text:00405C47                 mov     ebx, [esp+90h]
.text:00405C4E                 mov     edx, [esp+94h]
.text:00405C55                 mov     ebp, [esp+98h]
.text:00405C5C                 mov     esi, [esp+0A0h]
.text:00405C63                 mov     [esp], edx
.text:00405C66                 call    strlen
.text:00405C6B                 test    byte ptr [ebx+1Ch], 10h
.text:00405C6F                 mov     edi, eax
.text:00405C71                 mov     byte ptr [esp+3Fh], 0
.text:00405C76                 jnz     short loc_405C90
.text:00405C78                 test    ebp, ebp
.text:00405C7A                 jz      short loc_405C90
.text:00405C7C                 mov     byte ptr [esp+3Fh], 1
.text:00405C81                 jmp     short loc_405C90
.text:00405C81 ; ---------------------------------------------------------------------------
.text:00405C83                 align 10h
.text:00405C90
.text:00405C90 loc_405C90:                             ; CODE XREF: .text:00405C76↑j
.text:00405C90                                         ; .text:00405C7A↑j ...
.text:00405C90                 mov     edx, [ebx]
.text:00405C92                 mov     [esp+40h], edx
.text:00405C96                 mov     ecx, [ebx+4]
.text:00405C99                 mov     [esp+44h], ecx
.text:00405C9D                 mov     edx, [ebx+8]
.text:00405CA0                 mov     [esp+48h], edx
.text:00405CA4                 mov     ecx, [ebx+0Ch]
.text:00405CA7                 mov     [esp+4Ch], ecx
.text:00405CAB                 mov     edx, [ebx+10h]
.text:00405CAE                 mov     [esp+50h], edx
.text:00405CB2                 mov     ecx, [ebx+14h]
.text:00405CB5                 mov     [esp+54h], ecx
.text:00405CB9                 mov     edx, [ebx+18h]
.text:00405CBC                 mov     [esp+58h], edx
.text:00405CC0                 mov     ecx, [ebx+1Ch]
.text:00405CC3                 mov     edx, esi
.text:00405CC5                 shr     esi, 1
.text:00405CC7                 and     dl, 1
.text:00405CCA                 mov     eax, esi
.text:00405CCC                 mov     [esp+5Ch], ecx
.text:00405CD0                 shl     dl, 5
.text:00405CD3                 and     al, 1
.text:00405CD5                 movzx   ebx, byte ptr [esp+5Ch]
.text:00405CDA                 shl     al, 6
.text:00405CDD                 and     bl, 9Fh
.text:00405CE0                 or      bl, dl
.text:00405CE2                 or      bl, al
.text:00405CE4                 and     bl, 0F9h
.text:00405CE7                 or      bl, 4
.text:00405CEA                 cmp     byte ptr [esp+3Fh], 0
.text:00405CEF                 mov     [esp+5Ch], bl
.text:00405CF3                 jnz     loc_405DA6
.text:00405CF9
.text:00405CF9 loc_405CF9:                             ; CODE XREF: .text:00405DCF↓j
.text:00405CF9                 movzx   ecx, byte ptr [esp+3Fh]
.text:00405CFE                 lea     esi, [esp+60h]
.text:00405D02                 mov     [esp+20h], edi
.text:00405D06                 lea     ebx, [esp+40h]
.text:00405D0A                 mov     [esp+18h], edi
.text:00405D0E                 mov     dword ptr [esp+14h], 0
.text:00405D16                 xor     cl, 1
.text:00405D19                 movzx   edx, cl
.text:00405D1C                 mov     [esp+10h], edi
.text:00405D20                 mov     ecx, [esp+94h]
.text:00405D27                 dec     edx
.text:00405D28                 mov     dword ptr [esp+8], 0
.text:00405D30                 and     esi, edx
.text:00405D32                 mov     [esp+1Ch], esi
.text:00405D36                 mov     [esp+0Ch], ecx
.text:00405D3A                 mov     dword ptr [esp+4], 0
.text:00405D42                 mov     [esp], ebx
.text:00405D45                 call    sub_409400
.text:00405D4A                 cmp     byte ptr [esp+3Fh], 0
.text:00405D4F                 mov     esi, eax
.text:00405D51                 jz      short loc_405D91
.text:00405D53                 test    eax, eax
.text:00405D55                 js      short loc_405DA0
.text:00405D57                 xor     edx, edx
.text:00405D59                 cmp     edx, ebp
.text:00405D5B                 jnb     short loc_405DA0
.text:00405D5D                 mov     ecx, [esp+64h]
.text:00405D61                 mov     ebx, [esp+68h]
.text:00405D65                 lea     esi, [esi+0]
.text:00405D69                 lea     edi, [edi+0]
.text:00405D70
.text:00405D70 loc_405D70:                             ; CODE XREF: .text:00405D87↓j
.text:00405D70                 mov     eax, [ecx+edx*4]
.text:00405D73                 mov     edi, [esp+9Ch]
.text:00405D7A                 mov     [edi+edx*8], eax
.text:00405D7D                 mov     eax, [ebx+edx*4]
.text:00405D80                 mov     [edi+edx*8+4], eax
.text:00405D84                 inc     edx
.text:00405D85                 cmp     edx, ebp
.text:00405D87                 jb      short loc_405D70
.text:00405D89
.text:00405D89 loc_405D89:                             ; CODE XREF: .text:00405DA4↓j
.text:00405D89                 mov     [esp], ecx
.text:00405D8C                 call    free
.text:00405D91
.text:00405D91 loc_405D91:                             ; CODE XREF: .text:00405D51↑j
.text:00405D91                 mov     eax, esi
.text:00405D93                 shr     eax, 1Fh
.text:00405D96
.text:00405D96 loc_405D96:                             ; CODE XREF: .text:00405DC6↓j
.text:00405D96                 add     esp, 7Ch
.text:00405D99                 pop     ebx
.text:00405D9A                 pop     esi
.text:00405D9B                 pop     edi
.text:00405D9C                 pop     ebp
.text:00405D9D                 retn
.text:00405D9D ; ---------------------------------------------------------------------------
.text:00405D9E                 align 10h
.text:00405DA0
.text:00405DA0 loc_405DA0:                             ; CODE XREF: .text:00405D55↑j
.text:00405DA0                                         ; .text:00405D5B↑j
.text:00405DA0                 mov     ecx, [esp+64h]
.text:00405DA4                 jmp     short loc_405D89
.text:00405DA6 ; ---------------------------------------------------------------------------
.text:00405DA6
.text:00405DA6 loc_405DA6:                             ; CODE XREF: .text:00405CF3↑j
.text:00405DA6                 mov     [esp+60h], ebp
.text:00405DAA                 lea     esi, ds:0[ebp*8]
.text:00405DB1                 mov     [esp], esi
.text:00405DB4                 call    malloc
.text:00405DB9                 mov     [esp+64h], eax
.text:00405DBD                 mov     ecx, eax
.text:00405DBF                 test    ecx, ecx
.text:00405DC1                 mov     eax, 1
.text:00405DC6                 jz      short loc_405D96
.text:00405DC8                 lea     eax, [ecx+ebp*4]
.text:00405DCB                 mov     [esp+68h], eax
.text:00405DCF                 jmp     loc_405CF9
.text:00405DCF ; ---------------------------------------------------------------------------
.text:00405DD4                 align 10h
.text:00405DE0                 mov     eax, ds:dword_411400
.text:00405DE5                 mov     ecx, [esp+4]
.text:00405DE9                 mov     ds:dword_411400, ecx
.text:00405DEF                 retn
.text:00405DF0 ; ---------------------------------------------------------------------------
.text:00405DF0                 push    ebx
.text:00405DF1                 mov     ebx, [esp+10h]
.text:00405DF5                 mov     edx, [esp+8]
.text:00405DF9                 mov     ecx, [esp+0Ch]
.text:00405DFD                 test    ebx, ebx
.text:00405DFF                 jz      short loc_405E20
.text:00405E01                 movzx   eax, byte ptr [edx+1Ch]
.text:00405E05                 and     al, 0F9h
.text:00405E07                 or      al, 2
.text:00405E09                 mov     [edx+1Ch], al
.text:00405E0C                 mov     edx, [esp+14h]
.text:00405E10                 mov     [ecx], ebx
.text:00405E12                 mov     [ecx+4], edx
.text:00405E15                 mov     edx, [esp+18h]
.text:00405E19                 mov     [ecx+8], edx
.text:00405E1C
.text:00405E1C loc_405E1C:                             ; CODE XREF: .text:00405E38↓j
.text:00405E1C                 pop     ebx
.text:00405E1D                 retn
.text:00405E1D ; ---------------------------------------------------------------------------
.text:00405E1E                 align 10h
.text:00405E20
.text:00405E20 loc_405E20:                             ; CODE XREF: .text:00405DFF↑j
.text:00405E20                 and     byte ptr [edx+1Ch], 0F9h
.text:00405E24                 mov     dword ptr [ecx], 0
.text:00405E2A                 mov     dword ptr [ecx+8], 0
.text:00405E31                 mov     dword ptr [ecx+4], 0
.text:00405E38                 jmp     short loc_405E1C
.text:00405E38 ; ---------------------------------------------------------------------------
.text:00405E3A                 align 10h
.text:00405E40
.text:00405E40 ; =============== S U B R O U T I N E =======================================
.text:00405E40
.text:00405E40
.text:00405E40 sub_405E40      proc near               ; CODE XREF: sub_402BC0+273↑p
.text:00405E40
.text:00405E40 var_2C          = dword ptr -2Ch
.text:00405E40 var_28          = dword ptr -28h
.text:00405E40 var_24          = dword ptr -24h
.text:00405E40 var_20          = dword ptr -20h
.text:00405E40 var_1C          = dword ptr -1Ch
.text:00405E40 var_18          = dword ptr -18h
.text:00405E40 var_14          = dword ptr -14h
.text:00405E40 var_10          = dword ptr -10h
.text:00405E40 var_C           = dword ptr -0Ch
.text:00405E40 arg_0           = dword ptr  4
.text:00405E40 arg_4           = dword ptr  8
.text:00405E40 arg_8           = dword ptr  0Ch
.text:00405E40 arg_C           = dword ptr  10h
.text:00405E40 arg_10          = dword ptr  14h
.text:00405E40 arg_14          = dword ptr  18h
.text:00405E40
.text:00405E40                 sub     esp, 2Ch
.text:00405E43                 mov     edx, [esp+2Ch+arg_14]
.text:00405E47                 mov     [esp+2Ch+var_24], 0
.text:00405E4F                 mov     ecx, [esp+2Ch+arg_8]
.text:00405E53                 mov     [esp+2Ch+var_28], 0
.text:00405E5B                 mov     [esp+2Ch+var_10], edx
.text:00405E5F                 mov     edx, [esp+2Ch+arg_10]
.text:00405E63                 mov     [esp+2Ch+var_C], ecx
.text:00405E67                 mov     [esp+2Ch+var_1C], ecx
.text:00405E6B                 mov     [esp+2Ch+var_14], edx
.text:00405E6F                 mov     edx, [esp+2Ch+arg_C]
.text:00405E73                 mov     [esp+2Ch+var_18], edx
.text:00405E77                 mov     edx, [esp+2Ch+arg_4]
.text:00405E7B                 mov     [esp+2Ch+var_20], edx
.text:00405E7F                 mov     edx, [esp+2Ch+arg_0]
.text:00405E83                 mov     [esp+2Ch+var_2C], edx
.text:00405E86                 call    sub_409400
.text:00405E8B                 add     esp, 2Ch
.text:00405E8E                 retn
.text:00405E8E sub_405E40      endp
.text:00405E8E
.text:00405E8E ; ---------------------------------------------------------------------------
.text:00405E8F                 align 10h
.text:00405E90                 jmp     sub_409400
.text:00405E90 ; ---------------------------------------------------------------------------
.text:00405E95                 align 10h
.text:00405EA0                 sub     esp, 2Ch
.text:00405EA3                 mov     edx, [esp+40h]
.text:00405EA7                 mov     dword ptr [esp+8], 0
.text:00405EAF                 mov     ecx, [esp+38h]
.text:00405EB3                 mov     dword ptr [esp+4], 0
.text:00405EBB                 mov     [esp+18h], edx
.text:00405EBF                 mov     edx, [esp+3Ch]
.text:00405EC3                 mov     [esp+1Ch], ecx
.text:00405EC7                 mov     [esp+10h], ecx
.text:00405ECB                 mov     [esp+14h], edx
.text:00405ECF                 mov     edx, [esp+34h]
.text:00405ED3                 mov     [esp+0Ch], edx
.text:00405ED7                 mov     edx, [esp+30h]
.text:00405EDB                 mov     [esp], edx
.text:00405EDE                 call    sub_403180
.text:00405EE3                 add     esp, 2Ch
.text:00405EE6                 retn
.text:00405EE6 ; ---------------------------------------------------------------------------
.text:00405EE7                 align 10h
.text:00405EF0                 jmp     sub_403180
.text:00405EF0 ; ---------------------------------------------------------------------------
.text:00405EF5                 align 10h
.text:00405F00
.text:00405F00 ; =============== S U B R O U T I N E =======================================
.text:00405F00
.text:00405F00
.text:00405F00 sub_405F00      proc near               ; CODE XREF: sub_402890+AE↑p
.text:00405F00
.text:00405F00 var_1C          = dword ptr -1Ch
.text:00405F00 var_18          = dword ptr -18h
.text:00405F00 var_14          = dword ptr -14h
.text:00405F00 var_10          = dword ptr -10h
.text:00405F00 arg_0           = dword ptr  4
.text:00405F00 arg_4           = dword ptr  8
.text:00405F00 arg_8           = dword ptr  0Ch
.text:00405F00
.text:00405F00                 sub     esp, 1Ch
.text:00405F03                 mov     ecx, [esp+1Ch+arg_8]
.text:00405F07                 movzx   edx, byte ptr [ecx+1Ch]
.text:00405F0B                 and     dl, 0E9h
.text:00405F0E                 or      dl, 80h
.text:00405F11                 mov     [ecx+1Ch], dl
.text:00405F14                 mov     edx, [esp+1Ch+arg_4]
.text:00405F18                 mov     [esp+1Ch+var_10], ecx
.text:00405F1C                 mov     ecx, ds:dword_411400
.text:00405F22                 mov     [esp+1Ch+var_18], edx
.text:00405F26                 mov     edx, [esp+1Ch+arg_0]
.text:00405F2A                 mov     [esp+1Ch+var_14], ecx
.text:00405F2E                 mov     [esp+1Ch+var_1C], edx
.text:00405F31                 call    sub_406090
.text:00405F36                 test    eax, eax
.text:00405F38                 jz      short loc_405F54
.text:00405F3A                 mov     ecx, ds:dword_405A20[eax*4]
.text:00405F41                 add     ecx, offset aSuccess ; "Success"
.text:00405F47                 mov     [esp+1Ch+arg_0], ecx
.text:00405F4B                 add     esp, 1Ch
.text:00405F4E                 jmp     ds:libintl_gettext
.text:00405F54 ; ---------------------------------------------------------------------------
.text:00405F54
.text:00405F54 loc_405F54:                             ; CODE XREF: sub_405F00+38↑j
.text:00405F54                 xor     eax, eax
.text:00405F56                 add     esp, 1Ch
.text:00405F59                 retn
.text:00405F59 sub_405F00      endp
.text:00405F59
.text:00405F59 ; ---------------------------------------------------------------------------
.text:00405F5A                 align 10h
.text:00405F60                 sub     esp, 1Ch
.text:00405F63                 mov     eax, [esp+20h]
.text:00405F67                 mov     [esp+14h], edi
.text:00405F6B                 mov     edi, [esp+2Ch]
.text:00405F6F                 cmp     eax, 10h
.text:00405F72                 mov     [esp+18h], ebp
.text:00405F76                 mov     ebp, [esp+28h]
.text:00405F7A                 mov     [esp+0Ch], ebx
.text:00405F7E                 mov     [esp+10h], esi
.text:00405F82                 ja      short loc_405FF8
.text:00405F84                 mov     edx, ds:dword_405A20[eax*4]
.text:00405F8B                 add     edx, offset aSuccess ; "Success"
.text:00405F91                 mov     [esp], edx
.text:00405F94                 call    ds:libintl_gettext
.text:00405F9A                 mov     [esp], eax
.text:00405F9D                 mov     ebx, eax
.text:00405F9F                 call    strlen
.text:00405FA4                 test    edi, edi
.text:00405FA6                 lea     esi, [eax+1]
.text:00405FA9                 jz      short loc_405FD0
.text:00405FAB                 cmp     esi, edi
.text:00405FAD                 jbe     short loc_405FE6
.text:00405FAF                 mov     [esp+4], ebx
.text:00405FB3                 lea     edx, [edi-1]
.text:00405FB6                 mov     [esp+8], edx
.text:00405FBA                 mov     [esp], ebp
.text:00405FBD                 call    sub_40E320
.text:00405FC2                 mov     byte ptr [eax], 0
.text:00405FC5                 lea     esi, [esi+0]
.text:00405FC9                 lea     edi, [edi+0]
.text:00405FD0
.text:00405FD0 loc_405FD0:                             ; CODE XREF: .text:00405FA9↑j
.text:00405FD0                                         ; .text:00405FF6↓j
.text:00405FD0                 mov     eax, esi
.text:00405FD2                 mov     ebx, [esp+0Ch]
.text:00405FD6                 mov     esi, [esp+10h]
.text:00405FDA                 mov     edi, [esp+14h]
.text:00405FDE                 mov     ebp, [esp+18h]
.text:00405FE2                 add     esp, 1Ch
.text:00405FE5                 retn
.text:00405FE6 ; ---------------------------------------------------------------------------
.text:00405FE6
.text:00405FE6 loc_405FE6:                             ; CODE XREF: .text:00405FAD↑j
.text:00405FE6                 mov     [esp+8], esi
.text:00405FEA                 mov     [esp+4], ebx
.text:00405FEE                 mov     [esp], ebp
.text:00405FF1                 call    memcpy
.text:00405FF6                 jmp     short loc_405FD0
.text:00405FF8 ; ---------------------------------------------------------------------------
.text:00405FF8
.text:00405FF8 loc_405FF8:                             ; CODE XREF: .text:00405F82↑j
.text:00405FF8                 call    abort
.text:00405FF8 ; ---------------------------------------------------------------------------
.text:00405FFD                 align 10h
.text:00406000                 sub     esp, 0Ch
.text:00406003                 mov     [esp+8], ebx
.text:00406007                 mov     ebx, [esp+10h]
.text:0040600B                 mov     eax, [ebx]
.text:0040600D                 test    eax, eax
.text:0040600F                 jnz     short loc_406070
.text:00406011
.text:00406011 loc_406011:                             ; CODE XREF: .text:00406078↓j
.text:00406011                 mov     dword ptr [ebx], 0
.text:00406017                 mov     eax, [ebx+10h]
.text:0040601A                 mov     dword ptr [ebx+4], 0
.text:00406021                 mov     dword ptr [ebx+8], 0
.text:00406028                 test    eax, eax
.text:0040602A                 jnz     short loc_406060
.text:0040602C
.text:0040602C loc_40602C:                             ; CODE XREF: .text:00406068↓j
.text:0040602C                 and     byte ptr [ebx+1Ch], 0F7h
.text:00406030                 mov     eax, [ebx+14h]
.text:00406033                 mov     dword ptr [ebx+10h], 0
.text:0040603A                 test    eax, eax
.text:0040603C                 jnz     short loc_406050
.text:0040603E
.text:0040603E loc_40603E:                             ; CODE XREF: .text:00406058↓j
.text:0040603E                 mov     dword ptr [ebx+14h], 0
.text:00406045                 mov     ebx, [esp+8]
.text:00406049                 add     esp, 0Ch
.text:0040604C                 retn
.text:0040604C ; ---------------------------------------------------------------------------
.text:0040604D                 align 10h
.text:00406050
.text:00406050 loc_406050:                             ; CODE XREF: .text:0040603C↑j
.text:00406050                 mov     [esp], eax
.text:00406053                 call    free
.text:00406058                 jmp     short loc_40603E
.text:00406058 ; ---------------------------------------------------------------------------
.text:0040605A                 align 10h
.text:00406060
.text:00406060 loc_406060:                             ; CODE XREF: .text:0040602A↑j
.text:00406060                 mov     [esp], eax
.text:00406063                 call    free
.text:00406068                 jmp     short loc_40602C
.text:00406068 ; ---------------------------------------------------------------------------
.text:0040606A                 align 10h
.text:00406070
.text:00406070 loc_406070:                             ; CODE XREF: .text:0040600F↑j
.text:00406070                 mov     [esp], eax
.text:00406073                 call    free
.text:00406078                 jmp     short loc_406011
.text:00406078 ; ---------------------------------------------------------------------------
.text:0040607A aLower          db 'lower',0            ; DATA XREF: sub_406090+1EEB↓o
.text:00406080 aUpper          db 'upper',0            ; DATA XREF: sub_406090+1F11↓o
.text:00406086                 align 10h
.text:00406090
.text:00406090 ; =============== S U B R O U T I N E =======================================
.text:00406090
.text:00406090
.text:00406090 sub_406090      proc near               ; CODE XREF: .text:00405B6B↑p
.text:00406090                                         ; sub_405F00+31↑p
.text:00406090
.text:00406090 Size            = dword ptr -97Ch
.text:00406090 var_978         = dword ptr -978h
.text:00406090 var_974         = dword ptr -974h
.text:00406090 var_970         = dword ptr -970h
.text:00406090 var_96C         = dword ptr -96Ch
.text:00406090 var_968         = dword ptr -968h
.text:00406090 var_950         = dword ptr -950h
.text:00406090 var_940         = dword ptr -940h
.text:00406090 var_93C         = dword ptr -93Ch
.text:00406090 var_938         = dword ptr -938h
.text:00406090 var_934         = dword ptr -934h
.text:00406090 var_930         = dword ptr -930h
.text:00406090 Type            = word ptr -92Ch
.text:00406090 var_926         = byte ptr -926h
.text:00406090 var_925         = byte ptr -925h
.text:00406090 var_924         = dword ptr -924h
.text:00406090 var_91E         = byte ptr -91Eh
.text:00406090 var_91D         = byte ptr -91Dh
.text:00406090 var_91C         = byte ptr -91Ch
.text:00406090 var_90C         = dword ptr -90Ch
.text:00406090 var_908         = dword ptr -908h
.text:00406090 var_904         = dword ptr -904h
.text:00406090 var_900         = dword ptr -900h
.text:00406090 var_8FC         = dword ptr -8FCh
.text:00406090 var_8F8         = dword ptr -8F8h
.text:00406090 var_8F4         = dword ptr -8F4h
.text:00406090 var_8F0         = dword ptr -8F0h
.text:00406090 var_8EC         = byte ptr -8ECh
.text:00406090 var_8D0         = dword ptr -8D0h
.text:00406090 var_8CC         = byte ptr -8CCh
.text:00406090 var_84C         = byte ptr -84Ch
.text:00406090 name            = byte ptr -83Ch
.text:00406090 Block           = dword ptr -2Ch
.text:00406090 var_28          = dword ptr -28h
.text:00406090 var_24          = dword ptr -24h
.text:00406090 arg_0           = dword ptr  4
.text:00406090 arg_4           = dword ptr  8
.text:00406090 arg_8           = dword ptr  0Ch
.text:00406090 arg_C           = dword ptr  10h
.text:00406090
.text:00406090                 push    ebp
.text:00406091                 mov     ebp, 0Ch
.text:00406096                 push    edi
.text:00406097                 push    esi
.text:00406098                 push    ebx
.text:00406099                 sub     esp, 96Ch
.text:0040609F                 mov     eax, [esp+97Ch+arg_0]
.text:004060A6                 mov     [esp+97Ch+var_900], 0
.text:004060AE                 mov     ecx, [esp+97Ch+arg_C]
.text:004060B5                 mov     ebx, [esp+97Ch+arg_4]
.text:004060BC                 mov     [esp+97Ch+var_8D0], eax
.text:004060C3                 mov     edx, [ecx+14h]
.text:004060C6                 add     eax, ebx
.text:004060C8                 mov     [esp+97Ch+var_8F4], eax
.text:004060CF                 xor     eax, eax
.text:004060D1                 mov     [esp+97Ch+var_8F8], edx
.text:004060D8                 mov     [esp+97Ch+var_8FC], eax
.text:004060DF                 mov     [esp+97Ch+var_908], 0
.text:004060E7                 mov     [esp+97Ch+var_90C], 0
.text:004060EF                 mov     [esp+97Ch+Size], 280h ; Size
.text:004060F6                 call    malloc
.text:004060FB                 mov     [esp+97Ch+Block], eax
.text:00406102                 test    eax, eax
.text:00406104                 jz      loc_4064A6
.text:0040610A                 mov     edi, [esp+97Ch+arg_C]
.text:00406111                 xor     edx, edx
.text:00406113                 mov     ecx, 20h ; ' '
.text:00406118                 mov     [esp+97Ch+var_28], ecx
.text:0040611F                 mov     ebp, [esp+97Ch+arg_8]
.text:00406126                 mov     [esp+97Ch+var_24], edx
.text:0040612D                 and     byte ptr [edi+1Ch], 97h
.text:00406131                 mov     [edi+0Ch], ebp
.text:00406134                 mov     dword ptr [edi+8], 0
.text:0040613B                 mov     esi, ds:dword_411130
.text:00406141                 mov     dword ptr [edi+18h], 0
.text:00406148                 test    esi, esi
.text:0040614A                 jz      loc_409381
.text:00406150
.text:00406150 loc_406150:                             ; CODE XREF: sub_406090+3351↓j
.text:00406150                 mov     ebx, [esp+97Ch+arg_C]
.text:00406157                 mov     edx, [ebx+4]
.text:0040615A                 test    edx, edx
.text:0040615C                 jnz     loc_409372
.text:00406162                 mov     eax, [ebx]
.text:00406164                 test    eax, eax
.text:00406166                 jz      loc_409358
.text:0040616C                 mov     [esp+97Ch+var_978], 20h ; ' ' ; Size
.text:00406174                 mov     [esp+97Ch+Size], eax ; Block
.text:00406177                 call    realloc
.text:0040617C                 mov     [ebx], eax
.text:0040617E
.text:0040617E loc_40617E:                             ; CODE XREF: sub_406090+32DD↓j
.text:0040617E                 mov     esi, [esp+97Ch+arg_C]
.text:00406185                 mov     edi, [esi]
.text:00406187                 test    edi, edi
.text:00406189                 jz      loc_409347
.text:0040618F                 mov     eax, [esp+97Ch+arg_C]
.text:00406196                 mov     dword ptr [eax+4], 20h ; ' '
.text:0040619D
.text:0040619D loc_40619D:                             ; CODE XREF: sub_406090+32EC↓j
.text:0040619D                 mov     [esp+97Ch+var_950], edi
.text:004061A1                 mov     [esp+97Ch+var_904], edi
.text:004061A5                 mov     edi, [esp+97Ch+var_8D0]
.text:004061AC                 cmp     edi, [esp+97Ch+var_8F4]
.text:004061B3                 jz      loc_406500
.text:004061B9
.text:004061B9 loc_4061B9:                             ; CODE XREF: sub_406090+43D↓j
.text:004061B9                 movzx   ebx, byte ptr [edi]
.text:004061BC                 inc     edi
.text:004061BD                 mov     edx, [esp+97Ch+var_8F8]
.text:004061C4                 mov     [esp+97Ch+var_8D0], edi
.text:004061CB                 test    edx, edx
.text:004061CD                 mov     [esp+97Ch+var_8EC], bl
.text:004061D4                 jz      short loc_4061EB
.text:004061D6                 mov     edi, [esp+97Ch+var_8F8]
.text:004061DD                 movzx   ecx, bl
.text:004061E0                 movzx   ebx, byte ptr [ecx+edi]
.text:004061E4                 mov     [esp+97Ch+var_8EC], bl
.text:004061EB
.text:004061EB loc_4061EB:                             ; CODE XREF: sub_406090+144↑j
.text:004061EB                 movzx   eax, [esp+97Ch+var_8EC]
.text:004061F3                 sub     eax, 0Ah        ; switch 115 cases
.text:004061F6                 cmp     eax, 72h
.text:004061F9                 ja      def_4061FF      ; jumptable 004061FF default case, cases 11-35,37-39,44,45,47-62,64-90,93,95-122
.text:004061FF                 jmp     ds:jpt_4061FF[eax*4] ; switch jump
.text:004061FF ; ---------------------------------------------------------------------------
.text:00406206                 align 4
.text:00406208 jpt_4061FF      dd offset loc_4068F5, offset def_4061FF, offset def_4061FF
.text:00406208                                         ; DATA XREF: sub_406090+16F↑r
.text:00406208                 dd offset def_4061FF, offset def_4061FF, offset def_4061FF ; jump table for switch statement
.text:00406208                 dd offset def_4061FF, offset def_4061FF, offset def_4061FF
.text:00406208                 dd offset def_4061FF, offset def_4061FF, offset def_4061FF
.text:00406208                 dd offset def_4061FF, offset def_4061FF, offset def_4061FF
.text:00406208                 dd offset def_4061FF, offset def_4061FF, offset def_4061FF
.text:00406208                 dd offset def_4061FF, offset def_4061FF, offset def_4061FF
.text:00406208                 dd offset def_4061FF, offset def_4061FF, offset def_4061FF
.text:00406208                 dd offset def_4061FF, offset def_4061FF, offset loc_406B2D
.text:00406208                 dd offset def_4061FF, offset def_4061FF, offset def_4061FF
.text:00406208                 dd offset loc_406C3C, offset loc_406E26, offset loc_4070F0
.text:00406208                 dd offset loc_407764, offset def_4061FF, offset def_4061FF
.text:00406208                 dd offset loc_407680, offset def_4061FF, offset def_4061FF
.text:00406208                 dd offset def_4061FF, offset def_4061FF, offset def_4061FF
.text:00406208                 dd offset def_4061FF, offset def_4061FF, offset def_4061FF
.text:00406208                 dd offset def_4061FF, offset def_4061FF, offset def_4061FF
.text:00406208                 dd offset def_4061FF, offset def_4061FF, offset def_4061FF
.text:00406208                 dd offset def_4061FF, offset def_4061FF, offset loc_407764
.text:00406208                 dd offset def_4061FF, offset def_4061FF, offset def_4061FF
.text:00406208                 dd offset def_4061FF, offset def_4061FF, offset def_4061FF
.text:00406208                 dd offset def_4061FF, offset def_4061FF, offset def_4061FF
.text:00406208                 dd offset def_4061FF, offset def_4061FF, offset def_4061FF
.text:00406208                 dd offset def_4061FF, offset def_4061FF, offset def_4061FF
.text:00406208                 dd offset def_4061FF, offset def_4061FF, offset def_4061FF
.text:00406208                 dd offset def_4061FF, offset def_4061FF, offset def_4061FF
.text:00406208                 dd offset def_4061FF, offset def_4061FF, offset def_4061FF
.text:00406208                 dd offset def_4061FF, offset def_4061FF, offset def_4061FF
.text:00406208                 dd offset loc_40777A, offset loc_408306, offset def_4061FF
.text:00406208                 dd offset loc_4063D4, offset def_4061FF, offset def_4061FF
.text:00406208                 dd offset def_4061FF, offset def_4061FF, offset def_4061FF
.text:00406208                 dd offset def_4061FF, offset def_4061FF, offset def_4061FF
.text:00406208                 dd offset def_4061FF, offset def_4061FF, offset def_4061FF
.text:00406208                 dd offset def_4061FF, offset def_4061FF, offset def_4061FF
.text:00406208                 dd offset def_4061FF, offset def_4061FF, offset def_4061FF
.text:00406208                 dd offset def_4061FF, offset def_4061FF, offset def_4061FF
.text:00406208                 dd offset def_4061FF, offset def_4061FF, offset def_4061FF
.text:00406208                 dd offset def_4061FF, offset def_4061FF, offset def_4061FF
.text:00406208                 dd offset def_4061FF, offset def_4061FF, offset loc_409314
.text:00406208                 dd offset loc_409332
.text:004063D4 ; ---------------------------------------------------------------------------
.text:004063D4
.text:004063D4 loc_4063D4:                             ; CODE XREF: sub_406090+16F↑j
.text:004063D4                                         ; DATA XREF: sub_406090:jpt_4061FF↑o
.text:004063D4                 mov     esi, [esp+97Ch+arg_0] ; jumptable 004061FF case 94
.text:004063DB                 mov     edx, [esp+97Ch+var_8D0]
.text:004063E2                 inc     esi
.text:004063E3                 cmp     edx, esi
.text:004063E5                 jz      short loc_4063F5
.text:004063E7                 test    byte ptr [esp+97Ch+arg_8], 8
.text:004063EF                 jz      loc_40663D
.text:004063F5
.text:004063F5 loc_4063F5:                             ; CODE XREF: sub_406090+355↑j
.text:004063F5                                         ; sub_406090+3D7↓j ...
.text:004063F5                 mov     eax, [esp+97Ch+arg_C]
.text:004063FC                 mov     ebp, [esp+97Ch+var_950]
.text:00406400                 mov     edi, [eax]
.text:00406402                 mov     edx, [eax+4]
.text:00406405                 sub     ebp, edi
.text:00406407                 inc     ebp
.text:00406408                 cmp     ebp, edx
.text:0040640A                 jbe     loc_4064B3
.text:00406410                 cmp     edx, 10000h
.text:00406416                 mov     ebp, 0Fh
.text:0040641B                 jz      loc_4064A6
.text:00406421                 lea     ebx, [edx+edx]
.text:00406424                 mov     edx, [esp+97Ch+arg_C]
.text:0040642B                 cmp     ebx, 10000h
.text:00406431                 mov     [edx+4], ebx
.text:00406434                 jbe     short loc_40643D
.text:00406436                 mov     dword ptr [edx+4], 10000h
.text:0040643D
.text:0040643D loc_40643D:                             ; CODE XREF: sub_406090+3A4↑j
.text:0040643D                 mov     ebp, [esp+97Ch+arg_C]
.text:00406444                 mov     esi, [ebp+4]
.text:00406447                 mov     ebp, 0Ch
.text:0040644C                 mov     [esp+97Ch+Size], edi ; Block
.text:0040644F                 mov     [esp+97Ch+var_978], esi ; Size
.text:00406453                 call    realloc
.text:00406458                 mov     edx, [esp+97Ch+arg_C]
.text:0040645F                 test    eax, eax
.text:00406461                 mov     [edx], eax
.text:00406463                 jz      short loc_4064A6
.text:00406465                 cmp     edi, eax
.text:00406467                 jz      short loc_4063F5
.text:00406469                 mov     ecx, [esp+97Ch+var_908]
.text:0040646D                 sub     eax, edi
.text:0040646F                 add     [esp+97Ch+var_950], eax
.text:00406473                 add     [esp+97Ch+var_904], eax
.text:00406477                 test    ecx, ecx
.text:00406479                 jz      short loc_40647F
.text:0040647B                 add     [esp+97Ch+var_908], eax
.text:0040647F
.text:0040647F loc_40647F:                             ; CODE XREF: sub_406090+3E9↑j
.text:0040647F                 mov     ebx, [esp+97Ch+var_900]
.text:00406483                 test    ebx, ebx
.text:00406485                 jz      short loc_40648B
.text:00406487                 add     [esp+97Ch+var_900], eax
.text:0040648B
.text:0040648B loc_40648B:                             ; CODE XREF: sub_406090+3F5↑j
.text:0040648B                 mov     edi, [esp+97Ch+var_8FC]
.text:00406492                 test    edi, edi
.text:00406494                 jz      loc_4063F5
.text:0040649A                 add     [esp+97Ch+var_8FC], eax
.text:004064A1                 jmp     loc_4063F5
.text:004064A6 ; ---------------------------------------------------------------------------
.text:004064A6
.text:004064A6 loc_4064A6:                             ; CODE XREF: sub_406090+74↑j
.text:004064A6                                         ; sub_406090+38B↑j ...
.text:004064A6                 add     esp, 96Ch
.text:004064AC                 mov     eax, ebp
.text:004064AE                 pop     ebx
.text:004064AF                 pop     esi
.text:004064B0                 pop     edi
.text:004064B1                 pop     ebp
.text:004064B2                 retn
.text:004064B3 ; ---------------------------------------------------------------------------
.text:004064B3
.text:004064B3 loc_4064B3:                             ; CODE XREF: sub_406090+37A↑j
.text:004064B3                 mov     edi, [esp+97Ch+var_950]
.text:004064B7                 mov     byte ptr [edi], 9
.text:004064BA
.text:004064BA loc_4064BA:                             ; CODE XREF: sub_406090+16CF↓j
.text:004064BA                                         ; sub_406090+2518↓j ...
.text:004064BA                 inc     edi
.text:004064BB
.text:004064BB loc_4064BB:                             ; CODE XREF: sub_406090+1496↓j
.text:004064BB                 mov     [esp+97Ch+var_950], edi
.text:004064BF
.text:004064BF loc_4064BF:                             ; CODE XREF: sub_406090+7DA↓j
.text:004064BF                                         ; sub_406090+A98↓j ...
.text:004064BF                 mov     edi, [esp+97Ch+var_8D0]
.text:004064C6                 cmp     edi, [esp+97Ch+var_8F4]
.text:004064CD                 jnz     loc_4061B9
.text:004064D3                 mov     ebx, [esp+97Ch+var_908]
.text:004064D7                 test    ebx, ebx
.text:004064D9                 jz      short loc_406500
.text:004064DB                 mov     [esp+97Ch+Size], 0Eh
.text:004064E2                 mov     ebp, [esp+97Ch+var_950]
.text:004064E6                 mov     edx, [esp+97Ch+var_908]
.text:004064EA                 mov     esi, [esp+97Ch+var_908]
.text:004064EE                 sub     ebp, edx
.text:004064F0                 sub     ebp, 3
.text:004064F3                 mov     [esp+97Ch+var_974], ebp
.text:004064F7                 mov     [esp+97Ch+var_978], esi
.text:004064FB                 call    sub_402E60
.text:00406500
.text:00406500 loc_406500:                             ; CODE XREF: sub_406090+123↑j
.text:00406500                                         ; sub_406090+449↑j
.text:00406500                 mov     eax, [esp+97Ch+var_24]
.text:00406507                 test    eax, eax
.text:00406509                 jnz     loc_406624
.text:0040650F                 test    [esp+97Ch+arg_8], 40000h
.text:0040651A                 jz      loc_4065F3
.text:00406520                 mov     ecx, [esp+97Ch+arg_C]
.text:00406527                 mov     ebp, [esp+97Ch+var_950]
.text:0040652B                 mov     ebx, [ecx]
.text:0040652D                 mov     edx, [ecx+4]
.text:00406530                 sub     ebp, ebx
.text:00406532                 mov     edi, ebx
.text:00406534                 inc     ebp
.text:00406535                 cmp     ebp, edx
.text:00406537                 jbe     loc_4065E7
.text:0040653D
.text:0040653D loc_40653D:                             ; CODE XREF: sub_406090+551↓j
.text:0040653D                 cmp     edx, 10000h
.text:00406543                 mov     ebp, 0Fh
.text:00406548                 jz      loc_4064A6
.text:0040654E                 mov     esi, [esp+97Ch+arg_C]
.text:00406555                 lea     ebp, [edx+edx]
.text:00406558                 cmp     ebp, 10000h
.text:0040655E                 mov     [esi+4], ebp
.text:00406561                 jbe     short loc_40656A
.text:00406563                 mov     dword ptr [esi+4], 10000h
.text:0040656A
.text:0040656A loc_40656A:                             ; CODE XREF: sub_406090+4D1↑j
.text:0040656A                 mov     eax, [esp+97Ch+arg_C]
.text:00406571                 mov     ebp, 0Ch
.text:00406576                 mov     esi, [eax+4]
.text:00406579                 mov     [esp+97Ch+Size], edi ; Block
.text:0040657C                 mov     [esp+97Ch+var_978], esi ; Size
.text:00406580                 call    realloc
.text:00406585                 mov     edx, [esp+97Ch+arg_C]
.text:0040658C                 test    eax, eax
.text:0040658E                 mov     [edx], eax
.text:00406590                 jz      loc_4064A6
.text:00406596                 cmp     ebx, eax
.text:00406598                 jz      short loc_4065CA
.text:0040659A                 mov     edi, [esp+97Ch+var_908]
.text:0040659E                 sub     eax, ebx
.text:004065A0                 add     [esp+97Ch+var_950], eax
.text:004065A4                 test    edi, edi
.text:004065A6                 jz      short loc_4065AC
.text:004065A8                 add     [esp+97Ch+var_908], eax
.text:004065AC
.text:004065AC loc_4065AC:                             ; CODE XREF: sub_406090+516↑j
.text:004065AC                 mov     ebx, [esp+97Ch+var_900]
.text:004065B0                 test    ebx, ebx
.text:004065B2                 jz      short loc_4065B8
.text:004065B4                 add     [esp+97Ch+var_900], eax
.text:004065B8
.text:004065B8 loc_4065B8:                             ; CODE XREF: sub_406090+522↑j
.text:004065B8                 mov     ecx, [esp+97Ch+var_8FC]
.text:004065BF                 test    ecx, ecx
.text:004065C1                 jz      short loc_4065CA
.text:004065C3                 add     [esp+97Ch+var_8FC], eax
.text:004065CA
.text:004065CA loc_4065CA:                             ; CODE XREF: sub_406090+508↑j
.text:004065CA                                         ; sub_406090+531↑j
.text:004065CA                 mov     eax, [esp+97Ch+arg_C]
.text:004065D1                 mov     ebp, [esp+97Ch+var_950]
.text:004065D5                 mov     ebx, [eax]
.text:004065D7                 mov     edx, [eax+4]
.text:004065DA                 sub     ebp, ebx
.text:004065DC                 mov     edi, ebx
.text:004065DE                 inc     ebp
.text:004065DF                 cmp     ebp, edx
.text:004065E1                 ja      loc_40653D
.text:004065E7
.text:004065E7 loc_4065E7:                             ; CODE XREF: sub_406090+4A7↑j
.text:004065E7                 mov     edx, [esp+97Ch+var_950]
.text:004065EB                 mov     byte ptr [edx], 1
.text:004065EE                 inc     edx
.text:004065EF                 mov     [esp+97Ch+var_950], edx
.text:004065F3
.text:004065F3 loc_4065F3:                             ; CODE XREF: sub_406090+48A↑j
.text:004065F3                 mov     ebp, [esp+97Ch+Block]
.text:004065FA                 mov     [esp+97Ch+Size], ebp ; Block
.text:004065FD                 xor     ebp, ebp
.text:004065FF                 call    free
.text:00406604                 mov     ecx, [esp+97Ch+arg_C]
.text:0040660B                 mov     esi, [esp+97Ch+arg_C]
.text:00406612                 mov     ebx, [ecx]
.text:00406614                 sub     [esp+97Ch+var_950], ebx
.text:00406618                 mov     edi, [esp+97Ch+var_950]
.text:0040661C                 mov     [esi+8], edi
.text:0040661F                 jmp     loc_4064A6
.text:00406624 ; ---------------------------------------------------------------------------
.text:00406624
.text:00406624 loc_406624:                             ; CODE XREF: sub_406090+479↑j
.text:00406624                 mov     edi, [esp+97Ch+Block]
.text:0040662B                 mov     ebp, 8
.text:00406630
.text:00406630 loc_406630:                             ; CODE XREF: sub_406090+15BC↓j
.text:00406630                                         ; sub_406090+32C3↓j
.text:00406630                 mov     [esp+97Ch+Size], edi ; Block
.text:00406633
.text:00406633 loc_406633:                             ; CODE XREF: sub_406090+EDF↓j
.text:00406633                                         ; sub_406090+1C4C↓j ...
.text:00406633                 call    free
.text:00406638                 jmp     loc_4064A6
.text:0040663D ; ---------------------------------------------------------------------------
.text:0040663D
.text:0040663D loc_40663D:                             ; CODE XREF: sub_406090+35F↑j
.text:0040663D                 mov     [esp+97Ch+var_978], edx
.text:00406641                 mov     eax, [esp+97Ch+arg_8]
.text:00406648                 mov     ebp, [esp+97Ch+arg_0]
.text:0040664F                 mov     [esp+97Ch+var_974], eax
.text:00406653                 mov     [esp+97Ch+Size], ebp
.text:00406656                 call    sub_402F40
.text:0040665B                 test    al, al
.text:0040665D                 jnz     loc_4063F5
.text:00406663
.text:00406663 def_4061FF:                             ; CODE XREF: sub_406090+169↑j
.text:00406663                                         ; sub_406090+16F↑j ...
.text:00406663                 mov     edx, [esp+97Ch+var_8FC] ; jumptable 004061FF default case, cases 11-35,37-39,44,45,47-62,64-90,93,95-122
.text:0040666A                 test    edx, edx
.text:0040666C                 jz      short loc_406689
.text:0040666E                 mov     eax, [esp+97Ch+var_8FC]
.text:00406675                 movzx   edx, byte ptr [eax]
.text:00406678                 movzx   ebx, dl
.text:0040667B                 lea     ebp, [ebx+eax+1]
.text:0040667F                 cmp     ebp, [esp+97Ch+var_950]
.text:00406683                 jz      loc_40686F
.text:00406689
.text:00406689 loc_406689:                             ; CODE XREF: sub_406090+5DC↑j
.text:00406689                                         ; sub_406090+7E1↓j ...
.text:00406689                 mov     edi, [esp+97Ch+var_950]
.text:0040668D                 mov     ebp, [esp+97Ch+arg_C]
.text:00406694                 mov     ecx, [esp+97Ch+var_950]
.text:00406698                 mov     [esp+97Ch+var_900], edi
.text:0040669C                 mov     edi, [ebp+0]
.text:0040669F                 mov     edx, [ebp+4]
.text:004066A2                 sub     ecx, edi
.text:004066A4                 mov     ebx, edi
.text:004066A6                 add     ecx, 2
.text:004066A9                 cmp     ecx, edx
.text:004066AB                 jbe     loc_406768
.text:004066B1
.text:004066B1 loc_4066B1:                             ; CODE XREF: sub_406090+6D2↓j
.text:004066B1                 cmp     edx, 10000h
.text:004066B7                 mov     ebp, 0Fh
.text:004066BC                 jz      loc_4064A6
.text:004066C2                 lea     esi, [edx+edx]
.text:004066C5                 mov     edx, [esp+97Ch+arg_C]
.text:004066CC                 cmp     esi, 10000h
.text:004066D2                 mov     [edx+4], esi
.text:004066D5                 jbe     short loc_4066DE
.text:004066D7                 mov     dword ptr [edx+4], 10000h
.text:004066DE
.text:004066DE loc_4066DE:                             ; CODE XREF: sub_406090+645↑j
.text:004066DE                 mov     eax, [esp+97Ch+arg_C]
.text:004066E5                 mov     ebp, [eax+4]
.text:004066E8                 mov     [esp+97Ch+Size], edi ; Block
.text:004066EB                 mov     [esp+97Ch+var_978], ebp ; Size
.text:004066EF                 mov     ebp, 0Ch
.text:004066F4                 call    realloc
.text:004066F9                 mov     edx, [esp+97Ch+arg_C]
.text:00406700                 test    eax, eax
.text:00406702                 mov     [edx], eax
.text:00406704                 jz      loc_4064A6
.text:0040670A                 cmp     ebx, eax
.text:0040670C                 jz      short loc_406742
.text:0040670E                 sub     eax, ebx
.text:00406710                 mov     ebx, [esp+97Ch+var_908]
.text:00406714                 add     [esp+97Ch+var_950], eax
.text:00406718                 add     [esp+97Ch+var_904], eax
.text:0040671C                 test    ebx, ebx
.text:0040671E                 jz      short loc_406724
.text:00406720                 add     [esp+97Ch+var_908], eax
.text:00406724
.text:00406724 loc_406724:                             ; CODE XREF: sub_406090+68E↑j
.text:00406724                 mov     ecx, [esp+97Ch+var_900]
.text:00406728                 test    ecx, ecx
.text:0040672A                 jz      short loc_406730
.text:0040672C                 add     [esp+97Ch+var_900], eax
.text:00406730
.text:00406730 loc_406730:                             ; CODE XREF: sub_406090+69A↑j
.text:00406730                 mov     edi, [esp+97Ch+var_8FC]
.text:00406737                 test    edi, edi
.text:00406739                 jz      short loc_406742
.text:0040673B                 add     [esp+97Ch+var_8FC], eax
.text:00406742
.text:00406742 loc_406742:                             ; CODE XREF: sub_406090+67C↑j
.text:00406742                                         ; sub_406090+6A9↑j
.text:00406742                 mov     edx, [esp+97Ch+arg_C]
.text:00406749                 mov     ebp, [esp+97Ch+arg_C]
.text:00406750                 mov     esi, [esp+97Ch+var_950]
.text:00406754                 mov     edi, [edx]
.text:00406756                 mov     edx, [ebp+4]
.text:00406759                 sub     esi, edi
.text:0040675B                 add     esi, 2
.text:0040675E                 mov     ebx, edi
.text:00406760                 cmp     esi, edx
.text:00406762                 ja      loc_4066B1
.text:00406768
.text:00406768 loc_406768:                             ; CODE XREF: sub_406090+61B↑j
.text:00406768                 mov     eax, [esp+97Ch+var_950]
.text:0040676C                 mov     byte ptr [eax], 2
.text:0040676F                 inc     eax
.text:00406770                 mov     byte ptr [eax], 0
.text:00406773                 mov     ecx, [esp+97Ch+arg_C]
.text:0040677A                 inc     eax
.text:0040677B                 mov     [esp+97Ch+var_950], eax
.text:0040677F                 dec     eax
.text:00406780                 mov     edi, [ecx]
.text:00406782                 mov     [esp+97Ch+var_8FC], eax
.text:00406789                 mov     edx, [ecx+4]
.text:0040678C                 mov     eax, [esp+97Ch+var_950]
.text:00406790                 mov     ebx, edi
.text:00406792                 sub     eax, edi
.text:00406794
.text:00406794 loc_406794:                             ; CODE XREF: sub_406090+7B9↓j
.text:00406794                 inc     eax
.text:00406795                 cmp     eax, edx
.text:00406797                 jbe     loc_40684E
.text:0040679D                 cmp     edx, 10000h
.text:004067A3                 mov     ebp, 0Fh
.text:004067A8                 jz      loc_4064A6
.text:004067AE                 lea     esi, [edx+edx]
.text:004067B1                 mov     edx, [esp+97Ch+arg_C]
.text:004067B8                 cmp     esi, 10000h
.text:004067BE                 mov     [edx+4], esi
.text:004067C1                 jbe     short loc_4067CA
.text:004067C3                 mov     dword ptr [edx+4], 10000h
.text:004067CA
.text:004067CA loc_4067CA:                             ; CODE XREF: sub_406090+731↑j
.text:004067CA                 mov     edx, [esp+97Ch+arg_C]
.text:004067D1                 mov     ebp, [edx+4]
.text:004067D4                 mov     [esp+97Ch+Size], edi ; Block
.text:004067D7                 mov     [esp+97Ch+var_978], ebp ; Size
.text:004067DB                 mov     ebp, 0Ch
.text:004067E0                 call    realloc
.text:004067E5                 mov     edi, [esp+97Ch+arg_C]
.text:004067EC                 test    eax, eax
.text:004067EE                 mov     [edi], eax
.text:004067F0                 jz      loc_4064A6
.text:004067F6                 cmp     ebx, eax
.text:004067F8                 jz      short loc_40682E
.text:004067FA                 mov     ecx, [esp+97Ch+var_908]
.text:004067FE                 sub     eax, ebx
.text:00406800                 add     [esp+97Ch+var_950], eax
.text:00406804                 add     [esp+97Ch+var_904], eax
.text:00406808                 test    ecx, ecx
.text:0040680A                 jz      short loc_406810
.text:0040680C                 add     [esp+97Ch+var_908], eax
.text:00406810
.text:00406810 loc_406810:                             ; CODE XREF: sub_406090+77A↑j
.text:00406810                 mov     ebx, [esp+97Ch+var_900]
.text:00406814                 test    ebx, ebx
.text:00406816                 jz      short loc_40681C
.text:00406818                 add     [esp+97Ch+var_900], eax
.text:0040681C
.text:0040681C loc_40681C:                             ; CODE XREF: sub_406090+786↑j
.text:0040681C                 mov     esi, [esp+97Ch+var_8FC]
.text:00406823                 test    esi, esi
.text:00406825                 jz      short loc_40682E
.text:00406827                 add     [esp+97Ch+var_8FC], eax
.text:0040682E
.text:0040682E loc_40682E:                             ; CODE XREF: sub_406090+768↑j
.text:0040682E                                         ; sub_406090+795↑j ...
.text:0040682E                 mov     edx, [esp+97Ch+arg_C]
.text:00406835                 mov     ebp, [esp+97Ch+arg_C]
.text:0040683C                 mov     eax, [esp+97Ch+var_950]
.text:00406840                 mov     edi, [edx]
.text:00406842                 mov     edx, [ebp+4]
.text:00406845                 sub     eax, edi
.text:00406847                 mov     ebx, edi
.text:00406849                 jmp     loc_406794
.text:0040684E ; ---------------------------------------------------------------------------
.text:0040684E
.text:0040684E loc_40684E:                             ; CODE XREF: sub_406090+707↑j
.text:0040684E                 movzx   ecx, [esp+97Ch+var_8EC]
.text:00406856                 mov     edi, [esp+97Ch+var_950]
.text:0040685A                 mov     [edi], cl
.text:0040685C                 mov     eax, [esp+97Ch+var_8FC]
.text:00406863                 inc     edi
.text:00406864                 mov     [esp+97Ch+var_950], edi
.text:00406868                 inc     byte ptr [eax]
.text:0040686A                 jmp     loc_4064BF
.text:0040686F ; ---------------------------------------------------------------------------
.text:0040686F
.text:0040686F loc_40686F:                             ; CODE XREF: sub_406090+5F3↑j
.text:0040686F                 inc     dl
.text:00406871                 jz      loc_406689
.text:00406877                 mov     edi, [esp+97Ch+var_8D0]
.text:0040687E                 mov     edx, edi
.text:00406880                 movzx   eax, byte ptr [edi]
.text:00406883                 cmp     al, 2Ah ; '*'
.text:00406885                 jz      loc_406689
.text:0040688B                 cmp     al, 5Eh ; '^'
.text:0040688D                 jz      loc_406689
.text:00406893                 test    byte ptr [esp+97Ch+arg_8], 2
.text:0040689B                 jz      short loc_4068E4
.text:0040689D                 cmp     al, 5Ch ; '\'
.text:0040689F                 jz      short loc_4068E0
.text:004068A1
.text:004068A1 loc_4068A1:                             ; CODE XREF: sub_406090+85E↓j
.text:004068A1                 test    [esp+97Ch+arg_8], 200h
.text:004068AC                 jz      short loc_40682E
.text:004068AE                 test    [esp+97Ch+arg_8], 1000h
.text:004068B9                 jz      short loc_4068D0
.text:004068BB                 cmp     byte ptr [edx], 7Bh ; '{'
.text:004068BE
.text:004068BE loc_4068BE:                             ; CODE XREF: sub_406090+84D↓j
.text:004068BE                 jnz     loc_40682E
.text:004068C4                 jmp     loc_406689
.text:004068C4 ; ---------------------------------------------------------------------------
.text:004068C9                 align 10h
.text:004068D0
.text:004068D0 loc_4068D0:                             ; CODE XREF: sub_406090+829↑j
.text:004068D0                 cmp     byte ptr [edx], 5Ch ; '\'
.text:004068D3                 jnz     loc_40682E
.text:004068D9                 cmp     byte ptr [edx+1], 7Bh ; '{'
.text:004068DD                 jmp     short loc_4068BE
.text:004068DD ; ---------------------------------------------------------------------------
.text:004068DF                 align 10h
.text:004068E0
.text:004068E0 loc_4068E0:                             ; CODE XREF: sub_406090+80F↑j
.text:004068E0                 movzx   eax, byte ptr [edi+1]
.text:004068E4
.text:004068E4 loc_4068E4:                             ; CODE XREF: sub_406090+80B↑j
.text:004068E4                 cmp     al, 2Bh ; '+'
.text:004068E6                 jz      loc_406689
.text:004068EC                 cmp     al, 3Fh ; '?'
.text:004068EE                 jnz     short loc_4068A1
.text:004068F0                 jmp     loc_406689
.text:004068F5 ; ---------------------------------------------------------------------------
.text:004068F5
.text:004068F5 loc_4068F5:                             ; CODE XREF: sub_406090+16F↑j
.text:004068F5                                         ; DATA XREF: sub_406090:jpt_4061FF↑o
.text:004068F5                 test    [esp+97Ch+arg_8], 800h ; jumptable 004061FF case 10
.text:00406900
.text:00406900 loc_406900:                             ; CODE XREF: sub_406090+32B2↓j
.text:00406900                 jz      def_4061FF      ; jumptable 004061FF default case, cases 11-35,37-39,44,45,47-62,64-90,93,95-122
.text:00406906
.text:00406906 loc_406906:                             ; CODE XREF: sub_406090+3279↓j
.text:00406906                 test    [esp+97Ch+arg_8], 400h
.text:00406911                 jnz     def_4061FF      ; jumptable 004061FF default case, cases 11-35,37-39,44,45,47-62,64-90,93,95-122
.text:00406917
.text:00406917 loc_406917:                             ; CODE XREF: sub_406090+8FF↓j
.text:00406917                                         ; sub_406090+92C↓j ...
.text:00406917                 mov     eax, [esp+97Ch+arg_C]
.text:0040691E                 mov     ebp, [esp+97Ch+var_950]
.text:00406922                 mov     edi, [eax]
.text:00406924                 mov     edx, [eax+4]
.text:00406927                 sub     ebp, edi
.text:00406929                 add     ebp, 3
.text:0040692C                 cmp     ebp, edx
.text:0040692E                 jbe     loc_4069CE
.text:00406934                 cmp     edx, 10000h
.text:0040693A                 mov     ebp, 0Fh
.text:0040693F                 jz      loc_4064A6
.text:00406945                 lea     ebx, [edx+edx]
.text:00406948                 mov     edx, [esp+97Ch+arg_C]
.text:0040694F                 cmp     ebx, 10000h
.text:00406955                 mov     [edx+4], ebx
.text:00406958                 jbe     short loc_406961
.text:0040695A                 mov     dword ptr [edx+4], 10000h
.text:00406961
.text:00406961 loc_406961:                             ; CODE XREF: sub_406090+8C8↑j
.text:00406961                 mov     eax, [esp+97Ch+arg_C]
.text:00406968                 mov     ebp, [eax+4]
.text:0040696B                 mov     [esp+97Ch+Size], edi ; Block
.text:0040696E                 mov     [esp+97Ch+var_978], ebp ; Size
.text:00406972                 mov     ebp, 0Ch
.text:00406977                 call    realloc
.text:0040697C                 mov     esi, [esp+97Ch+arg_C]
.text:00406983                 test    eax, eax
.text:00406985                 mov     [esi], eax
.text:00406987                 jz      loc_4064A6
.text:0040698D                 cmp     edi, eax
.text:0040698F                 jz      short loc_406917
.text:00406991                 mov     ecx, [esp+97Ch+var_908]
.text:00406995                 sub     eax, edi
.text:00406997                 add     [esp+97Ch+var_950], eax
.text:0040699B                 add     [esp+97Ch+var_904], eax
.text:0040699F                 test    ecx, ecx
.text:004069A1                 jz      short loc_4069A7
.text:004069A3                 add     [esp+97Ch+var_908], eax
.text:004069A7
.text:004069A7 loc_4069A7:                             ; CODE XREF: sub_406090+911↑j
.text:004069A7                 mov     edx, [esp+97Ch+var_900]
.text:004069AB                 test    edx, edx
.text:004069AD                 jz      short loc_4069B3
.text:004069AF                 add     [esp+97Ch+var_900], eax
.text:004069B3
.text:004069B3 loc_4069B3:                             ; CODE XREF: sub_406090+91D↑j
.text:004069B3                 mov     ebx, [esp+97Ch+var_8FC]
.text:004069BA                 test    ebx, ebx
.text:004069BC                 jz      loc_406917
.text:004069C2                 add     [esp+97Ch+var_8FC], eax
.text:004069C9                 jmp     loc_406917
.text:004069CE ; ---------------------------------------------------------------------------
.text:004069CE
.text:004069CE loc_4069CE:                             ; CODE XREF: sub_406090+89E↑j
.text:004069CE                 mov     [esp+97Ch+Size], 0Fh
.text:004069D5                 mov     edi, [esp+97Ch+var_950]
.text:004069D9                 mov     ebp, [esp+97Ch+var_904]
.text:004069DD                 mov     edx, [esp+97Ch+var_904]
.text:004069E1                 mov     ebx, edi
.text:004069E3                 sub     ebx, ebp
.text:004069E5                 mov     [esp+97Ch+var_970], edi
.text:004069E9                 add     ebx, 3
.text:004069EC                 add     edi, 3
.text:004069EF                 mov     [esp+97Ch+var_974], ebx
.text:004069F3                 mov     [esp+97Ch+var_978], edx
.text:004069F7                 call    sub_402EB0
.text:004069FC                 mov     [esp+97Ch+var_950], edi
.text:00406A00                 mov     esi, [esp+97Ch+var_908]
.text:00406A04                 xor     ecx, ecx
.text:00406A06                 mov     [esp+97Ch+var_8FC], ecx
.text:00406A0D                 test    esi, esi
.text:00406A0F                 jz      short loc_406A34
.text:00406A11                 mov     [esp+97Ch+Size], 0Eh
.text:00406A18                 mov     eax, [esp+97Ch+var_908]
.text:00406A1C                 mov     esi, edi
.text:00406A1E                 mov     edi, [esp+97Ch+var_908]
.text:00406A22                 sub     esi, eax
.text:00406A24                 sub     esi, 3
.text:00406A27                 mov     [esp+97Ch+var_974], esi
.text:00406A2B                 mov     [esp+97Ch+var_978], edi
.text:00406A2F                 call    sub_402E60
.text:00406A34
.text:00406A34 loc_406A34:                             ; CODE XREF: sub_406090+97F↑j
.text:00406A34                 mov     esi, [esp+97Ch+arg_C]
.text:00406A3B                 mov     edx, [esp+97Ch+var_950]
.text:00406A3F                 mov     ecx, [esp+97Ch+arg_C]
.text:00406A46                 mov     edi, [esi]
.text:00406A48                 mov     ebp, edx
.text:00406A4A                 mov     [esp+97Ch+var_908], edx
.text:00406A4E                 mov     edx, [ecx+4]
.text:00406A51                 sub     ebp, edi
.text:00406A53                 add     ebp, 3
.text:00406A56                 mov     ebx, edi
.text:00406A58                 cmp     ebp, edx
.text:00406A5A                 jbe     loc_406B13
.text:00406A60
.text:00406A60 loc_406A60:                             ; CODE XREF: sub_406090+A7D↓j
.text:00406A60                 cmp     edx, 10000h
.text:00406A66                 mov     ebp, 0Fh
.text:00406A6B                 jz      loc_4064A6
.text:00406A71                 lea     ebp, [edx+edx]
.text:00406A74                 mov     edx, [esp+97Ch+arg_C]
.text:00406A7B                 cmp     ebp, 10000h
.text:00406A81                 mov     [edx+4], ebp
.text:00406A84                 jbe     short loc_406A8D
.text:00406A86                 mov     dword ptr [edx+4], 10000h
.text:00406A8D
.text:00406A8D loc_406A8D:                             ; CODE XREF: sub_406090+9F4↑j
.text:00406A8D                 mov     eax, [esp+97Ch+arg_C]
.text:00406A94                 mov     ebp, 0Ch
.text:00406A99                 mov     edx, [eax+4]
.text:00406A9C                 mov     [esp+97Ch+Size], edi ; Block
.text:00406A9F                 mov     [esp+97Ch+var_978], edx ; Size
.text:00406AA3                 call    realloc
.text:00406AA8                 mov     edi, [esp+97Ch+arg_C]
.text:00406AAF                 test    eax, eax
.text:00406AB1                 mov     [edi], eax
.text:00406AB3                 jz      loc_4064A6
.text:00406AB9                 cmp     ebx, eax
.text:00406ABB                 jz      short loc_406AED
.text:00406ABD                 sub     eax, ebx
.text:00406ABF                 mov     ebx, [esp+97Ch+var_908]
.text:00406AC3                 add     [esp+97Ch+var_950], eax
.text:00406AC7                 test    ebx, ebx
.text:00406AC9                 jz      short loc_406ACF
.text:00406ACB                 add     [esp+97Ch+var_908], eax
.text:00406ACF
.text:00406ACF loc_406ACF:                             ; CODE XREF: sub_406090+A39↑j
.text:00406ACF                 mov     ecx, [esp+97Ch+var_900]
.text:00406AD3                 test    ecx, ecx
.text:00406AD5                 jz      short loc_406ADB
.text:00406AD7                 add     [esp+97Ch+var_900], eax
.text:00406ADB
.text:00406ADB loc_406ADB:                             ; CODE XREF: sub_406090+A45↑j
.text:00406ADB                 mov     ebp, [esp+97Ch+var_8FC]
.text:00406AE2                 test    ebp, ebp
.text:00406AE4                 jz      short loc_406AED
.text:00406AE6                 add     [esp+97Ch+var_8FC], eax
.text:00406AED
.text:00406AED loc_406AED:                             ; CODE XREF: sub_406090+A2B↑j
.text:00406AED                                         ; sub_406090+A54↑j
.text:00406AED                 mov     edx, [esp+97Ch+arg_C]
.text:00406AF4                 mov     eax, [esp+97Ch+arg_C]
.text:00406AFB                 mov     esi, [esp+97Ch+var_950]
.text:00406AFF                 mov     edi, [edx]
.text:00406B01                 mov     edx, [eax+4]
.text:00406B04                 sub     esi, edi
.text:00406B06                 add     esi, 3
.text:00406B09                 mov     ebx, edi
.text:00406B0B                 cmp     esi, edx
.text:00406B0D                 ja      loc_406A60
.text:00406B13
.text:00406B13 loc_406B13:                             ; CODE XREF: sub_406090+9CA↑j
.text:00406B13                 add     [esp+97Ch+var_950], 3
.text:00406B18                 mov     [esp+97Ch+var_900], 0
.text:00406B20                 mov     edi, [esp+97Ch+var_950]
.text:00406B24                 mov     [esp+97Ch+var_904], edi
.text:00406B28                 jmp     loc_4064BF
.text:00406B2D ; ---------------------------------------------------------------------------
.text:00406B2D
.text:00406B2D loc_406B2D:                             ; CODE XREF: sub_406090+16F↑j
.text:00406B2D                                         ; DATA XREF: sub_406090:jpt_4061FF↑o
.text:00406B2D                 mov     eax, [esp+97Ch+var_8D0] ; jumptable 004061FF case 36
.text:00406B34                 cmp     eax, [esp+97Ch+var_8F4]
.text:00406B3B                 jz      short loc_406B4B
.text:00406B3D                 test    byte ptr [esp+97Ch+arg_8], 8
.text:00406B45                 jz      loc_406C11
.text:00406B4B
.text:00406B4B loc_406B4B:                             ; CODE XREF: sub_406090+AAB↑j
.text:00406B4B                                         ; sub_406090+B31↓j ...
.text:00406B4B                 mov     ecx, [esp+97Ch+arg_C]
.text:00406B52                 mov     eax, [esp+97Ch+arg_C]
.text:00406B59                 mov     ebx, [esp+97Ch+var_950]
.text:00406B5D                 mov     edi, [ecx]
.text:00406B5F                 mov     edx, [eax+4]
.text:00406B62                 sub     ebx, edi
.text:00406B64                 inc     ebx
.text:00406B65                 cmp     ebx, edx
.text:00406B67                 jbe     loc_406C00
.text:00406B6D                 cmp     edx, 10000h
.text:00406B73                 mov     ebp, 0Fh
.text:00406B78                 jz      loc_4064A6
.text:00406B7E                 mov     ebx, [esp+97Ch+arg_C]
.text:00406B85                 lea     ecx, [edx+edx]
.text:00406B88                 cmp     ecx, 10000h
.text:00406B8E                 mov     [ebx+4], ecx
.text:00406B91                 jbe     short loc_406B9A
.text:00406B93                 mov     dword ptr [ebx+4], 10000h
.text:00406B9A
.text:00406B9A loc_406B9A:                             ; CODE XREF: sub_406090+B01↑j
.text:00406B9A                 mov     ebx, [esp+97Ch+arg_C]
.text:00406BA1                 mov     ebp, [ebx+4]
.text:00406BA4                 mov     [esp+97Ch+Size], edi ; Block
.text:00406BA7                 mov     [esp+97Ch+var_978], ebp ; Size
.text:00406BAB                 mov     ebp, 0Ch
.text:00406BB0                 call    realloc
.text:00406BB5                 mov     [ebx], eax
.text:00406BB7                 test    eax, eax
.text:00406BB9                 jz      loc_4064A6
.text:00406BBF                 cmp     edi, eax
.text:00406BC1                 jz      short loc_406B4B
.text:00406BC3                 sub     eax, edi
.text:00406BC5                 mov     edi, [esp+97Ch+var_908]
.text:00406BC9                 add     [esp+97Ch+var_950], eax
.text:00406BCD                 add     [esp+97Ch+var_904], eax
.text:00406BD1                 test    edi, edi
.text:00406BD3                 jz      short loc_406BD9
.text:00406BD5                 add     [esp+97Ch+var_908], eax
.text:00406BD9
.text:00406BD9 loc_406BD9:                             ; CODE XREF: sub_406090+B43↑j
.text:00406BD9                 mov     edx, [esp+97Ch+var_900]
.text:00406BDD                 test    edx, edx
.text:00406BDF                 jz      short loc_406BE5
.text:00406BE1                 add     [esp+97Ch+var_900], eax
.text:00406BE5
.text:00406BE5 loc_406BE5:                             ; CODE XREF: sub_406090+B4F↑j
.text:00406BE5                 mov     esi, [esp+97Ch+var_8FC]
.text:00406BEC                 test    esi, esi
.text:00406BEE                 jz      loc_406B4B
.text:00406BF4                 add     [esp+97Ch+var_8FC], eax
.text:00406BFB                 jmp     loc_406B4B
.text:00406C00 ; ---------------------------------------------------------------------------
.text:00406C00
.text:00406C00 loc_406C00:                             ; CODE XREF: sub_406090+AD7↑j
.text:00406C00                 mov     ebx, [esp+97Ch+var_950]
.text:00406C04                 mov     byte ptr [ebx], 0Ah
.text:00406C07
.text:00406C07 loc_406C07:                             ; CODE XREF: sub_406090+1059↓j
.text:00406C07                 inc     ebx
.text:00406C08                 mov     [esp+97Ch+var_950], ebx
.text:00406C0C                 jmp     loc_4064BF
.text:00406C11 ; ---------------------------------------------------------------------------
.text:00406C11
.text:00406C11 loc_406C11:                             ; CODE XREF: sub_406090+AB5↑j
.text:00406C11                 mov     [esp+97Ch+Size], eax
.text:00406C14                 mov     esi, [esp+97Ch+arg_8]
.text:00406C1B                 mov     edx, [esp+97Ch+var_8F4]
.text:00406C22                 mov     [esp+97Ch+var_974], esi
.text:00406C26                 mov     [esp+97Ch+var_978], edx
.text:00406C2A                 call    sub_402FA0
.text:00406C2F                 test    al, al
.text:00406C31                 jnz     loc_406B4B
.text:00406C37                 jmp     def_4061FF      ; jumptable 004061FF default case, cases 11-35,37-39,44,45,47-62,64-90,93,95-122
.text:00406C3C ; ---------------------------------------------------------------------------
.text:00406C3C
.text:00406C3C loc_406C3C:                             ; CODE XREF: sub_406090+16F↑j
.text:00406C3C                                         ; DATA XREF: sub_406090:jpt_4061FF↑o
.text:00406C3C                 test    [esp+97Ch+arg_8], 2000h ; jumptable 004061FF case 40
.text:00406C47                 jz      def_4061FF      ; jumptable 004061FF default case, cases 11-35,37-39,44,45,47-62,64-90,93,95-122
.text:00406C4D
.text:00406C4D loc_406C4D:                             ; CODE XREF: sub_406090+2417↓j
.text:00406C4D                 inc     [esp+97Ch+var_90C]
.text:00406C51                 mov     eax, [esp+97Ch+arg_C]
.text:00406C58                 inc     dword ptr [eax+18h]
.text:00406C5B                 mov     ecx, [esp+97Ch+var_24]
.text:00406C62                 cmp     ecx, [esp+97Ch+var_28]
.text:00406C69                 jz      loc_406DE6
.text:00406C6F
.text:00406C6F loc_406C6F:                             ; CODE XREF: sub_406090+D91↓j
.text:00406C6F                 mov     edx, [esp+97Ch+arg_C]
.text:00406C76                 lea     edi, [ecx+ecx*4]
.text:00406C79                 xor     eax, eax
.text:00406C7B                 lea     ebp, ds:0[edi*4]
.text:00406C82                 mov     ebx, [esp+97Ch+Block]
.text:00406C89                 mov     edi, [edx]
.text:00406C8B                 sub     [esp+97Ch+var_904], edi
.text:00406C8F                 mov     edx, edi
.text:00406C91                 mov     esi, [esp+97Ch+var_904]
.text:00406C95                 mov     [ebx+ebp], esi
.text:00406C98                 mov     esi, [esp+97Ch+var_908]
.text:00406C9C                 test    esi, esi
.text:00406C9E                 jz      short loc_406CA7
.text:00406CA0                 mov     eax, [esp+97Ch+var_908]
.text:00406CA4                 sub     eax, edi
.text:00406CA6                 inc     eax
.text:00406CA7
.text:00406CA7 loc_406CA7:                             ; CODE XREF: sub_406090+C0E↑j
.text:00406CA7                 mov     [ebx+ebp+4], eax
.text:00406CAB                 lea     esi, [ecx+ecx*4]
.text:00406CAE                 mov     ebp, [esp+97Ch+var_90C]
.text:00406CB2                 mov     ecx, [esp+97Ch+var_950]
.text:00406CB6                 shl     esi, 2
.text:00406CB9                 mov     [ebx+esi+10h], ebp
.text:00406CBD                 sub     ecx, edx
.text:00406CBF                 cmp     ebp, 0FFh
.text:00406CC5                 mov     [ebx+esi+0Ch], ecx
.text:00406CC9                 ja      loc_406DB9
.text:00406CCF                 mov     edx, [esp+97Ch+var_24]
.text:00406CD6                 lea     esi, [ecx+2]
.text:00406CD9                 mov     eax, [esp+97Ch+arg_C]
.text:00406CE0                 lea     ebp, [edx+edx*4]
.text:00406CE3                 lea     edx, [ecx+3]
.text:00406CE6                 mov     [ebx+ebp*4+8], esi
.text:00406CEA                 mov     ecx, [eax+4]
.text:00406CED                 cmp     edx, ecx
.text:00406CEF                 jbe     loc_406DA1
.text:00406CF5
.text:00406CF5 loc_406CF5:                             ; CODE XREF: sub_406090+D0B↓j
.text:00406CF5                 cmp     ecx, 10000h
.text:00406CFB                 mov     ebp, 0Fh
.text:00406D00                 jz      loc_4064A6
.text:00406D06                 mov     esi, [esp+97Ch+arg_C]
.text:00406D0D                 lea     ebx, [ecx+ecx]
.text:00406D10                 cmp     ebx, 10000h
.text:00406D16                 mov     [esi+4], ebx
.text:00406D19                 jbe     short loc_406D22
.text:00406D1B                 mov     dword ptr [esi+4], 10000h
.text:00406D22
.text:00406D22 loc_406D22:                             ; CODE XREF: sub_406090+C89↑j
.text:00406D22                 mov     eax, [esp+97Ch+arg_C]
.text:00406D29                 mov     ecx, [eax+4]
.text:00406D2C                 mov     [esp+97Ch+Size], edi ; Block
.text:00406D2F                 mov     [esp+97Ch+var_978], ecx ; Size
.text:00406D33                 call    realloc
.text:00406D38                 mov     ebp, [esp+97Ch+arg_C]
.text:00406D3F                 test    eax, eax
.text:00406D41                 mov     [ebp+0], eax
.text:00406D44                 mov     ebp, 0Ch
.text:00406D49                 jz      loc_4064A6
.text:00406D4F                 cmp     edi, eax
.text:00406D51                 jz      short loc_406D83
.text:00406D53                 sub     eax, edi
.text:00406D55                 mov     edi, [esp+97Ch+var_908]
.text:00406D59                 add     [esp+97Ch+var_950], eax
.text:00406D5D                 test    edi, edi
.text:00406D5F                 jz      short loc_406D65
.text:00406D61                 add     [esp+97Ch+var_908], eax
.text:00406D65
.text:00406D65 loc_406D65:                             ; CODE XREF: sub_406090+CCF↑j
.text:00406D65                 mov     esi, [esp+97Ch+var_900]
.text:00406D69                 test    esi, esi
.text:00406D6B                 jz      short loc_406D71
.text:00406D6D                 add     [esp+97Ch+var_900], eax
.text:00406D71
.text:00406D71 loc_406D71:                             ; CODE XREF: sub_406090+CDB↑j
.text:00406D71                 mov     ebx, [esp+97Ch+var_8FC]
.text:00406D78                 test    ebx, ebx
.text:00406D7A                 jz      short loc_406D83
.text:00406D7C                 add     [esp+97Ch+var_8FC], eax
.text:00406D83
.text:00406D83 loc_406D83:                             ; CODE XREF: sub_406090+CC1↑j
.text:00406D83                                         ; sub_406090+CEA↑j
.text:00406D83                 mov     ebp, [esp+97Ch+arg_C]
.text:00406D8A                 mov     edx, [esp+97Ch+var_950]
.text:00406D8E                 mov     edi, [ebp+0]
.text:00406D91                 mov     ecx, [ebp+4]
.text:00406D94                 sub     edx, edi
.text:00406D96                 add     edx, 3
.text:00406D99                 cmp     edx, ecx
.text:00406D9B                 ja      loc_406CF5
.text:00406DA1
.text:00406DA1 loc_406DA1:                             ; CODE XREF: sub_406090+C5F↑j
.text:00406DA1                 mov     ecx, [esp+97Ch+var_950]
.text:00406DA5                 mov     byte ptr [ecx], 6
.text:00406DA8                 inc     ecx
.text:00406DA9                 movzx   ebx, byte ptr [esp+97Ch+var_90C]
.text:00406DAE                 mov     [ecx], bl
.text:00406DB0                 inc     ecx
.text:00406DB1                 mov     byte ptr [ecx], 0
.text:00406DB4                 inc     ecx
.text:00406DB5                 mov     [esp+97Ch+var_950], ecx
.text:00406DB9
.text:00406DB9 loc_406DB9:                             ; CODE XREF: sub_406090+C39↑j
.text:00406DB9                 inc     [esp+97Ch+var_24]
.text:00406DC0                 mov     eax, [esp+97Ch+var_950]
.text:00406DC4                 mov     [esp+97Ch+var_908], 0
.text:00406DCC                 mov     [esp+97Ch+var_900], 0
.text:00406DD4                 mov     [esp+97Ch+var_904], eax
.text:00406DD8
.text:00406DD8 loc_406DD8:                             ; CODE XREF: sub_406090+2F9A↓j
.text:00406DD8                                         ; sub_406090+3107↓j ...
.text:00406DD8                 xor     eax, eax
.text:00406DDA                 mov     [esp+97Ch+var_8FC], eax
.text:00406DE1                 jmp     loc_4064BF
.text:00406DE6 ; ---------------------------------------------------------------------------
.text:00406DE6
.text:00406DE6 loc_406DE6:                             ; CODE XREF: sub_406090+BD9↑j
.text:00406DE6                 mov     ebp, [esp+97Ch+Block]
.text:00406DED                 lea     edi, [ecx+ecx*4]
.text:00406DF0                 shl     edi, 3
.text:00406DF3                 mov     [esp+97Ch+var_978], edi ; Size
.text:00406DF7                 mov     [esp+97Ch+Size], ebp ; Block
.text:00406DFA                 mov     ebp, 0Ch
.text:00406DFF                 call    realloc
.text:00406E04                 mov     [esp+97Ch+Block], eax
.text:00406E0B                 test    eax, eax
.text:00406E0D                 jz      loc_4064A6
.text:00406E13                 shl     [esp+97Ch+var_28], 1
.text:00406E1A                 mov     ecx, [esp+97Ch+var_24]
.text:00406E21                 jmp     loc_406C6F
.text:00406E26 ; ---------------------------------------------------------------------------
.text:00406E26
.text:00406E26 loc_406E26:                             ; CODE XREF: sub_406090+16F↑j
.text:00406E26                                         ; DATA XREF: sub_406090:jpt_4061FF↑o
.text:00406E26                 test    [esp+97Ch+arg_8], 2000h ; jumptable 004061FF case 41
.text:00406E31                 jz      def_4061FF      ; jumptable 004061FF default case, cases 11-35,37-39,44,45,47-62,64-90,93,95-122
.text:00406E37
.text:00406E37 loc_406E37:                             ; CODE XREF: sub_406090+2537↓j
.text:00406E37                 mov     esi, [esp+97Ch+var_908]
.text:00406E3B                 test    esi, esi
.text:00406E3D                 jz      loc_406F44
.text:00406E43                 mov     eax, [esp+97Ch+arg_C]
.text:00406E4A                 mov     ebp, [esp+97Ch+var_950]
.text:00406E4E                 mov     edi, [eax]
.text:00406E50                 mov     edx, [eax+4]
.text:00406E53                 sub     ebp, edi
.text:00406E55                 mov     ebx, edi
.text:00406E57                 inc     ebp
.text:00406E58                 cmp     ebp, edx
.text:00406E5A                 jbe     loc_406F15
.text:00406E60
.text:00406E60 loc_406E60:                             ; CODE XREF: sub_406090+E7F↓j
.text:00406E60                 cmp     edx, 10000h
.text:00406E66                 mov     ebp, 0Fh
.text:00406E6B                 jz      loc_4064A6
.text:00406E71                 mov     esi, [esp+97Ch+arg_C]
.text:00406E78                 lea     ecx, [edx+edx]
.text:00406E7B                 cmp     ecx, 10000h
.text:00406E81                 mov     [esi+4], ecx
.text:00406E84                 jbe     short loc_406E8D
.text:00406E86                 mov     dword ptr [esi+4], 10000h
.text:00406E8D
.text:00406E8D loc_406E8D:                             ; CODE XREF: sub_406090+DF4↑j
.text:00406E8D                 mov     ebp, [esp+97Ch+arg_C]
.text:00406E94                 mov     esi, [ebp+4]
.text:00406E97                 mov     ebp, 0Ch
.text:00406E9C                 mov     [esp+97Ch+Size], edi ; Block
.text:00406E9F                 mov     [esp+97Ch+var_978], esi ; Size
.text:00406EA3                 call    realloc
.text:00406EA8                 mov     edx, [esp+97Ch+arg_C]
.text:00406EAF                 test    eax, eax
.text:00406EB1                 mov     [edx], eax
.text:00406EB3                 jz      loc_4064A6
.text:00406EB9                 cmp     ebx, eax
.text:00406EBB                 jz      short loc_406EF1
.text:00406EBD                 sub     eax, ebx
.text:00406EBF                 mov     ebx, [esp+97Ch+var_908]
.text:00406EC3                 add     [esp+97Ch+var_950], eax
.text:00406EC7                 add     [esp+97Ch+var_904], eax
.text:00406ECB                 test    ebx, ebx
.text:00406ECD                 jz      short loc_406ED3
.text:00406ECF                 add     [esp+97Ch+var_908], eax
.text:00406ED3
.text:00406ED3 loc_406ED3:                             ; CODE XREF: sub_406090+E3D↑j
.text:00406ED3                 mov     edi, [esp+97Ch+var_900]
.text:00406ED7                 test    edi, edi
.text:00406ED9                 jz      short loc_406EDF
.text:00406EDB                 add     [esp+97Ch+var_900], eax
.text:00406EDF
.text:00406EDF loc_406EDF:                             ; CODE XREF: sub_406090+E49↑j
.text:00406EDF                 mov     edx, [esp+97Ch+var_8FC]
.text:00406EE6                 test    edx, edx
.text:00406EE8                 jz      short loc_406EF1
.text:00406EEA                 add     [esp+97Ch+var_8FC], eax
.text:00406EF1
.text:00406EF1 loc_406EF1:                             ; CODE XREF: sub_406090+E2B↑j
.text:00406EF1                                         ; sub_406090+E58↑j
.text:00406EF1                 mov     esi, [esp+97Ch+arg_C]
.text:00406EF8                 mov     eax, [esp+97Ch+arg_C]
.text:00406EFF                 mov     ecx, [esp+97Ch+var_950]
.text:00406F03                 mov     edi, [esi]
.text:00406F05                 mov     edx, [eax+4]
.text:00406F08                 sub     ecx, edi
.text:00406F0A                 inc     ecx
.text:00406F0B                 mov     ebx, edi
.text:00406F0D                 cmp     ecx, edx
.text:00406F0F                 ja      loc_406E60
.text:00406F15
.text:00406F15 loc_406F15:                             ; CODE XREF: sub_406090+DCA↑j
.text:00406F15                 mov     edx, [esp+97Ch+var_950]
.text:00406F19                 mov     byte ptr [edx], 14h
.text:00406F1C                 mov     edi, [esp+97Ch+var_908]
.text:00406F20                 inc     edx
.text:00406F21                 mov     [esp+97Ch+var_950], edx
.text:00406F25                 mov     ebx, edx
.text:00406F27                 mov     ebp, [esp+97Ch+var_908]
.text:00406F2B                 mov     [esp+97Ch+Size], 0Eh
.text:00406F32                 sub     ebx, edi
.text:00406F34                 sub     ebx, 4
.text:00406F37                 mov     [esp+97Ch+var_974], ebx
.text:00406F3B                 mov     [esp+97Ch+var_978], ebp
.text:00406F3F                 call    sub_402E60
.text:00406F44
.text:00406F44 loc_406F44:                             ; CODE XREF: sub_406090+DAD↑j
.text:00406F44                 mov     eax, [esp+97Ch+var_24]
.text:00406F4B                 test    eax, eax
.text:00406F4D                 jnz     short loc_406F74
.text:00406F4F                 test    [esp+97Ch+arg_8], 20000h
.text:00406F5A                 jnz     def_4061FF      ; jumptable 004061FF default case, cases 11-35,37-39,44,45,47-62,64-90,93,95-122
.text:00406F60
.text:00406F60 loc_406F60:                             ; CODE XREF: sub_406090+254E↓j
.text:00406F60                 mov     ecx, [esp+97Ch+Block]
.text:00406F67                 mov     ebp, 10h
.text:00406F6C
.text:00406F6C loc_406F6C:                             ; CODE XREF: sub_406090+15EA↓j
.text:00406F6C                                         ; sub_406090+21AF↓j
.text:00406F6C                 mov     [esp+97Ch+Size], ecx
.text:00406F6F                 jmp     loc_406633
.text:00406F74 ; ---------------------------------------------------------------------------
.text:00406F74
.text:00406F74 loc_406F74:                             ; CODE XREF: sub_406090+EBD↑j
.text:00406F74                 dec     eax
.text:00406F75                 mov     edx, [esp+97Ch+Block]
.text:00406F7C                 mov     ebp, [esp+97Ch+arg_C]
.text:00406F83                 mov     [esp+97Ch+var_24], eax
.text:00406F8A                 lea     esi, [eax+eax*4]
.text:00406F8D                 shl     esi, 2
.text:00406F90                 mov     ebx, [ebp+0]
.text:00406F93                 mov     edi, [edx+esi]
.text:00406F96                 mov     ebp, [edx+esi+4]
.text:00406F9A                 mov     ecx, ebx
.text:00406F9C                 add     edi, ebx
.text:00406F9E                 test    ebp, ebp
.text:00406FA0                 mov     [esp+97Ch+var_904], edi
.text:00406FA4                 lea     edi, [ebp+ebx-1]
.text:00406FA8                 setz    bl
.text:00406FAB                 movzx   esi, bl
.text:00406FAE                 mov     ebx, [esp+97Ch+var_24]
.text:00406FB5                 dec     esi
.text:00406FB6                 and     edi, esi
.text:00406FB8                 lea     eax, [ebx+ebx*4]
.text:00406FBB                 mov     [esp+97Ch+var_908], edi
.text:00406FBF                 shl     eax, 2
.text:00406FC2                 xor     esi, esi
.text:00406FC4                 mov     [esp+97Ch+var_8FC], esi
.text:00406FCB                 mov     ebx, [edx+eax+10h]
.text:00406FCF                 mov     ebp, [edx+eax+0Ch]
.text:00406FD3                 mov     [esp+97Ch+var_930], ebx
.text:00406FD7                 add     ebp, ecx
.text:00406FD9                 cmp     ebx, 0FFh
.text:00406FDF                 mov     [esp+97Ch+var_900], ebp
.text:00406FE3                 ja      loc_4064BF
.text:00406FE9                 mov     esi, [edx+eax+8]
.text:00406FED                 movzx   edx, byte ptr [esp+97Ch+var_90C]
.text:00406FF2                 add     ecx, esi
.text:00406FF4                 sub     dl, bl
.text:00406FF6                 mov     [ecx], dl
.text:00406FF8                 mov     eax, [esp+97Ch+arg_C]
.text:00406FFF                 mov     ecx, [esp+97Ch+var_950]
.text:00407003                 mov     edi, [eax]
.text:00407005                 mov     edx, [eax+4]
.text:00407008                 sub     ecx, edi
.text:0040700A                 add     ecx, 3
.text:0040700D                 mov     ebx, edi
.text:0040700F                 cmp     ecx, edx
.text:00407011                 jbe     loc_4070CE
.text:00407017
.text:00407017 loc_407017:                             ; CODE XREF: sub_406090+1038↓j
.text:00407017                 cmp     edx, 10000h
.text:0040701D                 mov     ebp, 0Fh
.text:00407022                 jz      loc_4064A6
.text:00407028                 lea     ebp, [edx+edx]
.text:0040702B                 mov     edx, [esp+97Ch+arg_C]
.text:00407032                 cmp     ebp, 10000h
.text:00407038                 mov     [edx+4], ebp
.text:0040703B                 jbe     short loc_407044
.text:0040703D                 mov     dword ptr [edx+4], 10000h
.text:00407044
.text:00407044 loc_407044:                             ; CODE XREF: sub_406090+FAB↑j
.text:00407044                 mov     eax, [esp+97Ch+arg_C]
.text:0040704B                 mov     ebp, 0Ch
.text:00407050                 mov     edx, [eax+4]
.text:00407053                 mov     [esp+97Ch+Size], edi ; Block
.text:00407056                 mov     [esp+97Ch+var_978], edx ; Size
.text:0040705A                 call    realloc
.text:0040705F                 mov     edi, [esp+97Ch+arg_C]
.text:00407066                 test    eax, eax
.text:00407068                 mov     [edi], eax
.text:0040706A                 jz      loc_4064A6
.text:00407070                 cmp     ebx, eax
.text:00407072                 jz      short loc_4070A8
.text:00407074                 sub     eax, ebx
.text:00407076                 mov     ebx, [esp+97Ch+var_908]
.text:0040707A                 add     [esp+97Ch+var_950], eax
.text:0040707E                 add     [esp+97Ch+var_904], eax
.text:00407082                 test    ebx, ebx
.text:00407084                 jz      short loc_40708A
.text:00407086                 add     [esp+97Ch+var_908], eax
.text:0040708A
.text:0040708A loc_40708A:                             ; CODE XREF: sub_406090+FF4↑j
.text:0040708A                 mov     ecx, [esp+97Ch+var_900]
.text:0040708E                 test    ecx, ecx
.text:00407090                 jz      short loc_407096
.text:00407092                 add     [esp+97Ch+var_900], eax
.text:00407096
.text:00407096 loc_407096:                             ; CODE XREF: sub_406090+1000↑j
.text:00407096                 mov     esi, [esp+97Ch+var_8FC]
.text:0040709D                 test    esi, esi
.text:0040709F                 jz      short loc_4070A8
.text:004070A1                 add     [esp+97Ch+var_8FC], eax
.text:004070A8
.text:004070A8 loc_4070A8:                             ; CODE XREF: sub_406090+FE2↑j
.text:004070A8                                         ; sub_406090+100F↑j
.text:004070A8                 mov     edx, [esp+97Ch+arg_C]
.text:004070AF                 mov     eax, [esp+97Ch+arg_C]
.text:004070B6                 mov     ebp, [esp+97Ch+var_950]
.text:004070BA                 mov     edi, [edx]
.text:004070BC                 mov     edx, [eax+4]
.text:004070BF                 sub     ebp, edi
.text:004070C1                 add     ebp, 3
.text:004070C4                 mov     ebx, edi
.text:004070C6                 cmp     ebp, edx
.text:004070C8                 ja      loc_407017
.text:004070CE
.text:004070CE loc_4070CE:                             ; CODE XREF: sub_406090+F81↑j
.text:004070CE                 mov     ebx, [esp+97Ch+var_950]
.text:004070D2                 mov     byte ptr [ebx], 7
.text:004070D5                 inc     ebx
.text:004070D6                 movzx   edx, byte ptr [esp+97Ch+var_930]
.text:004070DB                 mov     [ebx], dl
.text:004070DD                 inc     ebx
.text:004070DE                 movzx   ecx, byte ptr [esp+97Ch+var_90C]
.text:004070E3                 sub     cl, byte ptr [esp+97Ch+var_930]
.text:004070E7                 mov     [ebx], cl
.text:004070E9                 jmp     loc_406C07
.text:004070E9 ; ---------------------------------------------------------------------------
.text:004070EE                 align 10h
.text:004070F0
.text:004070F0 loc_4070F0:                             ; CODE XREF: sub_406090+16F↑j
.text:004070F0                                         ; sub_406090+16DF↓j ...
.text:004070F0                 mov     ebp, [esp+97Ch+var_900] ; jumptable 004061FF case 42
.text:004070F4                 test    ebp, ebp
.text:004070F6                 jz      loc_407651
.text:004070FC
.text:004070FC loc_4070FC:                             ; CODE XREF: sub_406090+15D3↓j
.text:004070FC                 mov     [esp+97Ch+var_91C], 0
.text:00407101                 xor     ecx, ecx
.text:00407103                 mov     [esp+97Ch+var_91D], 0
.text:00407108
.text:00407108 loc_407108:                             ; CODE XREF: sub_406090+10ED↓j
.text:00407108                                         ; sub_406090+1105↓j ...
.text:00407108                 cmp     [esp+97Ch+var_8EC], 2Bh ; '+'
.text:00407110                 movsx   eax, [esp+97Ch+var_91D]
.text:00407115                 jz      short loc_40711A
.text:00407117                 or      eax, 1
.text:0040711A
.text:0040711A loc_40711A:                             ; CODE XREF: sub_406090+1085↑j
.text:0040711A                 cmp     [esp+97Ch+var_8EC], 3Fh ; '?'
.text:00407122                 mov     [esp+97Ch+var_91D], al
.text:00407126                 movsx   eax, cl
.text:00407129                 jz      short loc_40712E
.text:0040712B                 or      eax, 1
.text:0040712E
.text:0040712E loc_40712E:                             ; CODE XREF: sub_406090+1099↑j
.text:0040712E                 mov     edx, [esp+97Ch+var_8D0]
.text:00407135                 mov     cl, al
.text:00407137                 cmp     edx, [esp+97Ch+var_8F4]
.text:0040713E                 jz      short loc_4071B0
.text:00407140                 movzx   eax, byte ptr [edx]
.text:00407143                 lea     edi, [edx+1]
.text:00407146                 mov     esi, [esp+97Ch+var_8F8]
.text:0040714D                 mov     [esp+97Ch+var_8D0], edi
.text:00407154                 test    esi, esi
.text:00407156                 mov     [esp+97Ch+var_8EC], al
.text:0040715D                 jz      short loc_407175
.text:0040715F                 mov     esi, [esp+97Ch+var_8F8]
.text:00407166                 movzx   ebp, al
.text:00407169                 movzx   eax, byte ptr [ebp+esi+0]
.text:0040716E                 mov     [esp+97Ch+var_8EC], al
.text:00407175
.text:00407175 loc_407175:                             ; CODE XREF: sub_406090+10CD↑j
.text:00407175                 cmp     [esp+97Ch+var_8EC], 2Ah ; '*'
.text:0040717D                 jz      short loc_407108
.text:0040717F                 test    byte ptr [esp+97Ch+arg_8], 2
.text:00407187                 jnz     loc_4075E0
.text:0040718D                 cmp     [esp+97Ch+var_8EC], 2Bh ; '+'
.text:00407195                 jz      loc_407108
.text:0040719B                 cmp     [esp+97Ch+var_8EC], 3Fh ; '?'
.text:004071A3                 jz      loc_407108
.text:004071A9
.text:004071A9 loc_4071A9:                             ; CODE XREF: sub_406090+1558↓j
.text:004071A9                 dec     [esp+97Ch+var_8D0]
.text:004071B0
.text:004071B0 loc_4071B0:                             ; CODE XREF: sub_406090+10AE↑j
.text:004071B0                                         ; sub_406090+15AB↓j
.text:004071B0                 mov     edx, [esp+97Ch+var_900]
.text:004071B4                 test    edx, edx
.text:004071B6                 jz      loc_4064BF
.text:004071BC                 test    cl, cl
.text:004071BE                 jz      loc_4073C3
.text:004071C4                 mov     ebx, [esp+97Ch+arg_C]
.text:004071CB                 mov     ebp, [esp+97Ch+arg_C]
.text:004071D2                 mov     esi, [esp+97Ch+var_950]
.text:004071D6                 mov     edi, [ebx]
.text:004071D8                 mov     edx, [ebp+4]
.text:004071DB                 sub     esi, edi
.text:004071DD                 add     esi, 3
.text:004071E0                 mov     ebx, edi
.text:004071E2                 cmp     esi, edx
.text:004071E4                 jbe     loc_4072A1
.text:004071EA
.text:004071EA loc_4071EA:                             ; CODE XREF: sub_406090+120B↓j
.text:004071EA                 cmp     edx, 10000h
.text:004071F0                 mov     ebp, 0Fh
.text:004071F5                 jz      loc_4064A6
.text:004071FB                 mov     esi, [esp+97Ch+arg_C]
.text:00407202                 lea     ecx, [edx+edx]
.text:00407205                 cmp     ecx, 10000h
.text:0040720B                 mov     [esi+4], ecx
.text:0040720E                 jbe     short loc_407217
.text:00407210                 mov     dword ptr [esi+4], 10000h
.text:00407217
.text:00407217 loc_407217:                             ; CODE XREF: sub_406090+117E↑j
.text:00407217                 mov     eax, [esp+97Ch+arg_C]
.text:0040721E                 mov     ebp, 0Ch
.text:00407223                 mov     esi, [eax+4]
.text:00407226                 mov     [esp+97Ch+Size], edi ; Block
.text:00407229                 mov     [esp+97Ch+var_978], esi ; Size
.text:0040722D                 call    realloc
.text:00407232                 mov     edi, [esp+97Ch+arg_C]
.text:00407239                 test    eax, eax
.text:0040723B                 mov     [edi], eax
.text:0040723D                 jz      loc_4064A6
.text:00407243                 cmp     ebx, eax
.text:00407245                 jz      short loc_40727B
.text:00407247                 mov     edx, [esp+97Ch+var_908]
.text:0040724B                 sub     eax, ebx
.text:0040724D                 add     [esp+97Ch+var_950], eax
.text:00407251                 add     [esp+97Ch+var_904], eax
.text:00407255                 test    edx, edx
.text:00407257                 jz      short loc_40725D
.text:00407259                 add     [esp+97Ch+var_908], eax
.text:0040725D
.text:0040725D loc_40725D:                             ; CODE XREF: sub_406090+11C7↑j
.text:0040725D                 mov     ebp, [esp+97Ch+var_900]
.text:00407261                 test    ebp, ebp
.text:00407263                 jz      short loc_407269
.text:00407265                 add     [esp+97Ch+var_900], eax
.text:00407269
.text:00407269 loc_407269:                             ; CODE XREF: sub_406090+11D3↑j
.text:00407269                 mov     ebx, [esp+97Ch+var_8FC]
.text:00407270                 test    ebx, ebx
.text:00407272                 jz      short loc_40727B
.text:00407274                 add     [esp+97Ch+var_8FC], eax
.text:0040727B
.text:0040727B loc_40727B:                             ; CODE XREF: sub_406090+11B5↑j
.text:0040727B                                         ; sub_406090+11E2↑j
.text:0040727B                 mov     esi, [esp+97Ch+arg_C]
.text:00407282                 mov     eax, [esp+97Ch+arg_C]
.text:00407289                 mov     ecx, [esp+97Ch+var_950]
.text:0040728D                 mov     edi, [esi]
.text:0040728F                 mov     edx, [eax+4]
.text:00407292                 sub     ecx, edi
.text:00407294                 add     ecx, 3
.text:00407297                 mov     ebx, edi
.text:00407299                 cmp     ecx, edx
.text:0040729B                 ja      loc_4071EA
.text:004072A1
.text:004072A1 loc_4072A1:                             ; CODE XREF: sub_406090+1154↑j
.text:004072A1                 mov     edi, [esp+97Ch+var_8F8]
.text:004072A8                 test    edi, edi
.text:004072AA                 jz      loc_4075CA
.text:004072B0                 mov     edi, [esp+97Ch+var_8D0]
.text:004072B7                 mov     ebx, [esp+97Ch+var_8F8]
.text:004072BE                 movzx   ebp, byte ptr [edi-2]
.text:004072C2                 movsx   edx, byte ptr [ebp+ebx+0]
.text:004072C7
.text:004072C7 loc_4072C7:                             ; CODE XREF: sub_406090+1545↓j
.text:004072C7                 mov     ecx, [esp+97Ch+var_8F8]
.text:004072CE                 test    ecx, ecx
.text:004072D0                 jz      loc_4075C2
.text:004072D6                 mov     eax, [esp+97Ch+var_8F8]
.text:004072DD                 movsx   esi, byte ptr [eax+2Eh]
.text:004072E1                 cmp     edx, esi
.text:004072E3
.text:004072E3 loc_4072E3:                             ; CODE XREF: sub_406090+1535↓j
.text:004072E3                 jz      loc_40752B
.text:004072E9
.text:004072E9 loc_4072E9:                             ; CODE XREF: sub_406090+14A0↓j
.text:004072E9                                         ; sub_406090+14AD↓j ...
.text:004072E9                 mov     [esp+97Ch+Size], 12h
.text:004072F0                 mov     ebx, [esp+97Ch+var_900]
.text:004072F4                 mov     ecx, [esp+97Ch+var_950]
.text:004072F8                 mov     edi, [esp+97Ch+var_950]
.text:004072FC                 sub     ebx, ecx
.text:004072FE                 sub     ebx, 6
.text:00407301                 mov     [esp+97Ch+var_974], ebx
.text:00407305                 mov     [esp+97Ch+var_978], edi
.text:00407309                 call    sub_402E60
.text:0040730E
.text:0040730E loc_40730E:                             ; CODE XREF: sub_406090+1523↓j
.text:0040730E                 add     [esp+97Ch+var_950], 3
.text:00407313                 mov     esi, [esp+97Ch+arg_C]
.text:0040731A                 mov     eax, [esp+97Ch+var_950]
.text:0040731E                 mov     edi, [esi]
.text:00407320                 mov     edx, [esi+4]
.text:00407323
.text:00407323 loc_407323:                             ; CODE XREF: sub_406090+134A↓j
.text:00407323                 sub     eax, edi
.text:00407325                 mov     ebx, edi
.text:00407327                 add     eax, 3
.text:0040732A                 cmp     eax, edx
.text:0040732C                 jbe     loc_4073DF
.text:00407332                 cmp     edx, 10000h
.text:00407338                 mov     ebp, 0Fh
.text:0040733D                 jz      loc_4064A6
.text:00407343                 mov     esi, [esp+97Ch+arg_C]
.text:0040734A                 lea     ebp, [edx+edx]
.text:0040734D                 cmp     ebp, 10000h
.text:00407353                 mov     [esi+4], ebp
.text:00407356                 jbe     short loc_40735F
.text:00407358                 mov     dword ptr [esi+4], 10000h
.text:0040735F
.text:0040735F loc_40735F:                             ; CODE XREF: sub_406090+12C6↑j
.text:0040735F                 mov     eax, [esp+97Ch+arg_C]
.text:00407366                 mov     ebp, 0Ch
.text:0040736B                 mov     ecx, [eax+4]
.text:0040736E                 mov     [esp+97Ch+Size], edi ; Block
.text:00407371                 mov     [esp+97Ch+var_978], ecx ; Size
.text:00407375                 call    realloc
.text:0040737A                 mov     edx, [esp+97Ch+arg_C]
.text:00407381                 test    eax, eax
.text:00407383                 mov     [edx], eax
.text:00407385                 jz      loc_4064A6
.text:0040738B                 cmp     ebx, eax
.text:0040738D                 jz      short loc_4073C3
.text:0040738F                 mov     edi, [esp+97Ch+var_908]
.text:00407393                 sub     eax, ebx
.text:00407395                 add     [esp+97Ch+var_950], eax
.text:00407399                 add     [esp+97Ch+var_904], eax
.text:0040739D                 test    edi, edi
.text:0040739F                 jz      short loc_4073A5
.text:004073A1                 add     [esp+97Ch+var_908], eax
.text:004073A5
.text:004073A5 loc_4073A5:                             ; CODE XREF: sub_406090+130F↑j
.text:004073A5                 mov     ebx, [esp+97Ch+var_900]
.text:004073A9                 test    ebx, ebx
.text:004073AB                 jz      short loc_4073B1
.text:004073AD                 add     [esp+97Ch+var_900], eax
.text:004073B1
.text:004073B1 loc_4073B1:                             ; CODE XREF: sub_406090+131B↑j
.text:004073B1                 mov     esi, [esp+97Ch+var_8FC]
.text:004073B8                 test    esi, esi
.text:004073BA                 jz      short loc_4073C3
.text:004073BC                 add     [esp+97Ch+var_8FC], eax
.text:004073C3
.text:004073C3 loc_4073C3:                             ; CODE XREF: sub_406090+112E↑j
.text:004073C3                                         ; sub_406090+12FD↑j ...
.text:004073C3                 mov     edx, [esp+97Ch+arg_C]
.text:004073CA                 mov     ebp, [esp+97Ch+arg_C]
.text:004073D1                 mov     eax, [esp+97Ch+var_950]
.text:004073D5                 mov     edi, [edx]
.text:004073D7                 mov     edx, [ebp+4]
.text:004073DA                 jmp     loc_407323
.text:004073DF ; ---------------------------------------------------------------------------
.text:004073DF
.text:004073DF loc_4073DF:                             ; CODE XREF: sub_406090+129C↑j
.text:004073DF                 movzx   edx, [esp+97Ch+var_91C]
.text:004073E4                 mov     ebx, [esp+97Ch+var_950]
.text:004073E8                 mov     eax, [esp+97Ch+var_900]
.text:004073EC                 mov     edi, [esp+97Ch+var_900]
.text:004073F0                 mov     esi, ebx
.text:004073F2                 and     edx, 1
.text:004073F5                 mov     [esp+97Ch+var_970], ebx
.text:004073F9                 sub     esi, eax
.text:004073FB                 add     edx, 0Fh
.text:004073FE                 mov     [esp+97Ch+var_974], esi
.text:00407402                 add     ebx, 3
.text:00407405                 mov     [esp+97Ch+var_978], edi
.text:00407409                 mov     [esp+97Ch+Size], edx
.text:0040740C                 call    sub_402EB0
.text:00407411                 mov     [esp+97Ch+var_950], ebx
.text:00407415                 xor     ecx, ecx
.text:00407417                 cmp     [esp+97Ch+var_91D], 0
.text:0040741C                 mov     [esp+97Ch+var_8FC], ecx
.text:00407423                 jnz     loc_4064BF
.text:00407429                 mov     ecx, [esp+97Ch+arg_C]
.text:00407430                 mov     ebp, [esp+97Ch+var_950]
.text:00407434                 mov     edi, [ecx]
.text:00407436                 mov     edx, [ecx+4]
.text:00407439                 sub     ebp, edi
.text:0040743B                 mov     ebx, edi
.text:0040743D                 add     ebp, 3
.text:00407440                 cmp     ebp, edx
.text:00407442                 jbe     loc_4074FF
.text:00407448
.text:00407448 loc_407448:                             ; CODE XREF: sub_406090+1469↓j
.text:00407448                 cmp     edx, 10000h
.text:0040744E                 mov     ebp, 0Fh
.text:00407453                 jz      loc_4064A6
.text:00407459                 mov     esi, [esp+97Ch+arg_C]
.text:00407460                 lea     ebp, [edx+edx]
.text:00407463                 cmp     ebp, 10000h
.text:00407469                 mov     [esi+4], ebp
.text:0040746C                 jbe     short loc_407475
.text:0040746E                 mov     dword ptr [esi+4], 10000h
.text:00407475
.text:00407475 loc_407475:                             ; CODE XREF: sub_406090+13DC↑j
.text:00407475                 mov     eax, [esp+97Ch+arg_C]
.text:0040747C                 mov     ebp, 0Ch
.text:00407481                 mov     esi, [eax+4]
.text:00407484                 mov     [esp+97Ch+Size], edi ; Block
.text:00407487                 mov     [esp+97Ch+var_978], esi ; Size
.text:0040748B                 call    realloc
.text:00407490                 mov     edx, [esp+97Ch+arg_C]
.text:00407497                 test    eax, eax
.text:00407499                 mov     [edx], eax
.text:0040749B                 jz      loc_4064A6
.text:004074A1                 cmp     ebx, eax
.text:004074A3                 jz      short loc_4074D9
.text:004074A5                 mov     edi, [esp+97Ch+var_908]
.text:004074A9                 sub     eax, ebx
.text:004074AB                 add     [esp+97Ch+var_950], eax
.text:004074AF                 add     [esp+97Ch+var_904], eax
.text:004074B3                 test    edi, edi
.text:004074B5                 jz      short loc_4074BB
.text:004074B7                 add     [esp+97Ch+var_908], eax
.text:004074BB
.text:004074BB loc_4074BB:                             ; CODE XREF: sub_406090+1425↑j
.text:004074BB                 mov     ebx, [esp+97Ch+var_900]
.text:004074BF                 test    ebx, ebx
.text:004074C1                 jz      short loc_4074C7
.text:004074C3                 add     [esp+97Ch+var_900], eax
.text:004074C7
.text:004074C7 loc_4074C7:                             ; CODE XREF: sub_406090+1431↑j
.text:004074C7                 mov     ecx, [esp+97Ch+var_8FC]
.text:004074CE                 test    ecx, ecx
.text:004074D0                 jz      short loc_4074D9
.text:004074D2                 add     [esp+97Ch+var_8FC], eax
.text:004074D9
.text:004074D9 loc_4074D9:                             ; CODE XREF: sub_406090+1413↑j
.text:004074D9                                         ; sub_406090+1440↑j
.text:004074D9                 mov     edx, [esp+97Ch+arg_C]
.text:004074E0                 mov     eax, [esp+97Ch+arg_C]
.text:004074E7                 mov     ebp, [esp+97Ch+var_950]
.text:004074EB                 mov     edi, [edx]
.text:004074ED                 mov     edx, [eax+4]
.text:004074F0                 sub     ebp, edi
.text:004074F2                 add     ebp, 3
.text:004074F5                 mov     ebx, edi
.text:004074F7                 cmp     ebp, edx
.text:004074F9                 ja      loc_407448
.text:004074FF
.text:004074FF loc_4074FF:                             ; CODE XREF: sub_406090+13B2↑j
.text:004074FF                 mov     [esp+97Ch+var_974], 3
.text:00407507                 mov     edi, [esp+97Ch+var_950]
.text:0040750B                 mov     esi, [esp+97Ch+var_900]
.text:0040750F                 mov     [esp+97Ch+Size], 13h
.text:00407516                 mov     [esp+97Ch+var_970], edi
.text:0040751A                 add     edi, 3
.text:0040751D                 mov     [esp+97Ch+var_978], esi
.text:00407521                 call    sub_402EB0
.text:00407526                 jmp     loc_4064BB
.text:0040752B ; ---------------------------------------------------------------------------
.text:0040752B
.text:0040752B loc_40752B:                             ; CODE XREF: sub_406090:loc_4072E3↑j
.text:0040752B                 cmp     [esp+97Ch+var_91D], 0
.text:00407530                 jz      loc_4072E9
.text:00407536                 cmp     edi, [esp+97Ch+var_8F4]
.text:0040753D                 jnb     loc_4072E9
.text:00407543                 mov     edx, [esp+97Ch+var_8F8]
.text:0040754A                 test    edx, edx
.text:0040754C                 jz      short loc_4075BD
.text:0040754E                 movzx   ebp, byte ptr [edi]
.text:00407551                 mov     edi, [esp+97Ch+var_8F8]
.text:00407558                 movsx   edx, byte ptr [ebp+edi+0]
.text:0040755D
.text:0040755D loc_40755D:                             ; CODE XREF: sub_406090+1530↓j
.text:0040755D                 mov     ebx, [esp+97Ch+var_8F8]
.text:00407564                 test    ebx, ebx
.text:00407566                 jz      short loc_4075B8
.text:00407568                 mov     esi, [esp+97Ch+var_8F8]
.text:0040756F                 movsx   ecx, byte ptr [esi+0Ah]
.text:00407573                 cmp     edx, ecx
.text:00407575
.text:00407575 loc_407575:                             ; CODE XREF: sub_406090+152B↓j
.text:00407575                 jnz     loc_4072E9
.text:0040757B                 test    byte ptr [esp+97Ch+arg_8], 40h
.text:00407583                 jnz     loc_4072E9
.text:00407589                 mov     [esp+97Ch+Size], 0Dh
.text:00407590                 mov     ebp, [esp+97Ch+var_900]
.text:00407594                 mov     eax, [esp+97Ch+var_950]
.text:00407598                 mov     edx, [esp+97Ch+var_950]
.text:0040759C                 sub     ebp, eax
.text:0040759E                 sub     ebp, 3
.text:004075A1                 mov     [esp+97Ch+var_974], ebp
.text:004075A5                 mov     [esp+97Ch+var_978], edx
.text:004075A9                 call    sub_402E60
.text:004075AE                 mov     [esp+97Ch+var_91C], 1
.text:004075B3                 jmp     loc_40730E
.text:004075B8 ; ---------------------------------------------------------------------------
.text:004075B8
.text:004075B8 loc_4075B8:                             ; CODE XREF: sub_406090+14D6↑j
.text:004075B8                 cmp     edx, 0Ah
.text:004075BB                 jmp     short loc_407575
.text:004075BD ; ---------------------------------------------------------------------------
.text:004075BD
.text:004075BD loc_4075BD:                             ; CODE XREF: sub_406090+14BC↑j
.text:004075BD                 movsx   edx, byte ptr [edi]
.text:004075C0                 jmp     short loc_40755D
.text:004075C2 ; ---------------------------------------------------------------------------
.text:004075C2
.text:004075C2 loc_4075C2:                             ; CODE XREF: sub_406090+1240↑j
.text:004075C2                 cmp     edx, 2Eh ; '.'
.text:004075C5                 jmp     loc_4072E3
.text:004075CA ; ---------------------------------------------------------------------------
.text:004075CA
.text:004075CA loc_4075CA:                             ; CODE XREF: sub_406090+121A↑j
.text:004075CA                 mov     edi, [esp+97Ch+var_8D0]
.text:004075D1                 movsx   edx, byte ptr [edi-2]
.text:004075D5                 jmp     loc_4072C7
.text:004075D5 ; ---------------------------------------------------------------------------
.text:004075DA                 align 10h
.text:004075E0
.text:004075E0 loc_4075E0:                             ; CODE XREF: sub_406090+10F7↑j
.text:004075E0                 cmp     [esp+97Ch+var_8EC], 5Ch ; '\'
.text:004075E8                 jnz     loc_4071A9
.text:004075EE                 cmp     edi, [esp+97Ch+var_8F4]
.text:004075F5                 jz      short loc_407640
.text:004075F7                 movzx   ebx, byte ptr [edx+1]
.text:004075FB                 lea     ebp, [edx+2]
.text:004075FE                 mov     eax, [esp+97Ch+var_8F8]
.text:00407605                 mov     [esp+97Ch+var_8D0], ebp
.text:0040760C                 test    eax, eax
.text:0040760E                 jz      short loc_40761E
.text:00407610                 mov     eax, [esp+97Ch+var_8F8]
.text:00407617                 movzx   edi, bl
.text:0040761A                 movzx   ebx, byte ptr [edi+eax]
.text:0040761E
.text:0040761E loc_40761E:                             ; CODE XREF: sub_406090+157E↑j
.text:0040761E                 cmp     bl, 2Bh ; '+'
.text:00407621                 jz      short loc_407628
.text:00407623                 cmp     bl, 3Fh ; '?'
.text:00407626                 jnz     short loc_407634
.text:00407628
.text:00407628 loc_407628:                             ; CODE XREF: sub_406090+1591↑j
.text:00407628                 mov     [esp+97Ch+var_8EC], bl
.text:0040762F                 jmp     loc_407108
.text:00407634 ; ---------------------------------------------------------------------------
.text:00407634
.text:00407634 loc_407634:                             ; CODE XREF: sub_406090+1596↑j
.text:00407634                 mov     [esp+97Ch+var_8D0], edx
.text:0040763B                 jmp     loc_4071B0
.text:00407640 ; ---------------------------------------------------------------------------
.text:00407640
.text:00407640 loc_407640:                             ; CODE XREF: sub_406090+1565↑j
.text:00407640                                         ; sub_406090+21FF↓j ...
.text:00407640                 mov     edi, [esp+97Ch+Block]
.text:00407647                 mov     ebp, 5
.text:0040764C                 jmp     loc_406630
.text:00407651 ; ---------------------------------------------------------------------------
.text:00407651
.text:00407651 loc_407651:                             ; CODE XREF: sub_406090+1066↑j
.text:00407651                 test    byte ptr [esp+97Ch+arg_8], 20h
.text:00407659                 jnz     short loc_40766E
.text:0040765B                 test    byte ptr [esp+97Ch+arg_8], 10h
.text:00407663                 jnz     loc_4070FC
.text:00407669                 jmp     def_4061FF      ; jumptable 004061FF default case, cases 11-35,37-39,44,45,47-62,64-90,93,95-122
.text:0040766E ; ---------------------------------------------------------------------------
.text:0040766E
.text:0040766E loc_40766E:                             ; CODE XREF: sub_406090+15C9↑j
.text:0040766E                                         ; sub_406090+31A3↓j
.text:0040766E                 mov     ecx, [esp+97Ch+Block]
.text:00407675                 mov     ebp, 0Dh
.text:0040767A                 jmp     loc_406F6C
.text:0040767A ; ---------------------------------------------------------------------------
.text:0040767F                 align 10h
.text:00407680
.text:00407680 loc_407680:                             ; CODE XREF: sub_406090+16F↑j
.text:00407680                                         ; DATA XREF: sub_406090:jpt_4061FF↑o
.text:00407680                 mov     eax, [esp+97Ch+arg_C] ; jumptable 004061FF case 46
.text:00407687                 mov     ecx, [esp+97Ch+var_950]
.text:0040768B                 mov     edi, [eax]
.text:0040768D                 mov     [esp+97Ch+var_900], ecx
.text:00407691                 mov     ebp, ecx
.text:00407693                 mov     edx, [eax+4]
.text:00407696                 sub     ebp, edi
.text:00407698                 mov     ebx, edi
.text:0040769A                 inc     ebp
.text:0040769B                 cmp     ebp, edx
.text:0040769D                 jbe     loc_407758
.text:004076A3
.text:004076A3 loc_4076A3:                             ; CODE XREF: sub_406090+16C2↓j
.text:004076A3                 cmp     edx, 10000h
.text:004076A9                 mov     ebp, 0Fh
.text:004076AE                 jz      loc_4064A6
.text:004076B4                 mov     esi, [esp+97Ch+arg_C]
.text:004076BB                 lea     ebp, [edx+edx]
.text:004076BE                 cmp     ebp, 10000h
.text:004076C4                 mov     [esi+4], ebp
.text:004076C7                 jbe     short loc_4076D0
.text:004076C9                 mov     dword ptr [esi+4], 10000h
.text:004076D0
.text:004076D0 loc_4076D0:                             ; CODE XREF: sub_406090+1637↑j
.text:004076D0                 mov     eax, [esp+97Ch+arg_C]
.text:004076D7                 mov     ebp, 0Ch
.text:004076DC                 mov     esi, [eax+4]
.text:004076DF                 mov     [esp+97Ch+Size], edi ; Block
.text:004076E2                 mov     [esp+97Ch+var_978], esi ; Size
.text:004076E6                 call    realloc
.text:004076EB                 mov     edi, [esp+97Ch+arg_C]
.text:004076F2                 test    eax, eax
.text:004076F4                 mov     [edi], eax
.text:004076F6                 jz      loc_4064A6
.text:004076FC                 cmp     ebx, eax
.text:004076FE                 jz      short loc_407734
.text:00407700                 sub     eax, ebx
.text:00407702                 mov     ebx, [esp+97Ch+var_908]
.text:00407706                 add     [esp+97Ch+var_950], eax
.text:0040770A                 add     [esp+97Ch+var_904], eax
.text:0040770E                 test    ebx, ebx
.text:00407710                 jz      short loc_407716
.text:00407712                 add     [esp+97Ch+var_908], eax
.text:00407716
.text:00407716 loc_407716:                             ; CODE XREF: sub_406090+1680↑j
.text:00407716                 mov     edx, [esp+97Ch+var_900]
.text:0040771A                 test    edx, edx
.text:0040771C                 jz      short loc_407722
.text:0040771E                 add     [esp+97Ch+var_900], eax
.text:00407722
.text:00407722 loc_407722:                             ; CODE XREF: sub_406090+168C↑j
.text:00407722                 mov     ecx, [esp+97Ch+var_8FC]
.text:00407729                 test    ecx, ecx
.text:0040772B                 jz      short loc_407734
.text:0040772D                 add     [esp+97Ch+var_8FC], eax
.text:00407734
.text:00407734 loc_407734:                             ; CODE XREF: sub_406090+166E↑j
.text:00407734                                         ; sub_406090+169B↑j
.text:00407734                 mov     esi, [esp+97Ch+arg_C]
.text:0040773B                 mov     eax, [esp+97Ch+arg_C]
.text:00407742                 mov     ebp, [esp+97Ch+var_950]
.text:00407746                 mov     edi, [esi]
.text:00407748                 mov     edx, [eax+4]
.text:0040774B                 sub     ebp, edi
.text:0040774D                 inc     ebp
.text:0040774E                 mov     ebx, edi
.text:00407750                 cmp     ebp, edx
.text:00407752                 ja      loc_4076A3
.text:00407758
.text:00407758 loc_407758:                             ; CODE XREF: sub_406090+160D↑j
.text:00407758                 mov     edi, [esp+97Ch+var_950]
.text:0040775C                 mov     byte ptr [edi], 3
.text:0040775F                 jmp     loc_4064BA
.text:00407764 ; ---------------------------------------------------------------------------
.text:00407764
.text:00407764 loc_407764:                             ; CODE XREF: sub_406090+16F↑j
.text:00407764                                         ; DATA XREF: sub_406090:jpt_4061FF↑o
.text:00407764                 test    [esp+97Ch+arg_8], 402h ; jumptable 004061FF cases 43,63
.text:0040776F                 jz      loc_4070F0      ; jumptable 004061FF case 42
.text:00407775                 jmp     def_4061FF      ; jumptable 004061FF default case, cases 11-35,37-39,44,45,47-62,64-90,93,95-122
.text:0040777A ; ---------------------------------------------------------------------------
.text:0040777A
.text:0040777A loc_40777A:                             ; CODE XREF: sub_406090+16F↑j
.text:0040777A                                         ; DATA XREF: sub_406090:jpt_4061FF↑o
.text:0040777A                 mov     [esp+97Ch+var_91E], 0 ; jumptable 004061FF case 91
.text:0040777F                 mov     edi, [esp+97Ch+var_8F4]
.text:00407786                 cmp     [esp+97Ch+var_8D0], edi
.text:0040778D                 mov     [esp+97Ch+var_924], 0FFFFFFFFh
.text:00407795                 jz      loc_407CEF
.text:0040779B
.text:0040779B loc_40779B:                             ; CODE XREF: sub_406090+1784↓j
.text:0040779B                                         ; sub_406090+17B1↓j ...
.text:0040779B                 mov     ebp, [esp+97Ch+arg_C]
.text:004077A2                 mov     ecx, [esp+97Ch+var_950]
.text:004077A6                 mov     edi, [ebp+0]
.text:004077A9                 mov     edx, [ebp+4]
.text:004077AC                 sub     ecx, edi
.text:004077AE                 lea     ebx, [ecx+22h]
.text:004077B1                 cmp     ebx, edx
.text:004077B3                 jbe     loc_407853
.text:004077B9                 cmp     edx, 10000h
.text:004077BF                 mov     ebp, 0Fh
.text:004077C4                 jz      loc_4064A6
.text:004077CA                 lea     ebx, [edx+edx]
.text:004077CD                 mov     edx, [esp+97Ch+arg_C]
.text:004077D4                 cmp     ebx, 10000h
.text:004077DA                 mov     [edx+4], ebx
.text:004077DD                 jbe     short loc_4077E6
.text:004077DF                 mov     dword ptr [edx+4], 10000h
.text:004077E6
.text:004077E6 loc_4077E6:                             ; CODE XREF: sub_406090+174D↑j
.text:004077E6                 mov     eax, [esp+97Ch+arg_C]
.text:004077ED                 mov     ebp, [eax+4]
.text:004077F0                 mov     [esp+97Ch+Size], edi ; Block
.text:004077F3                 mov     [esp+97Ch+var_978], ebp ; Size
.text:004077F7                 mov     ebp, 0Ch
.text:004077FC                 call    realloc
.text:00407801                 mov     edx, [esp+97Ch+arg_C]
.text:00407808                 test    eax, eax
.text:0040780A                 mov     [edx], eax
.text:0040780C                 jz      loc_4064A6
.text:00407812                 cmp     edi, eax
.text:00407814                 jz      short loc_40779B
.text:00407816                 mov     ecx, [esp+97Ch+var_908]
.text:0040781A                 sub     eax, edi
.text:0040781C                 add     [esp+97Ch+var_950], eax
.text:00407820                 add     [esp+97Ch+var_904], eax
.text:00407824                 test    ecx, ecx
.text:00407826                 jz      short loc_40782C
.text:00407828                 add     [esp+97Ch+var_908], eax
.text:0040782C
.text:0040782C loc_40782C:                             ; CODE XREF: sub_406090+1796↑j
.text:0040782C                 mov     esi, [esp+97Ch+var_900]
.text:00407830                 test    esi, esi
.text:00407832                 jz      short loc_407838
.text:00407834                 add     [esp+97Ch+var_900], eax
.text:00407838
.text:00407838 loc_407838:                             ; CODE XREF: sub_406090+17A2↑j
.text:00407838                 mov     edi, [esp+97Ch+var_8FC]
.text:0040783F                 test    edi, edi
.text:00407841                 jz      loc_40779B
.text:00407847                 add     [esp+97Ch+var_8FC], eax
.text:0040784E                 jmp     loc_40779B
.text:00407853 ; ---------------------------------------------------------------------------
.text:00407853
.text:00407853 loc_407853:                             ; CODE XREF: sub_406090+1723↑j
.text:00407853                 mov     ebx, [esp+97Ch+var_950]
.text:00407857                 lea     esi, [ecx+1]
.text:0040785A                 cmp     esi, edx
.text:0040785C                 mov     [esp+97Ch+var_900], ebx
.text:00407860                 mov     ebx, edi
.text:00407862                 jbe     loc_40791D
.text:00407868
.text:00407868 loc_407868:                             ; CODE XREF: sub_406090+1887↓j
.text:00407868                 cmp     edx, 10000h
.text:0040786E                 mov     ebp, 0Fh
.text:00407873                 jz      loc_4064A6
.text:00407879                 lea     ecx, [edx+edx]
.text:0040787C                 mov     edx, [esp+97Ch+arg_C]
.text:00407883                 cmp     ecx, 10000h
.text:00407889                 mov     [edx+4], ecx
.text:0040788C                 jbe     short loc_407895
.text:0040788E                 mov     dword ptr [edx+4], 10000h
.text:00407895
.text:00407895 loc_407895:                             ; CODE XREF: sub_406090+17FC↑j
.text:00407895                 mov     eax, [esp+97Ch+arg_C]
.text:0040789C                 mov     ebp, [eax+4]
.text:0040789F                 mov     [esp+97Ch+Size], edi ; Block
.text:004078A2                 mov     [esp+97Ch+var_978], ebp ; Size
.text:004078A6                 mov     ebp, 0Ch
.text:004078AB                 call    realloc
.text:004078B0                 mov     edx, [esp+97Ch+arg_C]
.text:004078B7                 test    eax, eax
.text:004078B9                 mov     [edx], eax
.text:004078BB                 jz      loc_4064A6
.text:004078C1                 cmp     ebx, eax
.text:004078C3                 jz      short loc_4078F9
.text:004078C5                 mov     edi, [esp+97Ch+var_908]
.text:004078C9                 sub     eax, ebx
.text:004078CB                 add     [esp+97Ch+var_950], eax
.text:004078CF                 add     [esp+97Ch+var_904], eax
.text:004078D3                 test    edi, edi
.text:004078D5                 jz      short loc_4078DB
.text:004078D7                 add     [esp+97Ch+var_908], eax
.text:004078DB
.text:004078DB loc_4078DB:                             ; CODE XREF: sub_406090+1845↑j
.text:004078DB                 mov     esi, [esp+97Ch+var_900]
.text:004078DF                 test    esi, esi
.text:004078E1                 jz      short loc_4078E7
.text:004078E3                 add     [esp+97Ch+var_900], eax
.text:004078E7
.text:004078E7 loc_4078E7:                             ; CODE XREF: sub_406090+1851↑j
.text:004078E7                 mov     ebx, [esp+97Ch+var_8FC]
.text:004078EE                 test    ebx, ebx
.text:004078F0                 jz      short loc_4078F9
.text:004078F2                 add     [esp+97Ch+var_8FC], eax
.text:004078F9
.text:004078F9 loc_4078F9:                             ; CODE XREF: sub_406090+1833↑j
.text:004078F9                                         ; sub_406090+1860↑j
.text:004078F9                 mov     ecx, [esp+97Ch+arg_C]
.text:00407900                 mov     eax, [esp+97Ch+arg_C]
.text:00407907                 mov     ebp, [esp+97Ch+var_950]
.text:0040790B                 mov     edi, [ecx]
.text:0040790D                 mov     edx, [eax+4]
.text:00407910                 sub     ebp, edi
.text:00407912                 inc     ebp
.text:00407913                 mov     ebx, edi
.text:00407915                 cmp     ebp, edx
.text:00407917                 ja      loc_407868
.text:0040791D
.text:0040791D loc_40791D:                             ; CODE XREF: sub_406090+17D2↑j
.text:0040791D                 mov     edi, [esp+97Ch+var_950]
.text:00407921                 mov     bl, 5
.text:00407923                 mov     edx, [esp+97Ch+var_8D0]
.text:0040792A                 inc     [esp+97Ch+var_950]
.text:0040792E                 cmp     byte ptr [edx], 5Eh ; '^'
.text:00407931                 setnz   al
.text:00407934                 sub     bl, al
.text:00407936                 mov     [edi], bl
.text:00407938                 mov     edi, [esp+97Ch+var_8D0]
.text:0040793F                 cmp     byte ptr [edi], 5Eh ; '^'
.text:00407942                 jz      loc_4082F9
.text:00407948
.text:00407948 loc_407948:                             ; CODE XREF: sub_406090+2271↓j
.text:00407948                 mov     [esp+97Ch+var_8F0], edi
.text:0040794F                 mov     esi, [esp+97Ch+arg_C]
.text:00407956                 mov     ecx, [esp+97Ch+arg_C]
.text:0040795D                 mov     ebp, [esp+97Ch+var_950]
.text:00407961                 mov     edi, [esi]
.text:00407963                 mov     edx, [ecx+4]
.text:00407966                 sub     ebp, edi
.text:00407968                 mov     ebx, edi
.text:0040796A                 inc     ebp
.text:0040796B                 cmp     ebp, edx
.text:0040796D                 jbe     loc_407A28
.text:00407973
.text:00407973 loc_407973:                             ; CODE XREF: sub_406090+1992↓j
.text:00407973                 cmp     edx, 10000h
.text:00407979                 mov     ebp, 0Fh
.text:0040797E                 jz      loc_4064A6
.text:00407984                 lea     ebp, [edx+edx]
.text:00407987                 mov     edx, [esp+97Ch+arg_C]
.text:0040798E                 cmp     ebp, 10000h
.text:00407994                 mov     [edx+4], ebp
.text:00407997                 jbe     short loc_4079A0
.text:00407999                 mov     dword ptr [edx+4], 10000h
.text:004079A0
.text:004079A0 loc_4079A0:                             ; CODE XREF: sub_406090+1907↑j
.text:004079A0                 mov     eax, [esp+97Ch+arg_C]
.text:004079A7                 mov     ebp, 0Ch
.text:004079AC                 mov     edx, [eax+4]
.text:004079AF                 mov     [esp+97Ch+Size], edi ; Block
.text:004079B2                 mov     [esp+97Ch+var_978], edx ; Size
.text:004079B6                 call    realloc
.text:004079BB                 mov     edi, [esp+97Ch+arg_C]
.text:004079C2                 test    eax, eax
.text:004079C4                 mov     [edi], eax
.text:004079C6                 jz      loc_4064A6
.text:004079CC                 cmp     ebx, eax
.text:004079CE                 jz      short loc_407A04
.text:004079D0                 mov     ecx, [esp+97Ch+var_908]
.text:004079D4                 sub     eax, ebx
.text:004079D6                 add     [esp+97Ch+var_950], eax
.text:004079DA                 add     [esp+97Ch+var_904], eax
.text:004079DE                 test    ecx, ecx
.text:004079E0                 jz      short loc_4079E6
.text:004079E2                 add     [esp+97Ch+var_908], eax
.text:004079E6
.text:004079E6 loc_4079E6:                             ; CODE XREF: sub_406090+1950↑j
.text:004079E6                 mov     ebx, [esp+97Ch+var_900]
.text:004079EA                 test    ebx, ebx
.text:004079EC                 jz      short loc_4079F2
.text:004079EE                 add     [esp+97Ch+var_900], eax
.text:004079F2
.text:004079F2 loc_4079F2:                             ; CODE XREF: sub_406090+195C↑j
.text:004079F2                 mov     esi, [esp+97Ch+var_8FC]
.text:004079F9                 test    esi, esi
.text:004079FB                 jz      short loc_407A04
.text:004079FD                 add     [esp+97Ch+var_8FC], eax
.text:00407A04
.text:00407A04 loc_407A04:                             ; CODE XREF: sub_406090+193E↑j
.text:00407A04                                         ; sub_406090+196B↑j
.text:00407A04                 mov     edx, [esp+97Ch+arg_C]
.text:00407A0B                 mov     eax, [esp+97Ch+arg_C]
.text:00407A12                 mov     ebp, [esp+97Ch+var_950]
.text:00407A16                 mov     edi, [edx]
.text:00407A18                 mov     edx, [eax+4]
.text:00407A1B                 sub     ebp, edi
.text:00407A1D                 inc     ebp
.text:00407A1E                 mov     ebx, edi
.text:00407A20                 cmp     ebp, edx
.text:00407A22                 ja      loc_407973
.text:00407A28
.text:00407A28 loc_407A28:                             ; CODE XREF: sub_406090+18DD↑j
.text:00407A28                 cld
.text:00407A29                 mov     ebx, [esp+97Ch+var_950]
.text:00407A2D                 xor     eax, eax
.text:00407A2F                 mov     ecx, 8
.text:00407A34                 mov     byte ptr [ebx], 20h ; ' '
.text:00407A37                 inc     ebx
.text:00407A38                 mov     edi, ebx
.text:00407A3A                 mov     [esp+97Ch+var_950], ebx
.text:00407A3E                 rep stosd
.text:00407A40                 cmp     byte ptr [ebx-2], 5
.text:00407A44                 jz      loc_4082DF
.text:00407A4A
.text:00407A4A loc_407A4A:                             ; CODE XREF: sub_406090+1ACD↓j
.text:00407A4A                                         ; sub_406090+1BD8↓j ...
.text:00407A4A                 mov     edx, [esp+97Ch+var_8D0]
.text:00407A51                 cmp     edx, [esp+97Ch+var_8F4]
.text:00407A58                 jz      loc_407CEF
.text:00407A5E                 movzx   eax, byte ptr [edx]
.text:00407A61                 lea     edi, [edx+1]
.text:00407A64                 mov     ecx, [esp+97Ch+var_8F8]
.text:00407A6B                 mov     [esp+97Ch+var_8D0], edi
.text:00407A72                 test    ecx, ecx
.text:00407A74                 mov     [esp+97Ch+var_8EC], al
.text:00407A7B                 jz      short loc_407A92
.text:00407A7D                 mov     ebp, [esp+97Ch+var_8F8]
.text:00407A84                 movzx   esi, al
.text:00407A87                 movzx   ebx, byte ptr [esi+ebp]
.text:00407A8B                 mov     [esp+97Ch+var_8EC], bl
.text:00407A92
.text:00407A92 loc_407A92:                             ; CODE XREF: sub_406090+19EB↑j
.text:00407A92                 test    byte ptr [esp+97Ch+arg_8], 1
.text:00407A9A                 jz      short loc_407AAA
.text:00407A9C                 cmp     [esp+97Ch+var_8EC], 5Ch ; '\'
.text:00407AA4                 jz      loc_408288
.text:00407AAA
.text:00407AAA loc_407AAA:                             ; CODE XREF: sub_406090+1A0A↑j
.text:00407AAA                 cmp     [esp+97Ch+var_8EC], 5Dh ; ']'
.text:00407AB2                 jz      loc_408244
.text:00407AB8                 mov     edi, [esp+97Ch+var_8D0]
.text:00407ABF
.text:00407ABF loc_407ABF:                             ; CODE XREF: sub_406090+21C5↓j
.text:00407ABF                 cmp     [esp+97Ch+var_91E], 0
.text:00407AC4                 jz      loc_4081A9
.text:00407ACA                 cmp     [esp+97Ch+var_8EC], 2Dh ; '-'
.text:00407AD2                 jz      loc_4081A0
.text:00407AD8
.text:00407AD8 loc_407AD8:                             ; CODE XREF: sub_406090+2121↓j
.text:00407AD8                                         ; sub_406090+2137↓j ...
.text:00407AD8                 cmp     byte ptr [edi], 2Dh ; '-'
.text:00407ADB                 jz      loc_408110
.text:00407AE1
.text:00407AE1 loc_407AE1:                             ; CODE XREF: sub_406090+2084↓j
.text:00407AE1                 test    byte ptr [esp+97Ch+arg_8], 4
.text:00407AE9                 jz      short loc_407AF9
.text:00407AEB                 cmp     [esp+97Ch+var_8EC], 5Bh ; '['
.text:00407AF3                 jz      loc_407E76
.text:00407AF9
.text:00407AF9 loc_407AF9:                             ; CODE XREF: sub_406090+1A59↑j
.text:00407AF9                                         ; sub_406090+1DE9↓j
.text:00407AF9                 test    byte ptr [esp+97Ch+arg_8], 4
.text:00407B01                 jz      short loc_407B11
.text:00407B03                 cmp     [esp+97Ch+var_8EC], 5Bh ; '['
.text:00407B0B                 jz      loc_407D03
.text:00407B11
.text:00407B11 loc_407B11:                             ; CODE XREF: sub_406090+1A71↑j
.text:00407B11                                         ; sub_406090+1C76↓j
.text:00407B11                 test    byte ptr [esp+97Ch+arg_8], 4
.text:00407B19                 jz      short loc_407B25
.text:00407B1B                 cmp     [esp+97Ch+var_8EC], 5Bh ; '['
.text:00407B23                 jz      short loc_407B62
.text:00407B25
.text:00407B25 loc_407B25:                             ; CODE XREF: sub_406090+1A89↑j
.text:00407B25                                         ; sub_406090+1AD5↓j
.text:00407B25                 movzx   ecx, [esp+97Ch+var_8EC]
.text:00407B2D                 mov     edx, 1
.text:00407B32                 mov     [esp+97Ch+var_91E], 0
.text:00407B37                 mov     esi, [esp+97Ch+var_950]
.text:00407B3B                 shr     cl, 3
.text:00407B3E                 movzx   edi, cl
.text:00407B41                 movzx   ecx, [esp+97Ch+var_8EC]
.text:00407B49                 and     ecx, 7
.text:00407B4C                 shl     edx, cl
.text:00407B4E                 or      [edi+esi], dl
.text:00407B51                 movzx   ebx, [esp+97Ch+var_8EC]
.text:00407B59
.text:00407B59 loc_407B59:                             ; CODE XREF: sub_406090+224A↓j
.text:00407B59                 mov     [esp+97Ch+var_924], ebx
.text:00407B5D                 jmp     loc_407A4A
.text:00407B62 ; ---------------------------------------------------------------------------
.text:00407B62
.text:00407B62 loc_407B62:                             ; CODE XREF: sub_406090+1A93↑j
.text:00407B62                 cmp     byte ptr [edi], 2Eh ; '.'
.text:00407B65                 jnz     short loc_407B25
.text:00407B67                 cmp     edi, [esp+97Ch+var_8F4]
.text:00407B6E                 mov     ebp, 0Eh
.text:00407B73                 jz      loc_4064A6
.text:00407B79                 inc     edi
.text:00407B7A                 xor     ebx, ebx
.text:00407B7C                 cmp     edi, [esp+97Ch+var_8F4]
.text:00407B83                 mov     [esp+97Ch+var_8D0], edi
.text:00407B8A                 jz      loc_407CEF
.text:00407B90
.text:00407B90 loc_407B90:                             ; CODE XREF: sub_406090+1B75↓j
.text:00407B90                 movzx   eax, byte ptr [edi]
.text:00407B93                 inc     edi
.text:00407B94                 mov     esi, [esp+97Ch+var_8F8]
.text:00407B9B                 mov     [esp+97Ch+var_8D0], edi
.text:00407BA2                 test    esi, esi
.text:00407BA4                 mov     [esp+97Ch+var_8EC], al
.text:00407BAB                 jz      short loc_407BC3
.text:00407BAD                 mov     esi, [esp+97Ch+var_8F8]
.text:00407BB4                 movzx   ebp, al
.text:00407BB7                 movzx   ecx, byte ptr [ebp+esi+0]
.text:00407BBC                 mov     [esp+97Ch+var_8EC], cl
.text:00407BC3
.text:00407BC3 loc_407BC3:                             ; CODE XREF: sub_406090+1B1B↑j
.text:00407BC3                 cmp     [esp+97Ch+var_8EC], 2Eh ; '.'
.text:00407BCB                 jz      loc_407CE1
.text:00407BD1
.text:00407BD1 loc_407BD1:                             ; CODE XREF: sub_406090+1C54↓j
.text:00407BD1                 cmp     edi, [esp+97Ch+var_8F4]
.text:00407BD8                 jz      short loc_407C1A
.text:00407BDA                 test    bl, bl
.text:00407BDC                 js      short loc_407C10
.text:00407BDE                 movzx   eax, [esp+97Ch+var_8EC]
.text:00407BE6                 movzx   edx, bl
.text:00407BE9                 inc     bl
.text:00407BEB                 mov     [esp+edx+97Ch+var_8CC], al
.text:00407BF2                 mov     edi, [esp+97Ch+var_8D0]
.text:00407BF9
.text:00407BF9 loc_407BF9:                             ; CODE XREF: sub_406090+1B88↓j
.text:00407BF9                 cmp     edi, [esp+97Ch+var_8F4]
.text:00407C00                 mov     ebp, 0Eh
.text:00407C05                 jnz     short loc_407B90
.text:00407C07                 jmp     loc_4064A6
.text:00407C07 ; ---------------------------------------------------------------------------
.text:00407C0C                 align 10h
.text:00407C10
.text:00407C10 loc_407C10:                             ; CODE XREF: sub_406090+1B4C↑j
.text:00407C10                 mov     [esp+97Ch+var_8CC], 0
.text:00407C18                 jmp     short loc_407BF9
.text:00407C1A ; ---------------------------------------------------------------------------
.text:00407C1A
.text:00407C1A loc_407C1A:                             ; CODE XREF: sub_406090+1B48↑j
.text:00407C1A                                         ; sub_406090+1C5A↓j
.text:00407C1A                 xor     ecx, ecx
.text:00407C1C                 movzx   edi, bl
.text:00407C1F                 mov     [esp+edi+97Ch+var_8CC], cl
.text:00407C26                 cmp     [esp+97Ch+var_8EC], 2Eh ; '.'
.text:00407C2E                 jz      short loc_407C6D
.text:00407C30
.text:00407C30 loc_407C30:                             ; CODE XREF: sub_406090+1BE7↓j
.text:00407C30                                         ; sub_406090+1BF3↓j
.text:00407C30                 cmp     bl, 0FFh
.text:00407C33                 jz      short loc_407C4F
.text:00407C35                 mov     eax, [esp+97Ch+var_8D0]
.text:00407C3C
.text:00407C3C loc_407C3C:                             ; CODE XREF: sub_406090+1BB6↓j
.text:00407C3C                 dec     bl
.text:00407C3E                 lea     edi, [eax-1]
.text:00407C41                 cmp     bl, 0FFh
.text:00407C44                 mov     eax, edi
.text:00407C46                 jnz     short loc_407C3C
.text:00407C48                 mov     [esp+97Ch+var_8D0], edi
.text:00407C4F
.text:00407C4F loc_407C4F:                             ; CODE XREF: sub_406090+1BA3↑j
.text:00407C4F                 mov     eax, [esp+97Ch+var_950]
.text:00407C53                 or      byte ptr [eax+0Bh], 8
.text:00407C57                 or      byte ptr [eax+5], 40h
.text:00407C5B                 mov     [esp+97Ch+var_924], 2Eh ; '.'
.text:00407C63
.text:00407C63 loc_407C63:                             ; CODE XREF: sub_406090+1C3B↓j
.text:00407C63                                         ; sub_406090+1D73↓j ...
.text:00407C63                 mov     [esp+97Ch+var_91E], 0
.text:00407C68                 jmp     loc_407A4A
.text:00407C6D ; ---------------------------------------------------------------------------
.text:00407C6D
.text:00407C6D loc_407C6D:                             ; CODE XREF: sub_406090+1B9E↑j
.text:00407C6D                 mov     eax, [esp+97Ch+var_8D0]
.text:00407C74                 cmp     byte ptr [eax], 5Dh ; ']'
.text:00407C77                 jnz     short loc_407C30
.text:00407C79                 movzx   ecx, [esp+97Ch+var_8CC]
.text:00407C81                 test    cl, cl
.text:00407C83                 jz      short loc_407C30
.text:00407C85                 dec     bl
.text:00407C87                 jnz     short loc_407CCD
.text:00407C89                 cmp     eax, [esp+97Ch+var_8F4]
.text:00407C90                 mov     ebp, 0Eh
.text:00407C95                 jz      loc_4064A6
.text:00407C9B                 mov     bl, cl
.text:00407C9D                 mov     esi, [esp+97Ch+var_950]
.text:00407CA1                 lea     ebp, [eax+1]
.text:00407CA4                 mov     [esp+97Ch+var_8D0], ebp
.text:00407CAB                 shr     bl, 3
.text:00407CAE                 and     ecx, 7
.text:00407CB1                 mov     edx, 1
.text:00407CB6                 movzx   ebp, bl
.text:00407CB9                 shl     edx, cl
.text:00407CBB                 or      [ebp+esi+0], dl
.text:00407CBF                 movzx   ebx, [esp+97Ch+var_8CC]
.text:00407CC7                 mov     [esp+97Ch+var_924], ebx
.text:00407CCB                 jmp     short loc_407C63
.text:00407CCD ; ---------------------------------------------------------------------------
.text:00407CCD
.text:00407CCD loc_407CCD:                             ; CODE XREF: sub_406090+1BF7↑j
.text:00407CCD                                         ; sub_406090+1D92↓j
.text:00407CCD                 mov     edx, [esp+97Ch+Block]
.text:00407CD4                 mov     ebp, 3
.text:00407CD9                 mov     [esp+97Ch+Size], edx
.text:00407CDC                 jmp     loc_406633
.text:00407CE1 ; ---------------------------------------------------------------------------
.text:00407CE1
.text:00407CE1 loc_407CE1:                             ; CODE XREF: sub_406090+1B3B↑j
.text:00407CE1                 cmp     byte ptr [edi], 5Dh ; ']'
.text:00407CE4                 jnz     loc_407BD1
.text:00407CEA                 jmp     loc_407C1A
.text:00407CEF ; ---------------------------------------------------------------------------
.text:00407CEF
.text:00407CEF loc_407CEF:                             ; CODE XREF: sub_406090+1705↑j
.text:00407CEF                                         ; sub_406090+19C8↑j ...
.text:00407CEF                 mov     ebp, [esp+97Ch+Block]
.text:00407CF6                 mov     [esp+97Ch+Size], ebp
.text:00407CF9                 mov     ebp, 7
.text:00407CFE                 jmp     loc_406633
.text:00407D03 ; ---------------------------------------------------------------------------
.text:00407D03
.text:00407D03 loc_407D03:                             ; CODE XREF: sub_406090+1A7B↑j
.text:00407D03                 cmp     byte ptr [edi], 3Dh ; '='
.text:00407D06                 jnz     loc_407B11
.text:00407D0C                 cmp     edi, [esp+97Ch+var_8F4]
.text:00407D13                 mov     ebp, 0Eh
.text:00407D18                 jz      loc_4064A6
.text:00407D1E                 inc     edi
.text:00407D1F                 xor     ebx, ebx
.text:00407D21                 cmp     edi, [esp+97Ch+var_8F4]
.text:00407D28                 mov     [esp+97Ch+var_8D0], edi
.text:00407D2F                 jz      short loc_407CEF
.text:00407D31
.text:00407D31 loc_407D31:                             ; CODE XREF: sub_406090+1D17↓j
.text:00407D31                 movzx   eax, byte ptr [edi]
.text:00407D34                 inc     edi
.text:00407D35                 mov     esi, [esp+97Ch+var_8F8]
.text:00407D3C                 mov     [esp+97Ch+var_8D0], edi
.text:00407D43                 test    esi, esi
.text:00407D45                 mov     [esp+97Ch+var_8EC], al
.text:00407D4C                 jz      short loc_407D64
.text:00407D4E                 mov     esi, [esp+97Ch+var_8F8]
.text:00407D55                 movzx   ebp, al
.text:00407D58                 movzx   ecx, byte ptr [ebp+esi+0]
.text:00407D5D                 mov     [esp+97Ch+var_8EC], cl
.text:00407D64
.text:00407D64 loc_407D64:                             ; CODE XREF: sub_406090+1CBC↑j
.text:00407D64                 cmp     [esp+97Ch+var_8EC], 3Dh ; '='
.text:00407D6C                 jz      loc_407E68
.text:00407D72
.text:00407D72 loc_407D72:                             ; CODE XREF: sub_406090+1DDB↓j
.text:00407D72                 cmp     edi, [esp+97Ch+var_8F4]
.text:00407D79                 jz      short loc_407DBA
.text:00407D7B                 cmp     bl, 1
.text:00407D7E                 ja      short loc_407DB0
.text:00407D80                 movzx   edx, [esp+97Ch+var_8EC]
.text:00407D88                 movzx   edi, bl
.text:00407D8B                 inc     bl
.text:00407D8D                 mov     [esp+edi+97Ch+var_84C], dl
.text:00407D94                 mov     edi, [esp+97Ch+var_8D0]
.text:00407D9B
.text:00407D9B loc_407D9B:                             ; CODE XREF: sub_406090+1D28↓j
.text:00407D9B                 cmp     edi, [esp+97Ch+var_8F4]
.text:00407DA2                 mov     ebp, 0Eh
.text:00407DA7                 jnz     short loc_407D31
.text:00407DA9                 jmp     loc_4064A6
.text:00407DA9 ; ---------------------------------------------------------------------------
.text:00407DAE                 align 10h
.text:00407DB0
.text:00407DB0 loc_407DB0:                             ; CODE XREF: sub_406090+1CEE↑j
.text:00407DB0                 mov     [esp+97Ch+var_84C], 0
.text:00407DB8                 jmp     short loc_407D9B
.text:00407DBA ; ---------------------------------------------------------------------------
.text:00407DBA
.text:00407DBA loc_407DBA:                             ; CODE XREF: sub_406090+1CE9↑j
.text:00407DBA                                         ; sub_406090+1DE1↓j
.text:00407DBA                 xor     eax, eax
.text:00407DBC                 movzx   ecx, bl
.text:00407DBF                 mov     [esp+ecx+97Ch+var_84C], al
.text:00407DC6                 cmp     [esp+97Ch+var_8EC], 3Dh ; '='
.text:00407DCE                 jz      short loc_407E08
.text:00407DD0
.text:00407DD0 loc_407DD0:                             ; CODE XREF: sub_406090+1D82↓j
.text:00407DD0                                         ; sub_406090+1D8E↓j
.text:00407DD0                 cmp     bl, 0FFh
.text:00407DD3                 jz      short loc_407DEF
.text:00407DD5                 mov     eax, [esp+97Ch+var_8D0]
.text:00407DDC
.text:00407DDC loc_407DDC:                             ; CODE XREF: sub_406090+1D56↓j
.text:00407DDC                 dec     bl
.text:00407DDE                 lea     edi, [eax-1]
.text:00407DE1                 cmp     bl, 0FFh
.text:00407DE4                 mov     eax, edi
.text:00407DE6                 jnz     short loc_407DDC
.text:00407DE8                 mov     [esp+97Ch+var_8D0], edi
.text:00407DEF
.text:00407DEF loc_407DEF:                             ; CODE XREF: sub_406090+1D43↑j
.text:00407DEF                 mov     edi, [esp+97Ch+var_950]
.text:00407DF3                 or      byte ptr [edi+0Bh], 8
.text:00407DF7                 or      byte ptr [edi+7], 20h
.text:00407DFB                 mov     [esp+97Ch+var_924], 3Dh ; '='
.text:00407E03                 jmp     loc_407C63
.text:00407E08 ; ---------------------------------------------------------------------------
.text:00407E08
.text:00407E08 loc_407E08:                             ; CODE XREF: sub_406090+1D3E↑j
.text:00407E08                 mov     eax, [esp+97Ch+var_8D0]
.text:00407E0F                 cmp     byte ptr [eax], 5Dh ; ']'
.text:00407E12                 jnz     short loc_407DD0
.text:00407E14                 movzx   ecx, [esp+97Ch+var_84C]
.text:00407E1C                 test    cl, cl
.text:00407E1E                 jz      short loc_407DD0
.text:00407E20                 dec     bl
.text:00407E22                 jnz     loc_407CCD
.text:00407E28                 cmp     eax, [esp+97Ch+var_8F4]
.text:00407E2F                 mov     ebp, 0Eh
.text:00407E34                 jz      loc_4064A6
.text:00407E3A                 mov     dl, cl
.text:00407E3C                 mov     esi, [esp+97Ch+var_950]
.text:00407E40                 lea     ebp, [eax+1]
.text:00407E43                 mov     [esp+97Ch+var_8D0], ebp
.text:00407E4A                 shr     dl, 3
.text:00407E4D                 and     ecx, 7
.text:00407E50                 mov     ebx, 1
.text:00407E55                 movzx   ebp, dl
.text:00407E58                 shl     ebx, cl
.text:00407E5A                 or      [ebp+esi+0], bl
.text:00407E5E                 mov     [esp+97Ch+var_91E], 1
.text:00407E63                 jmp     loc_407A4A
.text:00407E68 ; ---------------------------------------------------------------------------
.text:00407E68
.text:00407E68 loc_407E68:                             ; CODE XREF: sub_406090+1CDC↑j
.text:00407E68                 cmp     byte ptr [edi], 5Dh ; ']'
.text:00407E6B                 jnz     loc_407D72
.text:00407E71                 jmp     loc_407DBA
.text:00407E76 ; ---------------------------------------------------------------------------
.text:00407E76
.text:00407E76 loc_407E76:                             ; CODE XREF: sub_406090+1A63↑j
.text:00407E76                 cmp     byte ptr [edi], 3Ah ; ':'
.text:00407E79                 jnz     loc_407AF9
.text:00407E7F                 cmp     edi, [esp+97Ch+var_8F4]
.text:00407E86                 mov     ebp, 0Eh
.text:00407E8B                 jz      loc_4064A6
.text:00407E91                 inc     edi
.text:00407E92                 xor     ebx, ebx
.text:00407E94                 cmp     edi, [esp+97Ch+var_8F4]
.text:00407E9B                 mov     [esp+97Ch+var_8D0], edi
.text:00407EA2                 jz      loc_407CEF
.text:00407EA8
.text:00407EA8 loc_407EA8:                             ; CODE XREF: sub_406090+1E89↓j
.text:00407EA8                 movzx   ecx, byte ptr [edi]
.text:00407EAB                 inc     edi
.text:00407EAC                 mov     ebp, [esp+97Ch+var_8F8]
.text:00407EB3                 mov     [esp+97Ch+var_8D0], edi
.text:00407EBA                 test    ebp, ebp
.text:00407EBC                 mov     [esp+97Ch+var_8EC], cl
.text:00407EC3                 jz      short loc_407EDB
.text:00407EC5                 movzx   ebp, cl
.text:00407EC8                 mov     ecx, [esp+97Ch+var_8F8]
.text:00407ECF                 movzx   edx, byte ptr [ebp+ecx+0]
.text:00407ED4                 mov     [esp+97Ch+var_8EC], dl
.text:00407EDB
.text:00407EDB loc_407EDB:                             ; CODE XREF: sub_406090+1E33↑j
.text:00407EDB                 cmp     [esp+97Ch+var_8EC], 3Ah ; ':'
.text:00407EE3                 jz      loc_408100
.text:00407EE9
.text:00407EE9 loc_407EE9:                             ; CODE XREF: sub_406090+2073↓j
.text:00407EE9                 cmp     edi, [esp+97Ch+var_8F4]
.text:00407EF0                 jz      short loc_407F20
.text:00407EF2                 movzx   eax, [esp+97Ch+var_8EC]
.text:00407EFA                 movzx   esi, bl
.text:00407EFD                 inc     bl
.text:00407EFF                 mov     ebp, 0Eh
.text:00407F04                 mov     [esp+esi+97Ch+name], al
.text:00407F0B                 mov     edi, [esp+97Ch+var_8D0]
.text:00407F12                 cmp     edi, [esp+97Ch+var_8F4]
.text:00407F19                 jnz     short loc_407EA8
.text:00407F1B                 jmp     loc_4064A6
.text:00407F20 ; ---------------------------------------------------------------------------
.text:00407F20
.text:00407F20 loc_407F20:                             ; CODE XREF: sub_406090+1E60↑j
.text:00407F20                                         ; sub_406090+2079↓j
.text:00407F20                 xor     eax, eax
.text:00407F22                 movzx   edi, bl
.text:00407F25                 mov     [esp+edi+97Ch+name], al
.text:00407F2C                 cmp     [esp+97Ch+var_8EC], 3Ah ; ':'
.text:00407F34                 jz      short loc_407F6E
.text:00407F36
.text:00407F36 loc_407F36:                             ; CODE XREF: sub_406090+1EE8↓j
.text:00407F36                 cmp     bl, 0FFh
.text:00407F39                 jz      short loc_407F55
.text:00407F3B                 mov     eax, [esp+97Ch+var_8D0]
.text:00407F42
.text:00407F42 loc_407F42:                             ; CODE XREF: sub_406090+1EBC↓j
.text:00407F42                 dec     bl
.text:00407F44                 lea     edi, [eax-1]
.text:00407F47                 cmp     bl, 0FFh
.text:00407F4A                 mov     eax, edi
.text:00407F4C                 jnz     short loc_407F42
.text:00407F4E                 mov     [esp+97Ch+var_8D0], edi
.text:00407F55
.text:00407F55 loc_407F55:                             ; CODE XREF: sub_406090+1EA9↑j
.text:00407F55                 mov     eax, [esp+97Ch+var_950]
.text:00407F59                 or      byte ptr [eax+0Bh], 8
.text:00407F5D                 or      byte ptr [eax+7], 4
.text:00407F61                 mov     [esp+97Ch+var_924], 3Ah ; ':'
.text:00407F69                 jmp     loc_407C63
.text:00407F6E ; ---------------------------------------------------------------------------
.text:00407F6E
.text:00407F6E loc_407F6E:                             ; CODE XREF: sub_406090+1EA4↑j
.text:00407F6E                 mov     esi, [esp+97Ch+var_8D0]
.text:00407F75                 cmp     byte ptr [esi], 5Dh ; ']'
.text:00407F78                 jnz     short loc_407F36
.text:00407F7A                 cld
.text:00407F7B                 mov     edi, offset aLower ; "lower"
.text:00407F80                 lea     ebx, [esp+97Ch+name]
.text:00407F87                 mov     esi, ebx
.text:00407F89                 mov     ecx, 6
.text:00407F8E                 lea     ebp, [esp+97Ch+name]
.text:00407F95                 repe cmpsb
.text:00407F97                 setz    [esp+97Ch+var_925]
.text:00407F9C                 mov     ecx, 6
.text:00407FA1                 mov     edi, offset aUpper ; "upper"
.text:00407FA6                 mov     esi, ebp
.text:00407FA8                 lea     edx, [esp+97Ch+name]
.text:00407FAF                 repe cmpsb
.text:00407FB1                 setz    [esp+97Ch+var_926]
.text:00407FB6                 mov     [esp+97Ch+Size], edx ; name
.text:00407FB9                 call    wctype
.text:00407FBE                 movzx   ebx, ax
.text:00407FC1                 test    bx, bx
.text:00407FC4                 mov     dword ptr [esp+97Ch+Type], ebx
.text:00407FC8                 jz      loc_4080EC
.text:00407FCE                 mov     eax, [esp+97Ch+var_8D0]
.text:00407FD5                 mov     ebp, 0Eh
.text:00407FDA                 cmp     eax, [esp+97Ch+var_8F4]
.text:00407FE1                 jz      loc_4064A6
.text:00407FE7                 lea     ecx, [eax+1]
.text:00407FEA                 cmp     ecx, [esp+97Ch+var_8F4]
.text:00407FF1                 mov     [esp+97Ch+var_8D0], ecx
.text:00407FF8                 jz      loc_407CEF
.text:00407FFE                 xor     edi, edi
.text:00408000
.text:00408000 loc_408000:                             ; CODE XREF: sub_406090+202E↓j
.text:00408000                 mov     [esp+97Ch+Size], edi ; Ch
.text:00408003                 call    btowc
.text:00408008                 mov     ebp, dword ptr [esp+97Ch+Type]
.text:0040800C                 movzx   esi, ax
.text:0040800F                 mov     [esp+97Ch+Size], esi ; C
.text:00408012                 mov     [esp+97Ch+var_978], ebp ; Type
.text:00408016                 call    iswctype
.text:0040801B                 test    eax, eax
.text:0040801D                 jz      short loc_40803C
.text:0040801F                 mov     ecx, edi
.text:00408021                 mov     ebx, edi
.text:00408023                 mov     edx, [esp+97Ch+var_950]
.text:00408027                 shr     cl, 3
.text:0040802A                 movzx   esi, cl
.text:0040802D                 mov     ecx, ebx
.text:0040802F                 and     ecx, 7
.text:00408032                 mov     ebx, 1
.text:00408037                 shl     ebx, cl
.text:00408039                 or      [esi+edx], bl
.text:0040803C
.text:0040803C loc_40803C:                             ; CODE XREF: sub_406090+1F8D↑j
.text:0040803C                 mov     eax, [esp+97Ch+var_8F8]
.text:00408043                 test    eax, eax
.text:00408045                 jz      short loc_4080B2
.text:00408047                 cmp     [esp+97Ch+var_926], 0
.text:0040804C                 jnz     short loc_408055
.text:0040804E                 cmp     [esp+97Ch+var_925], 0
.text:00408053                 jz      short loc_4080B2
.text:00408055
.text:00408055 loc_408055:                             ; CODE XREF: sub_406090+1FBC↑j
.text:00408055                 mov     ebp, ds:__mb_cur_max
.text:0040805B                 cmp     dword ptr [ebp+0], 1
.text:0040805F                 jz      short loc_4080DB
.text:00408061                 mov     [esp+97Ch+var_978], 1 ; Type
.text:00408069                 mov     [esp+97Ch+Size], edi ; C
.text:0040806C                 call    _isctype
.text:00408071
.text:00408071 loc_408071:                             ; CODE XREF: sub_406090+205A↓j
.text:00408071                 test    eax, eax
.text:00408073                 jnz     short loc_408094
.text:00408075                 mov     ebx, ds:__mb_cur_max
.text:0040807B                 cmp     dword ptr [ebx], 1
.text:0040807E                 jz      short loc_4080C9
.text:00408080                 mov     [esp+97Ch+var_978], 2 ; Type
.text:00408088                 mov     [esp+97Ch+Size], edi ; C
.text:0040808B                 call    _isctype
.text:00408090
.text:00408090 loc_408090:                             ; CODE XREF: sub_406090+2049↓j
.text:00408090                 test    eax, eax
.text:00408092                 jz      short loc_4080B2
.text:00408094
.text:00408094 loc_408094:                             ; CODE XREF: sub_406090+1FE3↑j
.text:00408094                 mov     ecx, edi
.text:00408096                 mov     ebx, edi
.text:00408098                 mov     edx, [esp+97Ch+var_950]
.text:0040809C                 shr     cl, 3
.text:0040809F                 movzx   ebp, cl
.text:004080A2                 mov     ecx, ebx
.text:004080A4                 and     ecx, 7
.text:004080A7                 mov     ebx, 1
.text:004080AC                 shl     ebx, cl
.text:004080AE                 or      [ebp+edx+0], bl
.text:004080B2
.text:004080B2 loc_4080B2:                             ; CODE XREF: sub_406090+1FB5↑j
.text:004080B2                                         ; sub_406090+1FC3↑j ...
.text:004080B2                 mov     [esp+97Ch+var_91E], 1
.text:004080B7                 inc     edi
.text:004080B8                 cmp     edi, 0FFh
.text:004080BE                 jle     loc_408000
.text:004080C4                 jmp     loc_407A4A
.text:004080C9 ; ---------------------------------------------------------------------------
.text:004080C9
.text:004080C9 loc_4080C9:                             ; CODE XREF: sub_406090+1FEE↑j
.text:004080C9                 mov     ebp, ds:_pctype
.text:004080CF                 mov     ecx, [ebp+0]
.text:004080D2                 movzx   eax, word ptr [ecx+edi*2]
.text:004080D6                 and     eax, 2
.text:004080D9                 jmp     short loc_408090
.text:004080DB ; ---------------------------------------------------------------------------
.text:004080DB
.text:004080DB loc_4080DB:                             ; CODE XREF: sub_406090+1FCF↑j
.text:004080DB                 mov     edx, ds:_pctype
.text:004080E1                 mov     esi, [edx]
.text:004080E3                 movzx   eax, word ptr [esi+edi*2]
.text:004080E7                 and     eax, 1
.text:004080EA                 jmp     short loc_408071
.text:004080EC ; ---------------------------------------------------------------------------
.text:004080EC
.text:004080EC loc_4080EC:                             ; CODE XREF: sub_406090+1F38↑j
.text:004080EC                 mov     ebx, [esp+97Ch+Block]
.text:004080F3                 mov     ebp, 4
.text:004080F8
.text:004080F8 loc_4080F8:                             ; CODE XREF: sub_406090+26A5↓j
.text:004080F8                 mov     [esp+97Ch+Size], ebx
.text:004080FB                 jmp     loc_406633
.text:00408100 ; ---------------------------------------------------------------------------
.text:00408100
.text:00408100 loc_408100:                             ; CODE XREF: sub_406090+1E53↑j
.text:00408100                 cmp     byte ptr [edi], 5Dh ; ']'
.text:00408103                 jnz     loc_407EE9
.text:00408109                 jmp     loc_407F20
.text:00408109 ; ---------------------------------------------------------------------------
.text:0040810E                 align 10h
.text:00408110
.text:00408110 loc_408110:                             ; CODE XREF: sub_406090+1A4B↑j
.text:00408110                 cmp     byte ptr [edi+1], 5Dh ; ']'
.text:00408114                 jz      loc_407AE1
.text:0040811A                 cmp     edi, [esp+97Ch+var_8F4]
.text:00408121                 mov     ebp, 0Eh
.text:00408126                 jz      loc_4064A6
.text:0040812C                 movzx   ebp, [esp+97Ch+var_8EC]
.text:00408134                 inc     edi
.text:00408135                 mov     ecx, [esp+97Ch+var_950]
.text:00408139                 mov     [esp+97Ch+var_8D0], edi
.text:00408140                 mov     edx, [esp+97Ch+arg_8]
.text:00408147                 lea     edi, [esp+97Ch+var_8D0]
.text:0040814E                 mov     [esp+97Ch+var_978], edi
.text:00408152                 mov     ebx, [esp+97Ch+var_8F8]
.text:00408159                 mov     eax, [esp+97Ch+var_8F4]
.text:00408160                 mov     [esp+97Ch+var_968], ecx
.text:00408164                 mov     [esp+97Ch+var_96C], edx
.text:00408168                 mov     [esp+97Ch+var_970], ebx
.text:0040816C                 mov     [esp+97Ch+var_974], eax
.text:00408170                 mov     [esp+97Ch+Size], ebp
.text:00408173
.text:00408173 loc_408173:                             ; CODE XREF: sub_406090+2193↓j
.text:00408173                 call    sub_403020
.text:00408178                 mov     [esp+97Ch+var_924], 0FFFFFFFFh
.text:00408180                 test    eax, eax
.text:00408182                 mov     ebx, eax
.text:00408184                 jz      loc_407A4A
.text:0040818A                 mov     esi, [esp+97Ch+Block]
.text:00408191                 mov     ebp, ebx
.text:00408193
.text:00408193 loc_408193:                             ; CODE XREF: sub_406090+318E↓j
.text:00408193                 mov     [esp+97Ch+Size], esi
.text:00408196                 jmp     loc_406633
.text:00408196 ; ---------------------------------------------------------------------------
.text:0040819B                 align 10h
.text:004081A0
.text:004081A0 loc_4081A0:                             ; CODE XREF: sub_406090+1A42↑j
.text:004081A0                 cmp     byte ptr [edi], 5Dh ; ']'
.text:004081A3                 jnz     loc_408233
.text:004081A9
.text:004081A9 loc_4081A9:                             ; CODE XREF: sub_406090+1A34↑j
.text:004081A9                 cmp     [esp+97Ch+var_8EC], 2Dh ; '-'
.text:004081B1                 jnz     loc_407AD8
.text:004081B7                 lea     esi, [edi-2]
.text:004081BA                 cmp     esi, [esp+97Ch+arg_0]
.text:004081C1                 jb      short loc_4081CD
.text:004081C3                 cmp     byte ptr [edi-2], 5Bh ; '['
.text:004081C7                 jz      loc_407AD8
.text:004081CD
.text:004081CD loc_4081CD:                             ; CODE XREF: sub_406090+2131↑j
.text:004081CD                 lea     ebp, [edi-3]
.text:004081D0                 cmp     ebp, [esp+97Ch+arg_0]
.text:004081D7                 jb      short loc_4081DF
.text:004081D9                 cmp     byte ptr [edi-3], 5Bh ; '['
.text:004081DD                 jz      short loc_408228
.text:004081DF
.text:004081DF loc_4081DF:                             ; CODE XREF: sub_406090+2147↑j
.text:004081DF                                         ; sub_406090+219C↓j
.text:004081DF                 cmp     byte ptr [edi], 5Dh ; ']'
.text:004081E2                 jz      loc_407AD8
.text:004081E8                 mov     esi, [esp+97Ch+var_950]
.text:004081EC                 lea     edi, [esp+97Ch+var_8D0]
.text:004081F3                 mov     ecx, [esp+97Ch+arg_8]
.text:004081FA                 mov     [esp+97Ch+var_978], edi
.text:004081FE                 mov     ebx, [esp+97Ch+var_8F8]
.text:00408205                 mov     edx, [esp+97Ch+var_8F4]
.text:0040820C                 mov     [esp+97Ch+var_968], esi
.text:00408210                 mov     eax, [esp+97Ch+var_924]
.text:00408214                 mov     [esp+97Ch+var_96C], ecx
.text:00408218                 mov     [esp+97Ch+var_970], ebx
.text:0040821C                 mov     [esp+97Ch+var_974], edx
.text:00408220                 mov     [esp+97Ch+Size], eax
.text:00408223                 jmp     loc_408173
.text:00408228 ; ---------------------------------------------------------------------------
.text:00408228
.text:00408228 loc_408228:                             ; CODE XREF: sub_406090+214D↑j
.text:00408228                 cmp     byte ptr [edi-2], 5Eh ; '^'
.text:0040822C                 jnz     short loc_4081DF
.text:0040822E                 jmp     loc_407AD8
.text:00408233 ; ---------------------------------------------------------------------------
.text:00408233
.text:00408233 loc_408233:                             ; CODE XREF: sub_406090+2113↑j
.text:00408233                 mov     ecx, [esp+97Ch+Block]
.text:0040823A                 mov     ebp, 0Bh
.text:0040823F                 jmp     loc_406F6C
.text:00408244 ; ---------------------------------------------------------------------------
.text:00408244
.text:00408244 loc_408244:                             ; CODE XREF: sub_406090+1A22↑j
.text:00408244                 mov     ebx, [esp+97Ch+var_8F0]
.text:0040824B                 mov     edi, [esp+97Ch+var_8D0]
.text:00408252                 inc     ebx
.text:00408253                 cmp     edi, ebx
.text:00408255                 jz      loc_407ABF
.text:0040825B
.text:0040825B loc_40825B:                             ; CODE XREF: sub_406090+21EA↓j
.text:0040825B                 mov     edi, [esp+97Ch+var_950]
.text:0040825F                 movzx   edx, byte ptr [edi-1]
.text:00408263                 test    dl, dl
.text:00408265                 jz      short loc_40827C
.text:00408267                 movzx   ebp, dl
.text:0040826A                 cmp     byte ptr [ebp+edi-1], 0
.text:0040826F                 jnz     short loc_40827C
.text:00408271                 mov     ebx, [esp+97Ch+var_950]
.text:00408275                 dec     dl
.text:00408277                 mov     [ebx-1], dl
.text:0040827A                 jmp     short loc_40825B
.text:0040827C ; ---------------------------------------------------------------------------
.text:0040827C
.text:0040827C loc_40827C:                             ; CODE XREF: sub_406090+21D5↑j
.text:0040827C                                         ; sub_406090+21DF↑j
.text:0040827C                 movzx   edi, dl
.text:0040827F                 add     [esp+97Ch+var_950], edi
.text:00408283                 jmp     loc_4064BF
.text:00408288 ; ---------------------------------------------------------------------------
.text:00408288
.text:00408288 loc_408288:                             ; CODE XREF: sub_406090+1A14↑j
.text:00408288                 cmp     edi, [esp+97Ch+var_8F4]
.text:0040828F                 jz      loc_407640
.text:00408295                 movzx   ebx, byte ptr [edx+1]
.text:00408299                 lea     ecx, [edx+2]
.text:0040829C                 mov     eax, [esp+97Ch+var_8F8]
.text:004082A3                 mov     [esp+97Ch+var_8D0], ecx
.text:004082AA                 test    eax, eax
.text:004082AC                 jz      short loc_4082BC
.text:004082AE                 mov     edx, [esp+97Ch+var_8F8]
.text:004082B5                 movzx   edi, bl
.text:004082B8                 movzx   ebx, byte ptr [edi+edx]
.text:004082BC
.text:004082BC loc_4082BC:                             ; CODE XREF: sub_406090+221C↑j
.text:004082BC                 mov     cl, bl
.text:004082BE                 mov     ebp, [esp+97Ch+var_950]
.text:004082C2                 mov     edx, 1
.text:004082C7                 shr     cl, 3
.text:004082CA                 movzx   esi, cl
.text:004082CD                 mov     ecx, ebx
.text:004082CF                 and     ecx, 7
.text:004082D2                 movzx   ebx, bl
.text:004082D5                 shl     edx, cl
.text:004082D7                 or      [esi+ebp], dl
.text:004082DA                 jmp     loc_407B59
.text:004082DF ; ---------------------------------------------------------------------------
.text:004082DF
.text:004082DF loc_4082DF:                             ; CODE XREF: sub_406090+19B4↑j
.text:004082DF                 test    [esp+97Ch+arg_8], 100h
.text:004082EA                 jz      loc_407A4A
.text:004082F0                 or      byte ptr [ebx+1], 4
.text:004082F4                 jmp     loc_407A4A
.text:004082F9 ; ---------------------------------------------------------------------------
.text:004082F9
.text:004082F9 loc_4082F9:                             ; CODE XREF: sub_406090+18B2↑j
.text:004082F9                 inc     edi
.text:004082FA                 mov     [esp+97Ch+var_8D0], edi
.text:00408301                 jmp     loc_407948
.text:00408306 ; ---------------------------------------------------------------------------
.text:00408306
.text:00408306 loc_408306:                             ; CODE XREF: sub_406090+16F↑j
.text:00408306                                         ; DATA XREF: sub_406090:jpt_4061FF↑o
.text:00408306                 mov     eax, [esp+97Ch+var_8D0] ; jumptable 004061FF case 92
.text:0040830D                 cmp     eax, [esp+97Ch+var_8F4]
.text:00408314                 jz      loc_407640
.text:0040831A                 movzx   ecx, byte ptr [eax]
.text:0040831D                 lea     ebx, [eax+1]
.text:00408320                 mov     [esp+97Ch+var_8D0], ebx
.text:00408327                 movzx   eax, cl
.text:0040832A                 sub     eax, 27h ; '''  ; switch 86 cases
.text:0040832D                 mov     [esp+97Ch+var_8EC], cl
.text:00408334                 cmp     eax, 55h
.text:00408337                 ja      def_40833D      ; jumptable 0040833D default case, cases 42,44-48,58,59,61,64,65,67-86,88-95,97,99-118,120-122
.text:0040833D                 jmp     ds:jpt_40833D[eax*4] ; switch jump
.text:0040833D ; ---------------------------------------------------------------------------
.text:00408344 jpt_40833D      dd offset loc_4084DB, offset loc_40849C, offset loc_4085AD
.text:00408344                                         ; DATA XREF: sub_406090+22AD↑r
.text:00408344                 dd offset def_40833D, offset loc_4088DE, offset def_40833D ; jump table for switch statement
.text:00408344                 dd offset def_40833D, offset def_40833D, offset def_40833D
.text:00408344                 dd offset def_40833D, offset loc_4085E3, offset loc_4085E3
.text:00408344                 dd offset loc_4085E3, offset loc_4085E3, offset loc_4085E3
.text:00408344                 dd offset loc_4085E3, offset loc_4085E3, offset loc_4085E3
.text:00408344                 dd offset loc_4085E3, offset def_40833D, offset def_40833D
.text:00408344                 dd offset loc_40873A, offset def_40833D, offset loc_40880C
.text:00408344                 dd offset loc_4088DE, offset def_40833D, offset def_40833D
.text:00408344                 dd offset loc_4088F1, offset def_40833D, offset def_40833D
.text:00408344                 dd offset def_40833D, offset def_40833D, offset def_40833D
.text:00408344                 dd offset def_40833D, offset def_40833D, offset def_40833D
.text:00408344                 dd offset def_40833D, offset def_40833D, offset def_40833D
.text:00408344                 dd offset def_40833D, offset def_40833D, offset def_40833D
.text:00408344                 dd offset def_40833D, offset def_40833D, offset def_40833D
.text:00408344                 dd offset def_40833D, offset def_40833D, offset def_40833D
.text:00408344                 dd offset loc_4089C3, offset def_40833D, offset def_40833D
.text:00408344                 dd offset def_40833D, offset def_40833D, offset def_40833D
.text:00408344                 dd offset def_40833D, offset def_40833D, offset def_40833D
.text:00408344                 dd offset loc_408AB6, offset def_40833D, offset loc_408B88
.text:00408344                 dd offset def_40833D, offset def_40833D, offset def_40833D
.text:00408344                 dd offset def_40833D, offset def_40833D, offset def_40833D
.text:00408344                 dd offset def_40833D, offset def_40833D, offset def_40833D
.text:00408344                 dd offset def_40833D, offset def_40833D, offset def_40833D
.text:00408344                 dd offset def_40833D, offset def_40833D, offset def_40833D
.text:00408344                 dd offset def_40833D, offset def_40833D, offset def_40833D
.text:00408344                 dd offset def_40833D, offset def_40833D, offset loc_408C5A
.text:00408344                 dd offset def_40833D, offset def_40833D, offset def_40833D
.text:00408344                 dd offset loc_408D4F, offset loc_4092F9
.text:0040849C ; ---------------------------------------------------------------------------
.text:0040849C
.text:0040849C loc_40849C:                             ; CODE XREF: sub_406090+22AD↑j
.text:0040849C                                         ; DATA XREF: sub_406090:jpt_40833D↑o
.text:0040849C                 test    [esp+97Ch+arg_8], 2000h ; jumptable 0040833D case 40
.text:004084A7                 jz      loc_406C4D
.text:004084AD
.text:004084AD def_40833D:                             ; CODE XREF: sub_406090+22A7↑j
.text:004084AD                                         ; sub_406090+22AD↑j ...
.text:004084AD                 mov     ebx, [esp+97Ch+var_8F8] ; jumptable 0040833D default case, cases 42,44-48,58,59,61,64,65,67-86,88-95,97,99-118,120-122
.text:004084B4                 test    ebx, ebx
.text:004084B6                 jz      def_4061FF      ; jumptable 004061FF default case, cases 11-35,37-39,44,45,47-62,64-90,93,95-122
.text:004084BC                 movzx   edi, [esp+97Ch+var_8EC]
.text:004084C4                 mov     esi, [esp+97Ch+var_8F8]
.text:004084CB                 movzx   ecx, byte ptr [edi+esi]
.text:004084CF                 mov     [esp+97Ch+var_8EC], cl
.text:004084D6                 jmp     def_4061FF      ; jumptable 004061FF default case, cases 11-35,37-39,44,45,47-62,64-90,93,95-122
.text:004084DB ; ---------------------------------------------------------------------------
.text:004084DB
.text:004084DB loc_4084DB:                             ; CODE XREF: sub_406090+22AD↑j
.text:004084DB                                         ; DATA XREF: sub_406090:jpt_40833D↑o
.text:004084DB                 test    [esp+97Ch+arg_8], 80000h ; jumptable 0040833D case 39
.text:004084E6                 jnz     def_4061FF      ; jumptable 004061FF default case, cases 11-35,37-39,44,45,47-62,64-90,93,95-122
.text:004084EC
.text:004084EC loc_4084EC:                             ; CODE XREF: sub_406090+24D2↓j
.text:004084EC                                         ; sub_406090+24FF↓j ...
.text:004084EC                 mov     eax, [esp+97Ch+arg_C]
.text:004084F3                 mov     ebp, [esp+97Ch+var_950]
.text:004084F7                 mov     edi, [eax]
.text:004084F9                 mov     edx, [eax+4]
.text:004084FC                 sub     ebp, edi
.text:004084FE                 inc     ebp
.text:004084FF                 cmp     ebp, edx
.text:00408501                 jbe     loc_4085A1
.text:00408507                 cmp     edx, 10000h
.text:0040850D                 mov     ebp, 0Fh
.text:00408512                 jz      loc_4064A6
.text:00408518                 lea     ebp, [edx+edx]
.text:0040851B                 mov     edx, [esp+97Ch+arg_C]
.text:00408522                 cmp     ebp, 10000h
.text:00408528                 mov     [edx+4], ebp
.text:0040852B                 jbe     short loc_408534
.text:0040852D                 mov     dword ptr [edx+4], 10000h
.text:00408534
.text:00408534 loc_408534:                             ; CODE XREF: sub_406090+249B↑j
.text:00408534                 mov     ebx, [esp+97Ch+arg_C]
.text:0040853B                 mov     ebp, 0Ch
.text:00408540                 mov     esi, [ebx+4]
.text:00408543                 mov     [esp+97Ch+Size], edi ; Block
.text:00408546                 mov     [esp+97Ch+var_978], esi ; Size
.text:0040854A                 call    realloc
.text:0040854F                 mov     edx, [esp+97Ch+arg_C]
.text:00408556                 test    eax, eax
.text:00408558                 mov     [edx], eax
.text:0040855A                 jz      loc_4064A6
.text:00408560                 cmp     edi, eax
.text:00408562                 jz      short loc_4084EC
.text:00408564                 sub     eax, edi
.text:00408566                 mov     edi, [esp+97Ch+var_908]
.text:0040856A                 add     [esp+97Ch+var_950], eax
.text:0040856E                 add     [esp+97Ch+var_904], eax
.text:00408572                 test    edi, edi
.text:00408574                 jz      short loc_40857A
.text:00408576                 add     [esp+97Ch+var_908], eax
.text:0040857A
.text:0040857A loc_40857A:                             ; CODE XREF: sub_406090+24E4↑j
.text:0040857A                 mov     ecx, [esp+97Ch+var_900]
.text:0040857E                 test    ecx, ecx
.text:00408580                 jz      short loc_408586
.text:00408582                 add     [esp+97Ch+var_900], eax
.text:00408586
.text:00408586 loc_408586:                             ; CODE XREF: sub_406090+24F0↑j
.text:00408586                 mov     edx, [esp+97Ch+var_8FC]
.text:0040858D                 test    edx, edx
.text:0040858F                 jz      loc_4084EC
.text:00408595                 add     [esp+97Ch+var_8FC], eax
.text:0040859C                 jmp     loc_4084EC
.text:004085A1 ; ---------------------------------------------------------------------------
.text:004085A1
.text:004085A1 loc_4085A1:                             ; CODE XREF: sub_406090+2471↑j
.text:004085A1                 mov     edi, [esp+97Ch+var_950]
.text:004085A5                 mov     byte ptr [edi], 0Ch
.text:004085A8                 jmp     loc_4064BA
.text:004085AD ; ---------------------------------------------------------------------------
.text:004085AD
.text:004085AD loc_4085AD:                             ; CODE XREF: sub_406090+22AD↑j
.text:004085AD                                         ; DATA XREF: sub_406090:jpt_40833D↑o
.text:004085AD                 test    [esp+97Ch+arg_8], 2000h ; jumptable 0040833D case 41
.text:004085B8                 jnz     def_40833D      ; jumptable 0040833D default case, cases 42,44-48,58,59,61,64,65,67-86,88-95,97,99-118,120-122
.text:004085BE                 mov     edi, [esp+97Ch+var_24]
.text:004085C5                 test    edi, edi
.text:004085C7                 jnz     loc_406E37
.text:004085CD                 test    [esp+97Ch+arg_8], 20000h
.text:004085D8                 jnz     def_40833D      ; jumptable 0040833D default case, cases 42,44-48,58,59,61,64,65,67-86,88-95,97,99-118,120-122
.text:004085DE                 jmp     loc_406F60
.text:004085E3 ; ---------------------------------------------------------------------------
.text:004085E3
.text:004085E3 loc_4085E3:                             ; CODE XREF: sub_406090+22AD↑j
.text:004085E3                                         ; DATA XREF: sub_406090:jpt_40833D↑o
.text:004085E3                 test    [esp+97Ch+arg_8], 4000h ; jumptable 0040833D cases 49-57
.text:004085EE                 jnz     def_4061FF      ; jumptable 004061FF default case, cases 11-35,37-39,44,45,47-62,64-90,93,95-122
.text:004085F4                 movzx   ebx, [esp+97Ch+var_8EC]
.text:004085FC                 sub     bl, 30h ; '0'
.text:004085FF                 movzx   eax, bl
.text:00408602                 cmp     eax, [esp+97Ch+var_90C]
.text:00408606                 ja      loc_408729
.text:0040860C                 mov     [esp+97Ch+var_970], eax
.text:00408610                 mov     ecx, [esp+97Ch+Block]
.text:00408617                 mov     edi, [esp+97Ch+var_28]
.text:0040861E                 mov     esi, [esp+97Ch+var_24]
.text:00408625                 mov     [esp+97Ch+Size], ecx
.text:00408628                 mov     [esp+97Ch+var_978], edi
.text:0040862C                 mov     [esp+97Ch+var_974], esi
.text:00408630                 call    sub_405A70
.text:00408635                 test    al, al
.text:00408637                 jnz     def_4061FF      ; jumptable 004061FF default case, cases 11-35,37-39,44,45,47-62,64-90,93,95-122
.text:0040863D                 mov     esi, [esp+97Ch+arg_C]
.text:00408644                 mov     ebp, [esp+97Ch+var_950]
.text:00408648                 mov     edi, [esi]
.text:0040864A                 mov     [esp+97Ch+var_900], ebp
.text:0040864E                 mov     edx, [esi+4]
.text:00408651                 sub     ebp, edi
.text:00408653                 mov     [esp+97Ch+var_940], edi
.text:00408657                 add     ebp, 2
.text:0040865A                 cmp     ebp, edx
.text:0040865C                 jbe     loc_40871A
.text:00408662
.text:00408662 loc_408662:                             ; CODE XREF: sub_406090+2684↓j
.text:00408662                 cmp     edx, 10000h
.text:00408668                 mov     ebp, 0Fh
.text:0040866D                 jz      loc_4064A6
.text:00408673                 mov     esi, [esp+97Ch+arg_C]
.text:0040867A                 lea     ecx, [edx+edx]
.text:0040867D                 cmp     ecx, 10000h
.text:00408683                 mov     [esi+4], ecx
.text:00408686                 jbe     short loc_40868F
.text:00408688                 mov     dword ptr [esi+4], 10000h
.text:0040868F
.text:0040868F loc_40868F:                             ; CODE XREF: sub_406090+25F6↑j
.text:0040868F                 mov     eax, [esp+97Ch+arg_C]
.text:00408696                 mov     ebp, [eax+4]
.text:00408699                 mov     [esp+97Ch+Size], edi ; Block
.text:0040869C                 mov     [esp+97Ch+var_978], ebp ; Size
.text:004086A0                 mov     ebp, 0Ch
.text:004086A5                 call    realloc
.text:004086AA                 mov     edx, [esp+97Ch+arg_C]
.text:004086B1                 test    eax, eax
.text:004086B3                 mov     [edx], eax
.text:004086B5                 jz      loc_4064A6
.text:004086BB                 cmp     [esp+97Ch+var_940], eax
.text:004086BF                 jz      short loc_4086F9
.text:004086C1                 mov     esi, [esp+97Ch+var_940]
.text:004086C5                 mov     edi, [esp+97Ch+var_908]
.text:004086C9                 sub     eax, esi
.text:004086CB                 add     [esp+97Ch+var_950], eax
.text:004086CF                 add     [esp+97Ch+var_904], eax
.text:004086D3                 test    edi, edi
.text:004086D5                 jz      short loc_4086DB
.text:004086D7                 add     [esp+97Ch+var_908], eax
.text:004086DB
.text:004086DB loc_4086DB:                             ; CODE XREF: sub_406090+2645↑j
.text:004086DB                 mov     edx, [esp+97Ch+var_900]
.text:004086DF                 test    edx, edx
.text:004086E1                 jz      short loc_4086E7
.text:004086E3                 add     [esp+97Ch+var_900], eax
.text:004086E7
.text:004086E7 loc_4086E7:                             ; CODE XREF: sub_406090+2651↑j
.text:004086E7                 mov     ecx, [esp+97Ch+var_8FC]
.text:004086EE                 test    ecx, ecx
.text:004086F0                 jz      short loc_4086F9
.text:004086F2                 add     [esp+97Ch+var_8FC], eax
.text:004086F9
.text:004086F9 loc_4086F9:                             ; CODE XREF: sub_406090+262F↑j
.text:004086F9                                         ; sub_406090+2660↑j
.text:004086F9                 mov     eax, [esp+97Ch+arg_C]
.text:00408700                 mov     ebp, [esp+97Ch+var_950]
.text:00408704                 mov     edi, [eax]
.text:00408706                 mov     edx, [eax+4]
.text:00408709                 sub     ebp, edi
.text:0040870B                 add     ebp, 2
.text:0040870E                 mov     [esp+97Ch+var_940], edi
.text:00408712                 cmp     ebp, edx
.text:00408714                 ja      loc_408662
.text:0040871A
.text:0040871A loc_40871A:                             ; CODE XREF: sub_406090+25CC↑j
.text:0040871A                 mov     edi, [esp+97Ch+var_950]
.text:0040871E                 mov     byte ptr [edi], 8
.text:00408721                 inc     edi
.text:00408722                 mov     [edi], bl
.text:00408724                 jmp     loc_4064BA
.text:00408729 ; ---------------------------------------------------------------------------
.text:00408729
.text:00408729 loc_408729:                             ; CODE XREF: sub_406090+2576↑j
.text:00408729                 mov     ebx, [esp+97Ch+Block]
.text:00408730                 mov     ebp, 6
.text:00408735                 jmp     loc_4080F8
.text:0040873A ; ---------------------------------------------------------------------------
.text:0040873A
.text:0040873A loc_40873A:                             ; CODE XREF: sub_406090+22AD↑j
.text:0040873A                                         ; DATA XREF: sub_406090:jpt_40833D↑o
.text:0040873A                 test    [esp+97Ch+arg_8], 80000h ; jumptable 0040833D case 60
.text:00408745                 jnz     def_4061FF      ; jumptable 004061FF default case, cases 11-35,37-39,44,45,47-62,64-90,93,95-122
.text:0040874B
.text:0040874B loc_40874B:                             ; CODE XREF: sub_406090+2731↓j
.text:0040874B                                         ; sub_406090+275E↓j ...
.text:0040874B                 mov     eax, [esp+97Ch+arg_C]
.text:00408752                 mov     ebx, [esp+97Ch+var_950]
.text:00408756                 mov     edi, [eax]
.text:00408758                 mov     edx, [eax+4]
.text:0040875B                 sub     ebx, edi
.text:0040875D                 inc     ebx
.text:0040875E                 cmp     ebx, edx
.text:00408760                 jbe     loc_408800
.text:00408766                 cmp     edx, 10000h
.text:0040876C                 mov     ebp, 0Fh
.text:00408771                 jz      loc_4064A6
.text:00408777                 lea     ebx, [edx+edx]
.text:0040877A                 mov     edx, [esp+97Ch+arg_C]
.text:00408781                 cmp     ebx, 10000h
.text:00408787                 mov     [edx+4], ebx
.text:0040878A                 jbe     short loc_408793
.text:0040878C                 mov     dword ptr [edx+4], 10000h
.text:00408793
.text:00408793 loc_408793:                             ; CODE XREF: sub_406090+26FA↑j
.text:00408793                 mov     ebp, [esp+97Ch+arg_C]
.text:0040879A                 mov     edx, [ebp+4]
.text:0040879D                 mov     ebp, 0Ch
.text:004087A2                 mov     [esp+97Ch+Size], edi ; Block
.text:004087A5                 mov     [esp+97Ch+var_978], edx ; Size
.text:004087A9                 call    realloc
.text:004087AE                 mov     ecx, [esp+97Ch+arg_C]
.text:004087B5                 test    eax, eax
.text:004087B7                 mov     [ecx], eax
.text:004087B9                 jz      loc_4064A6
.text:004087BF                 cmp     edi, eax
.text:004087C1                 jz      short loc_40874B
.text:004087C3                 mov     esi, [esp+97Ch+var_908]
.text:004087C7                 sub     eax, edi
.text:004087C9                 add     [esp+97Ch+var_950], eax
.text:004087CD                 add     [esp+97Ch+var_904], eax
.text:004087D1                 test    esi, esi
.text:004087D3                 jz      short loc_4087D9
.text:004087D5                 add     [esp+97Ch+var_908], eax
.text:004087D9
.text:004087D9 loc_4087D9:                             ; CODE XREF: sub_406090+2743↑j
.text:004087D9                 mov     edi, [esp+97Ch+var_900]
.text:004087DD                 test    edi, edi
.text:004087DF                 jz      short loc_4087E5
.text:004087E1                 add     [esp+97Ch+var_900], eax
.text:004087E5
.text:004087E5 loc_4087E5:                             ; CODE XREF: sub_406090+274F↑j
.text:004087E5                 mov     ecx, [esp+97Ch+var_8FC]
.text:004087EC                 test    ecx, ecx
.text:004087EE                 jz      loc_40874B
.text:004087F4                 add     [esp+97Ch+var_8FC], eax
.text:004087FB                 jmp     loc_40874B
.text:00408800 ; ---------------------------------------------------------------------------
.text:00408800
.text:00408800 loc_408800:                             ; CODE XREF: sub_406090+26D0↑j
.text:00408800                 mov     edi, [esp+97Ch+var_950]
.text:00408804                 mov     byte ptr [edi], 1Ah
.text:00408807                 jmp     loc_4064BA
.text:0040880C ; ---------------------------------------------------------------------------
.text:0040880C
.text:0040880C loc_40880C:                             ; CODE XREF: sub_406090+22AD↑j
.text:0040880C                                         ; DATA XREF: sub_406090:jpt_40833D↑o
.text:0040880C                 test    [esp+97Ch+arg_8], 80000h ; jumptable 0040833D case 62
.text:00408817                 jnz     def_4061FF      ; jumptable 004061FF default case, cases 11-35,37-39,44,45,47-62,64-90,93,95-122
.text:0040881D
.text:0040881D loc_40881D:                             ; CODE XREF: sub_406090+2803↓j
.text:0040881D                                         ; sub_406090+2830↓j ...
.text:0040881D                 mov     eax, [esp+97Ch+arg_C]
.text:00408824                 mov     ebp, [esp+97Ch+var_950]
.text:00408828                 mov     edi, [eax]
.text:0040882A                 mov     edx, [eax+4]
.text:0040882D                 sub     ebp, edi
.text:0040882F                 inc     ebp
.text:00408830                 cmp     ebp, edx
.text:00408832                 jbe     loc_4088D2
.text:00408838                 cmp     edx, 10000h
.text:0040883E                 mov     ebp, 0Fh
.text:00408843                 jz      loc_4064A6
.text:00408849                 lea     ebp, [edx+edx]
.text:0040884C                 mov     edx, [esp+97Ch+arg_C]
.text:00408853                 cmp     ebp, 10000h
.text:00408859                 mov     [edx+4], ebp
.text:0040885C                 jbe     short loc_408865
.text:0040885E                 mov     dword ptr [edx+4], 10000h
.text:00408865
.text:00408865 loc_408865:                             ; CODE XREF: sub_406090+27CC↑j
.text:00408865                 mov     ebx, [esp+97Ch+arg_C]
.text:0040886C                 mov     ebp, 0Ch
.text:00408871                 mov     esi, [ebx+4]
.text:00408874                 mov     [esp+97Ch+Size], edi ; Block
.text:00408877                 mov     [esp+97Ch+var_978], esi ; Size
.text:0040887B                 call    realloc
.text:00408880                 mov     edx, [esp+97Ch+arg_C]
.text:00408887                 test    eax, eax
.text:00408889                 mov     [edx], eax
.text:0040888B                 jz      loc_4064A6
.text:00408891                 cmp     edi, eax
.text:00408893                 jz      short loc_40881D
.text:00408895                 sub     eax, edi
.text:00408897                 mov     edi, [esp+97Ch+var_908]
.text:0040889B                 add     [esp+97Ch+var_950], eax
.text:0040889F                 add     [esp+97Ch+var_904], eax
.text:004088A3                 test    edi, edi
.text:004088A5                 jz      short loc_4088AB
.text:004088A7                 add     [esp+97Ch+var_908], eax
.text:004088AB
.text:004088AB loc_4088AB:                             ; CODE XREF: sub_406090+2815↑j
.text:004088AB                 mov     ecx, [esp+97Ch+var_900]
.text:004088AF                 test    ecx, ecx
.text:004088B1                 jz      short loc_4088B7
.text:004088B3                 add     [esp+97Ch+var_900], eax
.text:004088B7
.text:004088B7 loc_4088B7:                             ; CODE XREF: sub_406090+2821↑j
.text:004088B7                 mov     edx, [esp+97Ch+var_8FC]
.text:004088BE                 test    edx, edx
.text:004088C0                 jz      loc_40881D
.text:004088C6                 add     [esp+97Ch+var_8FC], eax
.text:004088CD                 jmp     loc_40881D
.text:004088D2 ; ---------------------------------------------------------------------------
.text:004088D2
.text:004088D2 loc_4088D2:                             ; CODE XREF: sub_406090+27A2↑j
.text:004088D2                 mov     edi, [esp+97Ch+var_950]
.text:004088D6                 mov     byte ptr [edi], 1Bh
.text:004088D9                 jmp     loc_4064BA
.text:004088DE ; ---------------------------------------------------------------------------
.text:004088DE
.text:004088DE loc_4088DE:                             ; CODE XREF: sub_406090+22AD↑j
.text:004088DE                                         ; DATA XREF: sub_406090:jpt_40833D↑o
.text:004088DE                 test    byte ptr [esp+97Ch+arg_8], 2 ; jumptable 0040833D cases 43,63
.text:004088E6                 jz      def_40833D      ; jumptable 0040833D default case, cases 42,44-48,58,59,61,64,65,67-86,88-95,97,99-118,120-122
.text:004088EC                 jmp     loc_4070F0      ; jumptable 004061FF case 42
.text:004088F1 ; ---------------------------------------------------------------------------
.text:004088F1
.text:004088F1 loc_4088F1:                             ; CODE XREF: sub_406090+22AD↑j
.text:004088F1                                         ; DATA XREF: sub_406090:jpt_40833D↑o
.text:004088F1                 test    [esp+97Ch+arg_8], 80000h ; jumptable 0040833D case 66
.text:004088FC                 jnz     def_4061FF      ; jumptable 004061FF default case, cases 11-35,37-39,44,45,47-62,64-90,93,95-122
.text:00408902
.text:00408902 loc_408902:                             ; CODE XREF: sub_406090+28E8↓j
.text:00408902                                         ; sub_406090+2915↓j ...
.text:00408902                 mov     eax, [esp+97Ch+arg_C]
.text:00408909                 mov     ebp, [esp+97Ch+var_950]
.text:0040890D                 mov     edi, [eax]
.text:0040890F                 mov     edx, [eax+4]
.text:00408912                 sub     ebp, edi
.text:00408914                 inc     ebp
.text:00408915                 cmp     ebp, edx
.text:00408917                 jbe     loc_4089B7
.text:0040891D                 cmp     edx, 10000h
.text:00408923                 mov     ebp, 0Fh
.text:00408928                 jz      loc_4064A6
.text:0040892E                 lea     ebx, [edx+edx]
.text:00408931                 mov     edx, [esp+97Ch+arg_C]
.text:00408938                 cmp     ebx, 10000h
.text:0040893E                 mov     [edx+4], ebx
.text:00408941                 jbe     short loc_40894A
.text:00408943                 mov     dword ptr [edx+4], 10000h
.text:0040894A
.text:0040894A loc_40894A:                             ; CODE XREF: sub_406090+28B1↑j
.text:0040894A                 mov     esi, [esp+97Ch+arg_C]
.text:00408951                 mov     ebp, [esi+4]
.text:00408954                 mov     [esp+97Ch+Size], edi ; Block
.text:00408957                 mov     [esp+97Ch+var_978], ebp ; Size
.text:0040895B                 mov     ebp, 0Ch
.text:00408960                 call    realloc
.text:00408965                 mov     edx, [esp+97Ch+arg_C]
.text:0040896C                 test    eax, eax
.text:0040896E                 mov     [edx], eax
.text:00408970                 jz      loc_4064A6
.text:00408976                 cmp     edi, eax
.text:00408978                 jz      short loc_408902
.text:0040897A                 sub     eax, edi
.text:0040897C                 mov     edi, [esp+97Ch+var_908]
.text:00408980                 add     [esp+97Ch+var_950], eax
.text:00408984                 add     [esp+97Ch+var_904], eax
.text:00408988                 test    edi, edi
.text:0040898A                 jz      short loc_408990
.text:0040898C                 add     [esp+97Ch+var_908], eax
.text:00408990
.text:00408990 loc_408990:                             ; CODE XREF: sub_406090+28FA↑j
.text:00408990                 mov     ecx, [esp+97Ch+var_900]
.text:00408994                 test    ecx, ecx
.text:00408996                 jz      short loc_40899C
.text:00408998                 add     [esp+97Ch+var_900], eax
.text:0040899C
.text:0040899C loc_40899C:                             ; CODE XREF: sub_406090+2906↑j
.text:0040899C                 mov     ebx, [esp+97Ch+var_8FC]
.text:004089A3                 test    ebx, ebx
.text:004089A5                 jz      loc_408902
.text:004089AB                 add     [esp+97Ch+var_8FC], eax
.text:004089B2                 jmp     loc_408902
.text:004089B7 ; ---------------------------------------------------------------------------
.text:004089B7
.text:004089B7 loc_4089B7:                             ; CODE XREF: sub_406090+2887↑j
.text:004089B7                 mov     edi, [esp+97Ch+var_950]
.text:004089BB                 mov     byte ptr [edi], 1Dh
.text:004089BE                 jmp     loc_4064BA
.text:004089C3 ; ---------------------------------------------------------------------------
.text:004089C3
.text:004089C3 loc_4089C3:                             ; CODE XREF: sub_406090+22AD↑j
.text:004089C3                                         ; DATA XREF: sub_406090:jpt_40833D↑o
.text:004089C3                 test    [esp+97Ch+arg_8], 80000h ; jumptable 0040833D case 87
.text:004089CE                 jnz     def_4061FF      ; jumptable 004061FF default case, cases 11-35,37-39,44,45,47-62,64-90,93,95-122
.text:004089D4                 mov     ecx, [esp+97Ch+arg_C]
.text:004089DB                 mov     esi, [esp+97Ch+var_950]
.text:004089DF                 mov     edi, [ecx]
.text:004089E1                 mov     [esp+97Ch+var_900], esi
.text:004089E5                 mov     edx, [ecx+4]
.text:004089E8                 sub     esi, edi
.text:004089EA                 inc     esi
.text:004089EB                 mov     ebx, edi
.text:004089ED                 cmp     esi, edx
.text:004089EF                 jbe     loc_408AAA
.text:004089F5
.text:004089F5 loc_4089F5:                             ; CODE XREF: sub_406090+2A14↓j
.text:004089F5                 cmp     edx, 10000h
.text:004089FB                 mov     ebp, 0Fh
.text:00408A00                 jz      loc_4064A6
.text:00408A06                 mov     esi, [esp+97Ch+arg_C]
.text:00408A0D                 lea     ebp, [edx+edx]
.text:00408A10                 cmp     ebp, 10000h
.text:00408A16                 mov     [esi+4], ebp
.text:00408A19                 jbe     short loc_408A22
.text:00408A1B                 mov     dword ptr [esi+4], 10000h
.text:00408A22
.text:00408A22 loc_408A22:                             ; CODE XREF: sub_406090+2989↑j
.text:00408A22                 mov     eax, [esp+97Ch+arg_C]
.text:00408A29                 mov     ebp, 0Ch
.text:00408A2E                 mov     esi, [eax+4]
.text:00408A31                 mov     [esp+97Ch+Size], edi ; Block
.text:00408A34                 mov     [esp+97Ch+var_978], esi ; Size
.text:00408A38                 call    realloc
.text:00408A3D                 mov     edi, [esp+97Ch+arg_C]
.text:00408A44                 test    eax, eax
.text:00408A46                 mov     [edi], eax
.text:00408A48                 jz      loc_4064A6
.text:00408A4E                 cmp     ebx, eax
.text:00408A50                 jz      short loc_408A86
.text:00408A52                 sub     eax, ebx
.text:00408A54                 mov     ebx, [esp+97Ch+var_908]
.text:00408A58                 add     [esp+97Ch+var_950], eax
.text:00408A5C                 add     [esp+97Ch+var_904], eax
.text:00408A60                 test    ebx, ebx
.text:00408A62                 jz      short loc_408A68
.text:00408A64                 add     [esp+97Ch+var_908], eax
.text:00408A68
.text:00408A68 loc_408A68:                             ; CODE XREF: sub_406090+29D2↑j
.text:00408A68                 mov     ecx, [esp+97Ch+var_900]
.text:00408A6C                 test    ecx, ecx
.text:00408A6E                 jz      short loc_408A74
.text:00408A70                 add     [esp+97Ch+var_900], eax
.text:00408A74
.text:00408A74 loc_408A74:                             ; CODE XREF: sub_406090+29DE↑j
.text:00408A74                 mov     edx, [esp+97Ch+var_8FC]
.text:00408A7B                 test    edx, edx
.text:00408A7D                 jz      short loc_408A86
.text:00408A7F                 add     [esp+97Ch+var_8FC], eax
.text:00408A86
.text:00408A86 loc_408A86:                             ; CODE XREF: sub_406090+29C0↑j
.text:00408A86                                         ; sub_406090+29ED↑j
.text:00408A86                 mov     esi, [esp+97Ch+arg_C]
.text:00408A8D                 mov     eax, [esp+97Ch+arg_C]
.text:00408A94                 mov     ebp, [esp+97Ch+var_950]
.text:00408A98                 mov     edi, [esi]
.text:00408A9A                 mov     edx, [eax+4]
.text:00408A9D                 sub     ebp, edi
.text:00408A9F                 inc     ebp
.text:00408AA0                 mov     ebx, edi
.text:00408AA2                 cmp     ebp, edx
.text:00408AA4                 ja      loc_4089F5
.text:00408AAA
.text:00408AAA loc_408AAA:                             ; CODE XREF: sub_406090+295F↑j
.text:00408AAA                 mov     edi, [esp+97Ch+var_950]
.text:00408AAE                 mov     byte ptr [edi], 19h
.text:00408AB1                 jmp     loc_4064BA
.text:00408AB6 ; ---------------------------------------------------------------------------
.text:00408AB6
.text:00408AB6 loc_408AB6:                             ; CODE XREF: sub_406090+22AD↑j
.text:00408AB6                                         ; DATA XREF: sub_406090:jpt_40833D↑o
.text:00408AB6                 test    [esp+97Ch+arg_8], 80000h ; jumptable 0040833D case 96
.text:00408AC1                 jnz     def_4061FF      ; jumptable 004061FF default case, cases 11-35,37-39,44,45,47-62,64-90,93,95-122
.text:00408AC7
.text:00408AC7 loc_408AC7:                             ; CODE XREF: sub_406090+2AAD↓j
.text:00408AC7                                         ; sub_406090+2ADA↓j ...
.text:00408AC7                 mov     eax, [esp+97Ch+arg_C]
.text:00408ACE                 mov     ebx, [esp+97Ch+var_950]
.text:00408AD2                 mov     edi, [eax]
.text:00408AD4                 mov     edx, [eax+4]
.text:00408AD7                 sub     ebx, edi
.text:00408AD9                 inc     ebx
.text:00408ADA                 cmp     ebx, edx
.text:00408ADC                 jbe     loc_408B7C
.text:00408AE2                 cmp     edx, 10000h
.text:00408AE8                 mov     ebp, 0Fh
.text:00408AED                 jz      loc_4064A6
.text:00408AF3                 lea     esi, [edx+edx]
.text:00408AF6                 mov     edx, [esp+97Ch+arg_C]
.text:00408AFD                 cmp     esi, 10000h
.text:00408B03                 mov     [edx+4], esi
.text:00408B06                 jbe     short loc_408B0F
.text:00408B08                 mov     dword ptr [edx+4], 10000h
.text:00408B0F
.text:00408B0F loc_408B0F:                             ; CODE XREF: sub_406090+2A76↑j
.text:00408B0F                 mov     ebp, [esp+97Ch+arg_C]
.text:00408B16                 mov     ebx, [ebp+4]
.text:00408B19                 mov     ebp, 0Ch
.text:00408B1E                 mov     [esp+97Ch+Size], edi ; Block
.text:00408B21                 mov     [esp+97Ch+var_978], ebx ; Size
.text:00408B25                 call    realloc
.text:00408B2A                 mov     edx, [esp+97Ch+arg_C]
.text:00408B31                 test    eax, eax
.text:00408B33                 mov     [edx], eax
.text:00408B35                 jz      loc_4064A6
.text:00408B3B                 cmp     edi, eax
.text:00408B3D                 jz      short loc_408AC7
.text:00408B3F                 mov     ecx, [esp+97Ch+var_908]
.text:00408B43                 sub     eax, edi
.text:00408B45                 add     [esp+97Ch+var_950], eax
.text:00408B49                 add     [esp+97Ch+var_904], eax
.text:00408B4D                 test    ecx, ecx
.text:00408B4F                 jz      short loc_408B55
.text:00408B51                 add     [esp+97Ch+var_908], eax
.text:00408B55
.text:00408B55 loc_408B55:                             ; CODE XREF: sub_406090+2ABF↑j
.text:00408B55                 mov     edi, [esp+97Ch+var_900]
.text:00408B59                 test    edi, edi
.text:00408B5B                 jz      short loc_408B61
.text:00408B5D                 add     [esp+97Ch+var_900], eax
.text:00408B61
.text:00408B61 loc_408B61:                             ; CODE XREF: sub_406090+2ACB↑j
.text:00408B61                 mov     esi, [esp+97Ch+var_8FC]
.text:00408B68                 test    esi, esi
.text:00408B6A                 jz      loc_408AC7
.text:00408B70                 add     [esp+97Ch+var_8FC], eax
.text:00408B77                 jmp     loc_408AC7
.text:00408B7C ; ---------------------------------------------------------------------------
.text:00408B7C
.text:00408B7C loc_408B7C:                             ; CODE XREF: sub_406090+2A4C↑j
.text:00408B7C                 mov     edi, [esp+97Ch+var_950]
.text:00408B80                 mov     byte ptr [edi], 0Bh
.text:00408B83                 jmp     loc_4064BA
.text:00408B88 ; ---------------------------------------------------------------------------
.text:00408B88
.text:00408B88 loc_408B88:                             ; CODE XREF: sub_406090+22AD↑j
.text:00408B88                                         ; DATA XREF: sub_406090:jpt_40833D↑o
.text:00408B88                 test    [esp+97Ch+arg_8], 80000h ; jumptable 0040833D case 98
.text:00408B93                 jnz     def_4061FF      ; jumptable 004061FF default case, cases 11-35,37-39,44,45,47-62,64-90,93,95-122
.text:00408B99
.text:00408B99 loc_408B99:                             ; CODE XREF: sub_406090+2B7F↓j
.text:00408B99                                         ; sub_406090+2BAC↓j ...
.text:00408B99                 mov     eax, [esp+97Ch+arg_C]
.text:00408BA0                 mov     ecx, [esp+97Ch+var_950]
.text:00408BA4                 mov     edi, [eax]
.text:00408BA6                 mov     edx, [eax+4]
.text:00408BA9                 sub     ecx, edi
.text:00408BAB                 inc     ecx
.text:00408BAC                 cmp     ecx, edx
.text:00408BAE                 jbe     loc_408C4E
.text:00408BB4                 cmp     edx, 10000h
.text:00408BBA                 mov     ebp, 0Fh
.text:00408BBF                 jz      loc_4064A6
.text:00408BC5                 lea     esi, [edx+edx]
.text:00408BC8                 mov     edx, [esp+97Ch+arg_C]
.text:00408BCF                 cmp     esi, 10000h
.text:00408BD5                 mov     [edx+4], esi
.text:00408BD8                 jbe     short loc_408BE1
.text:00408BDA                 mov     dword ptr [edx+4], 10000h
.text:00408BE1
.text:00408BE1 loc_408BE1:                             ; CODE XREF: sub_406090+2B48↑j
.text:00408BE1                 mov     edx, [esp+97Ch+arg_C]
.text:00408BE8                 mov     ebp, 0Ch
.text:00408BED                 mov     ebx, [edx+4]
.text:00408BF0                 mov     [esp+97Ch+Size], edi ; Block
.text:00408BF3                 mov     [esp+97Ch+var_978], ebx ; Size
.text:00408BF7                 call    realloc
.text:00408BFC                 mov     ecx, [esp+97Ch+arg_C]
.text:00408C03                 test    eax, eax
.text:00408C05                 mov     [ecx], eax
.text:00408C07                 jz      loc_4064A6
.text:00408C0D                 cmp     edi, eax
.text:00408C0F                 jz      short loc_408B99
.text:00408C11                 mov     ebp, [esp+97Ch+var_908]
.text:00408C15                 sub     eax, edi
.text:00408C17                 add     [esp+97Ch+var_950], eax
.text:00408C1B                 add     [esp+97Ch+var_904], eax
.text:00408C1F                 test    ebp, ebp
.text:00408C21                 jz      short loc_408C27
.text:00408C23                 add     [esp+97Ch+var_908], eax
.text:00408C27
.text:00408C27 loc_408C27:                             ; CODE XREF: sub_406090+2B91↑j
.text:00408C27                 mov     edi, [esp+97Ch+var_900]
.text:00408C2B                 test    edi, edi
.text:00408C2D                 jz      short loc_408C33
.text:00408C2F                 add     [esp+97Ch+var_900], eax
.text:00408C33
.text:00408C33 loc_408C33:                             ; CODE XREF: sub_406090+2B9D↑j
.text:00408C33                 mov     esi, [esp+97Ch+var_8FC]
.text:00408C3A                 test    esi, esi
.text:00408C3C                 jz      loc_408B99
.text:00408C42                 add     [esp+97Ch+var_8FC], eax
.text:00408C49                 jmp     loc_408B99
.text:00408C4E ; ---------------------------------------------------------------------------
.text:00408C4E
.text:00408C4E loc_408C4E:                             ; CODE XREF: sub_406090+2B1E↑j
.text:00408C4E                 mov     edi, [esp+97Ch+var_950]
.text:00408C52                 mov     byte ptr [edi], 1Ch
.text:00408C55                 jmp     loc_4064BA
.text:00408C5A ; ---------------------------------------------------------------------------
.text:00408C5A
.text:00408C5A loc_408C5A:                             ; CODE XREF: sub_406090+22AD↑j
.text:00408C5A                                         ; DATA XREF: sub_406090:jpt_40833D↑o
.text:00408C5A                 test    [esp+97Ch+arg_8], 80000h ; jumptable 0040833D case 119
.text:00408C65                 jnz     def_4061FF      ; jumptable 004061FF default case, cases 11-35,37-39,44,45,47-62,64-90,93,95-122
.text:00408C6B                 mov     eax, [esp+97Ch+arg_C]
.text:00408C72                 mov     ecx, [esp+97Ch+var_950]
.text:00408C76                 mov     edi, [eax]
.text:00408C78                 mov     [esp+97Ch+var_900], ecx
.text:00408C7C                 mov     esi, ecx
.text:00408C7E                 mov     edx, [eax+4]
.text:00408C81                 sub     esi, edi
.text:00408C83                 mov     ebx, edi
.text:00408C85                 inc     esi
.text:00408C86                 cmp     esi, edx
.text:00408C88                 jbe     loc_408D43
.text:00408C8E
.text:00408C8E loc_408C8E:                             ; CODE XREF: sub_406090+2CAD↓j
.text:00408C8E                 cmp     edx, 10000h
.text:00408C94                 mov     ebp, 0Fh
.text:00408C99                 jz      loc_4064A6
.text:00408C9F                 mov     esi, [esp+97Ch+arg_C]
.text:00408CA6                 lea     ebp, [edx+edx]
.text:00408CA9                 cmp     ebp, 10000h
.text:00408CAF                 mov     [esi+4], ebp
.text:00408CB2                 jbe     short loc_408CBB
.text:00408CB4                 mov     dword ptr [esi+4], 10000h
.text:00408CBB
.text:00408CBB loc_408CBB:                             ; CODE XREF: sub_406090+2C22↑j
.text:00408CBB                 mov     eax, [esp+97Ch+arg_C]
.text:00408CC2                 mov     ebp, 0Ch
.text:00408CC7                 mov     esi, [eax+4]
.text:00408CCA                 mov     [esp+97Ch+Size], edi ; Block
.text:00408CCD                 mov     [esp+97Ch+var_978], esi ; Size
.text:00408CD1                 call    realloc
.text:00408CD6                 mov     edx, [esp+97Ch+arg_C]
.text:00408CDD                 test    eax, eax
.text:00408CDF                 mov     [edx], eax
.text:00408CE1                 jz      loc_4064A6
.text:00408CE7                 cmp     ebx, eax
.text:00408CE9                 jz      short loc_408D1F
.text:00408CEB                 sub     eax, ebx
.text:00408CED                 mov     ebx, [esp+97Ch+var_908]
.text:00408CF1                 add     [esp+97Ch+var_950], eax
.text:00408CF5                 add     [esp+97Ch+var_904], eax
.text:00408CF9                 test    ebx, ebx
.text:00408CFB                 jz      short loc_408D01
.text:00408CFD                 add     [esp+97Ch+var_908], eax
.text:00408D01
.text:00408D01 loc_408D01:                             ; CODE XREF: sub_406090+2C6B↑j
.text:00408D01                 mov     edi, [esp+97Ch+var_900]
.text:00408D05                 test    edi, edi
.text:00408D07                 jz      short loc_408D0D
.text:00408D09                 add     [esp+97Ch+var_900], eax
.text:00408D0D
.text:00408D0D loc_408D0D:                             ; CODE XREF: sub_406090+2C77↑j
.text:00408D0D                 mov     ecx, [esp+97Ch+var_8FC]
.text:00408D14                 test    ecx, ecx
.text:00408D16                 jz      short loc_408D1F
.text:00408D18                 add     [esp+97Ch+var_8FC], eax
.text:00408D1F
.text:00408D1F loc_408D1F:                             ; CODE XREF: sub_406090+2C59↑j
.text:00408D1F                                         ; sub_406090+2C86↑j
.text:00408D1F                 mov     edx, [esp+97Ch+arg_C]
.text:00408D26                 mov     eax, [esp+97Ch+arg_C]
.text:00408D2D                 mov     ebp, [esp+97Ch+var_950]
.text:00408D31                 mov     edi, [edx]
.text:00408D33                 mov     edx, [eax+4]
.text:00408D36                 sub     ebp, edi
.text:00408D38                 inc     ebp
.text:00408D39                 mov     ebx, edi
.text:00408D3B                 cmp     ebp, edx
.text:00408D3D                 ja      loc_408C8E
.text:00408D43
.text:00408D43 loc_408D43:                             ; CODE XREF: sub_406090+2BF8↑j
.text:00408D43                 mov     edi, [esp+97Ch+var_950]
.text:00408D47                 mov     byte ptr [edi], 18h
.text:00408D4A                 jmp     loc_4064BA
.text:00408D4F ; ---------------------------------------------------------------------------
.text:00408D4F
.text:00408D4F loc_408D4F:                             ; CODE XREF: sub_406090+22AD↑j
.text:00408D4F                                         ; DATA XREF: sub_406090:jpt_40833D↑o
.text:00408D4F                 mov     ebx, [esp+97Ch+arg_8] ; jumptable 0040833D case 123
.text:00408D56                 and     ebx, 1200h
.text:00408D5C                 cmp     ebx, 200h
.text:00408D62                 jnz     def_40833D      ; jumptable 0040833D default case, cases 42,44-48,58,59,61,64,65,67-86,88-95,97,99-118,120-122
.text:00408D68
.text:00408D68 loc_408D68:                             ; CODE XREF: sub_406090+329D↓j
.text:00408D68                 mov     [esp+97Ch+var_934], 0FFFFFFFFh
.text:00408D70                 mov     edi, [esp+97Ch+var_8D0]
.text:00408D77                 cmp     edi, [esp+97Ch+var_8F4]
.text:00408D7E                 mov     [esp+97Ch+var_938], 0FFFFFFFFh
.text:00408D86                 mov     ecx, edi
.text:00408D88                 jz      loc_408E49
.text:00408D8E
.text:00408D8E loc_408D8E:                             ; CODE XREF: sub_406090+2D74↓j
.text:00408D8E                 movzx   eax, byte ptr [edi]
.text:00408D91                 inc     edi
.text:00408D92                 mov     ebp, [esp+97Ch+var_8F8]
.text:00408D99                 mov     [esp+97Ch+var_8D0], edi
.text:00408DA0                 test    ebp, ebp
.text:00408DA2                 mov     [esp+97Ch+var_8EC], al
.text:00408DA9                 jz      short loc_408DC0
.text:00408DAB                 mov     ebp, [esp+97Ch+var_8F8]
.text:00408DB2                 movzx   esi, al
.text:00408DB5                 movzx   ebx, byte ptr [esi+ebp]
.text:00408DB9                 mov     [esp+97Ch+var_8EC], bl
.text:00408DC0
.text:00408DC0 loc_408DC0:                             ; CODE XREF: sub_406090+2D19↑j
.text:00408DC0                 movzx   edx, [esp+97Ch+var_8EC]
.text:00408DC8                 sub     dl, 30h ; '0'
.text:00408DCB                 cmp     dl, 9
.text:00408DCE                 ja      short loc_408E06
.text:00408DD0                 cmp     [esp+97Ch+var_934], 7FFFh
.text:00408DD8                 jg      short loc_408DFD
.text:00408DDA                 movzx   ebp, [esp+97Ch+var_8EC]
.text:00408DE2                 mov     edx, [esp+97Ch+var_934]
.text:00408DE6                 shr     edx, 1Fh
.text:00408DE9                 dec     edx
.text:00408DEA                 and     [esp+97Ch+var_934], edx
.text:00408DEE                 mov     eax, [esp+97Ch+var_934]
.text:00408DF2                 lea     esi, [eax+eax*4]
.text:00408DF5                 lea     ebx, [ebp+esi*2-30h]
.text:00408DF9                 mov     [esp+97Ch+var_934], ebx
.text:00408DFD
.text:00408DFD loc_408DFD:                             ; CODE XREF: sub_406090+2D48↑j
.text:00408DFD                 cmp     edi, [esp+97Ch+var_8F4]
.text:00408E04                 jnz     short loc_408D8E
.text:00408E06
.text:00408E06 loc_408E06:                             ; CODE XREF: sub_406090+2D3E↑j
.text:00408E06                 cmp     [esp+97Ch+var_8EC], 2Ch ; ','
.text:00408E0E                 jz      loc_409254
.text:00408E14                 mov     ebx, [esp+97Ch+var_934]
.text:00408E18                 mov     [esp+97Ch+var_938], ebx
.text:00408E1C
.text:00408E1C loc_408E1C:                             ; CODE XREF: sub_406090+3256↓j
.text:00408E1C                                         ; sub_406090+3264↓j
.text:00408E1C                 mov     esi, [esp+97Ch+var_934]
.text:00408E20                 test    esi, esi
.text:00408E22                 js      short loc_408E49
.text:00408E24                 mov     ebp, [esp+97Ch+var_938]
.text:00408E28                 cmp     [esp+97Ch+var_934], ebp
.text:00408E2C                 jg      short loc_408E49
.text:00408E2E                 test    [esp+97Ch+arg_8], 1000h
.text:00408E39                 jnz     loc_408EEA
.text:00408E3F                 cmp     [esp+97Ch+var_8EC], 5Ch ; '\'
.text:00408E47                 jz      short loc_408EA6
.text:00408E49
.text:00408E49 loc_408E49:                             ; CODE XREF: sub_406090+2CF8↑j
.text:00408E49                                         ; sub_406090+2D92↑j ...
.text:00408E49                 test    [esp+97Ch+arg_8], 200000h
.text:00408E54                 jz      short loc_408E7B
.text:00408E56
.text:00408E56 loc_408E56:                             ; CODE XREF: sub_406090+31B1↓j
.text:00408E56                 test    [esp+97Ch+arg_8], 1000h
.text:00408E61                 mov     [esp+97Ch+var_8D0], ecx
.text:00408E68                 mov     [esp+97Ch+var_8EC], 7Bh ; '{'
.text:00408E70                 jz      def_40833D      ; jumptable 0040833D default case, cases 42,44-48,58,59,61,64,65,67-86,88-95,97,99-118,120-122
.text:00408E76                 jmp     def_4061FF      ; jumptable 004061FF default case, cases 11-35,37-39,44,45,47-62,64-90,93,95-122
.text:00408E7B ; ---------------------------------------------------------------------------
.text:00408E7B
.text:00408E7B loc_408E7B:                             ; CODE XREF: sub_406090+2DC4↑j
.text:00408E7B                 mov     edi, [esp+97Ch+Block]
.text:00408E82                 mov     [esp+97Ch+Size], edi ; Block
.text:00408E85                 call    free
.text:00408E8A                 mov     ebp, [esp+97Ch+var_8F4]
.text:00408E91                 cmp     [esp+97Ch+var_8D0], ebp
.text:00408E98                 setnz   cl
.text:00408E9B                 movzx   ebx, cl
.text:00408E9E                 lea     ebp, [ebx+9]
.text:00408EA1                 jmp     loc_4064A6
.text:00408EA6 ; ---------------------------------------------------------------------------
.text:00408EA6
.text:00408EA6 loc_408EA6:                             ; CODE XREF: sub_406090+2DB7↑j
.text:00408EA6                 mov     eax, [esp+97Ch+var_8D0]
.text:00408EAD                 cmp     eax, [esp+97Ch+var_8F4]
.text:00408EB4                 jz      short loc_408E49
.text:00408EB6                 movzx   edx, byte ptr [eax]
.text:00408EB9                 lea     ebx, [eax+1]
.text:00408EBC                 mov     eax, [esp+97Ch+var_8F8]
.text:00408EC3                 mov     [esp+97Ch+var_8D0], ebx
.text:00408ECA                 test    eax, eax
.text:00408ECC                 mov     [esp+97Ch+var_8EC], dl
.text:00408ED3                 jz      short loc_408EEA
.text:00408ED5                 mov     esi, [esp+97Ch+var_8F8]
.text:00408EDC                 movzx   edi, dl
.text:00408EDF                 movzx   edx, byte ptr [edi+esi]
.text:00408EE3                 mov     [esp+97Ch+var_8EC], dl
.text:00408EEA
.text:00408EEA loc_408EEA:                             ; CODE XREF: sub_406090+2DA9↑j
.text:00408EEA                                         ; sub_406090+2E43↑j
.text:00408EEA                 cmp     [esp+97Ch+var_8EC], 7Dh ; '}'
.text:00408EF2                 jnz     loc_408E49
.text:00408EF8                 mov     ebp, [esp+97Ch+var_900]
.text:00408EFC                 test    ebp, ebp
.text:00408EFE                 jz      loc_409223
.text:00408F04
.text:00408F04 loc_408F04:                             ; CODE XREF: sub_406090+31BF↓j
.text:00408F04                 cmp     [esp+97Ch+var_938], 7FFFh
.text:00408F0C                 jg      loc_409212
.text:00408F12                 mov     eax, [esp+97Ch+var_938]
.text:00408F16                 test    eax, eax
.text:00408F18                 jnz     loc_40902F
.text:00408F1E                 mov     edx, [esp+97Ch+arg_C]
.text:00408F25                 mov     ebp, [esp+97Ch+arg_C]
.text:00408F2C                 mov     esi, [esp+97Ch+var_950]
.text:00408F30                 mov     edi, [edx]
.text:00408F32                 mov     edx, [ebp+4]
.text:00408F35                 sub     esi, edi
.text:00408F37                 add     esi, 3
.text:00408F3A                 mov     ebx, edi
.text:00408F3C                 cmp     esi, edx
.text:00408F3E                 jbe     loc_408FFB
.text:00408F44
.text:00408F44 loc_408F44:                             ; CODE XREF: sub_406090+2F65↓j
.text:00408F44                 cmp     edx, 10000h
.text:00408F4A                 mov     ebp, 0Fh
.text:00408F4F                 jz      loc_4064A6
.text:00408F55                 mov     esi, [esp+97Ch+arg_C]
.text:00408F5C                 lea     ecx, [edx+edx]
.text:00408F5F                 cmp     ecx, 10000h
.text:00408F65                 mov     [esi+4], ecx
.text:00408F68                 jbe     short loc_408F71
.text:00408F6A                 mov     dword ptr [esi+4], 10000h
.text:00408F71
.text:00408F71 loc_408F71:                             ; CODE XREF: sub_406090+2ED8↑j
.text:00408F71                 mov     eax, [esp+97Ch+arg_C]
.text:00408F78                 mov     ebp, 0Ch
.text:00408F7D                 mov     esi, [eax+4]
.text:00408F80                 mov     [esp+97Ch+Size], edi ; Block
.text:00408F83                 mov     [esp+97Ch+var_978], esi ; Size
.text:00408F87                 call    realloc
.text:00408F8C                 mov     edi, [esp+97Ch+arg_C]
.text:00408F93                 test    eax, eax
.text:00408F95                 mov     [edi], eax
.text:00408F97                 jz      loc_4064A6
.text:00408F9D                 cmp     ebx, eax
.text:00408F9F                 jz      short loc_408FD5
.text:00408FA1                 sub     eax, ebx
.text:00408FA3                 mov     ebx, [esp+97Ch+var_908]
.text:00408FA7                 add     [esp+97Ch+var_950], eax
.text:00408FAB                 add     [esp+97Ch+var_904], eax
.text:00408FAF                 test    ebx, ebx
.text:00408FB1                 jz      short loc_408FB7
.text:00408FB3                 add     [esp+97Ch+var_908], eax
.text:00408FB7
.text:00408FB7 loc_408FB7:                             ; CODE XREF: sub_406090+2F21↑j
.text:00408FB7                 mov     edx, [esp+97Ch+var_900]
.text:00408FBB                 test    edx, edx
.text:00408FBD                 jz      short loc_408FC3
.text:00408FBF                 add     [esp+97Ch+var_900], eax
.text:00408FC3
.text:00408FC3 loc_408FC3:                             ; CODE XREF: sub_406090+2F2D↑j
.text:00408FC3                 mov     ebp, [esp+97Ch+var_8FC]
.text:00408FCA                 test    ebp, ebp
.text:00408FCC                 jz      short loc_408FD5
.text:00408FCE                 add     [esp+97Ch+var_8FC], eax
.text:00408FD5
.text:00408FD5 loc_408FD5:                             ; CODE XREF: sub_406090+2F0F↑j
.text:00408FD5                                         ; sub_406090+2F3C↑j
.text:00408FD5                 mov     esi, [esp+97Ch+arg_C]
.text:00408FDC                 mov     eax, [esp+97Ch+arg_C]
.text:00408FE3                 mov     ecx, [esp+97Ch+var_950]
.text:00408FE7                 mov     edi, [esi]
.text:00408FE9                 mov     edx, [eax+4]
.text:00408FEC                 sub     ecx, edi
.text:00408FEE                 add     ecx, 3
.text:00408FF1                 mov     ebx, edi
.text:00408FF3                 cmp     ecx, edx
.text:00408FF5                 ja      loc_408F44
.text:00408FFB
.text:00408FFB loc_408FFB:                             ; CODE XREF: sub_406090+2EAE↑j
.text:00408FFB                 mov     [esp+97Ch+Size], 0Dh
.text:00409002                 mov     ebx, [esp+97Ch+var_950]
.text:00409006                 mov     ebp, [esp+97Ch+var_900]
.text:0040900A                 mov     edi, [esp+97Ch+var_900]
.text:0040900E                 mov     edx, ebx
.text:00409010                 sub     edx, ebp
.text:00409012                 mov     [esp+97Ch+var_970], ebx
.text:00409016                 add     ebx, 3
.text:00409019                 mov     [esp+97Ch+var_974], edx
.text:0040901D                 mov     [esp+97Ch+var_978], edi
.text:00409021                 call    sub_402EB0
.text:00409026                 mov     [esp+97Ch+var_950], ebx
.text:0040902A                 jmp     loc_406DD8
.text:0040902F ; ---------------------------------------------------------------------------
.text:0040902F
.text:0040902F loc_40902F:                             ; CODE XREF: sub_406090+2E88↑j
.text:0040902F                 cmp     [esp+97Ch+var_938], 1
.text:00409034                 mov     [esp+97Ch+var_93C], 14h
.text:0040903C                 jg      loc_4090FA
.text:00409042                 mov     [esp+97Ch+var_93C], 0Ah
.text:0040904A                 mov     ecx, [esp+97Ch+arg_C]
.text:00409051                 mov     eax, [esp+97Ch+var_950]
.text:00409055                 mov     edi, [ecx]
.text:00409057                 mov     edx, [ecx+4]
.text:0040905A                 sub     eax, edi
.text:0040905C                 mov     ebx, edi
.text:0040905E                 add     eax, 0Ah
.text:00409061
.text:00409061 loc_409061:                             ; CODE XREF: sub_406090+308B↓j
.text:00409061                 cmp     eax, edx
.text:00409063                 jbe     loc_409120
.text:00409069                 cmp     edx, 10000h
.text:0040906F                 mov     ebp, 0Fh
.text:00409074                 jz      loc_4064A6
.text:0040907A                 mov     esi, [esp+97Ch+arg_C]
.text:00409081                 lea     ebp, [edx+edx]
.text:00409084                 cmp     ebp, 10000h
.text:0040908A                 mov     [esi+4], ebp
.text:0040908D                 jbe     short loc_409096
.text:0040908F                 mov     dword ptr [esi+4], 10000h
.text:00409096
.text:00409096 loc_409096:                             ; CODE XREF: sub_406090+2FFD↑j
.text:00409096                 mov     eax, [esp+97Ch+arg_C]
.text:0040909D                 mov     ebp, 0Ch
.text:004090A2                 mov     esi, [eax+4]
.text:004090A5                 mov     [esp+97Ch+Size], edi ; Block
.text:004090A8                 mov     [esp+97Ch+var_978], esi ; Size
.text:004090AC                 call    realloc
.text:004090B1                 mov     edi, [esp+97Ch+arg_C]
.text:004090B8                 test    eax, eax
.text:004090BA                 mov     [edi], eax
.text:004090BC                 jz      loc_4064A6
.text:004090C2                 cmp     ebx, eax
.text:004090C4                 jz      short loc_4090FA
.text:004090C6                 mov     edx, [esp+97Ch+var_908]
.text:004090CA                 sub     eax, ebx
.text:004090CC                 add     [esp+97Ch+var_950], eax
.text:004090D0                 add     [esp+97Ch+var_904], eax
.text:004090D4                 test    edx, edx
.text:004090D6                 jz      short loc_4090DC
.text:004090D8                 add     [esp+97Ch+var_908], eax
.text:004090DC
.text:004090DC loc_4090DC:                             ; CODE XREF: sub_406090+3046↑j
.text:004090DC                 mov     ebx, [esp+97Ch+var_900]
.text:004090E0                 test    ebx, ebx
.text:004090E2                 jz      short loc_4090E8
.text:004090E4                 add     [esp+97Ch+var_900], eax
.text:004090E8
.text:004090E8 loc_4090E8:                             ; CODE XREF: sub_406090+3052↑j
.text:004090E8                 mov     ecx, [esp+97Ch+var_8FC]
.text:004090EF                 test    ecx, ecx
.text:004090F1                 jz      short loc_4090FA
.text:004090F3                 add     [esp+97Ch+var_8FC], eax
.text:004090FA
.text:004090FA loc_4090FA:                             ; CODE XREF: sub_406090+2FAC↑j
.text:004090FA                                         ; sub_406090+3034↑j ...
.text:004090FA                 mov     eax, [esp+97Ch+arg_C]
.text:00409101                 mov     ebp, [esp+97Ch+arg_C]
.text:00409108                 mov     esi, [esp+97Ch+var_93C]
.text:0040910C                 mov     edi, [eax]
.text:0040910E                 mov     eax, [esp+97Ch+var_950]
.text:00409112                 mov     edx, [ebp+4]
.text:00409115                 mov     ebx, edi
.text:00409117                 sub     eax, edi
.text:00409119                 add     eax, esi
.text:0040911B                 jmp     loc_409061
.text:00409120 ; ---------------------------------------------------------------------------
.text:00409120
.text:00409120 loc_409120:                             ; CODE XREF: sub_406090+2FD3↑j
.text:00409120                 mov     edi, [esp+97Ch+var_950]
.text:00409124                 mov     edx, [esp+97Ch+var_934]
.text:00409128                 mov     [esp+97Ch+var_96C], edi
.text:0040912C                 add     edi, 5
.text:0040912F                 cmp     [esp+97Ch+var_938], 1
.text:00409134                 mov     [esp+97Ch+var_970], edx
.text:00409138                 jle     loc_409202
.text:0040913E                 mov     ebx, [esp+97Ch+var_900]
.text:00409142                 mov     eax, edi
.text:00409144                 sub     eax, ebx
.text:00409146                 add     eax, 2
.text:00409149
.text:00409149 loc_409149:                             ; CODE XREF: sub_406090+317D↓j
.text:00409149                 mov     [esp+97Ch+var_974], eax
.text:0040914D                 mov     esi, [esp+97Ch+var_900]
.text:00409151                 mov     [esp+97Ch+Size], 15h
.text:00409158                 mov     [esp+97Ch+var_978], esi
.text:0040915C                 call    sub_402EF0
.text:00409161                 mov     [esp+97Ch+var_950], edi
.text:00409165                 mov     ebp, [esp+97Ch+var_934]
.text:00409169                 mov     [esp+97Ch+var_96C], edi
.text:0040916D                 mov     edi, [esp+97Ch+var_900]
.text:00409171                 mov     [esp+97Ch+var_970], ebp
.text:00409175                 mov     [esp+97Ch+var_974], 5
.text:0040917D                 mov     [esp+97Ch+var_978], edi
.text:00409181                 mov     [esp+97Ch+Size], 17h
.text:00409188                 call    sub_402EF0
.text:0040918D                 add     [esp+97Ch+var_950], 5
.text:00409192                 cmp     [esp+97Ch+var_938], 1
.text:00409197                 jle     loc_406DD8
.text:0040919D                 mov     [esp+97Ch+Size], 16h
.text:004091A4                 mov     edx, [esp+97Ch+var_900]
.text:004091A8                 mov     esi, [esp+97Ch+var_950]
.text:004091AC                 mov     edi, [esp+97Ch+var_938]
.text:004091B0                 mov     ebp, [esp+97Ch+var_950]
.text:004091B4                 sub     edx, esi
.text:004091B6                 add     edx, 2
.text:004091B9                 dec     edi
.text:004091BA                 mov     [esp+97Ch+var_974], edx
.text:004091BE                 mov     [esp+97Ch+var_978], ebp
.text:004091C2                 add     ebp, 5
.text:004091C5                 mov     ebx, ebp
.text:004091C7                 mov     [esp+97Ch+var_970], edi
.text:004091CB                 call    sub_402E80
.text:004091D0                 mov     [esp+97Ch+var_96C], ebp
.text:004091D4                 mov     ecx, [esp+97Ch+var_900]
.text:004091D8                 add     ebp, 5
.text:004091DB                 mov     [esp+97Ch+var_970], edi
.text:004091DF                 mov     eax, [esp+97Ch+var_900]
.text:004091E3                 mov     [esp+97Ch+Size], 17h
.text:004091EA                 sub     ebx, ecx
.text:004091EC                 mov     [esp+97Ch+var_974], ebx
.text:004091F0                 mov     [esp+97Ch+var_978], eax
.text:004091F4                 call    sub_402EF0
.text:004091F9                 mov     [esp+97Ch+var_950], ebp
.text:004091FD                 jmp     loc_406DD8
.text:00409202 ; ---------------------------------------------------------------------------
.text:00409202
.text:00409202 loc_409202:                             ; CODE XREF: sub_406090+30A8↑j
.text:00409202                 mov     ecx, [esp+97Ch+var_900]
.text:00409206                 mov     eax, edi
.text:00409208                 sub     eax, ecx
.text:0040920A                 sub     eax, 3
.text:0040920D                 jmp     loc_409149
.text:00409212 ; ---------------------------------------------------------------------------
.text:00409212
.text:00409212 loc_409212:                             ; CODE XREF: sub_406090+2E7C↑j
.text:00409212                 mov     esi, [esp+97Ch+Block]
.text:00409219                 mov     ebp, 0Ah
.text:0040921E                 jmp     loc_408193
.text:00409223 ; ---------------------------------------------------------------------------
.text:00409223
.text:00409223 loc_409223:                             ; CODE XREF: sub_406090+2E6E↑j
.text:00409223                 mov     ebx, [esp+97Ch+arg_8]
.text:0040922A                 and     ebx, 200020h
.text:00409230                 cmp     ebx, 20h ; ' '
.text:00409233                 jz      loc_40766E
.text:00409239                 test    byte ptr [esp+97Ch+arg_8], 10h
.text:00409241                 jz      loc_408E56
.text:00409247                 mov     ecx, [esp+97Ch+var_950]
.text:0040924B                 mov     [esp+97Ch+var_900], ecx
.text:0040924F                 jmp     loc_408F04
.text:00409254 ; ---------------------------------------------------------------------------
.text:00409254
.text:00409254 loc_409254:                             ; CODE XREF: sub_406090+2D7E↑j
.text:00409254                 mov     edi, [esp+97Ch+var_8D0]
.text:0040925B                 cmp     edi, [esp+97Ch+var_8F4]
.text:00409262                 jz      loc_4092EC
.text:00409268
.text:00409268 loc_409268:                             ; CODE XREF: sub_406090+324E↓j
.text:00409268                 movzx   eax, byte ptr [edi]
.text:0040926B                 inc     edi
.text:0040926C                 mov     ebx, [esp+97Ch+var_8F8]
.text:00409273                 mov     [esp+97Ch+var_8D0], edi
.text:0040927A                 test    ebx, ebx
.text:0040927C                 mov     [esp+97Ch+var_8EC], al
.text:00409283                 jz      short loc_40929A
.text:00409285                 mov     ebp, [esp+97Ch+var_8F8]
.text:0040928C                 movzx   esi, al
.text:0040928F                 movzx   ebx, byte ptr [esi+ebp]
.text:00409293                 mov     [esp+97Ch+var_8EC], bl
.text:0040929A
.text:0040929A loc_40929A:                             ; CODE XREF: sub_406090+31F3↑j
.text:0040929A                 movzx   edx, [esp+97Ch+var_8EC]
.text:004092A2                 sub     dl, 30h ; '0'
.text:004092A5                 cmp     dl, 9
.text:004092A8                 ja      short loc_4092E0
.text:004092AA                 cmp     [esp+97Ch+var_938], 7FFFh
.text:004092B2                 jg      short loc_4092D7
.text:004092B4                 movzx   ebp, [esp+97Ch+var_8EC]
.text:004092BC                 mov     edx, [esp+97Ch+var_938]
.text:004092C0                 shr     edx, 1Fh
.text:004092C3                 dec     edx
.text:004092C4                 and     [esp+97Ch+var_938], edx
.text:004092C8                 mov     eax, [esp+97Ch+var_938]
.text:004092CC                 lea     esi, [eax+eax*4]
.text:004092CF                 lea     ebx, [ebp+esi*2-30h]
.text:004092D3                 mov     [esp+97Ch+var_938], ebx
.text:004092D7
.text:004092D7 loc_4092D7:                             ; CODE XREF: sub_406090+3222↑j
.text:004092D7                 cmp     edi, [esp+97Ch+var_8F4]
.text:004092DE                 jnz     short loc_409268
.text:004092E0
.text:004092E0 loc_4092E0:                             ; CODE XREF: sub_406090+3218↑j
.text:004092E0                 mov     edi, [esp+97Ch+var_938]
.text:004092E4                 test    edi, edi
.text:004092E6                 jns     loc_408E1C
.text:004092EC
.text:004092EC loc_4092EC:                             ; CODE XREF: sub_406090+31D2↑j
.text:004092EC                 mov     [esp+97Ch+var_938], 7FFFh
.text:004092F4                 jmp     loc_408E1C
.text:004092F9 ; ---------------------------------------------------------------------------
.text:004092F9
.text:004092F9 loc_4092F9:                             ; CODE XREF: sub_406090+22AD↑j
.text:004092F9                                         ; DATA XREF: sub_406090:jpt_40833D↑o
.text:004092F9                 mov     edi, [esp+97Ch+arg_8] ; jumptable 0040833D case 124
.text:00409300                 and     edi, 0FFFF8400h
.text:00409306                 test    di, di
.text:00409309                 jz      loc_406906
.text:0040930F                 jmp     def_40833D      ; jumptable 0040833D default case, cases 42,44-48,58,59,61,64,65,67-86,88-95,97,99-118,120-122
.text:00409314 ; ---------------------------------------------------------------------------
.text:00409314
.text:00409314 loc_409314:                             ; CODE XREF: sub_406090+16F↑j
.text:00409314                                         ; DATA XREF: sub_406090:jpt_4061FF↑o
.text:00409314                 mov     edx, [esp+97Ch+arg_8] ; jumptable 004061FF case 123
.text:0040931B                 and     edx, 1200h
.text:00409321                 cmp     edx, 1200h
.text:00409327                 jnz     def_4061FF      ; jumptable 004061FF default case, cases 11-35,37-39,44,45,47-62,64-90,93,95-122
.text:0040932D                 jmp     loc_408D68
.text:00409332 ; ---------------------------------------------------------------------------
.text:00409332
.text:00409332 loc_409332:                             ; CODE XREF: sub_406090+16F↑j
.text:00409332                                         ; DATA XREF: sub_406090:jpt_4061FF↑o
.text:00409332                 mov     esi, [esp+97Ch+arg_8] ; jumptable 004061FF case 124
.text:00409339                 and     esi, 0FFFF8000h
.text:0040933F                 test    si, si
.text:00409342                 jmp     loc_406900
.text:00409347 ; ---------------------------------------------------------------------------
.text:00409347
.text:00409347 loc_409347:                             ; CODE XREF: sub_406090+F9↑j
.text:00409347                 mov     edi, [esp+97Ch+Block]
.text:0040934E                 mov     ebp, 0Ch
.text:00409353                 jmp     loc_406630
.text:00409358 ; ---------------------------------------------------------------------------
.text:00409358
.text:00409358 loc_409358:                             ; CODE XREF: sub_406090+D6↑j
.text:00409358                 mov     [esp+97Ch+Size], 20h ; ' ' ; Size
.text:0040935F                 call    malloc
.text:00409364                 mov     ecx, [esp+97Ch+arg_C]
.text:0040936B                 mov     [ecx], eax
.text:0040936D                 jmp     loc_40617E
.text:00409372 ; ---------------------------------------------------------------------------
.text:00409372
.text:00409372 loc_409372:                             ; CODE XREF: sub_406090+CC↑j
.text:00409372                 mov     ebp, [esp+97Ch+arg_C]
.text:00409379                 mov     edi, [ebp+0]
.text:0040937C                 jmp     loc_40619D
.text:00409381 ; ---------------------------------------------------------------------------
.text:00409381
.text:00409381 loc_409381:                             ; CODE XREF: sub_406090+BA↑j
.text:00409381                 mov     [esp+97Ch+var_974], 100h ; Size
.text:00409389                 xor     ebx, ebx
.text:0040938B                 mov     [esp+97Ch+var_978], 0 ; Val
.text:00409393                 mov     [esp+97Ch+Size], offset byte_411140 ; void *
.text:0040939A                 call    memset
.text:0040939F                 nop
.text:004093A0
.text:004093A0 loc_4093A0:                             ; CODE XREF: sub_406090+333D↓j
.text:004093A0                 mov     esi, ds:__mb_cur_max
.text:004093A6                 cmp     dword ptr [esi], 1
.text:004093A9                 jz      short loc_4093E6
.text:004093AB                 mov     [esp+97Ch+var_978], 107h ; Type
.text:004093B3                 mov     [esp+97Ch+Size], ebx ; C
.text:004093B6                 call    _isctype
.text:004093BB
.text:004093BB loc_4093BB:                             ; CODE XREF: sub_406090+3368↓j
.text:004093BB                 test    eax, eax
.text:004093BD                 jz      short loc_4093C6
.text:004093BF                 mov     ds:byte_411140[ebx], 1
.text:004093C6
.text:004093C6 loc_4093C6:                             ; CODE XREF: sub_406090+332D↑j
.text:004093C6                 inc     ebx
.text:004093C7                 cmp     ebx, 0FFh
.text:004093CD                 jle     short loc_4093A0
.text:004093CF                 mov     ds:byte_41119F, 1
.text:004093D6                 mov     ebx, 1
.text:004093DB                 mov     ds:dword_411130, ebx
.text:004093E1                 jmp     loc_406150
.text:004093E6 ; ---------------------------------------------------------------------------
.text:004093E6
.text:004093E6 loc_4093E6:                             ; CODE XREF: sub_406090+3319↑j
.text:004093E6                 mov     ebp, ds:_pctype
.text:004093EC                 mov     edi, [ebp+0]
.text:004093EF                 movzx   eax, word ptr [edi+ebx*2]
.text:004093F3                 and     eax, 107h
.text:004093F8                 jmp     short loc_4093BB
.text:004093F8 sub_406090      endp
.text:004093F8
.text:004093F8 ; ---------------------------------------------------------------------------
.text:004093FA                 align 10h
.text:00409400
.text:00409400 ; =============== S U B R O U T I N E =======================================
.text:00409400
.text:00409400
.text:00409400 sub_409400      proc near               ; CODE XREF: .text:00405D45↑p
.text:00409400                                         ; sub_405E40+46↑p ...
.text:00409400
.text:00409400 var_4C          = dword ptr -4Ch
.text:00409400 var_48          = dword ptr -48h
.text:00409400 var_44          = dword ptr -44h
.text:00409400 var_40          = dword ptr -40h
.text:00409400 var_3C          = dword ptr -3Ch
.text:00409400 var_38          = dword ptr -38h
.text:00409400 var_34          = dword ptr -34h
.text:00409400 var_30          = dword ptr -30h
.text:00409400 var_20          = dword ptr -20h
.text:00409400 var_1C          = dword ptr -1Ch
.text:00409400 var_18          = dword ptr -18h
.text:00409400 var_14          = dword ptr -14h
.text:00409400 arg_0           = dword ptr  4
.text:00409400 arg_4           = dword ptr  8
.text:00409400 arg_8           = dword ptr  0Ch
.text:00409400 arg_C           = dword ptr  10h
.text:00409400 arg_10          = dword ptr  14h
.text:00409400 arg_14          = dword ptr  18h
.text:00409400 arg_18          = dword ptr  1Ch
.text:00409400 arg_1C          = dword ptr  20h
.text:00409400 arg_20          = dword ptr  24h
.text:00409400
.text:00409400                 push    ebp
.text:00409401                 push    edi
.text:00409402                 push    esi
.text:00409403                 push    ebx
.text:00409404                 sub     esp, 3Ch
.text:00409407                 mov     edi, [esp+4Ch+arg_0]
.text:0040940B                 mov     ebx, [esp+4Ch+arg_14]
.text:0040940F                 mov     ecx, [esp+4Ch+arg_10]
.text:00409413                 mov     edx, [edi+14h]
.text:00409416                 mov     esi, [esp+4Ch+arg_18]
.text:0040941A                 mov     ebp, [edi+10h]
.text:0040941D                 mov     [esp+4Ch+var_14], edx
.text:00409421                 mov     edx, [esp+4Ch+arg_8]
.text:00409425                 lea     eax, [esi+ebx]
.text:00409428                 add     edx, ecx
.text:0040942A                 test    ebx, ebx
.text:0040942C                 mov     [esp+4Ch+var_18], edx
.text:00409430                 js      loc_4095D0
.text:00409436                 cmp     ebx, edx
.text:00409438                 jg      loc_4095D0
.text:0040943E                 test    eax, eax
.text:00409440                 js      loc_409691
.text:00409446                 cmp     eax, [esp+4Ch+var_18]
.text:0040944A                 jle     short loc_409452
.text:0040944C                 mov     esi, [esp+4Ch+var_18]
.text:00409450                 sub     esi, ebx
.text:00409452
.text:00409452 loc_409452:                             ; CODE XREF: sub_409400+4A↑j
.text:00409452                                         ; sub_409400+295↓j
.text:00409452                 mov     eax, [edi+8]
.text:00409455                 test    eax, eax
.text:00409457                 jz      short loc_409480
.text:00409459                 test    esi, esi
.text:0040945B                 jle     short loc_409480
.text:0040945D                 mov     ecx, [edi]
.text:0040945F                 movzx   eax, byte ptr [ecx]
.text:00409462                 cmp     al, 0Bh
.text:00409464                 jz      loc_40967A
.text:0040946A                 cmp     al, 9
.text:0040946C                 jz      loc_409670
.text:00409472                 lea     esi, [esi+0]
.text:00409479                 lea     edi, [edi+0]
.text:00409480
.text:00409480 loc_409480:                             ; CODE XREF: sub_409400+57↑j
.text:00409480                                         ; sub_409400+5B↑j ...
.text:00409480                 test    ebp, ebp
.text:00409482                 jz      loc_409540
.text:00409488                 test    byte ptr [edi+1Ch], 8
.text:0040948C                 jz      loc_409655
.text:00409492
.text:00409492 loc_409492:                             ; CODE XREF: sub_409400+1AF↓j
.text:00409492                                         ; sub_409400+1B6↓j ...
.text:00409492                 test    ebp, ebp
.text:00409494                 jz      loc_409540
.text:0040949A                 cmp     ebx, [esp+4Ch+var_18]
.text:0040949E                 jge     loc_409540
.text:004094A4                 test    byte ptr [edi+1Ch], 1
.text:004094A8                 jnz     loc_409540
.text:004094AE                 test    esi, esi
.text:004094B0                 jle     loc_409604
.text:004094B6                 cmp     ebx, [esp+4Ch+arg_8]
.text:004094BA                 mov     [esp+4Ch+var_20], 0
.text:004094C2                 mov     [esp+4Ch+var_1C], esi
.text:004094C6                 jge     loc_4095F2
.text:004094CC                 lea     edx, [esi+ebx]
.text:004094CF                 cmp     edx, [esp+4Ch+arg_8]
.text:004094D3                 jl      short loc_4094E3
.text:004094D5                 mov     ecx, [esp+4Ch+arg_8]
.text:004094D9                 mov     edx, esi
.text:004094DB                 sub     ecx, ebx
.text:004094DD                 sub     edx, ecx
.text:004094DF                 mov     [esp+4Ch+var_20], edx
.text:004094E3
.text:004094E3 loc_4094E3:                             ; CODE XREF: sub_409400+D3↑j
.text:004094E3                 mov     edx, [esp+4Ch+arg_4]
.text:004094E7                 add     edx, ebx
.text:004094E9
.text:004094E9 loc_4094E9:                             ; CODE XREF: sub_409400+1FF↓j
.text:004094E9                 mov     ecx, [esp+4Ch+var_14]
.text:004094ED                 test    ecx, ecx
.text:004094EF                 jz      loc_4095D7
.text:004094F5                 cmp     esi, [esp+4Ch+var_20]
.text:004094F9                 jle     short loc_409529
.text:004094FB                 movzx   eax, byte ptr [edx]
.text:004094FE                 inc     edx
.text:004094FF                 mov     ecx, [esp+4Ch+var_14]
.text:00409503                 movzx   ecx, byte ptr [eax+ecx]
.text:00409507                 cmp     byte ptr [ecx+ebp], 0
.text:0040950B                 jnz     short loc_409529
.text:0040950D                 lea     esi, [esi+0]
.text:00409510
.text:00409510 loc_409510:                             ; CODE XREF: sub_409400+127↓j
.text:00409510                 dec     esi
.text:00409511                 cmp     esi, [esp+4Ch+var_20]
.text:00409515                 jle     short loc_409529
.text:00409517                 movzx   eax, byte ptr [edx]
.text:0040951A                 inc     edx
.text:0040951B                 mov     ecx, [esp+4Ch+var_14]
.text:0040951F                 movzx   eax, byte ptr [eax+ecx]
.text:00409523                 cmp     byte ptr [eax+ebp], 0
.text:00409527                 jz      short loc_409510
.text:00409529
.text:00409529 loc_409529:                             ; CODE XREF: sub_409400+F9↑j
.text:00409529                                         ; sub_409400+10B↑j ...
.text:00409529                 sub     [esp+4Ch+var_1C], esi
.text:0040952D                 mov     edx, [esp+4Ch+var_1C]
.text:00409531                 add     ebx, edx
.text:00409533                 lea     esi, [esi+0]
.text:00409539                 lea     edi, [edi+0]
.text:00409540
.text:00409540 loc_409540:                             ; CODE XREF: sub_409400+82↑j
.text:00409540                                         ; sub_409400+94↑j ...
.text:00409540                 test    esi, esi
.text:00409542                 js      short loc_40954A
.text:00409544                 cmp     ebx, [esp+4Ch+var_18]
.text:00409548                 jz      short loc_4095C0
.text:0040954A
.text:0040954A loc_40954A:                             ; CODE XREF: sub_409400+142↑j
.text:0040954A                                         ; sub_409400+1C2↓j ...
.text:0040954A                 mov     [esp+4Ch+var_38], ebx
.text:0040954E                 mov     edx, [esp+4Ch+arg_20]
.text:00409552                 mov     ecx, [esp+4Ch+arg_1C]
.text:00409556                 mov     [esp+4Ch+var_4C], edi
.text:00409559                 mov     eax, [esp+4Ch+arg_10]
.text:0040955D                 mov     [esp+4Ch+var_30], edx
.text:00409561                 mov     edx, [esp+4Ch+arg_C]
.text:00409565                 mov     [esp+4Ch+var_34], ecx
.text:00409569                 mov     ecx, [esp+4Ch+arg_8]
.text:0040956D                 mov     [esp+4Ch+var_3C], eax
.text:00409571                 mov     eax, [esp+4Ch+arg_4]
.text:00409575                 mov     [esp+4Ch+var_40], edx
.text:00409579                 mov     [esp+4Ch+var_44], ecx
.text:0040957D                 mov     [esp+4Ch+var_48], eax
.text:00409581                 call    sub_403180
.text:00409586                 test    eax, eax
.text:00409588                 mov     edx, ebx
.text:0040958A                 js      short loc_409596
.text:0040958C
.text:0040958C loc_40958C:                             ; CODE XREF: sub_409400+19E↓j
.text:0040958C                                         ; sub_409400+1A7↓j ...
.text:0040958C                 add     esp, 3Ch
.text:0040958F                 mov     eax, edx
.text:00409591                 pop     ebx
.text:00409592                 pop     esi
.text:00409593                 pop     edi
.text:00409594                 pop     ebp
.text:00409595                 retn
.text:00409596 ; ---------------------------------------------------------------------------
.text:00409596
.text:00409596 loc_409596:                             ; CODE XREF: sub_409400+18A↑j
.text:00409596                 cmp     eax, 0FFFFFFFEh
.text:00409599                 mov     edx, 0FFFFFFFEh
.text:0040959E                 jz      short loc_40958C
.text:004095A0
.text:004095A0 loc_4095A0:                             ; CODE XREF: sub_409400+241↓j
.text:004095A0                 test    esi, esi
.text:004095A2                 mov     edx, 0FFFFFFFFh
.text:004095A7                 jz      short loc_40958C
.text:004095A9                 test    esi, esi
.text:004095AB                 jle     short loc_4095B4
.text:004095AD                 dec     esi
.text:004095AE                 inc     ebx
.text:004095AF                 jmp     loc_409492
.text:004095B4 ; ---------------------------------------------------------------------------
.text:004095B4
.text:004095B4 loc_4095B4:                             ; CODE XREF: sub_409400+1AB↑j
.text:004095B4                 inc     esi
.text:004095B5                 dec     ebx
.text:004095B6                 jmp     loc_409492
.text:004095B6 ; ---------------------------------------------------------------------------
.text:004095BB                 align 10h
.text:004095C0
.text:004095C0 loc_4095C0:                             ; CODE XREF: sub_409400+148↑j
.text:004095C0                 test    ebp, ebp
.text:004095C2                 jz      short loc_40954A
.text:004095C4                 test    byte ptr [edi+1Ch], 1
.text:004095C8                 jnz     short loc_40954A
.text:004095CA                 lea     esi, [esi+0]
.text:004095D0
.text:004095D0 loc_4095D0:                             ; CODE XREF: sub_409400+30↑j
.text:004095D0                                         ; sub_409400+38↑j
.text:004095D0                 mov     edx, 0FFFFFFFFh
.text:004095D5                 jmp     short loc_40958C
.text:004095D7 ; ---------------------------------------------------------------------------
.text:004095D7
.text:004095D7 loc_4095D7:                             ; CODE XREF: sub_409400+EF↑j
.text:004095D7                                         ; sub_409400+1F0↓j
.text:004095D7                 cmp     esi, [esp+4Ch+var_20]
.text:004095DB                 jle     loc_409529
.text:004095E1                 movzx   ecx, byte ptr [edx]
.text:004095E4                 inc     edx
.text:004095E5                 cmp     byte ptr [ecx+ebp], 0
.text:004095E9                 jnz     loc_409529
.text:004095EF                 dec     esi
.text:004095F0                 jmp     short loc_4095D7
.text:004095F2 ; ---------------------------------------------------------------------------
.text:004095F2
.text:004095F2 loc_4095F2:                             ; CODE XREF: sub_409400+C6↑j
.text:004095F2                 mov     ecx, [esp+4Ch+arg_C]
.text:004095F6                 mov     eax, [esp+4Ch+arg_8]
.text:004095FA                 sub     ecx, eax
.text:004095FC                 lea     edx, [ebx+ecx]
.text:004095FF                 jmp     loc_4094E9
.text:00409604 ; ---------------------------------------------------------------------------
.text:00409604
.text:00409604 loc_409604:                             ; CODE XREF: sub_409400+B0↑j
.text:00409604                 mov     ecx, [esp+4Ch+arg_8]
.text:00409608                 test    ecx, ecx
.text:0040960A                 jz      short loc_409612
.text:0040960C                 cmp     ebx, [esp+4Ch+arg_8]
.text:00409610                 jl      short loc_40964B
.text:00409612
.text:00409612 loc_409612:                             ; CODE XREF: sub_409400+20A↑j
.text:00409612                 mov     edx, [esp+4Ch+arg_8]
.text:00409616                 mov     eax, ebx
.text:00409618                 mov     ecx, [esp+4Ch+arg_C]
.text:0040961C                 sub     eax, edx
.text:0040961E                 movzx   eax, byte ptr [eax+ecx]
.text:00409622
.text:00409622 loc_409622:                             ; CODE XREF: sub_409400+253↓j
.text:00409622                 mov     ecx, [esp+4Ch+var_14]
.text:00409626                 test    ecx, ecx
.text:00409628                 jz      short loc_409646
.text:0040962A                 mov     edx, [esp+4Ch+var_14]
.text:0040962E                 movzx   ecx, al
.text:00409631                 movzx   eax, byte ptr [ecx+edx]
.text:00409635
.text:00409635 loc_409635:                             ; CODE XREF: sub_409400+249↓j
.text:00409635                 lea     edx, [eax+ebp]
.text:00409638                 cmp     byte ptr [edx], 0
.text:0040963B                 jnz     loc_409540
.text:00409641                 jmp     loc_4095A0
.text:00409646 ; ---------------------------------------------------------------------------
.text:00409646
.text:00409646 loc_409646:                             ; CODE XREF: sub_409400+228↑j
.text:00409646                 movzx   eax, al
.text:00409649                 jmp     short loc_409635
.text:0040964B ; ---------------------------------------------------------------------------
.text:0040964B
.text:0040964B loc_40964B:                             ; CODE XREF: sub_409400+210↑j
.text:0040964B                 mov     edx, [esp+4Ch+arg_4]
.text:0040964F                 movzx   eax, byte ptr [ebx+edx]
.text:00409653                 jmp     short loc_409622
.text:00409655 ; ---------------------------------------------------------------------------
.text:00409655
.text:00409655 loc_409655:                             ; CODE XREF: sub_409400+8C↑j
.text:00409655                 mov     [esp+4Ch+var_4C], edi
.text:00409658                 call    sub_405AB0
.text:0040965D                 cmp     eax, 0FFFFFFFEh
.text:00409660                 mov     edx, 0FFFFFFFEh
.text:00409665                 jnz     loc_409492
.text:0040966B                 jmp     loc_40958C
.text:00409670 ; ---------------------------------------------------------------------------
.text:00409670
.text:00409670 loc_409670:                             ; CODE XREF: sub_409400+6C↑j
.text:00409670                 test    byte ptr [edi+1Ch], 80h
.text:00409674                 jnz     loc_409480
.text:0040967A
.text:0040967A loc_40967A:                             ; CODE XREF: sub_409400+64↑j
.text:0040967A                 test    ebx, ebx
.text:0040967C                 mov     edx, 0FFFFFFFFh
.text:00409681                 jg      loc_40958C
.text:00409687                 mov     esi, 1
.text:0040968C                 jmp     loc_409480
.text:00409691 ; ---------------------------------------------------------------------------
.text:00409691
.text:00409691 loc_409691:                             ; CODE XREF: sub_409400+40↑j
.text:00409691                 mov     esi, ebx
.text:00409693                 neg     esi
.text:00409695                 jmp     loc_409452
.text:00409695 sub_409400      endp
.text:00409695
.text:00409695 ; ---------------------------------------------------------------------------
.text:0040969A                 align 10h
.text:004096A0
.text:004096A0 ; =============== S U B R O U T I N E =======================================
.text:004096A0
.text:004096A0
.text:004096A0 sub_4096A0      proc near               ; CODE XREF: sub_405AB0↑j
.text:004096A0
.text:004096A0 Size            = dword ptr -6Ch
.text:004096A0 Val             = dword ptr -68h
.text:004096A0 var_64          = dword ptr -64h
.text:004096A0 var_4D          = byte ptr -4Dh
.text:004096A0 var_4C          = byte ptr -4Ch
.text:004096A0 var_30          = dword ptr -30h
.text:004096A0 Src             = dword ptr -2Ch
.text:004096A0 var_28          = dword ptr -28h
.text:004096A0 var_24          = dword ptr -24h
.text:004096A0 arg_0           = dword ptr  4
.text:004096A0
.text:004096A0                 push    ebp
.text:004096A1                 push    edi
.text:004096A2                 push    esi
.text:004096A3                 push    ebx
.text:004096A4                 sub     esp, 5Ch
.text:004096A7                 mov     ebp, [esp+6Ch+arg_0]
.text:004096AB                 mov     [esp+6Ch+var_4C], 1
.text:004096B0                 mov     [esp+6Ch+var_4D], 0
.text:004096B5                 mov     ecx, [ebp+0]
.text:004096B8                 mov     eax, [ebp+8]
.text:004096BB                 mov     esi, [ebp+10h]
.text:004096BE                 mov     edi, ecx
.text:004096C0                 add     eax, ecx
.text:004096C2                 mov     [esp+6Ch+var_30], eax
.text:004096C6                 mov     [esp+6Ch+Size], 14h ; Size
.text:004096CD                 call    malloc
.text:004096D2                 mov     [esp+6Ch+Src], eax
.text:004096D6                 test    eax, eax
.text:004096D8                 mov     edx, 0FFFFFFFEh
.text:004096DD                 jz      loc_4097C2
.text:004096E3                 mov     [esp+6Ch+var_28], 5
.text:004096EB                 mov     [esp+6Ch+var_24], 0
.text:004096F3                 mov     [esp+6Ch+var_64], 100h ; Size
.text:004096FB                 mov     [esp+6Ch+Val], 0 ; Val
.text:00409703                 mov     [esp+6Ch+Size], esi ; void *
.text:00409706                 call    memset
.text:0040970B                 movzx   edx, byte ptr [ebp+1Ch]
.text:0040970F                 or      dl, 8
.text:00409712                 and     dl, 0FEh
.text:00409715                 mov     [ebp+1Ch], dl
.text:00409718
.text:00409718 loc_409718:                             ; CODE XREF: sub_4096A0+9A↓j
.text:00409718                                         ; sub_4096A0+13D↓j ...
.text:00409718                 cmp     edi, [esp+6Ch+var_30] ; jumptable 0040973A cases 0,9-12,20,26-29
.text:0040971C                 jz      loc_409A20
.text:00409722                 movzx   eax, byte ptr [edi]
.text:00409725                 cmp     al, 1
.text:00409727                 jz      loc_409A20
.text:0040972D                 movzx   eax, al
.text:00409730                 inc     edi
.text:00409731                 cmp     eax, 1Dh        ; switch 30 cases
.text:00409734                 ja      def_40973A      ; jumptable 0040973A default case, case 1
.text:0040973A                 jmp     ds:jpt_40973A[eax*4] ; switch jump
.text:0040973A ; ---------------------------------------------------------------------------
.text:00409741                 align 4
.text:00409744 jpt_40973A      dd offset loc_409718    ; DATA XREF: sub_4096A0+9A↑r
.text:00409744                 dd offset def_40973A    ; jump table for switch statement
.text:00409744                 dd offset loc_4097CC
.text:00409744                 dd offset loc_4097E2
.text:00409744                 dd offset loc_409810
.text:00409744                 dd offset loc_409848
.text:00409744                 dd offset loc_4098AC
.text:00409744                 dd offset loc_4098AC
.text:00409744                 dd offset loc_4097BC
.text:00409744                 dd offset loc_409718
.text:00409744                 dd offset loc_409718
.text:00409744                 dd offset loc_409718
.text:00409744                 dd offset loc_409718
.text:00409744                 dd offset loc_409975
.text:00409744                 dd offset loc_409975
.text:00409744                 dd offset loc_4098B4
.text:00409744                 dd offset loc_4098B4
.text:00409744                 dd offset loc_409975
.text:00409744                 dd offset loc_409975
.text:00409744                 dd offset loc_409975
.text:00409744                 dd offset loc_409718
.text:00409744                 dd offset loc_40994E
.text:00409744                 dd offset loc_409975
.text:00409744                 dd offset loc_4099D3
.text:00409744                 dd offset loc_4099DB
.text:00409744                 dd offset loc_4099FD
.text:00409744                 dd offset loc_409718
.text:00409744                 dd offset loc_409718
.text:00409744                 dd offset loc_409718
.text:00409744                 dd offset loc_409718
.text:004097BC ; ---------------------------------------------------------------------------
.text:004097BC
.text:004097BC loc_4097BC:                             ; CODE XREF: sub_4096A0+9A↑j
.text:004097BC                                         ; DATA XREF: sub_4096A0:jpt_40973A↑o
.text:004097BC                 or      byte ptr [ebp+1Ch], 1 ; jumptable 0040973A case 8
.text:004097C0
.text:004097C0 loc_4097C0:                             ; CODE XREF: sub_4096A0+16E↓j
.text:004097C0                                         ; sub_4096A0+3C8↓j
.text:004097C0                 xor     edx, edx
.text:004097C2
.text:004097C2 loc_4097C2:                             ; CODE XREF: sub_4096A0+3D↑j
.text:004097C2                                         ; sub_4096A0+2A3↓j
.text:004097C2                 add     esp, 5Ch
.text:004097C5                 mov     eax, edx
.text:004097C7                 pop     ebx
.text:004097C8                 pop     esi
.text:004097C9                 pop     edi
.text:004097CA                 pop     ebp
.text:004097CB                 retn
.text:004097CC ; ---------------------------------------------------------------------------
.text:004097CC
.text:004097CC loc_4097CC:                             ; CODE XREF: sub_4096A0+9A↑j
.text:004097CC                                         ; DATA XREF: sub_4096A0:jpt_40973A↑o
.text:004097CC                 movzx   ecx, byte ptr [edi+1] ; jumptable 0040973A case 2
.text:004097D0                 mov     byte ptr [ecx+esi], 1
.text:004097D4
.text:004097D4 loc_4097D4:                             ; CODE XREF: sub_4096A0+166↓j
.text:004097D4                                         ; sub_4096A0+16C↓j ...
.text:004097D4                 mov     [esp+6Ch+var_4C], 0
.text:004097D9                 mov     edi, [esp+6Ch+var_30]
.text:004097DD                 jmp     loc_409718      ; jumptable 0040973A cases 0,9-12,20,26-29
.text:004097E2 ; ---------------------------------------------------------------------------
.text:004097E2
.text:004097E2 loc_4097E2:                             ; CODE XREF: sub_4096A0+9A↑j
.text:004097E2                                         ; DATA XREF: sub_4096A0:jpt_40973A↑o
.text:004097E2                 movsx   eax, byte ptr [esi+0Ah] ; jumptable 0040973A case 3
.text:004097E6                 xor     ebx, ebx
.text:004097E8                 nop
.text:004097E9                 lea     esi, [esi+0]
.text:004097F0
.text:004097F0 loc_4097F0:                             ; CODE XREF: sub_4096A0+15B↓j
.text:004097F0                 mov     byte ptr [ebx+esi], 1
.text:004097F4                 inc     ebx
.text:004097F5                 cmp     ebx, 0FFh
.text:004097FB                 jle     short loc_4097F0
.text:004097FD                 test    byte ptr [ebp+0Ch], 40h
.text:00409801                 jnz     short loc_409808
.text:00409803                 mov     [esi+0Ah], al
.text:00409806                 jmp     short loc_4097D4
.text:00409808 ; ---------------------------------------------------------------------------
.text:00409808
.text:00409808 loc_409808:                             ; CODE XREF: sub_4096A0+161↑j
.text:00409808                 test    byte ptr [ebp+1Ch], 1
.text:0040980C                 jz      short loc_4097D4
.text:0040980E                 jmp     short loc_4097C0
.text:00409810 ; ---------------------------------------------------------------------------
.text:00409810
.text:00409810 loc_409810:                             ; CODE XREF: sub_4096A0+9A↑j
.text:00409810                                         ; DATA XREF: sub_4096A0:jpt_40973A↑o
.text:00409810                 movzx   edx, byte ptr [edi] ; jumptable 0040973A case 4
.text:00409813                 inc     edi
.text:00409814                 lea     ebx, ds:0FFFFFFFFh[edx*8]
.text:0040981B                 test    ebx, ebx
.text:0040981D                 js      short loc_4097D4
.text:0040981F
.text:0040981F loc_40981F:                             ; CODE XREF: sub_4096A0+19F↓j
.text:0040981F                 test    ebx, ebx
.text:00409821                 mov     eax, ebx
.text:00409823                 js      short loc_409843
.text:00409825
.text:00409825 loc_409825:                             ; CODE XREF: sub_4096A0+1A6↓j
.text:00409825                 sar     eax, 3
.text:00409828                 mov     ecx, ebx
.text:0040982A                 movzx   edx, byte ptr [eax+edi]
.text:0040982E                 shl     eax, 3
.text:00409831                 sub     ecx, eax
.text:00409833                 sar     edx, cl
.text:00409835                 test    dl, 1
.text:00409838                 jz      short loc_40983E
.text:0040983A                 mov     byte ptr [ebx+esi], 1
.text:0040983E
.text:0040983E loc_40983E:                             ; CODE XREF: sub_4096A0+198↑j
.text:0040983E                 dec     ebx
.text:0040983F                 jns     short loc_40981F
.text:00409841                 jmp     short loc_4097D4
.text:00409843 ; ---------------------------------------------------------------------------
.text:00409843
.text:00409843 loc_409843:                             ; CODE XREF: sub_4096A0+183↑j
.text:00409843                 lea     eax, [ebx+7]
.text:00409846                 jmp     short loc_409825
.text:00409848 ; ---------------------------------------------------------------------------
.text:00409848
.text:00409848 loc_409848:                             ; CODE XREF: sub_4096A0+9A↑j
.text:00409848                                         ; DATA XREF: sub_4096A0:jpt_40973A↑o
.text:00409848                 movzx   edx, byte ptr [edi] ; jumptable 0040973A case 5
.text:0040984B                 movzx   ecx, dl
.text:0040984E                 lea     ebx, ds:0[ecx*8]
.text:00409855                 cmp     ebx, 0FFh
.text:0040985B                 jg      short loc_40986D
.text:0040985D
.text:0040985D loc_40985D:                             ; CODE XREF: sub_4096A0+1C8↓j
.text:0040985D                 mov     byte ptr [ebx+esi], 1
.text:00409861                 inc     ebx
.text:00409862                 cmp     ebx, 0FFh
.text:00409868                 jle     short loc_40985D
.text:0040986A                 movzx   edx, byte ptr [edi]
.text:0040986D
.text:0040986D loc_40986D:                             ; CODE XREF: sub_4096A0+1BB↑j
.text:0040986D                 movzx   ecx, dl
.text:00409870                 inc     edi
.text:00409871                 lea     ebx, ds:0FFFFFFFFh[ecx*8]
.text:00409878                 test    ebx, ebx
.text:0040987A                 js      loc_4097D4
.text:00409880
.text:00409880 loc_409880:                             ; CODE XREF: sub_4096A0+200↓j
.text:00409880                 test    ebx, ebx
.text:00409882                 mov     eax, ebx
.text:00409884                 js      short loc_4098A7
.text:00409886
.text:00409886 loc_409886:                             ; CODE XREF: sub_4096A0+20A↓j
.text:00409886                 sar     eax, 3
.text:00409889                 mov     ecx, ebx
.text:0040988B                 movzx   edx, byte ptr [eax+edi]
.text:0040988F                 shl     eax, 3
.text:00409892                 sub     ecx, eax
.text:00409894                 sar     edx, cl
.text:00409896                 test    dl, 1
.text:00409899                 jnz     short loc_40989F
.text:0040989B                 mov     byte ptr [ebx+esi], 1
.text:0040989F
.text:0040989F loc_40989F:                             ; CODE XREF: sub_4096A0+1F9↑j
.text:0040989F                 dec     ebx
.text:004098A0                 jns     short loc_409880
.text:004098A2                 jmp     loc_4097D4
.text:004098A7 ; ---------------------------------------------------------------------------
.text:004098A7
.text:004098A7 loc_4098A7:                             ; CODE XREF: sub_4096A0+1E4↑j
.text:004098A7                 lea     eax, [ebx+7]
.text:004098AA                 jmp     short loc_409886
.text:004098AC ; ---------------------------------------------------------------------------
.text:004098AC
.text:004098AC loc_4098AC:                             ; CODE XREF: sub_4096A0+9A↑j
.text:004098AC                                         ; sub_4096A0+251↓j
.text:004098AC                                         ; DATA XREF: ...
.text:004098AC                 add     edi, 2          ; jumptable 0040973A cases 6,7
.text:004098AF                 jmp     loc_409718      ; jumptable 0040973A cases 0,9-12,20,26-29
.text:004098B4 ; ---------------------------------------------------------------------------
.text:004098B4
.text:004098B4 loc_4098B4:                             ; CODE XREF: sub_4096A0+9A↑j
.text:004098B4                                         ; sub_4096A0+2D0↓j
.text:004098B4                                         ; DATA XREF: ...
.text:004098B4                 movsx   ecx, byte ptr [edi+1] ; jumptable 0040973A cases 15,16
.text:004098B8                 movzx   edx, byte ptr [edi]
.text:004098BB                 add     edi, 2
.text:004098BE                 shl     ecx, 8
.text:004098C1                 add     edx, ecx
.text:004098C3                 lea     ebx, [edx+edi]
.text:004098C6                 cmp     ebx, [esp+6Ch+var_30]
.text:004098CA                 jnb     short loc_409948
.text:004098CC                 mov     ecx, [esp+6Ch+var_24]
.text:004098D0                 cmp     ecx, [esp+6Ch+var_28]
.text:004098D4                 jz      short loc_4098F3
.text:004098D6
.text:004098D6 loc_4098D6:                             ; CODE XREF: sub_4096A0+29C↓j
.text:004098D6                 mov     edx, [esp+6Ch+Src]
.text:004098DA                 mov     [edx+ecx*4], ebx
.text:004098DD                 inc     [esp+6Ch+var_24]
.text:004098E1
.text:004098E1 loc_4098E1:                             ; CODE XREF: sub_4096A0+2AC↓j
.text:004098E1                 cmp     [esp+6Ch+var_4D], 0
.text:004098E6                 jz      loc_409718      ; jumptable 0040973A cases 0,9-12,20,26-29
.text:004098EC                 mov     [esp+6Ch+var_4D], 0
.text:004098F1                 jmp     short loc_4098AC ; jumptable 0040973A cases 6,7
.text:004098F3 ; ---------------------------------------------------------------------------
.text:004098F3
.text:004098F3 loc_4098F3:                             ; CODE XREF: sub_4096A0+234↑j
.text:004098F3                 mov     eax, dword_410050
.text:004098F8                 lea     edx, [eax+eax*8]
.text:004098FB                 lea     edx, [eax+edx*2]
.text:004098FE                 cmp     ecx, edx
.text:00409900                 ja      short loc_40993E
.text:00409902                 lea     edx, ds:0[ecx*8]
.text:00409909                 mov     [esp+6Ch+Size], edx ; Size
.text:0040990C                 call    malloc
.text:00409911                 mov     [esp+6Ch+Size], eax ; void *
.text:00409914                 mov     ecx, [esp+6Ch+var_28]
.text:00409918                 shl     ecx, 2
.text:0040991B                 mov     [esp+6Ch+var_64], ecx ; Size
.text:0040991F                 mov     ecx, [esp+6Ch+Src]
.text:00409923                 mov     [esp+6Ch+Val], ecx ; Src
.text:00409927                 call    memcpy
.text:0040992C                 mov     [esp+6Ch+Src], eax
.text:00409930                 test    eax, eax
.text:00409932                 jz      short loc_40993E
.text:00409934                 shl     [esp+6Ch+var_28], 1
.text:00409938                 mov     ecx, [esp+6Ch+var_24]
.text:0040993C                 jmp     short loc_4098D6
.text:0040993E ; ---------------------------------------------------------------------------
.text:0040993E
.text:0040993E loc_40993E:                             ; CODE XREF: sub_4096A0+260↑j
.text:0040993E                                         ; sub_4096A0+292↑j
.text:0040993E                 mov     edx, 0FFFFFFFEh
.text:00409943                 jmp     loc_4097C2
.text:00409948 ; ---------------------------------------------------------------------------
.text:00409948
.text:00409948 loc_409948:                             ; CODE XREF: sub_4096A0+22A↑j
.text:00409948                 or      byte ptr [ebp+1Ch], 1
.text:0040994C                 jmp     short loc_4098E1
.text:0040994E ; ---------------------------------------------------------------------------
.text:0040994E
.text:0040994E loc_40994E:                             ; CODE XREF: sub_4096A0+9A↑j
.text:0040994E                                         ; DATA XREF: sub_4096A0:jpt_40973A↑o
.text:0040994E                 add     edi, 2          ; jumptable 0040973A case 21
.text:00409951                 movsx   ecx, byte ptr [edi+1]
.text:00409955                 movzx   ebx, byte ptr [edi]
.text:00409958                 add     edi, 2
.text:0040995B                 shl     ecx, 8
.text:0040995E                 add     ebx, ecx
.text:00409960                 test    ebx, ebx
.text:00409962                 jnz     loc_409718      ; jumptable 0040973A cases 0,9-12,20,26-29
.text:00409968                 mov     [esp+6Ch+var_4D], 1
.text:0040996D                 sub     edi, 4
.text:00409970                 jmp     loc_4098B4      ; jumptable 0040973A cases 15,16
.text:00409975 ; ---------------------------------------------------------------------------
.text:00409975
.text:00409975 loc_409975:                             ; CODE XREF: sub_4096A0+9A↑j
.text:00409975                                         ; DATA XREF: sub_4096A0:jpt_40973A↑o
.text:00409975                 movsx   ebx, byte ptr [edi+1] ; jumptable 0040973A cases 13,14,17-19,22
.text:00409979                 movzx   ecx, byte ptr [edi]
.text:0040997C                 shl     ebx, 8
.text:0040997F                 add     ecx, ebx
.text:00409981                 test    ecx, ecx
.text:00409983                 lea     edi, [ecx+edi+2]
.text:00409987                 jg      loc_409718      ; jumptable 0040973A cases 0,9-12,20,26-29
.text:0040998D                 movzx   eax, byte ptr [edi]
.text:00409990                 cmp     al, 0Fh
.text:00409992                 jz      short loc_40999C
.text:00409994                 cmp     al, 15h
.text:00409996                 jnz     loc_409718      ; jumptable 0040973A cases 0,9-12,20,26-29
.text:0040999C
.text:0040999C loc_40999C:                             ; CODE XREF: sub_4096A0+2F2↑j
.text:0040999C                 inc     edi
.text:0040999D                 movsx   ecx, byte ptr [edi+1]
.text:004099A1                 movzx   edx, byte ptr [edi]
.text:004099A4                 shl     ecx, 8
.text:004099A7                 add     edx, ecx
.text:004099A9                 lea     edi, [edx+edi+2]
.text:004099AD                 mov     edx, [esp+6Ch+var_24]
.text:004099B1                 test    edx, edx
.text:004099B3                 jz      loc_409718      ; jumptable 0040973A cases 0,9-12,20,26-29
.text:004099B9                 mov     ebx, [esp+6Ch+Src]
.text:004099BD                 cmp     [ebx+edx*4-4], edi
.text:004099C1                 jnz     loc_409718      ; jumptable 0040973A cases 0,9-12,20,26-29
.text:004099C7                 lea     eax, [edx-1]
.text:004099CA                 mov     [esp+6Ch+var_24], eax
.text:004099CE                 jmp     loc_409718      ; jumptable 0040973A cases 0,9-12,20,26-29
.text:004099D3 ; ---------------------------------------------------------------------------
.text:004099D3
.text:004099D3 loc_4099D3:                             ; CODE XREF: sub_4096A0+9A↑j
.text:004099D3                                         ; DATA XREF: sub_4096A0:jpt_40973A↑o
.text:004099D3                 add     edi, 4          ; jumptable 0040973A case 23
.text:004099D6                 jmp     loc_409718      ; jumptable 0040973A cases 0,9-12,20,26-29
.text:004099DB ; ---------------------------------------------------------------------------
.text:004099DB
.text:004099DB loc_4099DB:                             ; CODE XREF: sub_4096A0+9A↑j
.text:004099DB                                         ; DATA XREF: sub_4096A0:jpt_40973A↑o
.text:004099DB                 xor     ebx, ebx        ; jumptable 0040973A case 24
.text:004099DD
.text:004099DD loc_4099DD:                             ; CODE XREF: sub_4096A0+350↓j
.text:004099DD                 movzx   edi, bl
.text:004099E0                 cmp     ds:byte_411140[edi], 1
.text:004099E7                 jz      short loc_4099F7
.text:004099E9
.text:004099E9 loc_4099E9:                             ; CODE XREF: sub_4096A0+35B↓j
.text:004099E9                 inc     ebx
.text:004099EA                 cmp     ebx, 0FFh
.text:004099F0                 jle     short loc_4099DD
.text:004099F2                 jmp     loc_4097D4
.text:004099F7 ; ---------------------------------------------------------------------------
.text:004099F7
.text:004099F7 loc_4099F7:                             ; CODE XREF: sub_4096A0+347↑j
.text:004099F7                 mov     byte ptr [ebx+esi], 1
.text:004099FB                 jmp     short loc_4099E9
.text:004099FD ; ---------------------------------------------------------------------------
.text:004099FD
.text:004099FD loc_4099FD:                             ; CODE XREF: sub_4096A0+9A↑j
.text:004099FD                                         ; DATA XREF: sub_4096A0:jpt_40973A↑o
.text:004099FD                 xor     ebx, ebx        ; jumptable 0040973A case 25
.text:004099FF
.text:004099FF loc_4099FF:                             ; CODE XREF: sub_4096A0+376↓j
.text:004099FF                 movzx   edx, bl
.text:00409A02                 cmp     ds:byte_411140[edx], 1
.text:00409A09                 jz      short loc_409A0F
.text:00409A0B                 mov     byte ptr [ebx+esi], 1
.text:00409A0F
.text:00409A0F loc_409A0F:                             ; CODE XREF: sub_4096A0+369↑j
.text:00409A0F                 inc     ebx
.text:00409A10                 cmp     ebx, 0FFh
.text:00409A16                 jle     short loc_4099FF
.text:00409A18                 jmp     loc_4097D4
.text:00409A18 ; ---------------------------------------------------------------------------
.text:00409A1D                 align 10h
.text:00409A20
.text:00409A20 loc_409A20:                             ; CODE XREF: sub_4096A0+7C↑j
.text:00409A20                                         ; sub_4096A0+87↑j
.text:00409A20                 mov     ecx, [esp+6Ch+var_24]
.text:00409A24                 test    ecx, ecx
.text:00409A26                 jz      short loc_409A53
.text:00409A28                 movzx   ebx, byte ptr [ebp+1Ch]
.text:00409A2C                 dec     ecx
.text:00409A2D                 movzx   eax, [esp+6Ch+var_4C]
.text:00409A32                 or      eax, ebx
.text:00409A34                 and     al, 1
.text:00409A36                 and     bl, 0FEh
.text:00409A39                 or      bl, al
.text:00409A3B                 mov     [ebp+1Ch], bl
.text:00409A3E                 mov     ebx, [esp+6Ch+Src]
.text:00409A42                 mov     [esp+6Ch+var_4C], 1
.text:00409A47                 mov     [esp+6Ch+var_24], ecx
.text:00409A4B                 mov     edi, [ebx+ecx*4]
.text:00409A4E                 jmp     loc_409718      ; jumptable 0040973A cases 0,9-12,20,26-29
.text:00409A53 ; ---------------------------------------------------------------------------
.text:00409A53
.text:00409A53 loc_409A53:                             ; CODE XREF: sub_4096A0+386↑j
.text:00409A53                 movzx   ebx, byte ptr [ebp+1Ch]
.text:00409A57                 movzx   eax, [esp+6Ch+var_4C]
.text:00409A5C                 or      eax, ebx
.text:00409A5E                 and     al, 1
.text:00409A60                 and     bl, 0FEh
.text:00409A63                 or      bl, al
.text:00409A65                 mov     [ebp+1Ch], bl
.text:00409A68                 jmp     loc_4097C0
.text:00409A6D ; ---------------------------------------------------------------------------
.text:00409A6D
.text:00409A6D def_40973A:                             ; CODE XREF: sub_4096A0+94↑j
.text:00409A6D                                         ; sub_4096A0+9A↑j
.text:00409A6D                                         ; DATA XREF: ...
.text:00409A6D                 call    abort           ; jumptable 0040973A default case, case 1
.text:00409A6D sub_4096A0      endp
.text:00409A6D
.text:00409A6D ; ---------------------------------------------------------------------------
.text:00409A72                 align 10h
.text:00409A80
.text:00409A80 ; =============== S U B R O U T I N E =======================================
.text:00409A80
.text:00409A80
.text:00409A80 sub_409A80      proc near               ; DATA XREF: sub_409C00+1B4↓o
.text:00409A80                 sub     eax, 9090002Dh
.text:00409A85                 nop
.text:00409A86                 nop
.text:00409A87                 nop
.text:00409A88                 nop
.text:00409A89                 nop
.text:00409A8A                 nop
.text:00409A8B                 nop
.text:00409A8C                 nop
.text:00409A8D                 nop
.text:00409A8E                 nop
.text:00409A8F                 nop
.text:00409A90                 nop
.text:00409A91                 nop
.text:00409A92                 nop
.text:00409A93                 nop
.text:00409A94                 nop
.text:00409A95                 nop
.text:00409A96                 nop
.text:00409A97                 nop
.text:00409A98                 nop
.text:00409A99                 nop
.text:00409A9A                 nop
.text:00409A9B                 nop
.text:00409A9C                 nop
.text:00409A9D                 nop
.text:00409A9E                 nop
.text:00409A9F                 nop
.text:00409A9F sub_409A80      endp
.text:00409A9F
.text:00409AA0
.text:00409AA0 ; =============== S U B R O U T I N E =======================================
.text:00409AA0
.text:00409AA0
.text:00409AA0 sub_409AA0      proc near               ; DATA XREF: sub_409C00+3CC↓o
.text:00409AA0                 and     eax, 6F203A73h
.text:00409AA5                 jo      short loc_409B1B
.text:00409AA7                 imul    ebp, [edi+6Eh], 63256020h
.text:00409AAE                 and     eax, 64202773h
.text:00409AB3                 outsd
.text:00409AB4                 db      65h
.text:00409AB4                 jnb     short loc_409B25
.text:00409AB7                 daa
.text:00409AB8                 jz      short loc_409ADA
.text:00409ABA                 popa
.text:00409ABB                 insb
.text:00409ABC                 insb
.text:00409ABD                 outsd
.text:00409ABE                 ja      short sub_409AE0
.text:00409AC0                 popa
.text:00409AC1                 outsb
.text:00409AC2                 and     [ecx+72h], ah
.text:00409AC5                 db      67h
.text:00409AC5                 jnz     near ptr loc_409B34+1
.text:00409AC8                 outs    dx, byte ptr gs:[esi]
.text:00409ACA                 jz      short loc_409AD6
.text:00409ACC                 add     [eax-6F6F6F70h], dl
.text:00409AD2                 nop
.text:00409AD3                 nop
.text:00409AD4                 nop
.text:00409AD5                 nop
.text:00409AD6
.text:00409AD6 loc_409AD6:                             ; CODE XREF: sub_409AA0+2A↑j
.text:00409AD6                 nop
.text:00409AD7                 nop
.text:00409AD8                 nop
.text:00409AD9                 nop
.text:00409ADA
.text:00409ADA loc_409ADA:                             ; CODE XREF: sub_409AA0+18↑j
.text:00409ADA                 nop
.text:00409ADB                 nop
.text:00409ADC                 nop
.text:00409ADD                 nop
.text:00409ADE                 nop
.text:00409ADF                 nop
.text:00409ADF sub_409AA0      endp ; sp-analysis failed
.text:00409ADF
.text:00409AE0
.text:00409AE0 ; =============== S U B R O U T I N E =======================================
.text:00409AE0
.text:00409AE0
.text:00409AE0 sub_409AE0      proc near               ; CODE XREF: sub_409AA0+1E↑j
.text:00409AE0                                         ; DATA XREF: sub_409C00:loc_40A032↓o
.text:00409AE0                 and     eax, 6F203A73h
.text:00409AE5                 jo      short loc_409B5B
.text:00409AE7                 imul    ebp, [edi+6Eh], 2D2D6020h
.text:00409AEE                 and     eax, 64202773h
.text:00409AF3                 outsd
.text:00409AF4                 db      65h
.text:00409AF4                 jnb     short loc_409B65
.text:00409AF7                 daa
.text:00409AF8                 jz      short loc_409B1A
.text:00409AFA                 popa
.text:00409AFB                 insb
.text:00409AFC                 insb
.text:00409AFD                 outsd
.text:00409AFE                 ja      short sub_409B20
.text:00409B00                 popa
.text:00409B01                 outsb
.text:00409B02                 and     [ecx+72h], ah
.text:00409B05                 db      67h
.text:00409B05                 jnz     loc_409B75
.text:00409B08                 outs    dx, byte ptr gs:[esi]
.text:00409B0A                 jz      short loc_409B16
.text:00409B0C                 add     [eax-6F6F6F70h], dl
.text:00409B12                 nop
.text:00409B13                 nop
.text:00409B14                 nop
.text:00409B15                 nop
.text:00409B16
.text:00409B16 loc_409B16:                             ; CODE XREF: sub_409AE0+2A↑j
.text:00409B16                 nop
.text:00409B17                 nop
.text:00409B18                 nop
.text:00409B19                 nop
.text:00409B1A
.text:00409B1A loc_409B1A:                             ; CODE XREF: sub_409AE0+18↑j
.text:00409B1A                 nop
.text:00409B1B
.text:00409B1B loc_409B1B:                             ; CODE XREF: sub_409AA0+5↑j
.text:00409B1B                 nop
.text:00409B1C                 nop
.text:00409B1D                 nop
.text:00409B1E                 nop
.text:00409B1F                 nop
.text:00409B1F sub_409AE0      endp ; sp-analysis failed
.text:00409B1F
.text:00409B20
.text:00409B20 ; =============== S U B R O U T I N E =======================================
.text:00409B20
.text:00409B20
.text:00409B20 sub_409B20      proc near               ; CODE XREF: sub_409AE0+1E↑j
.text:00409B20                                         ; DATA XREF: sub_409C00:loc_40A0D0↓o ...
.text:00409B20                 and     eax, 6F203A73h
.text:00409B25
.text:00409B25 loc_409B25:                             ; CODE XREF: sub_409AA0+14↑j
.text:00409B25                 jo      short loc_409B9B
.text:00409B27                 imul    ebp, [edi+6Eh], 73256020h
.text:00409B2E                 daa
.text:00409B2F                 and     [edx+65h], dh
.text:00409B32                 jno     short near ptr loc_409BA8+1
.text:00409B34
.text:00409B34 loc_409B34:                             ; CODE XREF: sub_409AA0+25↑j
.text:00409B34                 imul    esi, [edx+65h], 6E612073h
.text:00409B3B                 and     [ecx+72h], ah
.text:00409B3E                 db      67h
.text:00409B3E                 jnz     near ptr loc_409BAC+2
.text:00409B41                 outs    dx, byte ptr gs:[esi]
.text:00409B43                 jz      short loc_409B4F
.text:00409B45                 add     [eax-6F6F6F70h], dl
.text:00409B4B                 nop
.text:00409B4C                 nop
.text:00409B4D                 nop
.text:00409B4E                 nop
.text:00409B4F
.text:00409B4F loc_409B4F:                             ; CODE XREF: sub_409B20+23↑j
.text:00409B4F                 nop
.text:00409B50                 nop
.text:00409B51                 nop
.text:00409B52                 nop
.text:00409B53                 nop
.text:00409B54                 nop
.text:00409B55                 nop
.text:00409B56                 nop
.text:00409B57                 nop
.text:00409B58                 nop
.text:00409B59                 nop
.text:00409B5A                 nop
.text:00409B5B
.text:00409B5B loc_409B5B:                             ; CODE XREF: sub_409AE0+5↑j
.text:00409B5B                 nop
.text:00409B5C                 nop
.text:00409B5D                 nop
.text:00409B5E                 nop
.text:00409B5F                 nop
.text:00409B5F sub_409B20      endp
.text:00409B5F
.text:00409B60
.text:00409B60 ; =============== S U B R O U T I N E =======================================
.text:00409B60
.text:00409B60
.text:00409B60 sub_409B60      proc near               ; DATA XREF: sub_409C00+55E↓o
.text:00409B60                 and     eax, 75203A73h
.text:00409B65
.text:00409B65 loc_409B65:                             ; CODE XREF: sub_409AE0+14↑j
.text:00409B65                 outsb
.text:00409B66                 jb      short near ptr loc_409BC7+6
.text:00409B68                 arpl    [edi+67h], bp
.text:00409B6B                 outsb
.text:00409B6C                 imul    edi, [edx+65h], 706F2064h
.text:00409B73                 jz      short loc_409BDE
.text:00409B75
.text:00409B75 loc_409B75:                             ; CODE XREF: sub_409AE0+25↑j
.text:00409B75                 outsd
.text:00409B76                 outsb
.text:00409B77                 and     [eax+25h], ah
.text:00409B7A                 arpl    ds:0A2773h, sp
.text:00409B80
.text:00409B80 loc_409B80:                             ; DATA XREF: sub_409C00:loc_40A1A1↓o
.text:00409B80                 add     [eax-6F6F6F70h], dl
.text:00409B86                 nop
.text:00409B87                 nop
.text:00409B88                 nop
.text:00409B89                 nop
.text:00409B8A                 nop
.text:00409B8B                 nop
.text:00409B8C                 nop
.text:00409B8D                 nop
.text:00409B8E                 nop
.text:00409B8F                 nop
.text:00409B90                 nop
.text:00409B91                 nop
.text:00409B92                 nop
.text:00409B93                 nop
.text:00409B94                 nop
.text:00409B95                 nop
.text:00409B96                 nop
.text:00409B97                 nop
.text:00409B98                 nop
.text:00409B99                 nop
.text:00409B9A                 nop
.text:00409B9B
.text:00409B9B loc_409B9B:                             ; CODE XREF: sub_409B20:loc_409B25↑j
.text:00409B9B                 nop
.text:00409B9C                 nop
.text:00409B9D                 nop
.text:00409B9E                 nop
.text:00409B9F                 nop
.text:00409B9F sub_409B60      endp
.text:00409B9F
.text:00409BA0
.text:00409BA0 ; =============== S U B R O U T I N E =======================================
.text:00409BA0
.text:00409BA0
.text:00409BA0 sub_409BA0      proc near               ; DATA XREF: sub_409C00:loc_40A1BA↓o
.text:00409BA0                 and     eax, 75203A73h
.text:00409BA5                 outsb
.text:00409BA6                 jb      short near ptr loc_409C07+6
.text:00409BA8
.text:00409BA8 loc_409BA8:                             ; CODE XREF: sub_409B20+12↑j
.text:00409BA8                 arpl    [edi+67h], bp
.text:00409BAB                 outsb
.text:00409BAC
.text:00409BAC loc_409BAC:                             ; CODE XREF: sub_409B20+1E↑j
.text:00409BAC                 imul    edi, [edx+65h], 706F2064h
.text:00409BB3                 jz      short loc_409C1E
.text:00409BB5                 outsd
.text:00409BB6                 outsb
.text:00409BB7                 and     [eax+2Dh], ah
.text:00409BBA                 sub     eax, 0A277325h
.text:00409BBF                 add     ds:6F203A73h, ah
.text:00409BC5                 jo      short loc_409C3B
.text:00409BC7
.text:00409BC7 loc_409BC7:                             ; CODE XREF: sub_409B60+6↑j
.text:00409BC7                 imul    ebp, [edi+6Eh], 71657220h
.text:00409BCE                 jnz     short loc_409C39
.text:00409BD0                 jb      short loc_409C37
.text:00409BD2                 jnb     short loc_409BF4
.text:00409BD4                 popa
.text:00409BD5                 outsb
.text:00409BD6                 and     [ecx+72h], ah
.text:00409BD9                 db      67h
.text:00409BD9                 jnz     near ptr loc_409C47+2
.text:00409BDC                 outs    dx, byte ptr gs:[esi]
.text:00409BDE
.text:00409BDE loc_409BDE:                             ; CODE XREF: sub_409B60+13↑j
.text:00409BDE                 jz      short sub_409C00
.text:00409BE0                 sub     eax, 6325202Dh
.text:00409BE5                 or      al, [eax]
.text:00409BE7                 nop
.text:00409BE8                 nop
.text:00409BE9                 nop
.text:00409BEA                 nop
.text:00409BEB                 nop
.text:00409BEC                 nop
.text:00409BED                 nop
.text:00409BEE                 nop
.text:00409BEF                 nop
.text:00409BF0                 nop
.text:00409BF1                 nop
.text:00409BF2                 nop
.text:00409BF3                 nop
.text:00409BF4
.text:00409BF4 loc_409BF4:                             ; CODE XREF: sub_409BA0+32↑j
.text:00409BF4                 nop
.text:00409BF5                 nop
.text:00409BF6                 nop
.text:00409BF7                 nop
.text:00409BF8                 nop
.text:00409BF9                 nop
.text:00409BFA                 nop
.text:00409BFB                 nop
.text:00409BFC                 nop
.text:00409BFD                 nop
.text:00409BFE                 nop
.text:00409BFF                 nop
.text:00409BFF sub_409BA0      endp ; sp-analysis failed
.text:00409BFF
.text:00409C00
.text:00409C00 ; =============== S U B R O U T I N E =======================================
.text:00409C00
.text:00409C00
.text:00409C00 ; int __cdecl sub_409C00(char *Str2, size_t MaxCount, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, char *Str, int, int, int, int)
.text:00409C00 sub_409C00      proc near               ; CODE XREF: sub_409BA0:loc_409BDE↑j
.text:00409C00                                         ; DATA XREF: sub_409C00:loc_40A413↓o
.text:00409C00
.text:00409C00 Str2            = dword ptr  4
.text:00409C00 MaxCount        = dword ptr  8
.text:00409C00 arg_8           = dword ptr  0Ch
.text:00409C00 arg_C           = dword ptr  10h
.text:00409C00 arg_1C          = dword ptr  20h
.text:00409C00 arg_20          = dword ptr  24h
.text:00409C00 arg_24          = dword ptr  28h
.text:00409C00 arg_28          = dword ptr  2Ch
.text:00409C00 arg_2C          = dword ptr  30h
.text:00409C00 arg_30          = dword ptr  34h
.text:00409C00 arg_34          = dword ptr  38h
.text:00409C00 arg_38          = dword ptr  3Ch
.text:00409C00 arg_3C          = dword ptr  40h
.text:00409C00 arg_40          = dword ptr  44h
.text:00409C00 arg_44          = dword ptr  48h
.text:00409C00 arg_5C          = dword ptr  60h
.text:00409C00 arg_60          = dword ptr  64h
.text:00409C00 Str             = dword ptr  68h
.text:00409C00 arg_68          = dword ptr  6Ch
.text:00409C00 arg_6C          = dword ptr  70h
.text:00409C00 arg_70          = dword ptr  74h
.text:00409C00 arg_74          = dword ptr  78h
.text:00409C00
.text:00409C00 ; FUNCTION CHUNK AT .text:00409C7B SIZE 00000053 BYTES
.text:00409C00 ; FUNCTION CHUNK AT .text:00409CE4 SIZE 0000014B BYTES
.text:00409C00 ; FUNCTION CHUNK AT .text:00409E30 SIZE 0000023A BYTES
.text:00409C00 ; FUNCTION CHUNK AT .text:0040A070 SIZE 00000099 BYTES
.text:00409C00 ; FUNCTION CHUNK AT .text:0040A110 SIZE 000000DF BYTES
.text:00409C00 ; FUNCTION CHUNK AT .text:0040A1F0 SIZE 0000025B BYTES
.text:00409C00 ; FUNCTION CHUNK AT .text:0040A450 SIZE 000001AE BYTES
.text:00409C00 ; FUNCTION CHUNK AT .text:0040A600 SIZE 000000F9 BYTES
.text:00409C00 ; FUNCTION CHUNK AT .text:0040A700 SIZE 000000CE BYTES
.text:00409C00 ; FUNCTION CHUNK AT .text:0040A7D0 SIZE 0000003A BYTES
.text:00409C00 ; FUNCTION CHUNK AT .text:0040A810 SIZE 0000000B BYTES
.text:00409C00 ; FUNCTION CHUNK AT .text:0040A820 SIZE 00000019 BYTES
.text:00409C00 ; FUNCTION CHUNK AT .text:0040A840 SIZE 00000011 BYTES
.text:00409C00
.text:00409C00                 and     eax, 6F203A73h
.text:00409C05                 jo      short loc_409C7B
.text:00409C07
.text:00409C07 loc_409C07:                             ; CODE XREF: sub_409BA0+6↑j
.text:00409C07                 imul    ebp, [edi+6Eh], 572D6020h
.text:00409C0E                 and     ds:64202773h, ah
.text:00409C14                 outsd
.text:00409C15                 db      65h
.text:00409C15                 jnb     short near ptr loc_409C84+2
.text:00409C18                 daa
.text:00409C19                 jz      short loc_409C3B
.text:00409C1B                 popa
.text:00409C1C                 insb
.text:00409C1D                 insb
.text:00409C1E
.text:00409C1E loc_409C1E:                             ; CODE XREF: sub_409BA0+13↑j
.text:00409C1E                 outsd
.text:00409C1F                 ja      short near ptr sub_409C40+1
.text:00409C21                 popa
.text:00409C22                 outsb
.text:00409C23                 and     [ecx+72h], ah
.text:00409C26                 db      67h
.text:00409C26                 jnz     near ptr loc_409C95+1
.text:00409C29                 outs    dx, byte ptr gs:[esi]
.text:00409C2B                 jz      short loc_409C37
.text:00409C2D                 add     [eax-6F6F6F70h], dl
.text:00409C33                 nop
.text:00409C34                 nop
.text:00409C35                 nop
.text:00409C36                 nop
.text:00409C37
.text:00409C37 loc_409C37:                             ; CODE XREF: sub_409BA0+30↑j
.text:00409C37                                         ; sub_409C00+2B↑j
.text:00409C37                 nop
.text:00409C38                 nop
.text:00409C39
.text:00409C39 loc_409C39:                             ; CODE XREF: sub_409BA0+2E↑j
.text:00409C39                 nop
.text:00409C3A                 nop
.text:00409C3B
.text:00409C3B loc_409C3B:                             ; CODE XREF: sub_409BA0+25↑j
.text:00409C3B                                         ; sub_409C00+19↑j
.text:00409C3B                 nop
.text:00409C3C                 nop
.text:00409C3D                 nop
.text:00409C3E                 nop
.text:00409C3F                 nop
.text:00409C3F sub_409C00      endp ; sp-analysis failed
.text:00409C3F
.text:00409C40
.text:00409C40 ; =============== S U B R O U T I N E =======================================
.text:00409C40
.text:00409C40
.text:00409C40 sub_409C40      proc near               ; CODE XREF: sub_409C00+1F↑j
.text:00409C40                                         ; DATA XREF: sub_409C00:loc_40A4FF↓o
.text:00409C40
.text:00409C40 arg_A4          = dword ptr  0A8h
.text:00409C40 arg_B8          = dword ptr  0BCh
.text:00409C40
.text:00409C40 ; FUNCTION CHUNK AT .text:00409CDA SIZE 0000000A BYTES
.text:00409C40
.text:00409C40                 and     eax, 6F203A73h
.text:00409C45                 jo      short loc_409CBB
.text:00409C47
.text:00409C47 loc_409C47:                             ; CODE XREF: sub_409BA0+39↑j
.text:00409C47                 imul    ebp, [edi+6Eh], 572D6020h
.text:00409C4E                 and     ds:69202773h, ah
.text:00409C54                 jnb     short near ptr loc_409C73+3
.text:00409C56                 popa
.text:00409C57                 insd
.text:00409C58                 bound   ebp, [ecx+67h]
.text:00409C5B                 jnz     short near ptr loc_409CC8+4
.text:00409C5D                 jnz     short near ptr loc_409CD1+1
.text:00409C5F                 or      al, [eax]
.text:00409C61
.text:00409C61 loc_409C61:                             ; DATA XREF: sub_409C00+A0F↓o
.text:00409C61                 and     eax, 69203A73h
.text:00409C66                 insb
.text:00409C67                 insb
.text:00409C68                 db      65h, 67h
.text:00409C68                 popa
.text:00409C6B                 insb
.text:00409C6C                 and     [edi+70h], ch
.text:00409C6F                 jz      short loc_409CDA
.text:00409C71                 outsd
.text:00409C72                 outsb
.text:00409C73
.text:00409C73 loc_409C73:                             ; CODE XREF: sub_409C40+14↑j
.text:00409C73                 and     ds:6325202Dh, ch
.text:00409C79                 or      al, [eax]
.text:00409C79 sub_409C40      endp ; sp-analysis failed
.text:00409C79
.text:00409C7B ; START OF FUNCTION CHUNK FOR sub_409C00
.text:00409C7B
.text:00409C7B loc_409C7B:                             ; CODE XREF: sub_409C00+5↑j
.text:00409C7B                                         ; DATA XREF: sub_409C00:loc_40A647↓o
.text:00409C7B                 and     eax, 69203A73h
.text:00409C80                 outsb
.text:00409C81                 jbe     short loc_409CE4
.text:00409C83                 insb
.text:00409C84
.text:00409C84 loc_409C84:                             ; CODE XREF: sub_409C00+15↑j
.text:00409C84                 imul    esp, [eax+6Fh], 6F697470h
.text:00409C8C                 outsb
.text:00409C8D                 and     ds:6325202Dh, ch
.text:00409C93                 or      al, [eax]
.text:00409C95
.text:00409C95 loc_409C95:                             ; CODE XREF: sub_409C00+26↑j
.text:00409C95                                         ; DATA XREF: sub_409C00:loc_40A66E↓o
.text:00409C95                 and     eax, 6F203A73h
.text:00409C9A                 jo      short near ptr loc_409D0F+1
.text:00409C9C                 imul    ebp, [edi+6Eh], 73256020h
.text:00409CA3                 daa
.text:00409CA4                 and     [ecx+73h], ch
.text:00409CA7                 and     [ecx+6Dh], ah
.text:00409CAA                 bound   ebp, [ecx+67h]
.text:00409CAD                 jnz     short near ptr loc_409D1C+2
.text:00409CAF                 jnz     short near ptr loc_409D23+1
.text:00409CB1                 or      al, [eax]
.text:00409CB3
.text:00409CB3 loc_409CB3:                             ; DATA XREF: sub_409C00:loc_40A820↓o
.text:00409CB3                 push    eax
.text:00409CB4                 dec     edi
.text:00409CB5                 push    ebx
.text:00409CB6                 dec     ecx
.text:00409CB7                 pop     eax
.text:00409CB8                 dec     esp
.text:00409CB9                 pop     ecx
.text:00409CBA                 pop     edi
.text:00409CBB
.text:00409CBB loc_409CBB:                             ; CODE XREF: sub_409C40+5↑j
.text:00409CBB                 inc     ebx
.text:00409CBC                 dec     edi
.text:00409CBD                 push    edx
.text:00409CBE                 push    edx
.text:00409CBF                 inc     ebp
.text:00409CC0                 inc     ebx
.text:00409CC1                 push    esp
.text:00409CC2                 add     [ebp+0B6h], cl
.text:00409CC8
.text:00409CC8 loc_409CC8:                             ; CODE XREF: sub_409C40+1B↑j
.text:00409CC8                 add     [ebp+27BCh], cl
.text:00409CC8 ; END OF FUNCTION CHUNK FOR sub_409C00
.text:00409CC8 ; ---------------------------------------------------------------------------
.text:00409CCE                 dw 0
.text:00409CD0 ; ---------------------------------------------------------------------------
.text:00409CD0
.text:00409CD0 loc_409CD0:                             ; CODE XREF: sub_40A860+5A↓p
.text:00409CD0                                         ; .text:0040A94A↓p ...
.text:00409CD0                 push    ebp
.text:00409CD1
.text:00409CD1 loc_409CD1:                             ; CODE XREF: sub_409C40+1D↑j
.text:00409CD1                 mov     eax, 0FFFFFFFFh
.text:00409CD6                 push    edi
.text:00409CD7                 push    esi
.text:00409CD8                 push    ebx
.text:00409CD8 ; ---------------------------------------------------------------------------
.text:00409CD9                 db 83h
.text:00409CDA ; ---------------------------------------------------------------------------
.text:00409CDA ; START OF FUNCTION CHUNK FOR sub_409C40
.text:00409CDA
.text:00409CDA loc_409CDA:                             ; CODE XREF: sub_409C40+2F↑j
.text:00409CDA                 in      al, dx
.text:00409CDB                 dec     esp
.text:00409CDC                 mov     esi, [esp-40h+arg_A4]
.text:00409CE0                 mov     ebp, [esp-40h+arg_B8]
.text:00409CE0 ; END OF FUNCTION CHUNK FOR sub_409C40
.text:00409CE4 ; START OF FUNCTION CHUNK FOR sub_409C00
.text:00409CE4
.text:00409CE4 loc_409CE4:                             ; CODE XREF: sub_409C00+81↑j
.text:00409CE4                 cmp     byte ptr [esi], 3Ah ; ':'
.text:00409CE7                 mov     ebx, [ebp+4]
.text:00409CEA                 setz    dl
.text:00409CED                 movzx   ecx, dl
.text:00409CF0                 dec     ecx
.text:00409CF1                 and     ecx, ebx
.text:00409CF3                 mov     [esp+arg_44], ecx
.text:00409CF7                 mov     ecx, [esp+arg_5C]
.text:00409CFB                 test    ecx, ecx
.text:00409CFD                 jle     loc_409E27
.text:00409D03                 mov     dword ptr [ebp+0Ch], 0
.text:00409D0A                 mov     ebx, [ebp+0]
.text:00409D0D                 test    ebx, ebx
.text:00409D0F
.text:00409D0F loc_409D0F:                             ; CODE XREF: sub_409C00+9A↑j
.text:00409D0F                 jz      loc_40A840
.text:00409D15                 mov     edi, [ebp+10h]
.text:00409D18                 test    edi, edi
.text:00409D1A                 jnz     short loc_409D73
.text:00409D1C
.text:00409D1C loc_409D1C:                             ; CODE XREF: sub_409C00+AD↑j
.text:00409D1C                 lea     esi, [esi+0]
.text:00409D20
.text:00409D20 loc_409D20:                             ; CODE XREF: sub_409C00+C4C↓j
.text:00409D20                 mov     [ebp+24h], ebx
.text:00409D23
.text:00409D23 loc_409D23:                             ; CODE XREF: sub_409C00+AF↑j
.text:00409D23                 mov     esi, [esp+Str]
.text:00409D27                 mov     [ebp+20h], ebx
.text:00409D2A                 mov     ecx, [esp+arg_74]
.text:00409D2E                 xor     ebx, ebx
.text:00409D30                 mov     dword ptr [ebp+14h], 0
.text:00409D37                 test    ecx, ecx
.text:00409D39                 jz      loc_40A820
.text:00409D3F
.text:00409D3F loc_409D3F:                             ; CODE XREF: sub_409C00+C34↓j
.text:00409D3F                 mov     ebx, 1
.text:00409D44
.text:00409D44 loc_409D44:                             ; CODE XREF: sub_409C00+C2E↓j
.text:00409D44                 mov     [ebp+1Ch], ebx
.text:00409D47                 mov     ecx, [esp+Str]
.text:00409D4B                 movzx   eax, byte ptr [ecx]
.text:00409D4E                 cmp     al, 2Dh ; '-'
.text:00409D50                 jz      loc_40A810
.text:00409D56                 cmp     al, 2Bh ; '+'
.text:00409D58                 jz      loc_40A7F9
.text:00409D5E                 xor     edx, edx
.text:00409D60                 test    ebx, ebx
.text:00409D62                 setz    dl
.text:00409D65                 mov     [ebp+18h], edx
.text:00409D68
.text:00409D68 loc_409D68:                             ; CODE XREF: sub_409C00+C05↓j
.text:00409D68                 mov     [esp+Str], esi
.text:00409D6C                 mov     dword ptr [ebp+10h], 1
.text:00409D73
.text:00409D73 loc_409D73:                             ; CODE XREF: sub_409C00+11A↑j
.text:00409D73                 mov     eax, [ebp+14h]
.text:00409D76                 test    eax, eax
.text:00409D78                 jz      short loc_409D83
.text:00409D7A                 cmp     byte ptr [eax], 0
.text:00409D7D                 jnz     loc_409E60
.text:00409D83
.text:00409D83 loc_409D83:                             ; CODE XREF: sub_409C00+178↑j
.text:00409D83                 mov     ebx, [ebp+0]
.text:00409D86                 cmp     [ebp+24h], ebx
.text:00409D89                 jle     short loc_409D8E
.text:00409D8B                 mov     [ebp+24h], ebx
.text:00409D8E
.text:00409D8E loc_409D8E:                             ; CODE XREF: sub_409C00+189↑j
.text:00409D8E                 cmp     [ebp+20h], ebx
.text:00409D91                 jle     short loc_409D96
.text:00409D93                 mov     [ebp+20h], ebx
.text:00409D96
.text:00409D96 loc_409D96:                             ; CODE XREF: sub_409C00+191↑j
.text:00409D96                 cmp     dword ptr [ebp+18h], 1
.text:00409D9A                 jz      loc_40A770
.text:00409DA0
.text:00409DA0 loc_409DA0:                             ; CODE XREF: sub_409C00+BE3↓j
.text:00409DA0                 cmp     ebx, [esp+arg_5C]
.text:00409DA4                 jz      loc_40A754
.text:00409DAA                 cld
.text:00409DAB                 mov     ecx, [esp+arg_60]
.text:00409DAF                 mov     edx, 3
.text:00409DB4                 mov     edi, offset sub_409A80
.text:00409DB9                 mov     esi, [ecx+ebx*4]
.text:00409DBC                 mov     ecx, edx
.text:00409DBE                 repe cmpsb
.text:00409DC0                 jnz     short loc_409DFC
.text:00409DC2                 mov     edx, [ebp+24h]
.text:00409DC5                 lea     eax, [ebx+1]
.text:00409DC8                 cmp     [ebp+20h], edx
.text:00409DCB                 mov     [ebp+0], eax
.text:00409DCE                 jz      loc_40A768
.text:00409DD4                 cmp     edx, eax
.text:00409DD6                 jz      short loc_409DF0
.text:00409DD8                 mov     [esp+Str2], ebp
.text:00409DDC                 mov     ebx, [esp+arg_60]
.text:00409DE0                 mov     [esp+0], ebx
.text:00409DE3                 call    sub_40A980
.text:00409DE8                 nop
.text:00409DE9                 lea     esi, [esi+0]
.text:00409DF0
.text:00409DF0 loc_409DF0:                             ; CODE XREF: sub_409C00+1D6↑j
.text:00409DF0                                         ; sub_409C00+B6B↓j
.text:00409DF0                 mov     eax, [esp+arg_5C]
.text:00409DF4                 mov     ebx, eax
.text:00409DF6                 mov     [ebp+24h], eax
.text:00409DF9                 mov     [ebp+0], eax
.text:00409DFC
.text:00409DFC loc_409DFC:                             ; CODE XREF: sub_409C00+1C0↑j
.text:00409DFC                 cmp     ebx, [esp+arg_5C]
.text:00409E00                 jz      loc_40A754
.text:00409E06                 mov     esi, [esp+arg_60]
.text:00409E0A                 mov     eax, [esi+ebx*4]
.text:00409E0D                 cmp     byte ptr [eax], 2Dh ; '-'
.text:00409E10                 jz      short loc_409E37
.text:00409E12
.text:00409E12 loc_409E12:                             ; CODE XREF: sub_409C00+23D↓j
.text:00409E12                 mov     edx, [ebp+18h]
.text:00409E15                 test    edx, edx
.text:00409E17                 jz      short loc_409E30
.text:00409E19                 mov     [ebp+0Ch], eax
.text:00409E1C                 lea     edi, [ebx+1]
.text:00409E1F                 mov     eax, 1
.text:00409E24                 mov     [ebp+0], edi
.text:00409E27
.text:00409E27 loc_409E27:                             ; CODE XREF: sub_409C00+FD↑j
.text:00409E27                                         ; sub_409C00+235↓j ...
.text:00409E27                 add     esp, 4Ch
.text:00409E2A                 pop     ebx
.text:00409E2B                 pop     esi
.text:00409E2C                 pop     edi
.text:00409E2D                 pop     ebp
.text:00409E2E                 retn
.text:00409E2E ; END OF FUNCTION CHUNK FOR sub_409C00
.text:00409E2E ; ---------------------------------------------------------------------------
.text:00409E2F                 align 10h
.text:00409E30 ; START OF FUNCTION CHUNK FOR sub_409C00
.text:00409E30
.text:00409E30 loc_409E30:                             ; CODE XREF: sub_409C00+217↑j
.text:00409E30                                         ; sub_409C00+B5A↓j ...
.text:00409E30                 mov     eax, 0FFFFFFFFh
.text:00409E35                 jmp     short loc_409E27
.text:00409E37 ; ---------------------------------------------------------------------------
.text:00409E37
.text:00409E37 loc_409E37:                             ; CODE XREF: sub_409C00+210↑j
.text:00409E37                 movzx   edx, byte ptr [eax+1]
.text:00409E3B                 test    dl, dl
.text:00409E3D                 jz      short loc_409E12
.text:00409E3F                 mov     ebx, [esp+arg_68]
.text:00409E43                 xor     ecx, ecx
.text:00409E45                 test    ebx, ebx
.text:00409E47                 jz      short loc_409E52
.text:00409E49                 cmp     dl, 2Dh ; '-'
.text:00409E4C                 jz      loc_40A74A
.text:00409E52
.text:00409E52 loc_409E52:                             ; CODE XREF: sub_409C00+247↑j
.text:00409E52                                         ; sub_409C00+B4F↓j
.text:00409E52                 lea     esi, [ecx+eax+1]
.text:00409E56                 mov     [ebp+14h], esi
.text:00409E59                 lea     esi, [esi+0]
.text:00409E60
.text:00409E60 loc_409E60:                             ; CODE XREF: sub_409C00+17D↑j
.text:00409E60                 mov     ecx, [esp+arg_68]
.text:00409E64                 test    ecx, ecx
.text:00409E66                 jz      loc_40A1F0
.text:00409E6C                 mov     edx, [ebp+0]
.text:00409E6F                 mov     edi, [esp+arg_60]
.text:00409E73                 mov     eax, [edi+edx*4]
.text:00409E76                 movzx   edx, byte ptr [eax+1]
.text:00409E7A                 cmp     dl, 2Dh ; '-'
.text:00409E7D                 jz      short loc_409E95
.text:00409E7F                 mov     ebx, [esp+arg_70]
.text:00409E83                 test    ebx, ebx
.text:00409E85                 jz      loc_40A1F0
.text:00409E8B                 cmp     byte ptr [eax+2], 0
.text:00409E8F                 jz      loc_40A72A
.text:00409E95
.text:00409E95 loc_409E95:                             ; CODE XREF: sub_409C00+27D↑j
.text:00409E95                                         ; sub_409C00+B45↓j
.text:00409E95                 mov     [esp+arg_40], 0
.text:00409E9D                 mov     ecx, [ebp+14h]
.text:00409EA0                 mov     [esp+arg_3C], 0
.text:00409EA8                 mov     [esp+arg_38], 0
.text:00409EB0                 mov     edi, ecx
.text:00409EB2                 mov     [esp+arg_34], 0FFFFFFFFh
.text:00409EBA                 movzx   eax, byte ptr [ecx]
.text:00409EBD                 test    al, al
.text:00409EBF                 jz      short loc_409EDC
.text:00409EC1                 cmp     al, 3Dh ; '='
.text:00409EC3                 jz      short loc_409EDC
.text:00409EC5                 lea     esi, [esi+0]
.text:00409EC9                 lea     edi, [edi+0]
.text:00409ED0
.text:00409ED0 loc_409ED0:                             ; CODE XREF: sub_409C00+2DA↓j
.text:00409ED0                 inc     edi
.text:00409ED1                 movzx   eax, byte ptr [edi]
.text:00409ED4                 test    al, al
.text:00409ED6                 jz      short loc_409EDC
.text:00409ED8                 cmp     al, 3Dh ; '='
.text:00409EDA                 jnz     short loc_409ED0
.text:00409EDC
.text:00409EDC loc_409EDC:                             ; CODE XREF: sub_409C00+2BF↑j
.text:00409EDC                                         ; sub_409C00+2C3↑j ...
.text:00409EDC                 mov     [esp+arg_30], 0
.text:00409EE4                 mov     esi, [esp+arg_68]
.text:00409EE8                 mov     ebx, [esi]
.text:00409EEA                 test    ebx, ebx
.text:00409EEC                 mov     edx, ebx
.text:00409EEE                 jz      loc_40A110
.text:00409EF4                 lea     esi, [esi+0]
.text:00409EFA                 lea     edi, [edi+0]
.text:00409F00
.text:00409F00 loc_409F00:                             ; CODE XREF: sub_409C00+32E↓j
.text:00409F00                 mov     [esp+Str2], ecx ; Str2
.text:00409F04                 mov     ebx, edi
.text:00409F06                 sub     ebx, ecx
.text:00409F08                 mov     [esp+MaxCount], ebx ; MaxCount
.text:00409F0C                 mov     [esp+0], edx    ; Str1
.text:00409F0F                 call    strncmp
.text:00409F14                 test    eax, eax
.text:00409F16                 jz      loc_40A6A6
.text:00409F1C
.text:00409F1C loc_409F1C:                             ; CODE XREF: sub_409C00+ADF↓j
.text:00409F1C                                         ; sub_409C00+AF4↓j ...
.text:00409F1C                 inc     [esp+arg_30]
.text:00409F20                 add     esi, 10h
.text:00409F23                 mov     ecx, [esi]
.text:00409F25                 test    ecx, ecx
.text:00409F27                 mov     edx, ecx
.text:00409F29                 jz      short loc_409F30
.text:00409F2B                 mov     ecx, [ebp+14h]
.text:00409F2E                 jmp     short loc_409F00
.text:00409F30 ; ---------------------------------------------------------------------------
.text:00409F30
.text:00409F30 loc_409F30:                             ; CODE XREF: sub_409C00+329↑j
.text:00409F30                                         ; sub_409C00+B25↓j
.text:00409F30                 mov     esi, [esp+arg_38]
.text:00409F34                 test    esi, esi
.text:00409F36                 jz      short loc_409F44
.text:00409F38                 mov     edx, [esp+arg_3C]
.text:00409F3C                 test    edx, edx
.text:00409F3E                 jz      loc_40A650
.text:00409F44
.text:00409F44 loc_409F44:                             ; CODE XREF: sub_409C00+336↑j
.text:00409F44                 mov     eax, [esp+arg_40]
.text:00409F48                 test    eax, eax
.text:00409F4A                 jz      loc_40A110
.text:00409F50                 mov     ecx, [ebp+0]
.text:00409F53                 lea     eax, [ecx+1]
.text:00409F56                 mov     [ebp+0], eax
.text:00409F59                 cmp     byte ptr [edi], 0
.text:00409F5C                 jz      loc_40A070
.text:00409F62                 mov     ecx, [esp+arg_40]
.text:00409F66                 mov     esi, [ecx+4]
.text:00409F69                 test    esi, esi
.text:00409F6B                 jz      short loc_409FB6
.text:00409F6D                 lea     ebx, [edi+1]
.text:00409F70                 mov     [ebp+0Ch], ebx
.text:00409F73
.text:00409F73 loc_409F73:                             ; CODE XREF: sub_409C00+478↓j
.text:00409F73                                         ; sub_409C00+494↓j
.text:00409F73                 mov     ebx, [ebp+14h]
.text:00409F76                 mov     [esp+0], ebx    ; Str
.text:00409F79                 call    strlen
.text:00409F7E                 add     [ebp+14h], eax
.text:00409F81                 mov     esi, [esp+arg_6C]
.text:00409F85                 test    esi, esi
.text:00409F87                 jz      short loc_409F93
.text:00409F89                 mov     ebp, [esp+arg_34]
.text:00409F8D                 mov     ecx, [esp+arg_6C]
.text:00409F91                 mov     [ecx], ebp
.text:00409F93
.text:00409F93 loc_409F93:                             ; CODE XREF: sub_409C00+387↑j
.text:00409F93                 mov     eax, [esp+arg_40]
.text:00409F97                 mov     ecx, [eax+8]
.text:00409F9A                 test    ecx, ecx
.text:00409F9C                 jnz     short loc_409FAA
.text:00409F9E                 mov     ecx, [esp+arg_40]
.text:00409FA2
.text:00409FA2 loc_409FA2:                             ; CODE XREF: sub_409C00+7F3↓j
.text:00409FA2                 mov     eax, [ecx+0Ch]
.text:00409FA5                 jmp     loc_409E27
.text:00409FAA ; ---------------------------------------------------------------------------
.text:00409FAA
.text:00409FAA loc_409FAA:                             ; CODE XREF: sub_409C00+39C↑j
.text:00409FAA                                         ; sub_409C00+7E9↓j
.text:00409FAA                 mov     esi, [eax+0Ch]
.text:00409FAD                 xor     eax, eax
.text:00409FAF                 mov     [ecx], esi
.text:00409FB1                 jmp     loc_409E27
.text:00409FB6 ; ---------------------------------------------------------------------------
.text:00409FB6
.text:00409FB6 loc_409FB6:                             ; CODE XREF: sub_409C00+36B↑j
.text:00409FB6                 mov     edi, [esp+arg_44]
.text:00409FBA                 test    edi, edi
.text:00409FBC                 jz      short loc_40A010
.text:00409FBE                 mov     esi, [esp+arg_60]
.text:00409FC2                 mov     edx, [esi+eax*4-4]
.text:00409FC6                 cmp     byte ptr [edx+1], 2Dh ; '-'
.text:00409FCA                 jz      short loc_40A032
.text:00409FCC                 mov     dword ptr [esp+0], offset sub_409AA0
.text:00409FD3                 call    ds:libintl_gettext
.text:00409FD9                 mov     edx, [esp+arg_40]
.text:00409FDD                 mov     edi, [edx]
.text:00409FDF                 mov     [esp+arg_C], edi
.text:00409FE3                 mov     ebx, [ebp+0]
.text:00409FE6                 mov     edi, [esp+arg_60]
.text:00409FEA                 mov     ecx, [edi+ebx*4-4]
.text:00409FEE                 movsx   esi, byte ptr [ecx]
.text:00409FF1                 mov     ecx, ds:_iob
.text:00409FF7                 add     ecx, 40h ; '@'
.text:00409FFA                 mov     [esp+arg_8], esi
.text:00409FFE                 mov     ebx, [edi]
.text:0040A000                 mov     [esp+Str2], eax ; Format
.text:0040A004                 mov     [esp+0], ecx    ; Stream
.text:0040A007                 mov     [esp+MaxCount], ebx
.text:0040A00B                 call    fprintf
.text:0040A010
.text:0040A010 loc_40A010:                             ; CODE XREF: sub_409C00+3BC↑j
.text:0040A010                                         ; sub_409C00+468↓j
.text:0040A010                 mov     ecx, [ebp+14h]
.text:0040A013                 mov     [esp+0], ecx    ; Str
.text:0040A016                 call    strlen
.text:0040A01B                 add     [ebp+14h], eax
.text:0040A01E                 mov     eax, [esp+arg_40]
.text:0040A022                 mov     esi, [eax+0Ch]
.text:0040A025                 mov     [ebp+8], esi
.text:0040A028
.text:0040A028 loc_40A028:                             ; CODE XREF: sub_409C00+5B5↓j
.text:0040A028                                         ; sub_409C00+80E↓j ...
.text:0040A028                 mov     eax, 3Fh ; '?'
.text:0040A02D                 jmp     loc_409E27
.text:0040A032 ; ---------------------------------------------------------------------------
.text:0040A032
.text:0040A032 loc_40A032:                             ; CODE XREF: sub_409C00+3CA↑j
.text:0040A032                 mov     dword ptr [esp+0], offset sub_409AE0
.text:0040A039                 call    ds:libintl_gettext
.text:0040A03F                 mov     edx, [esp+arg_40]
.text:0040A043                 mov     edi, [esp+arg_60]
.text:0040A047                 mov     ecx, ds:_iob
.text:0040A04D                 mov     esi, [edx]
.text:0040A04F                 add     ecx, 40h ; '@'
.text:0040A052                 mov     [esp+arg_8], esi
.text:0040A056                 mov     ebx, [edi]
.text:0040A058                 mov     [esp+Str2], eax ; Format
.text:0040A05C                 mov     [esp+0], ecx    ; Stream
.text:0040A05F                 mov     [esp+MaxCount], ebx
.text:0040A063                 call    fprintf
.text:0040A068                 jmp     short loc_40A010
.text:0040A068 ; END OF FUNCTION CHUNK FOR sub_409C00
.text:0040A068 ; ---------------------------------------------------------------------------
.text:0040A06A                 align 10h
.text:0040A070 ; START OF FUNCTION CHUNK FOR sub_409C00
.text:0040A070
.text:0040A070 loc_40A070:                             ; CODE XREF: sub_409C00+35C↑j
.text:0040A070                 mov     ebx, [esp+arg_40]
.text:0040A074                 cmp     dword ptr [ebx+4], 1
.text:0040A078                 jnz     loc_409F73
.text:0040A07E                 cmp     eax, [esp+arg_5C]
.text:0040A082                 jge     short loc_40A099
.text:0040A084                 mov     ebx, [esp+arg_60]
.text:0040A088                 lea     edi, [ecx+2]
.text:0040A08B                 mov     [ebp+0], edi
.text:0040A08E                 mov     esi, [ebx+eax*4]
.text:0040A091                 mov     [ebp+0Ch], esi
.text:0040A094                 jmp     loc_409F73
.text:0040A099 ; ---------------------------------------------------------------------------
.text:0040A099
.text:0040A099 loc_40A099:                             ; CODE XREF: sub_409C00+482↑j
.text:0040A099                 mov     edx, [esp+arg_44]
.text:0040A09D                 test    edx, edx
.text:0040A09F                 jnz     short loc_40A0D0
.text:0040A0A1
.text:0040A0A1 loc_40A0A1:                             ; CODE XREF: sub_409C00+507↓j
.text:0040A0A1                 mov     edx, [ebp+14h]
.text:0040A0A4                 mov     [esp+0], edx    ; Str
.text:0040A0A7                 call    strlen
.text:0040A0AC                 add     [ebp+14h], eax
.text:0040A0AF                 mov     eax, [esp+arg_40]
.text:0040A0B3                 mov     edi, [eax+0Ch]
.text:0040A0B6                 mov     [ebp+8], edi
.text:0040A0B9
.text:0040A0B9 loc_40A0B9:                             ; CODE XREF: sub_409C00+892↓j
.text:0040A0B9                 mov     ebp, [esp+Str]
.text:0040A0BD                 cmp     byte ptr [ebp+0], 3Ah ; ':'
.text:0040A0C1                 setnz   bl
.text:0040A0C4                 movzx   esi, bl
.text:0040A0C7                 lea     eax, [esi+esi*4+3Ah]
.text:0040A0CB                 jmp     loc_409E27
.text:0040A0D0 ; ---------------------------------------------------------------------------
.text:0040A0D0
.text:0040A0D0 loc_40A0D0:                             ; CODE XREF: sub_409C00+49F↑j
.text:0040A0D0                 mov     dword ptr [esp+0], offset sub_409B20
.text:0040A0D7                 call    ds:libintl_gettext
.text:0040A0DD                 mov     ecx, [ebp+0]
.text:0040A0E0                 mov     esi, [esp+arg_60]
.text:0040A0E4                 mov     ebx, [esi+ecx*4-4]
.text:0040A0E8                 mov     ecx, ds:_iob
.text:0040A0EE                 mov     [esp+arg_8], ebx
.text:0040A0F2                 mov     edi, [esi]
.text:0040A0F4                 add     ecx, 40h ; '@'
.text:0040A0F7                 mov     [esp+Str2], eax ; Format
.text:0040A0FB                 mov     [esp+0], ecx    ; Stream
.text:0040A0FE                 mov     [esp+MaxCount], edi
.text:0040A102                 call    fprintf
.text:0040A107                 jmp     short loc_40A0A1
.text:0040A107 ; END OF FUNCTION CHUNK FOR sub_409C00
.text:0040A107 ; ---------------------------------------------------------------------------
.text:0040A109                 align 10h
.text:0040A110 ; START OF FUNCTION CHUNK FOR sub_409C00
.text:0040A110
.text:0040A110 loc_40A110:                             ; CODE XREF: sub_409C00+2EE↑j
.text:0040A110                                         ; sub_409C00+34A↑j
.text:0040A110                 mov     eax, [esp+arg_70]
.text:0040A114                 test    eax, eax
.text:0040A116                 jz      short loc_40A146
.text:0040A118                 mov     ebx, [ebp+0]
.text:0040A11B                 mov     esi, [esp+arg_60]
.text:0040A11F                 mov     edi, [esi+ebx*4]
.text:0040A122                 cmp     byte ptr [edi+1], 2Dh ; '-'
.text:0040A126                 jz      short loc_40A149
.text:0040A128                 mov     ecx, [ebp+14h]
.text:0040A12B                 mov     edx, [esp+Str]
.text:0040A12F                 movsx   ebx, byte ptr [ecx]
.text:0040A132                 mov     [esp+0], edx    ; Str
.text:0040A135                 mov     [esp+Str2], ebx ; Val
.text:0040A139                 call    strchr
.text:0040A13E                 test    eax, eax
.text:0040A140                 jnz     loc_40A1F0
.text:0040A146
.text:0040A146 loc_40A146:                             ; CODE XREF: sub_409C00+516↑j
.text:0040A146                 mov     ebx, [ebp+0]
.text:0040A149
.text:0040A149 loc_40A149:                             ; CODE XREF: sub_409C00+526↑j
.text:0040A149                 mov     eax, [esp+arg_44]
.text:0040A14D                 test    eax, eax
.text:0040A14F                 jz      short loc_40A1A1
.text:0040A151                 mov     esi, [esp+arg_60]
.text:0040A155                 mov     edi, [esi+ebx*4]
.text:0040A158                 cmp     byte ptr [edi+1], 2Dh ; '-'
.text:0040A15C                 jz      short loc_40A1BA
.text:0040A15E                 mov     dword ptr [esp+0], offset sub_409B60
.text:0040A165                 call    ds:libintl_gettext
.text:0040A16B                 mov     edi, [ebp+14h]
.text:0040A16E                 mov     [esp+arg_C], edi
.text:0040A172                 mov     ebx, [ebp+0]
.text:0040A175                 mov     edi, [esp+arg_60]
.text:0040A179                 mov     esi, [edi+ebx*4]
.text:0040A17C                 movsx   ecx, byte ptr [esi]
.text:0040A17F                 mov     esi, ds:_iob
.text:0040A185                 add     esi, 40h ; '@'
.text:0040A188                 mov     [esp+arg_8], ecx
.text:0040A18C                 mov     ebx, [edi]
.text:0040A18E                 mov     [esp+Str2], eax ; Format
.text:0040A192                 mov     [esp+0], esi    ; Stream
.text:0040A195                 mov     [esp+MaxCount], ebx
.text:0040A199                 call    fprintf
.text:0040A19E
.text:0040A19E loc_40A19E:                             ; CODE XREF: sub_409C00+5ED↓j
.text:0040A19E                 mov     ebx, [ebp+0]
.text:0040A1A1
.text:0040A1A1 loc_40A1A1:                             ; CODE XREF: sub_409C00+54F↑j
.text:0040A1A1                 mov     dword ptr [ebp+14h], offset loc_409B80
.text:0040A1A8                 lea     edx, [ebx+1]
.text:0040A1AB                 mov     [ebp+0], edx
.text:0040A1AE
.text:0040A1AE loc_40A1AE:                             ; CODE XREF: sub_409C00+A69↓j
.text:0040A1AE                 mov     dword ptr [ebp+8], 0
.text:0040A1B5                 jmp     loc_40A028
.text:0040A1BA ; ---------------------------------------------------------------------------
.text:0040A1BA
.text:0040A1BA loc_40A1BA:                             ; CODE XREF: sub_409C00+55C↑j
.text:0040A1BA                 mov     dword ptr [esp+0], offset sub_409BA0
.text:0040A1C1                 call    ds:libintl_gettext
.text:0040A1C7                 mov     ecx, [ebp+14h]
.text:0040A1CA                 mov     edi, [esp+arg_60]
.text:0040A1CE                 mov     edx, ds:_iob
.text:0040A1D4                 mov     [esp+arg_8], ecx
.text:0040A1D8                 mov     ebx, [edi]
.text:0040A1DA                 add     edx, 40h ; '@'
.text:0040A1DD                 mov     [esp+Str2], eax ; Format
.text:0040A1E1                 mov     [esp+MaxCount], ebx
.text:0040A1E5                 mov     [esp+0], edx    ; Stream
.text:0040A1E8                 call    fprintf
.text:0040A1ED                 jmp     short loc_40A19E
.text:0040A1ED ; END OF FUNCTION CHUNK FOR sub_409C00
.text:0040A1ED ; ---------------------------------------------------------------------------
.text:0040A1EF                 align 10h
.text:0040A1F0 ; START OF FUNCTION CHUNK FOR sub_409C00
.text:0040A1F0
.text:0040A1F0 loc_40A1F0:                             ; CODE XREF: sub_409C00+266↑j
.text:0040A1F0                                         ; sub_409C00+285↑j ...
.text:0040A1F0                 mov     esi, [ebp+14h]
.text:0040A1F3                 movzx   ebx, byte ptr [esi]
.text:0040A1F6                 inc     esi
.text:0040A1F7                 mov     [ebp+14h], esi
.text:0040A1FA                 mov     ecx, [esp+Str]
.text:0040A1FE                 movsx   esi, bl
.text:0040A201                 mov     [esp+Str2], esi ; Val
.text:0040A205                 mov     edi, esi
.text:0040A207                 mov     [esp+0], ecx    ; Str
.text:0040A20A                 call    strchr
.text:0040A20F                 mov     ecx, [ebp+14h]
.text:0040A212                 cmp     byte ptr [ecx], 0
.text:0040A215                 jnz     short loc_40A21A
.text:0040A217                 inc     dword ptr [ebp+0]
.text:0040A21A
.text:0040A21A loc_40A21A:                             ; CODE XREF: sub_409C00+615↑j
.text:0040A21A                 test    eax, eax
.text:0040A21C                 jz      loc_40A600
.text:0040A222                 cmp     bl, 3Ah ; ':'
.text:0040A225                 jz      loc_40A600
.text:0040A22B                 cmp     byte ptr [eax], 57h ; 'W'
.text:0040A22E                 jz      loc_40A2E6
.text:0040A234                 movzx   edx, byte ptr [eax+1]
.text:0040A238
.text:0040A238 loc_40A238:                             ; CODE XREF: sub_409C00+6ED↓j
.text:0040A238                 cmp     dl, 3Ah ; ':'
.text:0040A23B                 jz      short loc_40A244
.text:0040A23D
.text:0040A23D loc_40A23D:                             ; CODE XREF: sub_409C00+660↓j
.text:0040A23D                 mov     eax, esi
.text:0040A23F                 jmp     loc_409E27
.text:0040A244 ; ---------------------------------------------------------------------------
.text:0040A244
.text:0040A244 loc_40A244:                             ; CODE XREF: sub_409C00+63B↑j
.text:0040A244                 cmp     byte ptr [eax+2], 3Ah ; ':'
.text:0040A248                 jz      loc_40A2D1
.text:0040A24E                 cmp     byte ptr [ecx], 0
.text:0040A251                 jz      short loc_40A262
.text:0040A253
.text:0040A253 loc_40A253:                             ; CODE XREF: sub_409C00+6D4↓j
.text:0040A253                 inc     dword ptr [ebp+0]
.text:0040A256                 mov     [ebp+0Ch], ecx
.text:0040A259
.text:0040A259 loc_40A259:                             ; CODE XREF: sub_409C00+67B↓j
.text:0040A259                                         ; sub_409C00+696↓j ...
.text:0040A259                 mov     dword ptr [ebp+14h], 0
.text:0040A260                 jmp     short loc_40A23D
.text:0040A262 ; ---------------------------------------------------------------------------
.text:0040A262
.text:0040A262 loc_40A262:                             ; CODE XREF: sub_409C00+651↑j
.text:0040A262                 mov     ecx, [ebp+0]
.text:0040A265                 cmp     ecx, [esp+arg_5C]
.text:0040A269                 jz      short loc_40A27D
.text:0040A26B                 mov     eax, [esp+arg_60]
.text:0040A26F                 lea     edx, [ecx+1]
.text:0040A272                 mov     [ebp+0], edx
.text:0040A275                 mov     ebx, [eax+ecx*4]
.text:0040A278                 mov     [ebp+0Ch], ebx
.text:0040A27B                 jmp     short loc_40A259
.text:0040A27D ; ---------------------------------------------------------------------------
.text:0040A27D
.text:0040A27D loc_40A27D:                             ; CODE XREF: sub_409C00+669↑j
.text:0040A27D                 mov     ecx, [esp+arg_44]
.text:0040A281                 test    ecx, ecx
.text:0040A283                 jnz     short loc_40A29F
.text:0040A285
.text:0040A285 loc_40A285:                             ; CODE XREF: sub_409C00+6CF↓j
.text:0040A285                 mov     [ebp+8], edi
.text:0040A288                 mov     edi, [esp+Str]
.text:0040A28C                 cmp     byte ptr [edi], 3Ah ; ':'
.text:0040A28F                 jz      short loc_40A298
.text:0040A291                 mov     esi, 3Fh ; '?'
.text:0040A296                 jmp     short loc_40A259
.text:0040A298 ; ---------------------------------------------------------------------------
.text:0040A298
.text:0040A298 loc_40A298:                             ; CODE XREF: sub_409C00+68F↑j
.text:0040A298                 mov     esi, 3Ah ; ':'
.text:0040A29D                 jmp     short loc_40A259
.text:0040A29F ; ---------------------------------------------------------------------------
.text:0040A29F
.text:0040A29F loc_40A29F:                             ; CODE XREF: sub_409C00+683↑j
.text:0040A29F                 mov     dword ptr [esp+0], 409BC0h
.text:0040A2A6                 call    ds:libintl_gettext
.text:0040A2AC                 mov     [esp+arg_8], edi
.text:0040A2B0                 mov     ebx, [esp+arg_60]
.text:0040A2B4                 mov     edx, ds:_iob
.text:0040A2BA                 mov     esi, [ebx]
.text:0040A2BC                 add     edx, 40h ; '@'
.text:0040A2BF                 mov     [esp+Str2], eax ; Format
.text:0040A2C3                 mov     [esp+MaxCount], esi
.text:0040A2C7                 mov     [esp+0], edx    ; Stream
.text:0040A2CA                 call    fprintf
.text:0040A2CF                 jmp     short loc_40A285
.text:0040A2D1 ; ---------------------------------------------------------------------------
.text:0040A2D1
.text:0040A2D1 loc_40A2D1:                             ; CODE XREF: sub_409C00+648↑j
.text:0040A2D1                 cmp     byte ptr [ecx], 0
.text:0040A2D4                 jnz     loc_40A253
.text:0040A2DA                 mov     dword ptr [ebp+0Ch], 0
.text:0040A2E1                 jmp     loc_40A259
.text:0040A2E6 ; ---------------------------------------------------------------------------
.text:0040A2E6
.text:0040A2E6 loc_40A2E6:                             ; CODE XREF: sub_409C00+62E↑j
.text:0040A2E6                 movzx   edx, byte ptr [eax+1]
.text:0040A2EA                 cmp     dl, 3Bh ; ';'
.text:0040A2ED                 jnz     loc_40A238
.text:0040A2F3                 mov     [esp+arg_2C], 0
.text:0040A2FB                 mov     [esp+arg_28], 0
.text:0040A303                 mov     [esp+arg_24], 0
.text:0040A30B                 mov     [esp+arg_20], 0
.text:0040A313                 cmp     byte ptr [ecx], 0
.text:0040A316                 jz      loc_40A58B
.text:0040A31C                 inc     dword ptr [ebp+0]
.text:0040A31F                 mov     [ebp+0Ch], ecx
.text:0040A322
.text:0040A322 loc_40A322:                             ; CODE XREF: sub_409C00+9A4↓j
.text:0040A322                 mov     edi, [ebp+0Ch]
.text:0040A325                 mov     [ebp+14h], edi
.text:0040A328                 movzx   eax, byte ptr [edi]
.text:0040A32B                 test    al, al
.text:0040A32D                 jz      short loc_40A33F
.text:0040A32F                 cmp     al, 3Dh ; '='
.text:0040A331                 jz      short loc_40A33F
.text:0040A333
.text:0040A333 loc_40A333:                             ; CODE XREF: sub_409C00+73D↓j
.text:0040A333                 inc     edi
.text:0040A334                 movzx   eax, byte ptr [edi]
.text:0040A337                 test    al, al
.text:0040A339                 jz      short loc_40A33F
.text:0040A33B                 cmp     al, 3Dh ; '='
.text:0040A33D                 jnz     short loc_40A333
.text:0040A33F
.text:0040A33F loc_40A33F:                             ; CODE XREF: sub_409C00+72D↑j
.text:0040A33F                                         ; sub_409C00+731↑j ...
.text:0040A33F                 mov     [esp+arg_1C], 0
.text:0040A347                 mov     esi, [esp+arg_68]
.text:0040A34B                 mov     eax, [esi]
.text:0040A34D                 test    eax, eax
.text:0040A34F                 jz      loc_40A4D0
.text:0040A355                 mov     ecx, eax
.text:0040A357
.text:0040A357 loc_40A357:                             ; CODE XREF: sub_409C00+783↓j
.text:0040A357                 mov     ebx, [ebp+14h]
.text:0040A35A                 mov     eax, edi
.text:0040A35C                 mov     [esp+0], ecx    ; Str1
.text:0040A35F                 sub     eax, ebx
.text:0040A361                 mov     [esp+MaxCount], eax ; MaxCount
.text:0040A365                 mov     [esp+Str2], ebx ; Str2
.text:0040A369                 call    strncmp
.text:0040A36E                 test    eax, eax
.text:0040A370                 jz      loc_40A537
.text:0040A376
.text:0040A376 loc_40A376:                             ; CODE XREF: sub_409C00+95C↓j
.text:0040A376                                         ; sub_409C00+96D↓j
.text:0040A376                 inc     [esp+arg_1C]
.text:0040A37A                 add     esi, 10h
.text:0040A37D                 mov     edx, [esi]
.text:0040A37F                 test    edx, edx
.text:0040A381                 mov     ecx, edx
.text:0040A383                 jnz     short loc_40A357
.text:0040A385
.text:0040A385 loc_40A385:                             ; CODE XREF: sub_409C00+986↓j
.text:0040A385                 mov     esi, [esp+arg_24]
.text:0040A389                 test    esi, esi
.text:0040A38B                 jz      short loc_40A399
.text:0040A38D                 mov     ebx, [esp+arg_28]
.text:0040A391                 test    ebx, ebx
.text:0040A393                 jz      loc_40A4E1
.text:0040A399
.text:0040A399 loc_40A399:                             ; CODE XREF: sub_409C00+78B↑j
.text:0040A399                 mov     esi, [esp+arg_2C]
.text:0040A39D                 test    esi, esi
.text:0040A39F                 jz      loc_40A4D0
.text:0040A3A5                 cmp     byte ptr [edi], 0
.text:0040A3A8                 jz      loc_40A450
.text:0040A3AE                 mov     ecx, [esp+arg_2C]
.text:0040A3B2                 mov     ebx, [ecx+4]
.text:0040A3B5                 test    ebx, ebx
.text:0040A3B7                 jz      short loc_40A3F8
.text:0040A3B9                 lea     edx, [edi+1]
.text:0040A3BC                 mov     [ebp+0Ch], edx
.text:0040A3BF
.text:0040A3BF loc_40A3BF:                             ; CODE XREF: sub_409C00+858↓j
.text:0040A3BF                                         ; sub_409C00+877↓j
.text:0040A3BF                 mov     edi, [ebp+14h]
.text:0040A3C2                 mov     [esp+0], edi    ; Str
.text:0040A3C5                 call    strlen
.text:0040A3CA                 add     [ebp+14h], eax
.text:0040A3CD                 mov     eax, [esp+arg_6C]
.text:0040A3D1                 test    eax, eax
.text:0040A3D3                 jz      short loc_40A3E0
.text:0040A3D5                 mov     edx, [esp+arg_20]
.text:0040A3D9                 mov     ebp, [esp+arg_6C]
.text:0040A3DD                 mov     [ebp+0], edx
.text:0040A3E0
.text:0040A3E0 loc_40A3E0:                             ; CODE XREF: sub_409C00+7D3↑j
.text:0040A3E0                 mov     eax, [esp+arg_2C]
.text:0040A3E4                 mov     ecx, [eax+8]
.text:0040A3E7                 test    ecx, ecx
.text:0040A3E9                 jnz     loc_409FAA
.text:0040A3EF                 mov     ecx, [esp+arg_2C]
.text:0040A3F3                 jmp     loc_409FA2
.text:0040A3F8 ; ---------------------------------------------------------------------------
.text:0040A3F8
.text:0040A3F8 loc_40A3F8:                             ; CODE XREF: sub_409C00+7B7↑j
.text:0040A3F8                 mov     eax, [esp+arg_44]
.text:0040A3FC                 test    eax, eax
.text:0040A3FE                 jnz     short loc_40A413
.text:0040A400
.text:0040A400 loc_40A400:                             ; CODE XREF: sub_409C00+849↓j
.text:0040A400                 mov     ecx, [ebp+14h]
.text:0040A403                 mov     [esp+0], ecx    ; Str
.text:0040A406                 call    strlen
.text:0040A40B                 add     [ebp+14h], eax
.text:0040A40E                 jmp     loc_40A028
.text:0040A413 ; ---------------------------------------------------------------------------
.text:0040A413
.text:0040A413 loc_40A413:                             ; CODE XREF: sub_409C00+7FE↑j
.text:0040A413                 mov     dword ptr [esp+0], offset sub_409C00
.text:0040A41A                 call    ds:libintl_gettext
.text:0040A420                 mov     edx, [esp+arg_2C]
.text:0040A424                 mov     ebx, [esp+arg_60]
.text:0040A428                 mov     edi, [edx]
.text:0040A42A                 mov     [esp+arg_8], edi
.text:0040A42E                 mov     edi, ds:_iob
.text:0040A434                 mov     esi, [ebx]
.text:0040A436                 mov     [esp+Str2], eax ; Format
.text:0040A43A                 add     edi, 40h ; '@'
.text:0040A43D                 mov     [esp+MaxCount], esi
.text:0040A441                 mov     [esp+0], edi    ; Stream
.text:0040A444                 call    fprintf
.text:0040A449                 jmp     short loc_40A400
.text:0040A449 ; END OF FUNCTION CHUNK FOR sub_409C00
.text:0040A449 ; ---------------------------------------------------------------------------
.text:0040A44B                 align 10h
.text:0040A450 ; START OF FUNCTION CHUNK FOR sub_409C00
.text:0040A450
.text:0040A450 loc_40A450:                             ; CODE XREF: sub_409C00+7A8↑j
.text:0040A450                 mov     esi, [esp+arg_2C]
.text:0040A454                 cmp     dword ptr [esi+4], 1
.text:0040A458                 jnz     loc_40A3BF
.text:0040A45E                 mov     ecx, [ebp+0]
.text:0040A461                 cmp     ecx, [esp+arg_5C]
.text:0040A465                 jge     short loc_40A47C
.text:0040A467                 mov     eax, [esp+arg_60]
.text:0040A46B                 lea     ebx, [ecx+1]
.text:0040A46E                 mov     [ebp+0], ebx
.text:0040A471                 mov     edi, [eax+ecx*4]
.text:0040A474                 mov     [ebp+0Ch], edi
.text:0040A477                 jmp     loc_40A3BF
.text:0040A47C ; ---------------------------------------------------------------------------
.text:0040A47C
.text:0040A47C loc_40A47C:                             ; CODE XREF: sub_409C00+865↑j
.text:0040A47C                 mov     edx, [esp+arg_44]
.text:0040A480                 test    edx, edx
.text:0040A482                 jnz     short loc_40A497
.text:0040A484
.text:0040A484 loc_40A484:                             ; CODE XREF: sub_409C00+8CE↓j
.text:0040A484                 mov     edx, [ebp+14h]
.text:0040A487                 mov     [esp+0], edx    ; Str
.text:0040A48A                 call    strlen
.text:0040A48F                 add     [ebp+14h], eax
.text:0040A492                 jmp     loc_40A0B9
.text:0040A497 ; ---------------------------------------------------------------------------
.text:0040A497
.text:0040A497 loc_40A497:                             ; CODE XREF: sub_409C00+882↑j
.text:0040A497                 mov     dword ptr [esp+0], offset sub_409B20
.text:0040A49E                 call    ds:libintl_gettext
.text:0040A4A4                 mov     ecx, [ebp+0]
.text:0040A4A7                 mov     ebx, [esp+arg_60]
.text:0040A4AB                 mov     edi, [ebx+ecx*4-4]
.text:0040A4AF                 mov     ecx, ds:_iob
.text:0040A4B5                 mov     [esp+arg_8], edi
.text:0040A4B9                 mov     esi, [ebx]
.text:0040A4BB                 add     ecx, 40h ; '@'
.text:0040A4BE                 mov     [esp+Str2], eax ; Format
.text:0040A4C2                 mov     [esp+0], ecx    ; Stream
.text:0040A4C5                 mov     [esp+MaxCount], esi
.text:0040A4C9                 call    fprintf
.text:0040A4CE                 jmp     short loc_40A484
.text:0040A4D0 ; ---------------------------------------------------------------------------
.text:0040A4D0
.text:0040A4D0 loc_40A4D0:                             ; CODE XREF: sub_409C00+74F↑j
.text:0040A4D0                                         ; sub_409C00+79F↑j
.text:0040A4D0                 mov     dword ptr [ebp+14h], 0
.text:0040A4D7                 mov     eax, 57h ; 'W'
.text:0040A4DC                 jmp     loc_409E27
.text:0040A4E1 ; ---------------------------------------------------------------------------
.text:0040A4E1
.text:0040A4E1 loc_40A4E1:                             ; CODE XREF: sub_409C00+793↑j
.text:0040A4E1                 mov     edi, [esp+arg_44]
.text:0040A4E5                 test    edi, edi
.text:0040A4E7                 jnz     short loc_40A4FF
.text:0040A4E9
.text:0040A4E9 loc_40A4E9:                             ; CODE XREF: sub_409C00+935↓j
.text:0040A4E9                 mov     edx, [ebp+14h]
.text:0040A4EC                 mov     [esp+0], edx    ; Str
.text:0040A4EF                 call    strlen
.text:0040A4F4                 add     [ebp+14h], eax
.text:0040A4F7                 inc     dword ptr [ebp+0]
.text:0040A4FA                 jmp     loc_40A028
.text:0040A4FF ; ---------------------------------------------------------------------------
.text:0040A4FF
.text:0040A4FF loc_40A4FF:                             ; CODE XREF: sub_409C00+8E7↑j
.text:0040A4FF                 mov     dword ptr [esp+0], offset sub_409C40
.text:0040A506                 call    ds:libintl_gettext
.text:0040A50C                 mov     ecx, [ebp+0]
.text:0040A50F                 mov     ebx, [esp+arg_60]
.text:0040A513                 mov     edi, [ebx+ecx*4]
.text:0040A516                 mov     ecx, ds:_iob
.text:0040A51C                 mov     [esp+arg_8], edi
.text:0040A520                 mov     esi, [ebx]
.text:0040A522                 add     ecx, 40h ; '@'
.text:0040A525                 mov     [esp+Str2], eax ; Format
.text:0040A529                 mov     [esp+0], ecx    ; Stream
.text:0040A52C                 mov     [esp+MaxCount], esi
.text:0040A530                 call    fprintf
.text:0040A535                 jmp     short loc_40A4E9
.text:0040A537 ; ---------------------------------------------------------------------------
.text:0040A537
.text:0040A537 loc_40A537:                             ; CODE XREF: sub_409C00+770↑j
.text:0040A537                 mov     edx, [ebp+14h]
.text:0040A53A                 mov     ebx, edi
.text:0040A53C                 mov     ecx, [esi]
.text:0040A53E                 sub     ebx, edx
.text:0040A540                 mov     [esp+0], ecx    ; Str
.text:0040A543                 call    strlen
.text:0040A548                 cmp     ebx, eax
.text:0040A54A                 jz      short loc_40A572
.text:0040A54C                 mov     ebx, [esp+arg_2C]
.text:0040A550                 test    ebx, ebx
.text:0040A552                 jz      short loc_40A561
.text:0040A554                 mov     [esp+arg_24], 1
.text:0040A55C                 jmp     loc_40A376
.text:0040A561 ; ---------------------------------------------------------------------------
.text:0040A561
.text:0040A561 loc_40A561:                             ; CODE XREF: sub_409C00+952↑j
.text:0040A561                 mov     [esp+arg_2C], esi
.text:0040A565                 mov     ecx, [esp+arg_1C]
.text:0040A569                 mov     [esp+arg_20], ecx
.text:0040A56D                 jmp     loc_40A376
.text:0040A572 ; ---------------------------------------------------------------------------
.text:0040A572
.text:0040A572 loc_40A572:                             ; CODE XREF: sub_409C00+94A↑j
.text:0040A572                 mov     [esp+arg_2C], esi
.text:0040A576                 mov     eax, [esp+arg_1C]
.text:0040A57A                 mov     [esp+arg_28], 1
.text:0040A582                 mov     [esp+arg_20], eax
.text:0040A586                 jmp     loc_40A385
.text:0040A58B ; ---------------------------------------------------------------------------
.text:0040A58B
.text:0040A58B loc_40A58B:                             ; CODE XREF: sub_409C00+716↑j
.text:0040A58B                 mov     edx, [ebp+0]
.text:0040A58E                 cmp     edx, [esp+arg_5C]
.text:0040A592                 jz      short loc_40A5A9
.text:0040A594                 mov     ebx, [esp+arg_60]
.text:0040A598                 lea     esi, [edx+1]
.text:0040A59B                 mov     [ebp+0], esi
.text:0040A59E                 mov     edi, [ebx+edx*4]
.text:0040A5A1                 mov     [ebp+0Ch], edi
.text:0040A5A4                 jmp     loc_40A322
.text:0040A5A9 ; ---------------------------------------------------------------------------
.text:0040A5A9
.text:0040A5A9 loc_40A5A9:                             ; CODE XREF: sub_409C00+992↑j
.text:0040A5A9                 mov     edi, [esp+arg_44]
.text:0040A5AD                 test    edi, edi
.text:0040A5AF                 jnz     short loc_40A5CC
.text:0040A5B1
.text:0040A5B1 loc_40A5B1:                             ; CODE XREF: sub_409C00+9FC↓j
.text:0040A5B1                 mov     [ebp+8], esi
.text:0040A5B4                 mov     ebp, [esp+Str]
.text:0040A5B8                 cmp     byte ptr [ebp+0], 3Ah ; ':'
.text:0040A5BC                 jz      short loc_40A5C8
.text:0040A5BE                 mov     bl, 3Fh ; '?'
.text:0040A5C0
.text:0040A5C0 loc_40A5C0:                             ; CODE XREF: sub_409C00+9CA↓j
.text:0040A5C0                 movsx   eax, bl
.text:0040A5C3                 jmp     loc_409E27
.text:0040A5C8 ; ---------------------------------------------------------------------------
.text:0040A5C8
.text:0040A5C8 loc_40A5C8:                             ; CODE XREF: sub_409C00+9BC↑j
.text:0040A5C8                 mov     bl, 3Ah ; ':'
.text:0040A5CA                 jmp     short loc_40A5C0
.text:0040A5CC ; ---------------------------------------------------------------------------
.text:0040A5CC
.text:0040A5CC loc_40A5CC:                             ; CODE XREF: sub_409C00+9AF↑j
.text:0040A5CC                 mov     dword ptr [esp+0], 409BC0h
.text:0040A5D3                 call    ds:libintl_gettext
.text:0040A5D9                 mov     [esp+arg_8], esi
.text:0040A5DD                 mov     edx, [esp+arg_60]
.text:0040A5E1                 mov     ecx, ds:_iob
.text:0040A5E7                 mov     ebx, [edx]
.text:0040A5E9                 add     ecx, 40h ; '@'
.text:0040A5EC                 mov     [esp+Str2], eax ; Format
.text:0040A5F0                 mov     [esp+MaxCount], ebx
.text:0040A5F4                 mov     [esp+0], ecx    ; Stream
.text:0040A5F7                 call    fprintf
.text:0040A5FC                 jmp     short loc_40A5B1
.text:0040A5FC ; END OF FUNCTION CHUNK FOR sub_409C00
.text:0040A5FC ; ---------------------------------------------------------------------------
.text:0040A5FE                 align 10h
.text:0040A600 ; START OF FUNCTION CHUNK FOR sub_409C00
.text:0040A600
.text:0040A600 loc_40A600:                             ; CODE XREF: sub_409C00+61C↑j
.text:0040A600                                         ; sub_409C00+625↑j
.text:0040A600                 mov     eax, [esp+arg_44]
.text:0040A604                 test    eax, eax
.text:0040A606                 jz      short loc_40A63F
.text:0040A608                 mov     ebx, [ebp+1Ch]
.text:0040A60B                 test    ebx, ebx
.text:0040A60D                 jz      short loc_40A647
.text:0040A60F                 mov     dword ptr [esp+0], offset loc_409C61
.text:0040A616
.text:0040A616 loc_40A616:                             ; CODE XREF: sub_409C00+A4E↓j
.text:0040A616                 call    ds:libintl_gettext
.text:0040A61C                 mov     [esp+arg_8], esi
.text:0040A620                 mov     ebx, [esp+arg_60]
.text:0040A624                 mov     edx, ds:_iob
.text:0040A62A                 mov     esi, [ebx]
.text:0040A62C                 add     edx, 40h ; '@'
.text:0040A62F                 mov     [esp+Str2], eax ; Format
.text:0040A633                 mov     [esp+MaxCount], esi
.text:0040A637                 mov     [esp+0], edx    ; Stream
.text:0040A63A                 call    fprintf
.text:0040A63F
.text:0040A63F loc_40A63F:                             ; CODE XREF: sub_409C00+A06↑j
.text:0040A63F                 mov     [ebp+8], edi
.text:0040A642                 jmp     loc_40A028
.text:0040A647 ; ---------------------------------------------------------------------------
.text:0040A647
.text:0040A647 loc_40A647:                             ; CODE XREF: sub_409C00+A0D↑j
.text:0040A647                 mov     dword ptr [esp+0], offset loc_409C7B
.text:0040A64E                 jmp     short loc_40A616
.text:0040A650 ; ---------------------------------------------------------------------------
.text:0040A650
.text:0040A650 loc_40A650:                             ; CODE XREF: sub_409C00+33E↑j
.text:0040A650                 mov     edi, [esp+arg_44]
.text:0040A654                 test    edi, edi
.text:0040A656                 jnz     short loc_40A66E
.text:0040A658
.text:0040A658 loc_40A658:                             ; CODE XREF: sub_409C00+AA4↓j
.text:0040A658                 mov     edx, [ebp+14h]
.text:0040A65B                 mov     [esp+0], edx    ; Str
.text:0040A65E                 call    strlen
.text:0040A663                 add     [ebp+14h], eax
.text:0040A666                 inc     dword ptr [ebp+0]
.text:0040A669                 jmp     loc_40A1AE
.text:0040A66E ; ---------------------------------------------------------------------------
.text:0040A66E
.text:0040A66E loc_40A66E:                             ; CODE XREF: sub_409C00+A56↑j
.text:0040A66E                 mov     dword ptr [esp+0], offset loc_409C95
.text:0040A675                 call    ds:libintl_gettext
.text:0040A67B                 mov     ebx, [ebp+0]
.text:0040A67E                 mov     edi, [esp+arg_60]
.text:0040A682                 mov     ecx, [edi+ebx*4]
.text:0040A685                 mov     ebx, ds:_iob
.text:0040A68B                 mov     [esp+arg_8], ecx
.text:0040A68F                 mov     esi, [edi]
.text:0040A691                 add     ebx, 40h ; '@'
.text:0040A694                 mov     [esp+Str2], eax ; Format
.text:0040A698                 mov     [esp+0], ebx    ; Stream
.text:0040A69B                 mov     [esp+MaxCount], esi
.text:0040A69F                 call    fprintf
.text:0040A6A4                 jmp     short loc_40A658
.text:0040A6A6 ; ---------------------------------------------------------------------------
.text:0040A6A6
.text:0040A6A6 loc_40A6A6:                             ; CODE XREF: sub_409C00+316↑j
.text:0040A6A6                 mov     ecx, [ebp+14h]
.text:0040A6A9                 mov     ebx, edi
.text:0040A6AB                 mov     edx, [esi]
.text:0040A6AD                 sub     ebx, ecx
.text:0040A6AF                 mov     [esp+0], edx    ; Str
.text:0040A6B2                 call    strlen
.text:0040A6B7                 cmp     ebx, eax
.text:0040A6B9                 jz      short loc_40A711
.text:0040A6BB                 mov     ebx, [esp+arg_40]
.text:0040A6BF                 test    ebx, ebx
.text:0040A6C1                 jz      short loc_40A700
.text:0040A6C3                 mov     edx, [esp+arg_70]
.text:0040A6C7                 test    edx, edx
.text:0040A6C9                 jnz     short loc_40A6D7
.text:0040A6CB                 mov     ecx, [esp+arg_40]
.text:0040A6CF                 mov     ebx, [esi+4]
.text:0040A6D2                 cmp     [ecx+4], ebx
.text:0040A6D5                 jz      short loc_40A6E4
.text:0040A6D7
.text:0040A6D7 loc_40A6D7:                             ; CODE XREF: sub_409C00+AC9↑j
.text:0040A6D7                                         ; sub_409C00+AEA↓j ...
.text:0040A6D7                 mov     [esp+arg_38], 1
.text:0040A6DF                 jmp     loc_409F1C
.text:0040A6E4 ; ---------------------------------------------------------------------------
.text:0040A6E4
.text:0040A6E4 loc_40A6E4:                             ; CODE XREF: sub_409C00+AD5↑j
.text:0040A6E4                 mov     edx, [esi+8]
.text:0040A6E7                 cmp     [ecx+8], edx
.text:0040A6EA                 jnz     short loc_40A6D7
.text:0040A6EC                 mov     ebx, [esi+0Ch]
.text:0040A6EF                 cmp     [ecx+0Ch], ebx
.text:0040A6F2                 jnz     short loc_40A6D7
.text:0040A6F4                 jmp     loc_409F1C
.text:0040A6F4 ; END OF FUNCTION CHUNK FOR sub_409C00
.text:0040A6F4 ; ---------------------------------------------------------------------------
.text:0040A6F9                 align 10h
.text:0040A700 ; START OF FUNCTION CHUNK FOR sub_409C00
.text:0040A700
.text:0040A700 loc_40A700:                             ; CODE XREF: sub_409C00+AC1↑j
.text:0040A700                 mov     [esp+arg_40], esi
.text:0040A704                 mov     eax, [esp+arg_30]
.text:0040A708                 mov     [esp+arg_34], eax
.text:0040A70C                 jmp     loc_409F1C
.text:0040A711 ; ---------------------------------------------------------------------------
.text:0040A711
.text:0040A711 loc_40A711:                             ; CODE XREF: sub_409C00+AB9↑j
.text:0040A711                 mov     [esp+arg_40], esi
.text:0040A715                 mov     ecx, [esp+arg_30]
.text:0040A719                 mov     [esp+arg_3C], 1
.text:0040A721                 mov     [esp+arg_34], ecx
.text:0040A725                 jmp     loc_409F30
.text:0040A72A ; ---------------------------------------------------------------------------
.text:0040A72A
.text:0040A72A loc_40A72A:                             ; CODE XREF: sub_409C00+28F↑j
.text:0040A72A                 mov     eax, [esp+Str]
.text:0040A72E                 movsx   esi, dl
.text:0040A731                 mov     [esp+Str2], esi ; Val
.text:0040A735                 mov     [esp+0], eax    ; Str
.text:0040A738                 call    strchr
.text:0040A73D                 test    eax, eax
.text:0040A73F                 jnz     loc_40A1F0
.text:0040A745                 jmp     loc_409E95
.text:0040A74A ; ---------------------------------------------------------------------------
.text:0040A74A
.text:0040A74A loc_40A74A:                             ; CODE XREF: sub_409C00+24C↑j
.text:0040A74A                 mov     ecx, 1
.text:0040A74F                 jmp     loc_409E52
.text:0040A754 ; ---------------------------------------------------------------------------
.text:0040A754
.text:0040A754 loc_40A754:                             ; CODE XREF: sub_409C00+1A4↑j
.text:0040A754                                         ; sub_409C00+200↑j
.text:0040A754                 mov     eax, [ebp+20h]
.text:0040A757                 cmp     eax, [ebp+24h]
.text:0040A75A                 jz      loc_409E30
.text:0040A760                 mov     [ebp+0], eax
.text:0040A763                 jmp     loc_409E30
.text:0040A768 ; ---------------------------------------------------------------------------
.text:0040A768
.text:0040A768 loc_40A768:                             ; CODE XREF: sub_409C00+1CE↑j
.text:0040A768                 mov     [ebp+20h], eax
.text:0040A76B                 jmp     loc_409DF0
.text:0040A770 ; ---------------------------------------------------------------------------
.text:0040A770
.text:0040A770 loc_40A770:                             ; CODE XREF: sub_409C00+19A↑j
.text:0040A770                 mov     edx, [ebp+20h]
.text:0040A773                 mov     eax, [ebp+24h]
.text:0040A776                 cmp     edx, eax
.text:0040A778                 jz      short loc_40A7F0
.text:0040A77A                 cmp     eax, ebx
.text:0040A77C                 jz      short loc_40A791
.text:0040A77E                 mov     [esp+Str2], ebp
.text:0040A782                 mov     ebx, [esp+arg_60]
.text:0040A786                 mov     [esp+0], ebx
.text:0040A789                 call    sub_40A980
.text:0040A78E                 mov     ebx, [ebp+0]
.text:0040A791
.text:0040A791 loc_40A791:                             ; CODE XREF: sub_409C00+B7C↑j
.text:0040A791                                         ; sub_409C00+BF2↓j ...
.text:0040A791                 cmp     ebx, [esp+arg_5C]
.text:0040A795                 jge     short loc_40A7E0
.text:0040A797                 mov     esi, [esp+arg_60]
.text:0040A79B                 mov     eax, [esi+ebx*4]
.text:0040A79E                 cmp     byte ptr [eax], 2Dh ; '-'
.text:0040A7A1                 jz      short loc_40A7E8
.text:0040A7A3                 lea     esi, [esi+0]
.text:0040A7A9                 lea     edi, [edi+0]
.text:0040A7B0
.text:0040A7B0 loc_40A7B0:                             ; CODE XREF: sub_409C00+BCC↓j
.text:0040A7B0                                         ; sub_409C00+BEC↓j
.text:0040A7B0                 lea     eax, [ebx+1]
.text:0040A7B3                 mov     ebx, eax
.text:0040A7B5                 mov     [ebp+0], eax
.text:0040A7B8                 cmp     eax, [esp+arg_5C]
.text:0040A7BC                 jge     short loc_40A7E0
.text:0040A7BE                 mov     edi, [esp+arg_60]
.text:0040A7C2                 mov     edx, [edi+eax*4]
.text:0040A7C5                 cmp     byte ptr [edx], 2Dh ; '-'
.text:0040A7C8                 jz      short loc_40A7D0
.text:0040A7CA
.text:0040A7CA loc_40A7CA:                             ; CODE XREF: sub_409C00+BD4↓j
.text:0040A7CA                 mov     ebx, eax
.text:0040A7CC                 jmp     short loc_40A7B0
.text:0040A7CC ; END OF FUNCTION CHUNK FOR sub_409C00
.text:0040A7CC ; ---------------------------------------------------------------------------
.text:0040A7CE                 align 10h
.text:0040A7D0 ; START OF FUNCTION CHUNK FOR sub_409C00
.text:0040A7D0
.text:0040A7D0 loc_40A7D0:                             ; CODE XREF: sub_409C00+BC8↑j
.text:0040A7D0                 cmp     byte ptr [edx+1], 0
.text:0040A7D4                 jz      short loc_40A7CA
.text:0040A7D6                 lea     esi, [esi+0]
.text:0040A7D9                 lea     edi, [edi+0]
.text:0040A7E0
.text:0040A7E0 loc_40A7E0:                             ; CODE XREF: sub_409C00+B95↑j
.text:0040A7E0                                         ; sub_409C00+BBC↑j ...
.text:0040A7E0                 mov     [ebp+24h], ebx
.text:0040A7E3                 jmp     loc_409DA0
.text:0040A7E8 ; ---------------------------------------------------------------------------
.text:0040A7E8
.text:0040A7E8 loc_40A7E8:                             ; CODE XREF: sub_409C00+BA1↑j
.text:0040A7E8                 cmp     byte ptr [eax+1], 0
.text:0040A7EC                 jz      short loc_40A7B0
.text:0040A7EE                 jmp     short loc_40A7E0
.text:0040A7F0 ; ---------------------------------------------------------------------------
.text:0040A7F0
.text:0040A7F0 loc_40A7F0:                             ; CODE XREF: sub_409C00+B78↑j
.text:0040A7F0                 cmp     edx, ebx
.text:0040A7F2                 jz      short loc_40A791
.text:0040A7F4                 mov     [ebp+20h], ebx
.text:0040A7F7                 jmp     short loc_40A791
.text:0040A7F9 ; ---------------------------------------------------------------------------
.text:0040A7F9
.text:0040A7F9 loc_40A7F9:                             ; CODE XREF: sub_409C00+158↑j
.text:0040A7F9                 mov     dword ptr [ebp+18h], 0
.text:0040A800                 mov     esi, [esp+Str]
.text:0040A804
.text:0040A804 loc_40A804:                             ; CODE XREF: sub_409C00+C19↓j
.text:0040A804                 inc     esi
.text:0040A805                 jmp     loc_409D68
.text:0040A805 ; END OF FUNCTION CHUNK FOR sub_409C00
.text:0040A805 ; ---------------------------------------------------------------------------
.text:0040A80A                 align 10h
.text:0040A810 ; START OF FUNCTION CHUNK FOR sub_409C00
.text:0040A810
.text:0040A810 loc_40A810:                             ; CODE XREF: sub_409C00+150↑j
.text:0040A810                 mov     dword ptr [ebp+18h], 2
.text:0040A817                 mov     esi, ecx
.text:0040A819                 jmp     short loc_40A804
.text:0040A819 ; END OF FUNCTION CHUNK FOR sub_409C00
.text:0040A819 ; ---------------------------------------------------------------------------
.text:0040A81B                 align 10h
.text:0040A820 ; START OF FUNCTION CHUNK FOR sub_409C00
.text:0040A820
.text:0040A820 loc_40A820:                             ; CODE XREF: sub_409C00+139↑j
.text:0040A820                 mov     dword ptr [esp+0], offset loc_409CB3 ; VarName
.text:0040A827                 call    getenv
.text:0040A82C                 test    eax, eax
.text:0040A82E                 jz      loc_409D44
.text:0040A834                 jmp     loc_409D3F
.text:0040A834 ; END OF FUNCTION CHUNK FOR sub_409C00
.text:0040A834 ; ---------------------------------------------------------------------------
.text:0040A839                 align 10h
.text:0040A840 ; START OF FUNCTION CHUNK FOR sub_409C00
.text:0040A840
.text:0040A840 loc_40A840:                             ; CODE XREF: sub_409C00:loc_409D0F↑j
.text:0040A840                 mov     dword ptr [ebp+0], 1
.text:0040A847                 mov     ebx, 1
.text:0040A84C                 jmp     loc_409D20
.text:0040A84C ; END OF FUNCTION CHUNK FOR sub_409C00
.text:0040A851 ; ---------------------------------------------------------------------------
.text:0040A851                 jmp     short sub_40A860
.text:0040A851 ; ---------------------------------------------------------------------------
.text:0040A853                 align 10h
.text:0040A860
.text:0040A860 ; =============== S U B R O U T I N E =======================================
.text:0040A860
.text:0040A860
.text:0040A860 sub_40A860      proc near               ; CODE XREF: .text:0040A851↑j
.text:0040A860                                         ; sub_40C710+3A↓p ...
.text:0040A860
.text:0040A860 var_2C          = dword ptr -2Ch
.text:0040A860 var_28          = dword ptr -28h
.text:0040A860 var_24          = dword ptr -24h
.text:0040A860 var_20          = dword ptr -20h
.text:0040A860 var_1C          = dword ptr -1Ch
.text:0040A860 var_18          = dword ptr -18h
.text:0040A860 var_14          = dword ptr -14h
.text:0040A860 var_10          = dword ptr -10h
.text:0040A860 arg_0           = dword ptr  4
.text:0040A860 arg_4           = dword ptr  8
.text:0040A860 arg_8           = dword ptr  0Ch
.text:0040A860 arg_C           = dword ptr  10h
.text:0040A860 arg_10          = dword ptr  14h
.text:0040A860 arg_14          = dword ptr  18h
.text:0040A860 arg_18          = dword ptr  1Ch
.text:0040A860
.text:0040A860                 sub     esp, 2Ch
.text:0040A863                 mov     edx, dword_410060
.text:0040A869                 mov     [esp+2Ch+var_10], offset dword_411250
.text:0040A871                 mov     ecx, dword_410064
.text:0040A877                 mov     ds:dword_411250, edx
.text:0040A87D                 mov     edx, [esp+2Ch+arg_18]
.text:0040A881                 mov     ds:dword_411254, ecx
.text:0040A887                 mov     ecx, [esp+2Ch+arg_14]
.text:0040A88B                 mov     [esp+2Ch+var_14], edx
.text:0040A88F                 mov     edx, [esp+2Ch+arg_10]
.text:0040A893                 mov     [esp+2Ch+var_18], ecx
.text:0040A897                 mov     ecx, [esp+2Ch+arg_C]
.text:0040A89B                 mov     [esp+2Ch+var_1C], edx
.text:0040A89F                 mov     edx, [esp+2Ch+arg_8]
.text:0040A8A3                 mov     [esp+2Ch+var_20], ecx
.text:0040A8A7                 mov     ecx, [esp+2Ch+arg_4]
.text:0040A8AB                 mov     [esp+2Ch+var_24], edx
.text:0040A8AF                 mov     edx, [esp+2Ch+arg_0]
.text:0040A8B3                 mov     [esp+2Ch+var_28], ecx
.text:0040A8B7                 mov     [esp+2Ch+var_2C], edx
.text:0040A8BA                 call    loc_409CD0
.text:0040A8BF                 mov     ecx, ds:dword_411250
.text:0040A8C5                 mov     dword_410060, ecx
.text:0040A8CB                 mov     ecx, ds:dword_41125C
.text:0040A8D1                 mov     ds:dword_411410, ecx
.text:0040A8D7                 mov     ecx, ds:dword_411258
.text:0040A8DD                 mov     dword_410068, ecx
.text:0040A8E3                 add     esp, 2Ch
.text:0040A8E6                 retn
.text:0040A8E6 sub_40A860      endp
.text:0040A8E6
.text:0040A8E6 ; ---------------------------------------------------------------------------
.text:0040A8E7                 align 10h
.text:0040A8F0                 sub     esp, 2Ch
.text:0040A8F3                 mov     edx, dword_410060
.text:0040A8F9                 mov     dword ptr [esp+1Ch], offset dword_411250
.text:0040A901                 mov     ecx, dword_410064
.text:0040A907                 mov     dword ptr [esp+18h], 1
.text:0040A90F                 mov     ds:dword_411250, edx
.text:0040A915                 mov     edx, [esp+38h]
.text:0040A919                 mov     ds:dword_411254, ecx
.text:0040A91F                 mov     ecx, [esp+34h]
.text:0040A923                 mov     [esp+8], edx
.text:0040A927                 mov     edx, [esp+30h]
.text:0040A92B                 mov     [esp+4], ecx
.text:0040A92F                 mov     dword ptr [esp+14h], 0
.text:0040A937                 mov     dword ptr [esp+10h], 0
.text:0040A93F                 mov     dword ptr [esp+0Ch], 0
.text:0040A947                 mov     [esp], edx
.text:0040A94A                 call    loc_409CD0
.text:0040A94F                 mov     ecx, ds:dword_411250
.text:0040A955                 mov     dword_410060, ecx
.text:0040A95B                 mov     ecx, ds:dword_41125C
.text:0040A961                 mov     ds:dword_411410, ecx
.text:0040A967                 mov     ecx, ds:dword_411258
.text:0040A96D                 mov     dword_410068, ecx
.text:0040A973                 add     esp, 2Ch
.text:0040A976                 retn
.text:0040A976 ; ---------------------------------------------------------------------------
.text:0040A977                 align 10h
.text:0040A980
.text:0040A980 ; =============== S U B R O U T I N E =======================================
.text:0040A980
.text:0040A980
.text:0040A980 sub_40A980      proc near               ; CODE XREF: sub_409C00+1E3↑p
.text:0040A980                                         ; sub_409C00+B89↑p
.text:0040A980
.text:0040A980 var_2C          = dword ptr -2Ch
.text:0040A980 var_28          = dword ptr -28h
.text:0040A980 var_24          = dword ptr -24h
.text:0040A980 var_20          = dword ptr -20h
.text:0040A980 var_1C          = dword ptr -1Ch
.text:0040A980 var_18          = dword ptr -18h
.text:0040A980 var_14          = dword ptr -14h
.text:0040A980 arg_0           = dword ptr  4
.text:0040A980 arg_4           = dword ptr  8
.text:0040A980
.text:0040A980                 push    ebp
.text:0040A981                 push    edi
.text:0040A982                 push    esi
.text:0040A983                 push    ebx
.text:0040A984                 sub     esp, 1Ch
.text:0040A987                 mov     ecx, [esp+2Ch+arg_4]
.text:0040A98B                 mov     eax, [esp+2Ch+arg_4]
.text:0040A98F                 mov     ebx, [esp+2Ch+arg_4]
.text:0040A993                 mov     edx, [ecx+20h]
.text:0040A996                 mov     edi, [esp+2Ch+arg_0]
.text:0040A99A                 mov     ecx, [ebx]
.text:0040A99C                 mov     [esp+2Ch+var_2C], edx
.text:0040A99F                 mov     [esp+2Ch+var_14], edx
.text:0040A9A3                 mov     edx, [eax+24h]
.text:0040A9A6                 mov     [esp+2Ch+var_28], ecx
.text:0040A9AA                 mov     [esp+2Ch+var_1C], ecx
.text:0040A9AE                 cmp     ecx, edx
.text:0040A9B0                 mov     [esp+2Ch+var_18], edx
.text:0040A9B4                 jle     short loc_40AA30
.text:0040A9B6                 mov     esi, [esp+2Ch+var_2C]
.text:0040A9B9                 cmp     edx, esi
.text:0040A9BB                 jle     short loc_40AA30
.text:0040A9BD                 lea     esi, [esi+0]
.text:0040A9C0
.text:0040A9C0 loc_40A9C0:                             ; CODE XREF: sub_40A980+A1↓j
.text:0040A9C0                 mov     ebx, [esp+2Ch+var_1C]
.text:0040A9C4                 mov     edx, [esp+2Ch+var_18]
.text:0040A9C8                 mov     ebp, [esp+2Ch+var_18]
.text:0040A9CC                 mov     eax, [esp+2Ch+var_14]
.text:0040A9D0                 sub     ebx, edx
.text:0040A9D2                 mov     [esp+2Ch+var_20], ebx
.text:0040A9D6                 sub     ebp, eax
.text:0040A9D8                 cmp     ebx, ebp
.text:0040A9DA                 jle     short loc_40AA55
.text:0040A9DC                 xor     esi, esi
.text:0040A9DE                 cmp     esi, ebp
.text:0040A9E0                 jge     short loc_40AA0D
.text:0040A9E2                 mov     ecx, [esp+2Ch+var_1C]
.text:0040A9E6                 sub     ecx, ebp
.text:0040A9E8                 mov     [esp+2Ch+var_24], ecx
.text:0040A9EC                 lea     esi, [esi+0]
.text:0040A9F0
.text:0040A9F0 loc_40A9F0:                             ; CODE XREF: sub_40A980+8B↓j
.text:0040A9F0                 mov     ecx, [esp+2Ch+var_14]
.text:0040A9F4                 mov     edx, [esp+2Ch+var_24]
.text:0040A9F8                 add     ecx, esi
.text:0040A9FA                 add     edx, esi
.text:0040A9FC                 mov     ebx, [edi+ecx*4]
.text:0040A9FF                 mov     eax, [edi+edx*4]
.text:0040AA02                 inc     esi
.text:0040AA03                 cmp     esi, ebp
.text:0040AA05                 mov     [edi+ecx*4], eax
.text:0040AA08                 mov     [edi+edx*4], ebx
.text:0040AA0B                 jl      short loc_40A9F0
.text:0040AA0D
.text:0040AA0D loc_40AA0D:                             ; CODE XREF: sub_40A980+60↑j
.text:0040AA0D                 sub     [esp+2Ch+var_1C], ebp
.text:0040AA11
.text:0040AA11 loc_40AA11:                             ; CODE XREF: sub_40A980+107↓j
.text:0040AA11                 mov     eax, [esp+2Ch+var_18]
.text:0040AA15                 cmp     [esp+2Ch+var_1C], eax
.text:0040AA19                 jle     short loc_40AA30
.text:0040AA1B                 mov     ebp, [esp+2Ch+var_14]
.text:0040AA1F                 cmp     eax, ebp
.text:0040AA21                 jg      short loc_40A9C0
.text:0040AA23                 lea     esi, [esi+0]
.text:0040AA29                 lea     edi, [edi+0]
.text:0040AA30
.text:0040AA30 loc_40AA30:                             ; CODE XREF: sub_40A980+34↑j
.text:0040AA30                                         ; sub_40A980+3B↑j ...
.text:0040AA30                 mov     esi, [esp+2Ch+var_28]
.text:0040AA34                 mov     ecx, [esp+2Ch+var_18]
.text:0040AA38                 mov     eax, [esp+2Ch+var_2C]
.text:0040AA3B                 mov     edi, [esp+2Ch+arg_4]
.text:0040AA3F                 mov     edx, [esp+2Ch+var_28]
.text:0040AA43                 sub     esi, ecx
.text:0040AA45                 add     esi, eax
.text:0040AA47                 mov     [edi+20h], esi
.text:0040AA4A                 mov     [edi+24h], edx
.text:0040AA4D                 add     esp, 1Ch
.text:0040AA50                 pop     ebx
.text:0040AA51                 pop     esi
.text:0040AA52                 pop     edi
.text:0040AA53                 pop     ebp
.text:0040AA54                 retn
.text:0040AA55 ; ---------------------------------------------------------------------------
.text:0040AA55
.text:0040AA55 loc_40AA55:                             ; CODE XREF: sub_40A980+5A↑j
.text:0040AA55                 xor     esi, esi
.text:0040AA57                 cmp     esi, [esp+2Ch+var_20]
.text:0040AA5B                 jge     short loc_40AA7F
.text:0040AA5D                 lea     esi, [esi+0]
.text:0040AA60
.text:0040AA60 loc_40AA60:                             ; CODE XREF: sub_40A980+FD↓j
.text:0040AA60                 mov     ebx, [esp+2Ch+var_14]
.text:0040AA64                 mov     ebp, [esp+2Ch+var_18]
.text:0040AA68                 add     ebx, esi
.text:0040AA6A                 add     ebp, esi
.text:0040AA6C                 mov     edx, [edi+ebx*4]
.text:0040AA6F                 inc     esi
.text:0040AA70                 cmp     esi, [esp+2Ch+var_20]
.text:0040AA74                 mov     ecx, [edi+ebp*4]
.text:0040AA77                 mov     [edi+ebx*4], ecx
.text:0040AA7A                 mov     [edi+ebp*4], edx
.text:0040AA7D                 jl      short loc_40AA60
.text:0040AA7F
.text:0040AA7F loc_40AA7F:                             ; CODE XREF: sub_40A980+DB↑j
.text:0040AA7F                 mov     esi, [esp+2Ch+var_20]
.text:0040AA83                 add     [esp+2Ch+var_14], esi
.text:0040AA87                 jmp     short loc_40AA11
.text:0040AA87 sub_40A980      endp
.text:0040AA87
.text:0040AA87 ; ---------------------------------------------------------------------------
.text:0040AA89                 align 20h
.text:0040AAA0
.text:0040AAA0 ; =============== S U B R O U T I N E =======================================
.text:0040AAA0
.text:0040AAA0
.text:0040AAA0 sub_40AAA0      proc near               ; CODE XREF: sub_402980+3B↑p
.text:0040AAA0
.text:0040AAA0 File            = dword ptr -1Ch
.text:0040AAA0 var_18          = dword ptr -18h
.text:0040AAA0 var_14          = dword ptr -14h
.text:0040AAA0 arg_0           = dword ptr  4
.text:0040AAA0 arg_4           = dword ptr  8
.text:0040AAA0
.text:0040AAA0                 push    ebp
.text:0040AAA1                 push    edi
.text:0040AAA2                 push    esi
.text:0040AAA3                 push    ebx
.text:0040AAA4                 sub     esp, 0Ch
.text:0040AAA7                 mov     edx, [esp+1Ch+arg_0]
.text:0040AAAB                 mov     edi, [esp+1Ch+arg_4]
.text:0040AAAF                 mov     ebp, [edx+8]
.text:0040AAB2                 mov     ecx, [edx]
.text:0040AAB4                 mov     ebx, ebp
.text:0040AAB6                 add     ecx, ebp
.text:0040AAB8                 test    byte ptr [edi+0Ch], 10h
.text:0040AABC                 mov     [esp+1Ch+var_14], ecx
.text:0040AAC0                 jnz     loc_40AB48
.text:0040AAC6                 lea     esi, [esi+0]
.text:0040AAC9                 lea     edi, [edi+0]
.text:0040AAD0
.text:0040AAD0 loc_40AAD0:                             ; CODE XREF: sub_40AAA0+56↓j
.text:0040AAD0                 mov     ecx, [edi+4]
.text:0040AAD3                 dec     ecx
.text:0040AAD4                 test    ecx, ecx
.text:0040AAD6                 mov     [edi+4], ecx
.text:0040AAD9                 js      short loc_40AB50
.text:0040AADB                 mov     edx, [edi]
.text:0040AADD                 movzx   esi, byte ptr [edx]
.text:0040AAE0                 inc     edx
.text:0040AAE1                 mov     [edi], edx
.text:0040AAE3
.text:0040AAE3 loc_40AAE3:                             ; CODE XREF: sub_40AAA0+BA↓j
.text:0040AAE3                 cmp     esi, 0FFFFFFFFh
.text:0040AAE6                 jz      short loc_40AB31
.text:0040AAE8
.text:0040AAE8 loc_40AAE8:                             ; CODE XREF: sub_40AAA0+A6↓j
.text:0040AAE8                 cmp     ebx, [esp+1Ch+var_14]
.text:0040AAEC                 jz      short loc_40AB09
.text:0040AAEE
.text:0040AAEE loc_40AAEE:                             ; CODE XREF: sub_40AAA0+8F↓j
.text:0040AAEE                 mov     ecx, esi
.text:0040AAF0                 mov     [ebx], cl
.text:0040AAF2                 inc     ebx
.text:0040AAF3                 cmp     esi, 0Ah
.text:0040AAF6                 jnz     short loc_40AAD0
.text:0040AAF8
.text:0040AAF8 loc_40AAF8:                             ; CODE XREF: sub_40AAA0+9F↓j
.text:0040AAF8                 mov     eax, [esp+1Ch+arg_0]
.text:0040AAFC                 sub     ebx, ebp
.text:0040AAFE                 mov     [eax+4], ebx
.text:0040AB01
.text:0040AB01 loc_40AB01:                             ; CODE XREF: sub_40AAA0+AA↓j
.text:0040AB01                 add     esp, 0Ch
.text:0040AB04                 pop     ebx
.text:0040AB05                 pop     esi
.text:0040AB06                 pop     edi
.text:0040AB07                 pop     ebp
.text:0040AB08                 retn
.text:0040AB09 ; ---------------------------------------------------------------------------
.text:0040AB09
.text:0040AB09 loc_40AB09:                             ; CODE XREF: sub_40AAA0+4C↑j
.text:0040AB09                 mov     edx, [esp+1Ch+arg_0]
.text:0040AB0D                 mov     ebx, [edx]
.text:0040AB0F                 mov     [esp+1Ch+File], ebp ; void *
.text:0040AB12                 mov     [esp+1Ch+var_18], edx ; int
.text:0040AB16                 call    sub_40CA70
.text:0040AB1B                 mov     ebp, eax
.text:0040AB1D                 lea     ebx, [ebx+eax]
.text:0040AB20                 mov     eax, [esp+1Ch+arg_0]
.text:0040AB24                 mov     [eax+8], ebp
.text:0040AB27                 mov     ecx, [eax]
.text:0040AB29                 add     ecx, ebp
.text:0040AB2B                 mov     [esp+1Ch+var_14], ecx
.text:0040AB2F                 jmp     short loc_40AAEE
.text:0040AB31 ; ---------------------------------------------------------------------------
.text:0040AB31
.text:0040AB31 loc_40AB31:                             ; CODE XREF: sub_40AAA0+46↑j
.text:0040AB31                 cmp     ebx, ebp
.text:0040AB33                 jz      short loc_40AB48
.text:0040AB35                 test    byte ptr [edi+0Ch], 20h
.text:0040AB39                 jnz     short loc_40AB48
.text:0040AB3B                 cmp     byte ptr [ebx-1], 0Ah
.text:0040AB3F                 jz      short loc_40AAF8
.text:0040AB41                 mov     esi, 0Ah
.text:0040AB46                 jmp     short loc_40AAE8
.text:0040AB48 ; ---------------------------------------------------------------------------
.text:0040AB48
.text:0040AB48 loc_40AB48:                             ; CODE XREF: sub_40AAA0+20↑j
.text:0040AB48                                         ; sub_40AAA0+93↑j ...
.text:0040AB48                 xor     eax, eax
.text:0040AB4A                 jmp     short loc_40AB01
.text:0040AB4A ; ---------------------------------------------------------------------------
.text:0040AB4C                 align 10h
.text:0040AB50
.text:0040AB50 loc_40AB50:                             ; CODE XREF: sub_40AAA0+39↑j
.text:0040AB50                 mov     [esp+1Ch+File], edi ; File
.text:0040AB53                 call    _filbuf
.text:0040AB58                 mov     esi, eax
.text:0040AB5A                 jmp     short loc_40AAE3
.text:0040AB5A sub_40AAA0      endp
.text:0040AB5A
.text:0040AB5A ; ---------------------------------------------------------------------------
.text:0040AB5C                 align 10h
.text:0040AB60
.text:0040AB60 ; =============== S U B R O U T I N E =======================================
.text:0040AB60
.text:0040AB60
.text:0040AB60 sub_40AB60      proc near               ; CODE XREF: sub_401E90+711↑p
.text:0040AB60
.text:0040AB60 arg_0           = dword ptr  4
.text:0040AB60
.text:0040AB60                 push    edi
.text:0040AB61                 mov     ecx, 3
.text:0040AB66                 mov     edi, [esp+4+arg_0]
.text:0040AB6A                 cld
.text:0040AB6B                 xor     eax, eax
.text:0040AB6D                 rep stosd
.text:0040AB6F                 pop     edi
.text:0040AB70                 retn
.text:0040AB70 sub_40AB60      endp
.text:0040AB70
.text:0040AB71 ; ---------------------------------------------------------------------------
.text:0040AB71                 jmp     short loc_40AB80
.text:0040AB71 ; ---------------------------------------------------------------------------
.text:0040AB73                 align 10h
.text:0040AB80
.text:0040AB80 loc_40AB80:                             ; CODE XREF: .text:0040AB71↑j
.text:0040AB80                 mov     ecx, [esp+4]
.text:0040AB84                 mov     edx, [ecx+8]
.text:0040AB87                 mov     [esp+4], edx
.text:0040AB8B                 jmp     free
.text:0040AB8B ; ---------------------------------------------------------------------------
.text:0040AB90 aCopyrightC2005 db 'Copyright (C) 2005 Free Software Foundation, Inc.',0
.text:0040AB90                                         ; DATA XREF: .data:off_410070↓o
.text:0040ABC2 ; const char aSSS[]
.text:0040ABC2 aSSS            db '%s (%s) %s',0Ah,0   ; DATA XREF: sub_40AE80+50↓o
.text:0040ABCE aWrittenByS     db 'Written by %s.',0Ah,0
.text:0040ABCE                                         ; DATA XREF: sub_40AE80:loc_40AF21↓o
.text:0040ABDE                 db 12h dup(90h)
.text:0040ABF0 aThisIsFreeSoft db 'This is free software; see the source for copying conditions.  Th'
.text:0040ABF0                                         ; DATA XREF: sub_40AE80+100↓o
.text:0040ABF0                 db 'ere is NO',0Ah
.text:0040ABF0                 db 'warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULA'
.text:0040ABF0                 db 'R PURPOSE.',0Ah,0
.text:0040AC88 aWrittenBySAndS db 'Written by %s and %s.',0Ah,0
.text:0040AC88                                         ; DATA XREF: sub_40AE80:loc_40AFC1↓o
.text:0040AC9F aWrittenBySSAnd db 'Written by %s, %s, and %s.',0Ah,0
.text:0040AC9F                                         ; DATA XREF: sub_40AE80:loc_40AFCD↓o
.text:0040ACBB                 db 15h dup(90h)
.text:0040ACD0 aWrittenBySSSAn db 'Written by %s, %s, %s,',0Ah
.text:0040ACD0                                         ; DATA XREF: sub_40AE80:loc_40AFD9↓o
.text:0040ACD0                 db 'and %s.',0Ah,0
.text:0040ACF0 aWrittenBySSSSA db 'Written by %s, %s, %s,',0Ah
.text:0040ACF0                                         ; DATA XREF: sub_40AE80:loc_40AFE5↓o
.text:0040ACF0                 db '%s, and %s.',0Ah,0
.text:0040AD14                 db 1Ch dup(90h)
.text:0040AD30 aWrittenBySSSSS_0 db 'Written by %s, %s, %s,',0Ah
.text:0040AD30                                         ; DATA XREF: sub_40AE80:loc_40AFF1↓o
.text:0040AD30                 db '%s, %s, and %s.',0Ah,0
.text:0040AD58                 db 18h dup(90h)
.text:0040AD70 aWrittenBySSSSS_1 db 'Written by %s, %s, %s,',0Ah
.text:0040AD70                                         ; DATA XREF: sub_40AE80:loc_40AFFD↓o
.text:0040AD70                 db '%s, %s, %s, and %s.',0Ah,0
.text:0040AD9C                 db 14h dup(90h)
.text:0040ADB0 aWrittenBySSSSS_2 db 'Written by %s, %s, %s,',0Ah
.text:0040ADB0                                         ; DATA XREF: sub_40AE80:loc_40B009↓o
.text:0040ADB0                 db '%s, %s, %s, %s,',0Ah
.text:0040ADB0                 db 'and %s.',0Ah,0
.text:0040ADE0                 db 10h dup(90h)
.text:0040ADF0 aWrittenBySSSSS_3 db 'Written by %s, %s, %s,',0Ah
.text:0040ADF0                                         ; DATA XREF: sub_40AE80:loc_40B015↓o
.text:0040ADF0                 db '%s, %s, %s, %s,',0Ah
.text:0040ADF0                 db '%s, and %s.',0Ah,0
.text:0040AE24                 align 10h
.text:0040AE30 aWrittenBySSSSS db 'Written by %s, %s, %s,',0Ah
.text:0040AE30                                         ; DATA XREF: sub_40AE80:def_40AEED↓o
.text:0040AE30                 db '%s, %s, %s, %s,',0Ah
.text:0040AE30                 db '%s, %s, and others.',0Ah,0
.text:0040AE6C ; const char aSS[]
.text:0040AE6C aSS             db '%s %s',0Ah,0        ; DATA XREF: sub_40AE80+1B5↓o
.text:0040AE73                 align 10h
.text:0040AE80
.text:0040AE80 ; =============== S U B R O U T I N E =======================================
.text:0040AE80
.text:0040AE80
.text:0040AE80 ; int __cdecl sub_40AE80(FILE *, FILE *, int, int, va_list)
.text:0040AE80 sub_40AE80      proc near               ; CODE XREF: sub_40B050+2A↓p
.text:0040AE80
.text:0040AE80 Stream          = dword ptr -2Ch
.text:0040AE80 Format          = dword ptr -28h
.text:0040AE80 ArgList         = dword ptr -24h
.text:0040AE80 var_20          = dword ptr -20h
.text:0040AE80 var_1C          = dword ptr -1Ch
.text:0040AE80 var_14          = dword ptr -14h
.text:0040AE80 arg_0           = dword ptr  4
.text:0040AE80 arg_4           = dword ptr  8
.text:0040AE80 arg_8           = dword ptr  0Ch
.text:0040AE80 arg_C           = dword ptr  10h
.text:0040AE80 arg_10          = dword ptr  14h
.text:0040AE80
.text:0040AE80                 push    ebp
.text:0040AE81                 push    edi
.text:0040AE82                 push    esi
.text:0040AE83                 push    ebx
.text:0040AE84                 sub     esp, 1Ch
.text:0040AE87                 xor     ebx, ebx
.text:0040AE89                 mov     edi, [esp+2Ch+arg_10]
.text:0040AE8D                 mov     edx, [esp+2Ch+arg_8]
.text:0040AE91                 mov     esi, [esp+2Ch+arg_0]
.text:0040AE95                 mov     eax, [edi]
.text:0040AE97                 mov     ecx, [esp+2Ch+arg_4]
.text:0040AE9B                 mov     [esp+2Ch+var_14], edx
.text:0040AE9F                 mov     ebp, [esp+2Ch+arg_C]
.text:0040AEA3                 lea     edx, [edi+4]
.text:0040AEA6                 test    eax, eax
.text:0040AEA8                 jz      short loc_40AEBC
.text:0040AEAA                 lea     esi, [esi+0]
.text:0040AEB0
.text:0040AEB0 loc_40AEB0:                             ; CODE XREF: sub_40AE80+3A↓j
.text:0040AEB0                 mov     eax, edx
.text:0040AEB2                 inc     ebx
.text:0040AEB3                 mov     eax, [eax]
.text:0040AEB5                 add     edx, 4
.text:0040AEB8                 test    eax, eax
.text:0040AEBA                 jnz     short loc_40AEB0
.text:0040AEBC
.text:0040AEBC loc_40AEBC:                             ; CODE XREF: sub_40AE80+28↑j
.text:0040AEBC                 test    ecx, ecx
.text:0040AEBE                 jz      loc_40B02D
.text:0040AEC4                 mov     [esp+2Ch+var_1C], ebp
.text:0040AEC8                 mov     edx, [esp+2Ch+var_14]
.text:0040AECC                 mov     [esp+2Ch+ArgList], ecx
.text:0040AED0                 mov     [esp+2Ch+Format], offset aSSS ; "%s (%s) %s\n"
.text:0040AED8                 mov     [esp+2Ch+var_20], edx
.text:0040AEDC                 mov     [esp+2Ch+Stream], esi ; Stream
.text:0040AEDF                 call    fprintf
.text:0040AEE4
.text:0040AEE4 loc_40AEE4:                             ; CODE XREF: sub_40AE80+1C9↓j
.text:0040AEE4                 cmp     ebx, 9          ; switch 10 cases
.text:0040AEE7                 ja      def_40AEED      ; jumptable 0040AEED default case
.text:0040AEED                 jmp     ds:jpt_40AEED[ebx*4] ; switch jump
.text:0040AEED ; ---------------------------------------------------------------------------
.text:0040AEF4 jpt_40AEED      dd offset loc_40AF1C    ; DATA XREF: sub_40AE80+6D↑r
.text:0040AEF4                 dd offset loc_40AF21    ; jump table for switch statement
.text:0040AEF4                 dd offset loc_40AFC1
.text:0040AEF4                 dd offset loc_40AFCD
.text:0040AEF4                 dd offset loc_40AFD9
.text:0040AEF4                 dd offset loc_40AFE5
.text:0040AEF4                 dd offset loc_40AFF1
.text:0040AEF4                 dd offset loc_40AFFD
.text:0040AEF4                 dd offset loc_40B009
.text:0040AEF4                 dd offset loc_40B015
.text:0040AF1C ; ---------------------------------------------------------------------------
.text:0040AF1C
.text:0040AF1C loc_40AF1C:                             ; CODE XREF: sub_40AE80+6D↑j
.text:0040AF1C                                         ; DATA XREF: sub_40AE80:jpt_40AEED↑o
.text:0040AF1C                 call    abort           ; jumptable 0040AEED case 0
.text:0040AF21 ; ---------------------------------------------------------------------------
.text:0040AF21
.text:0040AF21 loc_40AF21:                             ; CODE XREF: sub_40AE80+6D↑j
.text:0040AF21                                         ; DATA XREF: sub_40AE80:jpt_40AEED↑o
.text:0040AF21                 mov     [esp+2Ch+Stream], offset aWrittenByS ; jumptable 0040AEED case 1
.text:0040AF28                 nop
.text:0040AF29                 lea     esi, [esi+0]
.text:0040AF30
.text:0040AF30 loc_40AF30:                             ; CODE XREF: sub_40AE80+148↓j
.text:0040AF30                                         ; sub_40AE80+154↓j ...
.text:0040AF30                 call    ds:libintl_gettext
.text:0040AF36                 mov     [esp+2Ch+ArgList], edi ; ArgList
.text:0040AF3A                 mov     [esp+2Ch+Stream], esi ; Stream
.text:0040AF3D                 mov     [esp+2Ch+Format], eax ; Format
.text:0040AF41                 call    vfprintf
.text:0040AF46                 mov     ebx, [esi+4]
.text:0040AF49                 dec     ebx
.text:0040AF4A                 test    ebx, ebx
.text:0040AF4C                 mov     [esi+4], ebx
.text:0040AF4F                 js      short loc_40AFAF
.text:0040AF51                 mov     edi, [esi]
.text:0040AF53                 mov     byte ptr [edi], 0Ah
.text:0040AF56                 inc     dword ptr [esi]
.text:0040AF58
.text:0040AF58 loc_40AF58:                             ; CODE XREF: sub_40AE80+13F↓j
.text:0040AF58                 mov     [esp+2Ch+Format], esi ; Stream
.text:0040AF5C                 mov     edx, off_410070 ; "Copyright (C) 2005 Free Software Founda"...
.text:0040AF62                 mov     [esp+2Ch+Stream], edx ; Buffer
.text:0040AF65                 call    fputs
.text:0040AF6A                 mov     ebp, [esi+4]
.text:0040AF6D                 dec     ebp
.text:0040AF6E                 test    ebp, ebp
.text:0040AF70                 mov     [esi+4], ebp
.text:0040AF73                 js      short loc_40AF9D
.text:0040AF75                 mov     ecx, [esi]
.text:0040AF77                 mov     byte ptr [ecx], 0Ah
.text:0040AF7A                 inc     dword ptr [esi]
.text:0040AF7C
.text:0040AF7C loc_40AF7C:                             ; CODE XREF: sub_40AE80+12D↓j
.text:0040AF7C                 mov     [esp+2Ch+arg_4], esi ; Stream
.text:0040AF80                 mov     [esp+2Ch+Stream], offset aThisIsFreeSoft ; "This is free software; see the source f"...
.text:0040AF87                 call    ds:libintl_gettext
.text:0040AF8D                 mov     [esp+2Ch+arg_0], eax ; Buffer
.text:0040AF91                 add     esp, 1Ch
.text:0040AF94                 pop     ebx
.text:0040AF95                 pop     esi
.text:0040AF96                 pop     edi
.text:0040AF97                 pop     ebp
.text:0040AF98                 jmp     fputs
.text:0040AF9D ; ---------------------------------------------------------------------------
.text:0040AF9D
.text:0040AF9D loc_40AF9D:                             ; CODE XREF: sub_40AE80+F3↑j
.text:0040AF9D                 mov     [esp+2Ch+Format], esi ; File
.text:0040AFA1                 mov     [esp+2Ch+Stream], 0Ah ; Ch
.text:0040AFA8                 call    _flsbuf
.text:0040AFAD                 jmp     short loc_40AF7C
.text:0040AFAF ; ---------------------------------------------------------------------------
.text:0040AFAF
.text:0040AFAF loc_40AFAF:                             ; CODE XREF: sub_40AE80+CF↑j
.text:0040AFAF                 mov     [esp+2Ch+Format], esi ; File
.text:0040AFB3                 mov     [esp+2Ch+Stream], 0Ah ; Ch
.text:0040AFBA                 call    _flsbuf
.text:0040AFBF                 jmp     short loc_40AF58
.text:0040AFC1 ; ---------------------------------------------------------------------------
.text:0040AFC1
.text:0040AFC1 loc_40AFC1:                             ; CODE XREF: sub_40AE80+6D↑j
.text:0040AFC1                                         ; DATA XREF: sub_40AE80:jpt_40AEED↑o
.text:0040AFC1                 mov     [esp+2Ch+Stream], offset aWrittenBySAndS ; jumptable 0040AEED case 2
.text:0040AFC8                 jmp     loc_40AF30
.text:0040AFCD ; ---------------------------------------------------------------------------
.text:0040AFCD
.text:0040AFCD loc_40AFCD:                             ; CODE XREF: sub_40AE80+6D↑j
.text:0040AFCD                                         ; DATA XREF: sub_40AE80:jpt_40AEED↑o
.text:0040AFCD                 mov     [esp+2Ch+Stream], offset aWrittenBySSAnd ; jumptable 0040AEED case 3
.text:0040AFD4                 jmp     loc_40AF30
.text:0040AFD9 ; ---------------------------------------------------------------------------
.text:0040AFD9
.text:0040AFD9 loc_40AFD9:                             ; CODE XREF: sub_40AE80+6D↑j
.text:0040AFD9                                         ; DATA XREF: sub_40AE80:jpt_40AEED↑o
.text:0040AFD9                 mov     [esp+2Ch+Stream], offset aWrittenBySSSAn ; jumptable 0040AEED case 4
.text:0040AFE0                 jmp     loc_40AF30
.text:0040AFE5 ; ---------------------------------------------------------------------------
.text:0040AFE5
.text:0040AFE5 loc_40AFE5:                             ; CODE XREF: sub_40AE80+6D↑j
.text:0040AFE5                                         ; DATA XREF: sub_40AE80:jpt_40AEED↑o
.text:0040AFE5                 mov     [esp+2Ch+Stream], offset aWrittenBySSSSA ; jumptable 0040AEED case 5
.text:0040AFEC                 jmp     loc_40AF30
.text:0040AFF1 ; ---------------------------------------------------------------------------
.text:0040AFF1
.text:0040AFF1 loc_40AFF1:                             ; CODE XREF: sub_40AE80+6D↑j
.text:0040AFF1                                         ; DATA XREF: sub_40AE80:jpt_40AEED↑o
.text:0040AFF1                 mov     [esp+2Ch+Stream], offset aWrittenBySSSSS_0 ; jumptable 0040AEED case 6
.text:0040AFF8                 jmp     loc_40AF30
.text:0040AFFD ; ---------------------------------------------------------------------------
.text:0040AFFD
.text:0040AFFD loc_40AFFD:                             ; CODE XREF: sub_40AE80+6D↑j
.text:0040AFFD                                         ; DATA XREF: sub_40AE80:jpt_40AEED↑o
.text:0040AFFD                 mov     [esp+2Ch+Stream], offset aWrittenBySSSSS_1 ; jumptable 0040AEED case 7
.text:0040B004                 jmp     loc_40AF30
.text:0040B009 ; ---------------------------------------------------------------------------
.text:0040B009
.text:0040B009 loc_40B009:                             ; CODE XREF: sub_40AE80+6D↑j
.text:0040B009                                         ; DATA XREF: sub_40AE80:jpt_40AEED↑o
.text:0040B009                 mov     [esp+2Ch+Stream], offset aWrittenBySSSSS_2 ; jumptable 0040AEED case 8
.text:0040B010                 jmp     loc_40AF30
.text:0040B015 ; ---------------------------------------------------------------------------
.text:0040B015
.text:0040B015 loc_40B015:                             ; CODE XREF: sub_40AE80+6D↑j
.text:0040B015                                         ; DATA XREF: sub_40AE80:jpt_40AEED↑o
.text:0040B015                 mov     [esp+2Ch+Stream], offset aWrittenBySSSSS_3 ; jumptable 0040AEED case 9
.text:0040B01C                 jmp     loc_40AF30
.text:0040B021 ; ---------------------------------------------------------------------------
.text:0040B021
.text:0040B021 def_40AEED:                             ; CODE XREF: sub_40AE80+67↑j
.text:0040B021                 mov     [esp+2Ch+Stream], offset aWrittenBySSSSS ; jumptable 0040AEED default case
.text:0040B028                 jmp     loc_40AF30
.text:0040B02D ; ---------------------------------------------------------------------------
.text:0040B02D
.text:0040B02D loc_40B02D:                             ; CODE XREF: sub_40AE80+3E↑j
.text:0040B02D                 mov     [esp+2Ch+var_20], ebp
.text:0040B031                 mov     ecx, [esp+2Ch+var_14]
.text:0040B035                 mov     [esp+2Ch+Format], offset aSS ; "%s %s\n"
.text:0040B03D                 mov     [esp+2Ch+Stream], esi ; Stream
.text:0040B040                 mov     [esp+2Ch+ArgList], ecx
.text:0040B044                 call    fprintf
.text:0040B049                 jmp     loc_40AEE4
.text:0040B049 sub_40AE80      endp
.text:0040B049
.text:0040B049 ; ---------------------------------------------------------------------------
.text:0040B04E                 align 10h
.text:0040B050
.text:0040B050 ; =============== S U B R O U T I N E =======================================
.text:0040B050
.text:0040B050
.text:0040B050 ; int __cdecl sub_40B050(FILE *, FILE *, int, int, char)
.text:0040B050 sub_40B050      proc near               ; CODE XREF: sub_401E90+29C↑p
.text:0040B050
.text:0040B050 var_1C          = dword ptr -1Ch
.text:0040B050 var_18          = dword ptr -18h
.text:0040B050 var_14          = dword ptr -14h
.text:0040B050 var_10          = dword ptr -10h
.text:0040B050 var_C           = dword ptr -0Ch
.text:0040B050 arg_0           = dword ptr  4
.text:0040B050 arg_4           = dword ptr  8
.text:0040B050 arg_8           = dword ptr  0Ch
.text:0040B050 arg_C           = dword ptr  10h
.text:0040B050 arg_10          = byte ptr  14h
.text:0040B050
.text:0040B050                 sub     esp, 1Ch
.text:0040B053                 mov     edx, [esp+1Ch+arg_C]
.text:0040B057                 lea     ecx, [esp+1Ch+arg_10]
.text:0040B05B                 mov     [esp+1Ch+var_C], ecx ; va_list
.text:0040B05F                 mov     ecx, [esp+1Ch+arg_8]
.text:0040B063                 mov     [esp+1Ch+var_10], edx ; int
.text:0040B067                 mov     edx, [esp+1Ch+arg_4]
.text:0040B06B                 mov     [esp+1Ch+var_14], ecx ; int
.text:0040B06F                 mov     [esp+1Ch+var_18], edx ; FILE *
.text:0040B073                 mov     edx, [esp+1Ch+arg_0]
.text:0040B077                 mov     [esp+1Ch+var_1C], edx ; FILE *
.text:0040B07A                 call    sub_40AE80
.text:0040B07F                 add     esp, 1Ch
.text:0040B082                 retn
.text:0040B082 sub_40B050      endp
.text:0040B082
.text:0040B082 ; ---------------------------------------------------------------------------
.text:0040B083                 align 10h
.text:0040B090 aCoreutils530Sr db '../../coreutils-5.3.0-src/lib/xstrtol.c',0
.text:0040B090                                         ; DATA XREF: sub_40B100+651↓o
.text:0040B0B8                 db 18h dup(90h)
.text:0040B0D0 a0StrtolBaseStr db '0 <= strtol_base && strtol_base <= 36',0
.text:0040B0D0                                         ; DATA XREF: sub_40B100+659↓o
.text:0040B0F6                 align 10h
.text:0040B100
.text:0040B100 ; =============== S U B R O U T I N E =======================================
.text:0040B100
.text:0040B100
.text:0040B100 ; int __cdecl sub_40B100(char *, char **, int, int, char *Str)
.text:0040B100 sub_40B100      proc near               ; CODE XREF: sub_401E90+509↑p
.text:0040B100
.text:0040B100 String          = dword ptr -3Ch
.text:0040B100 EndPtr          = dword ptr -38h
.text:0040B100 Radix           = dword ptr -34h
.text:0040B100 var_28          = dword ptr -28h
.text:0040B100 var_24          = dword ptr -24h
.text:0040B100 var_20          = dword ptr -20h
.text:0040B100 var_1C          = dword ptr -1Ch
.text:0040B100 var_18          = dword ptr -18h
.text:0040B100 var_14          = byte ptr -14h
.text:0040B100 arg_0           = dword ptr  4
.text:0040B100 arg_4           = dword ptr  8
.text:0040B100 arg_8           = dword ptr  0Ch
.text:0040B100 arg_C           = dword ptr  10h
.text:0040B100 Str             = dword ptr  14h
.text:0040B100
.text:0040B100                 push    ebp
.text:0040B101                 push    edi
.text:0040B102                 push    esi
.text:0040B103                 push    ebx
.text:0040B104                 sub     esp, 2Ch
.text:0040B107                 mov     ebx, [esp+3Ch+arg_8]
.text:0040B10B                 mov     [esp+3Ch+var_1C], 0
.text:0040B113                 mov     esi, [esp+3Ch+arg_0]
.text:0040B117                 mov     ebp, [esp+3Ch+Str]
.text:0040B11B                 cmp     ebx, 24h ; '$'
.text:0040B11E                 ja      loc_40B749
.text:0040B124                 mov     edi, [esp+3Ch+arg_4]
.text:0040B128                 test    edi, edi
.text:0040B12A                 jz      loc_40B740
.text:0040B130
.text:0040B130 loc_40B130:                             ; CODE XREF: sub_40B100+644↓j
.text:0040B130                 call    _errno
.text:0040B135                 mov     dword ptr [eax], 0
.text:0040B13B                 mov     [esp+3Ch+Radix], ebx ; Radix
.text:0040B13F                 mov     [esp+3Ch+EndPtr], edi ; EndPtr
.text:0040B143                 mov     [esp+3Ch+String], esi ; String
.text:0040B146                 call    strtol
.text:0040B14B                 mov     [esp+3Ch+var_18], eax
.text:0040B14F                 mov     eax, [edi]
.text:0040B151                 cmp     eax, esi
.text:0040B153                 jz      loc_40B710
.text:0040B159                 call    _errno
.text:0040B15E                 mov     edx, [eax]
.text:0040B160                 test    edx, edx
.text:0040B162                 jnz     loc_40B6E2
.text:0040B168
.text:0040B168 loc_40B168:                             ; CODE XREF: sub_40B100+5F4↓j
.text:0040B168                                         ; sub_40B100+636↓j
.text:0040B168                 test    ebp, ebp
.text:0040B16A                 jz      loc_40B6D3
.text:0040B170                 mov     esi, [edi]
.text:0040B172                 movzx   eax, byte ptr [esi]
.text:0040B175                 test    al, al
.text:0040B177                 jnz     short loc_40B190
.text:0040B179
.text:0040B179 loc_40B179:                             ; CODE XREF: sub_40B100+230↓j
.text:0040B179                                         ; sub_40B100+23B↓j
.text:0040B179                 mov     esi, [esp+3Ch+var_18]
.text:0040B17D                 mov     edx, [esp+3Ch+arg_C]
.text:0040B181                 mov     [edx], esi
.text:0040B183
.text:0040B183 loc_40B183:                             ; CODE XREF: sub_40B100+5DD↓j
.text:0040B183                 mov     eax, [esp+3Ch+var_1C]
.text:0040B187
.text:0040B187 loc_40B187:                             ; CODE XREF: sub_40B100+C1↓j
.text:0040B187                                         ; sub_40B100+605↓j
.text:0040B187                 add     esp, 2Ch
.text:0040B18A                 pop     ebx
.text:0040B18B                 pop     esi
.text:0040B18C                 pop     edi
.text:0040B18D                 pop     ebp
.text:0040B18E                 retn
.text:0040B18E ; ---------------------------------------------------------------------------
.text:0040B18F                 align 10h
.text:0040B190
.text:0040B190 loc_40B190:                             ; CODE XREF: sub_40B100+77↑j
.text:0040B190                 mov     [esp+3Ch+var_20], 1
.text:0040B198                 movsx   edx, al
.text:0040B19B                 mov     ebx, 400h
.text:0040B1A0                 mov     [esp+3Ch+EndPtr], edx ; Val
.text:0040B1A4                 mov     [esp+3Ch+String], ebp ; Str
.text:0040B1A7                 call    strchr
.text:0040B1AC                 test    eax, eax
.text:0040B1AE                 jnz     short loc_40B1C3
.text:0040B1B0                 mov     ebp, [esp+3Ch+var_18]
.text:0040B1B4                 mov     edi, [esp+3Ch+arg_C]
.text:0040B1B8                 mov     [edi], ebp
.text:0040B1BA
.text:0040B1BA loc_40B1BA:                             ; CODE XREF: sub_40B100+55A↓j
.text:0040B1BA                 mov     eax, [esp+3Ch+var_1C]
.text:0040B1BE                 or      eax, 2
.text:0040B1C1                 jmp     short loc_40B187
.text:0040B1C3 ; ---------------------------------------------------------------------------
.text:0040B1C3
.text:0040B1C3 loc_40B1C3:                             ; CODE XREF: sub_40B100+AE↑j
.text:0040B1C3                 mov     [esp+3Ch+EndPtr], 30h ; '0' ; Val
.text:0040B1CB                 mov     [esp+3Ch+String], ebp ; Str
.text:0040B1CE                 call    strchr
.text:0040B1D3                 test    eax, eax
.text:0040B1D5                 jz      loc_40B6C8
.text:0040B1DB                 mov     ecx, [edi]
.text:0040B1DD                 mov     [esp+3Ch+var_24], ecx
.text:0040B1E1                 movsx   eax, byte ptr [ecx+1]
.text:0040B1E5                 cmp     eax, 44h ; 'D'
.text:0040B1E8                 jz      loc_40B692
.text:0040B1EE                 cmp     eax, 44h ; 'D'
.text:0040B1F1                 jg      loc_40B6A4
.text:0040B1F7                 cmp     eax, 42h ; 'B'
.text:0040B1FA                 jz      loc_40B692
.text:0040B200
.text:0040B200 loc_40B200:                             ; CODE XREF: sub_40B100+59F↓j
.text:0040B200                                         ; sub_40B100+5A7↓j ...
.text:0040B200                 mov     ebp, [esp+3Ch+var_24]
.text:0040B204                 movsx   eax, byte ptr [ebp+0]
.text:0040B208                 sub     eax, 42h ; 'B'  ; switch 54 cases
.text:0040B20B                 cmp     eax, 35h
.text:0040B20E                 ja      def_40B214      ; jumptable 0040B214 default case, cases 67,68,70,72-74,76,78,79,81-83,85-88,91-97,100-102,104-106,108,110-115,117,118
.text:0040B214                 jmp     ds:jpt_40B214[eax*4] ; switch jump
.text:0040B214 ; ---------------------------------------------------------------------------
.text:0040B21B                 align 4
.text:0040B21C jpt_40B214      dd offset loc_40B359, offset def_40B214, offset def_40B214
.text:0040B21C                                         ; DATA XREF: sub_40B100+114↑r
.text:0040B21C                 dd offset loc_40B37D, offset def_40B214, offset loc_40B4ED ; jump table for switch statement
.text:0040B21C                 dd offset def_40B214, offset def_40B214, offset def_40B214
.text:0040B21C                 dd offset loc_40B549, offset def_40B214, offset loc_40B594
.text:0040B21C                 dd offset def_40B214, offset def_40B214, offset loc_40B3D9
.text:0040B21C                 dd offset def_40B214, offset def_40B214, offset def_40B214
.text:0040B21C                 dd offset loc_40B5F1, offset def_40B214, offset def_40B214
.text:0040B21C                 dd offset def_40B214, offset def_40B214, offset loc_40B435
.text:0040B21C                 dd offset loc_40B491, offset def_40B214, offset def_40B214
.text:0040B21C                 dd offset def_40B214, offset def_40B214, offset def_40B214
.text:0040B21C                 dd offset def_40B214, offset def_40B214, offset loc_40B2F4
.text:0040B21C                 dd offset loc_40B31A, offset def_40B214, offset def_40B214
.text:0040B21C                 dd offset def_40B214, offset loc_40B4ED, offset def_40B214
.text:0040B21C                 dd offset def_40B214, offset def_40B214, offset loc_40B549
.text:0040B21C                 dd offset def_40B214, offset loc_40B594, offset def_40B214
.text:0040B21C                 dd offset def_40B214, offset def_40B214, offset def_40B214
.text:0040B21C                 dd offset def_40B214, offset def_40B214, offset loc_40B5F1
.text:0040B21C                 dd offset def_40B214, offset def_40B214, offset loc_40B65F
.text:0040B2F4 ; ---------------------------------------------------------------------------
.text:0040B2F4
.text:0040B2F4 loc_40B2F4:                             ; CODE XREF: sub_40B100+114↑j
.text:0040B2F4                                         ; DATA XREF: sub_40B100:jpt_40B214↑o
.text:0040B2F4                 mov     ecx, [esp+3Ch+var_18] ; jumptable 0040B214 case 98
.text:0040B2F8                 mov     edx, 200h
.text:0040B2FD                 cmp     ecx, 0FFC00000h
.text:0040B303                 jl      short loc_40B34F
.text:0040B305                 mov     eax, 7FFFFFFFh
.text:0040B30A                 mov     esi, edx
.text:0040B30C                 cdq
.text:0040B30D                 idiv    esi
.text:0040B30F                 cmp     eax, ecx
.text:0040B311                 jl      short loc_40B340
.text:0040B313                 shl     ecx, 9
.text:0040B316
.text:0040B316 loc_40B316:                             ; CODE XREF: sub_40B100+27B↓j
.text:0040B316                 mov     [esp+3Ch+var_18], ecx
.text:0040B31A
.text:0040B31A loc_40B31A:                             ; CODE XREF: sub_40B100+114↑j
.text:0040B31A                                         ; sub_40B100+58D↓j
.text:0040B31A                                         ; DATA XREF: ...
.text:0040B31A                 xor     eax, eax        ; jumptable 0040B214 case 99
.text:0040B31C
.text:0040B31C loc_40B31C:                             ; CODE XREF: sub_40B100+24D↓j
.text:0040B31C                                         ; sub_40B100+2AF↓j ...
.text:0040B31C                 or      [esp+3Ch+var_1C], eax
.text:0040B320                 mov     ebp, [esp+3Ch+var_24]
.text:0040B324                 mov     eax, [esp+3Ch+var_20]
.text:0040B328                 add     ebp, eax
.text:0040B32A                 mov     [edi], ebp
.text:0040B32C                 cmp     byte ptr [ebp+0], 0
.text:0040B330                 jz      loc_40B179
.text:0040B336                 or      [esp+3Ch+var_1C], 2
.text:0040B33B                 jmp     loc_40B179
.text:0040B340 ; ---------------------------------------------------------------------------
.text:0040B340
.text:0040B340 loc_40B340:                             ; CODE XREF: sub_40B100+211↑j
.text:0040B340                                         ; sub_40B100+276↓j ...
.text:0040B340                 mov     [esp+3Ch+var_18], 7FFFFFFFh
.text:0040B348
.text:0040B348 loc_40B348:                             ; CODE XREF: sub_40B100+257↓j
.text:0040B348                 mov     eax, 1
.text:0040B34D                 jmp     short loc_40B31C
.text:0040B34F ; ---------------------------------------------------------------------------
.text:0040B34F
.text:0040B34F loc_40B34F:                             ; CODE XREF: sub_40B100+203↑j
.text:0040B34F                                         ; sub_40B100+268↓j ...
.text:0040B34F                 mov     [esp+3Ch+var_18], 80000000h
.text:0040B357                 jmp     short loc_40B348
.text:0040B359 ; ---------------------------------------------------------------------------
.text:0040B359
.text:0040B359 loc_40B359:                             ; CODE XREF: sub_40B100+114↑j
.text:0040B359                                         ; DATA XREF: sub_40B100:jpt_40B214↑o
.text:0040B359                 mov     ecx, [esp+3Ch+var_18] ; jumptable 0040B214 case 66
.text:0040B35D                 mov     edx, 400h
.text:0040B362                 cmp     ecx, 0FFE00000h
.text:0040B368                 jl      short loc_40B34F
.text:0040B36A                 mov     eax, 7FFFFFFFh
.text:0040B36F                 mov     ebp, edx
.text:0040B371                 cdq
.text:0040B372                 idiv    ebp
.text:0040B374                 cmp     eax, ecx
.text:0040B376                 jl      short loc_40B340
.text:0040B378                 shl     ecx, 0Ah
.text:0040B37B                 jmp     short loc_40B316
.text:0040B37D ; ---------------------------------------------------------------------------
.text:0040B37D
.text:0040B37D loc_40B37D:                             ; CODE XREF: sub_40B100+114↑j
.text:0040B37D                                         ; DATA XREF: sub_40B100:jpt_40B214↑o
.text:0040B37D                 xor     ebp, ebp        ; jumptable 0040B214 case 69
.text:0040B37F                 mov     esi, 5
.text:0040B384
.text:0040B384 loc_40B384:                             ; CODE XREF: sub_40B100+2AD↓j
.text:0040B384                 mov     eax, 80000000h
.text:0040B389                 mov     ecx, [esp+3Ch+var_18]
.text:0040B38D                 cdq
.text:0040B38E                 idiv    ebx
.text:0040B390                 cmp     ecx, eax
.text:0040B392                 mov     [esp+3Ch+var_28], eax
.text:0040B396                 jge     short loc_40B3B4
.text:0040B398                 mov     [esp+3Ch+var_18], 80000000h
.text:0040B3A0
.text:0040B3A0 loc_40B3A0:                             ; CODE XREF: sub_40B100+2CC↓j
.text:0040B3A0                 mov     eax, 1
.text:0040B3A5
.text:0040B3A5 loc_40B3A5:                             ; CODE XREF: sub_40B100+2D7↓j
.text:0040B3A5                 dec     esi
.text:0040B3A6                 or      ebp, eax
.text:0040B3A8                 cmp     esi, 0FFFFFFFFh
.text:0040B3AB                 mov     eax, ebp
.text:0040B3AD                 jnz     short loc_40B384
.text:0040B3AF                 jmp     loc_40B31C
.text:0040B3B4 ; ---------------------------------------------------------------------------
.text:0040B3B4
.text:0040B3B4 loc_40B3B4:                             ; CODE XREF: sub_40B100+296↑j
.text:0040B3B4                 mov     eax, 7FFFFFFFh
.text:0040B3B9                 cdq
.text:0040B3BA                 idiv    ebx
.text:0040B3BC                 cmp     eax, ecx
.text:0040B3BE                 mov     [esp+3Ch+var_28], eax
.text:0040B3C2                 jge     short loc_40B3CE
.text:0040B3C4                 mov     [esp+3Ch+var_18], 7FFFFFFFh
.text:0040B3CC                 jmp     short loc_40B3A0
.text:0040B3CE ; ---------------------------------------------------------------------------
.text:0040B3CE
.text:0040B3CE loc_40B3CE:                             ; CODE XREF: sub_40B100+2C2↑j
.text:0040B3CE                 imul    ecx, ebx
.text:0040B3D1                 xor     eax, eax
.text:0040B3D3                 mov     [esp+3Ch+var_18], ecx
.text:0040B3D7                 jmp     short loc_40B3A5
.text:0040B3D9 ; ---------------------------------------------------------------------------
.text:0040B3D9
.text:0040B3D9 loc_40B3D9:                             ; CODE XREF: sub_40B100+114↑j
.text:0040B3D9                                         ; DATA XREF: sub_40B100:jpt_40B214↑o
.text:0040B3D9                 xor     ebp, ebp        ; jumptable 0040B214 case 80
.text:0040B3DB                 mov     esi, 4
.text:0040B3E0
.text:0040B3E0 loc_40B3E0:                             ; CODE XREF: sub_40B100+309↓j
.text:0040B3E0                 mov     eax, 80000000h
.text:0040B3E5                 mov     ecx, [esp+3Ch+var_18]
.text:0040B3E9                 cdq
.text:0040B3EA                 idiv    ebx
.text:0040B3EC                 cmp     ecx, eax
.text:0040B3EE                 mov     [esp+3Ch+var_28], eax
.text:0040B3F2                 jge     short loc_40B410
.text:0040B3F4                 mov     [esp+3Ch+var_18], 80000000h
.text:0040B3FC
.text:0040B3FC loc_40B3FC:                             ; CODE XREF: sub_40B100+328↓j
.text:0040B3FC                 mov     eax, 1
.text:0040B401
.text:0040B401 loc_40B401:                             ; CODE XREF: sub_40B100+333↓j
.text:0040B401                 dec     esi
.text:0040B402                 or      ebp, eax
.text:0040B404                 cmp     esi, 0FFFFFFFFh
.text:0040B407                 mov     eax, ebp
.text:0040B409                 jnz     short loc_40B3E0
.text:0040B40B                 jmp     loc_40B31C
.text:0040B410 ; ---------------------------------------------------------------------------
.text:0040B410
.text:0040B410 loc_40B410:                             ; CODE XREF: sub_40B100+2F2↑j
.text:0040B410                 mov     eax, 7FFFFFFFh
.text:0040B415                 cdq
.text:0040B416                 idiv    ebx
.text:0040B418                 cmp     eax, ecx
.text:0040B41A                 mov     [esp+3Ch+var_28], eax
.text:0040B41E                 jge     short loc_40B42A
.text:0040B420                 mov     [esp+3Ch+var_18], 7FFFFFFFh
.text:0040B428                 jmp     short loc_40B3FC
.text:0040B42A ; ---------------------------------------------------------------------------
.text:0040B42A
.text:0040B42A loc_40B42A:                             ; CODE XREF: sub_40B100+31E↑j
.text:0040B42A                 imul    ecx, ebx
.text:0040B42D                 xor     eax, eax
.text:0040B42F                 mov     [esp+3Ch+var_18], ecx
.text:0040B433                 jmp     short loc_40B401
.text:0040B435 ; ---------------------------------------------------------------------------
.text:0040B435
.text:0040B435 loc_40B435:                             ; CODE XREF: sub_40B100+114↑j
.text:0040B435                                         ; DATA XREF: sub_40B100:jpt_40B214↑o
.text:0040B435                 xor     ebp, ebp        ; jumptable 0040B214 case 89
.text:0040B437                 mov     esi, 7
.text:0040B43C
.text:0040B43C loc_40B43C:                             ; CODE XREF: sub_40B100+365↓j
.text:0040B43C                 mov     eax, 80000000h
.text:0040B441                 mov     ecx, [esp+3Ch+var_18]
.text:0040B445                 cdq
.text:0040B446                 idiv    ebx
.text:0040B448                 cmp     ecx, eax
.text:0040B44A                 mov     [esp+3Ch+var_28], eax
.text:0040B44E                 jge     short loc_40B46C
.text:0040B450                 mov     [esp+3Ch+var_18], 80000000h
.text:0040B458
.text:0040B458 loc_40B458:                             ; CODE XREF: sub_40B100+384↓j
.text:0040B458                 mov     eax, 1
.text:0040B45D
.text:0040B45D loc_40B45D:                             ; CODE XREF: sub_40B100+38F↓j
.text:0040B45D                 dec     esi
.text:0040B45E                 or      ebp, eax
.text:0040B460                 cmp     esi, 0FFFFFFFFh
.text:0040B463                 mov     eax, ebp
.text:0040B465                 jnz     short loc_40B43C
.text:0040B467                 jmp     loc_40B31C
.text:0040B46C ; ---------------------------------------------------------------------------
.text:0040B46C
.text:0040B46C loc_40B46C:                             ; CODE XREF: sub_40B100+34E↑j
.text:0040B46C                 mov     eax, 7FFFFFFFh
.text:0040B471                 cdq
.text:0040B472                 idiv    ebx
.text:0040B474                 cmp     eax, ecx
.text:0040B476                 mov     [esp+3Ch+var_28], eax
.text:0040B47A                 jge     short loc_40B486
.text:0040B47C                 mov     [esp+3Ch+var_18], 7FFFFFFFh
.text:0040B484                 jmp     short loc_40B458
.text:0040B486 ; ---------------------------------------------------------------------------
.text:0040B486
.text:0040B486 loc_40B486:                             ; CODE XREF: sub_40B100+37A↑j
.text:0040B486                 imul    ecx, ebx
.text:0040B489                 xor     eax, eax
.text:0040B48B                 mov     [esp+3Ch+var_18], ecx
.text:0040B48F                 jmp     short loc_40B45D
.text:0040B491 ; ---------------------------------------------------------------------------
.text:0040B491
.text:0040B491 loc_40B491:                             ; CODE XREF: sub_40B100+114↑j
.text:0040B491                                         ; DATA XREF: sub_40B100:jpt_40B214↑o
.text:0040B491                 xor     ebp, ebp        ; jumptable 0040B214 case 90
.text:0040B493                 mov     esi, 6
.text:0040B498
.text:0040B498 loc_40B498:                             ; CODE XREF: sub_40B100+3C1↓j
.text:0040B498                 mov     eax, 80000000h
.text:0040B49D                 mov     ecx, [esp+3Ch+var_18]
.text:0040B4A1                 cdq
.text:0040B4A2                 idiv    ebx
.text:0040B4A4                 cmp     ecx, eax
.text:0040B4A6                 mov     [esp+3Ch+var_28], eax
.text:0040B4AA                 jge     short loc_40B4C8
.text:0040B4AC                 mov     [esp+3Ch+var_18], 80000000h
.text:0040B4B4
.text:0040B4B4 loc_40B4B4:                             ; CODE XREF: sub_40B100+3E0↓j
.text:0040B4B4                 mov     eax, 1
.text:0040B4B9
.text:0040B4B9 loc_40B4B9:                             ; CODE XREF: sub_40B100+3EB↓j
.text:0040B4B9                 dec     esi
.text:0040B4BA                 or      ebp, eax
.text:0040B4BC                 cmp     esi, 0FFFFFFFFh
.text:0040B4BF                 mov     eax, ebp
.text:0040B4C1                 jnz     short loc_40B498
.text:0040B4C3                 jmp     loc_40B31C
.text:0040B4C8 ; ---------------------------------------------------------------------------
.text:0040B4C8
.text:0040B4C8 loc_40B4C8:                             ; CODE XREF: sub_40B100+3AA↑j
.text:0040B4C8                 mov     eax, 7FFFFFFFh
.text:0040B4CD                 cdq
.text:0040B4CE                 idiv    ebx
.text:0040B4D0                 cmp     eax, ecx
.text:0040B4D2                 mov     [esp+3Ch+var_28], eax
.text:0040B4D6                 jge     short loc_40B4E2
.text:0040B4D8                 mov     [esp+3Ch+var_18], 7FFFFFFFh
.text:0040B4E0                 jmp     short loc_40B4B4
.text:0040B4E2 ; ---------------------------------------------------------------------------
.text:0040B4E2
.text:0040B4E2 loc_40B4E2:                             ; CODE XREF: sub_40B100+3D6↑j
.text:0040B4E2                 imul    ecx, ebx
.text:0040B4E5                 xor     eax, eax
.text:0040B4E7                 mov     [esp+3Ch+var_18], ecx
.text:0040B4EB                 jmp     short loc_40B4B9
.text:0040B4ED ; ---------------------------------------------------------------------------
.text:0040B4ED
.text:0040B4ED loc_40B4ED:                             ; CODE XREF: sub_40B100+114↑j
.text:0040B4ED                                         ; DATA XREF: sub_40B100:jpt_40B214↑o
.text:0040B4ED                 xor     ebp, ebp        ; jumptable 0040B214 cases 71,103
.text:0040B4EF                 mov     esi, 2
.text:0040B4F4
.text:0040B4F4 loc_40B4F4:                             ; CODE XREF: sub_40B100+41D↓j
.text:0040B4F4                 mov     eax, 80000000h
.text:0040B4F9                 mov     ecx, [esp+3Ch+var_18]
.text:0040B4FD                 cdq
.text:0040B4FE                 idiv    ebx
.text:0040B500                 cmp     ecx, eax
.text:0040B502                 mov     [esp+3Ch+var_28], eax
.text:0040B506                 jge     short loc_40B524
.text:0040B508                 mov     [esp+3Ch+var_18], 80000000h
.text:0040B510
.text:0040B510 loc_40B510:                             ; CODE XREF: sub_40B100+43C↓j
.text:0040B510                 mov     eax, 1
.text:0040B515
.text:0040B515 loc_40B515:                             ; CODE XREF: sub_40B100+447↓j
.text:0040B515                 dec     esi
.text:0040B516                 or      ebp, eax
.text:0040B518                 cmp     esi, 0FFFFFFFFh
.text:0040B51B                 mov     eax, ebp
.text:0040B51D                 jnz     short loc_40B4F4
.text:0040B51F                 jmp     loc_40B31C
.text:0040B524 ; ---------------------------------------------------------------------------
.text:0040B524
.text:0040B524 loc_40B524:                             ; CODE XREF: sub_40B100+406↑j
.text:0040B524                 mov     eax, 7FFFFFFFh
.text:0040B529                 cdq
.text:0040B52A                 idiv    ebx
.text:0040B52C                 cmp     eax, ecx
.text:0040B52E                 mov     [esp+3Ch+var_28], eax
.text:0040B532                 jge     short loc_40B53E
.text:0040B534                 mov     [esp+3Ch+var_18], 7FFFFFFFh
.text:0040B53C                 jmp     short loc_40B510
.text:0040B53E ; ---------------------------------------------------------------------------
.text:0040B53E
.text:0040B53E loc_40B53E:                             ; CODE XREF: sub_40B100+432↑j
.text:0040B53E                 imul    ecx, ebx
.text:0040B541                 xor     eax, eax
.text:0040B543                 mov     [esp+3Ch+var_18], ecx
.text:0040B547                 jmp     short loc_40B515
.text:0040B549 ; ---------------------------------------------------------------------------
.text:0040B549
.text:0040B549 loc_40B549:                             ; CODE XREF: sub_40B100+114↑j
.text:0040B549                                         ; DATA XREF: sub_40B100:jpt_40B214↑o
.text:0040B549                 mov     eax, 80000000h  ; jumptable 0040B214 cases 75,107
.text:0040B54E                 mov     ecx, [esp+3Ch+var_18]
.text:0040B552                 lea     ebp, [esp+3Ch+var_18]
.text:0040B556                 cdq
.text:0040B557                 mov     esi, 7FFFFFFFh
.text:0040B55C                 idiv    ebx
.text:0040B55E                 cmp     ecx, eax
.text:0040B560                 jge     short loc_40B578
.text:0040B562                 mov     [esp+3Ch+var_18], 80000000h
.text:0040B56A
.text:0040B56A loc_40B56A:                             ; CODE XREF: sub_40B100+488↓j
.text:0040B56A                 mov     edx, 1
.text:0040B56F
.text:0040B56F loc_40B56F:                             ; CODE XREF: sub_40B100+492↓j
.text:0040B56F                 xor     eax, eax
.text:0040B571                 or      eax, edx
.text:0040B573                 jmp     loc_40B31C
.text:0040B578 ; ---------------------------------------------------------------------------
.text:0040B578
.text:0040B578 loc_40B578:                             ; CODE XREF: sub_40B100+460↑j
.text:0040B578                 mov     eax, esi
.text:0040B57A                 cdq
.text:0040B57B                 idiv    ebx
.text:0040B57D                 cmp     eax, ecx
.text:0040B57F                 jge     short loc_40B58A
.text:0040B581                 mov     dword ptr [ebp+0], 7FFFFFFFh
.text:0040B588                 jmp     short loc_40B56A
.text:0040B58A ; ---------------------------------------------------------------------------
.text:0040B58A
.text:0040B58A loc_40B58A:                             ; CODE XREF: sub_40B100+47F↑j
.text:0040B58A                 imul    ecx, ebx
.text:0040B58D                 xor     edx, edx
.text:0040B58F                 mov     [ebp+0], ecx
.text:0040B592                 jmp     short loc_40B56F
.text:0040B594 ; ---------------------------------------------------------------------------
.text:0040B594
.text:0040B594 loc_40B594:                             ; CODE XREF: sub_40B100+114↑j
.text:0040B594                                         ; DATA XREF: sub_40B100:jpt_40B214↑o
.text:0040B594                 xor     ebp, ebp        ; jumptable 0040B214 cases 77,109
.text:0040B596                 mov     esi, 1
.text:0040B59B
.text:0040B59B loc_40B59B:                             ; CODE XREF: sub_40B100+4CA↓j
.text:0040B59B                 mov     eax, 80000000h
.text:0040B5A0                 mov     ecx, [esp+3Ch+var_18]
.text:0040B5A4                 cdq
.text:0040B5A5                 idiv    ebx
.text:0040B5A7                 cmp     ecx, eax
.text:0040B5A9                 mov     [esp+3Ch+var_28], eax
.text:0040B5AD                 jge     short loc_40B5CC
.text:0040B5AF                 mov     [esp+3Ch+var_18], 80000000h
.text:0040B5B7
.text:0040B5B7 loc_40B5B7:                             ; CODE XREF: sub_40B100+4E4↓j
.text:0040B5B7                 mov     eax, 1
.text:0040B5BC
.text:0040B5BC loc_40B5BC:                             ; CODE XREF: sub_40B100+4EF↓j
.text:0040B5BC                 dec     esi
.text:0040B5BD                 or      ebp, eax
.text:0040B5BF                 cmp     esi, 0FFFFFFFFh
.text:0040B5C2                 mov     eax, ebp
.text:0040B5C4                 jz      loc_40B31C
.text:0040B5CA                 jmp     short loc_40B59B
.text:0040B5CC ; ---------------------------------------------------------------------------
.text:0040B5CC
.text:0040B5CC loc_40B5CC:                             ; CODE XREF: sub_40B100+4AD↑j
.text:0040B5CC                 mov     eax, 7FFFFFFFh
.text:0040B5D1                 cdq
.text:0040B5D2                 idiv    ebx
.text:0040B5D4                 cmp     eax, ecx
.text:0040B5D6                 mov     [esp+3Ch+var_28], eax
.text:0040B5DA                 jge     short loc_40B5E6
.text:0040B5DC                 mov     [esp+3Ch+var_18], 7FFFFFFFh
.text:0040B5E4                 jmp     short loc_40B5B7
.text:0040B5E6 ; ---------------------------------------------------------------------------
.text:0040B5E6
.text:0040B5E6 loc_40B5E6:                             ; CODE XREF: sub_40B100+4DA↑j
.text:0040B5E6                 imul    ecx, ebx
.text:0040B5E9                 xor     eax, eax
.text:0040B5EB                 mov     [esp+3Ch+var_18], ecx
.text:0040B5EF                 jmp     short loc_40B5BC
.text:0040B5F1 ; ---------------------------------------------------------------------------
.text:0040B5F1
.text:0040B5F1 loc_40B5F1:                             ; CODE XREF: sub_40B100+114↑j
.text:0040B5F1                                         ; DATA XREF: sub_40B100:jpt_40B214↑o
.text:0040B5F1                 xor     ebp, ebp        ; jumptable 0040B214 cases 84,116
.text:0040B5F3                 mov     esi, 3
.text:0040B5F8
.text:0040B5F8 loc_40B5F8:                             ; CODE XREF: sub_40B100+521↓j
.text:0040B5F8                 mov     eax, 80000000h
.text:0040B5FD                 mov     ecx, [esp+3Ch+var_18]
.text:0040B601                 cdq
.text:0040B602                 idiv    ebx
.text:0040B604                 cmp     ecx, eax
.text:0040B606                 mov     [esp+3Ch+var_28], eax
.text:0040B60A                 jge     short loc_40B628
.text:0040B60C                 mov     [esp+3Ch+var_18], 80000000h
.text:0040B614
.text:0040B614 loc_40B614:                             ; CODE XREF: sub_40B100+540↓j
.text:0040B614                 mov     eax, 1
.text:0040B619
.text:0040B619 loc_40B619:                             ; CODE XREF: sub_40B100+54B↓j
.text:0040B619                 dec     esi
.text:0040B61A                 or      ebp, eax
.text:0040B61C                 cmp     esi, 0FFFFFFFFh
.text:0040B61F                 mov     eax, ebp
.text:0040B621                 jnz     short loc_40B5F8
.text:0040B623                 jmp     loc_40B31C
.text:0040B628 ; ---------------------------------------------------------------------------
.text:0040B628
.text:0040B628 loc_40B628:                             ; CODE XREF: sub_40B100+50A↑j
.text:0040B628                 mov     eax, 7FFFFFFFh
.text:0040B62D                 cdq
.text:0040B62E                 idiv    ebx
.text:0040B630                 cmp     eax, ecx
.text:0040B632                 mov     [esp+3Ch+var_28], eax
.text:0040B636                 jge     short loc_40B642
.text:0040B638                 mov     [esp+3Ch+var_18], 7FFFFFFFh
.text:0040B640                 jmp     short loc_40B614
.text:0040B642 ; ---------------------------------------------------------------------------
.text:0040B642
.text:0040B642 loc_40B642:                             ; CODE XREF: sub_40B100+536↑j
.text:0040B642                 imul    ecx, ebx
.text:0040B645                 xor     eax, eax
.text:0040B647                 mov     [esp+3Ch+var_18], ecx
.text:0040B64B                 jmp     short loc_40B619
.text:0040B64B ; ---------------------------------------------------------------------------
.text:0040B64D                 align 10h
.text:0040B650
.text:0040B650 def_40B214:                             ; CODE XREF: sub_40B100+10E↑j
.text:0040B650                                         ; sub_40B100+114↑j
.text:0040B650                                         ; DATA XREF: ...
.text:0040B650                 mov     ecx, [esp+3Ch+var_18] ; jumptable 0040B214 default case, cases 67,68,70,72-74,76,78,79,81-83,85-88,91-97,100-102,104-106,108,110-115,117,118
.text:0040B654                 mov     edi, [esp+3Ch+arg_C]
.text:0040B658                 mov     [edi], ecx
.text:0040B65A                 jmp     loc_40B1BA
.text:0040B65F ; ---------------------------------------------------------------------------
.text:0040B65F
.text:0040B65F loc_40B65F:                             ; CODE XREF: sub_40B100+114↑j
.text:0040B65F                                         ; DATA XREF: sub_40B100:jpt_40B214↑o
.text:0040B65F                 mov     ecx, [esp+3Ch+var_18] ; jumptable 0040B214 case 119
.text:0040B663                 mov     edx, 2
.text:0040B668                 cmp     ecx, 0C0000000h
.text:0040B66E                 jl      loc_40B34F
.text:0040B674                 mov     eax, 7FFFFFFFh
.text:0040B679                 mov     esi, edx
.text:0040B67B                 cdq
.text:0040B67C                 idiv    esi
.text:0040B67E                 cmp     eax, ecx
.text:0040B680                 jl      loc_40B340
.text:0040B686                 lea     ebx, [ecx+ecx]
.text:0040B689                 mov     [esp+3Ch+var_18], ebx
.text:0040B68D                 jmp     loc_40B31A      ; jumptable 0040B214 case 99
.text:0040B692 ; ---------------------------------------------------------------------------
.text:0040B692
.text:0040B692 loc_40B692:                             ; CODE XREF: sub_40B100+E8↑j
.text:0040B692                                         ; sub_40B100+FA↑j
.text:0040B692                 mov     [esp+3Ch+var_20], 2
.text:0040B69A                 mov     ebx, 3E8h
.text:0040B69F                 jmp     loc_40B200
.text:0040B6A4 ; ---------------------------------------------------------------------------
.text:0040B6A4
.text:0040B6A4 loc_40B6A4:                             ; CODE XREF: sub_40B100+F1↑j
.text:0040B6A4                 cmp     eax, 69h ; 'i'
.text:0040B6A7                 jnz     loc_40B200
.text:0040B6AD                 mov     eax, [esp+3Ch+var_24]
.text:0040B6B1                 cmp     byte ptr [eax+2], 42h ; 'B'
.text:0040B6B5                 jnz     loc_40B200
.text:0040B6BB                 mov     [esp+3Ch+var_20], 3
.text:0040B6C3                 jmp     loc_40B200
.text:0040B6C8 ; ---------------------------------------------------------------------------
.text:0040B6C8
.text:0040B6C8 loc_40B6C8:                             ; CODE XREF: sub_40B100+D5↑j
.text:0040B6C8                 mov     esi, [edi]
.text:0040B6CA                 mov     [esp+3Ch+var_24], esi
.text:0040B6CE                 jmp     loc_40B200
.text:0040B6D3 ; ---------------------------------------------------------------------------
.text:0040B6D3
.text:0040B6D3 loc_40B6D3:                             ; CODE XREF: sub_40B100+6A↑j
.text:0040B6D3                 mov     ebx, [esp+3Ch+var_18]
.text:0040B6D7                 mov     ecx, [esp+3Ch+arg_C]
.text:0040B6DB                 mov     [ecx], ebx
.text:0040B6DD                 jmp     loc_40B183
.text:0040B6E2 ; ---------------------------------------------------------------------------
.text:0040B6E2
.text:0040B6E2 loc_40B6E2:                             ; CODE XREF: sub_40B100+62↑j
.text:0040B6E2                 call    _errno
.text:0040B6E7                 cmp     dword ptr [eax], 22h ; '"'
.text:0040B6EA                 jnz     short loc_40B700
.text:0040B6EC                 mov     [esp+3Ch+var_1C], 1
.text:0040B6F4                 jmp     loc_40B168
.text:0040B6F4 ; ---------------------------------------------------------------------------
.text:0040B6F9                 align 10h
.text:0040B700
.text:0040B700 loc_40B700:                             ; CODE XREF: sub_40B100+5EA↑j
.text:0040B700                                         ; sub_40B100+612↓j ...
.text:0040B700                 mov     eax, 4
.text:0040B705                 jmp     loc_40B187
.text:0040B705 ; ---------------------------------------------------------------------------
.text:0040B70A                 align 10h
.text:0040B710
.text:0040B710 loc_40B710:                             ; CODE XREF: sub_40B100+53↑j
.text:0040B710                 test    ebp, ebp
.text:0040B712                 jz      short loc_40B700
.text:0040B714                 movzx   eax, byte ptr [eax]
.text:0040B717                 test    al, al
.text:0040B719                 jz      short loc_40B700
.text:0040B71B                 mov     [esp+3Ch+String], ebp ; Str
.text:0040B71E                 movsx   edx, al
.text:0040B721                 mov     [esp+3Ch+EndPtr], edx ; Val
.text:0040B725                 call    strchr
.text:0040B72A                 test    eax, eax
.text:0040B72C                 jz      short loc_40B700
.text:0040B72E                 mov     [esp+3Ch+var_18], 1
.text:0040B736                 jmp     loc_40B168
.text:0040B736 ; ---------------------------------------------------------------------------
.text:0040B73B                 align 10h
.text:0040B740
.text:0040B740 loc_40B740:                             ; CODE XREF: sub_40B100+2A↑j
.text:0040B740                 lea     edi, [esp+3Ch+var_14]
.text:0040B744                 jmp     loc_40B130
.text:0040B749 ; ---------------------------------------------------------------------------
.text:0040B749
.text:0040B749 loc_40B749:                             ; CODE XREF: sub_40B100+1E↑j
.text:0040B749                 mov     [esp+3Ch+Radix], 70h ; 'p'
.text:0040B751                 mov     [esp+3Ch+EndPtr], offset aCoreutils530Sr ; "../../coreutils-5.3.0-src/lib/xstrtol.c"
.text:0040B759                 mov     [esp+3Ch+String], offset a0StrtolBaseStr ; "0 <= strtol_base && strtol_base <= 36"
.text:0040B760                 call    _assert
.text:0040B760 sub_40B100      endp
.text:0040B760
.text:0040B760 ; ---------------------------------------------------------------------------
.text:0040B765                 align 10h
.text:0040B770
.text:0040B770 loc_40B770:                             ; DATA XREF: sub_40B7E0+EBC↓o
.text:0040B770                 db      2Eh, 2Eh
.text:0040B770                 das
.text:0040B773                 db      2Eh, 2Eh
.text:0040B773                 das
.text:0040B776                 arpl    [edi+72h], bp
.text:0040B779                 db      65h
.text:0040B779                 jnz     short near ptr loc_40B7EC+4
.text:0040B77C                 imul    ebp, [ebx+esi*2+2Dh], 2E332E35h
.text:0040B784                 xor     ds:2F637273h, ch
.text:0040B78A                 insb
.text:0040B78B                 imul    esp, [edx+2Fh], 72747378h
.text:0040B792                 jz      short near ptr loc_40B801+2
.text:0040B794                 insb
.text:0040B795                 arpl    cs:[eax], ax
.text:0040B798                 nop
.text:0040B799                 nop
.text:0040B79A                 nop
.text:0040B79B                 nop
.text:0040B79C                 nop
.text:0040B79D                 nop
.text:0040B79E                 nop
.text:0040B79F                 nop
.text:0040B7A0                 nop
.text:0040B7A1                 nop
.text:0040B7A2                 nop
.text:0040B7A3                 nop
.text:0040B7A4                 nop
.text:0040B7A5                 nop
.text:0040B7A6                 nop
.text:0040B7A7                 nop
.text:0040B7A8                 nop
.text:0040B7A9                 nop
.text:0040B7AA                 nop
.text:0040B7AB                 nop
.text:0040B7AC                 nop
.text:0040B7AD                 nop
.text:0040B7AE                 nop
.text:0040B7AF                 nop
.text:0040B7B0
.text:0040B7B0 loc_40B7B0:                             ; DATA XREF: sub_40B7E0+EC4↓o
.text:0040B7B0                 xor     [eax], ah
.text:0040B7B2                 cmp     al, 3Dh ; '='
.text:0040B7B4                 and     [ebx+74h], dh
.text:0040B7B7                 jb      short near ptr loc_40B82B+2
.text:0040B7B9                 outsd
.text:0040B7BA                 insb
.text:0040B7BB                 pop     edi
.text:0040B7BC                 bound   esp, [ecx+73h]
.text:0040B7BF                 and     gs:[esi], ah
.text:0040B7C2                 and     es:[ebx+74h], dh
.text:0040B7C6                 jb      short near ptr loc_40B83B+1
.text:0040B7C8                 outsd
.text:0040B7C9                 insb
.text:0040B7CA                 pop     edi
.text:0040B7CB                 bound   esp, [ecx+73h]
.text:0040B7CE                 and     gs:363320h[edi], bh
.text:0040B7D6                 lea     esi, [esi+0]
.text:0040B7D9                 lea     edi, [edi+0]
.text:0040B7E0
.text:0040B7E0 ; =============== S U B R O U T I N E =======================================
.text:0040B7E0
.text:0040B7E0
.text:0040B7E0 ; int __cdecl sub_40B7E0(int, int, int, int, char *)
.text:0040B7E0 sub_40B7E0      proc near               ; CODE XREF: sub_401E90+46B↑p
.text:0040B7E0                                         ; sub_401E90+566↑p ...
.text:0040B7E0
.text:0040B7E0 Str             = dword ptr -0FCh
.text:0040B7E0 Val             = dword ptr -0F8h
.text:0040B7E0 Radix           = dword ptr -0F4h
.text:0040B7E0 var_F0          = dword ptr -0F0h
.text:0040B7E0 var_E4          = dword ptr -0E4h
.text:0040B7E0 var_E0          = dword ptr -0E0h
.text:0040B7E0 var_DC          = dword ptr -0DCh
.text:0040B7E0 var_D8          = dword ptr -0D8h
.text:0040B7E0 var_D4          = dword ptr -0D4h
.text:0040B7E0 var_D0          = dword ptr -0D0h
.text:0040B7E0 var_CC          = dword ptr -0CCh
.text:0040B7E0 var_C8          = dword ptr -0C8h
.text:0040B7E0 var_C4          = dword ptr -0C4h
.text:0040B7E0 var_C0          = dword ptr -0C0h
.text:0040B7E0 var_BC          = dword ptr -0BCh
.text:0040B7E0 var_B8          = dword ptr -0B8h
.text:0040B7E0 var_B4          = dword ptr -0B4h
.text:0040B7E0 var_B0          = dword ptr -0B0h
.text:0040B7E0 var_AC          = dword ptr -0ACh
.text:0040B7E0 var_A8          = dword ptr -0A8h
.text:0040B7E0 var_A4          = dword ptr -0A4h
.text:0040B7E0 var_A0          = dword ptr -0A0h
.text:0040B7E0 var_9C          = dword ptr -9Ch
.text:0040B7E0 var_98          = dword ptr -98h
.text:0040B7E0 var_94          = dword ptr -94h
.text:0040B7E0 var_90          = dword ptr -90h
.text:0040B7E0 var_8C          = dword ptr -8Ch
.text:0040B7E0 var_88          = dword ptr -88h
.text:0040B7E0 var_84          = dword ptr -84h
.text:0040B7E0 var_80          = dword ptr -80h
.text:0040B7E0 var_7C          = dword ptr -7Ch
.text:0040B7E0 var_78          = dword ptr -78h
.text:0040B7E0 var_74          = dword ptr -74h
.text:0040B7E0 var_70          = dword ptr -70h
.text:0040B7E0 var_6C          = dword ptr -6Ch
.text:0040B7E0 var_68          = dword ptr -68h
.text:0040B7E0 var_64          = dword ptr -64h
.text:0040B7E0 var_60          = dword ptr -60h
.text:0040B7E0 var_5C          = dword ptr -5Ch
.text:0040B7E0 var_58          = dword ptr -58h
.text:0040B7E0 var_54          = dword ptr -54h
.text:0040B7E0 var_50          = dword ptr -50h
.text:0040B7E0 var_4C          = dword ptr -4Ch
.text:0040B7E0 var_48          = dword ptr -48h
.text:0040B7E0 var_44          = dword ptr -44h
.text:0040B7E0 var_40          = dword ptr -40h
.text:0040B7E0 var_3C          = dword ptr -3Ch
.text:0040B7E0 var_38          = dword ptr -38h
.text:0040B7E0 var_34          = dword ptr -34h
.text:0040B7E0 var_30          = dword ptr -30h
.text:0040B7E0 var_2C          = dword ptr -2Ch
.text:0040B7E0 var_28          = dword ptr -28h
.text:0040B7E0 var_24          = dword ptr -24h
.text:0040B7E0 var_20          = dword ptr -20h
.text:0040B7E0 var_18          = byte ptr -18h
.text:0040B7E0 String          = dword ptr  4
.text:0040B7E0 EndPtr          = dword ptr  8
.text:0040B7E0 arg_8           = dword ptr  0Ch
.text:0040B7E0 arg_C           = dword ptr  10h
.text:0040B7E0 arg_10          = dword ptr  14h
.text:0040B7E0
.text:0040B7E0                 push    ebp
.text:0040B7E1                 xor     edx, edx
.text:0040B7E3                 push    edi
.text:0040B7E4                 push    esi
.text:0040B7E5                 push    ebx
.text:0040B7E6                 sub     esp, 0ECh
.text:0040B7EC
.text:0040B7EC loc_40B7EC:                             ; CODE XREF: .text:0040B779↑j
.text:0040B7EC                 mov     ebx, [esp+0FCh+arg_8]
.text:0040B7F3                 mov     [esp+0FCh+var_28], edx
.text:0040B7FA                 mov     esi, [esp+0FCh+String]
.text:0040B801
.text:0040B801 loc_40B801:                             ; CODE XREF: .text:0040B792↑j
.text:0040B801                 mov     edi, [esp+0FCh+arg_10]
.text:0040B808                 cmp     ebx, 24h ; '$'
.text:0040B80B                 ja      loc_40C694
.text:0040B811                 mov     ebp, [esp+0FCh+EndPtr]
.text:0040B818                 test    ebp, ebp
.text:0040B81A                 jz      loc_40C688
.text:0040B820
.text:0040B820 loc_40B820:                             ; CODE XREF: sub_40B7E0+EAF↓j
.text:0040B820                 call    _errno
.text:0040B825                 mov     dword ptr [eax], 0
.text:0040B82B
.text:0040B82B loc_40B82B:                             ; CODE XREF: .text:0040B7B7↑j
.text:0040B82B                 mov     [esp+0FCh+Radix], ebx ; Radix
.text:0040B82F                 mov     [esp+0FCh+Val], ebp ; EndPtr
.text:0040B833                 mov     [esp+0FCh+Str], esi ; String
.text:0040B836                 call    _strtoll
.text:0040B83B
.text:0040B83B loc_40B83B:                             ; CODE XREF: .text:0040B7C6↑j
.text:0040B83B                 mov     [esp+0FCh+var_24], eax
.text:0040B842                 mov     eax, [ebp+0]
.text:0040B845                 mov     [esp+0FCh+var_20], edx
.text:0040B84C                 cmp     eax, esi
.text:0040B84E                 jz      loc_40C650
.text:0040B854                 call    _errno
.text:0040B859                 mov     esi, [eax]
.text:0040B85B                 test    esi, esi
.text:0040B85D                 jnz     loc_40C620
.text:0040B863
.text:0040B863 loc_40B863:                             ; CODE XREF: sub_40B7E0+E56↓j
.text:0040B863                                         ; sub_40B7E0+EA3↓j
.text:0040B863                 test    edi, edi
.text:0040B865                 jz      short loc_40B871
.text:0040B867                 mov     edx, [ebp+0]
.text:0040B86A                 movzx   eax, byte ptr [edx]
.text:0040B86D                 test    al, al
.text:0040B86F                 jnz     short loc_40B8A0
.text:0040B871
.text:0040B871 loc_40B871:                             ; CODE XREF: sub_40B7E0+85↑j
.text:0040B871                                         ; sub_40B7E0+2EB↓j ...
.text:0040B871                 mov     edx, [esp+0FCh+var_24]
.text:0040B878                 mov     ecx, [esp+0FCh+var_20]
.text:0040B87F                 mov     ebp, [esp+0FCh+arg_C]
.text:0040B886                 mov     eax, [esp+0FCh+var_28]
.text:0040B88D                 mov     [ebp+0], edx
.text:0040B890                 mov     [ebp+4], ecx
.text:0040B893
.text:0040B893 loc_40B893:                             ; CODE XREF: sub_40B7E0+109↓j
.text:0040B893                                         ; sub_40B7E0+E65↓j
.text:0040B893                 add     esp, 0ECh
.text:0040B899                 pop     ebx
.text:0040B89A                 pop     esi
.text:0040B89B                 pop     edi
.text:0040B89C                 pop     ebp
.text:0040B89D                 retn
.text:0040B89D ; ---------------------------------------------------------------------------
.text:0040B89E                 align 10h
.text:0040B8A0
.text:0040B8A0 loc_40B8A0:                             ; CODE XREF: sub_40B7E0+8F↑j
.text:0040B8A0                 mov     [esp+0FCh+Str], edi ; Str
.text:0040B8A3                 movsx   ecx, al
.text:0040B8A6                 mov     esi, 1
.text:0040B8AB                 mov     [esp+0FCh+var_2C], esi
.text:0040B8B2                 mov     ebx, 400h
.text:0040B8B7                 mov     [esp+0FCh+Val], ecx ; Val
.text:0040B8BB                 call    strchr
.text:0040B8C0                 test    eax, eax
.text:0040B8C2                 jnz     short loc_40B8EB
.text:0040B8C4
.text:0040B8C4 def_40B930:                             ; CODE XREF: sub_40B7E0+14E↓j
.text:0040B8C4                                         ; sub_40B7E0+150↓j
.text:0040B8C4                                         ; DATA XREF: ...
.text:0040B8C4                 mov     eax, [esp+0FCh+var_28] ; jumptable 0040B930 default case, cases 67,68,70,72-74,76,78,79,81-83,85-88,91-97,100-102,104-106,108,110-115,117,118
.text:0040B8CB                 mov     ebx, [esp+0FCh+var_24]
.text:0040B8D2                 mov     edi, [esp+0FCh+var_20]
.text:0040B8D9                 mov     ebp, [esp+0FCh+arg_C]
.text:0040B8E0                 or      eax, 2
.text:0040B8E3                 mov     [ebp+0], ebx
.text:0040B8E6                 mov     [ebp+4], edi
.text:0040B8E9                 jmp     short loc_40B893
.text:0040B8EB ; ---------------------------------------------------------------------------
.text:0040B8EB
.text:0040B8EB loc_40B8EB:                             ; CODE XREF: sub_40B7E0+E2↑j
.text:0040B8EB                 mov     [esp+0FCh+Val], 30h ; '0' ; Val
.text:0040B8F3                 mov     [esp+0FCh+Str], edi ; Str
.text:0040B8F6                 call    strchr
.text:0040B8FB                 test    eax, eax
.text:0040B8FD                 jz      loc_40C611
.text:0040B903                 mov     edx, [ebp+0]
.text:0040B906                 movsx   eax, byte ptr [edx+1]
.text:0040B90A                 cmp     eax, 44h ; 'D'
.text:0040B90D                 jz      loc_40C5D7
.text:0040B913                 cmp     eax, 44h ; 'D'
.text:0040B916                 jg      loc_40C5ED
.text:0040B91C                 cmp     eax, 42h ; 'B'
.text:0040B91F                 jz      loc_40C5D7
.text:0040B925
.text:0040B925 loc_40B925:                             ; CODE XREF: sub_40B7E0+E08↓j
.text:0040B925                                         ; sub_40B7E0+E10↓j ...
.text:0040B925                 movsx   eax, byte ptr [edx]
.text:0040B928                 sub     eax, 42h ; 'B'  ; switch 54 cases
.text:0040B92B                 cmp     eax, 35h
.text:0040B92E                 ja      short def_40B930 ; jumptable 0040B930 default case, cases 67,68,70,72-74,76,78,79,81-83,85-88,91-97,100-102,104-106,108,110-115,117,118
.text:0040B930                 jmp     ds:jpt_40B930[eax*4] ; switch jump
.text:0040B930 ; ---------------------------------------------------------------------------
.text:0040B937                 align 4
.text:0040B938 jpt_40B930      dd offset loc_40BB0D, offset def_40B930, offset def_40B930
.text:0040B938                                         ; DATA XREF: sub_40B7E0+150↑r
.text:0040B938                 dd offset loc_40BB9C, offset def_40B930, offset loc_40C057 ; jump table for switch statement
.text:0040B938                 dd offset def_40B930, offset def_40B930, offset def_40B930
.text:0040B938                 dd offset loc_40C1AE, offset def_40B930, offset loc_40C2BD
.text:0040B938                 dd offset def_40B930, offset def_40B930, offset loc_40BCF3
.text:0040B938                 dd offset def_40B930, offset def_40B930, offset def_40B930
.text:0040B938                 dd offset loc_40C414, offset def_40B930, offset def_40B930
.text:0040B938                 dd offset def_40B930, offset def_40B930, offset loc_40BE12
.text:0040B938                 dd offset loc_40BF31, offset def_40B930, offset def_40B930
.text:0040B938                 dd offset def_40B930, offset def_40B930, offset def_40B930
.text:0040B938                 dd offset def_40B930, offset def_40B930, offset loc_40BA10
.text:0040B938                 dd offset loc_40C050, offset def_40B930, offset def_40B930
.text:0040B938                 dd offset def_40B930, offset loc_40C057, offset def_40B930
.text:0040B938                 dd offset def_40B930, offset def_40B930, offset loc_40C1AE
.text:0040B938                 dd offset def_40B930, offset loc_40C2BD, offset def_40B930
.text:0040B938                 dd offset def_40B930, offset def_40B930, offset def_40B930
.text:0040B938                 dd offset def_40B930, offset def_40B930, offset loc_40C414
.text:0040B938                 dd offset def_40B930, offset def_40B930, offset loc_40C533
.text:0040BA10 ; ---------------------------------------------------------------------------
.text:0040BA10
.text:0040BA10 loc_40BA10:                             ; CODE XREF: sub_40B7E0+150↑j
.text:0040BA10                                         ; DATA XREF: sub_40B7E0:jpt_40B930↑o
.text:0040BA10                 mov     [esp+0FCh+Radix], 200h ; jumptable 0040B930 case 98
.text:0040BA18                 mov     [esp+0FCh+var_F0], 0
.text:0040BA20                 mov     [esp+0FCh+Str], 0
.text:0040BA27                 mov     [esp+0FCh+Val], 80000000h
.text:0040BA2F                 call    sub_40E9F0
.text:0040BA34                 mov     esi, [esp+0FCh+var_20]
.text:0040BA3B                 mov     ecx, [esp+0FCh+var_24]
.text:0040BA42                 cmp     esi, edx
.text:0040BA44                 jg      short loc_40BA54
.text:0040BA46                 jl      loc_40BAFD
.text:0040BA4C                 cmp     ecx, eax
.text:0040BA4E                 jb      loc_40BAFD
.text:0040BA54
.text:0040BA54 loc_40BA54:                             ; CODE XREF: sub_40B7E0+264↑j
.text:0040BA54                 mov     [esp+0FCh+Radix], 200h
.text:0040BA5C                 mov     [esp+0FCh+var_F0], 0
.text:0040BA64                 mov     [esp+0FCh+Str], 0FFFFFFFFh
.text:0040BA6B                 mov     [esp+0FCh+Val], 7FFFFFFFh
.text:0040BA73                 call    sub_40E9F0
.text:0040BA78                 mov     edi, [esp+0FCh+var_20]
.text:0040BA7F                 mov     esi, [esp+0FCh+var_24]
.text:0040BA86                 cmp     edx, edi
.text:0040BA88                 jg      short loc_40BA90
.text:0040BA8A                 jl      short loc_40BADE
.text:0040BA8C                 cmp     eax, esi
.text:0040BA8E                 jb      short loc_40BADE
.text:0040BA90
.text:0040BA90 loc_40BA90:                             ; CODE XREF: sub_40B7E0+2A8↑j
.text:0040BA90                 mov     eax, 200h
.text:0040BA95                 mov     ecx, edi
.text:0040BA97                 shl     ecx, 9
.text:0040BA9A
.text:0040BA9A loc_40BA9A:                             ; CODE XREF: sub_40B7E0+3B7↓j
.text:0040BA9A                 mul     esi
.text:0040BA9C                 mov     ebx, edx
.text:0040BA9E                 mov     [esp+0FCh+var_24], eax
.text:0040BAA5                 lea     esi, [ecx+ebx]
.text:0040BAA8                 mov     [esp+0FCh+var_20], esi
.text:0040BAAF
.text:0040BAAF loc_40BAAF:                             ; CODE XREF: sub_40B7E0+DF2↓j
.text:0040BAAF                 xor     eax, eax
.text:0040BAB1
.text:0040BAB1 loc_40BAB1:                             ; CODE XREF: sub_40B7E0+31B↓j
.text:0040BAB1                                         ; sub_40B7E0+477↓j ...
.text:0040BAB1                 mov     edx, [ebp+0]
.text:0040BAB4
.text:0040BAB4 loc_40BAB4:                             ; CODE XREF: sub_40B7E0+872↓j
.text:0040BAB4                 or      [esp+0FCh+var_28], eax
.text:0040BABB                 mov     eax, [esp+0FCh+var_2C]
.text:0040BAC2                 lea     esi, [eax+edx]
.text:0040BAC5                 mov     [ebp+0], esi
.text:0040BAC8                 cmp     byte ptr [esi], 0
.text:0040BACB                 jz      loc_40B871
.text:0040BAD1                 or      [esp+0FCh+var_28], 2
.text:0040BAD9                 jmp     loc_40B871
.text:0040BADE ; ---------------------------------------------------------------------------
.text:0040BADE
.text:0040BADE loc_40BADE:                             ; CODE XREF: sub_40B7E0+2AA↑j
.text:0040BADE                                         ; sub_40B7E0+2AE↑j ...
.text:0040BADE                 mov     edx, 0FFFFFFFFh
.text:0040BAE3                 mov     ebx, 7FFFFFFFh
.text:0040BAE8                 mov     [esp+0FCh+var_24], edx
.text:0040BAEF
.text:0040BAEF loc_40BAEF:                             ; CODE XREF: sub_40B7E0+32B↓j
.text:0040BAEF                 mov     [esp+0FCh+var_20], ebx
.text:0040BAF6
.text:0040BAF6 loc_40BAF6:                             ; CODE XREF: sub_40B7E0+DDE↓j
.text:0040BAF6                 mov     eax, 1
.text:0040BAFB                 jmp     short loc_40BAB1
.text:0040BAFD ; ---------------------------------------------------------------------------
.text:0040BAFD
.text:0040BAFD loc_40BAFD:                             ; CODE XREF: sub_40B7E0+266↑j
.text:0040BAFD                                         ; sub_40B7E0+26E↑j ...
.text:0040BAFD                 xor     edi, edi
.text:0040BAFF                 mov     ebx, 80000000h
.text:0040BB04                 mov     [esp+0FCh+var_24], edi
.text:0040BB0B                 jmp     short loc_40BAEF
.text:0040BB0D ; ---------------------------------------------------------------------------
.text:0040BB0D
.text:0040BB0D loc_40BB0D:                             ; CODE XREF: sub_40B7E0+150↑j
.text:0040BB0D                                         ; DATA XREF: sub_40B7E0:jpt_40B930↑o
.text:0040BB0D                 mov     [esp+0FCh+Radix], 400h ; jumptable 0040B930 case 66
.text:0040BB15                 mov     [esp+0FCh+var_F0], 0
.text:0040BB1D                 mov     [esp+0FCh+Str], 0
.text:0040BB24                 mov     [esp+0FCh+Val], 80000000h
.text:0040BB2C                 call    sub_40E9F0
.text:0040BB31                 mov     edi, [esp+0FCh+var_20]
.text:0040BB38                 mov     ecx, [esp+0FCh+var_24]
.text:0040BB3F                 cmp     edi, edx
.text:0040BB41                 jg      short loc_40BB49
.text:0040BB43                 jl      short loc_40BAFD
.text:0040BB45                 cmp     ecx, eax
.text:0040BB47                 jb      short loc_40BAFD
.text:0040BB49
.text:0040BB49 loc_40BB49:                             ; CODE XREF: sub_40B7E0+361↑j
.text:0040BB49                 mov     [esp+0FCh+Radix], 400h
.text:0040BB51                 mov     [esp+0FCh+var_F0], 0
.text:0040BB59                 mov     [esp+0FCh+Str], 0FFFFFFFFh
.text:0040BB60                 mov     [esp+0FCh+Val], 7FFFFFFFh
.text:0040BB68                 call    sub_40E9F0
.text:0040BB6D                 mov     edi, [esp+0FCh+var_20]
.text:0040BB74                 mov     esi, [esp+0FCh+var_24]
.text:0040BB7B                 cmp     edx, edi
.text:0040BB7D                 jg      short loc_40BB8D
.text:0040BB7F                 jl      loc_40BADE
.text:0040BB85                 cmp     eax, esi
.text:0040BB87                 jb      loc_40BADE
.text:0040BB8D
.text:0040BB8D loc_40BB8D:                             ; CODE XREF: sub_40B7E0+39D↑j
.text:0040BB8D                 mov     eax, 400h
.text:0040BB92                 mov     ecx, edi
.text:0040BB94                 shl     ecx, 0Ah
.text:0040BB97                 jmp     loc_40BA9A
.text:0040BB9C ; ---------------------------------------------------------------------------
.text:0040BB9C
.text:0040BB9C loc_40BB9C:                             ; CODE XREF: sub_40B7E0+150↑j
.text:0040BB9C                                         ; DATA XREF: sub_40B7E0:jpt_40B930↑o
.text:0040BB9C                 mov     [esp+0FCh+var_3C], ebx ; jumptable 0040B930 case 69
.text:0040BBA3                 mov     edi, ebx
.text:0040BBA5                 mov     edx, 5
.text:0040BBAA                 mov     [esp+0FCh+var_30], edx
.text:0040BBB1                 sar     edi, 1Fh
.text:0040BBB4                 mov     ecx, [esp+0FCh+var_3C]
.text:0040BBBB                 mov     [esp+0FCh+var_38], edi
.text:0040BBC2                 xor     esi, esi
.text:0040BBC4                 mov     eax, [esp+0FCh+var_38]
.text:0040BBCB                 mov     [esp+0FCh+var_34], esi
.text:0040BBD2                 mov     [esp+0FCh+Radix], ecx
.text:0040BBD6                 mov     [esp+0FCh+var_F0], eax
.text:0040BBDA                 mov     [esp+0FCh+Str], 0
.text:0040BBE1                 mov     [esp+0FCh+Val], 80000000h
.text:0040BBE9                 call    sub_40E9F0
.text:0040BBEE                 mov     [esp+0FCh+var_44], eax
.text:0040BBF5                 mov     [esp+0FCh+var_40], edx
.text:0040BBFC
.text:0040BBFC loc_40BBFC:                             ; CODE XREF: sub_40B7E0+46E↓j
.text:0040BBFC                 mov     edi, [esp+0FCh+var_20]
.text:0040BC03                 mov     esi, [esp+0FCh+var_24]
.text:0040BC0A                 cmp     edi, [esp+0FCh+var_40]
.text:0040BC11                 jg      short loc_40BC5C
.text:0040BC13                 jl      short loc_40BC1E
.text:0040BC15                 cmp     esi, [esp+0FCh+var_44]
.text:0040BC1C                 jnb     short loc_40BC5C
.text:0040BC1E
.text:0040BC1E loc_40BC1E:                             ; CODE XREF: sub_40B7E0+433↑j
.text:0040BC1E                 xor     ebx, ebx
.text:0040BC20                 mov     eax, 80000000h
.text:0040BC25                 mov     [esp+0FCh+var_24], ebx
.text:0040BC2C                 mov     [esp+0FCh+var_20], eax
.text:0040BC33
.text:0040BC33 loc_40BC33:                             ; CODE XREF: sub_40B7E0+4C8↓j
.text:0040BC33                 mov     eax, 1
.text:0040BC38
.text:0040BC38 loc_40BC38:                             ; CODE XREF: sub_40B7E0+50E↓j
.text:0040BC38                 dec     [esp+0FCh+var_30]
.text:0040BC3F                 or      [esp+0FCh+var_34], eax
.text:0040BC46                 cmp     [esp+0FCh+var_30], 0FFFFFFFFh
.text:0040BC4E                 jnz     short loc_40BBFC
.text:0040BC50                 mov     eax, [esp+0FCh+var_34]
.text:0040BC57                 jmp     loc_40BAB1
.text:0040BC5C ; ---------------------------------------------------------------------------
.text:0040BC5C
.text:0040BC5C loc_40BC5C:                             ; CODE XREF: sub_40B7E0+431↑j
.text:0040BC5C                                         ; sub_40B7E0+43C↑j
.text:0040BC5C                 mov     [esp+0FCh+Str], 0FFFFFFFFh
.text:0040BC63                 mov     edx, [esp+0FCh+var_3C]
.text:0040BC6A                 mov     ecx, [esp+0FCh+var_38]
.text:0040BC71                 mov     [esp+0FCh+Val], 7FFFFFFFh
.text:0040BC79                 mov     [esp+0FCh+Radix], edx
.text:0040BC7D                 mov     [esp+0FCh+var_F0], ecx
.text:0040BC81                 call    sub_40E9F0
.text:0040BC86                 cmp     edx, edi
.text:0040BC88                 jg      short loc_40BCAA
.text:0040BC8A                 jl      short loc_40BC90
.text:0040BC8C                 cmp     eax, esi
.text:0040BC8E                 jnb     short loc_40BCAA
.text:0040BC90
.text:0040BC90 loc_40BC90:                             ; CODE XREF: sub_40B7E0+4AA↑j
.text:0040BC90                 mov     esi, 0FFFFFFFFh
.text:0040BC95                 mov     edi, 7FFFFFFFh
.text:0040BC9A                 mov     [esp+0FCh+var_24], esi
.text:0040BCA1                 mov     [esp+0FCh+var_20], edi
.text:0040BCA8                 jmp     short loc_40BC33
.text:0040BCAA ; ---------------------------------------------------------------------------
.text:0040BCAA
.text:0040BCAA loc_40BCAA:                             ; CODE XREF: sub_40B7E0+4A8↑j
.text:0040BCAA                                         ; sub_40B7E0+4AE↑j
.text:0040BCAA                 mov     eax, [esp+0FCh+var_3C]
.text:0040BCB1                 mov     ecx, [esp+0FCh+var_38]
.text:0040BCB8                 mul     esi
.text:0040BCBA                 imul    ecx, esi
.text:0040BCBD                 mov     esi, [esp+0FCh+var_3C]
.text:0040BCC4                 mov     [esp+0FCh+var_E4], eax
.text:0040BCC8                 imul    esi, edi
.text:0040BCCB                 mov     eax, edx
.text:0040BCCD                 add     eax, ecx
.text:0040BCCF                 mov     ebx, [esp+0FCh+var_E4]
.text:0040BCD3                 lea     edx, [esi+eax]
.text:0040BCD6                 mov     [esp+0FCh+var_E0], edx
.text:0040BCDA                 mov     eax, [esp+0FCh+var_E0]
.text:0040BCDE                 mov     [esp+0FCh+var_24], ebx
.text:0040BCE5                 mov     [esp+0FCh+var_20], eax
.text:0040BCEC                 xor     eax, eax
.text:0040BCEE                 jmp     loc_40BC38
.text:0040BCF3 ; ---------------------------------------------------------------------------
.text:0040BCF3
.text:0040BCF3 loc_40BCF3:                             ; CODE XREF: sub_40B7E0+150↑j
.text:0040BCF3                                         ; DATA XREF: sub_40B7E0:jpt_40B930↑o
.text:0040BCF3                 mov     [esp+0FCh+var_8C], ebx ; jumptable 0040B930 case 80
.text:0040BCF7                 mov     eax, ebx
.text:0040BCF9                 sar     eax, 1Fh
.text:0040BCFC                 mov     [esp+0FCh+var_88], eax
.text:0040BD00                 mov     edi, [esp+0FCh+var_8C]
.text:0040BD04                 mov     ebx, [esp+0FCh+var_88]
.text:0040BD08                 mov     [esp+0FCh+var_84], 0
.text:0040BD10                 mov     [esp+0FCh+var_80], 4
.text:0040BD18                 mov     [esp+0FCh+Radix], edi
.text:0040BD1C                 mov     [esp+0FCh+var_F0], ebx
.text:0040BD20                 mov     [esp+0FCh+Str], 0
.text:0040BD27                 mov     [esp+0FCh+Val], 80000000h
.text:0040BD2F                 call    sub_40E9F0
.text:0040BD34                 mov     [esp+0FCh+var_94], eax
.text:0040BD38                 mov     [esp+0FCh+var_90], edx
.text:0040BD3C
.text:0040BD3C loc_40BD3C:                             ; CODE XREF: sub_40B7E0+59F↓j
.text:0040BD3C                 mov     edi, [esp+0FCh+var_20]
.text:0040BD43                 mov     esi, [esp+0FCh+var_24]
.text:0040BD4A                 cmp     edi, [esp+0FCh+var_90]
.text:0040BD4E                 jg      short loc_40BD8A
.text:0040BD50                 jl      short loc_40BD58
.text:0040BD52                 cmp     esi, [esp+0FCh+var_94]
.text:0040BD56                 jnb     short loc_40BD8A
.text:0040BD58
.text:0040BD58 loc_40BD58:                             ; CODE XREF: sub_40B7E0+570↑j
.text:0040BD58                 xor     esi, esi
.text:0040BD5A                 mov     edx, 80000000h
.text:0040BD5F                 mov     [esp+0FCh+var_24], esi
.text:0040BD66                 mov     [esp+0FCh+var_20], edx
.text:0040BD6D
.text:0040BD6D loc_40BD6D:                             ; CODE XREF: sub_40B7E0+5F0↓j
.text:0040BD6D                 mov     eax, 1
.text:0040BD72
.text:0040BD72 loc_40BD72:                             ; CODE XREF: sub_40B7E0+62D↓j
.text:0040BD72                 dec     [esp+0FCh+var_80]
.text:0040BD76                 or      [esp+0FCh+var_84], eax
.text:0040BD7A                 cmp     [esp+0FCh+var_80], 0FFFFFFFFh
.text:0040BD7F                 jnz     short loc_40BD3C
.text:0040BD81                 mov     eax, [esp+0FCh+var_84]
.text:0040BD85                 jmp     loc_40BAB1
.text:0040BD8A ; ---------------------------------------------------------------------------
.text:0040BD8A
.text:0040BD8A loc_40BD8A:                             ; CODE XREF: sub_40B7E0+56E↑j
.text:0040BD8A                                         ; sub_40B7E0+576↑j
.text:0040BD8A                 mov     [esp+0FCh+Str], 0FFFFFFFFh
.text:0040BD91                 mov     ecx, [esp+0FCh+var_8C]
.text:0040BD95                 mov     ebx, [esp+0FCh+var_88]
.text:0040BD99                 mov     [esp+0FCh+Val], 7FFFFFFFh
.text:0040BDA1                 mov     [esp+0FCh+Radix], ecx
.text:0040BDA5                 mov     [esp+0FCh+var_F0], ebx
.text:0040BDA9                 call    sub_40E9F0
.text:0040BDAE                 cmp     edx, edi
.text:0040BDB0                 jg      short loc_40BDD2
.text:0040BDB2                 jl      short loc_40BDB8
.text:0040BDB4                 cmp     eax, esi
.text:0040BDB6                 jnb     short loc_40BDD2
.text:0040BDB8
.text:0040BDB8 loc_40BDB8:                             ; CODE XREF: sub_40B7E0+5D2↑j
.text:0040BDB8                 mov     eax, 0FFFFFFFFh
.text:0040BDBD                 mov     edi, 7FFFFFFFh
.text:0040BDC2                 mov     [esp+0FCh+var_24], eax
.text:0040BDC9                 mov     [esp+0FCh+var_20], edi
.text:0040BDD0                 jmp     short loc_40BD6D
.text:0040BDD2 ; ---------------------------------------------------------------------------
.text:0040BDD2
.text:0040BDD2 loc_40BDD2:                             ; CODE XREF: sub_40B7E0+5D0↑j
.text:0040BDD2                                         ; sub_40B7E0+5D6↑j
.text:0040BDD2                 mov     eax, [esp+0FCh+var_8C]
.text:0040BDD6                 mov     ecx, [esp+0FCh+var_88]
.text:0040BDDA                 mul     esi
.text:0040BDDC                 imul    ecx, esi
.text:0040BDDF                 mov     esi, edx
.text:0040BDE1                 mov     [esp+0FCh+var_E4], eax
.text:0040BDE5                 add     esi, ecx
.text:0040BDE7                 mov     eax, [esp+0FCh+var_8C]
.text:0040BDEB                 mov     ebx, [esp+0FCh+var_E4]
.text:0040BDEF                 imul    eax, edi
.text:0040BDF2                 mov     [esp+0FCh+var_24], ebx
.text:0040BDF9                 lea     edx, [eax+esi]
.text:0040BDFC                 xor     eax, eax
.text:0040BDFE                 mov     [esp+0FCh+var_E0], edx
.text:0040BE02                 mov     esi, [esp+0FCh+var_E0]
.text:0040BE06                 mov     [esp+0FCh+var_20], esi
.text:0040BE0D                 jmp     loc_40BD72
.text:0040BE12 ; ---------------------------------------------------------------------------
.text:0040BE12
.text:0040BE12 loc_40BE12:                             ; CODE XREF: sub_40B7E0+150↑j
.text:0040BE12                                         ; DATA XREF: sub_40B7E0:jpt_40B930↑o
.text:0040BE12                 mov     [esp+0FCh+var_BC], ebx ; jumptable 0040B930 case 89
.text:0040BE16                 mov     eax, ebx
.text:0040BE18                 sar     eax, 1Fh
.text:0040BE1B                 mov     [esp+0FCh+var_B8], eax
.text:0040BE1F                 mov     edx, [esp+0FCh+var_BC]
.text:0040BE23                 mov     ecx, [esp+0FCh+var_B8]
.text:0040BE27                 mov     [esp+0FCh+var_B4], 0
.text:0040BE2F                 mov     [esp+0FCh+var_B0], 7
.text:0040BE37                 mov     [esp+0FCh+Radix], edx
.text:0040BE3B                 mov     [esp+0FCh+var_F0], ecx
.text:0040BE3F                 mov     [esp+0FCh+Str], 0
.text:0040BE46                 mov     [esp+0FCh+Val], 80000000h
.text:0040BE4E                 call    sub_40E9F0
.text:0040BE53                 mov     [esp+0FCh+var_C4], eax
.text:0040BE57                 mov     [esp+0FCh+var_C0], edx
.text:0040BE5B
.text:0040BE5B loc_40BE5B:                             ; CODE XREF: sub_40B7E0+6BE↓j
.text:0040BE5B                 mov     edi, [esp+0FCh+var_20]
.text:0040BE62                 mov     esi, [esp+0FCh+var_24]
.text:0040BE69                 cmp     edi, [esp+0FCh+var_C0]
.text:0040BE6D                 jg      short loc_40BEA9
.text:0040BE6F                 jl      short loc_40BE77
.text:0040BE71                 cmp     esi, [esp+0FCh+var_C4]
.text:0040BE75                 jnb     short loc_40BEA9
.text:0040BE77
.text:0040BE77 loc_40BE77:                             ; CODE XREF: sub_40B7E0+68F↑j
.text:0040BE77                 xor     edi, edi
.text:0040BE79                 mov     esi, 80000000h
.text:0040BE7E                 mov     [esp+0FCh+var_24], edi
.text:0040BE85                 mov     [esp+0FCh+var_20], esi
.text:0040BE8C
.text:0040BE8C loc_40BE8C:                             ; CODE XREF: sub_40B7E0+70F↓j
.text:0040BE8C                 mov     eax, 1
.text:0040BE91
.text:0040BE91 loc_40BE91:                             ; CODE XREF: sub_40B7E0+74C↓j
.text:0040BE91                 dec     [esp+0FCh+var_B0]
.text:0040BE95                 or      [esp+0FCh+var_B4], eax
.text:0040BE99                 cmp     [esp+0FCh+var_B0], 0FFFFFFFFh
.text:0040BE9E                 jnz     short loc_40BE5B
.text:0040BEA0                 mov     eax, [esp+0FCh+var_B4]
.text:0040BEA4                 jmp     loc_40BAB1
.text:0040BEA9 ; ---------------------------------------------------------------------------
.text:0040BEA9
.text:0040BEA9 loc_40BEA9:                             ; CODE XREF: sub_40B7E0+68D↑j
.text:0040BEA9                                         ; sub_40B7E0+695↑j
.text:0040BEA9                 mov     [esp+0FCh+Str], 0FFFFFFFFh
.text:0040BEB0                 mov     ecx, [esp+0FCh+var_BC]
.text:0040BEB4                 mov     ebx, [esp+0FCh+var_B8]
.text:0040BEB8                 mov     [esp+0FCh+Val], 7FFFFFFFh
.text:0040BEC0                 mov     [esp+0FCh+Radix], ecx
.text:0040BEC4                 mov     [esp+0FCh+var_F0], ebx
.text:0040BEC8                 call    sub_40E9F0
.text:0040BECD                 cmp     edx, edi
.text:0040BECF                 jg      short loc_40BEF1
.text:0040BED1                 jl      short loc_40BED7
.text:0040BED3                 cmp     eax, esi
.text:0040BED5                 jnb     short loc_40BEF1
.text:0040BED7
.text:0040BED7 loc_40BED7:                             ; CODE XREF: sub_40B7E0+6F1↑j
.text:0040BED7                 mov     eax, 0FFFFFFFFh
.text:0040BEDC                 mov     edx, 7FFFFFFFh
.text:0040BEE1                 mov     [esp+0FCh+var_24], eax
.text:0040BEE8                 mov     [esp+0FCh+var_20], edx
.text:0040BEEF                 jmp     short loc_40BE8C
.text:0040BEF1 ; ---------------------------------------------------------------------------
.text:0040BEF1
.text:0040BEF1 loc_40BEF1:                             ; CODE XREF: sub_40B7E0+6EF↑j
.text:0040BEF1                                         ; sub_40B7E0+6F5↑j
.text:0040BEF1                 mov     eax, [esp+0FCh+var_BC]
.text:0040BEF5                 mov     ecx, [esp+0FCh+var_B8]
.text:0040BEF9                 mul     esi
.text:0040BEFB                 imul    ecx, esi
.text:0040BEFE                 mov     esi, edx
.text:0040BF00                 mov     [esp+0FCh+var_E4], eax
.text:0040BF04                 add     esi, ecx
.text:0040BF06                 mov     eax, [esp+0FCh+var_BC]
.text:0040BF0A                 imul    eax, edi
.text:0040BF0D                 mov     edi, [esp+0FCh+var_E4]
.text:0040BF11                 lea     edx, [eax+esi]
.text:0040BF14                 mov     [esp+0FCh+var_E0], edx
.text:0040BF18                 xor     eax, eax
.text:0040BF1A                 mov     esi, [esp+0FCh+var_E0]
.text:0040BF1E                 mov     [esp+0FCh+var_24], edi
.text:0040BF25                 mov     [esp+0FCh+var_20], esi
.text:0040BF2C                 jmp     loc_40BE91
.text:0040BF31 ; ---------------------------------------------------------------------------
.text:0040BF31
.text:0040BF31 loc_40BF31:                             ; CODE XREF: sub_40B7E0+150↑j
.text:0040BF31                                         ; DATA XREF: sub_40B7E0:jpt_40B930↑o
.text:0040BF31                 mov     [esp+0FCh+var_D4], ebx ; jumptable 0040B930 case 90
.text:0040BF35                 mov     edx, ebx
.text:0040BF37                 sar     edx, 1Fh
.text:0040BF3A                 mov     [esp+0FCh+var_D0], edx
.text:0040BF3E                 mov     edi, [esp+0FCh+var_D4]
.text:0040BF42                 mov     ebx, [esp+0FCh+var_D0]
.text:0040BF46                 mov     [esp+0FCh+var_CC], 0
.text:0040BF4E                 mov     [esp+0FCh+var_C8], 6
.text:0040BF56                 mov     [esp+0FCh+Radix], edi
.text:0040BF5A                 mov     [esp+0FCh+var_F0], ebx
.text:0040BF5E                 mov     [esp+0FCh+Str], 0
.text:0040BF65                 mov     [esp+0FCh+Val], 80000000h
.text:0040BF6D                 call    sub_40E9F0
.text:0040BF72                 mov     [esp+0FCh+var_DC], eax
.text:0040BF76                 mov     [esp+0FCh+var_D8], edx
.text:0040BF7A
.text:0040BF7A loc_40BF7A:                             ; CODE XREF: sub_40B7E0+7DD↓j
.text:0040BF7A                 mov     edi, [esp+0FCh+var_20]
.text:0040BF81                 mov     esi, [esp+0FCh+var_24]
.text:0040BF88                 cmp     edi, [esp+0FCh+var_D8]
.text:0040BF8C                 jg      short loc_40BFC8
.text:0040BF8E                 jl      short loc_40BF96
.text:0040BF90                 cmp     esi, [esp+0FCh+var_DC]
.text:0040BF94                 jnb     short loc_40BFC8
.text:0040BF96
.text:0040BF96 loc_40BF96:                             ; CODE XREF: sub_40B7E0+7AE↑j
.text:0040BF96                 xor     esi, esi
.text:0040BF98                 mov     eax, 80000000h
.text:0040BF9D                 mov     [esp+0FCh+var_24], esi
.text:0040BFA4                 mov     [esp+0FCh+var_20], eax
.text:0040BFAB
.text:0040BFAB loc_40BFAB:                             ; CODE XREF: sub_40B7E0+82E↓j
.text:0040BFAB                 mov     eax, 1
.text:0040BFB0
.text:0040BFB0 loc_40BFB0:                             ; CODE XREF: sub_40B7E0+86B↓j
.text:0040BFB0                 dec     [esp+0FCh+var_C8]
.text:0040BFB4                 or      [esp+0FCh+var_CC], eax
.text:0040BFB8                 cmp     [esp+0FCh+var_C8], 0FFFFFFFFh
.text:0040BFBD                 jnz     short loc_40BF7A
.text:0040BFBF                 mov     eax, [esp+0FCh+var_CC]
.text:0040BFC3                 jmp     loc_40BAB1
.text:0040BFC8 ; ---------------------------------------------------------------------------
.text:0040BFC8
.text:0040BFC8 loc_40BFC8:                             ; CODE XREF: sub_40B7E0+7AC↑j
.text:0040BFC8                                         ; sub_40B7E0+7B4↑j
.text:0040BFC8                 mov     [esp+0FCh+Str], 0FFFFFFFFh
.text:0040BFCF                 mov     ecx, [esp+0FCh+var_D4]
.text:0040BFD3                 mov     ebx, [esp+0FCh+var_D0]
.text:0040BFD7                 mov     [esp+0FCh+Val], 7FFFFFFFh
.text:0040BFDF                 mov     [esp+0FCh+Radix], ecx
.text:0040BFE3                 mov     [esp+0FCh+var_F0], ebx
.text:0040BFE7                 call    sub_40E9F0
.text:0040BFEC                 cmp     edx, edi
.text:0040BFEE                 jg      short loc_40C010
.text:0040BFF0                 jl      short loc_40BFF6
.text:0040BFF2                 cmp     eax, esi
.text:0040BFF4                 jnb     short loc_40C010
.text:0040BFF6
.text:0040BFF6 loc_40BFF6:                             ; CODE XREF: sub_40B7E0+810↑j
.text:0040BFF6                 mov     eax, 0FFFFFFFFh
.text:0040BFFB                 mov     edi, 7FFFFFFFh
.text:0040C000                 mov     [esp+0FCh+var_24], eax
.text:0040C007                 mov     [esp+0FCh+var_20], edi
.text:0040C00E                 jmp     short loc_40BFAB
.text:0040C010 ; ---------------------------------------------------------------------------
.text:0040C010
.text:0040C010 loc_40C010:                             ; CODE XREF: sub_40B7E0+80E↑j
.text:0040C010                                         ; sub_40B7E0+814↑j
.text:0040C010                 mov     eax, [esp+0FCh+var_D4]
.text:0040C014                 mov     ecx, [esp+0FCh+var_D0]
.text:0040C018                 mul     esi
.text:0040C01A                 imul    ecx, esi
.text:0040C01D                 mov     esi, edx
.text:0040C01F                 mov     [esp+0FCh+var_E4], eax
.text:0040C023                 add     esi, ecx
.text:0040C025                 mov     eax, [esp+0FCh+var_D4]
.text:0040C029                 mov     ebx, [esp+0FCh+var_E4]
.text:0040C02D                 imul    eax, edi
.text:0040C030                 mov     [esp+0FCh+var_24], ebx
.text:0040C037                 lea     edx, [eax+esi]
.text:0040C03A                 xor     eax, eax
.text:0040C03C                 mov     [esp+0FCh+var_E0], edx
.text:0040C040                 mov     esi, [esp+0FCh+var_E0]
.text:0040C044                 mov     [esp+0FCh+var_20], esi
.text:0040C04B                 jmp     loc_40BFB0
.text:0040C050 ; ---------------------------------------------------------------------------
.text:0040C050
.text:0040C050 loc_40C050:                             ; CODE XREF: sub_40B7E0+150↑j
.text:0040C050                                         ; DATA XREF: sub_40B7E0:jpt_40B930↑o
.text:0040C050                 xor     eax, eax        ; jumptable 0040B930 case 99
.text:0040C052                 jmp     loc_40BAB4
.text:0040C057 ; ---------------------------------------------------------------------------
.text:0040C057
.text:0040C057 loc_40C057:                             ; CODE XREF: sub_40B7E0+150↑j
.text:0040C057                                         ; DATA XREF: sub_40B7E0:jpt_40B930↑o
.text:0040C057                 mov     [esp+0FCh+var_54], ebx ; jumptable 0040B930 cases 71,103
.text:0040C05E                 mov     edx, ebx
.text:0040C060                 xor     ecx, ecx
.text:0040C062                 mov     [esp+0FCh+var_4C], ecx
.text:0040C069                 sar     edx, 1Fh
.text:0040C06C                 mov     ebx, [esp+0FCh+var_54]
.text:0040C073                 mov     [esp+0FCh+var_50], edx
.text:0040C07A                 mov     esi, 2
.text:0040C07F                 mov     edi, [esp+0FCh+var_50]
.text:0040C086                 mov     [esp+0FCh+var_48], esi
.text:0040C08D                 mov     [esp+0FCh+Radix], ebx
.text:0040C091                 mov     [esp+0FCh+var_F0], edi
.text:0040C095                 mov     [esp+0FCh+Str], 0
.text:0040C09C                 mov     [esp+0FCh+Val], 80000000h
.text:0040C0A4                 call    sub_40E9F0
.text:0040C0A9                 mov     [esp+0FCh+var_5C], eax
.text:0040C0B0                 mov     [esp+0FCh+var_58], edx
.text:0040C0B7
.text:0040C0B7 loc_40C0B7:                             ; CODE XREF: sub_40B7E0+929↓j
.text:0040C0B7                 mov     edi, [esp+0FCh+var_20]
.text:0040C0BE                 mov     esi, [esp+0FCh+var_24]
.text:0040C0C5                 cmp     edi, [esp+0FCh+var_58]
.text:0040C0CC                 jg      short loc_40C117
.text:0040C0CE                 jl      short loc_40C0D9
.text:0040C0D0                 cmp     esi, [esp+0FCh+var_5C]
.text:0040C0D7                 jnb     short loc_40C117
.text:0040C0D9
.text:0040C0D9 loc_40C0D9:                             ; CODE XREF: sub_40B7E0+8EE↑j
.text:0040C0D9                 xor     ebx, ebx
.text:0040C0DB                 mov     edi, 80000000h
.text:0040C0E0                 mov     [esp+0FCh+var_24], ebx
.text:0040C0E7                 mov     [esp+0FCh+var_20], edi
.text:0040C0EE
.text:0040C0EE loc_40C0EE:                             ; CODE XREF: sub_40B7E0+983↓j
.text:0040C0EE                 mov     eax, 1
.text:0040C0F3
.text:0040C0F3 loc_40C0F3:                             ; CODE XREF: sub_40B7E0+9C9↓j
.text:0040C0F3                 dec     [esp+0FCh+var_48]
.text:0040C0FA                 or      [esp+0FCh+var_4C], eax
.text:0040C101                 cmp     [esp+0FCh+var_48], 0FFFFFFFFh
.text:0040C109                 jnz     short loc_40C0B7
.text:0040C10B                 mov     eax, [esp+0FCh+var_4C]
.text:0040C112                 jmp     loc_40BAB1
.text:0040C117 ; ---------------------------------------------------------------------------
.text:0040C117
.text:0040C117 loc_40C117:                             ; CODE XREF: sub_40B7E0+8EC↑j
.text:0040C117                                         ; sub_40B7E0+8F7↑j
.text:0040C117                 mov     [esp+0FCh+Str], 0FFFFFFFFh
.text:0040C11E                 mov     ecx, [esp+0FCh+var_54]
.text:0040C125                 mov     eax, [esp+0FCh+var_50]
.text:0040C12C                 mov     [esp+0FCh+Val], 7FFFFFFFh
.text:0040C134                 mov     [esp+0FCh+Radix], ecx
.text:0040C138                 mov     [esp+0FCh+var_F0], eax
.text:0040C13C                 call    sub_40E9F0
.text:0040C141                 cmp     edx, edi
.text:0040C143                 jg      short loc_40C165
.text:0040C145                 jl      short loc_40C14B
.text:0040C147                 cmp     eax, esi
.text:0040C149                 jnb     short loc_40C165
.text:0040C14B
.text:0040C14B loc_40C14B:                             ; CODE XREF: sub_40B7E0+965↑j
.text:0040C14B                 mov     esi, 0FFFFFFFFh
.text:0040C150                 mov     edx, 7FFFFFFFh
.text:0040C155                 mov     [esp+0FCh+var_24], esi
.text:0040C15C                 mov     [esp+0FCh+var_20], edx
.text:0040C163                 jmp     short loc_40C0EE
.text:0040C165 ; ---------------------------------------------------------------------------
.text:0040C165
.text:0040C165 loc_40C165:                             ; CODE XREF: sub_40B7E0+963↑j
.text:0040C165                                         ; sub_40B7E0+969↑j
.text:0040C165                 mov     eax, [esp+0FCh+var_54]
.text:0040C16C                 mov     ecx, [esp+0FCh+var_50]
.text:0040C173                 mul     esi
.text:0040C175                 imul    ecx, esi
.text:0040C178                 mov     esi, edx
.text:0040C17A                 mov     [esp+0FCh+var_E4], eax
.text:0040C17E                 mov     edx, [esp+0FCh+var_54]
.text:0040C185                 add     esi, ecx
.text:0040C187                 mov     ebx, [esp+0FCh+var_E4]
.text:0040C18B                 imul    edx, edi
.text:0040C18E                 mov     [esp+0FCh+var_24], ebx
.text:0040C195                 lea     eax, [edx+esi]
.text:0040C198                 mov     [esp+0FCh+var_E0], eax
.text:0040C19C                 mov     edi, [esp+0FCh+var_E0]
.text:0040C1A0                 xor     eax, eax
.text:0040C1A2                 mov     [esp+0FCh+var_20], edi
.text:0040C1A9                 jmp     loc_40C0F3
.text:0040C1AE ; ---------------------------------------------------------------------------
.text:0040C1AE
.text:0040C1AE loc_40C1AE:                             ; CODE XREF: sub_40B7E0+150↑j
.text:0040C1AE                                         ; DATA XREF: sub_40B7E0:jpt_40B930↑o
.text:0040C1AE                 mov     [esp+0FCh+var_64], ebx ; jumptable 0040B930 cases 75,107
.text:0040C1B5                 mov     eax, ebx
.text:0040C1B7                 sar     eax, 1Fh
.text:0040C1BA                 mov     [esp+0FCh+var_60], eax
.text:0040C1C1                 mov     ebx, [esp+0FCh+var_64]
.text:0040C1C8                 mov     edi, [esp+0FCh+var_60]
.text:0040C1CF                 mov     [esp+0FCh+Str], 0
.text:0040C1D6                 mov     [esp+0FCh+Radix], ebx
.text:0040C1DA                 mov     [esp+0FCh+var_F0], edi
.text:0040C1DE                 mov     [esp+0FCh+Val], 80000000h
.text:0040C1E6                 call    sub_40E9F0
.text:0040C1EB                 mov     edi, [esp+0FCh+var_20]
.text:0040C1F2                 mov     esi, [esp+0FCh+var_24]
.text:0040C1F9                 cmp     edi, edx
.text:0040C1FB                 jg      short loc_40C226
.text:0040C1FD                 jl      short loc_40C203
.text:0040C1FF                 cmp     esi, eax
.text:0040C201                 jnb     short loc_40C226
.text:0040C203
.text:0040C203 loc_40C203:                             ; CODE XREF: sub_40B7E0+A1D↑j
.text:0040C203                 xor     esi, esi
.text:0040C205                 mov     edx, 80000000h
.text:0040C20A                 mov     [esp+0FCh+var_24], esi
.text:0040C211                 mov     [esp+0FCh+var_20], edx
.text:0040C218
.text:0040C218 loc_40C218:                             ; CODE XREF: sub_40B7E0+A92↓j
.text:0040C218                 mov     edx, 1
.text:0040C21D
.text:0040C21D loc_40C21D:                             ; CODE XREF: sub_40B7E0+AD8↓j
.text:0040C21D                 xor     eax, eax
.text:0040C21F                 or      eax, edx
.text:0040C221                 jmp     loc_40BAB1
.text:0040C226 ; ---------------------------------------------------------------------------
.text:0040C226
.text:0040C226 loc_40C226:                             ; CODE XREF: sub_40B7E0+A1B↑j
.text:0040C226                                         ; sub_40B7E0+A21↑j
.text:0040C226                 mov     [esp+0FCh+Str], 0FFFFFFFFh
.text:0040C22D                 mov     ecx, [esp+0FCh+var_64]
.text:0040C234                 mov     ebx, [esp+0FCh+var_60]
.text:0040C23B                 mov     [esp+0FCh+Val], 7FFFFFFFh
.text:0040C243                 mov     [esp+0FCh+Radix], ecx
.text:0040C247                 mov     [esp+0FCh+var_F0], ebx
.text:0040C24B                 call    sub_40E9F0
.text:0040C250                 cmp     edx, edi
.text:0040C252                 jg      short loc_40C274
.text:0040C254                 jl      short loc_40C25A
.text:0040C256                 cmp     eax, esi
.text:0040C258                 jnb     short loc_40C274
.text:0040C25A
.text:0040C25A loc_40C25A:                             ; CODE XREF: sub_40B7E0+A74↑j
.text:0040C25A                 mov     eax, 0FFFFFFFFh
.text:0040C25F                 mov     edi, 7FFFFFFFh
.text:0040C264                 mov     [esp+0FCh+var_24], eax
.text:0040C26B                 mov     [esp+0FCh+var_20], edi
.text:0040C272                 jmp     short loc_40C218
.text:0040C274 ; ---------------------------------------------------------------------------
.text:0040C274
.text:0040C274 loc_40C274:                             ; CODE XREF: sub_40B7E0+A72↑j
.text:0040C274                                         ; sub_40B7E0+A78↑j
.text:0040C274                 mov     eax, [esp+0FCh+var_64]
.text:0040C27B                 mov     ecx, [esp+0FCh+var_60]
.text:0040C282                 mul     esi
.text:0040C284                 imul    ecx, esi
.text:0040C287                 mov     esi, edx
.text:0040C289                 mov     [esp+0FCh+var_E4], eax
.text:0040C28D                 add     esi, ecx
.text:0040C28F                 mov     eax, [esp+0FCh+var_64]
.text:0040C296                 mov     ebx, [esp+0FCh+var_E4]
.text:0040C29A                 imul    eax, edi
.text:0040C29D                 mov     [esp+0FCh+var_24], ebx
.text:0040C2A4                 lea     edx, [eax+esi]
.text:0040C2A7                 mov     [esp+0FCh+var_E0], edx
.text:0040C2AB                 mov     esi, [esp+0FCh+var_E0]
.text:0040C2AF                 xor     edx, edx
.text:0040C2B1                 mov     [esp+0FCh+var_20], esi
.text:0040C2B8                 jmp     loc_40C21D
.text:0040C2BD ; ---------------------------------------------------------------------------
.text:0040C2BD
.text:0040C2BD loc_40C2BD:                             ; CODE XREF: sub_40B7E0+150↑j
.text:0040C2BD                                         ; DATA XREF: sub_40B7E0:jpt_40B930↑o
.text:0040C2BD                 mov     [esp+0FCh+var_74], ebx ; jumptable 0040B930 cases 77,109
.text:0040C2C4                 mov     edx, ebx
.text:0040C2C6                 xor     eax, eax
.text:0040C2C8                 mov     [esp+0FCh+var_6C], eax
.text:0040C2CF                 sar     edx, 1Fh
.text:0040C2D2                 mov     ebx, [esp+0FCh+var_74]
.text:0040C2D9                 mov     [esp+0FCh+var_70], edx
.text:0040C2E0                 mov     esi, 1
.text:0040C2E5                 mov     edi, [esp+0FCh+var_70]
.text:0040C2EC                 mov     [esp+0FCh+var_68], esi
.text:0040C2F3                 mov     [esp+0FCh+Radix], ebx
.text:0040C2F7                 mov     [esp+0FCh+var_F0], edi
.text:0040C2FB                 mov     [esp+0FCh+Str], 0
.text:0040C302                 mov     [esp+0FCh+Val], 80000000h
.text:0040C30A                 call    sub_40E9F0
.text:0040C30F                 mov     [esp+0FCh+var_7C], eax
.text:0040C316                 mov     [esp+0FCh+var_78], edx
.text:0040C31D
.text:0040C31D loc_40C31D:                             ; CODE XREF: sub_40B7E0+B8F↓j
.text:0040C31D                 mov     edi, [esp+0FCh+var_20]
.text:0040C324                 mov     esi, [esp+0FCh+var_24]
.text:0040C32B                 cmp     edi, [esp+0FCh+var_78]
.text:0040C332                 jg      short loc_40C37D
.text:0040C334                 jl      short loc_40C33F
.text:0040C336                 cmp     esi, [esp+0FCh+var_7C]
.text:0040C33D                 jnb     short loc_40C37D
.text:0040C33F
.text:0040C33F loc_40C33F:                             ; CODE XREF: sub_40B7E0+B54↑j
.text:0040C33F                 xor     edi, edi
.text:0040C341                 mov     ecx, 80000000h
.text:0040C346                 mov     [esp+0FCh+var_24], edi
.text:0040C34D                 mov     [esp+0FCh+var_20], ecx
.text:0040C354
.text:0040C354 loc_40C354:                             ; CODE XREF: sub_40B7E0+BE9↓j
.text:0040C354                 mov     eax, 1
.text:0040C359
.text:0040C359 loc_40C359:                             ; CODE XREF: sub_40B7E0+C2F↓j
.text:0040C359                 dec     [esp+0FCh+var_68]
.text:0040C360                 or      [esp+0FCh+var_6C], eax
.text:0040C367                 cmp     [esp+0FCh+var_68], 0FFFFFFFFh
.text:0040C36F                 jnz     short loc_40C31D
.text:0040C371                 mov     eax, [esp+0FCh+var_6C]
.text:0040C378                 jmp     loc_40BAB1
.text:0040C37D ; ---------------------------------------------------------------------------
.text:0040C37D
.text:0040C37D loc_40C37D:                             ; CODE XREF: sub_40B7E0+B52↑j
.text:0040C37D                                         ; sub_40B7E0+B5D↑j
.text:0040C37D                 mov     [esp+0FCh+Str], 0FFFFFFFFh
.text:0040C384                 mov     eax, [esp+0FCh+var_74]
.text:0040C38B                 mov     ebx, [esp+0FCh+var_70]
.text:0040C392                 mov     [esp+0FCh+Val], 7FFFFFFFh
.text:0040C39A                 mov     [esp+0FCh+Radix], eax
.text:0040C39E                 mov     [esp+0FCh+var_F0], ebx
.text:0040C3A2                 call    sub_40E9F0
.text:0040C3A7                 cmp     edx, edi
.text:0040C3A9                 jg      short loc_40C3CB
.text:0040C3AB                 jl      short loc_40C3B1
.text:0040C3AD                 cmp     eax, esi
.text:0040C3AF                 jnb     short loc_40C3CB
.text:0040C3B1
.text:0040C3B1 loc_40C3B1:                             ; CODE XREF: sub_40B7E0+BCB↑j
.text:0040C3B1                 mov     esi, 0FFFFFFFFh
.text:0040C3B6                 mov     edx, 7FFFFFFFh
.text:0040C3BB                 mov     [esp+0FCh+var_24], esi
.text:0040C3C2                 mov     [esp+0FCh+var_20], edx
.text:0040C3C9                 jmp     short loc_40C354
.text:0040C3CB ; ---------------------------------------------------------------------------
.text:0040C3CB
.text:0040C3CB loc_40C3CB:                             ; CODE XREF: sub_40B7E0+BC9↑j
.text:0040C3CB                                         ; sub_40B7E0+BCF↑j
.text:0040C3CB                 mov     eax, [esp+0FCh+var_74]
.text:0040C3D2                 mov     ecx, [esp+0FCh+var_70]
.text:0040C3D9                 mul     esi
.text:0040C3DB                 imul    ecx, esi
.text:0040C3DE                 mov     esi, edx
.text:0040C3E0                 mov     [esp+0FCh+var_E4], eax
.text:0040C3E4                 mov     edx, [esp+0FCh+var_74]
.text:0040C3EB                 add     esi, ecx
.text:0040C3ED                 mov     ecx, [esp+0FCh+var_E4]
.text:0040C3F1                 imul    edx, edi
.text:0040C3F4                 mov     [esp+0FCh+var_24], ecx
.text:0040C3FB                 lea     eax, [edx+esi]
.text:0040C3FE                 mov     [esp+0FCh+var_E0], eax
.text:0040C402                 mov     edi, [esp+0FCh+var_E0]
.text:0040C406                 xor     eax, eax
.text:0040C408                 mov     [esp+0FCh+var_20], edi
.text:0040C40F                 jmp     loc_40C359
.text:0040C414 ; ---------------------------------------------------------------------------
.text:0040C414
.text:0040C414 loc_40C414:                             ; CODE XREF: sub_40B7E0+150↑j
.text:0040C414                                         ; DATA XREF: sub_40B7E0:jpt_40B930↑o
.text:0040C414                 mov     [esp+0FCh+var_A4], ebx ; jumptable 0040B930 cases 84,116
.text:0040C418                 mov     edx, ebx
.text:0040C41A                 sar     edx, 1Fh
.text:0040C41D                 mov     [esp+0FCh+var_A0], edx
.text:0040C421                 mov     ebx, [esp+0FCh+var_A4]
.text:0040C425                 mov     edi, [esp+0FCh+var_A0]
.text:0040C429                 mov     [esp+0FCh+var_9C], 0
.text:0040C431                 mov     [esp+0FCh+var_98], 3
.text:0040C439                 mov     [esp+0FCh+Radix], ebx
.text:0040C43D                 mov     [esp+0FCh+var_F0], edi
.text:0040C441                 mov     [esp+0FCh+Str], 0
.text:0040C448                 mov     [esp+0FCh+Val], 80000000h
.text:0040C450                 call    sub_40E9F0
.text:0040C455                 mov     [esp+0FCh+var_AC], eax
.text:0040C459                 mov     [esp+0FCh+var_A8], edx
.text:0040C45D
.text:0040C45D loc_40C45D:                             ; CODE XREF: sub_40B7E0+CC0↓j
.text:0040C45D                 mov     edi, [esp+0FCh+var_20]
.text:0040C464                 mov     esi, [esp+0FCh+var_24]
.text:0040C46B                 cmp     edi, [esp+0FCh+var_A8]
.text:0040C46F                 jg      short loc_40C4AB
.text:0040C471                 jl      short loc_40C479
.text:0040C473                 cmp     esi, [esp+0FCh+var_AC]
.text:0040C477                 jnb     short loc_40C4AB
.text:0040C479
.text:0040C479 loc_40C479:                             ; CODE XREF: sub_40B7E0+C91↑j
.text:0040C479                 xor     esi, esi
.text:0040C47B                 mov     eax, 80000000h
.text:0040C480                 mov     [esp+0FCh+var_24], esi
.text:0040C487                 mov     [esp+0FCh+var_20], eax
.text:0040C48E
.text:0040C48E loc_40C48E:                             ; CODE XREF: sub_40B7E0+D11↓j
.text:0040C48E                 mov     eax, 1
.text:0040C493
.text:0040C493 loc_40C493:                             ; CODE XREF: sub_40B7E0+D4E↓j
.text:0040C493                 dec     [esp+0FCh+var_98]
.text:0040C497                 or      [esp+0FCh+var_9C], eax
.text:0040C49B                 cmp     [esp+0FCh+var_98], 0FFFFFFFFh
.text:0040C4A0                 jnz     short loc_40C45D
.text:0040C4A2                 mov     eax, [esp+0FCh+var_9C]
.text:0040C4A6                 jmp     loc_40BAB1
.text:0040C4AB ; ---------------------------------------------------------------------------
.text:0040C4AB
.text:0040C4AB loc_40C4AB:                             ; CODE XREF: sub_40B7E0+C8F↑j
.text:0040C4AB                                         ; sub_40B7E0+C97↑j
.text:0040C4AB                 mov     [esp+0FCh+Str], 0FFFFFFFFh
.text:0040C4B2                 mov     ecx, [esp+0FCh+var_A4]
.text:0040C4B6                 mov     ebx, [esp+0FCh+var_A0]
.text:0040C4BA                 mov     [esp+0FCh+Val], 7FFFFFFFh
.text:0040C4C2                 mov     [esp+0FCh+Radix], ecx
.text:0040C4C6                 mov     [esp+0FCh+var_F0], ebx
.text:0040C4CA                 call    sub_40E9F0
.text:0040C4CF                 cmp     edx, edi
.text:0040C4D1                 jg      short loc_40C4F3
.text:0040C4D3                 jl      short loc_40C4D9
.text:0040C4D5                 cmp     eax, esi
.text:0040C4D7                 jnb     short loc_40C4F3
.text:0040C4D9
.text:0040C4D9 loc_40C4D9:                             ; CODE XREF: sub_40B7E0+CF3↑j
.text:0040C4D9                 mov     edx, 0FFFFFFFFh
.text:0040C4DE                 mov     edi, 7FFFFFFFh
.text:0040C4E3                 mov     [esp+0FCh+var_24], edx
.text:0040C4EA                 mov     [esp+0FCh+var_20], edi
.text:0040C4F1                 jmp     short loc_40C48E
.text:0040C4F3 ; ---------------------------------------------------------------------------
.text:0040C4F3
.text:0040C4F3 loc_40C4F3:                             ; CODE XREF: sub_40B7E0+CF1↑j
.text:0040C4F3                                         ; sub_40B7E0+CF7↑j
.text:0040C4F3                 mov     eax, [esp+0FCh+var_A4]
.text:0040C4F7                 mov     ecx, [esp+0FCh+var_A0]
.text:0040C4FB                 mul     esi
.text:0040C4FD                 imul    ecx, esi
.text:0040C500                 mov     [esp+0FCh+var_E4], eax
.text:0040C504                 mov     eax, edx
.text:0040C506                 mov     esi, [esp+0FCh+var_E4]
.text:0040C50A                 mov     edx, [esp+0FCh+var_A4]
.text:0040C50E                 add     eax, ecx
.text:0040C510                 mov     [esp+0FCh+var_24], esi
.text:0040C517                 imul    edx, edi
.text:0040C51A                 lea     edi, [edx+eax]
.text:0040C51D                 mov     [esp+0FCh+var_E0], edi
.text:0040C521                 mov     eax, [esp+0FCh+var_E0]
.text:0040C525                 mov     [esp+0FCh+var_20], eax
.text:0040C52C                 xor     eax, eax
.text:0040C52E                 jmp     loc_40C493
.text:0040C533 ; ---------------------------------------------------------------------------
.text:0040C533
.text:0040C533 loc_40C533:                             ; CODE XREF: sub_40B7E0+150↑j
.text:0040C533                                         ; DATA XREF: sub_40B7E0:jpt_40B930↑o
.text:0040C533                 mov     [esp+0FCh+Radix], 2 ; jumptable 0040B930 case 119
.text:0040C53B                 lea     edi, [esp+0FCh+var_24]
.text:0040C542                 mov     [esp+0FCh+var_F0], 0
.text:0040C54A                 mov     [esp+0FCh+Str], 0
.text:0040C551                 mov     [esp+0FCh+Val], 80000000h
.text:0040C559                 call    sub_40E9F0
.text:0040C55E                 mov     esi, [esp+0FCh+var_20]
.text:0040C565                 mov     ecx, [esp+0FCh+var_24]
.text:0040C56C                 cmp     esi, edx
.text:0040C56E                 jg      short loc_40C57E
.text:0040C570                 jl      loc_40BAFD
.text:0040C576                 cmp     ecx, eax
.text:0040C578                 jb      loc_40BAFD
.text:0040C57E
.text:0040C57E loc_40C57E:                             ; CODE XREF: sub_40B7E0+D8E↑j
.text:0040C57E                 mov     [esp+0FCh+Radix], 2
.text:0040C586                 mov     [esp+0FCh+var_F0], 0
.text:0040C58E                 mov     [esp+0FCh+Str], 0FFFFFFFFh
.text:0040C595                 mov     [esp+0FCh+Val], 7FFFFFFFh
.text:0040C59D                 call    sub_40E9F0
.text:0040C5A2                 mov     esi, [edi+4]
.text:0040C5A5                 mov     ebx, [edi]
.text:0040C5A7                 cmp     edx, esi
.text:0040C5A9                 jg      short loc_40C5C3
.text:0040C5AB                 jl      short loc_40C5B1
.text:0040C5AD                 cmp     eax, ebx
.text:0040C5AF                 jnb     short loc_40C5C3
.text:0040C5B1
.text:0040C5B1 loc_40C5B1:                             ; CODE XREF: sub_40B7E0+DCB↑j
.text:0040C5B1                 mov     dword ptr [edi], 0FFFFFFFFh
.text:0040C5B7                 mov     dword ptr [edi+4], 7FFFFFFFh
.text:0040C5BE                 jmp     loc_40BAF6
.text:0040C5C3 ; ---------------------------------------------------------------------------
.text:0040C5C3
.text:0040C5C3 loc_40C5C3:                             ; CODE XREF: sub_40B7E0+DC9↑j
.text:0040C5C3                                         ; sub_40B7E0+DCF↑j
.text:0040C5C3                 mov     eax, 2
.text:0040C5C8                 mul     ebx
.text:0040C5CA                 lea     ebx, [edx+esi*2]
.text:0040C5CD                 mov     [edi], eax
.text:0040C5CF                 mov     [edi+4], ebx
.text:0040C5D2                 jmp     loc_40BAAF
.text:0040C5D7 ; ---------------------------------------------------------------------------
.text:0040C5D7
.text:0040C5D7 loc_40C5D7:                             ; CODE XREF: sub_40B7E0+12D↑j
.text:0040C5D7                                         ; sub_40B7E0+13F↑j
.text:0040C5D7                 mov     ecx, 2
.text:0040C5DC                 mov     ebx, 3E8h
.text:0040C5E1                 mov     [esp+0FCh+var_2C], ecx
.text:0040C5E8                 jmp     loc_40B925
.text:0040C5ED ; ---------------------------------------------------------------------------
.text:0040C5ED
.text:0040C5ED loc_40C5ED:                             ; CODE XREF: sub_40B7E0+136↑j
.text:0040C5ED                 cmp     eax, 69h ; 'i'
.text:0040C5F0                 jnz     loc_40B925
.text:0040C5F6                 cmp     byte ptr [edx+2], 42h ; 'B'
.text:0040C5FA                 jnz     loc_40B925
.text:0040C600                 mov     edi, 3
.text:0040C605                 mov     [esp+0FCh+var_2C], edi
.text:0040C60C                 jmp     loc_40B925
.text:0040C611 ; ---------------------------------------------------------------------------
.text:0040C611
.text:0040C611 loc_40C611:                             ; CODE XREF: sub_40B7E0+11D↑j
.text:0040C611                 mov     edx, [ebp+0]
.text:0040C614                 jmp     loc_40B925
.text:0040C614 ; ---------------------------------------------------------------------------
.text:0040C619                 align 10h
.text:0040C620
.text:0040C620 loc_40C620:                             ; CODE XREF: sub_40B7E0+7D↑j
.text:0040C620                 call    _errno
.text:0040C625                 cmp     dword ptr [eax], 22h ; '"'
.text:0040C628                 jnz     short loc_40C640
.text:0040C62A                 mov     ebx, 1
.text:0040C62F                 mov     [esp+0FCh+var_28], ebx
.text:0040C636                 jmp     loc_40B863
.text:0040C636 ; ---------------------------------------------------------------------------
.text:0040C63B                 align 10h
.text:0040C640
.text:0040C640 loc_40C640:                             ; CODE XREF: sub_40B7E0+E48↑j
.text:0040C640                                         ; sub_40B7E0+E72↓j ...
.text:0040C640                 mov     eax, 4
.text:0040C645                 jmp     loc_40B893
.text:0040C645 ; ---------------------------------------------------------------------------
.text:0040C64A                 align 10h
.text:0040C650
.text:0040C650 loc_40C650:                             ; CODE XREF: sub_40B7E0+6E↑j
.text:0040C650                 test    edi, edi
.text:0040C652                 jz      short loc_40C640
.text:0040C654                 movzx   eax, byte ptr [eax]
.text:0040C657                 test    al, al
.text:0040C659                 jz      short loc_40C640
.text:0040C65B                 mov     [esp+0FCh+Str], edi ; Str
.text:0040C65E                 movsx   edx, al
.text:0040C661                 mov     [esp+0FCh+Val], edx ; Val
.text:0040C665                 call    strchr
.text:0040C66A                 test    eax, eax
.text:0040C66C                 jz      short loc_40C640
.text:0040C66E                 mov     ecx, 1
.text:0040C673                 xor     eax, eax
.text:0040C675                 mov     [esp+0FCh+var_24], ecx
.text:0040C67C                 mov     [esp+0FCh+var_20], eax
.text:0040C683                 jmp     loc_40B863
.text:0040C688 ; ---------------------------------------------------------------------------
.text:0040C688
.text:0040C688 loc_40C688:                             ; CODE XREF: sub_40B7E0+3A↑j
.text:0040C688                 lea     ebp, [esp+0FCh+var_18]
.text:0040C68F                 jmp     loc_40B820
.text:0040C694 ; ---------------------------------------------------------------------------
.text:0040C694
.text:0040C694 loc_40C694:                             ; CODE XREF: sub_40B7E0+2B↑j
.text:0040C694                 mov     [esp+0FCh+Radix], 70h ; 'p'
.text:0040C69C                 mov     [esp+0FCh+Val], offset loc_40B770
.text:0040C6A4                 mov     [esp+0FCh+Str], offset loc_40B7B0
.text:0040C6AB                 call    _assert
.text:0040C6AB sub_40B7E0      endp
.text:0040C6AB
.text:0040C6B0 ; ---------------------------------------------------------------------------
.text:0040C6B0                 sub     esp, 0Ch
.text:0040C6B3                 mov     edx, [esp+14h]
.text:0040C6B7                 mov     dword ptr [esp+4], 5
.text:0040C6BF                 mov     [esp+8], edx
.text:0040C6C3                 mov     edx, [esp+10h]
.text:0040C6C7                 mov     [esp], edx
.text:0040C6CA                 call    sub_40D9F0
.text:0040C6CF                 add     esp, 0Ch
.text:0040C6D2                 retn
.text:0040C6D2 ; ---------------------------------------------------------------------------
.text:0040C6D3                 align 10h
.text:0040C6E0
.text:0040C6E0 ; =============== S U B R O U T I N E =======================================
.text:0040C6E0
.text:0040C6E0
.text:0040C6E0 ; int __cdecl sub_40C6E0(char *)
.text:0040C6E0 sub_40C6E0      proc near               ; CODE XREF: sub_401E90+2F9↑p
.text:0040C6E0                                         ; sub_401E90+35E↑p ...
.text:0040C6E0
.text:0040C6E0 var_C           = dword ptr -0Ch
.text:0040C6E0 var_8           = dword ptr -8
.text:0040C6E0 var_4           = dword ptr -4
.text:0040C6E0 arg_0           = dword ptr  4
.text:0040C6E0
.text:0040C6E0                 sub     esp, 0Ch
.text:0040C6E3                 mov     edx, [esp+0Ch+arg_0]
.text:0040C6E7                 mov     [esp+0Ch+var_8], 5 ; int
.text:0040C6EF                 mov     [esp+0Ch+var_C], 0 ; int
.text:0040C6F6                 mov     [esp+0Ch+var_4], edx ; char *
.text:0040C6FA                 call    sub_40D9F0
.text:0040C6FF                 add     esp, 0Ch
.text:0040C702                 retn
.text:0040C702 sub_40C6E0      endp
.text:0040C702
.text:0040C702 ; ---------------------------------------------------------------------------
.text:0040C703                 align 10h
.text:0040C710
.text:0040C710 ; =============== S U B R O U T I N E =======================================
.text:0040C710
.text:0040C710
.text:0040C710 sub_40C710      proc near               ; CODE XREF: sub_401E90+95↑p
.text:0040C710
.text:0040C710 var_1C          = dword ptr -1Ch
.text:0040C710 var_18          = dword ptr -18h
.text:0040C710 var_14          = dword ptr -14h
.text:0040C710 var_10          = dword ptr -10h
.text:0040C710 var_C           = dword ptr -0Ch
.text:0040C710 var_8           = dword ptr -8
.text:0040C710 var_4           = dword ptr -4
.text:0040C710 arg_0           = dword ptr  4
.text:0040C710 arg_4           = dword ptr  8
.text:0040C710 arg_8           = dword ptr  0Ch
.text:0040C710 arg_C           = dword ptr  10h
.text:0040C710 arg_10          = dword ptr  14h
.text:0040C710
.text:0040C710                 sub     esp, 1Ch
.text:0040C713                 mov     edx, [esp+1Ch+arg_C]
.text:0040C717                 mov     [esp+1Ch+var_4], 0
.text:0040C71F                 mov     ecx, [esp+1Ch+arg_10]
.text:0040C723                 mov     [esp+1Ch+var_8], 0
.text:0040C72B                 mov     [esp+1Ch+var_10], edx
.text:0040C72F                 mov     edx, [esp+1Ch+arg_4]
.text:0040C733                 mov     [esp+1Ch+var_C], ecx
.text:0040C737                 mov     ecx, [esp+1Ch+arg_8]
.text:0040C73B                 mov     [esp+1Ch+var_18], edx
.text:0040C73F                 mov     edx, [esp+1Ch+arg_0]
.text:0040C743                 mov     [esp+1Ch+var_14], ecx
.text:0040C747                 mov     [esp+1Ch+var_1C], edx
.text:0040C74A                 call    sub_40A860
.text:0040C74F                 add     esp, 1Ch
.text:0040C752                 retn
.text:0040C752 sub_40C710      endp
.text:0040C752
.text:0040C752 ; ---------------------------------------------------------------------------
.text:0040C753                 align 10h
.text:0040C760                 sub     esp, 2Ch
.text:0040C763                 mov     edx, [esp+44h]
.text:0040C767                 mov     dword ptr [esp+18h], 0
.text:0040C76F                 mov     ecx, [esp+40h]
.text:0040C773                 mov     dword ptr [esp+14h], 0
.text:0040C77B                 mov     [esp+1Ch], edx
.text:0040C77F                 mov     edx, [esp+3Ch]
.text:0040C783                 mov     [esp+10h], ecx
.text:0040C787                 mov     ecx, [esp+38h]
.text:0040C78B                 mov     [esp+0Ch], edx
.text:0040C78F                 mov     edx, [esp+34h]
.text:0040C793                 mov     [esp+8], ecx
.text:0040C797                 mov     [esp+4], edx
.text:0040C79B                 mov     edx, [esp+30h]
.text:0040C79F                 mov     [esp], edx
.text:0040C7A2                 call    loc_409CD0
.text:0040C7A7                 add     esp, 2Ch
.text:0040C7AA                 retn
.text:0040C7AA ; ---------------------------------------------------------------------------
.text:0040C7AB                 align 10h
.text:0040C7B0                 sub     esp, 1Ch
.text:0040C7B3                 mov     edx, [esp+2Ch]
.text:0040C7B7                 mov     dword ptr [esp+18h], 0
.text:0040C7BF                 mov     ecx, [esp+30h]
.text:0040C7C3                 mov     dword ptr [esp+14h], 1
.text:0040C7CB                 mov     [esp+0Ch], edx
.text:0040C7CF                 mov     edx, [esp+24h]
.text:0040C7D3                 mov     [esp+10h], ecx
.text:0040C7D7                 mov     ecx, [esp+28h]
.text:0040C7DB                 mov     [esp+4], edx
.text:0040C7DF                 mov     edx, [esp+20h]
.text:0040C7E3                 mov     [esp+8], ecx
.text:0040C7E7                 mov     [esp], edx
.text:0040C7EA                 call    sub_40A860
.text:0040C7EF                 add     esp, 1Ch
.text:0040C7F2                 retn
.text:0040C7F2 ; ---------------------------------------------------------------------------
.text:0040C7F3                 align 10h
.text:0040C800                 sub     esp, 2Ch
.text:0040C803                 mov     edx, [esp+44h]
.text:0040C807                 mov     dword ptr [esp+18h], 0
.text:0040C80F                 mov     ecx, [esp+40h]
.text:0040C813                 mov     dword ptr [esp+14h], 1
.text:0040C81B                 mov     [esp+1Ch], edx
.text:0040C81F                 mov     edx, [esp+3Ch]
.text:0040C823                 mov     [esp+10h], ecx
.text:0040C827                 mov     ecx, [esp+38h]
.text:0040C82B                 mov     [esp+0Ch], edx
.text:0040C82F                 mov     edx, [esp+34h]
.text:0040C833                 mov     [esp+8], ecx
.text:0040C837                 mov     [esp+4], edx
.text:0040C83B                 mov     edx, [esp+30h]
.text:0040C83F                 mov     [esp], edx
.text:0040C842                 call    loc_409CD0
.text:0040C847                 add     esp, 2Ch
.text:0040C84A                 retn
.text:0040C84A ; ---------------------------------------------------------------------------
.text:0040C84B                 align 10h
.text:0040C850                 mov     edx, [esp+4]
.text:0040C854                 mov     ds:dword_411280, edx
.text:0040C85A                 retn
.text:0040C85A ; ---------------------------------------------------------------------------
.text:0040C85B aWriteError     db 'write error',0      ; DATA XREF: sub_40C880:loc_40C8C9↓o
.text:0040C867 ; const char aSS_0[]
.text:0040C867 aSS_0           db '%s: %s',0           ; DATA XREF: sub_40C880+77↓o
.text:0040C86E ; const char aS_1[]
.text:0040C86E aS_1            db '%s',0               ; DATA XREF: sub_40C880+A0↓o
.text:0040C871 ; ---------------------------------------------------------------------------
.text:0040C871                 jmp     short sub_40C880
.text:0040C871 ; ---------------------------------------------------------------------------
.text:0040C873                 align 10h
.text:0040C880
.text:0040C880 ; =============== S U B R O U T I N E =======================================
.text:0040C880
.text:0040C880
.text:0040C880 ; void __cdecl sub_40C880()
.text:0040C880 sub_40C880      proc near               ; CODE XREF: .text:0040C871↑j
.text:0040C880                                         ; DATA XREF: sub_401E90+5D↑o
.text:0040C880
.text:0040C880 Stream          = dword ptr -2Ch
.text:0040C880 ErrorMessage    = dword ptr -28h
.text:0040C880 var_24          = dword ptr -24h
.text:0040C880 var_20          = byte ptr -20h
.text:0040C880 var_1C          = dword ptr -1Ch
.text:0040C880 var_9           = byte ptr -9
.text:0040C880
.text:0040C880                 push    esi
.text:0040C881                 push    ebx
.text:0040C882                 sub     esp, 24h
.text:0040C885                 mov     edx, ds:_iob
.text:0040C88B                 mov     ecx, [edx+2Ch]
.text:0040C88E                 lea     esi, [edx+20h]
.text:0040C891                 shr     ecx, 5
.text:0040C894                 mov     bl, cl
.text:0040C896                 mov     ecx, [edx+20h]
.text:0040C899                 and     bl, 1
.text:0040C89C                 cmp     ecx, [esi+8]
.text:0040C89F                 mov     [esp+2Ch+Stream], esi ; Stream
.text:0040C8A2                 setz    [esp+2Ch+var_9]
.text:0040C8A7                 call    fclose
.text:0040C8AC                 test    eax, eax
.text:0040C8AE                 setnz   al
.text:0040C8B1                 test    bl, bl
.text:0040C8B3                 jnz     loc_40C943
.text:0040C8B9                 test    al, al
.text:0040C8BB                 jz      short loc_40C910
.text:0040C8BD
.text:0040C8BD loc_40C8BD:                             ; CODE XREF: sub_40C880+CD↓j
.text:0040C8BD                 call    _errno
.text:0040C8C2                 mov     esi, [eax]
.text:0040C8C4
.text:0040C8C4 loc_40C8C4:                             ; CODE XREF: sub_40C880+C7↓j
.text:0040C8C4                 cmp     esi, 9
.text:0040C8C7                 jz      short loc_40C936
.text:0040C8C9
.text:0040C8C9 loc_40C8C9:                             ; CODE XREF: sub_40C880+B8↓j
.text:0040C8C9                                         ; sub_40C880+C1↓j
.text:0040C8C9                 mov     [esp+2Ch+Stream], offset aWriteError ; "write error"
.text:0040C8D0                 call    ds:libintl_gettext
.text:0040C8D6                 mov     ebx, eax
.text:0040C8D8                 mov     eax, ds:dword_411280
.text:0040C8DD                 test    eax, eax
.text:0040C8DF                 jz      short loc_40C916
.text:0040C8E1                 mov     [esp+2Ch+Stream], eax ; char *
.text:0040C8E4                 call    sub_40DD60
.text:0040C8E9                 mov     dword ptr [esp+2Ch+var_20], eax ; char
.text:0040C8ED                 mov     edx, Code
.text:0040C8F3                 mov     [esp+2Ch+var_1C], ebx
.text:0040C8F7                 mov     [esp+2Ch+var_24], offset aSS_0 ; "%s: %s"
.text:0040C8FF                 mov     [esp+2Ch+ErrorMessage], esi ; ErrorMessage
.text:0040C903                 mov     [esp+2Ch+Stream], edx ; Code
.text:0040C906                 call    sub_40E080
.text:0040C90B                 nop
.text:0040C90C                 lea     esi, [esi+0]
.text:0040C910
.text:0040C910 loc_40C910:                             ; CODE XREF: sub_40C880+3B↑j
.text:0040C910                                         ; sub_40C880+B4↓j ...
.text:0040C910                 add     esp, 24h
.text:0040C913                 pop     ebx
.text:0040C914                 pop     esi
.text:0040C915                 retn
.text:0040C916 ; ---------------------------------------------------------------------------
.text:0040C916
.text:0040C916 loc_40C916:                             ; CODE XREF: sub_40C880+5F↑j
.text:0040C916                 mov     dword ptr [esp+2Ch+var_20], ebx ; char
.text:0040C91A                 mov     ebx, Code
.text:0040C920                 mov     [esp+2Ch+var_24], offset aS_1 ; "%s"
.text:0040C928                 mov     [esp+2Ch+ErrorMessage], esi ; ErrorMessage
.text:0040C92C                 mov     [esp+2Ch+Stream], ebx ; Code
.text:0040C92F                 call    sub_40E080
.text:0040C934                 jmp     short loc_40C910
.text:0040C936 ; ---------------------------------------------------------------------------
.text:0040C936
.text:0040C936 loc_40C936:                             ; CODE XREF: sub_40C880+47↑j
.text:0040C936                 test    bl, bl
.text:0040C938                 jnz     short loc_40C8C9
.text:0040C93A                 cmp     [esp+2Ch+var_9], 0
.text:0040C93F                 jnz     short loc_40C910
.text:0040C941                 jmp     short loc_40C8C9
.text:0040C943 ; ---------------------------------------------------------------------------
.text:0040C943
.text:0040C943 loc_40C943:                             ; CODE XREF: sub_40C880+33↑j
.text:0040C943                 xor     esi, esi
.text:0040C945                 test    al, al
.text:0040C947                 jz      loc_40C8C4
.text:0040C94D                 jmp     loc_40C8BD
.text:0040C94D sub_40C880      endp
.text:0040C94D
.text:0040C94D ; ---------------------------------------------------------------------------
.text:0040C952                 align 10h
.text:0040C960                 sub     esp, 0Ch
.text:0040C963                 xor     edx, edx
.text:0040C965                 mov     ecx, [esp+14h]
.text:0040C969                 mov     [esp+8], ebx
.text:0040C96D                 mov     eax, 0FFFFFFFFh
.text:0040C972                 mov     ebx, [esp+10h]
.text:0040C976                 div     ecx
.text:0040C978                 cmp     eax, ebx
.text:0040C97A                 jb      short loc_40C999
.text:0040C97C                 mov     edx, ebx
.text:0040C97E                 imul    edx, ecx
.text:0040C981                 mov     [esp], edx
.text:0040C984                 call    malloc
.text:0040C989                 test    eax, eax
.text:0040C98B                 jz      short loc_40C995
.text:0040C98D
.text:0040C98D loc_40C98D:                             ; CODE XREF: .text:0040C997↓j
.text:0040C98D                 mov     ebx, [esp+8]
.text:0040C991                 add     esp, 0Ch
.text:0040C994                 retn
.text:0040C995 ; ---------------------------------------------------------------------------
.text:0040C995
.text:0040C995 loc_40C995:                             ; CODE XREF: .text:0040C98B↑j
.text:0040C995                 test    ebx, ebx
.text:0040C997                 jz      short loc_40C98D
.text:0040C999
.text:0040C999 loc_40C999:                             ; CODE XREF: .text:0040C97A↑j
.text:0040C999                 call    sub_40DFF0
.text:0040C999 ; ---------------------------------------------------------------------------
.text:0040C99E                 align 10h
.text:0040C9A0
.text:0040C9A0 ; =============== S U B R O U T I N E =======================================
.text:0040C9A0
.text:0040C9A0
.text:0040C9A0 ; int __cdecl sub_40C9A0(size_t)
.text:0040C9A0 sub_40C9A0      proc near               ; CODE XREF: sub_401E90+66A↑p
.text:0040C9A0                                         ; sub_401E90+6B4↑p ...
.text:0040C9A0
.text:0040C9A0 Size            = dword ptr -0Ch
.text:0040C9A0 var_4           = dword ptr -4
.text:0040C9A0 arg_0           = dword ptr  4
.text:0040C9A0
.text:0040C9A0                 sub     esp, 0Ch
.text:0040C9A3                 mov     [esp+0Ch+var_4], ebx
.text:0040C9A7                 mov     ebx, [esp+0Ch+arg_0]
.text:0040C9AB                 mov     [esp+0Ch+Size], ebx ; Size
.text:0040C9AE                 call    malloc
.text:0040C9B3                 test    eax, eax
.text:0040C9B5                 jz      short loc_40C9C0
.text:0040C9B7
.text:0040C9B7 loc_40C9B7:                             ; CODE XREF: sub_40C9A0+22↓j
.text:0040C9B7                 mov     ebx, [esp+0Ch+var_4]
.text:0040C9BB                 add     esp, 0Ch
.text:0040C9BE                 retn
.text:0040C9BE ; ---------------------------------------------------------------------------
.text:0040C9BF                 align 10h
.text:0040C9C0
.text:0040C9C0 loc_40C9C0:                             ; CODE XREF: sub_40C9A0+15↑j
.text:0040C9C0                 test    ebx, ebx
.text:0040C9C2                 jz      short loc_40C9B7
.text:0040C9C4                 call    sub_40DFF0
.text:0040C9C4 sub_40C9A0      endp
.text:0040C9C4
.text:0040C9C4 ; ---------------------------------------------------------------------------
.text:0040C9C9                 align 10h
.text:0040C9D0                 sub     esp, 1Ch
.text:0040C9D3                 xor     edx, edx
.text:0040C9D5                 mov     eax, 0FFFFFFFFh
.text:0040C9DA                 mov     [esp+14h], ebx
.text:0040C9DE                 mov     ecx, [esp+20h]
.text:0040C9E2                 mov     ebx, [esp+28h]
.text:0040C9E6                 mov     [esp+18h], esi
.text:0040C9EA                 mov     esi, [esp+24h]
.text:0040C9EE                 div     ebx
.text:0040C9F0                 cmp     eax, esi
.text:0040C9F2                 jb      short loc_40CA24
.text:0040C9F4                 mov     [esp], ecx
.text:0040C9F7                 mov     edx, esi
.text:0040C9F9                 imul    edx, ebx
.text:0040C9FC                 mov     [esp+4], edx
.text:0040CA00                 call    realloc
.text:0040CA05                 test    eax, eax
.text:0040CA07                 mov     ecx, eax
.text:0040CA09                 jz      short loc_40CA20
.text:0040CA0B
.text:0040CA0B loc_40CA0B:                             ; CODE XREF: .text:0040CA22↓j
.text:0040CA0B                 mov     ebx, [esp+14h]
.text:0040CA0F                 mov     eax, ecx
.text:0040CA11                 mov     esi, [esp+18h]
.text:0040CA15                 add     esp, 1Ch
.text:0040CA18                 retn
.text:0040CA18 ; ---------------------------------------------------------------------------
.text:0040CA19                 align 10h
.text:0040CA20
.text:0040CA20 loc_40CA20:                             ; CODE XREF: .text:0040CA09↑j
.text:0040CA20                 test    esi, esi
.text:0040CA22                 jz      short loc_40CA0B
.text:0040CA24
.text:0040CA24 loc_40CA24:                             ; CODE XREF: .text:0040C9F2↑j
.text:0040CA24                 call    sub_40DFF0
.text:0040CA24 ; ---------------------------------------------------------------------------
.text:0040CA29                 align 10h
.text:0040CA30
.text:0040CA30 ; =============== S U B R O U T I N E =======================================
.text:0040CA30
.text:0040CA30
.text:0040CA30 ; int __cdecl sub_40CA30(void *, size_t)
.text:0040CA30 sub_40CA30      proc near               ; CODE XREF: sub_40DE00+5B↓p
.text:0040CA30
.text:0040CA30 Block           = dword ptr -0Ch
.text:0040CA30 Size            = dword ptr -8
.text:0040CA30 var_4           = dword ptr -4
.text:0040CA30 arg_0           = dword ptr  4
.text:0040CA30 arg_4           = dword ptr  8
.text:0040CA30
.text:0040CA30                 sub     esp, 0Ch
.text:0040CA33                 mov     edx, [esp+0Ch+arg_0]
.text:0040CA37                 mov     [esp+0Ch+var_4], ebx
.text:0040CA3B                 mov     ebx, [esp+0Ch+arg_4]
.text:0040CA3F                 mov     [esp+0Ch+Block], edx ; Block
.text:0040CA42                 mov     [esp+0Ch+Size], ebx ; Size
.text:0040CA46                 call    realloc
.text:0040CA4B                 test    eax, eax
.text:0040CA4D                 jz      short loc_40CA57
.text:0040CA4F
.text:0040CA4F loc_40CA4F:                             ; CODE XREF: sub_40CA30+29↓j
.text:0040CA4F                 mov     ebx, [esp+0Ch+var_4]
.text:0040CA53                 add     esp, 0Ch
.text:0040CA56                 retn
.text:0040CA57 ; ---------------------------------------------------------------------------
.text:0040CA57
.text:0040CA57 loc_40CA57:                             ; CODE XREF: sub_40CA30+1D↑j
.text:0040CA57                 test    ebx, ebx
.text:0040CA59                 jz      short loc_40CA4F
.text:0040CA5B                 call    sub_40DFF0
.text:0040CA5B sub_40CA30      endp
.text:0040CA5B
.text:0040CA60 ; ---------------------------------------------------------------------------
.text:0040CA60                 jmp     sub_40CBB0
.text:0040CA60 ; ---------------------------------------------------------------------------
.text:0040CA65                 align 10h
.text:0040CA70
.text:0040CA70 ; =============== S U B R O U T I N E =======================================
.text:0040CA70
.text:0040CA70
.text:0040CA70 ; int __cdecl sub_40CA70(void *, int)
.text:0040CA70 sub_40CA70      proc near               ; CODE XREF: sub_40AAA0+76↑p
.text:0040CA70
.text:0040CA70 var_C           = dword ptr -0Ch
.text:0040CA70 var_8           = dword ptr -8
.text:0040CA70 var_4           = dword ptr -4
.text:0040CA70 arg_0           = dword ptr  4
.text:0040CA70 arg_4           = dword ptr  8
.text:0040CA70
.text:0040CA70                 sub     esp, 0Ch
.text:0040CA73                 mov     edx, [esp+0Ch+arg_4]
.text:0040CA77                 mov     [esp+0Ch+var_4], 1 ; int
.text:0040CA7F                 mov     [esp+0Ch+var_8], edx ; int
.text:0040CA83                 mov     edx, [esp+0Ch+arg_0]
.text:0040CA87                 mov     [esp+0Ch+var_C], edx ; void *
.text:0040CA8A                 call    sub_40CBB0
.text:0040CA8F                 add     esp, 0Ch
.text:0040CA92                 retn
.text:0040CA92 sub_40CA70      endp
.text:0040CA92
.text:0040CA92 ; ---------------------------------------------------------------------------
.text:0040CA93                 align 10h
.text:0040CAA0                 sub     esp, 1Ch
.text:0040CAA3                 mov     [esp+18h], ebx
.text:0040CAA7                 mov     ebx, [esp+20h]
.text:0040CAAB                 mov     [esp], ebx
.text:0040CAAE                 call    malloc
.text:0040CAB3                 test    eax, eax
.text:0040CAB5                 jz      short loc_40CAD3
.text:0040CAB7
.text:0040CAB7 loc_40CAB7:                             ; CODE XREF: .text:0040CAD5↓j
.text:0040CAB7                 mov     [esp+8], ebx
.text:0040CABB                 mov     dword ptr [esp+4], 0
.text:0040CAC3                 mov     [esp], eax
.text:0040CAC6                 call    memset
.text:0040CACB                 mov     ebx, [esp+18h]
.text:0040CACF                 add     esp, 1Ch
.text:0040CAD2                 retn
.text:0040CAD3 ; ---------------------------------------------------------------------------
.text:0040CAD3
.text:0040CAD3 loc_40CAD3:                             ; CODE XREF: .text:0040CAB5↑j
.text:0040CAD3                 test    ebx, ebx
.text:0040CAD5                 jz      short loc_40CAB7
.text:0040CAD7                 call    sub_40DFF0
.text:0040CAD7 ; ---------------------------------------------------------------------------
.text:0040CADC                 align 10h
.text:0040CAE0                 sub     esp, 0Ch
.text:0040CAE3                 xor     edx, edx
.text:0040CAE5                 mov     ecx, [esp+14h]
.text:0040CAE9                 mov     [esp+8], ebx
.text:0040CAED                 mov     eax, 0FFFFFFFFh
.text:0040CAF2                 mov     ebx, [esp+10h]
.text:0040CAF6                 div     ecx
.text:0040CAF8                 cmp     eax, ebx
.text:0040CAFA                 jb      short loc_40CB18
.text:0040CAFC                 mov     [esp+4], ecx
.text:0040CB00                 mov     [esp], ebx
.text:0040CB03                 call    calloc
.text:0040CB08                 test    eax, eax
.text:0040CB0A                 jz      short loc_40CB14
.text:0040CB0C
.text:0040CB0C loc_40CB0C:                             ; CODE XREF: .text:0040CB16↓j
.text:0040CB0C                 mov     ebx, [esp+8]
.text:0040CB10                 add     esp, 0Ch
.text:0040CB13                 retn
.text:0040CB14 ; ---------------------------------------------------------------------------
.text:0040CB14
.text:0040CB14 loc_40CB14:                             ; CODE XREF: .text:0040CB0A↑j
.text:0040CB14                 test    ebx, ebx
.text:0040CB16                 jz      short loc_40CB0C
.text:0040CB18
.text:0040CB18 loc_40CB18:                             ; CODE XREF: .text:0040CAFA↑j
.text:0040CB18                 call    sub_40DFF0
.text:0040CB18 ; ---------------------------------------------------------------------------
.text:0040CB1D                 align 10h
.text:0040CB20                 sub     esp, 1Ch
.text:0040CB23                 mov     [esp+18h], ebx
.text:0040CB27                 mov     ebx, [esp+24h]
.text:0040CB2B                 mov     [esp], ebx
.text:0040CB2E                 call    malloc
.text:0040CB33                 test    eax, eax
.text:0040CB35                 mov     edx, eax
.text:0040CB37                 jz      short loc_40CB55
.text:0040CB39
.text:0040CB39 loc_40CB39:                             ; CODE XREF: .text:0040CB57↓j
.text:0040CB39                 mov     [esp+8], ebx
.text:0040CB3D                 mov     ecx, [esp+20h]
.text:0040CB41                 mov     [esp], edx
.text:0040CB44                 mov     [esp+4], ecx
.text:0040CB48                 call    memcpy
.text:0040CB4D                 mov     ebx, [esp+18h]
.text:0040CB51                 add     esp, 1Ch
.text:0040CB54                 retn
.text:0040CB55 ; ---------------------------------------------------------------------------
.text:0040CB55
.text:0040CB55 loc_40CB55:                             ; CODE XREF: .text:0040CB37↑j
.text:0040CB55                 test    ebx, ebx
.text:0040CB57                 jz      short loc_40CB39
.text:0040CB59                 call    sub_40DFF0
.text:0040CB59 ; ---------------------------------------------------------------------------
.text:0040CB5E                 align 10h
.text:0040CB60                 sub     esp, 1Ch
.text:0040CB63                 mov     [esp+18h], esi
.text:0040CB67                 mov     esi, [esp+20h]
.text:0040CB6B                 mov     [esp+14h], ebx
.text:0040CB6F                 mov     [esp], esi
.text:0040CB72                 call    strlen
.text:0040CB77                 lea     ebx, [eax+1]
.text:0040CB7A                 mov     [esp], ebx
.text:0040CB7D                 call    malloc
.text:0040CB82                 test    eax, eax
.text:0040CB84                 jz      short loc_40CBA2
.text:0040CB86
.text:0040CB86 loc_40CB86:                             ; CODE XREF: .text:0040CBA4↓j
.text:0040CB86                 mov     [esp+8], ebx
.text:0040CB8A                 mov     [esp+4], esi
.text:0040CB8E                 mov     [esp], eax
.text:0040CB91                 call    memcpy
.text:0040CB96                 mov     ebx, [esp+14h]
.text:0040CB9A                 mov     esi, [esp+18h]
.text:0040CB9E                 add     esp, 1Ch
.text:0040CBA1                 retn
.text:0040CBA2 ; ---------------------------------------------------------------------------
.text:0040CBA2
.text:0040CBA2 loc_40CBA2:                             ; CODE XREF: .text:0040CB84↑j
.text:0040CBA2                 test    ebx, ebx
.text:0040CBA4                 jz      short loc_40CB86
.text:0040CBA6                 call    sub_40DFF0
.text:0040CBA6 ; ---------------------------------------------------------------------------
.text:0040CBAB                 align 10h
.text:0040CBB0
.text:0040CBB0 ; =============== S U B R O U T I N E =======================================
.text:0040CBB0
.text:0040CBB0
.text:0040CBB0 ; int __cdecl sub_40CBB0(void *, int, int)
.text:0040CBB0 sub_40CBB0      proc near               ; CODE XREF: .text:0040CA60↑j
.text:0040CBB0                                         ; sub_40CA70+1A↑p
.text:0040CBB0
.text:0040CBB0 Block           = dword ptr -1Ch
.text:0040CBB0 Size            = dword ptr -18h
.text:0040CBB0 var_C           = dword ptr -0Ch
.text:0040CBB0 var_8           = dword ptr -8
.text:0040CBB0 var_4           = dword ptr -4
.text:0040CBB0 arg_0           = dword ptr  4
.text:0040CBB0 arg_4           = dword ptr  8
.text:0040CBB0 arg_8           = dword ptr  0Ch
.text:0040CBB0
.text:0040CBB0                 sub     esp, 1Ch
.text:0040CBB3                 mov     [esp+1Ch+var_8], esi
.text:0040CBB7                 mov     esi, [esp+1Ch+arg_0]
.text:0040CBBB                 mov     [esp+1Ch+var_4], edi
.text:0040CBBF                 mov     edi, [esp+1Ch+arg_4]
.text:0040CBC3                 test    esi, esi
.text:0040CBC5                 mov     [esp+1Ch+var_C], ebx
.text:0040CBC9                 mov     ecx, [edi]
.text:0040CBCB                 mov     ebx, [esp+1Ch+arg_8]
.text:0040CBCF                 jz      short loc_40CC10
.text:0040CBD1                 xor     edx, edx
.text:0040CBD3                 mov     eax, 7FFFFFFFh
.text:0040CBD8                 div     ebx
.text:0040CBDA                 cmp     eax, ecx
.text:0040CBDC                 jb      short loc_40CC09
.text:0040CBDE                 add     ecx, ecx
.text:0040CBE0
.text:0040CBE0 loc_40CBE0:                             ; CODE XREF: sub_40CBB0+62↓j
.text:0040CBE0                                         ; sub_40CBB0+71↓j ...
.text:0040CBE0                 mov     [edi], ecx
.text:0040CBE2                 imul    ebx, ecx
.text:0040CBE5                 mov     [esp+1Ch+Block], esi ; Block
.text:0040CBE8                 mov     [esp+1Ch+Size], ebx ; Size
.text:0040CBEC                 call    realloc
.text:0040CBF1                 test    eax, eax
.text:0040CBF3                 jz      short loc_40CC05
.text:0040CBF5
.text:0040CBF5 loc_40CBF5:                             ; CODE XREF: sub_40CBB0+57↓j
.text:0040CBF5                 mov     ebx, [esp+1Ch+var_C]
.text:0040CBF9                 mov     esi, [esp+1Ch+var_8]
.text:0040CBFD                 mov     edi, [esp+1Ch+var_4]
.text:0040CC01                 add     esp, 1Ch
.text:0040CC04                 retn
.text:0040CC05 ; ---------------------------------------------------------------------------
.text:0040CC05
.text:0040CC05 loc_40CC05:                             ; CODE XREF: sub_40CBB0+43↑j
.text:0040CC05                 test    ebx, ebx
.text:0040CC07                 jz      short loc_40CBF5
.text:0040CC09
.text:0040CC09 loc_40CC09:                             ; CODE XREF: sub_40CBB0+2C↑j
.text:0040CC09                 call    sub_40DFF0
.text:0040CC09 ; ---------------------------------------------------------------------------
.text:0040CC0E                 align 10h
.text:0040CC10
.text:0040CC10 loc_40CC10:                             ; CODE XREF: sub_40CBB0+1F↑j
.text:0040CC10                 test    ecx, ecx
.text:0040CC12                 jnz     short loc_40CBE0
.text:0040CC14                 xor     edx, edx
.text:0040CC16                 mov     eax, 40h ; '@'
.text:0040CC1B                 div     ebx
.text:0040CC1D                 test    eax, eax
.text:0040CC1F                 mov     ecx, eax
.text:0040CC21                 jnz     short loc_40CBE0
.text:0040CC23                 mov     ecx, 1
.text:0040CC28                 jmp     short loc_40CBE0
.text:0040CC28 sub_40CBB0      endp
.text:0040CC28
.text:0040CC28 ; ---------------------------------------------------------------------------
.text:0040CC2A                 align 10h
.text:0040CC30 aLiteral        db 'literal',0          ; DATA XREF: .text:0040CC70↓o
.text:0040CC38 aShell          db 'shell',0            ; DATA XREF: .text:0040CC74↓o
.text:0040CC3E aShellAlways    db 'shell-always',0     ; DATA XREF: .text:0040CC78↓o
.text:0040CC4B aC              db 'c',0                ; DATA XREF: .text:0040CC7C↓o
.text:0040CC4D aEscape         db 'escape',0           ; DATA XREF: .text:0040CC80↓o
.text:0040CC54 aLocale         db 'locale',0           ; DATA XREF: .text:0040CC84↓o
.text:0040CC5B aClocale        db 'clocale',0          ; DATA XREF: .text:0040CC88↓o
.text:0040CC63                 align 10h
.text:0040CC70                 dd offset aLiteral      ; "literal"
.text:0040CC74                 dd offset aShell        ; "shell"
.text:0040CC78                 dd offset aShellAlways  ; "shell-always"
.text:0040CC7C                 dd offset aC            ; "c"
.text:0040CC80                 dd offset aEscape       ; "escape"
.text:0040CC84                 dd offset aLocale       ; "locale"
.text:0040CC88                 dd offset aClocale      ; "clocale"
.text:0040CC8C                 dd 2 dup(0)
.text:0040CC94                 dd 1, 2, 3, 4, 5, 6
.text:0040CCAC asc_40CCAC:                             ; DATA XREF: sub_40CCC0+7E↓o
.text:0040CCAC                                         ; sub_40CCC0+A39↓o ...
.text:0040CCAC                 text "UTF-16LE", '"',27h,'`'
.text:0040CCB2                 align 10h
.text:0040CCC0
.text:0040CCC0 ; =============== S U B R O U T I N E =======================================
.text:0040CCC0
.text:0040CCC0
.text:0040CCC0 ; int __cdecl sub_40CCC0(int, int, char *Str, int, int, int)
.text:0040CCC0 sub_40CCC0      proc near               ; CODE XREF: sub_40CCC0+43A↓p
.text:0040CCC0                                         ; .text:0040D883↓p ...
.text:0040CCC0
.text:0040CCC0 C               = dword ptr -4Ch
.text:0040CCC0 Type            = dword ptr -48h
.text:0040CCC0 SizeInBytes     = dword ptr -44h
.text:0040CCC0 State           = dword ptr -40h
.text:0040CCC0 var_3C          = dword ptr -3Ch
.text:0040CCC0 var_38          = dword ptr -38h
.text:0040CCC0 var_34          = dword ptr -34h
.text:0040CCC0 var_30          = dword ptr -30h
.text:0040CCC0 var_29          = byte ptr -29h
.text:0040CCC0 var_28          = dword ptr -28h
.text:0040CCC0 var_22          = byte ptr -22h
.text:0040CCC0 var_21          = byte ptr -21h
.text:0040CCC0 var_20          = dword ptr -20h
.text:0040CCC0 var_1C          = dword ptr -1Ch
.text:0040CCC0 var_18          = mbstate_t ptr -18h
.text:0040CCC0 arg_0           = dword ptr  4
.text:0040CCC0 arg_4           = dword ptr  8
.text:0040CCC0 Str             = dword ptr  0Ch
.text:0040CCC0 arg_C           = dword ptr  10h
.text:0040CCC0 arg_10          = dword ptr  14h
.text:0040CCC0 arg_14          = dword ptr  18h
.text:0040CCC0
.text:0040CCC0                 push    ebp
.text:0040CCC1                 push    edi
.text:0040CCC2                 push    esi
.text:0040CCC3                 push    ebx
.text:0040CCC4                 sub     esp, 3Ch
.text:0040CCC7                 mov     edx, ds:__mb_cur_max
.text:0040CCCD                 mov     [esp+4Ch+var_34], 0
.text:0040CCD5                 mov     [esp+4Ch+var_1C], 0
.text:0040CCDD                 cmp     dword ptr [edx], 1
.text:0040CCE0                 mov     [esp+4Ch+var_20], 0
.text:0040CCE8                 mov     [esp+4Ch+var_21], 0
.text:0040CCED                 setz    [esp+4Ch+var_22]
.text:0040CCF2                 cmp     [esp+4Ch+arg_10], 6 ; switch 7 cases
.text:0040CCF7                 ja      short def_40CCFD ; jumptable 0040CCFD default case, cases 0,1
.text:0040CCF9                 mov     edx, [esp+4Ch+arg_10]
.text:0040CCFD                 jmp     ds:jpt_40CCFD[edx*4] ; switch jump
.text:0040CCFD ; ---------------------------------------------------------------------------
.text:0040CD04 jpt_40CCFD      dd offset def_40CCFD    ; DATA XREF: sub_40CCC0+3D↑r
.text:0040CD04                 dd offset def_40CCFD    ; jump table for switch statement
.text:0040CD04                 dd offset loc_40D645
.text:0040CD04                 dd offset loc_40CD20
.text:0040CD04                 dd offset loc_40D66B
.text:0040CD04                 dd offset loc_40D675
.text:0040CD04                 dd offset loc_40D675
.text:0040CD20 ; ---------------------------------------------------------------------------
.text:0040CD20
.text:0040CD20 loc_40CD20:                             ; CODE XREF: sub_40CCC0+3D↑j
.text:0040CD20                                         ; DATA XREF: sub_40CCC0:jpt_40CCFD↑o
.text:0040CD20                 mov     eax, [esp+4Ch+arg_4] ; jumptable 0040CCFD case 3
.text:0040CD24                 cmp     [esp+4Ch+var_34], eax
.text:0040CD28                 jnb     short loc_40CD31
.text:0040CD2A                 mov     ebx, [esp+4Ch+arg_0]
.text:0040CD2E                 mov     byte ptr [ebx], 22h ; '"'
.text:0040CD31
.text:0040CD31 loc_40CD31:                             ; CODE XREF: sub_40CCC0+68↑j
.text:0040CD31                 mov     [esp+4Ch+var_34], 1
.text:0040CD39                 mov     [esp+4Ch+var_21], 1
.text:0040CD3E                 mov     [esp+4Ch+var_1C], offset asc_40CCAC ; "\"'`"
.text:0040CD46
.text:0040CD46 loc_40CD46:                             ; CODE XREF: sub_40CCC0+9A6↓j
.text:0040CD46                 mov     [esp+4Ch+var_20], 1
.text:0040CD4E
.text:0040CD4E def_40CCFD:                             ; CODE XREF: sub_40CCC0+37↑j
.text:0040CD4E                                         ; sub_40CCC0+3D↑j ...
.text:0040CD4E                 xor     ebp, ebp        ; jumptable 0040CCFD default case, cases 0,1
.text:0040CD50
.text:0040CD50 loc_40CD50:                             ; CODE XREF: sub_40CCC0+3DB↓j
.text:0040CD50                 cmp     [esp+4Ch+arg_C], 0FFFFFFFFh
.text:0040CD55                 jz      loc_40D637
.text:0040CD5B                 cmp     ebp, [esp+4Ch+arg_C]
.text:0040CD5F
.text:0040CD5F loc_40CD5F:                             ; CODE XREF: sub_40CCC0+980↓j
.text:0040CD5F                 jz      loc_40D5CE
.text:0040CD65                 cmp     [esp+4Ch+var_21], 0
.text:0040CD6A                 jz      short loc_40CDB0
.text:0040CD6C                 mov     esi, [esp+4Ch+var_20]
.text:0040CD70                 test    esi, esi
.text:0040CD72                 jz      short loc_40CDB0
.text:0040CD74                 mov     ecx, [esp+4Ch+var_20]
.text:0040CD78                 lea     edi, [ecx+ebp]
.text:0040CD7B                 cmp     edi, [esp+4Ch+arg_C]
.text:0040CD7F                 ja      short loc_40CDB0
.text:0040CD81                 cld
.text:0040CD82                 mov     ebx, [esp+4Ch+Str]
.text:0040CD86                 mov     edi, [esp+4Ch+var_1C]
.text:0040CD8A                 add     ebx, ebp
.text:0040CD8C                 mov     esi, ebx
.text:0040CD8E                 cmp     ecx, ecx
.text:0040CD90                 repe cmpsb
.text:0040CD92                 jnz     short loc_40CDB0
.text:0040CD94                 mov     edx, [esp+4Ch+arg_4]
.text:0040CD98                 cmp     [esp+4Ch+var_34], edx
.text:0040CD9C                 jnb     short loc_40CDAA
.text:0040CD9E                 mov     ecx, [esp+4Ch+arg_0]
.text:0040CDA2                 mov     eax, [esp+4Ch+var_34]
.text:0040CDA6                 mov     byte ptr [eax+ecx], 5Ch ; '\'
.text:0040CDAA
.text:0040CDAA loc_40CDAA:                             ; CODE XREF: sub_40CCC0+DC↑j
.text:0040CDAA                 inc     [esp+4Ch+var_34]
.text:0040CDAE                 mov     esi, esi
.text:0040CDB0
.text:0040CDB0 loc_40CDB0:                             ; CODE XREF: sub_40CCC0+AA↑j
.text:0040CDB0                                         ; sub_40CCC0+B2↑j ...
.text:0040CDB0                 mov     edi, [esp+4Ch+Str]
.text:0040CDB4                 movzx   ebx, byte ptr [ebp+edi+0]
.text:0040CDB9                 movzx   eax, bl
.text:0040CDBC                 cmp     eax, 7Eh        ; switch 127 cases
.text:0040CDBF                 ja      def_40CDC5      ; jumptable 0040CDC5 default case, cases 1-6,14-31,64
.text:0040CDC5                 jmp     ds:jpt_40CDC5[eax*4] ; switch jump
.text:0040CDC5 ; ---------------------------------------------------------------------------
.text:0040CDCC jpt_40CDC5      dd offset loc_40CFC8, offset def_40CDC5, offset def_40CDC5
.text:0040CDCC                                         ; DATA XREF: sub_40CCC0+105↑r
.text:0040CDCC                 dd offset def_40CDC5, offset def_40CDC5, offset def_40CDC5 ; jump table for switch statement
.text:0040CDCC                 dd offset def_40CDC5, offset loc_40D0A0, offset loc_40D0BE
.text:0040CDCC                 dd offset loc_40D0C2, offset loc_40D107, offset loc_40D10B
.text:0040CDCC                 dd offset loc_40D10F, offset loc_40D113, offset def_40CDC5
.text:0040CDCC                 dd offset def_40CDC5, offset def_40CDC5, offset def_40CDC5
.text:0040CDCC                 dd offset def_40CDC5, offset def_40CDC5, offset def_40CDC5
.text:0040CDCC                 dd offset def_40CDC5, offset def_40CDC5, offset def_40CDC5
.text:0040CDCC                 dd offset def_40CDC5, offset def_40CDC5, offset def_40CDC5
.text:0040CDCC                 dd offset def_40CDC5, offset def_40CDC5, offset def_40CDC5
.text:0040CDCC                 dd offset def_40CDC5, offset def_40CDC5, offset loc_40D598
.text:0040CDCC                 dd offset loc_40D598, offset loc_40D598, offset loc_40D5BA
.text:0040CDCC                 dd offset loc_40D598, offset def_40D1C2, offset loc_40D598
.text:0040CDCC                 dd offset loc_40D117, offset loc_40D598, offset loc_40D598
.text:0040CDCC                 dd offset loc_40D598, offset def_40D1C2, offset def_40D1C2
.text:0040CDCC                 dd offset def_40D1C2, offset def_40D1C2, offset def_40D1C2
.text:0040CDCC                 dd offset def_40D1C2, offset def_40D1C2, offset def_40D1C2
.text:0040CDCC                 dd offset def_40D1C2, offset def_40D1C2, offset def_40D1C2
.text:0040CDCC                 dd offset def_40D1C2, offset def_40D1C2, offset def_40D1C2
.text:0040CDCC                 dd offset def_40D1C2, offset def_40D1C2, offset loc_40D598
.text:0040CDCC                 dd offset loc_40D598, offset loc_40D598, offset loc_40D598
.text:0040CDCC                 dd offset loc_40D17C, offset def_40CDC5, offset def_40D1C2
.text:0040CDCC                 dd offset def_40D1C2, offset def_40D1C2, offset def_40D1C2
.text:0040CDCC                 dd offset def_40D1C2, offset def_40D1C2, offset def_40D1C2
.text:0040CDCC                 dd offset def_40D1C2, offset def_40D1C2, offset def_40D1C2
.text:0040CDCC                 dd offset def_40D1C2, offset def_40D1C2, offset def_40D1C2
.text:0040CDCC                 dd offset def_40D1C2, offset def_40D1C2, offset def_40D1C2
.text:0040CDCC                 dd offset def_40D1C2, offset def_40D1C2, offset def_40D1C2
.text:0040CDCC                 dd offset def_40D1C2, offset def_40D1C2, offset def_40D1C2
.text:0040CDCC                 dd offset def_40D1C2, offset def_40D1C2, offset def_40D1C2
.text:0040CDCC                 dd offset def_40D1C2, offset loc_40D598, offset loc_40D591
.text:0040CDCC                 dd offset def_40D1C2, offset loc_40D598, offset def_40D1C2
.text:0040CDCC                 dd offset loc_40D598, offset def_40D1C2, offset def_40D1C2
.text:0040CDCC                 dd offset def_40D1C2, offset def_40D1C2, offset def_40D1C2
.text:0040CDCC                 dd offset def_40D1C2, offset def_40D1C2, offset def_40D1C2
.text:0040CDCC                 dd offset def_40D1C2, offset def_40D1C2, offset def_40D1C2
.text:0040CDCC                 dd offset def_40D1C2, offset def_40D1C2, offset def_40D1C2
.text:0040CDCC                 dd offset def_40D1C2, offset def_40D1C2, offset def_40D1C2
.text:0040CDCC                 dd offset def_40D1C2, offset def_40D1C2, offset def_40D1C2
.text:0040CDCC                 dd offset def_40D1C2, offset def_40D1C2, offset def_40D1C2
.text:0040CDCC                 dd offset def_40D1C2, offset def_40D1C2, offset def_40D1C2
.text:0040CDCC                 dd offset loc_40D5A8, offset loc_40D598, offset loc_40D5A8
.text:0040CDCC                 dd offset loc_40D5BA
.text:0040CFC8 ; ---------------------------------------------------------------------------
.text:0040CFC8
.text:0040CFC8 loc_40CFC8:                             ; CODE XREF: sub_40CCC0+105↑j
.text:0040CFC8                                         ; DATA XREF: sub_40CCC0:jpt_40CDC5↑o
.text:0040CFC8                 cmp     [esp+4Ch+var_21], 0 ; jumptable 0040CDC5 case 0
.text:0040CFCD                 lea     eax, [ebp+1]
.text:0040CFD0                 jz      loc_40D080
.text:0040CFD6                 mov     esi, [esp+4Ch+arg_4]
.text:0040CFDA                 cmp     [esp+4Ch+var_34], esi
.text:0040CFDE                 jnb     short loc_40CFEC
.text:0040CFE0                 mov     eax, [esp+4Ch+arg_0]
.text:0040CFE4                 mov     ebx, [esp+4Ch+var_34]
.text:0040CFE8                 mov     byte ptr [ebx+eax], 5Ch ; '\'
.text:0040CFEC
.text:0040CFEC loc_40CFEC:                             ; CODE XREF: sub_40CCC0+31E↑j
.text:0040CFEC                 inc     [esp+4Ch+var_34]
.text:0040CFF0                 mov     edx, [esp+4Ch+arg_4]
.text:0040CFF4                 cmp     [esp+4Ch+var_34], edx
.text:0040CFF8                 jnb     short loc_40D006
.text:0040CFFA                 mov     edi, [esp+4Ch+arg_0]
.text:0040CFFE                 mov     ecx, [esp+4Ch+var_34]
.text:0040D002                 mov     byte ptr [ecx+edi], 30h ; '0'
.text:0040D006
.text:0040D006 loc_40D006:                             ; CODE XREF: sub_40CCC0+338↑j
.text:0040D006                 inc     [esp+4Ch+var_34]
.text:0040D00A                 mov     esi, [esp+4Ch+arg_4]
.text:0040D00E                 cmp     [esp+4Ch+var_34], esi
.text:0040D012                 jnb     short loc_40D020
.text:0040D014                 mov     ebx, [esp+4Ch+arg_0]
.text:0040D018                 mov     eax, [esp+4Ch+var_34]
.text:0040D01C                 mov     byte ptr [eax+ebx], 30h ; '0'
.text:0040D020
.text:0040D020 loc_40D020:                             ; CODE XREF: sub_40CCC0+352↑j
.text:0040D020                 inc     [esp+4Ch+var_34]
.text:0040D024                 mov     bl, 30h ; '0'
.text:0040D026                 lea     esi, [esi+0]
.text:0040D029                 lea     edi, [edi+0]
.text:0040D030
.text:0040D030 def_40D1C2:                             ; CODE XREF: sub_40CCC0+105↑j
.text:0040D030                                         ; sub_40CCC0+463↓j ...
.text:0040D030                 cmp     [esp+4Ch+var_21], 0 ; jumptable 0040CDC5 cases 37,43-58,65-90,93,95,97-122
.text:0040D030                                         ; jumptable 0040D1C2 default case, cases 34-38,42-44,46,48-59
.text:0040D035                 lea     eax, [ebp+1]
.text:0040D038                 jz      short loc_40D080
.text:0040D03A                 mov     cl, bl
.text:0040D03C                 mov     edi, [esp+4Ch+arg_14]
.text:0040D040                 mov     esi, 1
.text:0040D045                 shr     cl, 5
.text:0040D048                 movzx   edx, cl
.text:0040D04B                 mov     ecx, ebx
.text:0040D04D                 and     ecx, 1Fh
.text:0040D050                 shl     esi, cl
.text:0040D052                 test    [edi+edx*4+4], esi
.text:0040D056                 jz      short loc_40D072
.text:0040D058
.text:0040D058 loc_40D058:                             ; CODE XREF: sub_40CCC0+3FC↓j
.text:0040D058                 mov     edx, [esp+4Ch+arg_4]
.text:0040D05C                 cmp     [esp+4Ch+var_34], edx
.text:0040D060                 jnb     short loc_40D06E
.text:0040D062                 mov     edi, [esp+4Ch+arg_0]
.text:0040D066                 mov     esi, [esp+4Ch+var_34]
.text:0040D06A                 mov     byte ptr [esi+edi], 5Ch ; '\'
.text:0040D06E
.text:0040D06E loc_40D06E:                             ; CODE XREF: sub_40CCC0+3A0↑j
.text:0040D06E                 inc     [esp+4Ch+var_34]
.text:0040D072
.text:0040D072 loc_40D072:                             ; CODE XREF: sub_40CCC0+396↑j
.text:0040D072                 lea     eax, [ebp+1]
.text:0040D075                 lea     esi, [esi+0]
.text:0040D079                 lea     edi, [edi+0]
.text:0040D080
.text:0040D080 loc_40D080:                             ; CODE XREF: sub_40CCC0+310↑j
.text:0040D080                                         ; sub_40CCC0+378↑j ...
.text:0040D080                 mov     ebp, [esp+4Ch+arg_4]
.text:0040D084                 cmp     [esp+4Ch+var_34], ebp
.text:0040D088                 jnb     short loc_40D095
.text:0040D08A                 mov     edx, [esp+4Ch+arg_0]
.text:0040D08E                 mov     ecx, [esp+4Ch+var_34]
.text:0040D092                 mov     [ecx+edx], bl
.text:0040D095
.text:0040D095 loc_40D095:                             ; CODE XREF: sub_40CCC0+3C8↑j
.text:0040D095                 inc     [esp+4Ch+var_34]
.text:0040D099                 mov     ebp, eax
.text:0040D09B                 jmp     loc_40CD50
.text:0040D0A0 ; ---------------------------------------------------------------------------
.text:0040D0A0
.text:0040D0A0 loc_40D0A0:                             ; CODE XREF: sub_40CCC0+105↑j
.text:0040D0A0                                         ; DATA XREF: sub_40CCC0:jpt_40CDC5↑o
.text:0040D0A0                 mov     dl, 61h ; 'a'   ; jumptable 0040CDC5 case 7
.text:0040D0A2                 lea     esi, [esi+0]
.text:0040D0A9                 lea     edi, [edi+0]
.text:0040D0B0
.text:0040D0B0 loc_40D0B0:                             ; CODE XREF: sub_40CCC0+400↓j
.text:0040D0B0                                         ; sub_40CCC0+409↓j ...
.text:0040D0B0                 cmp     [esp+4Ch+var_21], 0
.text:0040D0B5                 lea     eax, [ebp+1]
.text:0040D0B8                 jz      short loc_40D080
.text:0040D0BA                 mov     bl, dl
.text:0040D0BC                 jmp     short loc_40D058
.text:0040D0BE ; ---------------------------------------------------------------------------
.text:0040D0BE
.text:0040D0BE loc_40D0BE:                             ; CODE XREF: sub_40CCC0+105↑j
.text:0040D0BE                                         ; DATA XREF: sub_40CCC0:jpt_40CDC5↑o
.text:0040D0BE                 mov     dl, 62h ; 'b'   ; jumptable 0040CDC5 case 8
.text:0040D0C0                 jmp     short loc_40D0B0
.text:0040D0C2 ; ---------------------------------------------------------------------------
.text:0040D0C2
.text:0040D0C2 loc_40D0C2:                             ; CODE XREF: sub_40CCC0+105↑j
.text:0040D0C2                                         ; DATA XREF: sub_40CCC0:jpt_40CDC5↑o
.text:0040D0C2                 mov     dl, 74h ; 't'   ; jumptable 0040CDC5 case 9
.text:0040D0C4
.text:0040D0C4 loc_40D0C4:                             ; CODE XREF: sub_40CCC0+449↓j
.text:0040D0C4                                         ; sub_40CCC0+455↓j ...
.text:0040D0C4                 cmp     [esp+4Ch+arg_10], 1
.text:0040D0C9                 jnz     short loc_40D0B0
.text:0040D0CB
.text:0040D0CB loc_40D0CB:                             ; CODE XREF: sub_40CCC0+45C↓j
.text:0040D0CB                                         ; sub_40CCC0+4C1↓j ...
.text:0040D0CB                 mov     [esp+4Ch+var_3C], 2 ; jumptable 0040D492 cases 91,92,94,96,124
.text:0040D0D3                 mov     eax, [esp+4Ch+arg_14]
.text:0040D0D7                 mov     edx, [esp+4Ch+arg_C]
.text:0040D0DB                 mov     ecx, [esp+4Ch+Str]
.text:0040D0DF                 mov     ebx, [esp+4Ch+arg_4]
.text:0040D0E3                 mov     [esp+4Ch+var_38], eax ; int
.text:0040D0E7                 mov     ebp, [esp+4Ch+arg_0]
.text:0040D0EB                 mov     [esp+4Ch+State], edx ; int
.text:0040D0EF                 mov     [esp+4Ch+SizeInBytes], ecx ; Str
.text:0040D0F3                 mov     [esp+4Ch+Type], ebx ; int
.text:0040D0F7                 mov     [esp+4Ch+C], ebp ; int
.text:0040D0FA                 call    sub_40CCC0
.text:0040D0FF
.text:0040D0FF loc_40D0FF:                             ; CODE XREF: sub_40CCC0+972↓j
.text:0040D0FF                 add     esp, 3Ch
.text:0040D102                 pop     ebx
.text:0040D103                 pop     esi
.text:0040D104                 pop     edi
.text:0040D105                 pop     ebp
.text:0040D106                 retn
.text:0040D107 ; ---------------------------------------------------------------------------
.text:0040D107
.text:0040D107 loc_40D107:                             ; CODE XREF: sub_40CCC0+105↑j
.text:0040D107                                         ; DATA XREF: sub_40CCC0:jpt_40CDC5↑o
.text:0040D107                 mov     dl, 6Eh ; 'n'   ; jumptable 0040CDC5 case 10
.text:0040D109                 jmp     short loc_40D0C4
.text:0040D10B ; ---------------------------------------------------------------------------
.text:0040D10B
.text:0040D10B loc_40D10B:                             ; CODE XREF: sub_40CCC0+105↑j
.text:0040D10B                                         ; DATA XREF: sub_40CCC0:jpt_40CDC5↑o
.text:0040D10B                 mov     dl, 76h ; 'v'   ; jumptable 0040CDC5 case 11
.text:0040D10D                 jmp     short loc_40D0B0
.text:0040D10F ; ---------------------------------------------------------------------------
.text:0040D10F
.text:0040D10F loc_40D10F:                             ; CODE XREF: sub_40CCC0+105↑j
.text:0040D10F                                         ; DATA XREF: sub_40CCC0:jpt_40CDC5↑o
.text:0040D10F                 mov     dl, 66h ; 'f'   ; jumptable 0040CDC5 case 12
.text:0040D111                 jmp     short loc_40D0B0
.text:0040D113 ; ---------------------------------------------------------------------------
.text:0040D113
.text:0040D113 loc_40D113:                             ; CODE XREF: sub_40CCC0+105↑j
.text:0040D113                                         ; DATA XREF: sub_40CCC0:jpt_40CDC5↑o
.text:0040D113                 mov     dl, 72h ; 'r'   ; jumptable 0040CDC5 case 13
.text:0040D115                 jmp     short loc_40D0C4
.text:0040D117 ; ---------------------------------------------------------------------------
.text:0040D117
.text:0040D117 loc_40D117:                             ; CODE XREF: sub_40CCC0+105↑j
.text:0040D117                                         ; DATA XREF: sub_40CCC0:jpt_40CDC5↑o
.text:0040D117                 cmp     [esp+4Ch+arg_10], 1 ; jumptable 0040CDC5 case 39
.text:0040D11C                 jz      short loc_40D0CB ; jumptable 0040D492 cases 91,92,94,96,124
.text:0040D11E                 cmp     [esp+4Ch+arg_10], 2
.text:0040D123                 jnz     def_40D1C2      ; jumptable 0040CDC5 cases 37,43-58,65-90,93,95,97-122
.text:0040D123                                         ; jumptable 0040D1C2 default case, cases 34-38,42-44,46,48-59
.text:0040D129                 mov     edx, [esp+4Ch+arg_4]
.text:0040D12D                 cmp     [esp+4Ch+var_34], edx
.text:0040D131                 jnb     short loc_40D13F
.text:0040D133                 mov     ecx, [esp+4Ch+arg_0]
.text:0040D137                 mov     edi, [esp+4Ch+var_34]
.text:0040D13B                 mov     byte ptr [edi+ecx], 27h ; '''
.text:0040D13F
.text:0040D13F loc_40D13F:                             ; CODE XREF: sub_40CCC0+471↑j
.text:0040D13F                 inc     [esp+4Ch+var_34]
.text:0040D143                 mov     eax, [esp+4Ch+arg_4]
.text:0040D147                 cmp     [esp+4Ch+var_34], eax
.text:0040D14B                 jnb     short loc_40D159
.text:0040D14D                 mov     esi, [esp+4Ch+arg_0]
.text:0040D151                 mov     edx, [esp+4Ch+var_34]
.text:0040D155                 mov     byte ptr [edx+esi], 5Ch ; '\'
.text:0040D159
.text:0040D159 loc_40D159:                             ; CODE XREF: sub_40CCC0+48B↑j
.text:0040D159                 inc     [esp+4Ch+var_34]
.text:0040D15D                 mov     edi, [esp+4Ch+arg_4]
.text:0040D161                 cmp     [esp+4Ch+var_34], edi
.text:0040D165                 jnb     short loc_40D173
.text:0040D167                 mov     ecx, [esp+4Ch+arg_0]
.text:0040D16B                 mov     eax, [esp+4Ch+var_34]
.text:0040D16F                 mov     byte ptr [eax+ecx], 27h ; '''
.text:0040D173
.text:0040D173 loc_40D173:                             ; CODE XREF: sub_40CCC0+4A5↑j
.text:0040D173                                         ; sub_40CCC0+5C4↓j ...
.text:0040D173                 inc     [esp+4Ch+var_34]
.text:0040D177                 jmp     def_40D1C2      ; jumptable 0040CDC5 cases 37,43-58,65-90,93,95,97-122
.text:0040D177                                         ; jumptable 0040D1C2 default case, cases 34-38,42-44,46,48-59
.text:0040D17C ; ---------------------------------------------------------------------------
.text:0040D17C
.text:0040D17C loc_40D17C:                             ; CODE XREF: sub_40CCC0+105↑j
.text:0040D17C                                         ; DATA XREF: sub_40CCC0:jpt_40CDC5↑o
.text:0040D17C                 cmp     [esp+4Ch+arg_10], 1 ; jumptable 0040CDC5 case 63
.text:0040D181                 jz      loc_40D0CB      ; jumptable 0040D492 cases 91,92,94,96,124
.text:0040D187                 cmp     [esp+4Ch+arg_10], 3
.text:0040D18C                 jnz     def_40D1C2      ; jumptable 0040CDC5 cases 37,43-58,65-90,93,95,97-122
.text:0040D18C                                         ; jumptable 0040D1C2 default case, cases 34-38,42-44,46,48-59
.text:0040D192                 lea     edx, [ebp+2]
.text:0040D195                 cmp     edx, [esp+4Ch+arg_C]
.text:0040D199                 jnb     def_40D1C2      ; jumptable 0040CDC5 cases 37,43-58,65-90,93,95,97-122
.text:0040D199                                         ; jumptable 0040D1C2 default case, cases 34-38,42-44,46,48-59
.text:0040D19F                 mov     esi, [esp+4Ch+Str]
.text:0040D1A3                 cmp     byte ptr [ebp+esi+1], 3Fh ; '?'
.text:0040D1A8                 jnz     def_40D1C2      ; jumptable 0040CDC5 cases 37,43-58,65-90,93,95,97-122
.text:0040D1A8                                         ; jumptable 0040D1C2 default case, cases 34-38,42-44,46,48-59
.text:0040D1AE                 movzx   ecx, byte ptr [ebp+esi+2]
.text:0040D1B3                 movsx   eax, cl
.text:0040D1B6                 sub     eax, 21h ; '!'  ; switch 30 cases
.text:0040D1B9                 cmp     eax, 1Dh
.text:0040D1BC                 ja      def_40D1C2      ; jumptable 0040CDC5 cases 37,43-58,65-90,93,95,97-122
.text:0040D1BC                                         ; jumptable 0040D1C2 default case, cases 34-38,42-44,46,48-59
.text:0040D1C2                 jmp     ds:jpt_40D1C2[eax*4] ; switch jump
.text:0040D1C2 ; ---------------------------------------------------------------------------
.text:0040D1C9                 align 4
.text:0040D1CC jpt_40D1C2      dd offset loc_40D244    ; DATA XREF: sub_40CCC0+502↑r
.text:0040D1CC                 dd offset def_40D1C2    ; jump table for switch statement
.text:0040D1CC                 dd offset def_40D1C2
.text:0040D1CC                 dd offset def_40D1C2
.text:0040D1CC                 dd offset def_40D1C2
.text:0040D1CC                 dd offset def_40D1C2
.text:0040D1CC                 dd offset loc_40D244
.text:0040D1CC                 dd offset loc_40D244
.text:0040D1CC                 dd offset loc_40D244
.text:0040D1CC                 dd offset def_40D1C2
.text:0040D1CC                 dd offset def_40D1C2
.text:0040D1CC                 dd offset def_40D1C2
.text:0040D1CC                 dd offset loc_40D244
.text:0040D1CC                 dd offset def_40D1C2
.text:0040D1CC                 dd offset loc_40D244
.text:0040D1CC                 dd offset def_40D1C2
.text:0040D1CC                 dd offset def_40D1C2
.text:0040D1CC                 dd offset def_40D1C2
.text:0040D1CC                 dd offset def_40D1C2
.text:0040D1CC                 dd offset def_40D1C2
.text:0040D1CC                 dd offset def_40D1C2
.text:0040D1CC                 dd offset def_40D1C2
.text:0040D1CC                 dd offset def_40D1C2
.text:0040D1CC                 dd offset def_40D1C2
.text:0040D1CC                 dd offset def_40D1C2
.text:0040D1CC                 dd offset def_40D1C2
.text:0040D1CC                 dd offset def_40D1C2
.text:0040D1CC                 dd offset loc_40D244
.text:0040D1CC                 dd offset loc_40D244
.text:0040D1CC                 dd offset loc_40D244
.text:0040D244 ; ---------------------------------------------------------------------------
.text:0040D244
.text:0040D244 loc_40D244:                             ; CODE XREF: sub_40CCC0+502↑j
.text:0040D244                                         ; DATA XREF: sub_40CCC0:jpt_40D1C2↑o
.text:0040D244                 mov     ebp, edx        ; jumptable 0040D1C2 cases 33,39-41,45,47,60-62
.text:0040D246                 mov     bl, cl
.text:0040D248                 mov     edx, [esp+4Ch+arg_4]
.text:0040D24C                 cmp     [esp+4Ch+var_34], edx
.text:0040D250                 jnb     short loc_40D25E
.text:0040D252                 mov     ecx, [esp+4Ch+arg_0]
.text:0040D256                 mov     edi, [esp+4Ch+var_34]
.text:0040D25A                 mov     byte ptr [edi+ecx], 3Fh ; '?'
.text:0040D25E
.text:0040D25E loc_40D25E:                             ; CODE XREF: sub_40CCC0+590↑j
.text:0040D25E                 inc     [esp+4Ch+var_34]
.text:0040D262                 mov     eax, [esp+4Ch+arg_4]
.text:0040D266                 cmp     [esp+4Ch+var_34], eax
.text:0040D26A                 jnb     short loc_40D278
.text:0040D26C                 mov     edx, [esp+4Ch+arg_0]
.text:0040D270                 mov     esi, [esp+4Ch+var_34]
.text:0040D274                 mov     byte ptr [esi+edx], 5Ch ; '\'
.text:0040D278
.text:0040D278 loc_40D278:                             ; CODE XREF: sub_40CCC0+5AA↑j
.text:0040D278                 inc     [esp+4Ch+var_34]
.text:0040D27C                 mov     edi, [esp+4Ch+arg_4]
.text:0040D280                 cmp     [esp+4Ch+var_34], edi
.text:0040D284                 jnb     loc_40D173
.text:0040D28A                 mov     eax, [esp+4Ch+arg_0]
.text:0040D28E                 mov     ecx, [esp+4Ch+var_34]
.text:0040D292                 mov     byte ptr [ecx+eax], 3Fh ; '?'
.text:0040D296                 jmp     loc_40D173
.text:0040D296 ; ---------------------------------------------------------------------------
.text:0040D29B                 align 10h
.text:0040D2A0
.text:0040D2A0 def_40CDC5:                             ; CODE XREF: sub_40CCC0+FF↑j
.text:0040D2A0                                         ; sub_40CCC0+105↑j
.text:0040D2A0                                         ; DATA XREF: ...
.text:0040D2A0                 cmp     [esp+4Ch+var_22], 0 ; jumptable 0040CDC5 default case, cases 1-6,14-31,64
.text:0040D2A5                 jz      loc_40D3D0
.text:0040D2AB                 mov     [esp+4Ch+var_28], 1
.text:0040D2B3                 mov     esi, ds:__mb_cur_max
.text:0040D2B9                 movzx   edx, bl
.text:0040D2BC                 cmp     dword ptr [esi], 1
.text:0040D2BF                 jz      loc_40D3B4
.text:0040D2C5                 mov     [esp+4Ch+Type], 157h ; Type
.text:0040D2CD                 mov     [esp+4Ch+C], edx ; C
.text:0040D2D0                 call    _isctype
.text:0040D2D5
.text:0040D2D5 loc_40D2D5:                             ; CODE XREF: sub_40CCC0+705↓j
.text:0040D2D5                 test    eax, eax
.text:0040D2D7                 setnz   [esp+4Ch+var_29]
.text:0040D2DC
.text:0040D2DC loc_40D2DC:                             ; CODE XREF: sub_40CCC0+7A5↓j
.text:0040D2DC                 cmp     [esp+4Ch+var_21], 0
.text:0040D2E1                 lea     eax, [ebp+1]
.text:0040D2E4                 jz      loc_40D080
.text:0040D2EA                 cmp     [esp+4Ch+var_29], 0
.text:0040D2EF                 jnz     def_40D1C2      ; jumptable 0040CDC5 cases 37,43-58,65-90,93,95,97-122
.text:0040D2EF                                         ; jumptable 0040D1C2 default case, cases 34-38,42-44,46,48-59
.text:0040D2F5
.text:0040D2F5 loc_40D2F5:                             ; CODE XREF: sub_40CCC0+7AB↓j
.text:0040D2F5                 mov     eax, [esp+4Ch+var_28]
.text:0040D2F9                 lea     edx, [eax+ebp]
.text:0040D2FC                 lea     esi, [esi+0]
.text:0040D300
.text:0040D300 loc_40D300:                             ; CODE XREF: sub_40CCC0+6EF↓j
.text:0040D300                 cmp     [esp+4Ch+var_21], 0
.text:0040D305                 jz      short loc_40D380
.text:0040D307                 cmp     [esp+4Ch+var_29], 0
.text:0040D30C                 jnz     short loc_40D380
.text:0040D30E                 mov     edi, [esp+4Ch+arg_4]
.text:0040D312                 cmp     [esp+4Ch+var_34], edi
.text:0040D316                 jnb     short loc_40D324
.text:0040D318                 mov     esi, [esp+4Ch+arg_0]
.text:0040D31C                 mov     eax, [esp+4Ch+var_34]
.text:0040D320                 mov     byte ptr [eax+esi], 5Ch ; '\'
.text:0040D324
.text:0040D324 loc_40D324:                             ; CODE XREF: sub_40CCC0+656↑j
.text:0040D324                 inc     [esp+4Ch+var_34]
.text:0040D328                 mov     ecx, [esp+4Ch+arg_4]
.text:0040D32C                 cmp     [esp+4Ch+var_34], ecx
.text:0040D330                 jnb     short loc_40D345
.text:0040D332                 mov     cl, bl
.text:0040D334                 mov     esi, [esp+4Ch+arg_0]
.text:0040D338                 mov     edi, [esp+4Ch+var_34]
.text:0040D33C                 shr     cl, 6
.text:0040D33F                 add     cl, 30h ; '0'
.text:0040D342                 mov     [edi+esi], cl
.text:0040D345
.text:0040D345 loc_40D345:                             ; CODE XREF: sub_40CCC0+670↑j
.text:0040D345                 inc     [esp+4Ch+var_34]
.text:0040D349                 mov     edi, [esp+4Ch+arg_4]
.text:0040D34D                 cmp     [esp+4Ch+var_34], edi
.text:0040D351                 jnb     short loc_40D369
.text:0040D353                 mov     cl, bl
.text:0040D355                 mov     esi, [esp+4Ch+arg_0]
.text:0040D359                 shr     cl, 3
.text:0040D35C                 mov     edi, [esp+4Ch+var_34]
.text:0040D360                 and     cl, 7
.text:0040D363                 add     cl, 30h ; '0'
.text:0040D366                 mov     [edi+esi], cl
.text:0040D369
.text:0040D369 loc_40D369:                             ; CODE XREF: sub_40CCC0+691↑j
.text:0040D369                 inc     [esp+4Ch+var_34]
.text:0040D36D                 and     bl, 7
.text:0040D370                 add     bl, 30h ; '0'
.text:0040D373                 lea     esi, [esi+0]
.text:0040D379                 lea     edi, [edi+0]
.text:0040D380
.text:0040D380 loc_40D380:                             ; CODE XREF: sub_40CCC0+645↑j
.text:0040D380                                         ; sub_40CCC0+64C↑j
.text:0040D380                 lea     eax, [ebp+1]
.text:0040D383                 cmp     edx, eax
.text:0040D385                 jbe     loc_40D080
.text:0040D38B                 mov     ebp, [esp+4Ch+arg_4]
.text:0040D38F                 cmp     [esp+4Ch+var_34], ebp
.text:0040D393                 jnb     short loc_40D3A0
.text:0040D395                 mov     ecx, [esp+4Ch+arg_0]
.text:0040D399                 mov     edi, [esp+4Ch+var_34]
.text:0040D39D                 mov     [edi+ecx], bl
.text:0040D3A0
.text:0040D3A0 loc_40D3A0:                             ; CODE XREF: sub_40CCC0+6D3↑j
.text:0040D3A0                 inc     [esp+4Ch+var_34]
.text:0040D3A4                 mov     ebp, eax
.text:0040D3A6                 mov     eax, [esp+4Ch+Str]
.text:0040D3AA                 movzx   ebx, byte ptr [ebp+eax+0]
.text:0040D3AF                 jmp     loc_40D300
.text:0040D3B4 ; ---------------------------------------------------------------------------
.text:0040D3B4
.text:0040D3B4 loc_40D3B4:                             ; CODE XREF: sub_40CCC0+5FF↑j
.text:0040D3B4                 mov     ecx, ds:_pctype
.text:0040D3BA                 mov     edi, [ecx]
.text:0040D3BC                 movzx   eax, word ptr [edi+edx*2]
.text:0040D3C0                 and     eax, 157h
.text:0040D3C5                 jmp     loc_40D2D5
.text:0040D3C5 ; ---------------------------------------------------------------------------
.text:0040D3CA                 align 10h
.text:0040D3D0
.text:0040D3D0 loc_40D3D0:                             ; CODE XREF: sub_40CCC0+5E5↑j
.text:0040D3D0                 cmp     [esp+4Ch+arg_C], 0FFFFFFFFh
.text:0040D3D5                 mov     [esp+4Ch+var_18._Wchar], 0
.text:0040D3DD                 mov     [esp+4Ch+var_28], 0
.text:0040D3E5                 mov     [esp+4Ch+var_29], 1
.text:0040D3EA                 jz      loc_40D57C
.text:0040D3F0
.text:0040D3F0 loc_40D3F0:                             ; CODE XREF: sub_40CCC0+8CC↓j
.text:0040D3F0                 mov     ecx, [esp+4Ch+arg_C]
.text:0040D3F4                 lea     edx, [esp+4Ch+var_18]
.text:0040D3F8                 mov     edi, [esp+4Ch+Str]
.text:0040D3FC                 mov     [esp+4Ch+State], edx ; State
.text:0040D400                 lea     esi, [esp+4Ch+var_18._State]
.text:0040D404                 sub     ecx, ebp
.text:0040D406                 mov     [esp+4Ch+SizeInBytes], ecx ; SizeInBytes
.text:0040D40A                 add     edi, ebp
.text:0040D40C                 mov     [esp+4Ch+var_30], edi
.text:0040D410                 mov     [esp+4Ch+Type], edi ; SrcCh
.text:0040D414                 mov     [esp+4Ch+C], esi ; DstCh
.text:0040D417                 call    mbrtowc
.text:0040D41C                 test    eax, eax
.text:0040D41E                 mov     edi, eax
.text:0040D420                 jz      short loc_40D460
.text:0040D422                 cmp     eax, 0FFFFFFFFh
.text:0040D425                 jz      loc_40D572
.text:0040D42B                 cmp     eax, 0FFFFFFFEh
.text:0040D42E                 jz      loc_40D532
.text:0040D434                 cmp     [esp+4Ch+arg_10], 1
.text:0040D439                 jz      short loc_40D470
.text:0040D43B
.text:0040D43B loc_40D43B:                             ; CODE XREF: sub_40CCC0+7B9↓j
.text:0040D43B                                         ; sub_40CCC0+86D↓j
.text:0040D43B                 movzx   ecx, [esp+4Ch+var_18._State]
.text:0040D440                 mov     [esp+4Ch+Type], 157h ; Type
.text:0040D448                 mov     [esp+4Ch+C], ecx ; C
.text:0040D44B                 call    iswctype
.text:0040D450                 test    eax, eax
.text:0040D452                 jnz     short loc_40D459
.text:0040D454                 mov     [esp+4Ch+var_29], 0
.text:0040D459
.text:0040D459 loc_40D459:                             ; CODE XREF: sub_40CCC0+792↑j
.text:0040D459                 mov     [esp+4Ch+var_28], edi
.text:0040D45D                 lea     esi, [esi+0]
.text:0040D460
.text:0040D460 loc_40D460:                             ; CODE XREF: sub_40CCC0+760↑j
.text:0040D460                                         ; sub_40CCC0+87B↓j ...
.text:0040D460                 cmp     [esp+4Ch+var_28], 1
.text:0040D465                 jbe     loc_40D2DC
.text:0040D46B                 jmp     loc_40D2F5
.text:0040D470 ; ---------------------------------------------------------------------------
.text:0040D470
.text:0040D470 loc_40D470:                             ; CODE XREF: sub_40CCC0+779↑j
.text:0040D470                 cmp     [esp+4Ch+arg_10], eax
.text:0040D474                 mov     edx, 1
.text:0040D479                 jnb     short loc_40D43B
.text:0040D47B
.text:0040D47B loc_40D47B:                             ; CODE XREF: sub_40CCC0+867↓j
.text:0040D47B                 mov     ecx, [esp+4Ch+Str]
.text:0040D47F                 lea     esi, [edx+ebp]
.text:0040D482                 movsx   eax, byte ptr [esi+ecx]
.text:0040D486                 sub     eax, 5Bh ; '['  ; switch 34 cases
.text:0040D489                 cmp     eax, 21h
.text:0040D48C                 ja      def_40D492      ; jumptable 0040D492 default case, cases 93,95,97-123
.text:0040D492                 jmp     ds:jpt_40D492[eax*4] ; switch jump
.text:0040D492 ; ---------------------------------------------------------------------------
.text:0040D499                 align 4
.text:0040D49C jpt_40D492      dd offset loc_40D0CB    ; DATA XREF: sub_40CCC0+7D2↑r
.text:0040D49C                 dd offset loc_40D0CB    ; jump table for switch statement
.text:0040D49C                 dd offset def_40D492
.text:0040D49C                 dd offset loc_40D0CB
.text:0040D49C                 dd offset def_40D492
.text:0040D49C                 dd offset loc_40D0CB
.text:0040D49C                 dd offset def_40D492
.text:0040D49C                 dd offset def_40D492
.text:0040D49C                 dd offset def_40D492
.text:0040D49C                 dd offset def_40D492
.text:0040D49C                 dd offset def_40D492
.text:0040D49C                 dd offset def_40D492
.text:0040D49C                 dd offset def_40D492
.text:0040D49C                 dd offset def_40D492
.text:0040D49C                 dd offset def_40D492
.text:0040D49C                 dd offset def_40D492
.text:0040D49C                 dd offset def_40D492
.text:0040D49C                 dd offset def_40D492
.text:0040D49C                 dd offset def_40D492
.text:0040D49C                 dd offset def_40D492
.text:0040D49C                 dd offset def_40D492
.text:0040D49C                 dd offset def_40D492
.text:0040D49C                 dd offset def_40D492
.text:0040D49C                 dd offset def_40D492
.text:0040D49C                 dd offset def_40D492
.text:0040D49C                 dd offset def_40D492
.text:0040D49C                 dd offset def_40D492
.text:0040D49C                 dd offset def_40D492
.text:0040D49C                 dd offset def_40D492
.text:0040D49C                 dd offset def_40D492
.text:0040D49C                 dd offset def_40D492
.text:0040D49C                 dd offset def_40D492
.text:0040D49C                 dd offset def_40D492
.text:0040D49C                 dd offset loc_40D0CB
.text:0040D524 ; ---------------------------------------------------------------------------
.text:0040D524
.text:0040D524 def_40D492:                             ; CODE XREF: sub_40CCC0+7CC↑j
.text:0040D524                                         ; sub_40CCC0+7D2↑j
.text:0040D524                                         ; DATA XREF: ...
.text:0040D524                 inc     edx             ; jumptable 0040D492 default case, cases 93,95,97-123
.text:0040D525                 cmp     edx, edi
.text:0040D527                 jb      loc_40D47B
.text:0040D52D                 jmp     loc_40D43B
.text:0040D532 ; ---------------------------------------------------------------------------
.text:0040D532
.text:0040D532 loc_40D532:                             ; CODE XREF: sub_40CCC0+76E↑j
.text:0040D532                 cmp     ebp, [esp+4Ch+arg_C]
.text:0040D536                 mov     [esp+4Ch+var_29], 0
.text:0040D53B                 jnb     loc_40D460
.text:0040D541                 mov     eax, [esp+4Ch+var_30]
.text:0040D545                 cmp     byte ptr [eax], 0
.text:0040D548                 jz      loc_40D460
.text:0040D54E
.text:0040D54E loc_40D54E:                             ; CODE XREF: sub_40CCC0+8AB↓j
.text:0040D54E                 inc     [esp+4Ch+var_28]
.text:0040D552                 mov     esi, [esp+4Ch+var_28]
.text:0040D556                 lea     eax, [esi+ebp]
.text:0040D559                 cmp     eax, [esp+4Ch+arg_C]
.text:0040D55D                 jnb     loc_40D460
.text:0040D563                 mov     edi, [esp+4Ch+Str]
.text:0040D567                 cmp     byte ptr [eax+edi], 0
.text:0040D56B                 jnz     short loc_40D54E
.text:0040D56D                 jmp     loc_40D460
.text:0040D572 ; ---------------------------------------------------------------------------
.text:0040D572
.text:0040D572 loc_40D572:                             ; CODE XREF: sub_40CCC0+765↑j
.text:0040D572                 mov     [esp+4Ch+var_29], 0
.text:0040D577                 jmp     loc_40D460
.text:0040D57C ; ---------------------------------------------------------------------------
.text:0040D57C
.text:0040D57C loc_40D57C:                             ; CODE XREF: sub_40CCC0+72A↑j
.text:0040D57C                 mov     edx, [esp+4Ch+Str]
.text:0040D580                 mov     [esp+4Ch+C], edx ; Str
.text:0040D583                 call    strlen
.text:0040D588                 mov     [esp+4Ch+arg_C], eax
.text:0040D58C                 jmp     loc_40D3F0
.text:0040D591 ; ---------------------------------------------------------------------------
.text:0040D591
.text:0040D591 loc_40D591:                             ; CODE XREF: sub_40CCC0+105↑j
.text:0040D591                                         ; DATA XREF: sub_40CCC0:jpt_40CDC5↑o
.text:0040D591                 mov     dl, bl          ; jumptable 0040CDC5 case 92
.text:0040D593                 jmp     loc_40D0C4
.text:0040D598 ; ---------------------------------------------------------------------------
.text:0040D598
.text:0040D598 loc_40D598:                             ; CODE XREF: sub_40CCC0+105↑j
.text:0040D598                                         ; sub_40CCC0+902↓j
.text:0040D598                                         ; DATA XREF: ...
.text:0040D598                 cmp     [esp+4Ch+arg_10], 1 ; jumptable 0040CDC5 cases 32-34,36,38,40-42,59-62,91,94,96,124
.text:0040D59D                 jnz     def_40D1C2      ; jumptable 0040CDC5 cases 37,43-58,65-90,93,95,97-122
.text:0040D59D                                         ; jumptable 0040D1C2 default case, cases 34-38,42-44,46,48-59
.text:0040D5A3                 jmp     loc_40D0CB      ; jumptable 0040D492 cases 91,92,94,96,124
.text:0040D5A8 ; ---------------------------------------------------------------------------
.text:0040D5A8
.text:0040D5A8 loc_40D5A8:                             ; CODE XREF: sub_40CCC0+105↑j
.text:0040D5A8                                         ; DATA XREF: sub_40CCC0:jpt_40CDC5↑o
.text:0040D5A8                 cmp     [esp+4Ch+arg_C], 0FFFFFFFFh ; jumptable 0040CDC5 cases 123,125
.text:0040D5AD                 jz      short loc_40D5C4
.text:0040D5AF                 cmp     [esp+4Ch+arg_C], 1
.text:0040D5B4
.text:0040D5B4 loc_40D5B4:                             ; CODE XREF: sub_40CCC0+90C↓j
.text:0040D5B4                 jnz     def_40D1C2      ; jumptable 0040CDC5 cases 37,43-58,65-90,93,95,97-122
.text:0040D5B4                                         ; jumptable 0040D1C2 default case, cases 34-38,42-44,46,48-59
.text:0040D5BA
.text:0040D5BA loc_40D5BA:                             ; CODE XREF: sub_40CCC0+105↑j
.text:0040D5BA                                         ; DATA XREF: sub_40CCC0:jpt_40CDC5↑o
.text:0040D5BA                 test    ebp, ebp        ; jumptable 0040CDC5 cases 35,126
.text:0040D5BC                 jnz     def_40D1C2      ; jumptable 0040CDC5 cases 37,43-58,65-90,93,95,97-122
.text:0040D5BC                                         ; jumptable 0040D1C2 default case, cases 34-38,42-44,46,48-59
.text:0040D5C2                 jmp     short loc_40D598 ; jumptable 0040CDC5 cases 32-34,36,38,40-42,59-62,91,94,96,124
.text:0040D5C4 ; ---------------------------------------------------------------------------
.text:0040D5C4
.text:0040D5C4 loc_40D5C4:                             ; CODE XREF: sub_40CCC0+8ED↑j
.text:0040D5C4                 mov     esi, [esp+4Ch+Str]
.text:0040D5C8                 cmp     byte ptr [esi+1], 0
.text:0040D5CC                 jmp     short loc_40D5B4
.text:0040D5CE ; ---------------------------------------------------------------------------
.text:0040D5CE
.text:0040D5CE loc_40D5CE:                             ; CODE XREF: sub_40CCC0:loc_40CD5F↑j
.text:0040D5CE                 test    ebp, ebp
.text:0040D5D0                 jnz     short loc_40D5DD
.text:0040D5D2                 cmp     [esp+4Ch+arg_10], 1
.text:0040D5D7                 jz      loc_40D0CB      ; jumptable 0040D492 cases 91,92,94,96,124
.text:0040D5DD
.text:0040D5DD loc_40D5DD:                             ; CODE XREF: sub_40CCC0+910↑j
.text:0040D5DD                 mov     esi, [esp+4Ch+var_1C]
.text:0040D5E1                 test    esi, esi
.text:0040D5E3                 jz      short loc_40D618
.text:0040D5E5                 mov     edi, [esp+4Ch+var_1C]
.text:0040D5E9                 movzx   eax, byte ptr [edi]
.text:0040D5EC                 test    al, al
.text:0040D5EE                 jz      short loc_40D618
.text:0040D5F0
.text:0040D5F0 loc_40D5F0:                             ; CODE XREF: sub_40CCC0+956↓j
.text:0040D5F0                 mov     ebp, [esp+4Ch+arg_4]
.text:0040D5F4                 cmp     [esp+4Ch+var_34], ebp
.text:0040D5F8                 jnb     short loc_40D605
.text:0040D5FA                 mov     ecx, [esp+4Ch+arg_0]
.text:0040D5FE                 mov     ebx, [esp+4Ch+var_34]
.text:0040D602                 mov     [ebx+ecx], al
.text:0040D605
.text:0040D605 loc_40D605:                             ; CODE XREF: sub_40CCC0+938↑j
.text:0040D605                 inc     [esp+4Ch+var_1C]
.text:0040D609                 inc     [esp+4Ch+var_34]
.text:0040D60D                 mov     edx, [esp+4Ch+var_1C]
.text:0040D611                 movzx   eax, byte ptr [edx]
.text:0040D614                 test    al, al
.text:0040D616                 jnz     short loc_40D5F0
.text:0040D618
.text:0040D618 loc_40D618:                             ; CODE XREF: sub_40CCC0+923↑j
.text:0040D618                                         ; sub_40CCC0+92E↑j
.text:0040D618                 mov     eax, [esp+4Ch+arg_4]
.text:0040D61C                 cmp     [esp+4Ch+var_34], eax
.text:0040D620                 jnb     short loc_40D62E
.text:0040D622                 mov     edi, [esp+4Ch+arg_0]
.text:0040D626                 mov     esi, [esp+4Ch+var_34]
.text:0040D62A                 mov     byte ptr [esi+edi], 0
.text:0040D62E
.text:0040D62E loc_40D62E:                             ; CODE XREF: sub_40CCC0+960↑j
.text:0040D62E                 mov     eax, [esp+4Ch+var_34]
.text:0040D632                 jmp     loc_40D0FF
.text:0040D637 ; ---------------------------------------------------------------------------
.text:0040D637
.text:0040D637 loc_40D637:                             ; CODE XREF: sub_40CCC0+95↑j
.text:0040D637                 mov     ebx, [esp+4Ch+Str]
.text:0040D63B                 cmp     byte ptr [ebp+ebx+0], 0
.text:0040D640                 jmp     loc_40CD5F
.text:0040D645 ; ---------------------------------------------------------------------------
.text:0040D645
.text:0040D645 loc_40D645:                             ; CODE XREF: sub_40CCC0+3D↑j
.text:0040D645                                         ; DATA XREF: sub_40CCC0:jpt_40CCFD↑o
.text:0040D645                 mov     edx, [esp+4Ch+arg_4] ; jumptable 0040CCFD case 2
.text:0040D649                 cmp     [esp+4Ch+var_34], edx
.text:0040D64D                 jnb     short loc_40D656
.text:0040D64F                 mov     ecx, [esp+4Ch+arg_0]
.text:0040D653                 mov     byte ptr [ecx], 27h ; '''
.text:0040D656
.text:0040D656 loc_40D656:                             ; CODE XREF: sub_40CCC0+98D↑j
.text:0040D656                 mov     [esp+4Ch+var_34], 1
.text:0040D65E                 mov     [esp+4Ch+var_1C], 40CCAEh
.text:0040D666                 jmp     loc_40CD46
.text:0040D66B ; ---------------------------------------------------------------------------
.text:0040D66B
.text:0040D66B loc_40D66B:                             ; CODE XREF: sub_40CCC0+3D↑j
.text:0040D66B                                         ; DATA XREF: sub_40CCC0:jpt_40CCFD↑o
.text:0040D66B                 mov     [esp+4Ch+var_21], 1 ; jumptable 0040CCFD case 4
.text:0040D670                 jmp     def_40CCFD      ; jumptable 0040CCFD default case, cases 0,1
.text:0040D675 ; ---------------------------------------------------------------------------
.text:0040D675
.text:0040D675 loc_40D675:                             ; CODE XREF: sub_40CCC0+3D↑j
.text:0040D675                                         ; DATA XREF: sub_40CCC0:jpt_40CCFD↑o
.text:0040D675                 mov     [esp+4Ch+C], 40CCB0h ; jumptable 0040CCFD cases 5,6
.text:0040D67C                 call    ds:libintl_gettext
.text:0040D682                 cmp     eax, 40CCB0h
.text:0040D687                 mov     edi, eax
.text:0040D689                 jz      short loc_40D700
.text:0040D68B
.text:0040D68B loc_40D68B:                             ; CODE XREF: sub_40CCC0+A45↓j
.text:0040D68B                                         ; sub_40CCC0+A4C↓j
.text:0040D68B                 mov     [esp+4Ch+C], 40CCAEh
.text:0040D692                 call    ds:libintl_gettext
.text:0040D698                 cmp     eax, 40CCAEh
.text:0040D69D                 mov     edx, eax
.text:0040D69F                 jz      short loc_40D6F2
.text:0040D6A1
.text:0040D6A1 loc_40D6A1:                             ; CODE XREF: sub_40CCC0+A37↓j
.text:0040D6A1                                         ; sub_40CCC0+A3E↓j
.text:0040D6A1                 mov     [esp+4Ch+var_1C], edi
.text:0040D6A5                 cmp     byte ptr [edi], 0
.text:0040D6A8                 jz      short loc_40D6D8
.text:0040D6AA
.text:0040D6AA loc_40D6AA:                             ; CODE XREF: sub_40CCC0+A16↓j
.text:0040D6AA                 mov     ecx, [esp+4Ch+arg_4]
.text:0040D6AE                 cmp     [esp+4Ch+var_34], ecx
.text:0040D6B2                 jnb     short loc_40D6C7
.text:0040D6B4                 mov     ebp, [esp+4Ch+var_1C]
.text:0040D6B8                 mov     edi, [esp+4Ch+arg_0]
.text:0040D6BC                 mov     esi, [esp+4Ch+var_34]
.text:0040D6C0                 movzx   ebx, byte ptr [ebp+0]
.text:0040D6C4                 mov     [esi+edi], bl
.text:0040D6C7
.text:0040D6C7 loc_40D6C7:                             ; CODE XREF: sub_40CCC0+9F2↑j
.text:0040D6C7                 inc     [esp+4Ch+var_1C]
.text:0040D6CB                 inc     [esp+4Ch+var_34]
.text:0040D6CF                 mov     eax, [esp+4Ch+var_1C]
.text:0040D6D3                 cmp     byte ptr [eax], 0
.text:0040D6D6                 jnz     short loc_40D6AA
.text:0040D6D8
.text:0040D6D8 loc_40D6D8:                             ; CODE XREF: sub_40CCC0+9E8↑j
.text:0040D6D8                 mov     [esp+4Ch+var_21], 1
.text:0040D6DD                 mov     [esp+4Ch+var_1C], edx
.text:0040D6E1                 mov     [esp+4Ch+C], edx ; Str
.text:0040D6E4                 call    strlen
.text:0040D6E9                 mov     [esp+4Ch+var_20], eax
.text:0040D6ED                 jmp     def_40CCFD      ; jumptable 0040CCFD default case, cases 0,1
.text:0040D6F2 ; ---------------------------------------------------------------------------
.text:0040D6F2
.text:0040D6F2 loc_40D6F2:                             ; CODE XREF: sub_40CCC0+9DF↑j
.text:0040D6F2                 cmp     [esp+4Ch+arg_10], 6
.text:0040D6F7                 jnz     short loc_40D6A1
.text:0040D6F9                 mov     edx, offset asc_40CCAC ; "\"'`"
.text:0040D6FE                 jmp     short loc_40D6A1
.text:0040D700 ; ---------------------------------------------------------------------------
.text:0040D700
.text:0040D700 loc_40D700:                             ; CODE XREF: sub_40CCC0+9C9↑j
.text:0040D700                 cmp     [esp+4Ch+arg_10], 6
.text:0040D705                 jnz     short loc_40D68B
.text:0040D707                 mov     edi, offset asc_40CCAC ; "\"'`"
.text:0040D70C                 jmp     loc_40D68B
.text:0040D70C sub_40CCC0      endp
.text:0040D70C
.text:0040D711 ; ---------------------------------------------------------------------------
.text:0040D711                 jmp     short loc_40D720
.text:0040D711 ; ---------------------------------------------------------------------------
.text:0040D713                 align 10h
.text:0040D720
.text:0040D720 loc_40D720:                             ; CODE XREF: .text:0040D711↑j
.text:0040D720                 sub     esp, 0Ch
.text:0040D723                 mov     [esp+4], ebx
.text:0040D727                 mov     [esp+8], esi
.text:0040D72B                 call    _errno
.text:0040D730                 mov     esi, [eax]
.text:0040D732                 mov     dword ptr [esp], 24h ; '$'
.text:0040D739                 call    sub_40C9A0
.text:0040D73E                 mov     edx, [esp+10h]
.text:0040D742                 mov     ebx, eax
.text:0040D744                 test    edx, edx
.text:0040D746                 jz      short loc_40D791
.text:0040D748
.text:0040D748 loc_40D748:                             ; CODE XREF: .text:0040D796↓j
.text:0040D748                 mov     ecx, [edx]
.text:0040D74A                 mov     [ebx], ecx
.text:0040D74C                 mov     ecx, [edx+4]
.text:0040D74F                 mov     [ebx+4], ecx
.text:0040D752                 mov     ecx, [edx+8]
.text:0040D755                 mov     [ebx+8], ecx
.text:0040D758                 mov     ecx, [edx+0Ch]
.text:0040D75B                 mov     [ebx+0Ch], ecx
.text:0040D75E                 mov     ecx, [edx+10h]
.text:0040D761                 mov     [ebx+10h], ecx
.text:0040D764                 mov     ecx, [edx+14h]
.text:0040D767                 mov     [ebx+14h], ecx
.text:0040D76A                 mov     ecx, [edx+18h]
.text:0040D76D                 mov     [ebx+18h], ecx
.text:0040D770                 mov     ecx, [edx+1Ch]
.text:0040D773                 mov     [ebx+1Ch], ecx
.text:0040D776                 mov     ecx, [edx+20h]
.text:0040D779                 mov     [ebx+20h], ecx
.text:0040D77C                 call    _errno
.text:0040D781                 mov     [eax], esi
.text:0040D783                 mov     esi, [esp+8]
.text:0040D787                 mov     eax, ebx
.text:0040D789                 mov     ebx, [esp+4]
.text:0040D78D                 add     esp, 0Ch
.text:0040D790                 retn
.text:0040D791 ; ---------------------------------------------------------------------------
.text:0040D791
.text:0040D791 loc_40D791:                             ; CODE XREF: .text:0040D746↑j
.text:0040D791                 mov     edx, offset dword_411390
.text:0040D796                 jmp     short loc_40D748
.text:0040D796 ; ---------------------------------------------------------------------------
.text:0040D798                 align 10h
.text:0040D7A0                 mov     eax, [esp+4]
.text:0040D7A4                 test    eax, eax
.text:0040D7A6                 jz      short loc_40D7B0
.text:0040D7A8
.text:0040D7A8 loc_40D7A8:                             ; CODE XREF: .text:0040D7B5↓j
.text:0040D7A8                 mov     eax, [eax]
.text:0040D7AA                 retn
.text:0040D7AA ; ---------------------------------------------------------------------------
.text:0040D7AB                 align 10h
.text:0040D7B0
.text:0040D7B0 loc_40D7B0:                             ; CODE XREF: .text:0040D7A6↑j
.text:0040D7B0                 mov     eax, offset dword_411390
.text:0040D7B5                 jmp     short loc_40D7A8
.text:0040D7B5 ; ---------------------------------------------------------------------------
.text:0040D7B7                 align 10h
.text:0040D7C0                 mov     edx, [esp+4]
.text:0040D7C4                 test    edx, edx
.text:0040D7C6                 jz      short loc_40D7D0
.text:0040D7C8
.text:0040D7C8 loc_40D7C8:                             ; CODE XREF: .text:0040D7D5↓j
.text:0040D7C8                 mov     ecx, [esp+8]
.text:0040D7CC                 mov     [edx], ecx
.text:0040D7CE                 retn
.text:0040D7CE ; ---------------------------------------------------------------------------
.text:0040D7CF                 align 10h
.text:0040D7D0
.text:0040D7D0 loc_40D7D0:                             ; CODE XREF: .text:0040D7C6↑j
.text:0040D7D0                 mov     edx, offset dword_411390
.text:0040D7D5                 jmp     short loc_40D7C8
.text:0040D7D5 ; ---------------------------------------------------------------------------
.text:0040D7D7                 align 10h
.text:0040D7E0                 sub     esp, 8
.text:0040D7E3                 mov     eax, [esp+0Ch]
.text:0040D7E7                 movzx   ecx, byte ptr [esp+10h]
.text:0040D7EC                 mov     [esp], ebx
.text:0040D7EF                 mov     ebx, [esp+14h]
.text:0040D7F3                 mov     [esp+4], esi
.text:0040D7F7                 mov     dl, cl
.text:0040D7F9                 shr     dl, 5
.text:0040D7FC                 movzx   edx, dl
.text:0040D7FF                 shl     edx, 2
.text:0040D802                 test    eax, eax
.text:0040D804                 lea     esi, [edx+eax+4]
.text:0040D808                 jz      short loc_40D830
.text:0040D80A
.text:0040D80A loc_40D80A:                             ; CODE XREF: .text:0040D836↓j
.text:0040D80A                 mov     edx, [esi]
.text:0040D80C                 and     ecx, 1Fh
.text:0040D80F                 and     ebx, 1
.text:0040D812                 mov     eax, edx
.text:0040D814                 shr     eax, cl
.text:0040D816                 and     eax, 1
.text:0040D819                 xor     ebx, eax
.text:0040D81B                 shl     ebx, cl
.text:0040D81D                 xor     edx, ebx
.text:0040D81F                 mov     [esi], edx
.text:0040D821                 mov     ebx, [esp]
.text:0040D824                 mov     esi, [esp+4]
.text:0040D828                 add     esp, 8
.text:0040D82B                 retn
.text:0040D82B ; ---------------------------------------------------------------------------
.text:0040D82C                 align 10h
.text:0040D830
.text:0040D830 loc_40D830:                             ; CODE XREF: .text:0040D808↑j
.text:0040D830                 lea     esi, dword_411394[edx]
.text:0040D836                 jmp     short loc_40D80A
.text:0040D836 ; ---------------------------------------------------------------------------
.text:0040D838                 align 10h
.text:0040D840                 sub     esp, 2Ch
.text:0040D843                 mov     [esp+24h], ebx
.text:0040D847                 mov     ebx, [esp+40h]
.text:0040D84B                 mov     [esp+28h], esi
.text:0040D84F                 test    ebx, ebx
.text:0040D851                 jz      short loc_40D8A0
.text:0040D853
.text:0040D853 loc_40D853:                             ; CODE XREF: .text:0040D8A5↓j
.text:0040D853                 call    _errno
.text:0040D858                 mov     esi, [eax]
.text:0040D85A                 mov     [esp+14h], ebx
.text:0040D85E                 mov     edx, [ebx]
.text:0040D860                 mov     ecx, [esp+38h]
.text:0040D864                 mov     ebx, [esp+3Ch]
.text:0040D868                 mov     [esp+10h], edx
.text:0040D86C                 mov     edx, [esp+34h]
.text:0040D870                 mov     [esp+0Ch], ebx
.text:0040D874                 mov     [esp+8], ecx
.text:0040D878                 mov     [esp+4], edx
.text:0040D87C                 mov     edx, [esp+30h]
.text:0040D880                 mov     [esp], edx
.text:0040D883                 call    sub_40CCC0
.text:0040D888                 mov     ebx, eax
.text:0040D88A                 call    _errno
.text:0040D88F                 mov     [eax], esi
.text:0040D891                 mov     esi, [esp+28h]
.text:0040D895                 mov     eax, ebx
.text:0040D897                 mov     ebx, [esp+24h]
.text:0040D89B                 add     esp, 2Ch
.text:0040D89E                 retn
.text:0040D89E ; ---------------------------------------------------------------------------
.text:0040D89F                 align 10h
.text:0040D8A0
.text:0040D8A0 loc_40D8A0:                             ; CODE XREF: .text:0040D851↑j
.text:0040D8A0                 mov     ebx, offset dword_411390
.text:0040D8A5                 jmp     short loc_40D853
.text:0040D8A5 ; ---------------------------------------------------------------------------
.text:0040D8A7                 align 10h
.text:0040D8B0                 push    ebp
.text:0040D8B1                 push    edi
.text:0040D8B2                 push    esi
.text:0040D8B3                 push    ebx
.text:0040D8B4                 sub     esp, 2Ch
.text:0040D8B7                 mov     ebp, [esp+48h]
.text:0040D8BB                 call    _errno
.text:0040D8C0                 mov     edx, [eax]
.text:0040D8C2                 test    ebp, ebp
.text:0040D8C4                 mov     ebx, ebp
.text:0040D8C6                 mov     [esp+28h], edx
.text:0040D8CA                 jz      loc_40D980
.text:0040D8D0
.text:0040D8D0 loc_40D8D0:                             ; CODE XREF: .text:0040D985↓j
.text:0040D8D0                 call    _errno
.text:0040D8D5                 mov     edi, [eax]
.text:0040D8D7                 mov     esi, ebp
.text:0040D8D9                 mov     [esp+14h], ebx
.text:0040D8DD                 mov     ecx, [ebx]
.text:0040D8DF                 mov     dword ptr [esp], 0
.text:0040D8E6                 mov     edx, [esp+44h]
.text:0040D8EA                 mov     dword ptr [esp+4], 0
.text:0040D8F2                 mov     eax, [esp+40h]
.text:0040D8F6                 mov     [esp+10h], ecx
.text:0040D8FA                 mov     [esp+0Ch], edx
.text:0040D8FE                 mov     [esp+8], eax
.text:0040D902                 call    sub_40CCC0
.text:0040D907                 mov     ebx, eax
.text:0040D909                 call    _errno
.text:0040D90E                 mov     [eax], edi
.text:0040D910                 lea     edi, [ebx+1]
.text:0040D913                 mov     [esp], edi
.text:0040D916                 call    sub_40C9A0
.text:0040D91B                 mov     [esp+24h], eax
.text:0040D91F                 test    ebp, ebp
.text:0040D921                 jz      short loc_40D972
.text:0040D923
.text:0040D923 loc_40D923:                             ; CODE XREF: .text:0040D977↓j
.text:0040D923                 call    _errno
.text:0040D928                 mov     ebp, [eax]
.text:0040D92A                 mov     [esp+14h], esi
.text:0040D92E                 mov     ecx, [esi]
.text:0040D930                 mov     [esp+4], edi
.text:0040D934                 mov     edx, [esp+44h]
.text:0040D938                 mov     esi, [esp+24h]
.text:0040D93C                 mov     [esp+10h], ecx
.text:0040D940                 mov     eax, [esp+40h]
.text:0040D944                 mov     [esp+0Ch], edx
.text:0040D948                 mov     [esp], esi
.text:0040D94B                 mov     [esp+8], eax
.text:0040D94F                 call    sub_40CCC0
.text:0040D954                 call    _errno
.text:0040D959                 mov     [eax], ebp
.text:0040D95B                 call    _errno
.text:0040D960                 mov     ebx, [esp+28h]
.text:0040D964                 mov     [eax], ebx
.text:0040D966                 mov     eax, [esp+24h]
.text:0040D96A                 add     esp, 2Ch
.text:0040D96D                 pop     ebx
.text:0040D96E                 pop     esi
.text:0040D96F                 pop     edi
.text:0040D970                 pop     ebp
.text:0040D971                 retn
.text:0040D972 ; ---------------------------------------------------------------------------
.text:0040D972
.text:0040D972 loc_40D972:                             ; CODE XREF: .text:0040D921↑j
.text:0040D972                 mov     esi, offset dword_411390
.text:0040D977                 jmp     short loc_40D923
.text:0040D977 ; ---------------------------------------------------------------------------
.text:0040D979                 align 10h
.text:0040D980
.text:0040D980 loc_40D980:                             ; CODE XREF: .text:0040D8CA↑j
.text:0040D980                 mov     ebx, offset dword_411390
.text:0040D985                 jmp     loc_40D8D0
.text:0040D985 ; ---------------------------------------------------------------------------
.text:0040D98A                 align 10h
.text:0040D990                 sub     esp, 1Ch
.text:0040D993                 mov     edx, [esp+24h]
.text:0040D997                 mov     dword ptr [esp+0Ch], offset dword_411390
.text:0040D99F                 mov     dword ptr [esp+8], 0FFFFFFFFh
.text:0040D9A7                 mov     [esp+4], edx
.text:0040D9AB                 mov     edx, [esp+20h]
.text:0040D9AF                 mov     [esp], edx
.text:0040D9B2                 call    sub_40DE00
.text:0040D9B7                 add     esp, 1Ch
.text:0040D9BA                 retn
.text:0040D9BA ; ---------------------------------------------------------------------------
.text:0040D9BB                 align 10h
.text:0040D9C0                 sub     esp, 1Ch
.text:0040D9C3                 mov     edx, [esp+20h]
.text:0040D9C7                 mov     dword ptr [esp+0Ch], offset dword_411390
.text:0040D9CF                 mov     dword ptr [esp+8], 0FFFFFFFFh
.text:0040D9D7                 mov     [esp+4], edx
.text:0040D9DB                 mov     dword ptr [esp], 0
.text:0040D9E2                 call    sub_40DE00
.text:0040D9E7                 add     esp, 1Ch
.text:0040D9EA                 retn
.text:0040D9EA ; ---------------------------------------------------------------------------
.text:0040D9EB                 align 10h
.text:0040D9F0
.text:0040D9F0 ; =============== S U B R O U T I N E =======================================
.text:0040D9F0
.text:0040D9F0
.text:0040D9F0 ; int __cdecl sub_40D9F0(int, int, char *)
.text:0040D9F0 sub_40D9F0      proc near               ; CODE XREF: .text:0040C6CA↑p
.text:0040D9F0                                         ; sub_40C6E0+1A↑p
.text:0040D9F0
.text:0040D9F0 var_BC          = dword ptr -0BCh
.text:0040D9F0 var_B8          = dword ptr -0B8h
.text:0040D9F0 var_B4          = dword ptr -0B4h
.text:0040D9F0 var_B0          = dword ptr -0B0h
.text:0040D9F0 var_AC          = dword ptr -0ACh
.text:0040D9F0 var_A8          = dword ptr -0A8h
.text:0040D9F0 var_A4          = dword ptr -0A4h
.text:0040D9F0 var_A0          = dword ptr -0A0h
.text:0040D9F0 var_9C          = dword ptr -9Ch
.text:0040D9F0 var_98          = dword ptr -98h
.text:0040D9F0 var_94          = dword ptr -94h
.text:0040D9F0 var_90          = dword ptr -90h
.text:0040D9F0 var_8C          = dword ptr -8Ch
.text:0040D9F0 var_7C          = dword ptr -7Ch
.text:0040D9F0 var_78          = dword ptr -78h
.text:0040D9F0 var_74          = dword ptr -74h
.text:0040D9F0 var_70          = dword ptr -70h
.text:0040D9F0 var_6C          = dword ptr -6Ch
.text:0040D9F0 var_68          = dword ptr -68h
.text:0040D9F0 var_64          = dword ptr -64h
.text:0040D9F0 var_60          = dword ptr -60h
.text:0040D9F0 var_5C          = dword ptr -5Ch
.text:0040D9F0 var_4C          = dword ptr -4Ch
.text:0040D9F0 var_48          = dword ptr -48h
.text:0040D9F0 var_44          = dword ptr -44h
.text:0040D9F0 var_40          = dword ptr -40h
.text:0040D9F0 var_3C          = dword ptr -3Ch
.text:0040D9F0 var_38          = dword ptr -38h
.text:0040D9F0 var_34          = dword ptr -34h
.text:0040D9F0 var_30          = dword ptr -30h
.text:0040D9F0 var_2C          = dword ptr -2Ch
.text:0040D9F0 arg_0           = dword ptr  4
.text:0040D9F0 arg_4           = dword ptr  8
.text:0040D9F0 arg_8           = dword ptr  0Ch
.text:0040D9F0
.text:0040D9F0                 push    ebp
.text:0040D9F1                 xor     eax, eax
.text:0040D9F3                 mov     ecx, 8
.text:0040D9F8                 push    edi
.text:0040D9F9                 push    esi
.text:0040D9FA                 push    ebx
.text:0040D9FB                 sub     esp, 0ACh
.text:0040DA01                 mov     ebp, [esp+0BCh+arg_4]
.text:0040DA08                 cld
.text:0040DA09                 lea     edi, [esp+0BCh+var_A8]
.text:0040DA0D                 mov     [esp+0BCh+var_AC], ebp
.text:0040DA11                 rep stosd
.text:0040DA13                 mov     eax, [esp+0BCh+var_8C]
.text:0040DA17                 mov     edi, [esp+0BCh+var_AC]
.text:0040DA1B                 mov     esi, [esp+0BCh+var_A8]
.text:0040DA1F                 mov     [esp+0BCh+var_5C], eax
.text:0040DA23                 mov     ebp, [esp+0BCh+var_A4]
.text:0040DA27                 mov     eax, [esp+0BCh+var_AC]
.text:0040DA2B                 mov     [esp+0BCh+var_7C], edi
.text:0040DA2F                 mov     ecx, [esp+0BCh+var_94]
.text:0040DA33                 mov     edi, [esp+0BCh+var_A0]
.text:0040DA37                 mov     [esp+0BCh+var_78], esi
.text:0040DA3B                 mov     edx, [esp+0BCh+var_90]
.text:0040DA3F                 mov     esi, [esp+0BCh+var_9C]
.text:0040DA43                 mov     [esp+0BCh+var_4C], eax
.text:0040DA47                 mov     ebx, [esp+0BCh+var_98]
.text:0040DA4B                 mov     eax, [esp+0BCh+var_A8]
.text:0040DA4F                 mov     [esp+0BCh+var_74], ebp
.text:0040DA53                 mov     [esp+0BCh+var_70], edi
.text:0040DA57                 mov     [esp+0BCh+var_6C], esi
.text:0040DA5B                 mov     [esp+0BCh+var_68], ebx
.text:0040DA5F                 mov     [esp+0BCh+var_64], ecx
.text:0040DA63                 mov     [esp+0BCh+var_60], edx
.text:0040DA67                 mov     [esp+0BCh+var_48], eax
.text:0040DA6B                 mov     [esp+0BCh+var_44], ebp
.text:0040DA6F                 mov     [esp+0BCh+var_40], edi
.text:0040DA73                 mov     [esp+0BCh+var_3C], esi
.text:0040DA7A                 mov     [esp+0BCh+var_38], ebx
.text:0040DA81                 mov     ebx, [esp+0BCh+var_8C]
.text:0040DA85                 mov     [esp+0BCh+var_30], edx
.text:0040DA8C                 mov     edx, [esp+0BCh+arg_8]
.text:0040DA93                 mov     [esp+0BCh+var_34], ecx
.text:0040DA9A                 lea     ecx, [esp+0BCh+var_4C]
.text:0040DA9E                 mov     [esp+0BCh+var_B8], edx ; char *
.text:0040DAA2                 mov     edx, [esp+0BCh+arg_0]
.text:0040DAA9                 mov     [esp+0BCh+var_2C], ebx
.text:0040DAB0                 mov     [esp+0BCh+var_B0], ecx ; int
.text:0040DAB4                 mov     [esp+0BCh+var_B4], 0FFFFFFFFh ; int
.text:0040DABC                 mov     [esp+0BCh+var_BC], edx ; int
.text:0040DABF                 call    sub_40DE00
.text:0040DAC4                 add     esp, 0ACh
.text:0040DACA                 pop     ebx
.text:0040DACB                 pop     esi
.text:0040DACC                 pop     edi
.text:0040DACD                 pop     ebp
.text:0040DACE                 retn
.text:0040DACE sub_40D9F0      endp
.text:0040DACE
.text:0040DACE ; ---------------------------------------------------------------------------
.text:0040DACF                 align 10h
.text:0040DAD0                 push    ebp
.text:0040DAD1                 xor     eax, eax
.text:0040DAD3                 mov     ecx, 8
.text:0040DAD8                 push    edi
.text:0040DAD9                 push    esi
.text:0040DADA                 push    ebx
.text:0040DADB                 sub     esp, 0ACh
.text:0040DAE1                 mov     edx, [esp+0C4h]
.text:0040DAE8                 cld
.text:0040DAE9                 lea     edi, [esp+14h]
.text:0040DAED                 mov     [esp+10h], edx
.text:0040DAF1                 rep stosd
.text:0040DAF3                 mov     eax, [esp+30h]
.text:0040DAF7                 mov     ebp, [esp+10h]
.text:0040DAFB                 mov     edi, [esp+14h]
.text:0040DAFF                 mov     [esp+60h], eax
.text:0040DB03                 mov     esi, [esp+20h]
.text:0040DB07                 mov     eax, [esp+10h]
.text:0040DB0B                 mov     [esp+40h], ebp
.text:0040DB0F                 mov     ecx, [esp+28h]
.text:0040DB13                 mov     ebp, [esp+18h]
.text:0040DB17                 mov     [esp+44h], edi
.text:0040DB1B                 mov     edx, [esp+2Ch]
.text:0040DB1F                 mov     edi, [esp+1Ch]
.text:0040DB23                 mov     [esp+70h], eax
.text:0040DB27                 mov     ebx, [esp+24h]
.text:0040DB2B                 mov     eax, [esp+14h]
.text:0040DB2F                 mov     [esp+48h], ebp
.text:0040DB33                 mov     [esp+4Ch], edi
.text:0040DB37                 mov     [esp+50h], esi
.text:0040DB3B                 mov     [esp+54h], ebx
.text:0040DB3F                 mov     [esp+58h], ecx
.text:0040DB43                 mov     [esp+5Ch], edx
.text:0040DB47                 mov     [esp+74h], eax
.text:0040DB4B                 mov     [esp+78h], ebp
.text:0040DB4F                 mov     [esp+7Ch], edi
.text:0040DB53                 mov     [esp+80h], esi
.text:0040DB5A                 mov     [esp+84h], ebx
.text:0040DB61                 mov     esi, [esp+30h]
.text:0040DB65                 lea     ebx, [esp+70h]
.text:0040DB69                 mov     [esp+8Ch], edx
.text:0040DB70                 mov     edx, [esp+0C8h]
.text:0040DB77                 mov     [esp+88h], ecx
.text:0040DB7E                 mov     ecx, [esp+0CCh]
.text:0040DB85                 mov     [esp+4], edx
.text:0040DB89                 mov     edx, [esp+0C0h]
.text:0040DB90                 mov     [esp+90h], esi
.text:0040DB97                 mov     [esp+0Ch], ebx
.text:0040DB9B                 mov     [esp+8], ecx
.text:0040DB9F                 mov     [esp], edx
.text:0040DBA2                 call    sub_40DE00
.text:0040DBA7                 add     esp, 0ACh
.text:0040DBAD                 pop     ebx
.text:0040DBAE                 pop     esi
.text:0040DBAF                 pop     edi
.text:0040DBB0                 pop     ebp
.text:0040DBB1                 retn
.text:0040DBB1 ; ---------------------------------------------------------------------------
.text:0040DBB2                 align 10h
.text:0040DBC0                 push    ebp
.text:0040DBC1                 xor     eax, eax
.text:0040DBC3                 mov     ecx, 8
.text:0040DBC8                 push    edi
.text:0040DBC9                 push    esi
.text:0040DBCA                 push    ebx
.text:0040DBCB                 sub     esp, 0ACh
.text:0040DBD1                 mov     edi, [esp+0C0h]
.text:0040DBD8                 cld
.text:0040DBD9                 mov     [esp+10h], edi
.text:0040DBDD                 lea     edi, [esp+14h]
.text:0040DBE1                 rep stosd
.text:0040DBE3                 mov     eax, [esp+30h]
.text:0040DBE7                 mov     esi, [esp+10h]
.text:0040DBEB                 mov     ebx, [esp+14h]
.text:0040DBEF                 mov     [esp+60h], eax
.text:0040DBF3                 mov     ebp, [esp+18h]
.text:0040DBF7                 mov     eax, [esp+10h]
.text:0040DBFB                 mov     [esp+40h], esi
.text:0040DBFF                 mov     edi, [esp+1Ch]
.text:0040DC03                 mov     esi, [esp+20h]
.text:0040DC07                 mov     [esp+44h], ebx
.text:0040DC0B                 mov     ecx, [esp+28h]
.text:0040DC0F                 mov     edx, [esp+2Ch]
.text:0040DC13                 mov     [esp+70h], eax
.text:0040DC17                 mov     ebx, [esp+24h]
.text:0040DC1B                 mov     eax, [esp+14h]
.text:0040DC1F                 mov     [esp+48h], ebp
.text:0040DC23                 mov     [esp+4Ch], edi
.text:0040DC27                 mov     [esp+50h], esi
.text:0040DC2B                 mov     [esp+54h], ebx
.text:0040DC2F                 mov     [esp+58h], ecx
.text:0040DC33                 mov     [esp+5Ch], edx
.text:0040DC37                 mov     [esp+74h], eax
.text:0040DC3B                 mov     [esp+78h], ebp
.text:0040DC3F                 mov     [esp+7Ch], edi
.text:0040DC43                 mov     [esp+80h], esi
.text:0040DC4A                 mov     [esp+84h], ebx
.text:0040DC51                 mov     [esp+8Ch], edx
.text:0040DC58                 lea     edx, [esp+70h]
.text:0040DC5C                 mov     [esp+88h], ecx
.text:0040DC63                 mov     ecx, [esp+30h]
.text:0040DC67                 mov     [esp+0Ch], edx
.text:0040DC6B                 mov     edx, [esp+0C4h]
.text:0040DC72                 mov     [esp+90h], ecx
.text:0040DC79                 mov     dword ptr [esp+8], 0FFFFFFFFh
.text:0040DC81                 mov     [esp+4], edx
.text:0040DC85                 mov     dword ptr [esp], 0
.text:0040DC8C                 call    sub_40DE00
.text:0040DC91                 add     esp, 0ACh
.text:0040DC97                 pop     ebx
.text:0040DC98                 pop     esi
.text:0040DC99                 pop     edi
.text:0040DC9A                 pop     ebp
.text:0040DC9B                 retn
.text:0040DC9B ; ---------------------------------------------------------------------------
.text:0040DC9C                 align 10h
.text:0040DCA0                 push    edi
.text:0040DCA1                 push    esi
.text:0040DCA2                 push    ebx
.text:0040DCA3                 sub     esp, 40h
.text:0040DCA6                 mov     edx, ds:dword_41139C
.text:0040DCAC                 mov     ebx, ds:dword_411390
.text:0040DCB2                 mov     esi, ds:dword_411398
.text:0040DCB8                 mov     edi, ds:dword_411394
.text:0040DCBE                 mov     [esp+1Ch], edx
.text:0040DCC2                 mov     ecx, ds:dword_4113A0
.text:0040DCC8                 mov     edx, ds:dword_4113B0
.text:0040DCCE                 mov     [esp+10h], ebx
.text:0040DCD2                 mov     ebx, ds:dword_4113A4
.text:0040DCD8                 mov     [esp+30h], edx
.text:0040DCDC                 movzx   edx, byte ptr [esp+54h]
.text:0040DCE1                 mov     [esp+18h], esi
.text:0040DCE5                 mov     esi, ds:dword_4113AC
.text:0040DCEB                 mov     [esp+14h], edi
.text:0040DCEF                 mov     edi, ds:dword_4113A8
.text:0040DCF5                 mov     [esp+20h], ecx
.text:0040DCF9                 mov     cl, dl
.text:0040DCFB                 shr     cl, 5
.text:0040DCFE                 mov     [esp+24h], ebx
.text:0040DD02                 movzx   ebx, cl
.text:0040DD05                 mov     [esp+2Ch], esi
.text:0040DD09                 lea     esi, [esp+10h]
.text:0040DD0D                 mov     [esp+28h], edi
.text:0040DD11                 lea     edi, [esi+ebx*4]
.text:0040DD14                 mov     ebx, edx
.text:0040DD16                 mov     edx, [edi+4]
.text:0040DD19                 and     ebx, 1Fh
.text:0040DD1C                 mov     cl, bl
.text:0040DD1E                 mov     eax, edx
.text:0040DD20                 shr     eax, cl
.text:0040DD22                 and     eax, 1
.text:0040DD25                 xor     eax, 1
.text:0040DD28                 shl     eax, cl
.text:0040DD2A                 xor     edx, eax
.text:0040DD2C                 mov     [edi+4], edx
.text:0040DD2F                 mov     edx, [esp+50h]
.text:0040DD33                 mov     [esp+0Ch], esi
.text:0040DD37                 mov     dword ptr [esp+8], 0FFFFFFFFh
.text:0040DD3F                 mov     [esp+4], edx
.text:0040DD43                 mov     dword ptr [esp], 0
.text:0040DD4A                 call    sub_40DE00
.text:0040DD4F                 add     esp, 40h
.text:0040DD52                 pop     ebx
.text:0040DD53                 pop     esi
.text:0040DD54                 pop     edi
.text:0040DD55                 retn
.text:0040DD55 ; ---------------------------------------------------------------------------
.text:0040DD56                 align 10h
.text:0040DD60
.text:0040DD60 ; =============== S U B R O U T I N E =======================================
.text:0040DD60
.text:0040DD60
.text:0040DD60 ; int __cdecl sub_40DD60(char *)
.text:0040DD60 sub_40DD60      proc near               ; CODE XREF: sub_40C880+64↑p
.text:0040DD60
.text:0040DD60 var_4C          = dword ptr -4Ch
.text:0040DD60 var_48          = dword ptr -48h
.text:0040DD60 var_44          = dword ptr -44h
.text:0040DD60 var_40          = dword ptr -40h
.text:0040DD60 var_3C          = dword ptr -3Ch
.text:0040DD60 var_38          = dword ptr -38h
.text:0040DD60 var_34          = dword ptr -34h
.text:0040DD60 var_30          = dword ptr -30h
.text:0040DD60 var_2C          = dword ptr -2Ch
.text:0040DD60 var_28          = dword ptr -28h
.text:0040DD60 var_24          = dword ptr -24h
.text:0040DD60 var_20          = dword ptr -20h
.text:0040DD60 var_1C          = dword ptr -1Ch
.text:0040DD60 arg_0           = dword ptr  4
.text:0040DD60
.text:0040DD60                 sub     esp, 4Ch
.text:0040DD63                 mov     ecx, ds:dword_411390
.text:0040DD69                 mov     [esp+4Ch+var_44], 0FFFFFFFFh ; int
.text:0040DD71                 mov     edx, ds:dword_411394
.text:0040DD77                 mov     [esp+4Ch+var_4C], 0 ; int
.text:0040DD7E                 mov     [esp+4Ch+var_3C], ecx
.text:0040DD82                 mov     ecx, ds:dword_41139C
.text:0040DD88                 mov     [esp+4Ch+var_38], edx
.text:0040DD8C                 mov     edx, ds:dword_411398
.text:0040DD92                 mov     [esp+4Ch+var_30], ecx
.text:0040DD96                 mov     ecx, ds:dword_4113A0
.text:0040DD9C                 mov     eax, edx
.text:0040DD9E                 shr     eax, 1Ah
.text:0040DDA1                 and     eax, 1
.text:0040DDA4                 xor     eax, 1
.text:0040DDA7                 mov     [esp+4Ch+var_2C], ecx
.text:0040DDAB                 shl     eax, 1Ah
.text:0040DDAE                 mov     ecx, ds:dword_4113A4
.text:0040DDB4                 xor     edx, eax
.text:0040DDB6                 mov     [esp+4Ch+var_34], edx
.text:0040DDBA                 mov     edx, [esp+4Ch+arg_0]
.text:0040DDBE                 mov     [esp+4Ch+var_28], ecx
.text:0040DDC2                 mov     ecx, ds:dword_4113A8
.text:0040DDC8                 mov     [esp+4Ch+var_48], edx ; char *
.text:0040DDCC                 mov     [esp+4Ch+var_24], ecx
.text:0040DDD0                 mov     ecx, ds:dword_4113AC
.text:0040DDD6                 mov     [esp+4Ch+var_20], ecx
.text:0040DDDA                 mov     ecx, ds:dword_4113B0
.text:0040DDE0                 mov     [esp+4Ch+var_1C], ecx
.text:0040DDE4                 lea     ecx, [esp+4Ch+var_3C]
.text:0040DDE8                 mov     [esp+4Ch+var_40], ecx ; int
.text:0040DDEC                 call    sub_40DE00
.text:0040DDF1                 add     esp, 4Ch
.text:0040DDF4                 retn
.text:0040DDF4 sub_40DD60      endp
.text:0040DDF4
.text:0040DDF4 ; ---------------------------------------------------------------------------
.text:0040DDF5                 align 10h
.text:0040DE00
.text:0040DE00 ; =============== S U B R O U T I N E =======================================
.text:0040DE00
.text:0040DE00
.text:0040DE00 ; int __cdecl sub_40DE00(int, char *, int, int)
.text:0040DE00 sub_40DE00      proc near               ; CODE XREF: .text:0040D9B2↑p
.text:0040DE00                                         ; .text:0040D9E2↑p ...
.text:0040DE00
.text:0040DE00 Block           = dword ptr -2Ch
.text:0040DE00 var_28          = dword ptr -28h
.text:0040DE00 Str             = dword ptr -24h
.text:0040DE00 var_20          = dword ptr -20h
.text:0040DE00 var_1C          = dword ptr -1Ch
.text:0040DE00 var_18          = dword ptr -18h
.text:0040DE00 var_14          = dword ptr -14h
.text:0040DE00 arg_0           = dword ptr  4
.text:0040DE00 arg_4           = dword ptr  8
.text:0040DE00 arg_8           = dword ptr  0Ch
.text:0040DE00 arg_C           = dword ptr  10h
.text:0040DE00
.text:0040DE00                 push    ebp
.text:0040DE01                 push    edi
.text:0040DE02                 push    esi
.text:0040DE03                 push    ebx
.text:0040DE04                 sub     esp, 1Ch
.text:0040DE07                 call    _errno
.text:0040DE0C                 mov     edx, [eax]
.text:0040DE0E                 mov     eax, [esp+2Ch+arg_0]
.text:0040DE12                 mov     [esp+2Ch+var_14], edx
.text:0040DE16                 test    eax, eax
.text:0040DE18                 js      loc_40DFBA
.text:0040DE1E                 mov     eax, [esp+2Ch+arg_0]
.text:0040DE22                 cmp     dword_410080, eax
.text:0040DE28                 ja      short loc_40DEA0
.text:0040DE2A                 mov     esi, eax
.text:0040DE2C                 inc     esi
.text:0040DE2D                 cmp     esi, 1FFFFFFFh
.text:0040DE33                 ja      loc_40DFBF
.text:0040DE39                 mov     ebx, off_41008C
.text:0040DE3F                 cmp     ebx, offset dword_410084
.text:0040DE45                 jz      loc_40DF91
.text:0040DE4B
.text:0040DE4B loc_40DE4B:                             ; CODE XREF: sub_40DE00+1B5↓j
.text:0040DE4B                 mov     [esp+2Ch+Block], ebx ; void *
.text:0040DE4E                 lea     ecx, ds:0[esi*8]
.text:0040DE55                 mov     ebp, esi
.text:0040DE57                 mov     [esp+2Ch+var_28], ecx ; size_t
.text:0040DE5B                 call    sub_40CA30
.text:0040DE60                 mov     off_41008C, eax
.text:0040DE65                 mov     ebx, dword_410080
.text:0040DE6B                 sub     ebp, ebx
.text:0040DE6D                 lea     edi, [eax+ebx*8]
.text:0040DE70                 lea     eax, ds:0[ebp*8]
.text:0040DE77                 cmp     eax, 7
.text:0040DE7A                 jbe     short loc_40DE90
.text:0040DE7C                 test    edi, 4
.text:0040DE82                 jz      short loc_40DE90
.text:0040DE84                 mov     dword ptr [edi], 0
.text:0040DE8A                 sub     eax, 4
.text:0040DE8D                 add     edi, 4
.text:0040DE90
.text:0040DE90 loc_40DE90:                             ; CODE XREF: sub_40DE00+7A↑j
.text:0040DE90                                         ; sub_40DE00+82↑j
.text:0040DE90                 cld
.text:0040DE91                 mov     ecx, eax
.text:0040DE93                 shr     ecx, 2
.text:0040DE96                 xor     eax, eax
.text:0040DE98                 rep stosd
.text:0040DE9A                 mov     dword_410080, esi
.text:0040DEA0
.text:0040DEA0 loc_40DEA0:                             ; CODE XREF: sub_40DE00+28↑j
.text:0040DEA0                 mov     esi, off_41008C
.text:0040DEA6                 mov     eax, [esp+2Ch+arg_0]
.text:0040DEAA                 mov     ebp, [esi+eax*8]
.text:0040DEAD                 mov     edi, [esi+eax*8+4]
.text:0040DEB1                 mov     esi, [esp+2Ch+arg_C]
.text:0040DEB5                 test    esi, esi
.text:0040DEB7                 jz      loc_40DF87
.text:0040DEBD
.text:0040DEBD loc_40DEBD:                             ; CODE XREF: sub_40DE00+18C↓j
.text:0040DEBD                 call    _errno
.text:0040DEC2                 mov     ebx, [eax]
.text:0040DEC4                 mov     [esp+2Ch+var_18], esi ; int
.text:0040DEC8                 mov     ecx, [esi]
.text:0040DECA                 mov     [esp+2Ch+Block], edi ; int
.text:0040DECD                 mov     edx, [esp+2Ch+arg_8]
.text:0040DED1                 mov     [esp+2Ch+var_28], ebp ; int
.text:0040DED5                 mov     [esp+2Ch+var_1C], ecx ; int
.text:0040DED9                 mov     ecx, [esp+2Ch+arg_4]
.text:0040DEDD                 mov     [esp+2Ch+var_20], edx ; int
.text:0040DEE1                 mov     [esp+2Ch+Str], ecx ; Str
.text:0040DEE5                 call    sub_40CCC0
.text:0040DEEA                 mov     esi, eax
.text:0040DEEC                 call    _errno
.text:0040DEF1                 mov     [eax], ebx
.text:0040DEF3                 cmp     ebp, esi
.text:0040DEF5                 ja      short loc_40DF6B
.text:0040DEF7                 lea     ebp, [esi+1]
.text:0040DEFA                 mov     ebx, off_41008C
.text:0040DF00                 cmp     edi, offset unk_411290
.text:0040DF06                 mov     esi, [esp+2Ch+arg_0]
.text:0040DF0A                 mov     [ebx+esi*8], ebp
.text:0040DF0D                 jz      short loc_40DF1D
.text:0040DF0F                 mov     [esp+2Ch+Block], edi ; Block
.text:0040DF12                 call    free
.text:0040DF17                 mov     ebx, off_41008C
.text:0040DF1D
.text:0040DF1D loc_40DF1D:                             ; CODE XREF: sub_40DE00+10D↑j
.text:0040DF1D                 mov     [esp+2Ch+Block], ebp ; size_t
.text:0040DF20                 call    sub_40C9A0
.text:0040DF25                 mov     esi, [esp+2Ch+arg_C]
.text:0040DF29                 mov     edi, eax
.text:0040DF2B                 mov     eax, [esp+2Ch+arg_0]
.text:0040DF2F                 test    esi, esi
.text:0040DF31                 mov     [ebx+eax*8+4], edi
.text:0040DF35                 jz      short loc_40DF80
.text:0040DF37
.text:0040DF37 loc_40DF37:                             ; CODE XREF: sub_40DE00+185↓j
.text:0040DF37                 call    _errno
.text:0040DF3C                 mov     ebx, [eax]
.text:0040DF3E                 mov     [esp+2Ch+var_18], esi ; int
.text:0040DF42                 mov     ecx, [esi]
.text:0040DF44                 mov     [esp+2Ch+Block], edi ; int
.text:0040DF47                 mov     edx, [esp+2Ch+arg_8]
.text:0040DF4B                 mov     [esp+2Ch+var_28], ebp ; int
.text:0040DF4F                 mov     [esp+2Ch+var_1C], ecx ; int
.text:0040DF53                 mov     ecx, [esp+2Ch+arg_4]
.text:0040DF57                 mov     [esp+2Ch+var_20], edx ; int
.text:0040DF5B                 mov     [esp+2Ch+Str], ecx ; Str
.text:0040DF5F                 call    sub_40CCC0
.text:0040DF64                 call    _errno
.text:0040DF69                 mov     [eax], ebx
.text:0040DF6B
.text:0040DF6B loc_40DF6B:                             ; CODE XREF: sub_40DE00+F5↑j
.text:0040DF6B                 call    _errno
.text:0040DF70                 mov     ebp, [esp+2Ch+var_14]
.text:0040DF74                 mov     [eax], ebp
.text:0040DF76                 add     esp, 1Ch
.text:0040DF79                 mov     eax, edi
.text:0040DF7B                 pop     ebx
.text:0040DF7C                 pop     esi
.text:0040DF7D                 pop     edi
.text:0040DF7E                 pop     ebp
.text:0040DF7F                 retn
.text:0040DF80 ; ---------------------------------------------------------------------------
.text:0040DF80
.text:0040DF80 loc_40DF80:                             ; CODE XREF: sub_40DE00+135↑j
.text:0040DF80                 mov     esi, offset dword_411390
.text:0040DF85                 jmp     short loc_40DF37
.text:0040DF87 ; ---------------------------------------------------------------------------
.text:0040DF87
.text:0040DF87 loc_40DF87:                             ; CODE XREF: sub_40DE00+B7↑j
.text:0040DF87                 mov     esi, offset dword_411390
.text:0040DF8C                 jmp     loc_40DEBD
.text:0040DF91 ; ---------------------------------------------------------------------------
.text:0040DF91
.text:0040DF91 loc_40DF91:                             ; CODE XREF: sub_40DE00+45↑j
.text:0040DF91                 mov     [esp+2Ch+Block], 8 ; size_t
.text:0040DF98                 call    sub_40C9A0
.text:0040DF9D                 mov     off_41008C, eax
.text:0040DFA2                 mov     edi, dword_410084
.text:0040DFA8                 mov     ebx, eax
.text:0040DFAA                 mov     ecx, off_410088
.text:0040DFB0                 mov     [eax], edi
.text:0040DFB2                 mov     [eax+4], ecx
.text:0040DFB5                 jmp     loc_40DE4B
.text:0040DFBA ; ---------------------------------------------------------------------------
.text:0040DFBA
.text:0040DFBA loc_40DFBA:                             ; CODE XREF: sub_40DE00+18↑j
.text:0040DFBA                 call    abort
.text:0040DFBF ; ---------------------------------------------------------------------------
.text:0040DFBF
.text:0040DFBF loc_40DFBF:                             ; CODE XREF: sub_40DE00+33↑j
.text:0040DFBF                 call    sub_40DFF0
.text:0040DFBF sub_40DE00      endp
.text:0040DFBF
.text:0040DFBF ; ---------------------------------------------------------------------------
.text:0040DFC4                 align 10h
.text:0040DFD0
.text:0040DFD0 loc_40DFD0:                             ; DATA XREF: sub_40DFF0+3↓o
.text:0040DFD0                 insd
.text:0040DFD1                 db      65h
.text:0040DFD1                 insd
.text:0040DFD3                 outsd
.text:0040DFD4                 jb      short loc_40E04F
.text:0040DFD6                 and     [ebp+78h], ah
.text:0040DFD9                 push    74737561h
.text:0040DFDE
.text:0040DFDE loc_40DFDE:                             ; DATA XREF: sub_40DFF0+10↓o
.text:0040DFDE                 db      65h
.text:0040DFDE                 add     fs:0B68D0073h, ah
.text:0040DFDE ; ---------------------------------------------------------------------------
.text:0040DFE6                 dw 0
.text:0040DFE8                 align 10h
.text:0040DFF0
.text:0040DFF0 ; =============== S U B R O U T I N E =======================================
.text:0040DFF0
.text:0040DFF0 ; Attributes: noreturn
.text:0040DFF0
.text:0040DFF0 sub_40DFF0      proc near               ; CODE XREF: .text:loc_40C999↑p
.text:0040DFF0                                         ; sub_40C9A0+24↑p ...
.text:0040DFF0
.text:0040DFF0 Code            = dword ptr -1Ch
.text:0040DFF0 ErrorMessage    = dword ptr -18h
.text:0040DFF0 var_14          = dword ptr -14h
.text:0040DFF0 var_10          = byte ptr -10h
.text:0040DFF0
.text:0040DFF0                 sub     esp, 1Ch
.text:0040DFF3                 mov     [esp+1Ch+Code], offset loc_40DFD0
.text:0040DFFA                 call    ds:libintl_gettext
.text:0040E000                 mov     [esp+1Ch+var_14], (offset loc_40DFDE+3) ; char *
.text:0040E008                 mov     edx, Code
.text:0040E00E                 mov     [esp+1Ch+ErrorMessage], 0 ; ErrorMessage
.text:0040E016                 mov     dword ptr [esp+1Ch+var_10], eax ; char
.text:0040E01A                 mov     [esp+1Ch+Code], edx ; Code
.text:0040E01D                 call    sub_40E080
.text:0040E022                 call    abort
.text:0040E022 sub_40DFF0      endp
.text:0040E022
.text:0040E022 ; ---------------------------------------------------------------------------
.text:0040E027                 align 10h
.text:0040E030
.text:0040E030 ; =============== S U B R O U T I N E =======================================
.text:0040E030
.text:0040E030 ; Attributes: thunk
.text:0040E030
.text:0040E030 libintl_bindtextdomain proc near
.text:0040E030                 jmp     ds:__imp_libintl_bindtextdomain
.text:0040E030 libintl_bindtextdomain endp
.text:0040E030
.text:0040E030 ; ---------------------------------------------------------------------------
.text:0040E036                 align 10h
.text:0040E040                 jmp     ds:libintl_textdomain
.text:0040E040 ; ---------------------------------------------------------------------------
.text:0040E046                 db 2 dup(90h)
.text:0040E048                 dd 0
.text:0040E04C                 db 3 dup(0)
.text:0040E04F ; ---------------------------------------------------------------------------
.text:0040E04F
.text:0040E04F loc_40E04F:                             ; CODE XREF: .text:0040DFD4↑j
.text:0040E04F                 add     bh, bh
.text:0040E051                 and     eax, offset libintl_gettext
.text:0040E056                 nop
.text:0040E057                 nop
.text:0040E057 ; ---------------------------------------------------------------------------
.text:0040E058                 dd 2 dup(0)
.text:0040E060 ; const char aS[]
.text:0040E060 aS              db ': %s',0             ; DATA XREF: sub_40E080+B8↓o
.text:0040E060                                         ; sub_40E184+122↓o
.text:0040E065 aUnknownSystemE db 'Unknown system error',0
.text:0040E065                                         ; DATA XREF: sub_40E080:loc_40E14D↓o
.text:0040E065                                         ; sub_40E184:loc_40E2BE↓o
.text:0040E07A ; const char aS_0[]
.text:0040E07A aS_0            db '%s: ',0             ; DATA XREF: sub_40E080:loc_40E154↓o
.text:0040E07F                 align 10h
.text:0040E080
.text:0040E080 ; =============== S U B R O U T I N E =======================================
.text:0040E080
.text:0040E080
.text:0040E080 ; int __cdecl sub_40E080(int Code, int ErrorMessage, char *, char)
.text:0040E080 sub_40E080      proc near               ; CODE XREF: sub_401E90+32F↑p
.text:0040E080                                         ; sub_401E90+7F0↑p ...
.text:0040E080
.text:0040E080 Stream          = dword ptr -1Ch
.text:0040E080 Format          = dword ptr -18h
.text:0040E080 ArgList         = dword ptr -14h
.text:0040E080 Code            = dword ptr  4
.text:0040E080 ErrorMessage    = dword ptr  8
.text:0040E080 arg_8           = dword ptr  0Ch
.text:0040E080 arg_C           = byte ptr  10h
.text:0040E080
.text:0040E080                 push    esi
.text:0040E081                 push    ebx
.text:0040E082                 sub     esp, 14h
.text:0040E085                 mov     edx, ds:_iob
.text:0040E08B                 mov     esi, [esp+1Ch+Code]
.text:0040E08F                 mov     ebx, [esp+1Ch+ErrorMessage]
.text:0040E093                 add     edx, 20h ; ' '
.text:0040E096                 mov     [esp+1Ch+Stream], edx ; Stream
.text:0040E099                 call    fflush
.text:0040E09E                 mov     eax, ds:dword_411420
.text:0040E0A3                 test    eax, eax
.text:0040E0A5                 jz      loc_40E154
.text:0040E0AB                 call    eax ; dword_411420
.text:0040E0AD
.text:0040E0AD loc_40E0AD:                             ; CODE XREF: sub_40E080+F7↓j
.text:0040E0AD                 lea     edx, [esp+1Ch+arg_C]
.text:0040E0B1                 mov     ecx, [esp+1Ch+arg_8]
.text:0040E0B5                 mov     [esp+1Ch+ArgList], edx ; ArgList
.text:0040E0B9                 mov     edx, ds:_iob
.text:0040E0BF                 mov     [esp+1Ch+Format], ecx ; Format
.text:0040E0C3                 add     edx, 40h ; '@'
.text:0040E0C6                 mov     [esp+1Ch+Stream], edx ; Stream
.text:0040E0C9                 call    vfprintf
.text:0040E0CE                 inc     ds:dword_411430
.text:0040E0D4                 test    ebx, ebx
.text:0040E0D6                 jnz     short loc_40E122
.text:0040E0D8
.text:0040E0D8 loc_40E0D8:                             ; CODE XREF: sub_40E080+CB↓j
.text:0040E0D8                 mov     edx, ds:_iob
.text:0040E0DE                 lea     ecx, [edx+40h]
.text:0040E0E1                 mov     ebx, [ecx+4]
.text:0040E0E4                 dec     ebx
.text:0040E0E5                 test    ebx, ebx
.text:0040E0E7                 mov     [ecx+4], ebx
.text:0040E0EA                 js      short loc_40E110
.text:0040E0EC                 mov     ecx, [edx+40h]
.text:0040E0EF                 mov     byte ptr [ecx], 0Ah
.text:0040E0F2                 inc     dword ptr [edx+40h]
.text:0040E0F5
.text:0040E0F5 loc_40E0F5:                             ; CODE XREF: sub_40E080+A0↓j
.text:0040E0F5                 mov     edx, ds:_iob
.text:0040E0FB                 add     edx, 40h ; '@'
.text:0040E0FE                 mov     [esp+1Ch+Stream], edx ; Stream
.text:0040E101                 call    fflush
.text:0040E106                 test    esi, esi
.text:0040E108                 jnz     short loc_40E17C
.text:0040E10A                 add     esp, 14h
.text:0040E10D                 pop     ebx
.text:0040E10E                 pop     esi
.text:0040E10F                 retn
.text:0040E110 ; ---------------------------------------------------------------------------
.text:0040E110
.text:0040E110 loc_40E110:                             ; CODE XREF: sub_40E080+6A↑j
.text:0040E110                 mov     [esp+1Ch+Format], ecx ; File
.text:0040E114                 mov     [esp+1Ch+Stream], 0Ah ; Ch
.text:0040E11B                 call    _flsbuf
.text:0040E120                 jmp     short loc_40E0F5
.text:0040E122 ; ---------------------------------------------------------------------------
.text:0040E122
.text:0040E122 loc_40E122:                             ; CODE XREF: sub_40E080+56↑j
.text:0040E122                 mov     [esp+1Ch+Stream], ebx ; ErrorMessage
.text:0040E125                 call    strerror
.text:0040E12A                 test    eax, eax
.text:0040E12C                 jz      short loc_40E14D
.text:0040E12E
.text:0040E12E loc_40E12E:                             ; CODE XREF: sub_40E080+D2↓j
.text:0040E12E                 mov     [esp+1Ch+ArgList], eax
.text:0040E132                 mov     ebx, ds:_iob
.text:0040E138                 mov     [esp+1Ch+Format], offset aS ; ": %s"
.text:0040E140                 add     ebx, 40h ; '@'
.text:0040E143                 mov     [esp+1Ch+Stream], ebx ; Stream
.text:0040E146                 call    fprintf
.text:0040E14B                 jmp     short loc_40E0D8
.text:0040E14D ; ---------------------------------------------------------------------------
.text:0040E14D
.text:0040E14D loc_40E14D:                             ; CODE XREF: sub_40E080+AC↑j
.text:0040E14D                 mov     eax, offset aUnknownSystemE ; "Unknown system error"
.text:0040E152                 jmp     short loc_40E12E
.text:0040E154 ; ---------------------------------------------------------------------------
.text:0040E154
.text:0040E154 loc_40E154:                             ; CODE XREF: sub_40E080+25↑j
.text:0040E154                 mov     [esp+1Ch+Format], offset aS_0 ; "%s: "
.text:0040E15C                 mov     edx, ds:_iob
.text:0040E162                 mov     ecx, ds:dword_4113E0
.text:0040E168                 add     edx, 40h ; '@'
.text:0040E16B                 mov     [esp+1Ch+ArgList], ecx
.text:0040E16F                 mov     [esp+1Ch+Stream], edx ; Stream
.text:0040E172                 call    fprintf
.text:0040E177                 jmp     loc_40E0AD
.text:0040E17C ; ---------------------------------------------------------------------------
.text:0040E17C
.text:0040E17C loc_40E17C:                             ; CODE XREF: sub_40E080+88↑j
.text:0040E17C                 mov     [esp+1Ch+Stream], esi ; Code
.text:0040E17F                 call    exit
.text:0040E17F sub_40E080      endp
.text:0040E17F
.text:0040E184
.text:0040E184 ; =============== S U B R O U T I N E =======================================
.text:0040E184
.text:0040E184
.text:0040E184 ; int __cdecl sub_40E184(int, int Code, int ErrorMessage, char *Str2, int, char *, char)
.text:0040E184 sub_40E184      proc near               ; DATA XREF: sub_40E184+77↓o
.text:0040E184
.text:0040E184 Stream          = dword ptr -28h
.text:0040E184 Format          = dword ptr -24h
.text:0040E184 ArgList         = dword ptr -20h
.text:0040E184 var_1C          = dword ptr -1Ch
.text:0040E184 Code            = dword ptr  8
.text:0040E184 ErrorMessage    = dword ptr  0Ch
.text:0040E184 Str2            = dword ptr  10h
.text:0040E184 arg_10          = dword ptr  14h
.text:0040E184 arg_14          = dword ptr  18h
.text:0040E184 arg_18          = byte ptr  1Ch
.text:0040E184
.text:0040E184                 and     eax, 64253A73h
.text:0040E189                 cmp     ah, [eax]
.text:0040E18B
.text:0040E18B loc_40E18B:                             ; DATA XREF: sub_40E184:loc_40E2C5↓o
.text:0040E18B                 add     ds:55003A73h, ah
.text:0040E191                 push    edi
.text:0040E192                 push    esi
.text:0040E193                 push    ebx
.text:0040E194                 sub     esp, 1Ch
.text:0040E197                 mov     edx, ds:dword_411460
.text:0040E19D                 mov     ebp, [esp+28h+Code]
.text:0040E1A1                 mov     edi, [esp+28h+ErrorMessage]
.text:0040E1A5                 test    edx, edx
.text:0040E1A7                 mov     ebx, [esp+28h+Str2]
.text:0040E1AB                 mov     esi, [esp+28h+arg_10]
.text:0040E1AF                 jz      short loc_40E1C9
.text:0040E1B1                 cmp     ds:dword_4113D0, esi
.text:0040E1B7                 jz      loc_40E2F0
.text:0040E1BD
.text:0040E1BD loc_40E1BD:                             ; CODE XREF: sub_40E184+18D↓j
.text:0040E1BD                 mov     ds:Str1, ebx
.text:0040E1C3                 mov     ds:dword_4113D0, esi
.text:0040E1C9
.text:0040E1C9 loc_40E1C9:                             ; CODE XREF: sub_40E184+2B↑j
.text:0040E1C9                 mov     edx, ds:_iob
.text:0040E1CF                 add     edx, 20h ; ' '
.text:0040E1D2                 mov     [esp+28h+Stream], edx ; Stream
.text:0040E1D5                 call    fflush
.text:0040E1DA                 mov     eax, ds:dword_411420
.text:0040E1DF                 test    eax, eax
.text:0040E1E1                 jz      loc_40E2C5
.text:0040E1E7                 call    eax ; dword_411420
.text:0040E1E9
.text:0040E1E9 loc_40E1E9:                             ; CODE XREF: sub_40E184+164↓j
.text:0040E1E9                 test    ebx, ebx
.text:0040E1EB                 jz      short loc_40E20E
.text:0040E1ED                 mov     [esp+28h+ArgList], ebx
.text:0040E1F1                 mov     ebx, ds:_iob
.text:0040E1F7                 mov     [esp+28h+var_1C], esi
.text:0040E1FB                 mov     [esp+28h+Format], offset sub_40E184 ; Format
.text:0040E203                 add     ebx, 40h ; '@'
.text:0040E206                 mov     [esp+28h+Stream], ebx ; Stream
.text:0040E209                 call    fprintf
.text:0040E20E
.text:0040E20E loc_40E20E:                             ; CODE XREF: sub_40E184+67↑j
.text:0040E20E                 mov     esi, ds:_iob
.text:0040E214                 lea     edx, [esp+28h+arg_18]
.text:0040E218                 mov     ecx, [esp+28h+arg_14]
.text:0040E21C                 mov     [esp+28h+ArgList], edx ; ArgList
.text:0040E220                 add     esi, 40h ; '@'
.text:0040E223                 mov     [esp+28h+Format], ecx ; Format
.text:0040E227                 mov     [esp+28h+Stream], esi ; Stream
.text:0040E22A                 call    vfprintf
.text:0040E22F                 inc     ds:dword_411430
.text:0040E235                 test    edi, edi
.text:0040E237                 jnz     short loc_40E290
.text:0040E239
.text:0040E239 loc_40E239:                             ; CODE XREF: sub_40E184+135↓j
.text:0040E239                 mov     edx, ds:_iob
.text:0040E23F                 lea     ecx, [edx+40h]
.text:0040E242                 mov     ebx, [ecx+4]
.text:0040E245                 dec     ebx
.text:0040E246                 test    ebx, ebx
.text:0040E248                 mov     [ecx+4], ebx
.text:0040E24B                 js      short loc_40E277
.text:0040E24D                 mov     esi, [edx+40h]
.text:0040E250                 mov     byte ptr [esi], 0Ah
.text:0040E253                 inc     dword ptr [edx+40h]
.text:0040E256
.text:0040E256 loc_40E256:                             ; CODE XREF: sub_40E184+103↓j
.text:0040E256                 mov     ecx, ds:_iob
.text:0040E25C                 add     ecx, 40h ; '@'
.text:0040E25F                 mov     [esp+28h+Stream], ecx ; Stream
.text:0040E262                 call    fflush
.text:0040E267                 test    ebp, ebp
.text:0040E269                 jnz     loc_40E316
.text:0040E26F
.text:0040E26F loc_40E26F:                             ; CODE XREF: sub_40E184+173↓j
.text:0040E26F                                         ; sub_40E184+187↓j
.text:0040E26F                 add     esp, 1Ch
.text:0040E272                 pop     ebx
.text:0040E273                 pop     esi
.text:0040E274                 pop     edi
.text:0040E275                 pop     ebp
.text:0040E276                 retn
.text:0040E277 ; ---------------------------------------------------------------------------
.text:0040E277
.text:0040E277 loc_40E277:                             ; CODE XREF: sub_40E184+C7↑j
.text:0040E277                 mov     [esp+28h+Format], ecx ; File
.text:0040E27B                 mov     [esp+28h+Stream], 0Ah ; Ch
.text:0040E282                 call    _flsbuf
.text:0040E287                 jmp     short loc_40E256
.text:0040E287 ; ---------------------------------------------------------------------------
.text:0040E289                 align 10h
.text:0040E290
.text:0040E290 loc_40E290:                             ; CODE XREF: sub_40E184+B3↑j
.text:0040E290                 mov     [esp+28h+Stream], edi ; ErrorMessage
.text:0040E293                 call    strerror
.text:0040E298                 test    eax, eax
.text:0040E29A                 jz      short loc_40E2BE
.text:0040E29C
.text:0040E29C loc_40E29C:                             ; CODE XREF: sub_40E184+13F↓j
.text:0040E29C                 mov     [esp+28h+ArgList], eax
.text:0040E2A0                 mov     edi, ds:_iob
.text:0040E2A6                 mov     [esp+28h+Format], offset aS ; ": %s"
.text:0040E2AE                 add     edi, 40h ; '@'
.text:0040E2B1                 mov     [esp+28h+Stream], edi ; Stream
.text:0040E2B4                 call    fprintf
.text:0040E2B9                 jmp     loc_40E239
.text:0040E2BE ; ---------------------------------------------------------------------------
.text:0040E2BE
.text:0040E2BE loc_40E2BE:                             ; CODE XREF: sub_40E184+116↑j
.text:0040E2BE                 mov     eax, offset aUnknownSystemE ; "Unknown system error"
.text:0040E2C3                 jmp     short loc_40E29C
.text:0040E2C5 ; ---------------------------------------------------------------------------
.text:0040E2C5
.text:0040E2C5 loc_40E2C5:                             ; CODE XREF: sub_40E184+5D↑j
.text:0040E2C5                 mov     [esp+28h+Format], (offset loc_40E18B+1) ; Format
.text:0040E2CD                 mov     ecx, ds:_iob
.text:0040E2D3                 mov     edx, ds:dword_4113E0
.text:0040E2D9                 add     ecx, 40h ; '@'
.text:0040E2DC                 mov     [esp+28h+ArgList], edx
.text:0040E2E0                 mov     [esp+28h+Stream], ecx ; Stream
.text:0040E2E3                 call    fprintf
.text:0040E2E8                 jmp     loc_40E1E9
.text:0040E2E8 ; ---------------------------------------------------------------------------
.text:0040E2ED                 align 10h
.text:0040E2F0
.text:0040E2F0 loc_40E2F0:                             ; CODE XREF: sub_40E184+33↑j
.text:0040E2F0                 mov     eax, ds:Str1
.text:0040E2F5                 cmp     ebx, eax
.text:0040E2F7                 jz      loc_40E26F
.text:0040E2FD                 mov     [esp+28h+Format], ebx ; Str2
.text:0040E301                 mov     [esp+28h+Stream], eax ; Str1
.text:0040E304                 call    strcmp
.text:0040E309                 test    eax, eax
.text:0040E30B                 jz      loc_40E26F
.text:0040E311                 jmp     loc_40E1BD
.text:0040E316 ; ---------------------------------------------------------------------------
.text:0040E316
.text:0040E316 loc_40E316:                             ; CODE XREF: sub_40E184+E5↑j
.text:0040E316                 mov     [esp+28h+Stream], ebp ; Code
.text:0040E319                 call    exit
.text:0040E319 sub_40E184      endp ; sp-analysis failed
.text:0040E319
.text:0040E319 ; ---------------------------------------------------------------------------
.text:0040E31E                 align 10h
.text:0040E320
.text:0040E320 ; =============== S U B R O U T I N E =======================================
.text:0040E320
.text:0040E320
.text:0040E320 sub_40E320      proc near               ; CODE XREF: .text:00405FBD↑p
.text:0040E320
.text:0040E320 var_1C          = dword ptr -1Ch
.text:0040E320 var_18          = dword ptr -18h
.text:0040E320 var_14          = dword ptr -14h
.text:0040E320 arg_0           = dword ptr  4
.text:0040E320 arg_4           = dword ptr  8
.text:0040E320 arg_8           = dword ptr  0Ch
.text:0040E320
.text:0040E320                 push    edi
.text:0040E321                 push    esi
.text:0040E322                 push    ebx
.text:0040E323                 sub     esp, 10h
.text:0040E326                 mov     edi, [esp+1Ch+arg_8]
.text:0040E32A                 mov     esi, [esp+1Ch+arg_0]
.text:0040E32E                 mov     ebx, [esp+1Ch+arg_4]
.text:0040E332                 cmp     edi, 0Fh
.text:0040E335                 jbe     short loc_40E380
.text:0040E337                 mov     ecx, esi
.text:0040E339                 neg     ecx
.text:0040E33B                 and     ecx, 3
.text:0040E33E                 sub     edi, ecx
.text:0040E340                 mov     edx, ecx
.text:0040E342                 test    ecx, ecx
.text:0040E344                 jz      short loc_40E35A
.text:0040E346                 lea     esi, [esi+0]
.text:0040E349                 lea     edi, [edi+0]
.text:0040E350
.text:0040E350 loc_40E350:                             ; CODE XREF: sub_40E320+38↓j
.text:0040E350                 movzx   ecx, byte ptr [ebx]
.text:0040E353                 inc     ebx
.text:0040E354                 mov     [esi], cl
.text:0040E356                 inc     esi
.text:0040E357                 dec     edx
.text:0040E358                 jnz     short loc_40E350
.text:0040E35A
.text:0040E35A loc_40E35A:                             ; CODE XREF: sub_40E320+24↑j
.text:0040E35A                 test    bl, 3
.text:0040E35D                 jnz     short loc_40E3A3
.text:0040E35F                 mov     [esp+1Ch+var_18], ebx
.text:0040E363                 mov     edx, edi
.text:0040E365                 shr     edx, 2
.text:0040E368                 mov     [esp+1Ch+var_14], edx
.text:0040E36C                 mov     [esp+1Ch+var_1C], esi
.text:0040E36F                 call    sub_40E3C0
.text:0040E374
.text:0040E374 loc_40E374:                             ; CODE XREF: sub_40E320+98↓j
.text:0040E374                 mov     edx, edi
.text:0040E376                 and     edx, 0FFFFFFFCh
.text:0040E379                 and     edi, 3
.text:0040E37C                 add     ebx, edx
.text:0040E37E                 add     esi, edx
.text:0040E380
.text:0040E380 loc_40E380:                             ; CODE XREF: sub_40E320+15↑j
.text:0040E380                 test    edi, edi
.text:0040E382                 mov     edx, edi
.text:0040E384                 jz      short loc_40E39A
.text:0040E386                 lea     esi, [esi+0]
.text:0040E389                 lea     edi, [edi+0]
.text:0040E390
.text:0040E390 loc_40E390:                             ; CODE XREF: sub_40E320+78↓j
.text:0040E390                 movzx   ecx, byte ptr [ebx]
.text:0040E393                 inc     ebx
.text:0040E394                 mov     [esi], cl
.text:0040E396                 inc     esi
.text:0040E397                 dec     edx
.text:0040E398                 jnz     short loc_40E390
.text:0040E39A
.text:0040E39A loc_40E39A:                             ; CODE XREF: sub_40E320+64↑j
.text:0040E39A                 add     esp, 10h
.text:0040E39D                 mov     eax, esi
.text:0040E39F                 pop     ebx
.text:0040E3A0                 pop     esi
.text:0040E3A1                 pop     edi
.text:0040E3A2                 retn
.text:0040E3A3 ; ---------------------------------------------------------------------------
.text:0040E3A3
.text:0040E3A3 loc_40E3A3:                             ; CODE XREF: sub_40E320+3D↑j
.text:0040E3A3                 mov     [esp+1Ch+var_18], ebx
.text:0040E3A7                 mov     ecx, edi
.text:0040E3A9                 shr     ecx, 2
.text:0040E3AC                 mov     [esp+1Ch+var_14], ecx
.text:0040E3B0                 mov     [esp+1Ch+var_1C], esi
.text:0040E3B3                 call    sub_40E4C0
.text:0040E3B8                 jmp     short loc_40E374
.text:0040E3B8 sub_40E320      endp
.text:0040E3B8
.text:0040E3B8 ; ---------------------------------------------------------------------------
.text:0040E3BA                 align 10h
.text:0040E3C0
.text:0040E3C0 ; =============== S U B R O U T I N E =======================================
.text:0040E3C0
.text:0040E3C0
.text:0040E3C0 sub_40E3C0      proc near               ; CODE XREF: sub_40E320+4F↑p
.text:0040E3C0
.text:0040E3C0 var_8           = dword ptr -8
.text:0040E3C0 var_4           = dword ptr -4
.text:0040E3C0 arg_0           = dword ptr  4
.text:0040E3C0 arg_4           = dword ptr  8
.text:0040E3C0 arg_8           = dword ptr  0Ch
.text:0040E3C0
.text:0040E3C0                 sub     esp, 8
.text:0040E3C3                 mov     ecx, [esp+8+arg_0]
.text:0040E3C7                 mov     [esp+8+var_8], ebx
.text:0040E3CA                 mov     ebx, [esp+8+arg_8]
.text:0040E3CE                 mov     [esp+8+var_4], esi
.text:0040E3D2                 mov     edx, [esp+8+arg_4]
.text:0040E3D6                 mov     eax, ebx
.text:0040E3D8                 and     eax, 7
.text:0040E3DB                 cmp     eax, 7          ; switch 8 cases
.text:0040E3DE                 ja      short def_40E3E0 ; jumptable 0040E3E0 default case
.text:0040E3E0                 jmp     ds:jpt_40E3E0[eax*4] ; switch jump
.text:0040E3E0 ; ---------------------------------------------------------------------------
.text:0040E3E7                 align 4
.text:0040E3E8 jpt_40E3E0      dd offset loc_40E46A    ; DATA XREF: sub_40E3C0+20↑r
.text:0040E3E8                 dd offset loc_40E471    ; jump table for switch statement
.text:0040E3E8                 dd offset loc_40E408
.text:0040E3E8                 dd offset loc_40E479
.text:0040E3E8                 dd offset loc_40E486
.text:0040E3E8                 dd offset loc_40E493
.text:0040E3E8                 dd offset loc_40E4A0
.text:0040E3E8                 dd offset loc_40E4AD
.text:0040E408 ; ---------------------------------------------------------------------------
.text:0040E408
.text:0040E408 loc_40E408:                             ; CODE XREF: sub_40E3C0+20↑j
.text:0040E408                                         ; DATA XREF: sub_40E3C0:jpt_40E3E0↑o
.text:0040E408                 mov     eax, [edx]      ; jumptable 0040E3E0 case 2
.text:0040E40A                 sub     ecx, 1Ch
.text:0040E40D                 add     ebx, 6
.text:0040E410                 sub     edx, 18h
.text:0040E413                 lea     esi, [esi+0]
.text:0040E419                 lea     edi, [edi+0]
.text:0040E420
.text:0040E420 loc_40E420:                             ; CODE XREF: sub_40E3C0+A8↓j
.text:0040E420                 mov     esi, [edx+1Ch]
.text:0040E423                 add     edx, 20h ; ' '
.text:0040E426                 mov     [ecx+1Ch], eax
.text:0040E429                 add     ecx, 20h ; ' '
.text:0040E42C                 sub     ebx, 8
.text:0040E42F                 jnz     short def_40E3E0 ; jumptable 0040E3E0 default case
.text:0040E431                 mov     [ecx], esi
.text:0040E433                 mov     ebx, [esp+8+var_8]
.text:0040E436                 mov     esi, [esp+8+var_4]
.text:0040E43A                 add     esp, 8
.text:0040E43D                 retn
.text:0040E43D ; ---------------------------------------------------------------------------
.text:0040E43E                 align 10h
.text:0040E440
.text:0040E440 def_40E3E0:                             ; CODE XREF: sub_40E3C0+1E↑j
.text:0040E440                                         ; sub_40E3C0+6F↑j ...
.text:0040E440                 mov     eax, [edx]      ; jumptable 0040E3E0 default case
.text:0040E442                 mov     [ecx], esi
.text:0040E444
.text:0040E444 loc_40E444:                             ; CODE XREF: sub_40E3C0+AF↓j
.text:0040E444                 mov     esi, [edx+4]
.text:0040E447                 mov     [ecx+4], eax
.text:0040E44A
.text:0040E44A loc_40E44A:                             ; CODE XREF: sub_40E3C0+F6↓j
.text:0040E44A                 mov     eax, [edx+8]
.text:0040E44D                 mov     [ecx+8], esi
.text:0040E450
.text:0040E450 loc_40E450:                             ; CODE XREF: sub_40E3C0+EB↓j
.text:0040E450                 mov     esi, [edx+0Ch]
.text:0040E453                 mov     [ecx+0Ch], eax
.text:0040E456
.text:0040E456 loc_40E456:                             ; CODE XREF: sub_40E3C0+DE↓j
.text:0040E456                 mov     eax, [edx+10h]
.text:0040E459                 mov     [ecx+10h], esi
.text:0040E45C
.text:0040E45C loc_40E45C:                             ; CODE XREF: sub_40E3C0+D1↓j
.text:0040E45C                 mov     esi, [edx+14h]
.text:0040E45F                 mov     [ecx+14h], eax
.text:0040E462
.text:0040E462 loc_40E462:                             ; CODE XREF: sub_40E3C0+C4↓j
.text:0040E462                 mov     eax, [edx+18h]
.text:0040E465                 mov     [ecx+18h], esi
.text:0040E468                 jmp     short loc_40E420
.text:0040E46A ; ---------------------------------------------------------------------------
.text:0040E46A
.text:0040E46A loc_40E46A:                             ; CODE XREF: sub_40E3C0+20↑j
.text:0040E46A                                         ; DATA XREF: sub_40E3C0:jpt_40E3E0↑o
.text:0040E46A                 mov     eax, [edx]      ; jumptable 0040E3E0 case 0
.text:0040E46C                 sub     ecx, 4
.text:0040E46F                 jmp     short loc_40E444
.text:0040E471 ; ---------------------------------------------------------------------------
.text:0040E471
.text:0040E471 loc_40E471:                             ; CODE XREF: sub_40E3C0+20↑j
.text:0040E471                                         ; DATA XREF: sub_40E3C0:jpt_40E3E0↑o
.text:0040E471                 mov     esi, [edx]      ; jumptable 0040E3E0 case 1
.text:0040E473                 dec     ebx
.text:0040E474                 add     edx, 4
.text:0040E477                 jmp     short def_40E3E0 ; jumptable 0040E3E0 default case
.text:0040E479 ; ---------------------------------------------------------------------------
.text:0040E479
.text:0040E479 loc_40E479:                             ; CODE XREF: sub_40E3C0+20↑j
.text:0040E479                                         ; DATA XREF: sub_40E3C0:jpt_40E3E0↑o
.text:0040E479                 mov     esi, [edx]      ; jumptable 0040E3E0 case 3
.text:0040E47B                 sub     ecx, 18h
.text:0040E47E                 add     ebx, 5
.text:0040E481                 sub     edx, 14h
.text:0040E484                 jmp     short loc_40E462
.text:0040E486 ; ---------------------------------------------------------------------------
.text:0040E486
.text:0040E486 loc_40E486:                             ; CODE XREF: sub_40E3C0+20↑j
.text:0040E486                                         ; DATA XREF: sub_40E3C0:jpt_40E3E0↑o
.text:0040E486                 mov     eax, [edx]      ; jumptable 0040E3E0 case 4
.text:0040E488                 sub     ecx, 14h
.text:0040E48B                 add     ebx, 4
.text:0040E48E                 sub     edx, 10h
.text:0040E491                 jmp     short loc_40E45C
.text:0040E493 ; ---------------------------------------------------------------------------
.text:0040E493
.text:0040E493 loc_40E493:                             ; CODE XREF: sub_40E3C0+20↑j
.text:0040E493                                         ; DATA XREF: sub_40E3C0:jpt_40E3E0↑o
.text:0040E493                 mov     esi, [edx]      ; jumptable 0040E3E0 case 5
.text:0040E495                 sub     ecx, 10h
.text:0040E498                 add     ebx, 3
.text:0040E49B                 sub     edx, 0Ch
.text:0040E49E                 jmp     short loc_40E456
.text:0040E4A0 ; ---------------------------------------------------------------------------
.text:0040E4A0
.text:0040E4A0 loc_40E4A0:                             ; CODE XREF: sub_40E3C0+20↑j
.text:0040E4A0                                         ; DATA XREF: sub_40E3C0:jpt_40E3E0↑o
.text:0040E4A0                 mov     eax, [edx]      ; jumptable 0040E3E0 case 6
.text:0040E4A2                 sub     ecx, 0Ch
.text:0040E4A5                 add     ebx, 2
.text:0040E4A8                 sub     edx, 8
.text:0040E4AB                 jmp     short loc_40E450
.text:0040E4AD ; ---------------------------------------------------------------------------
.text:0040E4AD
.text:0040E4AD loc_40E4AD:                             ; CODE XREF: sub_40E3C0+20↑j
.text:0040E4AD                                         ; DATA XREF: sub_40E3C0:jpt_40E3E0↑o
.text:0040E4AD                 mov     esi, [edx]      ; jumptable 0040E3E0 case 7
.text:0040E4AF                 sub     ecx, 8
.text:0040E4B2                 inc     ebx
.text:0040E4B3                 sub     edx, 4
.text:0040E4B6                 jmp     short loc_40E44A
.text:0040E4B6 sub_40E3C0      endp
.text:0040E4B6
.text:0040E4B6 ; ---------------------------------------------------------------------------
.text:0040E4B8                 align 10h
.text:0040E4C0
.text:0040E4C0 ; =============== S U B R O U T I N E =======================================
.text:0040E4C0
.text:0040E4C0
.text:0040E4C0 sub_40E4C0      proc near               ; CODE XREF: sub_40E320+93↑p
.text:0040E4C0
.text:0040E4C0 var_1C          = dword ptr -1Ch
.text:0040E4C0 var_18          = dword ptr -18h
.text:0040E4C0 var_14          = dword ptr -14h
.text:0040E4C0 arg_0           = dword ptr  4
.text:0040E4C0 arg_4           = dword ptr  8
.text:0040E4C0 arg_8           = dword ptr  0Ch
.text:0040E4C0
.text:0040E4C0                 push    ebp
.text:0040E4C1                 push    edi
.text:0040E4C2                 push    esi
.text:0040E4C3                 push    ebx
.text:0040E4C4                 sub     esp, 0Ch
.text:0040E4C7                 mov     edx, [esp+1Ch+arg_4]
.text:0040E4CB                 mov     [esp+1Ch+var_14], 20h ; ' '
.text:0040E4D3                 mov     eax, [esp+1Ch+arg_8]
.text:0040E4D7                 mov     esi, [esp+1Ch+arg_0]
.text:0040E4DB                 mov     ecx, edx
.text:0040E4DD                 and     ecx, 3
.text:0040E4E0                 and     eax, 3
.text:0040E4E3                 shl     ecx, 3
.text:0040E4E6                 and     edx, 0FFFFFFFCh
.text:0040E4E9                 sub     [esp+1Ch+var_14], ecx
.text:0040E4ED                 cmp     eax, 1
.text:0040E4F0                 mov     [esp+1Ch+var_18], ecx
.text:0040E4F4                 jz      loc_40E5E0
.text:0040E4FA                 cmp     eax, 1
.text:0040E4FD                 jb      loc_40E5D0
.text:0040E503                 cmp     eax, 2
.text:0040E506                 jz      loc_40E5B4
.text:0040E50C                 cmp     eax, 3
.text:0040E50F                 jz      loc_40E5A3
.text:0040E515
.text:0040E515 loc_40E515:                             ; CODE XREF: sub_40E4C0+C7↓j
.text:0040E515                                         ; sub_40E4C0+12C↓j
.text:0040E515                 movzx   ecx, byte ptr [esp+1Ch+var_18]
.text:0040E51A                 mov     eax, edi
.text:0040E51C                 mov     ebx, [edx]
.text:0040E51E                 shr     ebp, cl
.text:0040E520                 movzx   ecx, byte ptr [esp+1Ch+var_14]
.text:0040E525                 shl     eax, cl
.text:0040E527                 or      ebp, eax
.text:0040E529                 mov     [esi], ebp
.text:0040E52B
.text:0040E52B loc_40E52B:                             ; CODE XREF: sub_40E4C0+11B↓j
.text:0040E52B                 mov     ecx, [edx+4]
.text:0040E52E                 mov     ebp, ebx
.text:0040E530                 mov     [esp+1Ch+var_1C], ecx
.text:0040E533                 movzx   ecx, byte ptr [esp+1Ch+var_18]
.text:0040E538                 shr     edi, cl
.text:0040E53A                 movzx   ecx, byte ptr [esp+1Ch+var_14]
.text:0040E53F                 shl     ebp, cl
.text:0040E541                 or      edi, ebp
.text:0040E543                 mov     [esi+4], edi
.text:0040E546
.text:0040E546 loc_40E546:                             ; CODE XREF: sub_40E4C0+F2↓j
.text:0040E546                 movzx   ecx, byte ptr [esp+1Ch+var_18]
.text:0040E54B                 mov     edi, [esp+1Ch+var_1C]
.text:0040E54E                 mov     ebp, [edx+8]
.text:0040E551                 shr     ebx, cl
.text:0040E553                 movzx   ecx, byte ptr [esp+1Ch+var_14]
.text:0040E558                 shl     edi, cl
.text:0040E55A                 or      ebx, edi
.text:0040E55C                 mov     [esi+8], ebx
.text:0040E55F
.text:0040E55F loc_40E55F:                             ; CODE XREF: sub_40E4C0+107↓j
.text:0040E55F                 movzx   ecx, byte ptr [esp+1Ch+var_18]
.text:0040E564                 mov     ebx, ebp
.text:0040E566                 mov     edi, [edx+0Ch]
.text:0040E569                 add     edx, 10h
.text:0040E56C                 shr     [esp+1Ch+var_1C], cl
.text:0040E56F                 movzx   ecx, byte ptr [esp+1Ch+var_14]
.text:0040E574                 shl     ebx, cl
.text:0040E576                 or      [esp+1Ch+var_1C], ebx
.text:0040E579                 mov     ebx, [esp+1Ch+var_1C]
.text:0040E57C                 mov     [esi+0Ch], ebx
.text:0040E57F                 add     esi, 10h
.text:0040E582                 sub     [esp+1Ch+arg_8], 4
.text:0040E587                 jnz     short loc_40E515
.text:0040E589                 movzx   ecx, byte ptr [esp+1Ch+var_18]
.text:0040E58E                 shr     ebp, cl
.text:0040E590                 movzx   ecx, byte ptr [esp+1Ch+var_14]
.text:0040E595                 shl     edi, cl
.text:0040E597                 or      ebp, edi
.text:0040E599                 mov     [esi], ebp
.text:0040E59B                 add     esp, 0Ch
.text:0040E59E                 pop     ebx
.text:0040E59F                 pop     esi
.text:0040E5A0                 pop     edi
.text:0040E5A1                 pop     ebp
.text:0040E5A2                 retn
.text:0040E5A3 ; ---------------------------------------------------------------------------
.text:0040E5A3
.text:0040E5A3 loc_40E5A3:                             ; CODE XREF: sub_40E4C0+4F↑j
.text:0040E5A3                 inc     [esp+1Ch+arg_8]
.text:0040E5A7                 sub     esi, 8
.text:0040E5AA                 mov     eax, [edx+4]
.text:0040E5AD                 mov     ebx, [edx]
.text:0040E5AF                 mov     [esp+1Ch+var_1C], eax
.text:0040E5B2                 jmp     short loc_40E546
.text:0040E5B4 ; ---------------------------------------------------------------------------
.text:0040E5B4
.text:0040E5B4 loc_40E5B4:                             ; CODE XREF: sub_40E4C0+46↑j
.text:0040E5B4                 add     [esp+1Ch+arg_8], 2
.text:0040E5B9                 sub     esi, 0Ch
.text:0040E5BC                 mov     ecx, [edx]
.text:0040E5BE                 mov     ebp, [edx+4]
.text:0040E5C1                 sub     edx, 4
.text:0040E5C4                 mov     [esp+1Ch+var_1C], ecx
.text:0040E5C7                 jmp     short loc_40E55F
.text:0040E5C7 ; ---------------------------------------------------------------------------
.text:0040E5C9                 align 10h
.text:0040E5D0
.text:0040E5D0 loc_40E5D0:                             ; CODE XREF: sub_40E4C0+3D↑j
.text:0040E5D0                 mov     edi, [edx]
.text:0040E5D2                 sub     esi, 4
.text:0040E5D5                 mov     ebx, [edx+4]
.text:0040E5D8                 add     edx, 4
.text:0040E5DB                 jmp     loc_40E52B
.text:0040E5E0 ; ---------------------------------------------------------------------------
.text:0040E5E0
.text:0040E5E0 loc_40E5E0:                             ; CODE XREF: sub_40E4C0+34↑j
.text:0040E5E0                 dec     [esp+1Ch+arg_8]
.text:0040E5E4                 mov     ebp, [edx]
.text:0040E5E6                 mov     edi, [edx+4]
.text:0040E5E9                 add     edx, 8
.text:0040E5EC                 jmp     loc_40E515
.text:0040E5EC sub_40E4C0      endp
.text:0040E5EC
.text:0040E5F1 ; ---------------------------------------------------------------------------
.text:0040E5F1                 jmp     short loc_40E600
.text:0040E5F1 ; ---------------------------------------------------------------------------
.text:0040E5F3                 align 10h
.text:0040E600
.text:0040E600 loc_40E600:                             ; CODE XREF: .text:0040E5F1↑j
.text:0040E600                 sub     esp, 8
.text:0040E603                 mov     ecx, [esp+0Ch]
.text:0040E607                 mov     [esp+4], esi
.text:0040E60B                 mov     esi, [esp+14h]
.text:0040E60F                 mov     [esp], ebx
.text:0040E612                 mov     edx, [esp+10h]
.text:0040E616                 mov     eax, esi
.text:0040E618                 and     eax, 7
.text:0040E61B                 cmp     eax, 7          ; switch 8 cases
.text:0040E61E                 ja      short def_40E620 ; jumptable 0040E620 default case
.text:0040E620                 jmp     ds:jpt_40E620[eax*4] ; switch jump
.text:0040E620 ; ---------------------------------------------------------------------------
.text:0040E627                 align 4
.text:0040E628 jpt_40E620      dd offset loc_40E6AC    ; DATA XREF: .text:0040E620↑r
.text:0040E628                 dd offset loc_40E6B7    ; jump table for switch statement
.text:0040E628                 dd offset loc_40E648
.text:0040E628                 dd offset loc_40E6C3
.text:0040E628                 dd offset loc_40E6D1
.text:0040E628                 dd offset loc_40E6DF
.text:0040E628                 dd offset loc_40E6ED
.text:0040E628                 dd offset loc_40E6FB
.text:0040E648 ; ---------------------------------------------------------------------------
.text:0040E648
.text:0040E648 loc_40E648:                             ; CODE XREF: .text:0040E620↑j
.text:0040E648                                         ; DATA XREF: .text:jpt_40E620↑o
.text:0040E648                 sub     edx, 8          ; jumptable 0040E620 case 2
.text:0040E64B                 sub     ecx, 4
.text:0040E64E                 mov     eax, [edx+4]
.text:0040E651                 add     esi, 6
.text:0040E654                 lea     esi, [esi+0]
.text:0040E65A                 lea     edi, [edi+0]
.text:0040E660
.text:0040E660 loc_40E660:                             ; CODE XREF: .text:0040E6AA↓j
.text:0040E660                 mov     ebx, [edx]
.text:0040E662                 sub     edx, 20h ; ' '
.text:0040E665                 mov     [ecx], eax
.text:0040E667                 sub     ecx, 20h ; ' '
.text:0040E66A                 sub     esi, 8
.text:0040E66D                 jnz     short def_40E620 ; jumptable 0040E620 default case
.text:0040E66F                 mov     [ecx+1Ch], ebx
.text:0040E672                 mov     ebx, [esp]
.text:0040E675                 mov     esi, [esp+4]
.text:0040E679                 add     esp, 8
.text:0040E67C                 retn
.text:0040E67C ; ---------------------------------------------------------------------------
.text:0040E67D                 align 10h
.text:0040E680
.text:0040E680 def_40E620:                             ; CODE XREF: .text:0040E61E↑j
.text:0040E680                                         ; .text:0040E66D↑j ...
.text:0040E680                 mov     eax, [edx+1Ch]  ; jumptable 0040E620 default case
.text:0040E683                 mov     [ecx+1Ch], ebx
.text:0040E686
.text:0040E686 loc_40E686:                             ; CODE XREF: .text:0040E6B5↓j
.text:0040E686                 mov     ebx, [edx+18h]
.text:0040E689                 mov     [ecx+18h], eax
.text:0040E68C
.text:0040E68C loc_40E68C:                             ; CODE XREF: .text:0040E705↓j
.text:0040E68C                 mov     eax, [edx+14h]
.text:0040E68F                 mov     [ecx+14h], ebx
.text:0040E692
.text:0040E692 loc_40E692:                             ; CODE XREF: .text:0040E6F9↓j
.text:0040E692                 mov     ebx, [edx+10h]
.text:0040E695                 mov     [ecx+10h], eax
.text:0040E698
.text:0040E698 loc_40E698:                             ; CODE XREF: .text:0040E6EB↓j
.text:0040E698                 mov     eax, [edx+0Ch]
.text:0040E69B                 mov     [ecx+0Ch], ebx
.text:0040E69E
.text:0040E69E loc_40E69E:                             ; CODE XREF: .text:0040E6DD↓j
.text:0040E69E                 mov     ebx, [edx+8]
.text:0040E6A1                 mov     [ecx+8], eax
.text:0040E6A4
.text:0040E6A4 loc_40E6A4:                             ; CODE XREF: .text:0040E6CF↓j
.text:0040E6A4                 mov     eax, [edx+4]
.text:0040E6A7                 mov     [ecx+4], ebx
.text:0040E6AA                 jmp     short loc_40E660
.text:0040E6AC ; ---------------------------------------------------------------------------
.text:0040E6AC
.text:0040E6AC loc_40E6AC:                             ; CODE XREF: .text:0040E620↑j
.text:0040E6AC                                         ; DATA XREF: .text:jpt_40E620↑o
.text:0040E6AC                 sub     edx, 20h ; ' '  ; jumptable 0040E620 case 0
.text:0040E6AF                 sub     ecx, 1Ch
.text:0040E6B2                 mov     eax, [edx+1Ch]
.text:0040E6B5                 jmp     short loc_40E686
.text:0040E6B7 ; ---------------------------------------------------------------------------
.text:0040E6B7
.text:0040E6B7 loc_40E6B7:                             ; CODE XREF: .text:0040E620↑j
.text:0040E6B7                                         ; DATA XREF: .text:jpt_40E620↑o
.text:0040E6B7                 sub     edx, 24h ; '$'  ; jumptable 0040E620 case 1
.text:0040E6BA                 sub     ecx, 20h ; ' '
.text:0040E6BD                 mov     ebx, [edx+20h]
.text:0040E6C0                 dec     esi
.text:0040E6C1                 jmp     short def_40E620 ; jumptable 0040E620 default case
.text:0040E6C3 ; ---------------------------------------------------------------------------
.text:0040E6C3
.text:0040E6C3 loc_40E6C3:                             ; CODE XREF: .text:0040E620↑j
.text:0040E6C3                                         ; DATA XREF: .text:jpt_40E620↑o
.text:0040E6C3                 sub     edx, 0Ch        ; jumptable 0040E620 case 3
.text:0040E6C6                 sub     ecx, 8
.text:0040E6C9                 mov     ebx, [edx+8]
.text:0040E6CC                 add     esi, 5
.text:0040E6CF                 jmp     short loc_40E6A4
.text:0040E6D1 ; ---------------------------------------------------------------------------
.text:0040E6D1
.text:0040E6D1 loc_40E6D1:                             ; CODE XREF: .text:0040E620↑j
.text:0040E6D1                                         ; DATA XREF: .text:jpt_40E620↑o
.text:0040E6D1                 sub     edx, 10h        ; jumptable 0040E620 case 4
.text:0040E6D4                 sub     ecx, 0Ch
.text:0040E6D7                 mov     eax, [edx+0Ch]
.text:0040E6DA                 add     esi, 4
.text:0040E6DD                 jmp     short loc_40E69E
.text:0040E6DF ; ---------------------------------------------------------------------------
.text:0040E6DF
.text:0040E6DF loc_40E6DF:                             ; CODE XREF: .text:0040E620↑j
.text:0040E6DF                                         ; DATA XREF: .text:jpt_40E620↑o
.text:0040E6DF                 sub     edx, 14h        ; jumptable 0040E620 case 5
.text:0040E6E2                 sub     ecx, 10h
.text:0040E6E5                 mov     ebx, [edx+10h]
.text:0040E6E8                 add     esi, 3
.text:0040E6EB                 jmp     short loc_40E698
.text:0040E6ED ; ---------------------------------------------------------------------------
.text:0040E6ED
.text:0040E6ED loc_40E6ED:                             ; CODE XREF: .text:0040E620↑j
.text:0040E6ED                                         ; DATA XREF: .text:jpt_40E620↑o
.text:0040E6ED                 sub     edx, 18h        ; jumptable 0040E620 case 6
.text:0040E6F0                 sub     ecx, 14h
.text:0040E6F3                 mov     eax, [edx+14h]
.text:0040E6F6                 add     esi, 2
.text:0040E6F9                 jmp     short loc_40E692
.text:0040E6FB ; ---------------------------------------------------------------------------
.text:0040E6FB
.text:0040E6FB loc_40E6FB:                             ; CODE XREF: .text:0040E620↑j
.text:0040E6FB                                         ; DATA XREF: .text:jpt_40E620↑o
.text:0040E6FB                 sub     edx, 1Ch        ; jumptable 0040E620 case 7
.text:0040E6FE                 sub     ecx, 18h
.text:0040E701                 mov     ebx, [edx+18h]
.text:0040E704                 inc     esi
.text:0040E705                 jmp     short loc_40E68C
.text:0040E705 ; ---------------------------------------------------------------------------
.text:0040E707                 align 10h
.text:0040E710                 push    ebp
.text:0040E711                 push    edi
.text:0040E712                 push    esi
.text:0040E713                 push    ebx
.text:0040E714                 sub     esp, 8
.text:0040E717                 mov     edx, [esp+20h]
.text:0040E71B                 mov     dword ptr [esp+4], 20h ; ' '
.text:0040E723                 mov     eax, [esp+24h]
.text:0040E727                 mov     ecx, edx
.text:0040E729                 and     ecx, 3
.text:0040E72C                 and     eax, 3
.text:0040E72F                 shl     ecx, 3
.text:0040E732                 sub     [esp+4], ecx
.text:0040E736                 and     edx, 0FFFFFFFCh
.text:0040E739                 add     edx, 4
.text:0040E73C                 mov     [esp], ecx
.text:0040E73F                 cmp     eax, 1
.text:0040E742                 jz      loc_40E838
.text:0040E748                 cmp     eax, 1
.text:0040E74B                 jb      loc_40E825
.text:0040E751                 cmp     eax, 2
.text:0040E754                 jz      loc_40E810
.text:0040E75A                 cmp     eax, 3
.text:0040E75D                 jz      loc_40E7FC
.text:0040E763
.text:0040E763 loc_40E763:                             ; CODE XREF: .text:0040E7DC↓j
.text:0040E763                                         ; .text:0040E84A↓j
.text:0040E763                 movzx   ecx, byte ptr [esp]
.text:0040E767                 mov     eax, edi
.text:0040E769                 mov     ebx, [esp+1Ch]
.text:0040E76D                 mov     esi, [edx+0Ch]
.text:0040E770                 shr     eax, cl
.text:0040E772                 movzx   ecx, byte ptr [esp+4]
.text:0040E777                 shl     ebp, cl
.text:0040E779                 or      eax, ebp
.text:0040E77B                 mov     [ebx+0Ch], eax
.text:0040E77E
.text:0040E77E loc_40E77E:                             ; CODE XREF: .text:0040E833↓j
.text:0040E77E                 movzx   ecx, byte ptr [esp]
.text:0040E782                 mov     ebp, esi
.text:0040E784                 mov     ebx, [edx+8]
.text:0040E787                 shr     ebp, cl
.text:0040E789                 movzx   ecx, byte ptr [esp+4]
.text:0040E78E                 shl     edi, cl
.text:0040E790                 or      ebp, edi
.text:0040E792                 mov     edi, [esp+1Ch]
.text:0040E796                 mov     [edi+8], ebp
.text:0040E799
.text:0040E799 loc_40E799:                             ; CODE XREF: .text:0040E80E↓j
.text:0040E799                 movzx   ecx, byte ptr [esp]
.text:0040E79D                 mov     edi, ebx
.text:0040E79F                 mov     ebp, [edx+4]
.text:0040E7A2                 shr     edi, cl
.text:0040E7A4                 movzx   ecx, byte ptr [esp+4]
.text:0040E7A9                 shl     esi, cl
.text:0040E7AB                 or      edi, esi
.text:0040E7AD                 mov     esi, [esp+1Ch]
.text:0040E7B1                 mov     [esi+4], edi
.text:0040E7B4
.text:0040E7B4 loc_40E7B4:                             ; CODE XREF: .text:0040E823↓j
.text:0040E7B4                 movzx   ecx, byte ptr [esp]
.text:0040E7B8                 mov     esi, ebp
.text:0040E7BA                 mov     edi, [edx]
.text:0040E7BC                 sub     edx, 10h
.text:0040E7BF                 shr     esi, cl
.text:0040E7C1                 movzx   ecx, byte ptr [esp+4]
.text:0040E7C6                 shl     ebx, cl
.text:0040E7C8                 or      esi, ebx
.text:0040E7CA                 mov     ebx, [esp+1Ch]
.text:0040E7CE                 mov     [ebx], esi
.text:0040E7D0                 sub     ebx, 10h
.text:0040E7D3                 sub     dword ptr [esp+24h], 4
.text:0040E7D8                 mov     [esp+1Ch], ebx
.text:0040E7DC                 jnz     short loc_40E763
.text:0040E7DE                 movzx   ecx, byte ptr [esp]
.text:0040E7E2                 mov     edx, [esp+1Ch]
.text:0040E7E6                 shr     edi, cl
.text:0040E7E8                 movzx   ecx, byte ptr [esp+4]
.text:0040E7ED                 shl     ebp, cl
.text:0040E7EF                 or      edi, ebp
.text:0040E7F1                 mov     [edx+0Ch], edi
.text:0040E7F4                 add     esp, 8
.text:0040E7F7                 pop     ebx
.text:0040E7F8                 pop     esi
.text:0040E7F9                 pop     edi
.text:0040E7FA                 pop     ebp
.text:0040E7FB                 retn
.text:0040E7FC ; ---------------------------------------------------------------------------
.text:0040E7FC
.text:0040E7FC loc_40E7FC:                             ; CODE XREF: .text:0040E75D↑j
.text:0040E7FC                 sub     dword ptr [esp+1Ch], 8
.text:0040E801                 sub     edx, 10h
.text:0040E804                 inc     dword ptr [esp+24h]
.text:0040E808                 mov     esi, [edx+0Ch]
.text:0040E80B                 mov     ebx, [edx+8]
.text:0040E80E                 jmp     short loc_40E799
.text:0040E810 ; ---------------------------------------------------------------------------
.text:0040E810
.text:0040E810 loc_40E810:                             ; CODE XREF: .text:0040E754↑j
.text:0040E810                 sub     dword ptr [esp+1Ch], 4
.text:0040E815                 sub     edx, 0Ch
.text:0040E818                 add     dword ptr [esp+24h], 2
.text:0040E81D                 mov     ebx, [edx+8]
.text:0040E820                 mov     ebp, [edx+4]
.text:0040E823                 jmp     short loc_40E7B4
.text:0040E825 ; ---------------------------------------------------------------------------
.text:0040E825
.text:0040E825 loc_40E825:                             ; CODE XREF: .text:0040E74B↑j
.text:0040E825                 sub     dword ptr [esp+1Ch], 0Ch
.text:0040E82A                 sub     edx, 14h
.text:0040E82D                 mov     edi, [edx+10h]
.text:0040E830                 mov     esi, [edx+0Ch]
.text:0040E833                 jmp     loc_40E77E
.text:0040E838 ; ---------------------------------------------------------------------------
.text:0040E838
.text:0040E838 loc_40E838:                             ; CODE XREF: .text:0040E742↑j
.text:0040E838                 sub     dword ptr [esp+1Ch], 10h
.text:0040E83D                 sub     edx, 18h
.text:0040E840                 dec     dword ptr [esp+24h]
.text:0040E844                 mov     ebp, [edx+14h]
.text:0040E847                 mov     edi, [edx+10h]
.text:0040E84A                 jmp     loc_40E763
.text:0040E84A ; ---------------------------------------------------------------------------
.text:0040E84F                 align 10h
.text:0040E850
.text:0040E850 ; =============== S U B R O U T I N E =======================================
.text:0040E850
.text:0040E850 ; Attributes: thunk
.text:0040E850
.text:0040E850 ; wint_t __cdecl btowc(int Ch)
.text:0040E850 btowc           proc near               ; CODE XREF: sub_406090+1F73↑p
.text:0040E850                 jmp     ds:__imp_btowc
.text:0040E850 btowc           endp
.text:0040E850
.text:0040E850 ; ---------------------------------------------------------------------------
.text:0040E856                 align 10h
.text:0040E860
.text:0040E860 ; =============== S U B R O U T I N E =======================================
.text:0040E860
.text:0040E860 ; Attributes: thunk
.text:0040E860
.text:0040E860 ; wctype_t __cdecl wctype(const char *name)
.text:0040E860 wctype          proc near               ; CODE XREF: sub_406090+1F29↑p
.text:0040E860
.text:0040E860 name            = dword ptr  4
.text:0040E860
.text:0040E860                 jmp     ds:__imp_wctype
.text:0040E860 wctype          endp
.text:0040E860
.text:0040E860 ; ---------------------------------------------------------------------------
.text:0040E866                 align 10h
.text:0040E870
.text:0040E870 ; =============== S U B R O U T I N E =======================================
.text:0040E870
.text:0040E870 ; Attributes: thunk
.text:0040E870
.text:0040E870 ; size_t __cdecl mbrtowc(wchar_t *DstCh, const char *SrcCh, size_t SizeInBytes, mbstate_t *State)
.text:0040E870 mbrtowc         proc near               ; CODE XREF: sub_40CCC0+757↑p
.text:0040E870
.text:0040E870 DstCh           = dword ptr  4
.text:0040E870 SrcCh           = dword ptr  8
.text:0040E870 SizeInBytes     = dword ptr  0Ch
.text:0040E870 State           = dword ptr  10h
.text:0040E870
.text:0040E870                 jmp     ds:__imp_mbrtowc
.text:0040E870 mbrtowc         endp
.text:0040E870
.text:0040E870 ; ---------------------------------------------------------------------------
.text:0040E876                 align 10h
.text:0040E880
.text:0040E880 ; =============== S U B R O U T I N E =======================================
.text:0040E880
.text:0040E880 ; Attributes: bp-based frame
.text:0040E880
.text:0040E880 sub_40E880      proc near               ; CODE XREF: sub_401080+C2↑p
.text:0040E880                 push    ebp
.text:0040E881                 mov     ecx, offset dword_411000
.text:0040E886                 cmp     ecx, offset dword_411000
.text:0040E88C                 mov     ebp, esp
.text:0040E88E                 jnb     short loc_40E8A6
.text:0040E890
.text:0040E890 loc_40E890:                             ; CODE XREF: sub_40E880+24↓j
.text:0040E890                 mov     edx, [ecx+4]
.text:0040E893                 mov     eax, [ecx]
.text:0040E895                 add     ecx, 8
.text:0040E898                 add     [edx+400000h], eax
.text:0040E89E                 cmp     ecx, offset dword_411000
.text:0040E8A4                 jb      short loc_40E890
.text:0040E8A6
.text:0040E8A6 loc_40E8A6:                             ; CODE XREF: sub_40E880+E↑j
.text:0040E8A6                 pop     ebp
.text:0040E8A7                 retn
.text:0040E8A7 sub_40E880      endp
.text:0040E8A7
.text:0040E8A7 ; ---------------------------------------------------------------------------
.text:0040E8A8                 align 10h
.text:0040E8B0
.text:0040E8B0 ; =============== S U B R O U T I N E =======================================
.text:0040E8B0
.text:0040E8B0 ; Attributes: bp-based frame
.text:0040E8B0
.text:0040E8B0 sub_40E8B0      proc near               ; CODE XREF: sub_401080+16↑p
.text:0040E8B0                                         ; TopLevelExceptionFilter+D7↑p
.text:0040E8B0                 push    ebp
.text:0040E8B1                 mov     ebp, esp
.text:0040E8B3                 fninit
.text:0040E8B5                 pop     ebp
.text:0040E8B6                 retn
.text:0040E8B6 sub_40E8B0      endp
.text:0040E8B6
.text:0040E8B6 ; ---------------------------------------------------------------------------
.text:0040E8B7                 align 10h
.text:0040E8C0
.text:0040E8C0 ; =============== S U B R O U T I N E =======================================
.text:0040E8C0
.text:0040E8C0 ; Attributes: bp-based frame
.text:0040E8C0
.text:0040E8C0 ; void __cdecl sub_40E8C0()
.text:0040E8C0 sub_40E8C0      proc near               ; DATA XREF: .text:loc_40E909↓o
.text:0040E8C0                                         ; sub_40E950:loc_40E97E↓o
.text:0040E8C0                 push    ebp
.text:0040E8C1                 mov     ebp, esp
.text:0040E8C3                 sub     esp, 8
.text:0040E8C6                 mov     eax, off_4100D4
.text:0040E8CB                 mov     edx, [eax]
.text:0040E8CD                 test    edx, edx
.text:0040E8CF                 jnz     short loc_40E8D5
.text:0040E8D1
.text:0040E8D1 loc_40E8D1:                             ; CODE XREF: sub_40E8C0+2C↓j
.text:0040E8D1                 mov     esp, ebp
.text:0040E8D3                 pop     ebp
.text:0040E8D4                 retn
.text:0040E8D5 ; ---------------------------------------------------------------------------
.text:0040E8D5
.text:0040E8D5 loc_40E8D5:                             ; CODE XREF: sub_40E8C0+F↑j
.text:0040E8D5                                         ; sub_40E8C0+2A↓j
.text:0040E8D5                 call    dword ptr [eax]
.text:0040E8D7                 mov     edx, off_4100D4
.text:0040E8DD                 mov     ecx, [edx+4]
.text:0040E8E0                 lea     eax, [edx+4]
.text:0040E8E3                 mov     off_4100D4, eax
.text:0040E8E8                 test    ecx, ecx
.text:0040E8EA                 jnz     short loc_40E8D5
.text:0040E8EC                 jmp     short loc_40E8D1
.text:0040E8EC sub_40E8C0      endp
.text:0040E8EC
.text:0040E8EC ; ---------------------------------------------------------------------------
.text:0040E8EE                 align 10h
.text:0040E8F0                 push    ebp
.text:0040E8F1                 mov     ebp, esp
.text:0040E8F3                 sub     esp, 8
.text:0040E8F6                 mov     [ebp-4], ebx
.text:0040E8F9                 mov     eax, ds:dword_40F280
.text:0040E8FE                 cmp     eax, 0FFFFFFFFh
.text:0040E901                 jz      short loc_40E92C
.text:0040E903
.text:0040E903 loc_40E903:                             ; CODE XREF: .text:0040E936↓j
.text:0040E903                                         ; .text:0040E949↓j
.text:0040E903                 test    eax, eax
.text:0040E905                 mov     ebx, eax
.text:0040E907                 jnz     short loc_40E920
.text:0040E909
.text:0040E909 loc_40E909:                             ; CODE XREF: .text:0040E92A↓j
.text:0040E909                 mov     dword ptr [esp], offset sub_40E8C0
.text:0040E910                 call    sub_401040
.text:0040E915                 mov     ebx, [ebp-4]
.text:0040E918                 mov     esp, ebp
.text:0040E91A                 pop     ebp
.text:0040E91B                 retn
.text:0040E91B ; ---------------------------------------------------------------------------
.text:0040E91C                 align 10h
.text:0040E920
.text:0040E920 loc_40E920:                             ; CODE XREF: .text:0040E907↑j
.text:0040E920                                         ; .text:0040E928↓j
.text:0040E920                 call    ds:dword_40F280[ebx*4]
.text:0040E927                 dec     ebx
.text:0040E928                 jnz     short loc_40E920
.text:0040E92A                 jmp     short loc_40E909
.text:0040E92C ; ---------------------------------------------------------------------------
.text:0040E92C
.text:0040E92C loc_40E92C:                             ; CODE XREF: .text:0040E901↑j
.text:0040E92C                 mov     ecx, ds:dword_40F284
.text:0040E932                 xor     eax, eax
.text:0040E934                 test    ecx, ecx
.text:0040E936                 jz      short loc_40E903
.text:0040E938                 mov     edx, offset dword_40F280
.text:0040E93D                 lea     esi, [esi+0]
.text:0040E940
.text:0040E940 loc_40E940:                             ; CODE XREF: .text:0040E947↓j
.text:0040E940                 inc     eax
.text:0040E941                 mov     ecx, [edx+eax*4+4]
.text:0040E945                 test    ecx, ecx
.text:0040E947                 jnz     short loc_40E940
.text:0040E949                 jmp     short loc_40E903
.text:0040E949 ; ---------------------------------------------------------------------------
.text:0040E94B                 align 10h
.text:0040E950
.text:0040E950 ; =============== S U B R O U T I N E =======================================
.text:0040E950
.text:0040E950 ; Attributes: bp-based frame
.text:0040E950
.text:0040E950 sub_40E950      proc near               ; CODE XREF: sub_401E90+13↑p
.text:0040E950
.text:0040E950 var_8           = dword ptr -8
.text:0040E950 var_4           = dword ptr -4
.text:0040E950
.text:0040E950                 push    ebp
.text:0040E951                 mov     ebp, esp
.text:0040E953                 sub     esp, 8
.text:0040E956                 mov     [ebp+var_4], ebx
.text:0040E959                 mov     edx, dword_4100D0
.text:0040E95F                 test    edx, edx
.text:0040E961                 jnz     short loc_40E98A
.text:0040E963                 mov     eax, ds:dword_40F280
.text:0040E968                 mov     edx, 1
.text:0040E96D                 mov     dword_4100D0, edx
.text:0040E973                 cmp     eax, 0FFFFFFFFh
.text:0040E976                 jz      short loc_40E99D
.text:0040E978
.text:0040E978 loc_40E978:                             ; CODE XREF: sub_40E950+57↓j
.text:0040E978                                         ; sub_40E950+69↓j
.text:0040E978                 test    eax, eax
.text:0040E97A                 mov     ebx, eax
.text:0040E97C                 jnz     short loc_40E991
.text:0040E97E
.text:0040E97E loc_40E97E:                             ; CODE XREF: sub_40E950+4B↓j
.text:0040E97E                 mov     [esp+8+var_8], offset sub_40E8C0 ; void (__cdecl *)()
.text:0040E985                 call    sub_401040
.text:0040E98A
.text:0040E98A loc_40E98A:                             ; CODE XREF: sub_40E950+11↑j
.text:0040E98A                 mov     ebx, [ebp+var_4]
.text:0040E98D                 mov     esp, ebp
.text:0040E98F                 pop     ebp
.text:0040E990                 retn
.text:0040E991 ; ---------------------------------------------------------------------------
.text:0040E991
.text:0040E991 loc_40E991:                             ; CODE XREF: sub_40E950+2C↑j
.text:0040E991                                         ; sub_40E950+49↓j
.text:0040E991                 call    ds:dword_40F280[ebx*4]
.text:0040E998                 dec     ebx
.text:0040E999                 jnz     short loc_40E991
.text:0040E99B                 jmp     short loc_40E97E
.text:0040E99D ; ---------------------------------------------------------------------------
.text:0040E99D
.text:0040E99D loc_40E99D:                             ; CODE XREF: sub_40E950+26↑j
.text:0040E99D                 mov     ecx, ds:dword_40F284
.text:0040E9A3                 xor     eax, eax
.text:0040E9A5                 test    ecx, ecx
.text:0040E9A7                 jz      short loc_40E978
.text:0040E9A9                 mov     edx, offset dword_40F280
.text:0040E9AE                 mov     esi, esi
.text:0040E9B0
.text:0040E9B0 loc_40E9B0:                             ; CODE XREF: sub_40E950+67↓j
.text:0040E9B0                 inc     eax
.text:0040E9B1                 mov     ebx, [edx+eax*4+4]
.text:0040E9B5                 test    ebx, ebx
.text:0040E9B7                 jnz     short loc_40E9B0
.text:0040E9B9                 jmp     short loc_40E978
.text:0040E9B9 sub_40E950      endp
.text:0040E9B9
.text:0040E9B9 ; ---------------------------------------------------------------------------
.text:0040E9BB                 align 10h
.text:0040E9C0
.text:0040E9C0 ; =============== S U B R O U T I N E =======================================
.text:0040E9C0
.text:0040E9C0 ; Attributes: info_from_lumina
.text:0040E9C0
.text:0040E9C0 ; void *__cdecl _alloca(size_t Size)
.text:0040E9C0 __alloca        proc near               ; CODE XREF: sub_401E90+E↑p
.text:0040E9C0                 push    ecx
.text:0040E9C1                 mov     ecx, esp
.text:0040E9C3                 add     ecx, 8
.text:0040E9C6
.text:0040E9C6 loc_40E9C6:                             ; CODE XREF: __alloca+1B↓j
.text:0040E9C6                 cmp     eax, 1000h
.text:0040E9CB                 jb      short loc_40E9DD
.text:0040E9CD                 sub     ecx, 1000h
.text:0040E9D3                 or      dword ptr [ecx], 0
.text:0040E9D6                 sub     eax, 1000h
.text:0040E9DB                 jmp     short loc_40E9C6
.text:0040E9DD ; ---------------------------------------------------------------------------
.text:0040E9DD
.text:0040E9DD loc_40E9DD:                             ; CODE XREF: __alloca+B↑j
.text:0040E9DD                 sub     ecx, eax
.text:0040E9DF                 or      dword ptr [ecx], 0
.text:0040E9E2                 mov     eax, esp
.text:0040E9E4                 mov     esp, ecx
.text:0040E9E6                 mov     ecx, [eax]
.text:0040E9E8                 mov     eax, [eax+4]
.text:0040E9EB                 jmp     eax
.text:0040E9EB __alloca        endp
.text:0040E9EB
.text:0040E9EB ; ---------------------------------------------------------------------------
.text:0040E9ED                 align 10h
.text:0040E9F0
.text:0040E9F0 ; =============== S U B R O U T I N E =======================================
.text:0040E9F0
.text:0040E9F0 ; Attributes: bp-based frame
.text:0040E9F0
.text:0040E9F0 sub_40E9F0      proc near               ; CODE XREF: sub_40B7E0+24F↑p
.text:0040E9F0                                         ; sub_40B7E0+293↑p ...
.text:0040E9F0
.text:0040E9F0 var_2C          = dword ptr -2Ch
.text:0040E9F0 var_28          = dword ptr -28h
.text:0040E9F0 var_24          = dword ptr -24h
.text:0040E9F0 var_20          = dword ptr -20h
.text:0040E9F0 var_1C          = dword ptr -1Ch
.text:0040E9F0 var_14          = dword ptr -14h
.text:0040E9F0 arg_0           = dword ptr  8
.text:0040E9F0 arg_4           = dword ptr  0Ch
.text:0040E9F0 arg_8           = dword ptr  10h
.text:0040E9F0 arg_C           = dword ptr  14h
.text:0040E9F0
.text:0040E9F0                 push    ebp
.text:0040E9F1                 mov     ebp, esp
.text:0040E9F3                 push    edi
.text:0040E9F4                 push    esi
.text:0040E9F5                 push    ebx
.text:0040E9F6                 sub     esp, 24h
.text:0040E9F9                 mov     ebx, [ebp+arg_4]
.text:0040E9FC                 mov     [ebp+var_20], 0
.text:0040EA03                 mov     ecx, [ebp+arg_0]
.text:0040EA06                 mov     eax, [ebp+arg_8]
.text:0040EA09                 mov     [ebp+var_1C], 0
.text:0040EA10                 test    ebx, ebx
.text:0040EA12                 mov     edx, [ebp+arg_C]
.text:0040EA15                 mov     [ebp+var_14], 0
.text:0040EA1C                 js      loc_40EB30
.text:0040EA22
.text:0040EA22 loc_40EA22:                             ; CODE XREF: sub_40E9F0+14E↓j
.text:0040EA22                 test    edx, edx
.text:0040EA24                 js      loc_40EB20
.text:0040EA2A
.text:0040EA2A loc_40EA2A:                             ; CODE XREF: sub_40E9F0+13A↓j
.text:0040EA2A                 mov     [ebp+var_24], ecx
.text:0040EA2D                 test    edx, edx
.text:0040EA2F                 mov     esi, eax
.text:0040EA31                 jnz     short loc_40EA86
.text:0040EA33                 cmp     eax, ebx
.text:0040EA35                 jbe     short loc_40EA64
.text:0040EA37                 mov     eax, ecx
.text:0040EA39                 mov     edx, ebx
.text:0040EA3B                 div     esi
.text:0040EA3D                 mov     edi, eax
.text:0040EA3F                 nop
.text:0040EA40
.text:0040EA40 loc_40EA40:                             ; CODE XREF: sub_40E9F0+9C↓j
.text:0040EA40                                         ; sub_40E9F0+B4↓j ...
.text:0040EA40                 xor     ecx, ecx
.text:0040EA42
.text:0040EA42 loc_40EA42:                             ; CODE XREF: sub_40E9F0+94↓j
.text:0040EA42                 mov     [ebp+var_1C], ecx
.text:0040EA45                 mov     ecx, [ebp+var_14]
.text:0040EA48                 mov     [ebp+var_20], edi
.text:0040EA4B                 mov     eax, [ebp+var_20]
.text:0040EA4E                 mov     edx, [ebp+var_1C]
.text:0040EA51                 test    ecx, ecx
.text:0040EA53                 jz      short loc_40EA5C
.text:0040EA55                 neg     eax
.text:0040EA57                 adc     edx, 0
.text:0040EA5A                 neg     edx
.text:0040EA5C
.text:0040EA5C loc_40EA5C:                             ; CODE XREF: sub_40E9F0+63↑j
.text:0040EA5C                 add     esp, 24h
.text:0040EA5F                 pop     ebx
.text:0040EA60                 pop     esi
.text:0040EA61                 pop     edi
.text:0040EA62                 pop     ebp
.text:0040EA63                 retn
.text:0040EA64 ; ---------------------------------------------------------------------------
.text:0040EA64
.text:0040EA64 loc_40EA64:                             ; CODE XREF: sub_40E9F0+45↑j
.text:0040EA64                 test    eax, eax
.text:0040EA66                 jnz     short loc_40EA75
.text:0040EA68                 mov     eax, 1
.text:0040EA6D                 xor     ecx, ecx
.text:0040EA6F                 xor     edx, edx
.text:0040EA71                 div     ecx
.text:0040EA73                 mov     esi, eax
.text:0040EA75
.text:0040EA75 loc_40EA75:                             ; CODE XREF: sub_40E9F0+76↑j
.text:0040EA75                 mov     eax, ebx
.text:0040EA77                 xor     edx, edx
.text:0040EA79                 div     esi
.text:0040EA7B                 mov     ecx, eax
.text:0040EA7D                 mov     eax, [ebp+var_24]
.text:0040EA80                 div     esi
.text:0040EA82                 mov     edi, eax
.text:0040EA84                 jmp     short loc_40EA42
.text:0040EA86 ; ---------------------------------------------------------------------------
.text:0040EA86
.text:0040EA86 loc_40EA86:                             ; CODE XREF: sub_40E9F0+41↑j
.text:0040EA86                 cmp     edx, ebx
.text:0040EA88                 jbe     short loc_40EA90
.text:0040EA8A                 xor     edi, edi
.text:0040EA8C                 jmp     short loc_40EA40
.text:0040EA8C ; ---------------------------------------------------------------------------
.text:0040EA8E                 align 10h
.text:0040EA90
.text:0040EA90 loc_40EA90:                             ; CODE XREF: sub_40E9F0+98↑j
.text:0040EA90                 bsr     eax, edx
.text:0040EA93                 xor     eax, 1Fh
.text:0040EA96                 mov     [ebp+var_28], eax
.text:0040EA99                 jnz     short loc_40EAB0
.text:0040EA9B                 cmp     ebx, edx
.text:0040EA9D                 ja      short loc_40EAA6
.text:0040EA9F                 xor     edi, edi
.text:0040EAA1                 cmp     [ebp+var_24], esi
.text:0040EAA4                 jb      short loc_40EA40
.text:0040EAA6
.text:0040EAA6 loc_40EAA6:                             ; CODE XREF: sub_40E9F0+AD↑j
.text:0040EAA6                 mov     edi, 1
.text:0040EAAB                 jmp     short loc_40EA40
.text:0040EAAB ; ---------------------------------------------------------------------------
.text:0040EAAD                 align 10h
.text:0040EAB0
.text:0040EAB0 loc_40EAB0:                             ; CODE XREF: sub_40E9F0+A9↑j
.text:0040EAB0                 mov     eax, [ebp+var_28]
.text:0040EAB3                 mov     ecx, 20h ; ' '
.text:0040EAB8                 sub     ecx, eax
.text:0040EABA                 mov     [ebp+var_2C], ecx
.text:0040EABD                 mov     eax, esi
.text:0040EABF                 movzx   ecx, byte ptr [ebp+var_28]
.text:0040EAC3                 shl     edx, cl
.text:0040EAC5                 mov     edi, edx
.text:0040EAC7                 movzx   ecx, byte ptr [ebp+var_2C]
.text:0040EACB                 mov     edx, ebx
.text:0040EACD                 shr     eax, cl
.text:0040EACF                 movzx   ecx, byte ptr [ebp+var_28]
.text:0040EAD3                 or      edi, eax
.text:0040EAD5                 mov     eax, [ebp+var_24]
.text:0040EAD8                 shl     esi, cl
.text:0040EADA                 movzx   ecx, byte ptr [ebp+var_2C]
.text:0040EADE                 shr     edx, cl
.text:0040EAE0                 movzx   ecx, byte ptr [ebp+var_28]
.text:0040EAE4                 shl     ebx, cl
.text:0040EAE6                 movzx   ecx, byte ptr [ebp+var_2C]
.text:0040EAEA                 shr     eax, cl
.text:0040EAEC                 or      ebx, eax
.text:0040EAEE                 movzx   ecx, byte ptr [ebp+var_28]
.text:0040EAF2                 mov     eax, ebx
.text:0040EAF4                 div     edi
.text:0040EAF6                 mov     ebx, edx
.text:0040EAF8                 mov     edi, eax
.text:0040EAFA                 shl     [ebp+var_24], cl
.text:0040EAFD                 mul     esi
.text:0040EAFF                 cmp     edx, ebx
.text:0040EB01                 ja      short loc_40EB14
.text:0040EB03                 cmp     edx, ebx
.text:0040EB05                 jnz     loc_40EA40
.text:0040EB0B                 cmp     eax, [ebp+var_24]
.text:0040EB0E                 jbe     loc_40EA40
.text:0040EB14
.text:0040EB14 loc_40EB14:                             ; CODE XREF: sub_40E9F0+111↑j
.text:0040EB14                 dec     edi
.text:0040EB15                 jmp     loc_40EA40
.text:0040EB15 ; ---------------------------------------------------------------------------
.text:0040EB1A                 align 10h
.text:0040EB20
.text:0040EB20 loc_40EB20:                             ; CODE XREF: sub_40E9F0+34↑j
.text:0040EB20                 not     [ebp+var_14]
.text:0040EB23                 neg     eax
.text:0040EB25                 adc     edx, 0
.text:0040EB28                 neg     edx
.text:0040EB2A                 jmp     loc_40EA2A
.text:0040EB2A ; ---------------------------------------------------------------------------
.text:0040EB2F                 align 10h
.text:0040EB30
.text:0040EB30 loc_40EB30:                             ; CODE XREF: sub_40E9F0+2C↑j
.text:0040EB30                 mov     [ebp+var_14], 0FFFFFFFFh
.text:0040EB37                 neg     ecx
.text:0040EB39                 adc     ebx, 0
.text:0040EB3C                 neg     ebx
.text:0040EB3E                 jmp     loc_40EA22
.text:0040EB3E sub_40E9F0      endp
.text:0040EB3E
.text:0040EB3E ; ---------------------------------------------------------------------------
.text:0040EB43                 align 10h
.text:0040EB50
.text:0040EB50 ; =============== S U B R O U T I N E =======================================
.text:0040EB50
.text:0040EB50 ; Attributes: info_from_lumina
.text:0040EB50
.text:0040EB50 ; __int64 __cdecl strtoll(const char *String, char **EndPtr, int Radix)
.text:0040EB50 _strtoll        proc near               ; CODE XREF: sub_40B7E0+56↑p
.text:0040EB50
.text:0040EB50 C               = dword ptr -3Ch
.text:0040EB50 Type            = dword ptr -38h
.text:0040EB50 var_34          = dword ptr -34h
.text:0040EB50 var_30          = dword ptr -30h
.text:0040EB50 var_2C          = dword ptr -2Ch
.text:0040EB50 var_28          = dword ptr -28h
.text:0040EB50 var_24          = dword ptr -24h
.text:0040EB50 var_20          = dword ptr -20h
.text:0040EB50 var_1C          = dword ptr -1Ch
.text:0040EB50 var_18          = dword ptr -18h
.text:0040EB50 String          = dword ptr  4
.text:0040EB50 EndPtr          = dword ptr  8
.text:0040EB50 Radix           = dword ptr  0Ch
.text:0040EB50
.text:0040EB50                 push    ebp
.text:0040EB51                 push    edi
.text:0040EB52                 push    esi
.text:0040EB53                 push    ebx
.text:0040EB54                 sub     esp, 2Ch
.text:0040EB57                 mov     edx, [esp+3Ch+EndPtr]
.text:0040EB5B                 test    edx, edx
.text:0040EB5D                 jz      short loc_40EB69
.text:0040EB5F                 mov     eax, [esp+3Ch+String]
.text:0040EB63                 mov     ecx, [esp+3Ch+EndPtr]
.text:0040EB67                 mov     [ecx], eax
.text:0040EB69
.text:0040EB69 loc_40EB69:                             ; CODE XREF: _strtoll+D↑j
.text:0040EB69                 mov     edx, [esp+3Ch+Radix]
.text:0040EB6D                 test    edx, edx
.text:0040EB6F                 js      short loc_40EB7F
.text:0040EB71                 cmp     [esp+3Ch+Radix], 1
.text:0040EB76                 jz      short loc_40EB7F
.text:0040EB78                 cmp     [esp+3Ch+Radix], 24h ; '$'
.text:0040EB7D                 jle     short loc_40EB96
.text:0040EB7F
.text:0040EB7F loc_40EB7F:                             ; CODE XREF: _strtoll+1F↑j
.text:0040EB7F                                         ; _strtoll+26↑j
.text:0040EB7F                 call    _errno
.text:0040EB84                 mov     dword ptr [eax], 21h ; '!'
.text:0040EB8A
.text:0040EB8A loc_40EB8A:                             ; CODE XREF: _strtoll+FF↓j
.text:0040EB8A                                         ; _strtoll+109↓j
.text:0040EB8A                 xor     eax, eax
.text:0040EB8C                 xor     edx, edx
.text:0040EB8E
.text:0040EB8E loc_40EB8E:                             ; CODE XREF: _strtoll+24B↓j
.text:0040EB8E                                         ; _strtoll+258↓j ...
.text:0040EB8E                 add     esp, 2Ch
.text:0040EB91                 pop     ebx
.text:0040EB92                 pop     esi
.text:0040EB93                 pop     edi
.text:0040EB94                 pop     ebp
.text:0040EB95                 retn
.text:0040EB96 ; ---------------------------------------------------------------------------
.text:0040EB96
.text:0040EB96 loc_40EB96:                             ; CODE XREF: _strtoll+2D↑j
.text:0040EB96                 mov     ecx, ds:__mb_cur_max
.text:0040EB9C                 lea     esi, [esi+0]
.text:0040EBA0
.text:0040EBA0 loc_40EBA0:                             ; CODE XREF: _strtoll+7E↓j
.text:0040EBA0                 cmp     dword ptr [ecx], 1
.text:0040EBA3                 mov     esi, [esp+3Ch+String]
.text:0040EBA7                 movsx   edx, byte ptr [esi]
.text:0040EBAA                 jz      loc_40EFB0
.text:0040EBB0                 mov     [esp+3Ch+Type], 8 ; Type
.text:0040EBB8                 mov     [esp+3Ch+C], edx ; C
.text:0040EBBB                 call    _isctype
.text:0040EBC0                 mov     ecx, ds:__mb_cur_max
.text:0040EBC6
.text:0040EBC6 loc_40EBC6:                             ; CODE XREF: _strtoll+473↓j
.text:0040EBC6                 test    eax, eax
.text:0040EBC8                 jz      short loc_40EBD0
.text:0040EBCA                 inc     [esp+3Ch+String]
.text:0040EBCE                 jmp     short loc_40EBA0
.text:0040EBD0 ; ---------------------------------------------------------------------------
.text:0040EBD0
.text:0040EBD0 loc_40EBD0:                             ; CODE XREF: _strtoll+78↑j
.text:0040EBD0                 mov     eax, [esp+3Ch+String]
.text:0040EBD4                 xor     ebx, ebx
.text:0040EBD6                 movzx   edx, byte ptr [eax]
.text:0040EBD9                 cmp     dl, 2Dh ; '-'
.text:0040EBDC                 setz    bl
.text:0040EBDF                 test    ebx, ebx
.text:0040EBE1                 mov     [esp+3Ch+var_20], ebx
.text:0040EBE5                 jnz     loc_40EFA0
.text:0040EBEB                 cmp     dl, 2Bh ; '+'
.text:0040EBEE                 jz      loc_40EFA0
.text:0040EBF4
.text:0040EBF4 loc_40EBF4:                             ; CODE XREF: _strtoll+45B↓j
.text:0040EBF4                 mov     edi, [esp+3Ch+Radix]
.text:0040EBF8                 test    edi, edi
.text:0040EBFA                 jnz     short loc_40EC0D
.text:0040EBFC                 cmp     dl, 30h ; '0'
.text:0040EBFF                 jz      loc_40EF77
.text:0040EC05                 mov     [esp+3Ch+Radix], 0Ah
.text:0040EC0D
.text:0040EC0D loc_40EC0D:                             ; CODE XREF: _strtoll+AA↑j
.text:0040EC0D                                         ; _strtoll+43D↓j ...
.text:0040EC0D                 cmp     [esp+3Ch+Radix], 10h
.text:0040EC12                 jz      loc_40EF49
.text:0040EC18
.text:0040EC18 loc_40EC18:                             ; CODE XREF: _strtoll+3FC↓j
.text:0040EC18                                         ; _strtoll+410↓j ...
.text:0040EC18                 cmp     dword ptr [ecx], 1
.text:0040EC1B                 movsx   ebx, dl
.text:0040EC1E                 jz      loc_40EF31
.text:0040EC24                 mov     [esp+3Ch+C], ebx ; C
.text:0040EC27                 mov     [esp+3Ch+Type], 4 ; Type
.text:0040EC2F                 call    _isctype
.text:0040EC34                 mov     ebx, [esp+3Ch+String]
.text:0040EC38                 movzx   edx, byte ptr [ebx]
.text:0040EC3B
.text:0040EC3B loc_40EC3B:                             ; CODE XREF: _strtoll+3F4↓j
.text:0040EC3B                 test    eax, eax
.text:0040EC3D                 jz      loc_40EE98
.text:0040EC43                 movsx   eax, dl
.text:0040EC46                 sub     eax, 30h ; '0'
.text:0040EC49
.text:0040EC49 loc_40EC49:                             ; CODE XREF: _strtoll+377↓j
.text:0040EC49                                         ; _strtoll+3A8↓j ...
.text:0040EC49                 inc     [esp+3Ch+String]
.text:0040EC4D                 test    eax, eax
.text:0040EC4F                 js      loc_40EB8A
.text:0040EC55                 cmp     eax, [esp+3Ch+Radix]
.text:0040EC59                 jge     loc_40EB8A
.text:0040EC5F                 mov     [esp+3Ch+var_1C], eax
.text:0040EC63                 cdq
.text:0040EC64                 mov     [esp+3Ch+var_18], edx
.text:0040EC68                 mov     [esp+3Ch+var_24], 0
.text:0040EC70
.text:0040EC70 loc_40EC70:                             ; CODE XREF: _strtoll+1B2↓j
.text:0040EC70                 mov     ebx, [esp+3Ch+String]
.text:0040EC74                 mov     ebp, ds:__mb_cur_max
.text:0040EC7A                 movzx   edx, byte ptr [ebx]
.text:0040EC7D                 cmp     dword ptr [ebp+0], 1
.text:0040EC81                 movsx   ecx, dl
.text:0040EC84                 jz      loc_40EE80
.text:0040EC8A                 mov     [esp+3Ch+C], ecx ; C
.text:0040EC8D                 mov     [esp+3Ch+Type], 4 ; Type
.text:0040EC95                 call    _isctype
.text:0040EC9A                 mov     ecx, [esp+3Ch+String]
.text:0040EC9E                 movzx   edx, byte ptr [ecx]
.text:0040ECA1
.text:0040ECA1 loc_40ECA1:                             ; CODE XREF: _strtoll+343↓j
.text:0040ECA1                 test    eax, eax
.text:0040ECA3                 jz      loc_40EDE6
.text:0040ECA9                 movsx   ebx, dl
.text:0040ECAC                 lea     ebp, [ebx-30h]
.text:0040ECAF
.text:0040ECAF loc_40ECAF:                             ; CODE XREF: _strtoll+2C7↓j
.text:0040ECAF                 test    ebp, ebp
.text:0040ECB1                 js      loc_40ED50
.text:0040ECB7                 cmp     ebp, [esp+3Ch+Radix]
.text:0040ECBB                 jge     loc_40ED50
.text:0040ECC1                 mov     [esp+3Ch+C], 0FFFFFFFFh
.text:0040ECC8                 mov     eax, [esp+3Ch+Radix]
.text:0040ECCC                 mov     [esp+3Ch+Type], 7FFFFFFFh
.text:0040ECD4                 cdq
.text:0040ECD5                 mov     [esp+3Ch+var_34], eax
.text:0040ECD9                 mov     [esp+3Ch+var_30], edx
.text:0040ECDD                 call    sub_40E9F0
.text:0040ECE2                 add     eax, 2
.text:0040ECE5                 adc     edx, 0
.text:0040ECE8                 cmp     [esp+3Ch+var_18], edx
.text:0040ECEC                 jb      short loc_40ED07
.text:0040ECEE                 ja      short loc_40ECF6
.text:0040ECF0                 cmp     [esp+3Ch+var_1C], eax
.text:0040ECF4                 jbe     short loc_40ED07
.text:0040ECF6
.text:0040ECF6 loc_40ECF6:                             ; CODE XREF: _strtoll+19E↑j
.text:0040ECF6                 mov     [esp+3Ch+var_24], 1
.text:0040ECFE
.text:0040ECFE loc_40ECFE:                             ; CODE XREF: _strtoll+1FE↓j
.text:0040ECFE                 inc     [esp+3Ch+String]
.text:0040ED02                 jmp     loc_40EC70
.text:0040ED07 ; ---------------------------------------------------------------------------
.text:0040ED07
.text:0040ED07 loc_40ED07:                             ; CODE XREF: _strtoll+19C↑j
.text:0040ED07                                         ; _strtoll+1A4↑j
.text:0040ED07                 mov     eax, [esp+3Ch+Radix]
.text:0040ED0B                 mov     ecx, [esp+3Ch+var_18]
.text:0040ED0F                 cdq
.text:0040ED10                 mov     [esp+3Ch+var_2C], eax
.text:0040ED14                 mov     esi, [esp+3Ch+var_2C]
.text:0040ED18                 mov     [esp+3Ch+var_28], edx
.text:0040ED1C                 mov     eax, [esp+3Ch+var_1C]
.text:0040ED20                 mov     edi, [esp+3Ch+var_28]
.text:0040ED24                 mul     [esp+3Ch+var_2C]
.text:0040ED28                 imul    ecx, esi
.text:0040ED2B                 mov     esi, [esp+3Ch+var_1C]
.text:0040ED2F                 mov     [esp+3Ch+var_1C], ebp
.text:0040ED33                 imul    esi, edi
.text:0040ED36                 mov     ebx, eax
.text:0040ED38                 mov     eax, ebp
.text:0040ED3A                 add     edx, ecx
.text:0040ED3C                 sar     eax, 1Fh
.text:0040ED3F                 add     [esp+3Ch+var_1C], ebx
.text:0040ED43                 lea     ecx, [esi+edx]
.text:0040ED46                 mov     [esp+3Ch+var_18], eax
.text:0040ED4A                 adc     [esp+3Ch+var_18], ecx
.text:0040ED4E                 jmp     short loc_40ECFE
.text:0040ED50 ; ---------------------------------------------------------------------------
.text:0040ED50
.text:0040ED50 loc_40ED50:                             ; CODE XREF: _strtoll+161↑j
.text:0040ED50                                         ; _strtoll+16B↑j
.text:0040ED50                 mov     eax, [esp+3Ch+EndPtr]
.text:0040ED54                 test    eax, eax
.text:0040ED56                 jz      short loc_40ED62
.text:0040ED58                 mov     edi, [esp+3Ch+String]
.text:0040ED5C                 mov     edx, [esp+3Ch+EndPtr]
.text:0040ED60                 mov     [edx], edi
.text:0040ED62
.text:0040ED62 loc_40ED62:                             ; CODE XREF: _strtoll+206↑j
.text:0040ED62                 mov     esi, [esp+3Ch+var_20]
.text:0040ED66                 test    esi, esi
.text:0040ED68                 jz      short loc_40EDDA
.text:0040ED6A                 cmp     [esp+3Ch+var_18], 80000000h
.text:0040ED72                 jb      short loc_40ED85
.text:0040ED74                 ja      short loc_40ED7D
.text:0040ED76                 cmp     [esp+3Ch+var_1C], 0
.text:0040ED7B
.text:0040ED7B loc_40ED7B:                             ; CODE XREF: _strtoll+294↓j
.text:0040ED7B                 jbe     short loc_40ED85
.text:0040ED7D
.text:0040ED7D loc_40ED7D:                             ; CODE XREF: _strtoll+224↑j
.text:0040ED7D                 mov     [esp+3Ch+var_24], 1
.text:0040ED85
.text:0040ED85 loc_40ED85:                             ; CODE XREF: _strtoll+222↑j
.text:0040ED85                                         ; _strtoll:loc_40ED7B↑j ...
.text:0040ED85                 mov     ebp, [esp+3Ch+var_24]
.text:0040ED89                 test    ebp, ebp
.text:0040ED8B                 jnz     short loc_40EDAD
.text:0040ED8D                 mov     ebx, [esp+3Ch+var_20]
.text:0040ED91                 mov     eax, [esp+3Ch+var_1C]
.text:0040ED95                 mov     edx, [esp+3Ch+var_18]
.text:0040ED99                 test    ebx, ebx
.text:0040ED9B                 jz      loc_40EB8E
.text:0040EDA1                 neg     eax
.text:0040EDA3                 adc     edx, 0
.text:0040EDA6                 neg     edx
.text:0040EDA8                 jmp     loc_40EB8E
.text:0040EDAD ; ---------------------------------------------------------------------------
.text:0040EDAD
.text:0040EDAD loc_40EDAD:                             ; CODE XREF: _strtoll+23B↑j
.text:0040EDAD                 call    _errno
.text:0040EDB2                 mov     ecx, [esp+3Ch+var_20]
.text:0040EDB6                 mov     edx, 80000000h
.text:0040EDBB                 mov     dword ptr [eax], 22h ; '"'
.text:0040EDC1                 xor     eax, eax
.text:0040EDC3                 test    ecx, ecx
.text:0040EDC5                 jnz     loc_40EB8E
.text:0040EDCB                 mov     eax, 0FFFFFFFFh
.text:0040EDD0                 mov     edx, 7FFFFFFFh
.text:0040EDD5                 jmp     loc_40EB8E
.text:0040EDDA ; ---------------------------------------------------------------------------
.text:0040EDDA
.text:0040EDDA loc_40EDDA:                             ; CODE XREF: _strtoll+218↑j
.text:0040EDDA                 cmp     [esp+3Ch+var_18], 7FFFFFFFh
.text:0040EDE2                 jb      short loc_40ED85
.text:0040EDE4                 jmp     short loc_40ED7B
.text:0040EDE6 ; ---------------------------------------------------------------------------
.text:0040EDE6
.text:0040EDE6 loc_40EDE6:                             ; CODE XREF: _strtoll+153↑j
.text:0040EDE6                 mov     edi, ds:__mb_cur_max
.text:0040EDEC                 movsx   ecx, dl
.text:0040EDEF                 cmp     dword ptr [edi], 1
.text:0040EDF2                 jz      short loc_40EE6A
.text:0040EDF4                 mov     [esp+3Ch+C], ecx ; C
.text:0040EDF7                 mov     [esp+3Ch+Type], 1 ; Type
.text:0040EDFF                 call    _isctype
.text:0040EE04                 mov     ecx, [esp+3Ch+String]
.text:0040EE08                 movzx   edx, byte ptr [ecx]
.text:0040EE0B
.text:0040EE0B loc_40EE0B:                             ; CODE XREF: _strtoll+32D↓j
.text:0040EE0B                 test    eax, eax
.text:0040EE0D                 jz      short loc_40EE20
.text:0040EE0F                 movsx   eax, dl
.text:0040EE12                 sub     eax, 37h ; '7'
.text:0040EE15
.text:0040EE15 loc_40EE15:                             ; CODE XREF: _strtoll+2FC↓j
.text:0040EE15                                         ; _strtoll+303↓j
.text:0040EE15                 mov     ebp, eax
.text:0040EE17                 jmp     loc_40ECAF
.text:0040EE17 ; ---------------------------------------------------------------------------
.text:0040EE1C                 align 10h
.text:0040EE20
.text:0040EE20 loc_40EE20:                             ; CODE XREF: _strtoll+2BD↑j
.text:0040EE20                 mov     edi, ds:__mb_cur_max
.text:0040EE26                 movsx   edx, dl
.text:0040EE29                 cmp     dword ptr [edi], 1
.text:0040EE2C                 jz      short loc_40EE55
.text:0040EE2E                 mov     [esp+3Ch+Type], 2 ; Type
.text:0040EE36                 mov     [esp+3Ch+C], edx ; C
.text:0040EE39                 call    _isctype
.text:0040EE3E
.text:0040EE3E loc_40EE3E:                             ; CODE XREF: _strtoll+318↓j
.text:0040EE3E                 test    eax, eax
.text:0040EE40                 jz      short loc_40EE4E
.text:0040EE42                 mov     ecx, [esp+3Ch+String]
.text:0040EE46                 movsx   eax, byte ptr [ecx]
.text:0040EE49                 sub     eax, 57h ; 'W'
.text:0040EE4C                 jmp     short loc_40EE15
.text:0040EE4E ; ---------------------------------------------------------------------------
.text:0040EE4E
.text:0040EE4E loc_40EE4E:                             ; CODE XREF: _strtoll+2F0↑j
.text:0040EE4E                 mov     eax, 0FFFFFFFFh
.text:0040EE53                 jmp     short loc_40EE15
.text:0040EE55 ; ---------------------------------------------------------------------------
.text:0040EE55
.text:0040EE55 loc_40EE55:                             ; CODE XREF: _strtoll+2DC↑j
.text:0040EE55                 mov     ebx, ds:_pctype
.text:0040EE5B                 mov     ebp, [ebx]
.text:0040EE5D                 movzx   esi, word ptr [ebp+edx*2+0]
.text:0040EE62                 and     esi, 2
.text:0040EE65                 movzx   eax, si
.text:0040EE68                 jmp     short loc_40EE3E
.text:0040EE6A ; ---------------------------------------------------------------------------
.text:0040EE6A
.text:0040EE6A loc_40EE6A:                             ; CODE XREF: _strtoll+2A2↑j
.text:0040EE6A                 mov     ebx, ds:_pctype
.text:0040EE70                 mov     ebp, [ebx]
.text:0040EE72                 movzx   esi, word ptr [ebp+ecx*2+0]
.text:0040EE77                 and     esi, 1
.text:0040EE7A                 movzx   eax, si
.text:0040EE7D                 jmp     short loc_40EE0B
.text:0040EE7D ; ---------------------------------------------------------------------------
.text:0040EE7F                 align 10h
.text:0040EE80
.text:0040EE80 loc_40EE80:                             ; CODE XREF: _strtoll+134↑j
.text:0040EE80                 mov     ebp, ds:_pctype
.text:0040EE86                 mov     esi, [ebp+0]
.text:0040EE89                 movzx   edi, word ptr [esi+ecx*2]
.text:0040EE8D                 and     edi, 4
.text:0040EE90                 movzx   eax, di
.text:0040EE93                 jmp     loc_40ECA1
.text:0040EE98 ; ---------------------------------------------------------------------------
.text:0040EE98
.text:0040EE98 loc_40EE98:                             ; CODE XREF: _strtoll+ED↑j
.text:0040EE98                 mov     esi, ds:__mb_cur_max
.text:0040EE9E                 movsx   ecx, dl
.text:0040EEA1                 cmp     dword ptr [esi], 1
.text:0040EEA4                 jz      short loc_40EF1C
.text:0040EEA6                 mov     [esp+3Ch+C], ecx ; C
.text:0040EEA9                 mov     [esp+3Ch+Type], 1 ; Type
.text:0040EEB1                 call    _isctype
.text:0040EEB6                 mov     ecx, [esp+3Ch+String]
.text:0040EEBA                 movzx   edx, byte ptr [ecx]
.text:0040EEBD
.text:0040EEBD loc_40EEBD:                             ; CODE XREF: _strtoll+3DF↓j
.text:0040EEBD                 test    eax, eax
.text:0040EEBF                 jz      short loc_40EECC
.text:0040EEC1                 movsx   eax, dl
.text:0040EEC4                 sub     eax, 37h ; '7'
.text:0040EEC7                 jmp     loc_40EC49
.text:0040EECC ; ---------------------------------------------------------------------------
.text:0040EECC
.text:0040EECC loc_40EECC:                             ; CODE XREF: _strtoll+36F↑j
.text:0040EECC                 mov     esi, ds:__mb_cur_max
.text:0040EED2                 movsx   edx, dl
.text:0040EED5                 cmp     dword ptr [esi], 1
.text:0040EED8                 jz      short loc_40EF07
.text:0040EEDA                 mov     [esp+3Ch+Type], 2 ; Type
.text:0040EEE2                 mov     [esp+3Ch+C], edx ; C
.text:0040EEE5                 call    _isctype
.text:0040EEEA
.text:0040EEEA loc_40EEEA:                             ; CODE XREF: _strtoll+3CA↓j
.text:0040EEEA                 test    eax, eax
.text:0040EEEC                 jz      short loc_40EEFD
.text:0040EEEE                 mov     edx, [esp+3Ch+String]
.text:0040EEF2                 movsx   eax, byte ptr [edx]
.text:0040EEF5                 sub     eax, 57h ; 'W'
.text:0040EEF8                 jmp     loc_40EC49
.text:0040EEFD ; ---------------------------------------------------------------------------
.text:0040EEFD
.text:0040EEFD loc_40EEFD:                             ; CODE XREF: _strtoll+39C↑j
.text:0040EEFD                 mov     eax, 0FFFFFFFFh
.text:0040EF02                 jmp     loc_40EC49
.text:0040EF07 ; ---------------------------------------------------------------------------
.text:0040EF07
.text:0040EF07 loc_40EF07:                             ; CODE XREF: _strtoll+388↑j
.text:0040EF07                 mov     ebx, ds:_pctype
.text:0040EF0D                 mov     ebp, [ebx]
.text:0040EF0F                 movzx   edi, word ptr [ebp+edx*2+0]
.text:0040EF14                 and     edi, 2
.text:0040EF17                 movzx   eax, di
.text:0040EF1A                 jmp     short loc_40EEEA
.text:0040EF1C ; ---------------------------------------------------------------------------
.text:0040EF1C
.text:0040EF1C loc_40EF1C:                             ; CODE XREF: _strtoll+354↑j
.text:0040EF1C                 mov     ebx, ds:_pctype
.text:0040EF22                 mov     ebp, [ebx]
.text:0040EF24                 movzx   edi, word ptr [ebp+ecx*2+0]
.text:0040EF29                 and     edi, 1
.text:0040EF2C                 movzx   eax, di
.text:0040EF2F                 jmp     short loc_40EEBD
.text:0040EF31 ; ---------------------------------------------------------------------------
.text:0040EF31
.text:0040EF31 loc_40EF31:                             ; CODE XREF: _strtoll+CE↑j
.text:0040EF31                 mov     ebp, ds:_pctype
.text:0040EF37                 mov     edi, [ebp+0]
.text:0040EF3A                 movzx   ecx, word ptr [edi+ebx*2]
.text:0040EF3E                 and     ecx, 4
.text:0040EF41                 movzx   eax, cx
.text:0040EF44                 jmp     loc_40EC3B
.text:0040EF49 ; ---------------------------------------------------------------------------
.text:0040EF49
.text:0040EF49 loc_40EF49:                             ; CODE XREF: _strtoll+C2↑j
.text:0040EF49                 cmp     dl, 30h ; '0'
.text:0040EF4C                 jnz     loc_40EC18
.text:0040EF52                 mov     ebx, [esp+3Ch+String]
.text:0040EF56                 movzx   eax, byte ptr [ebx+1]
.text:0040EF5A                 cmp     al, 58h ; 'X'
.text:0040EF5C                 jz      short loc_40EF66
.text:0040EF5E                 cmp     al, 78h ; 'x'
.text:0040EF60                 jnz     loc_40EC18
.text:0040EF66
.text:0040EF66 loc_40EF66:                             ; CODE XREF: _strtoll+40C↑j
.text:0040EF66                 add     [esp+3Ch+String], 2
.text:0040EF6B                 mov     esi, [esp+3Ch+String]
.text:0040EF6F                 movzx   edx, byte ptr [esi]
.text:0040EF72                 jmp     loc_40EC18
.text:0040EF77 ; ---------------------------------------------------------------------------
.text:0040EF77
.text:0040EF77 loc_40EF77:                             ; CODE XREF: _strtoll+AF↑j
.text:0040EF77                 mov     ebp, [esp+3Ch+String]
.text:0040EF7B                 movzx   eax, byte ptr [ebp+1]
.text:0040EF7F                 cmp     al, 58h ; 'X'
.text:0040EF81                 jz      short loc_40EF93
.text:0040EF83                 mov     [esp+3Ch+Radix], 8
.text:0040EF8B                 cmp     al, 78h ; 'x'
.text:0040EF8D                 jnz     loc_40EC0D
.text:0040EF93
.text:0040EF93 loc_40EF93:                             ; CODE XREF: _strtoll+431↑j
.text:0040EF93                 mov     [esp+3Ch+Radix], 10h
.text:0040EF9B                 jmp     loc_40EC0D
.text:0040EFA0 ; ---------------------------------------------------------------------------
.text:0040EFA0
.text:0040EFA0 loc_40EFA0:                             ; CODE XREF: _strtoll+95↑j
.text:0040EFA0                                         ; _strtoll+9E↑j
.text:0040EFA0                 inc     [esp+3Ch+String]
.text:0040EFA4                 mov     esi, [esp+3Ch+String]
.text:0040EFA8                 movzx   edx, byte ptr [esi]
.text:0040EFAB                 jmp     loc_40EBF4
.text:0040EFB0 ; ---------------------------------------------------------------------------
.text:0040EFB0
.text:0040EFB0 loc_40EFB0:                             ; CODE XREF: _strtoll+5A↑j
.text:0040EFB0                 mov     ebp, ds:_pctype
.text:0040EFB6                 mov     edi, [ebp+0]
.text:0040EFB9                 movzx   ebx, word ptr [edi+edx*2]
.text:0040EFBD                 and     ebx, 8
.text:0040EFC0                 movzx   eax, bx
.text:0040EFC3                 jmp     loc_40EBC6
.text:0040EFC3 _strtoll        endp
.text:0040EFC3
.text:0040EFC3 ; ---------------------------------------------------------------------------
.text:0040EFC8                 align 10h
.text:0040EFD0                 jmp     ds:__set_app_type
.text:0040EFD0 ; ---------------------------------------------------------------------------
.text:0040EFD6                 align 10h
.text:0040EFE0
.text:0040EFE0 ; =============== S U B R O U T I N E =======================================
.text:0040EFE0
.text:0040EFE0 ; Attributes: thunk
.text:0040EFE0
.text:0040EFE0 ; void __cdecl cexit()
.text:0040EFE0 _cexit          proc near               ; CODE XREF: .text:0040116C↑p
.text:0040EFE0                 jmp     ds:__imp__cexit
.text:0040EFE0 _cexit          endp
.text:0040EFE0
.text:0040EFE0 ; ---------------------------------------------------------------------------
.text:0040EFE6                 align 10h
.text:0040EFF0
.text:0040EFF0 ; =============== S U B R O U T I N E =======================================
.text:0040EFF0
.text:0040EFF0 ; Attributes: thunk
.text:0040EFF0
.text:0040EFF0 ; char ***__cdecl _p__environ()
.text:0040EFF0 __p__environ    proc near               ; CODE XREF: sub_401080+C7↑p
.text:0040EFF0                 jmp     ds:__imp___p__environ
.text:0040EFF0 __p__environ    endp
.text:0040EFF0
.text:0040EFF0 ; ---------------------------------------------------------------------------
.text:0040EFF6                 align 10h
.text:0040F000
.text:0040F000 ; =============== S U B R O U T I N E =======================================
.text:0040F000
.text:0040F000 ; Attributes: thunk
.text:0040F000
.text:0040F000 ; _crt_signal_t __cdecl signal(int Signal, _crt_signal_t Function)
.text:0040F000 signal          proc near               ; CODE XREF: TopLevelExceptionFilter+4D↑p
.text:0040F000                                         ; TopLevelExceptionFilter+88↑p ...
.text:0040F000
.text:0040F000 Signal          = dword ptr  4
.text:0040F000 Function        = dword ptr  8
.text:0040F000
.text:0040F000                 jmp     ds:__imp_signal
.text:0040F000 signal          endp
.text:0040F000
.text:0040F000 ; ---------------------------------------------------------------------------
.text:0040F006                 align 10h
.text:0040F010
.text:0040F010 ; =============== S U B R O U T I N E =======================================
.text:0040F010
.text:0040F010 ; Attributes: thunk
.text:0040F010
.text:0040F010 ; int *__cdecl _p__fmode()
.text:0040F010 __p__fmode      proc near               ; CODE XREF: sub_401080:loc_401135↑p
.text:0040F010                 jmp     ds:__imp___p__fmode
.text:0040F010 __p__fmode      endp
.text:0040F010
.text:0040F010 ; ---------------------------------------------------------------------------
.text:0040F016                 align 10h
.text:0040F020
.text:0040F020 ; =============== S U B R O U T I N E =======================================
.text:0040F020
.text:0040F020 ; Attributes: thunk
.text:0040F020
.text:0040F020 ; int __cdecl setmode(int FileHandle, int Mode)
.text:0040F020 _setmode        proc near               ; CODE XREF: sub_401080+70↑p
.text:0040F020                                         ; sub_401080+90↑p ...
.text:0040F020
.text:0040F020 FileHandle      = dword ptr  4
.text:0040F020 Mode            = dword ptr  8
.text:0040F020
.text:0040F020                 jmp     ds:__imp__setmode
.text:0040F020 _setmode        endp
.text:0040F020
.text:0040F020 ; ---------------------------------------------------------------------------
.text:0040F026                 align 10h
.text:0040F030
.text:0040F030 ; =============== S U B R O U T I N E =======================================
.text:0040F030
.text:0040F030 ; Attributes: thunk
.text:0040F030
.text:0040F030 __getmainargs   proc near               ; CODE XREF: sub_401080+49↑p
.text:0040F030                 jmp     ds:__imp___getmainargs
.text:0040F030 __getmainargs   endp
.text:0040F030
.text:0040F030 ; ---------------------------------------------------------------------------
.text:0040F036                 align 10h
.text:0040F040
.text:0040F040 ; =============== S U B R O U T I N E =======================================
.text:0040F040
.text:0040F040 ; Attributes: thunk
.text:0040F040
.text:0040F040 ; void *__cdecl memset(void *, int Val, size_t Size)
.text:0040F040 memset          proc near               ; CODE XREF: sub_401E90+758↑p
.text:0040F040                                         ; sub_406090+330A↑p ...
.text:0040F040
.text:0040F040 Val             = dword ptr  8
.text:0040F040 Size            = dword ptr  0Ch
.text:0040F040
.text:0040F040                 jmp     ds:__imp_memset
.text:0040F040 memset          endp
.text:0040F040
.text:0040F040 ; ---------------------------------------------------------------------------
.text:0040F046                 align 10h
.text:0040F050
.text:0040F050 ; =============== S U B R O U T I N E =======================================
.text:0040F050
.text:0040F050 ; Attributes: thunk
.text:0040F050
.text:0040F050 ; char *__cdecl strcpy(char *Destination, const char *Source)
.text:0040F050 strcpy          proc near               ; CODE XREF: sub_401E90+681↑p
.text:0040F050                                         ; sub_401E90+6CB↑p ...
.text:0040F050
.text:0040F050 Destination     = dword ptr  4
.text:0040F050 Source          = dword ptr  8
.text:0040F050
.text:0040F050                 jmp     ds:__imp_strcpy
.text:0040F050 strcpy          endp
.text:0040F050
.text:0040F050 ; ---------------------------------------------------------------------------
.text:0040F056                 align 10h
.text:0040F060
.text:0040F060 ; =============== S U B R O U T I N E =======================================
.text:0040F060
.text:0040F060 ; Attributes: thunk
.text:0040F060
.text:0040F060 ; char *__cdecl strcat(char *Destination, const char *Source)
.text:0040F060 strcat          proc near               ; CODE XREF: sub_401E90+693↑p
.text:0040F060                                         ; sub_401E90+6A5↑p ...
.text:0040F060
.text:0040F060 Destination     = dword ptr  4
.text:0040F060 Source          = dword ptr  8
.text:0040F060
.text:0040F060                 jmp     ds:__imp_strcat
.text:0040F060 strcat          endp
.text:0040F060
.text:0040F060 ; ---------------------------------------------------------------------------
.text:0040F066                 align 10h
.text:0040F070
.text:0040F070 ; =============== S U B R O U T I N E =======================================
.text:0040F070
.text:0040F070 ; Attributes: thunk
.text:0040F070
.text:0040F070 ; char *__cdecl setlocale(int Category, const char *Locale)
.text:0040F070 setlocale       proc near               ; CODE XREF: sub_401E90+36↑p
.text:0040F070
.text:0040F070 Category        = dword ptr  4
.text:0040F070 Locale          = dword ptr  8
.text:0040F070
.text:0040F070                 jmp     ds:__imp_setlocale
.text:0040F070 setlocale       endp
.text:0040F070
.text:0040F070 ; ---------------------------------------------------------------------------
.text:0040F076                 align 10h
.text:0040F080
.text:0040F080 ; =============== S U B R O U T I N E =======================================
.text:0040F080
.text:0040F080 ; Attributes: thunk
.text:0040F080
.text:0040F080 ; int __cdecl fclose(FILE *Stream)
.text:0040F080 fclose          proc near               ; CODE XREF: sub_401E90+7CE↑p
.text:0040F080                                         ; sub_402980+1C5↑p ...
.text:0040F080
.text:0040F080 Stream          = dword ptr  4
.text:0040F080
.text:0040F080                 jmp     ds:__imp_fclose
.text:0040F080 fclose          endp
.text:0040F080
.text:0040F080 ; ---------------------------------------------------------------------------
.text:0040F086                 align 10h
.text:0040F090
.text:0040F090 ; =============== S U B R O U T I N E =======================================
.text:0040F090
.text:0040F090 ; Attributes: thunk
.text:0040F090
.text:0040F090 ; void __cdecl clearerr(FILE *Stream)
.text:0040F090 clearerr        proc near               ; CODE XREF: sub_402980+1B0↑p
.text:0040F090
.text:0040F090 Stream          = dword ptr  4
.text:0040F090
.text:0040F090                 jmp     ds:__imp_clearerr
.text:0040F090 clearerr        endp
.text:0040F090
.text:0040F090 ; ---------------------------------------------------------------------------
.text:0040F096                 align 10h
.text:0040F0A0
.text:0040F0A0 ; =============== S U B R O U T I N E =======================================
.text:0040F0A0
.text:0040F0A0 ; Attributes: thunk
.text:0040F0A0
.text:0040F0A0 ; int *__cdecl errno()
.text:0040F0A0 _errno          proc near               ; CODE XREF: sub_401E90+7D6↑p
.text:0040F0A0                                         ; sub_402980+1CD↑p ...
.text:0040F0A0                 jmp     ds:__imp__errno
.text:0040F0A0 _errno          endp
.text:0040F0A0
.text:0040F0A0 ; ---------------------------------------------------------------------------
.text:0040F0A6                 align 10h
.text:0040F0B0
.text:0040F0B0 ; =============== S U B R O U T I N E =======================================
.text:0040F0B0
.text:0040F0B0 ; Attributes: thunk
.text:0040F0B0
.text:0040F0B0 ; size_t __cdecl fwrite(const void *Buffer, size_t ElementSize, size_t ElementCount, FILE *Stream)
.text:0040F0B0 fwrite          proc near               ; CODE XREF: sub_402BC0+58↑p
.text:0040F0B0
.text:0040F0B0 Buffer          = dword ptr  4
.text:0040F0B0 ElementSize     = dword ptr  8
.text:0040F0B0 ElementCount    = dword ptr  0Ch
.text:0040F0B0 Stream          = dword ptr  10h
.text:0040F0B0
.text:0040F0B0                 jmp     ds:__imp_fwrite
.text:0040F0B0 fwrite          endp
.text:0040F0B0
.text:0040F0B0 ; ---------------------------------------------------------------------------
.text:0040F0B6                 align 10h
.text:0040F0C0
.text:0040F0C0 ; =============== S U B R O U T I N E =======================================
.text:0040F0C0
.text:0040F0C0 ; Attributes: thunk
.text:0040F0C0
.text:0040F0C0 ; size_t __cdecl strlen(const char *Str)
.text:0040F0C0 strlen          proc near               ; CODE XREF: sub_401E90+653↑p
.text:0040F0C0                                         ; sub_401E90+71F↑p ...
.text:0040F0C0
.text:0040F0C0 Str             = dword ptr  4
.text:0040F0C0
.text:0040F0C0                 jmp     ds:__imp_strlen
.text:0040F0C0 strlen          endp
.text:0040F0C0
.text:0040F0C0 ; ---------------------------------------------------------------------------
.text:0040F0C6                 align 10h
.text:0040F0D0
.text:0040F0D0 ; =============== S U B R O U T I N E =======================================
.text:0040F0D0
.text:0040F0D0 ; Attributes: noreturn thunk
.text:0040F0D0
.text:0040F0D0 ; void __cdecl __noreturn exit(int Code)
.text:0040F0D0 exit            proc near               ; CODE XREF: sub_401E90:loc_4020EB↑p
.text:0040F0D0                                         ; .text:0040270B↑p ...
.text:0040F0D0
.text:0040F0D0 Code            = dword ptr  4
.text:0040F0D0
.text:0040F0D0                 jmp     ds:__imp_exit
.text:0040F0D0 exit            endp
.text:0040F0D0
.text:0040F0D0 ; ---------------------------------------------------------------------------
.text:0040F0D6                 align 10h
.text:0040F0E0
.text:0040F0E0 ; =============== S U B R O U T I N E =======================================
.text:0040F0E0
.text:0040F0E0 ; Attributes: thunk
.text:0040F0E0
.text:0040F0E0 ; int __cdecl fputs(const char *Buffer, FILE *Stream)
.text:0040F0E0 fputs           proc near               ; CODE XREF: sub_401E90+122↑p
.text:0040F0E0                                         ; sub_401E90+144↑p ...
.text:0040F0E0
.text:0040F0E0 Buffer          = dword ptr  4
.text:0040F0E0 Stream          = dword ptr  8
.text:0040F0E0
.text:0040F0E0                 jmp     ds:__imp_fputs
.text:0040F0E0 fputs           endp
.text:0040F0E0
.text:0040F0E0 ; ---------------------------------------------------------------------------
.text:0040F0E6                 align 10h
.text:0040F0F0
.text:0040F0F0 ; =============== S U B R O U T I N E =======================================
.text:0040F0F0
.text:0040F0F0 ; Attributes: thunk
.text:0040F0F0
.text:0040F0F0 ; int printf(const char *const Format, ...)
.text:0040F0F0 printf          proc near               ; CODE XREF: sub_401E90+100↑p
.text:0040F0F0                                         ; sub_401E90+24F↑p ...
.text:0040F0F0
.text:0040F0F0 Format          = dword ptr  4
.text:0040F0F0
.text:0040F0F0                 jmp     ds:__imp_printf
.text:0040F0F0 printf          endp
.text:0040F0F0
.text:0040F0F0 ; ---------------------------------------------------------------------------
.text:0040F0F6                 align 10h
.text:0040F100
.text:0040F100 ; =============== S U B R O U T I N E =======================================
.text:0040F100
.text:0040F100 ; Attributes: thunk
.text:0040F100
.text:0040F100 ; int fprintf(FILE *const Stream, const char *const Format, ...)
.text:0040F100 fprintf         proc near               ; CODE XREF: sub_401E90+639↑p
.text:0040F100                                         ; .text:00402703↑p ...
.text:0040F100
.text:0040F100 Stream          = dword ptr  4
.text:0040F100 Format          = dword ptr  8
.text:0040F100
.text:0040F100                 jmp     ds:__imp_fprintf
.text:0040F100 fprintf         endp
.text:0040F100
.text:0040F100 ; ---------------------------------------------------------------------------
.text:0040F106                 align 10h
.text:0040F110
.text:0040F110 ; =============== S U B R O U T I N E =======================================
.text:0040F110
.text:0040F110 ; Attributes: thunk
.text:0040F110
.text:0040F110 ; FILE *__cdecl fopen(const char *FileName, const char *Mode)
.text:0040F110 fopen           proc near               ; CODE XREF: sub_402980+216↑p
.text:0040F110
.text:0040F110 FileName        = dword ptr  4
.text:0040F110 Mode            = dword ptr  8
.text:0040F110
.text:0040F110                 jmp     ds:__imp_fopen
.text:0040F110 fopen           endp
.text:0040F110
.text:0040F110 ; ---------------------------------------------------------------------------
.text:0040F116                 align 10h
.text:0040F120
.text:0040F120 ; =============== S U B R O U T I N E =======================================
.text:0040F120
.text:0040F120 ; Attributes: thunk
.text:0040F120
.text:0040F120 ; int __cdecl flsbuf(int Ch, FILE *File)
.text:0040F120 _flsbuf         proc near               ; CODE XREF: sub_402980+107↑p
.text:0040F120                                         ; sub_40AE80+128↑p ...
.text:0040F120
.text:0040F120 File            = dword ptr  8
.text:0040F120
.text:0040F120                 jmp     ds:__imp__flsbuf
.text:0040F120 _flsbuf         endp
.text:0040F120
.text:0040F120 ; ---------------------------------------------------------------------------
.text:0040F126                 align 10h
.text:0040F130
.text:0040F130 ; =============== S U B R O U T I N E =======================================
.text:0040F130
.text:0040F130 ; Attributes: thunk
.text:0040F130
.text:0040F130 ; int __cdecl tolower(int C)
.text:0040F130 tolower         proc near               ; CODE XREF: .text:00405C18↑p
.text:0040F130
.text:0040F130 C               = dword ptr  4
.text:0040F130
.text:0040F130                 jmp     ds:__imp_tolower
.text:0040F130 tolower         endp
.text:0040F130
.text:0040F130 ; ---------------------------------------------------------------------------
.text:0040F136                 align 10h
.text:0040F140
.text:0040F140 ; =============== S U B R O U T I N E =======================================
.text:0040F140
.text:0040F140 ; Attributes: thunk
.text:0040F140
.text:0040F140 ; void *__cdecl memcpy(void *, const void *Src, size_t Size)
.text:0040F140 memcpy          proc near               ; CODE XREF: sub_403180+10BA↑p
.text:0040F140                                         ; sub_403180+1268↑p ...
.text:0040F140
.text:0040F140 Src             = dword ptr  8
.text:0040F140 Size            = dword ptr  0Ch
.text:0040F140
.text:0040F140                 jmp     ds:__imp_memcpy
.text:0040F140 memcpy          endp
.text:0040F140
.text:0040F140 ; ---------------------------------------------------------------------------
.text:0040F146                 align 10h
.text:0040F150
.text:0040F150 ; =============== S U B R O U T I N E =======================================
.text:0040F150
.text:0040F150 ; Attributes: noreturn thunk
.text:0040F150
.text:0040F150 ; void __cdecl __noreturn abort()
.text:0040F150 abort           proc near               ; CODE XREF: .text:loc_405FF8↑p
.text:0040F150                                         ; sub_4096A0:def_40973A↑p ...
.text:0040F150                 jmp     ds:__imp_abort
.text:0040F150 abort           endp
.text:0040F150
.text:0040F150 ; ---------------------------------------------------------------------------
.text:0040F156                 align 10h
.text:0040F160
.text:0040F160 ; =============== S U B R O U T I N E =======================================
.text:0040F160
.text:0040F160 ; Attributes: thunk
.text:0040F160
.text:0040F160 ; void __cdecl free(void *Block)
.text:0040F160 free            proc near               ; CODE XREF: .text:00405BA1↑p
.text:0040F160                                         ; .text:00405D8C↑p ...
.text:0040F160
.text:0040F160 Block           = dword ptr  4
.text:0040F160
.text:0040F160                 jmp     ds:__imp_free
.text:0040F160 free            endp
.text:0040F160
.text:0040F160 ; ---------------------------------------------------------------------------
.text:0040F166                 align 10h
.text:0040F170
.text:0040F170 ; =============== S U B R O U T I N E =======================================
.text:0040F170
.text:0040F170 ; Attributes: thunk
.text:0040F170
.text:0040F170 ; void *__cdecl realloc(void *Block, size_t Size)
.text:0040F170 realloc         proc near               ; CODE XREF: sub_403180+7BE↑p
.text:0040F170                                         ; sub_403180+7DC↑p ...
.text:0040F170
.text:0040F170 Block           = dword ptr  4
.text:0040F170 Size            = dword ptr  8
.text:0040F170
.text:0040F170                 jmp     ds:__imp_realloc
.text:0040F170 realloc         endp
.text:0040F170
.text:0040F170 ; ---------------------------------------------------------------------------
.text:0040F176                 align 10h
.text:0040F180
.text:0040F180 ; =============== S U B R O U T I N E =======================================
.text:0040F180
.text:0040F180 ; Attributes: thunk
.text:0040F180
.text:0040F180 ; void *__cdecl malloc(size_t Size)
.text:0040F180 malloc          proc near               ; CODE XREF: sub_403180+74↑p
.text:0040F180                                         ; sub_403180+555↑p ...
.text:0040F180
.text:0040F180 Size            = dword ptr  4
.text:0040F180
.text:0040F180                 jmp     ds:__imp_malloc
.text:0040F180 malloc          endp
.text:0040F180
.text:0040F180 ; ---------------------------------------------------------------------------
.text:0040F186                 align 10h
.text:0040F190
.text:0040F190 ; =============== S U B R O U T I N E =======================================
.text:0040F190
.text:0040F190 ; Attributes: thunk
.text:0040F190
.text:0040F190 ; int __cdecl iswctype(wint_t C, wctype_t Type)
.text:0040F190 iswctype        proc near               ; CODE XREF: sub_406090+1F86↑p
.text:0040F190                                         ; sub_40CCC0+78B↑p
.text:0040F190
.text:0040F190 C               = word ptr  4
.text:0040F190 Type            = word ptr  8
.text:0040F190
.text:0040F190                 jmp     ds:__imp_iswctype
.text:0040F190 iswctype        endp
.text:0040F190
.text:0040F190 ; ---------------------------------------------------------------------------
.text:0040F196                 align 10h
.text:0040F1A0
.text:0040F1A0 ; =============== S U B R O U T I N E =======================================
.text:0040F1A0
.text:0040F1A0 ; Attributes: thunk
.text:0040F1A0
.text:0040F1A0 ; int __cdecl isctype(int C, int Type)
.text:0040F1A0 _isctype        proc near               ; CODE XREF: .text:00405BF9↑p
.text:0040F1A0                                         ; sub_406090+1FDC↑p ...
.text:0040F1A0
.text:0040F1A0 C               = dword ptr  4
.text:0040F1A0 Type            = dword ptr  8
.text:0040F1A0
.text:0040F1A0                 jmp     ds:__imp__isctype
.text:0040F1A0 _isctype        endp
.text:0040F1A0
.text:0040F1A0 ; ---------------------------------------------------------------------------
.text:0040F1A6                 align 10h
.text:0040F1B0
.text:0040F1B0 ; =============== S U B R O U T I N E =======================================
.text:0040F1B0
.text:0040F1B0 ; Attributes: thunk
.text:0040F1B0
.text:0040F1B0 ; int __cdecl strncmp(const char *Str1, const char *Str2, size_t MaxCount)
.text:0040F1B0 strncmp         proc near               ; CODE XREF: sub_409C00+30F↑p
.text:0040F1B0                                         ; sub_409C00+769↑p
.text:0040F1B0
.text:0040F1B0 Str1            = dword ptr  4
.text:0040F1B0 Str2            = dword ptr  8
.text:0040F1B0 MaxCount        = dword ptr  0Ch
.text:0040F1B0
.text:0040F1B0                 jmp     ds:__imp_strncmp
.text:0040F1B0 strncmp         endp
.text:0040F1B0
.text:0040F1B0 ; ---------------------------------------------------------------------------
.text:0040F1B6                 align 10h
.text:0040F1C0
.text:0040F1C0 ; =============== S U B R O U T I N E =======================================
.text:0040F1C0
.text:0040F1C0 ; Attributes: thunk
.text:0040F1C0
.text:0040F1C0 ; char *__cdecl getenv(const char *VarName)
.text:0040F1C0 getenv          proc near               ; CODE XREF: sub_409C00+C27↑p
.text:0040F1C0
.text:0040F1C0 VarName         = dword ptr  4
.text:0040F1C0
.text:0040F1C0                 jmp     ds:__imp_getenv
.text:0040F1C0 getenv          endp
.text:0040F1C0
.text:0040F1C0 ; ---------------------------------------------------------------------------
.text:0040F1C6                 align 10h
.text:0040F1D0
.text:0040F1D0 ; =============== S U B R O U T I N E =======================================
.text:0040F1D0
.text:0040F1D0 ; Attributes: thunk
.text:0040F1D0
.text:0040F1D0 ; char *__cdecl strchr(const char *Str, int Val)
.text:0040F1D0 strchr          proc near               ; CODE XREF: sub_409C00+539↑p
.text:0040F1D0                                         ; sub_409C00+60A↑p ...
.text:0040F1D0
.text:0040F1D0 Str             = dword ptr  4
.text:0040F1D0 Val             = dword ptr  8
.text:0040F1D0
.text:0040F1D0                 jmp     ds:__imp_strchr
.text:0040F1D0 strchr          endp
.text:0040F1D0
.text:0040F1D0 ; ---------------------------------------------------------------------------
.text:0040F1D6                 align 10h
.text:0040F1E0
.text:0040F1E0 ; =============== S U B R O U T I N E =======================================
.text:0040F1E0
.text:0040F1E0 ; Attributes: thunk
.text:0040F1E0
.text:0040F1E0 ; int __cdecl filbuf(FILE *File)
.text:0040F1E0 _filbuf         proc near               ; CODE XREF: sub_40AAA0+B3↑p
.text:0040F1E0
.text:0040F1E0 File            = dword ptr  4
.text:0040F1E0
.text:0040F1E0                 jmp     ds:__imp__filbuf
.text:0040F1E0 _filbuf         endp
.text:0040F1E0
.text:0040F1E0 ; ---------------------------------------------------------------------------
.text:0040F1E6                 align 10h
.text:0040F1F0
.text:0040F1F0 ; =============== S U B R O U T I N E =======================================
.text:0040F1F0
.text:0040F1F0 ; Attributes: thunk
.text:0040F1F0
.text:0040F1F0 ; int __cdecl vfprintf(FILE *const Stream, const char *const Format, va_list ArgList)
.text:0040F1F0 vfprintf        proc near               ; CODE XREF: sub_40AE80+C1↑p
.text:0040F1F0                                         ; sub_40E080+49↑p ...
.text:0040F1F0
.text:0040F1F0 Stream          = dword ptr  4
.text:0040F1F0 Format          = dword ptr  8
.text:0040F1F0 ArgList         = dword ptr  0Ch
.text:0040F1F0
.text:0040F1F0                 jmp     ds:__imp_vfprintf
.text:0040F1F0 vfprintf        endp
.text:0040F1F0
.text:0040F1F0 ; ---------------------------------------------------------------------------
.text:0040F1F6                 align 10h
.text:0040F200
.text:0040F200 ; =============== S U B R O U T I N E =======================================
.text:0040F200
.text:0040F200 ; Attributes: thunk
.text:0040F200
.text:0040F200 ; int __cdecl strtol(const char *String, char **EndPtr, int Radix)
.text:0040F200 strtol          proc near               ; CODE XREF: sub_40B100+46↑p
.text:0040F200
.text:0040F200 String          = dword ptr  4
.text:0040F200 EndPtr          = dword ptr  8
.text:0040F200 Radix           = dword ptr  0Ch
.text:0040F200
.text:0040F200                 jmp     ds:__imp_strtol
.text:0040F200 strtol          endp
.text:0040F200
.text:0040F200 ; ---------------------------------------------------------------------------
.text:0040F206                 align 10h
.text:0040F210
.text:0040F210 ; =============== S U B R O U T I N E =======================================
.text:0040F210
.text:0040F210 ; Attributes: noreturn thunk
.text:0040F210
.text:0040F210 _assert         proc near               ; CODE XREF: sub_40B100+660↑p
.text:0040F210                                         ; sub_40B7E0+ECB↑p
.text:0040F210                 jmp     ds:__imp__assert
.text:0040F210 _assert         endp
.text:0040F210
.text:0040F210 ; ---------------------------------------------------------------------------
.text:0040F216                 align 10h
.text:0040F220
.text:0040F220 ; =============== S U B R O U T I N E =======================================
.text:0040F220
.text:0040F220 ; Attributes: thunk
.text:0040F220
.text:0040F220 ; void *__cdecl calloc(size_t Count, size_t Size)
.text:0040F220 calloc          proc near               ; CODE XREF: .text:0040CB03↑p
.text:0040F220
.text:0040F220 Count           = dword ptr  4
.text:0040F220 Size            = dword ptr  8
.text:0040F220
.text:0040F220                 jmp     ds:__imp_calloc
.text:0040F220 calloc          endp
.text:0040F220
.text:0040F220 ; ---------------------------------------------------------------------------
.text:0040F226                 align 10h
.text:0040F230
.text:0040F230 ; =============== S U B R O U T I N E =======================================
.text:0040F230
.text:0040F230 ; Attributes: thunk
.text:0040F230
.text:0040F230 ; int __cdecl strcmp(const char *Str1, const char *Str2)
.text:0040F230 strcmp          proc near               ; CODE XREF: sub_40E184+180↑p
.text:0040F230
.text:0040F230 Str1            = dword ptr  4
.text:0040F230 Str2            = dword ptr  8
.text:0040F230
.text:0040F230                 jmp     ds:__imp_strcmp
.text:0040F230 strcmp          endp
.text:0040F230
.text:0040F230 ; ---------------------------------------------------------------------------
.text:0040F236                 align 10h
.text:0040F240
.text:0040F240 ; =============== S U B R O U T I N E =======================================
.text:0040F240
.text:0040F240 ; Attributes: thunk
.text:0040F240
.text:0040F240 ; int __cdecl fflush(FILE *Stream)
.text:0040F240 fflush          proc near               ; CODE XREF: sub_40E080+19↑p
.text:0040F240                                         ; sub_40E080+81↑p ...
.text:0040F240
.text:0040F240 Stream          = dword ptr  4
.text:0040F240
.text:0040F240                 jmp     ds:__imp_fflush
.text:0040F240 fflush          endp
.text:0040F240
.text:0040F240 ; ---------------------------------------------------------------------------
.text:0040F246                 align 10h
.text:0040F250
.text:0040F250 ; =============== S U B R O U T I N E =======================================
.text:0040F250
.text:0040F250 ; Attributes: thunk
.text:0040F250
.text:0040F250 ; char *__cdecl strerror(int ErrorMessage)
.text:0040F250 strerror        proc near               ; CODE XREF: sub_40E080+A5↑p
.text:0040F250                                         ; sub_40E184+10F↑p
.text:0040F250
.text:0040F250 ErrorMessage    = dword ptr  4
.text:0040F250
.text:0040F250                 jmp     ds:__imp_strerror
.text:0040F250 strerror        endp
.text:0040F250
.text:0040F250 ; ---------------------------------------------------------------------------
.text:0040F256                 align 10h
.text:0040F260
.text:0040F260 ; =============== S U B R O U T I N E =======================================
.text:0040F260
.text:0040F260 ; Attributes: thunk
.text:0040F260
.text:0040F260 ; LPTOP_LEVEL_EXCEPTION_FILTER __stdcall SetUnhandledExceptionFilter(LPTOP_LEVEL_EXCEPTION_FILTER lpTopLevelExceptionFilter)
.text:0040F260 SetUnhandledExceptionFilter proc near   ; CODE XREF: sub_401080+E↑p
.text:0040F260
.text:0040F260 lpTopLevelExceptionFilter= dword ptr  4
.text:0040F260
.text:0040F260                 jmp     ds:__imp_SetUnhandledExceptionFilter
.text:0040F260 SetUnhandledExceptionFilter endp
.text:0040F260
.text:0040F260 ; ---------------------------------------------------------------------------
.text:0040F266                 align 10h
.text:0040F270
.text:0040F270 ; =============== S U B R O U T I N E =======================================
.text:0040F270
.text:0040F270 ; Attributes: noreturn thunk
.text:0040F270
.text:0040F270 ; void __stdcall __noreturn ExitProcess(UINT uExitCode)
.text:0040F270 ExitProcess     proc near               ; CODE XREF: .text:00401174↑p
.text:0040F270
.text:0040F270 uExitCode       = dword ptr  4
.text:0040F270
.text:0040F270                 jmp     ds:__imp_ExitProcess
.text:0040F270 ExitProcess     endp
.text:0040F270
.text:0040F270 ; ---------------------------------------------------------------------------
.text:0040F276                 align 10h
.text:0040F280 dword_40F280    dd 0FFFFFFFFh           ; DATA XREF: .text:0040E8F9↑r
.text:0040F280                                         ; .text:loc_40E920↑r ...
.text:0040F284 dword_40F284    dd 0                    ; DATA XREF: .text:loc_40E92C↑r
.text:0040F284                                         ; sub_40E950:loc_40E99D↑r
.text:0040F288                 dd 0FFFFFFFFh
.text:0040F28C dword_40F28C    dd 5Dh dup(0)           ; DATA XREF: .data:off_4100D4↓o
.text:0040F400                 dd 300h dup(?)
.text:0040F400 _text           ends
.text:0040F400
.data:00410000 ; Section 2. (virtual address 00010000)
.data:00410000 ; Virtual size                  : 000000F0 (    240.)
.data:00410000 ; Section size in file          : 00000200 (    512.)
.data:00410000 ; Offset to raw data for section: 0000E800
.data:00410000 ; Flags C0000040: Data Readable Writable
.data:00410000 ; Alignment     : default
.data:00410000 ; ===========================================================================
.data:00410000
.data:00410000 ; Segment type: Pure data
.data:00410000 ; Segment permissions: Read/Write
.data:00410000 _data           segment para public 'DATA' use32
.data:00410000                 assume cs:_data
.data:00410000                 ;org 410000h
.data:00410000 dword_410000    dd 0                    ; DATA XREF: sub_401080+1B↑o
.data:00410000                                         ; sub_401080+CC↑r
.data:00410004 dword_410004    dd 0                    ; DATA XREF: sub_401080+41↑o
.data:00410004                                         ; sub_401080+D4↑r
.data:00410008                 align 10h
.data:00410010 off_410010      dd offset aTn           ; DATA XREF: sub_401E90+374↑o
.data:00410010                                         ; sub_401E90+788↑r ...
.data:00410010                                         ; "tn\t"
.data:00410014 off_410014      dd offset aTn+2         ; DATA XREF: sub_401E90+2DC↑o
.data:00410014                                         ; sub_402980+15F↑r
.data:00410014                                         ; "n\t"
.data:00410018 off_410018      dd offset aTn+2         ; DATA XREF: sub_401E90+341↑o
.data:00410018                                         ; sub_402980+B8↑r
.data:00410018                                         ; "n\t"
.data:0041001C ; char *Str
.data:0041001C Str             dd offset aTn+4         ; DATA XREF: sub_401E90+4CD↑w
.data:0041001C                                         ; sub_401E90+716↑r ...
.data:0041001C                                         ; "\t"
.data:00410020 ; char *Source
.data:00410020 Source          dd offset asc_40129D    ; DATA XREF: sub_401E90+2C0↑w
.data:00410020                                         ; sub_401E90:loc_4024DA↑r ...
.data:00410020                                         ; "\\:"
.data:00410024                 align 8
.data:00410028 dword_410028    dd 1                    ; DATA XREF: sub_401E90+54B↑o
.data:00410028                                         ; sub_401E90+779↑r ...
.data:0041002C dword_41002C    dd 0                    ; DATA XREF: sub_401E90+77F↑r
.data:0041002C                                         ; sub_402980+17D↑r
.data:00410030 dword_410030    dd 1                    ; DATA XREF: sub_401E90+5AE↑o
.data:00410030                                         ; sub_401E90+5D8↑r ...
.data:00410034 dword_410034    dd 0                    ; DATA XREF: sub_401E90+5D2↑r
.data:00410034                                         ; sub_402BC0+10A↑r ...
.data:00410038 byte_410038     db 1                    ; DATA XREF: sub_401E90:loc_402420↑w
.data:00410038                                         ; sub_402980+153↑r
.data:00410039                 align 10h
.data:00410040 dword_410040    dd 1                    ; DATA XREF: sub_401E90+450↑o
.data:00410040                                         ; sub_401E90+47A↑r ...
.data:00410044 dword_410044    dd 0                    ; DATA XREF: sub_401E90+474↑r
.data:00410044                                         ; sub_402BC0:loc_402C30↑r
.data:00410048 dword_410048    dd 6                    ; DATA XREF: sub_401E90+519↑w
.data:00410048                                         ; sub_401E90+724↑r ...
.data:0041004C ; char *Format
.data:0041004C Format          dd offset aI64dS_0      ; DATA XREF: sub_401E90+3E2↑w
.data:0041004C                                         ; sub_401E90+402↑w ...
.data:0041004C                                         ; "%*I64d%s"
.data:00410050 dword_410050    dd 0FA0h                ; DATA XREF: sub_403180:loc_4041FB↑r
.data:00410050                                         ; sub_403180:loc_4043A9↑r ...
.data:00410054                 align 10h
.data:00410060 dword_410060    dd 1                    ; DATA XREF: sub_401E90+76E↑r
.data:00410060                                         ; sub_401E90+816↑r ...
.data:00410064 dword_410064    dd 1                    ; DATA XREF: sub_40A860+11↑r
.data:00410064                                         ; .text:0040A901↑r
.data:00410068 dword_410068    dd 3Fh                  ; DATA XREF: sub_40A860+7D↑w
.data:00410068                                         ; .text:0040A96D↑w
.data:0041006C                 align 10h
.data:00410070 ; char *off_410070
.data:00410070 off_410070      dd offset aCopyrightC2005
.data:00410070                                         ; DATA XREF: sub_40AE80+DC↑r
.data:00410070                                         ; "Copyright (C) 2005 Free Software Founda"...
.data:00410074                 align 10h
.data:00410080 dword_410080    dd 1                    ; DATA XREF: sub_40DE00+22↑r
.data:00410080                                         ; sub_40DE00+65↑r ...
.data:00410084 dword_410084    dd 100h                 ; DATA XREF: sub_40DE00+3F↑o
.data:00410084                                         ; sub_40DE00+1A2↑r ...
.data:00410088 off_410088      dd offset unk_411290    ; DATA XREF: sub_40DE00+1AA↑r
.data:0041008C ; void *off_41008C
.data:0041008C off_41008C      dd offset dword_410084  ; DATA XREF: sub_40DE00+39↑r
.data:0041008C                                         ; sub_40DE00+60↑w ...
.data:00410090 ; int Code
.data:00410090 Code            dd 1                    ; DATA XREF: sub_40C880+6D↑r
.data:00410090                                         ; sub_40C880+9A↑r ...
.data:00410094                 align 10h
.data:004100A0 dword_4100A0    dd 0FFFFFFFFh           ; DATA XREF: sub_401080+22↑r
.data:004100A4                 align 10h
.data:004100B0 ; int Mode
.data:004100B0 Mode            dd 0                    ; DATA XREF: sub_401080+4E↑r
.data:004100B0                                         ; sub_401080+80↑r ...
.data:004100B4                 align 10h
.data:004100C0 dword_4100C0    dd 4000h                ; DATA XREF: sub_401080+57↑w
.data:004100C0                                         ; sub_401080+BA↑r
.data:004100C4                 align 10h
.data:004100D0 dword_4100D0    dd 0                    ; DATA XREF: sub_40E950+9↑r
.data:004100D0                                         ; sub_40E950+1D↑w
.data:004100D4 off_4100D4      dd offset dword_40F28C  ; DATA XREF: sub_40E8C0+6↑r
.data:004100D4                                         ; sub_40E8C0+17↑r ...
.data:004100D8                 align 1000h
.data:004100D8 _data           ends
.data:004100D8
.bss:00411000 ; Section 3. (virtual address 00011000)
.bss:00411000 ; Virtual size                  : 00000490 (   1168.)
.bss:00411000 ; Section size in file          : 00000000 (      0.)
.bss:00411000 ; Offset to raw data for section: 00000000
.bss:00411000 ; Flags C0000080: Bss Readable Writable
.bss:00411000 ; Alignment     : default
.bss:00411000 ; ===========================================================================
.bss:00411000
.bss:00411000 ; Segment type: Uninitialized
.bss:00411000 ; Segment permissions: Read/Write
.bss:00411000 _bss            segment para public 'BSS' use32
.bss:00411000                 assume cs:_bss
.bss:00411000                 ;org 411000h
.bss:00411000                 assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
.bss:00411000 dword_411000    dd ?                    ; DATA XREF: sub_401E90+773↑w
.bss:00411000                                         ; sub_402980+C3↑w ...
.bss:00411004                 align 10h
.bss:00411010 dword_411010    dd ?                    ; DATA XREF: sub_401E90+66F↑w
.bss:00411010                                         ; sub_402980:loc_402ABF↑r
.bss:00411014                 align 10h
.bss:00411020 dword_411020    dd ?                    ; DATA XREF: sub_401E90+6B9↑w
.bss:00411020                                         ; sub_402980+112↑r
.bss:00411024                 align 10h
.bss:00411030 dword_411030    dd ?                    ; DATA XREF: sub_401E90+6F3↑w
.bss:00411030                                         ; sub_402980+A8↑r
.bss:00411034                 align 10h
.bss:00411040 ; char *dword_411040
.bss:00411040 dword_411040    dd ?                    ; DATA XREF: sub_401E90+737↑w
.bss:00411040                                         ; sub_401E90+762↑r ...
.bss:00411044                 align 10h
.bss:00411050 dword_411050    dd ?                    ; DATA XREF: sub_402BC0+95↑r
.bss:00411050                                         ; sub_402BC0+AA↑w ...
.bss:00411054 dword_411054    dd ?                    ; DATA XREF: sub_402BC0+9A↑r
.bss:00411054                                         ; sub_402BC0+B3↑w ...
.bss:00411058                 align 10h
.bss:00411060 dword_411060    dd ?                    ; DATA XREF: sub_401E90+79A↑w
.bss:00411060                                         ; sub_402980+C8↑w ...
.bss:00411064                 align 10h
.bss:00411070 unk_411070      db    ? ;               ; DATA XREF: sub_401E90:loc_4021FC↑o
.bss:00411070                                         ; sub_401E90+753↑o ...
.bss:00411071                 db    ? ;
.bss:00411072                 db    ? ;
.bss:00411073                 db    ? ;
.bss:00411074                 db    ? ;
.bss:00411075                 db    ? ;
.bss:00411076                 db    ? ;
.bss:00411077                 db    ? ;
.bss:00411078                 db    ? ;
.bss:00411079                 db    ? ;
.bss:0041107A                 db    ? ;
.bss:0041107B                 db    ? ;
.bss:0041107C                 db    ? ;
.bss:0041107D                 db    ? ;
.bss:0041107E                 db    ? ;
.bss:0041107F                 db    ? ;
.bss:00411080                 db    ? ;
.bss:00411081                 db    ? ;
.bss:00411082                 db    ? ;
.bss:00411083                 db    ? ;
.bss:00411084                 db    ? ;
.bss:00411085                 db    ? ;
.bss:00411086                 db    ? ;
.bss:00411087                 db    ? ;
.bss:00411088                 db    ? ;
.bss:00411089                 db    ? ;
.bss:0041108A                 db    ? ;
.bss:0041108B                 db    ? ;
.bss:0041108C                 db    ? ;
.bss:0041108D                 db    ? ;
.bss:0041108E                 db    ? ;
.bss:0041108F                 db    ? ;
.bss:00411090 unk_411090      db    ? ;               ; DATA XREF: sub_401E90+2D4↑o
.bss:00411090                                         ; sub_402980+15A↑o
.bss:00411091                 db    ? ;
.bss:00411092                 db    ? ;
.bss:00411093                 db    ? ;
.bss:00411094                 db    ? ;
.bss:00411095                 db    ? ;
.bss:00411096                 db    ? ;
.bss:00411097                 db    ? ;
.bss:00411098                 db    ? ;
.bss:00411099                 db    ? ;
.bss:0041109A                 db    ? ;
.bss:0041109B                 db    ? ;
.bss:0041109C                 db    ? ;
.bss:0041109D                 db    ? ;
.bss:0041109E                 db    ? ;
.bss:0041109F                 db    ? ;
.bss:004110A0                 db    ? ;
.bss:004110A1                 db    ? ;
.bss:004110A2                 db    ? ;
.bss:004110A3                 db    ? ;
.bss:004110A4                 db    ? ;
.bss:004110A5                 db    ? ;
.bss:004110A6                 db    ? ;
.bss:004110A7                 db    ? ;
.bss:004110A8                 db    ? ;
.bss:004110A9                 db    ? ;
.bss:004110AA                 db    ? ;
.bss:004110AB                 db    ? ;
.bss:004110AC                 db    ? ;
.bss:004110AD                 db    ? ;
.bss:004110AE                 db    ? ;
.bss:004110AF                 db    ? ;
.bss:004110B0 unk_4110B0      db    ? ;               ; DATA XREF: sub_401E90:loc_4021C9↑o
.bss:004110B0                                         ; sub_402980+BE↑o
.bss:004110B1                 db    ? ;
.bss:004110B2                 db    ? ;
.bss:004110B3                 db    ? ;
.bss:004110B4                 db    ? ;
.bss:004110B5                 db    ? ;
.bss:004110B6                 db    ? ;
.bss:004110B7                 db    ? ;
.bss:004110B8                 db    ? ;
.bss:004110B9                 db    ? ;
.bss:004110BA                 db    ? ;
.bss:004110BB                 db    ? ;
.bss:004110BC                 db    ? ;
.bss:004110BD                 db    ? ;
.bss:004110BE                 db    ? ;
.bss:004110BF                 db    ? ;
.bss:004110C0                 db    ? ;
.bss:004110C1                 db    ? ;
.bss:004110C2                 db    ? ;
.bss:004110C3                 db    ? ;
.bss:004110C4                 db    ? ;
.bss:004110C5                 db    ? ;
.bss:004110C6                 db    ? ;
.bss:004110C7                 db    ? ;
.bss:004110C8                 db    ? ;
.bss:004110C9                 db    ? ;
.bss:004110CA                 db    ? ;
.bss:004110CB                 db    ? ;
.bss:004110CC                 db    ? ;
.bss:004110CD                 db    ? ;
.bss:004110CE                 db    ? ;
.bss:004110CF                 db    ? ;
.bss:004110D0 dword_4110D0    dd ?                    ; DATA XREF: sub_401E90+660↑w
.bss:004110D0                                         ; sub_402980+75↑r
.bss:004110D4                 align 10h
.bss:004110E0 dword_4110E0    dd ?                    ; DATA XREF: sub_401E90+6AA↑w
.bss:004110E0                                         ; sub_402980+85↑r
.bss:004110E4                 align 10h
.bss:004110F0 dword_4110F0    dd ?                    ; DATA XREF: sub_401E90+6E2↑w
.bss:004110F0                                         ; sub_402980+95↑r
.bss:004110F4                 align 10h
.bss:00411100 unk_411100      db    ? ;               ; DATA XREF: sub_401E90+70A↑o
.bss:00411100                                         ; sub_402980+34↑o
.bss:00411101                 db    ? ;
.bss:00411102                 db    ? ;
.bss:00411103                 db    ? ;
.bss:00411104 ; size_t ElementCount
.bss:00411104 ElementCount    dd ?                    ; DATA XREF: sub_402980+48↑r
.bss:00411104                                         ; sub_402BC0+3E↑r ...
.bss:00411108 ; void *Buffer
.bss:00411108 Buffer          dd ?                    ; DATA XREF: sub_402980+58↑r
.bss:00411108                                         ; sub_402BC0+44↑r ...
.bss:0041110C                 align 10h
.bss:00411110 dword_411110    dd ?                    ; DATA XREF: sub_401E90+78E↑w
.bss:00411110                                         ; sub_402980+183↑w ...
.bss:00411114 ; char dword_411114[]
.bss:00411114 dword_411114    dd ?                    ; DATA XREF: sub_401E90+794↑w
.bss:00411114                                         ; sub_402980+189↑w ...
.bss:00411118                 align 10h
.bss:00411120 byte_411120     db ?                    ; DATA XREF: sub_401E90+69↑w
.bss:00411120                                         ; sub_401E90:loc_40263B↑r ...
.bss:00411121                 align 10h
.bss:00411130 dword_411130    dd ?                    ; DATA XREF: sub_406090+AB↑r
.bss:00411130                                         ; sub_406090+334B↑w
.bss:00411134                 align 10h
.bss:00411140 byte_411140     db ?                    ; DATA XREF: sub_403180:loc_403BEC↑r
.bss:00411140                                         ; sub_403180:loc_403C18↑r ...
.bss:00411141                 db    ? ;
.bss:00411142                 db    ? ;
.bss:00411143                 db    ? ;
.bss:00411144                 db    ? ;
.bss:00411145                 db    ? ;
.bss:00411146                 db    ? ;
.bss:00411147                 db    ? ;
.bss:00411148                 db    ? ;
.bss:00411149                 db    ? ;
.bss:0041114A                 db    ? ;
.bss:0041114B                 db    ? ;
.bss:0041114C                 db    ? ;
.bss:0041114D                 db    ? ;
.bss:0041114E                 db    ? ;
.bss:0041114F                 db    ? ;
.bss:00411150                 db    ? ;
.bss:00411151                 db    ? ;
.bss:00411152                 db    ? ;
.bss:00411153                 db    ? ;
.bss:00411154                 db    ? ;
.bss:00411155                 db    ? ;
.bss:00411156                 db    ? ;
.bss:00411157                 db    ? ;
.bss:00411158                 db    ? ;
.bss:00411159                 db    ? ;
.bss:0041115A                 db    ? ;
.bss:0041115B                 db    ? ;
.bss:0041115C                 db    ? ;
.bss:0041115D                 db    ? ;
.bss:0041115E                 db    ? ;
.bss:0041115F                 db    ? ;
.bss:00411160                 db    ? ;
.bss:00411161                 db    ? ;
.bss:00411162                 db    ? ;
.bss:00411163                 db    ? ;
.bss:00411164                 db    ? ;
.bss:00411165                 db    ? ;
.bss:00411166                 db    ? ;
.bss:00411167                 db    ? ;
.bss:00411168                 db    ? ;
.bss:00411169                 db    ? ;
.bss:0041116A                 db    ? ;
.bss:0041116B                 db    ? ;
.bss:0041116C                 db    ? ;
.bss:0041116D                 db    ? ;
.bss:0041116E                 db    ? ;
.bss:0041116F                 db    ? ;
.bss:00411170                 db    ? ;
.bss:00411171                 db    ? ;
.bss:00411172                 db    ? ;
.bss:00411173                 db    ? ;
.bss:00411174                 db    ? ;
.bss:00411175                 db    ? ;
.bss:00411176                 db    ? ;
.bss:00411177                 db    ? ;
.bss:00411178                 db    ? ;
.bss:00411179                 db    ? ;
.bss:0041117A                 db    ? ;
.bss:0041117B                 db    ? ;
.bss:0041117C                 db    ? ;
.bss:0041117D                 db    ? ;
.bss:0041117E                 db    ? ;
.bss:0041117F                 db    ? ;
.bss:00411180                 db    ? ;
.bss:00411181                 db    ? ;
.bss:00411182                 db    ? ;
.bss:00411183                 db    ? ;
.bss:00411184                 db    ? ;
.bss:00411185                 db    ? ;
.bss:00411186                 db    ? ;
.bss:00411187                 db    ? ;
.bss:00411188                 db    ? ;
.bss:00411189                 db    ? ;
.bss:0041118A                 db    ? ;
.bss:0041118B                 db    ? ;
.bss:0041118C                 db    ? ;
.bss:0041118D                 db    ? ;
.bss:0041118E                 db    ? ;
.bss:0041118F                 db    ? ;
.bss:00411190                 db    ? ;
.bss:00411191                 db    ? ;
.bss:00411192                 db    ? ;
.bss:00411193                 db    ? ;
.bss:00411194                 db    ? ;
.bss:00411195                 db    ? ;
.bss:00411196                 db    ? ;
.bss:00411197                 db    ? ;
.bss:00411198                 db    ? ;
.bss:00411199                 db    ? ;
.bss:0041119A                 db    ? ;
.bss:0041119B                 db    ? ;
.bss:0041119C                 db    ? ;
.bss:0041119D                 db    ? ;
.bss:0041119E                 db    ? ;
.bss:0041119F byte_41119F     db ?                    ; DATA XREF: sub_406090+333F↑w
.bss:004111A0                 db    ? ;
.bss:004111A1                 db    ? ;
.bss:004111A2                 db    ? ;
.bss:004111A3                 db    ? ;
.bss:004111A4                 db    ? ;
.bss:004111A5                 db    ? ;
.bss:004111A6                 db    ? ;
.bss:004111A7                 db    ? ;
.bss:004111A8                 db    ? ;
.bss:004111A9                 db    ? ;
.bss:004111AA                 db    ? ;
.bss:004111AB                 db    ? ;
.bss:004111AC                 db    ? ;
.bss:004111AD                 db    ? ;
.bss:004111AE                 db    ? ;
.bss:004111AF                 db    ? ;
.bss:004111B0                 db    ? ;
.bss:004111B1                 db    ? ;
.bss:004111B2                 db    ? ;
.bss:004111B3                 db    ? ;
.bss:004111B4                 db    ? ;
.bss:004111B5                 db    ? ;
.bss:004111B6                 db    ? ;
.bss:004111B7                 db    ? ;
.bss:004111B8                 db    ? ;
.bss:004111B9                 db    ? ;
.bss:004111BA                 db    ? ;
.bss:004111BB                 db    ? ;
.bss:004111BC                 db    ? ;
.bss:004111BD                 db    ? ;
.bss:004111BE                 db    ? ;
.bss:004111BF                 db    ? ;
.bss:004111C0                 db    ? ;
.bss:004111C1                 db    ? ;
.bss:004111C2                 db    ? ;
.bss:004111C3                 db    ? ;
.bss:004111C4                 db    ? ;
.bss:004111C5                 db    ? ;
.bss:004111C6                 db    ? ;
.bss:004111C7                 db    ? ;
.bss:004111C8                 db    ? ;
.bss:004111C9                 db    ? ;
.bss:004111CA                 db    ? ;
.bss:004111CB                 db    ? ;
.bss:004111CC                 db    ? ;
.bss:004111CD                 db    ? ;
.bss:004111CE                 db    ? ;
.bss:004111CF                 db    ? ;
.bss:004111D0                 db    ? ;
.bss:004111D1                 db    ? ;
.bss:004111D2                 db    ? ;
.bss:004111D3                 db    ? ;
.bss:004111D4                 db    ? ;
.bss:004111D5                 db    ? ;
.bss:004111D6                 db    ? ;
.bss:004111D7                 db    ? ;
.bss:004111D8                 db    ? ;
.bss:004111D9                 db    ? ;
.bss:004111DA                 db    ? ;
.bss:004111DB                 db    ? ;
.bss:004111DC                 db    ? ;
.bss:004111DD                 db    ? ;
.bss:004111DE                 db    ? ;
.bss:004111DF                 db    ? ;
.bss:004111E0                 db    ? ;
.bss:004111E1                 db    ? ;
.bss:004111E2                 db    ? ;
.bss:004111E3                 db    ? ;
.bss:004111E4                 db    ? ;
.bss:004111E5                 db    ? ;
.bss:004111E6                 db    ? ;
.bss:004111E7                 db    ? ;
.bss:004111E8                 db    ? ;
.bss:004111E9                 db    ? ;
.bss:004111EA                 db    ? ;
.bss:004111EB                 db    ? ;
.bss:004111EC                 db    ? ;
.bss:004111ED                 db    ? ;
.bss:004111EE                 db    ? ;
.bss:004111EF                 db    ? ;
.bss:004111F0                 db    ? ;
.bss:004111F1                 db    ? ;
.bss:004111F2                 db    ? ;
.bss:004111F3                 db    ? ;
.bss:004111F4                 db    ? ;
.bss:004111F5                 db    ? ;
.bss:004111F6                 db    ? ;
.bss:004111F7                 db    ? ;
.bss:004111F8                 db    ? ;
.bss:004111F9                 db    ? ;
.bss:004111FA                 db    ? ;
.bss:004111FB                 db    ? ;
.bss:004111FC                 db    ? ;
.bss:004111FD                 db    ? ;
.bss:004111FE                 db    ? ;
.bss:004111FF                 db    ? ;
.bss:00411200                 db    ? ;
.bss:00411201                 db    ? ;
.bss:00411202                 db    ? ;
.bss:00411203                 db    ? ;
.bss:00411204                 db    ? ;
.bss:00411205                 db    ? ;
.bss:00411206                 db    ? ;
.bss:00411207                 db    ? ;
.bss:00411208                 db    ? ;
.bss:00411209                 db    ? ;
.bss:0041120A                 db    ? ;
.bss:0041120B                 db    ? ;
.bss:0041120C                 db    ? ;
.bss:0041120D                 db    ? ;
.bss:0041120E                 db    ? ;
.bss:0041120F                 db    ? ;
.bss:00411210                 db    ? ;
.bss:00411211                 db    ? ;
.bss:00411212                 db    ? ;
.bss:00411213                 db    ? ;
.bss:00411214                 db    ? ;
.bss:00411215                 db    ? ;
.bss:00411216                 db    ? ;
.bss:00411217                 db    ? ;
.bss:00411218                 db    ? ;
.bss:00411219                 db    ? ;
.bss:0041121A                 db    ? ;
.bss:0041121B                 db    ? ;
.bss:0041121C                 db    ? ;
.bss:0041121D                 db    ? ;
.bss:0041121E                 db    ? ;
.bss:0041121F                 db    ? ;
.bss:00411220                 db    ? ;
.bss:00411221                 db    ? ;
.bss:00411222                 db    ? ;
.bss:00411223                 db    ? ;
.bss:00411224                 db    ? ;
.bss:00411225                 db    ? ;
.bss:00411226                 db    ? ;
.bss:00411227                 db    ? ;
.bss:00411228                 db    ? ;
.bss:00411229                 db    ? ;
.bss:0041122A                 db    ? ;
.bss:0041122B                 db    ? ;
.bss:0041122C                 db    ? ;
.bss:0041122D                 db    ? ;
.bss:0041122E                 db    ? ;
.bss:0041122F                 db    ? ;
.bss:00411230                 db    ? ;
.bss:00411231                 db    ? ;
.bss:00411232                 db    ? ;
.bss:00411233                 db    ? ;
.bss:00411234                 db    ? ;
.bss:00411235                 db    ? ;
.bss:00411236                 db    ? ;
.bss:00411237                 db    ? ;
.bss:00411238                 db    ? ;
.bss:00411239                 db    ? ;
.bss:0041123A                 db    ? ;
.bss:0041123B                 db    ? ;
.bss:0041123C                 db    ? ;
.bss:0041123D                 db    ? ;
.bss:0041123E                 db    ? ;
.bss:0041123F                 db    ? ;
.bss:00411240 unk_411240      db    ? ;               ; DATA XREF: sub_403180+148↑o
.bss:00411240                                         ; sub_403180+153↑o ...
.bss:00411241                 db    ? ;
.bss:00411242                 db    ? ;
.bss:00411243                 db    ? ;
.bss:00411244                 db    ? ;
.bss:00411245                 db    ? ;
.bss:00411246                 db    ? ;
.bss:00411247                 db    ? ;
.bss:00411248                 db    ? ;
.bss:00411249                 db    ? ;
.bss:0041124A                 db    ? ;
.bss:0041124B                 db    ? ;
.bss:0041124C                 db    ? ;
.bss:0041124D                 db    ? ;
.bss:0041124E                 db    ? ;
.bss:0041124F                 db    ? ;
.bss:00411250 dword_411250    dd ?                    ; DATA XREF: sub_40A860+9↑o
.bss:00411250                                         ; sub_40A860+17↑w ...
.bss:00411254 dword_411254    dd ?                    ; DATA XREF: sub_40A860+21↑w
.bss:00411254                                         ; .text:0040A919↑w
.bss:00411258 dword_411258    dd ?                    ; DATA XREF: sub_40A860+77↑r
.bss:00411258                                         ; .text:0040A967↑r
.bss:0041125C dword_41125C    dd ?                    ; DATA XREF: sub_40A860+6B↑r
.bss:0041125C                                         ; .text:0040A95B↑r
.bss:00411260                 align 40h
.bss:00411280 ; char *dword_411280
.bss:00411280 dword_411280    dd ?                    ; DATA XREF: .text:0040C854↑w
.bss:00411280                                         ; sub_40C880+58↑r
.bss:00411284                 align 10h
.bss:00411290 unk_411290      db    ? ;               ; DATA XREF: sub_40DE00+100↑o
.bss:00411290                                         ; .data:off_410088↑o
.bss:00411291                 db    ? ;
.bss:00411292                 db    ? ;
.bss:00411293                 db    ? ;
.bss:00411294                 db    ? ;
.bss:00411295                 db    ? ;
.bss:00411296                 db    ? ;
.bss:00411297                 db    ? ;
.bss:00411298                 db    ? ;
.bss:00411299                 db    ? ;
.bss:0041129A                 db    ? ;
.bss:0041129B                 db    ? ;
.bss:0041129C                 db    ? ;
.bss:0041129D                 db    ? ;
.bss:0041129E                 db    ? ;
.bss:0041129F                 db    ? ;
.bss:004112A0                 db    ? ;
.bss:004112A1                 db    ? ;
.bss:004112A2                 db    ? ;
.bss:004112A3                 db    ? ;
.bss:004112A4                 db    ? ;
.bss:004112A5                 db    ? ;
.bss:004112A6                 db    ? ;
.bss:004112A7                 db    ? ;
.bss:004112A8                 db    ? ;
.bss:004112A9                 db    ? ;
.bss:004112AA                 db    ? ;
.bss:004112AB                 db    ? ;
.bss:004112AC                 db    ? ;
.bss:004112AD                 db    ? ;
.bss:004112AE                 db    ? ;
.bss:004112AF                 db    ? ;
.bss:004112B0                 db    ? ;
.bss:004112B1                 db    ? ;
.bss:004112B2                 db    ? ;
.bss:004112B3                 db    ? ;
.bss:004112B4                 db    ? ;
.bss:004112B5                 db    ? ;
.bss:004112B6                 db    ? ;
.bss:004112B7                 db    ? ;
.bss:004112B8                 db    ? ;
.bss:004112B9                 db    ? ;
.bss:004112BA                 db    ? ;
.bss:004112BB                 db    ? ;
.bss:004112BC                 db    ? ;
.bss:004112BD                 db    ? ;
.bss:004112BE                 db    ? ;
.bss:004112BF                 db    ? ;
.bss:004112C0                 db    ? ;
.bss:004112C1                 db    ? ;
.bss:004112C2                 db    ? ;
.bss:004112C3                 db    ? ;
.bss:004112C4                 db    ? ;
.bss:004112C5                 db    ? ;
.bss:004112C6                 db    ? ;
.bss:004112C7                 db    ? ;
.bss:004112C8                 db    ? ;
.bss:004112C9                 db    ? ;
.bss:004112CA                 db    ? ;
.bss:004112CB                 db    ? ;
.bss:004112CC                 db    ? ;
.bss:004112CD                 db    ? ;
.bss:004112CE                 db    ? ;
.bss:004112CF                 db    ? ;
.bss:004112D0                 db    ? ;
.bss:004112D1                 db    ? ;
.bss:004112D2                 db    ? ;
.bss:004112D3                 db    ? ;
.bss:004112D4                 db    ? ;
.bss:004112D5                 db    ? ;
.bss:004112D6                 db    ? ;
.bss:004112D7                 db    ? ;
.bss:004112D8                 db    ? ;
.bss:004112D9                 db    ? ;
.bss:004112DA                 db    ? ;
.bss:004112DB                 db    ? ;
.bss:004112DC                 db    ? ;
.bss:004112DD                 db    ? ;
.bss:004112DE                 db    ? ;
.bss:004112DF                 db    ? ;
.bss:004112E0                 db    ? ;
.bss:004112E1                 db    ? ;
.bss:004112E2                 db    ? ;
.bss:004112E3                 db    ? ;
.bss:004112E4                 db    ? ;
.bss:004112E5                 db    ? ;
.bss:004112E6                 db    ? ;
.bss:004112E7                 db    ? ;
.bss:004112E8                 db    ? ;
.bss:004112E9                 db    ? ;
.bss:004112EA                 db    ? ;
.bss:004112EB                 db    ? ;
.bss:004112EC                 db    ? ;
.bss:004112ED                 db    ? ;
.bss:004112EE                 db    ? ;
.bss:004112EF                 db    ? ;
.bss:004112F0                 db    ? ;
.bss:004112F1                 db    ? ;
.bss:004112F2                 db    ? ;
.bss:004112F3                 db    ? ;
.bss:004112F4                 db    ? ;
.bss:004112F5                 db    ? ;
.bss:004112F6                 db    ? ;
.bss:004112F7                 db    ? ;
.bss:004112F8                 db    ? ;
.bss:004112F9                 db    ? ;
.bss:004112FA                 db    ? ;
.bss:004112FB                 db    ? ;
.bss:004112FC                 db    ? ;
.bss:004112FD                 db    ? ;
.bss:004112FE                 db    ? ;
.bss:004112FF                 db    ? ;
.bss:00411300                 db    ? ;
.bss:00411301                 db    ? ;
.bss:00411302                 db    ? ;
.bss:00411303                 db    ? ;
.bss:00411304                 db    ? ;
.bss:00411305                 db    ? ;
.bss:00411306                 db    ? ;
.bss:00411307                 db    ? ;
.bss:00411308                 db    ? ;
.bss:00411309                 db    ? ;
.bss:0041130A                 db    ? ;
.bss:0041130B                 db    ? ;
.bss:0041130C                 db    ? ;
.bss:0041130D                 db    ? ;
.bss:0041130E                 db    ? ;
.bss:0041130F                 db    ? ;
.bss:00411310                 db    ? ;
.bss:00411311                 db    ? ;
.bss:00411312                 db    ? ;
.bss:00411313                 db    ? ;
.bss:00411314                 db    ? ;
.bss:00411315                 db    ? ;
.bss:00411316                 db    ? ;
.bss:00411317                 db    ? ;
.bss:00411318                 db    ? ;
.bss:00411319                 db    ? ;
.bss:0041131A                 db    ? ;
.bss:0041131B                 db    ? ;
.bss:0041131C                 db    ? ;
.bss:0041131D                 db    ? ;
.bss:0041131E                 db    ? ;
.bss:0041131F                 db    ? ;
.bss:00411320                 db    ? ;
.bss:00411321                 db    ? ;
.bss:00411322                 db    ? ;
.bss:00411323                 db    ? ;
.bss:00411324                 db    ? ;
.bss:00411325                 db    ? ;
.bss:00411326                 db    ? ;
.bss:00411327                 db    ? ;
.bss:00411328                 db    ? ;
.bss:00411329                 db    ? ;
.bss:0041132A                 db    ? ;
.bss:0041132B                 db    ? ;
.bss:0041132C                 db    ? ;
.bss:0041132D                 db    ? ;
.bss:0041132E                 db    ? ;
.bss:0041132F                 db    ? ;
.bss:00411330                 db    ? ;
.bss:00411331                 db    ? ;
.bss:00411332                 db    ? ;
.bss:00411333                 db    ? ;
.bss:00411334                 db    ? ;
.bss:00411335                 db    ? ;
.bss:00411336                 db    ? ;
.bss:00411337                 db    ? ;
.bss:00411338                 db    ? ;
.bss:00411339                 db    ? ;
.bss:0041133A                 db    ? ;
.bss:0041133B                 db    ? ;
.bss:0041133C                 db    ? ;
.bss:0041133D                 db    ? ;
.bss:0041133E                 db    ? ;
.bss:0041133F                 db    ? ;
.bss:00411340                 db    ? ;
.bss:00411341                 db    ? ;
.bss:00411342                 db    ? ;
.bss:00411343                 db    ? ;
.bss:00411344                 db    ? ;
.bss:00411345                 db    ? ;
.bss:00411346                 db    ? ;
.bss:00411347                 db    ? ;
.bss:00411348                 db    ? ;
.bss:00411349                 db    ? ;
.bss:0041134A                 db    ? ;
.bss:0041134B                 db    ? ;
.bss:0041134C                 db    ? ;
.bss:0041134D                 db    ? ;
.bss:0041134E                 db    ? ;
.bss:0041134F                 db    ? ;
.bss:00411350                 db    ? ;
.bss:00411351                 db    ? ;
.bss:00411352                 db    ? ;
.bss:00411353                 db    ? ;
.bss:00411354                 db    ? ;
.bss:00411355                 db    ? ;
.bss:00411356                 db    ? ;
.bss:00411357                 db    ? ;
.bss:00411358                 db    ? ;
.bss:00411359                 db    ? ;
.bss:0041135A                 db    ? ;
.bss:0041135B                 db    ? ;
.bss:0041135C                 db    ? ;
.bss:0041135D                 db    ? ;
.bss:0041135E                 db    ? ;
.bss:0041135F                 db    ? ;
.bss:00411360                 db    ? ;
.bss:00411361                 db    ? ;
.bss:00411362                 db    ? ;
.bss:00411363                 db    ? ;
.bss:00411364                 db    ? ;
.bss:00411365                 db    ? ;
.bss:00411366                 db    ? ;
.bss:00411367                 db    ? ;
.bss:00411368                 db    ? ;
.bss:00411369                 db    ? ;
.bss:0041136A                 db    ? ;
.bss:0041136B                 db    ? ;
.bss:0041136C                 db    ? ;
.bss:0041136D                 db    ? ;
.bss:0041136E                 db    ? ;
.bss:0041136F                 db    ? ;
.bss:00411370                 db    ? ;
.bss:00411371                 db    ? ;
.bss:00411372                 db    ? ;
.bss:00411373                 db    ? ;
.bss:00411374                 db    ? ;
.bss:00411375                 db    ? ;
.bss:00411376                 db    ? ;
.bss:00411377                 db    ? ;
.bss:00411378                 db    ? ;
.bss:00411379                 db    ? ;
.bss:0041137A                 db    ? ;
.bss:0041137B                 db    ? ;
.bss:0041137C                 db    ? ;
.bss:0041137D                 db    ? ;
.bss:0041137E                 db    ? ;
.bss:0041137F                 db    ? ;
.bss:00411380                 db    ? ;
.bss:00411381                 db    ? ;
.bss:00411382                 db    ? ;
.bss:00411383                 db    ? ;
.bss:00411384                 db    ? ;
.bss:00411385                 db    ? ;
.bss:00411386                 db    ? ;
.bss:00411387                 db    ? ;
.bss:00411388                 db    ? ;
.bss:00411389                 db    ? ;
.bss:0041138A                 db    ? ;
.bss:0041138B                 db    ? ;
.bss:0041138C                 db    ? ;
.bss:0041138D                 db    ? ;
.bss:0041138E                 db    ? ;
.bss:0041138F                 db    ? ;
.bss:00411390 dword_411390    dd ?                    ; DATA XREF: .text:loc_40D791↑o
.bss:00411390                                         ; .text:loc_40D7B0↑o ...
.bss:00411394 dword_411394    dd ?                    ; DATA XREF: .text:loc_40D830↑o
.bss:00411394                                         ; .text:0040DCB8↑r ...
.bss:00411398 dword_411398    dd ?                    ; DATA XREF: .text:0040DCB2↑r
.bss:00411398                                         ; sub_40DD60+2C↑r
.bss:0041139C dword_41139C    dd ?                    ; DATA XREF: .text:0040DCA6↑r
.bss:0041139C                                         ; sub_40DD60+22↑r
.bss:004113A0 dword_4113A0    dd ?                    ; DATA XREF: .text:0040DCC2↑r
.bss:004113A0                                         ; sub_40DD60+36↑r
.bss:004113A4 dword_4113A4    dd ?                    ; DATA XREF: .text:0040DCD2↑r
.bss:004113A4                                         ; sub_40DD60+4E↑r
.bss:004113A8 dword_4113A8    dd ?                    ; DATA XREF: .text:0040DCEF↑r
.bss:004113A8                                         ; sub_40DD60+62↑r
.bss:004113AC dword_4113AC    dd ?                    ; DATA XREF: .text:0040DCE5↑r
.bss:004113AC                                         ; sub_40DD60+70↑r
.bss:004113B0 dword_4113B0    dd ?                    ; DATA XREF: .text:0040DCC8↑r
.bss:004113B0                                         ; sub_40DD60+7A↑r
.bss:004113B4                 align 10h
.bss:004113C0 ; char *Str1
.bss:004113C0 Str1            dd ?                    ; DATA XREF: sub_40E184:loc_40E1BD↑w
.bss:004113C0                                         ; sub_40E184:loc_40E2F0↑r
.bss:004113C4                 align 10h
.bss:004113D0 dword_4113D0    dd ?                    ; DATA XREF: sub_40E184+2D↑r
.bss:004113D0                                         ; sub_40E184+3F↑w
.bss:004113D4                 align 10h
.bss:004113E0 dword_4113E0    dd ?                    ; DATA XREF: sub_401E90+30↑w
.bss:004113E0                                         ; sub_401E90+F3↑r ...
.bss:004113E4                 align 20h
.bss:00411400 dword_411400    dd ?                    ; DATA XREF: .text:00405DE0↑r
.bss:00411400                                         ; .text:00405DE9↑w ...
.bss:00411404                 align 10h
.bss:00411410 ; char *dword_411410
.bss:00411410 dword_411410    dd ?                    ; DATA XREF: sub_401E90+2BA↑r
.bss:00411410                                         ; sub_401E90+2F0↑r ...
.bss:00411414                 align 10h
.bss:00411420 dword_411420    dd ?                    ; CODE XREF: sub_40E184+63↑p
.bss:00411420                                         ; DATA XREF: sub_40E080+1E↑r ...
.bss:00411424                 align 10h
.bss:00411430 dword_411430    dd ?                    ; DATA XREF: sub_40E080+4E↑w
.bss:00411430                                         ; sub_40E184+AB↑w
.bss:00411434                 db    ? ;
.bss:00411435                 db    ? ;
.bss:00411436                 db    ? ;
.bss:00411437                 db    ? ;
.bss:00411438                 db    ? ;
.bss:00411439                 db    ? ;
.bss:0041143A                 db    ? ;
.bss:0041143B                 db    ? ;
.bss:0041143C                 db    ? ;
.bss:0041143D                 db    ? ;
.bss:0041143E                 db    ? ;
.bss:0041143F                 db    ? ;
.bss:00411440                 db    ? ;
.bss:00411441                 db    ? ;
.bss:00411442                 db    ? ;
.bss:00411443                 db    ? ;
.bss:00411444                 db    ? ;
.bss:00411445                 db    ? ;
.bss:00411446                 db    ? ;
.bss:00411447                 db    ? ;
.bss:00411448                 db    ? ;
.bss:00411449                 db    ? ;
.bss:0041144A                 db    ? ;
.bss:0041144B                 db    ? ;
.bss:0041144C                 db    ? ;
.bss:0041144D                 db    ? ;
.bss:0041144E                 db    ? ;
.bss:0041144F                 db    ? ;
.bss:00411450                 db    ? ;
.bss:00411451                 db    ? ;
.bss:00411452                 db    ? ;
.bss:00411453                 db    ? ;
.bss:00411454                 db    ? ;
.bss:00411455                 db    ? ;
.bss:00411456                 db    ? ;
.bss:00411457                 db    ? ;
.bss:00411458                 db    ? ;
.bss:00411459                 db    ? ;
.bss:0041145A                 db    ? ;
.bss:0041145B                 db    ? ;
.bss:0041145C                 db    ? ;
.bss:0041145D                 db    ? ;
.bss:0041145E                 db    ? ;
.bss:0041145F                 db    ? ;
.bss:00411460 dword_411460    dd ?                    ; DATA XREF: sub_40E184+13↑r
.bss:00411464                 align 1000h
.bss:00411464 _bss            ends
.bss:00411464
.idata:00412000 ; Section 4. (virtual address 00012000)
.idata:00412000 ; Virtual size                  : 00000624 (   1572.)
.idata:00412000 ; Section size in file          : 00000800 (   2048.)
.idata:00412000 ; Offset to raw data for section: 0000EA00
.idata:00412000 ; Flags C0000040: Data Readable Writable
.idata:00412000 ; Alignment     : default
.idata:00412000 ; ===========================================================================
.idata:00412000
.idata:00412000 ; Segment type: Externs
.idata:00412000 ; _idata
.idata:00412000
.idata:00412001
.idata:00412160 ;
.idata:00412160 ; Imports from libintl3.dll
.idata:00412160 ;
.idata:00412160                 extrn __imp_libintl_bindtextdomain:dword
.idata:00412160                                         ; CODE XREF: sub_401E90+4A↑p
.idata:00412160                                         ; DATA XREF: sub_401E90+4A↑r ...
.idata:00412164                 extrn libintl_gettext:dword
.idata:00412164                                         ; CODE XREF: sub_401E90+ED↑p
.idata:00412164                                         ; sub_401E90+10C↑p ...
.idata:00412168                 extrn libintl_textdomain:dword
.idata:00412168                                         ; CODE XREF: sub_401E90+57↑p
.idata:00412168                                         ; DATA XREF: sub_401E90+57↑r ...
.idata:0041216C
.idata:00412174 ;
.idata:00412174 ; Imports from KERNEL32.dll
.idata:00412174 ;
.idata:00412174 ; void (__stdcall __noreturn *ExitProcess)(UINT uExitCode)
.idata:00412174                 extrn __imp_ExitProcess:dword
.idata:00412174                                         ; DATA XREF: ExitProcess↑r
.idata:00412178 ; LPTOP_LEVEL_EXCEPTION_FILTER (__stdcall *SetUnhandledExceptionFilter)(LPTOP_LEVEL_EXCEPTION_FILTER lpTopLevelExceptionFilter)
.idata:00412178                 extrn __imp_SetUnhandledExceptionFilter:dword
.idata:00412178                                         ; DATA XREF: SetUnhandledExceptionFilter↑r
.idata:0041217C
.idata:00412184 ;
.idata:00412184 ; Imports from MSVCP60.DLL
.idata:00412184 ;
.idata:00412184 ; wint_t (__cdecl *btowc)(int Ch)
.idata:00412184                 extrn __imp_btowc:dword ; DATA XREF: btowc↑r
.idata:00412188 ; size_t (__cdecl *mbrtowc)(wchar_t *DstCh, const char *SrcCh, size_t SizeInBytes, mbstate_t *State)
.idata:00412188                 extrn __imp_mbrtowc:dword
.idata:00412188                                         ; DATA XREF: mbrtowc↑r
.idata:0041218C ; wctype_t (__cdecl *wctype)(const char *name)
.idata:0041218C                 extrn __imp_wctype:dword
.idata:0041218C                                         ; DATA XREF: wctype↑r
.idata:00412190
.idata:00412198 ;
.idata:00412198 ; Imports from msvcrt.dll
.idata:00412198 ;
.idata:00412198                 extrn __imp___getmainargs:dword
.idata:00412198                                         ; DATA XREF: __getmainargs↑r
.idata:0041219C ; int _mb_cur_max
.idata:0041219C                 extrn __mb_cur_max:dword
.idata:0041219C                                         ; DATA XREF: .text:loc_405BE0↑r
.idata:0041219C                                         ; sub_406090:loc_408055↑r ...
.idata:004121A0 ; char ***(__cdecl *__p__environ)()
.idata:004121A0                 extrn __imp___p__environ:dword
.idata:004121A0                                         ; DATA XREF: __p__environ↑r
.idata:004121A4 ; int *(__cdecl *__p__fmode)()
.idata:004121A4                 extrn __imp___p__fmode:dword
.idata:004121A4                                         ; DATA XREF: __p__fmode↑r
.idata:004121A8 ; void (__cdecl *_set_app_type)(_crt_app_type Type)
.idata:004121A8                 extrn __set_app_type:dword
.idata:004121A8                                         ; CODE XREF: start+D↑p
.idata:004121A8                                         ; .text:0040102D↑p
.idata:004121A8                                         ; DATA XREF: ...
.idata:004121AC                 extrn __imp__assert:dword
.idata:004121AC                                         ; DATA XREF: _assert↑r
.idata:004121B0 ; void (__cdecl *_cexit)()
.idata:004121B0                 extrn __imp__cexit:dword
.idata:004121B0                                         ; DATA XREF: _cexit↑r
.idata:004121B4 ; int *(__cdecl *_errno)()
.idata:004121B4                 extrn __imp__errno:dword
.idata:004121B4                                         ; DATA XREF: _errno↑r
.idata:004121B8 ; int (__cdecl *_filbuf)(FILE *File)
.idata:004121B8                 extrn __imp__filbuf:dword
.idata:004121B8                                         ; DATA XREF: _filbuf↑r
.idata:004121BC ; int (__cdecl *_flsbuf)(int Ch, FILE *File)
.idata:004121BC                 extrn __imp__flsbuf:dword
.idata:004121BC                                         ; DATA XREF: _flsbuf↑r
.idata:004121C0 ; FILE iob[]
.idata:004121C0                 extrn _iob:dword        ; DATA XREF: sub_401080+5C↑r
.idata:004121C0                                         ; sub_401080+75↑r ...
.idata:004121C4 ; int (__cdecl *_isctype)(int C, int Type)
.idata:004121C4                 extrn __imp__isctype:dword
.idata:004121C4                                         ; DATA XREF: _isctype↑r
.idata:004121C8 ; _onexit_t (__cdecl *onexit)(_onexit_t Func)
.idata:004121C8                 extrn _onexit:dword     ; CODE XREF: .text:0040106C↑p
.idata:004121C8                                         ; DATA XREF: .text:0040106C↑r
.idata:004121CC ; const unsigned __int16 *pctype
.idata:004121CC                 extrn _pctype:dword     ; DATA XREF: .text:loc_405C21↑r
.idata:004121CC                                         ; sub_406090:loc_4080C9↑r ...
.idata:004121D0 ; int (__cdecl *_setmode)(int FileHandle, int Mode)
.idata:004121D0                 extrn __imp__setmode:dword
.idata:004121D0                                         ; DATA XREF: _setmode↑r
.idata:004121D4 ; void (__cdecl __noreturn *abort)()
.idata:004121D4                 extrn __imp_abort:dword ; DATA XREF: abort↑r
.idata:004121D8 ; int (__cdecl *atexit)(void (__cdecl *)())
.idata:004121D8                 extrn atexit:dword      ; CODE XREF: sub_401040+C↑p
.idata:004121D8                                         ; DATA XREF: sub_401040+C↑r
.idata:004121DC ; void *(__cdecl *calloc)(size_t Count, size_t Size)
.idata:004121DC                 extrn __imp_calloc:dword
.idata:004121DC                                         ; DATA XREF: calloc↑r
.idata:004121E0 ; void (__cdecl *clearerr)(FILE *Stream)
.idata:004121E0                 extrn __imp_clearerr:dword
.idata:004121E0                                         ; DATA XREF: clearerr↑r
.idata:004121E4 ; void (__cdecl __noreturn *exit)(int Code)
.idata:004121E4                 extrn __imp_exit:dword  ; DATA XREF: exit↑r
.idata:004121E8 ; int (__cdecl *fclose)(FILE *Stream)
.idata:004121E8                 extrn __imp_fclose:dword
.idata:004121E8                                         ; DATA XREF: fclose↑r
.idata:004121EC ; int (__cdecl *fflush)(FILE *Stream)
.idata:004121EC                 extrn __imp_fflush:dword
.idata:004121EC                                         ; DATA XREF: fflush↑r
.idata:004121F0 ; FILE *(__cdecl *fopen)(const char *FileName, const char *Mode)
.idata:004121F0                 extrn __imp_fopen:dword ; DATA XREF: fopen↑r
.idata:004121F4 ; int (*fprintf)(FILE *const Stream, const char *const Format, ...)
.idata:004121F4                 extrn __imp_fprintf:dword
.idata:004121F4                                         ; DATA XREF: fprintf↑r
.idata:004121F8 ; int (__cdecl *fputs)(const char *Buffer, FILE *Stream)
.idata:004121F8                 extrn __imp_fputs:dword ; DATA XREF: fputs↑r
.idata:004121FC ; void (__cdecl *free)(void *Block)
.idata:004121FC                 extrn __imp_free:dword  ; DATA XREF: free↑r
.idata:00412200 ; size_t (__cdecl *fwrite)(const void *Buffer, size_t ElementSize, size_t ElementCount, FILE *Stream)
.idata:00412200                 extrn __imp_fwrite:dword
.idata:00412200                                         ; DATA XREF: fwrite↑r
.idata:00412204 ; char *(__cdecl *getenv)(const char *VarName)
.idata:00412204                 extrn __imp_getenv:dword
.idata:00412204                                         ; DATA XREF: getenv↑r
.idata:00412208 ; int (__cdecl *iswctype)(wint_t C, wctype_t Type)
.idata:00412208                 extrn __imp_iswctype:dword
.idata:00412208                                         ; DATA XREF: iswctype↑r
.idata:0041220C ; void *(__cdecl *malloc)(size_t Size)
.idata:0041220C                 extrn __imp_malloc:dword
.idata:0041220C                                         ; DATA XREF: malloc↑r
.idata:00412210 ; void *(__cdecl *memcpy)(void *, const void *Src, size_t Size)
.idata:00412210                 extrn __imp_memcpy:dword
.idata:00412210                                         ; DATA XREF: memcpy↑r
.idata:00412214 ; void *(__cdecl *memset)(void *, int Val, size_t Size)
.idata:00412214                 extrn __imp_memset:dword
.idata:00412214                                         ; DATA XREF: memset↑r
.idata:00412218 ; int (*printf)(const char *const Format, ...)
.idata:00412218                 extrn __imp_printf:dword
.idata:00412218                                         ; DATA XREF: printf↑r
.idata:0041221C ; void *(__cdecl *realloc)(void *Block, size_t Size)
.idata:0041221C                 extrn __imp_realloc:dword
.idata:0041221C                                         ; DATA XREF: realloc↑r
.idata:00412220 ; char *(__cdecl *setlocale)(int Category, const char *Locale)
.idata:00412220                 extrn __imp_setlocale:dword
.idata:00412220                                         ; DATA XREF: setlocale↑r
.idata:00412224 ; _crt_signal_t (__cdecl *signal)(int Signal, _crt_signal_t Function)
.idata:00412224                 extrn __imp_signal:dword
.idata:00412224                                         ; DATA XREF: signal↑r
.idata:00412228 ; char *(__cdecl *strcat)(char *Destination, const char *Source)
.idata:00412228                 extrn __imp_strcat:dword
.idata:00412228                                         ; DATA XREF: strcat↑r
.idata:0041222C ; char *(__cdecl *strchr)(const char *Str, int Val)
.idata:0041222C                 extrn __imp_strchr:dword
.idata:0041222C                                         ; DATA XREF: strchr↑r
.idata:00412230 ; int (__cdecl *strcmp)(const char *Str1, const char *Str2)
.idata:00412230                 extrn __imp_strcmp:dword
.idata:00412230                                         ; DATA XREF: strcmp↑r
.idata:00412234 ; char *(__cdecl *strcpy)(char *Destination, const char *Source)
.idata:00412234                 extrn __imp_strcpy:dword
.idata:00412234                                         ; DATA XREF: strcpy↑r
.idata:00412238 ; char *(__cdecl *strerror)(int ErrorMessage)
.idata:00412238                 extrn __imp_strerror:dword
.idata:00412238                                         ; DATA XREF: strerror↑r
.idata:0041223C ; size_t (__cdecl *strlen)(const char *Str)
.idata:0041223C                 extrn __imp_strlen:dword
.idata:0041223C                                         ; DATA XREF: strlen↑r
.idata:00412240 ; int (__cdecl *strncmp)(const char *Str1, const char *Str2, size_t MaxCount)
.idata:00412240                 extrn __imp_strncmp:dword
.idata:00412240                                         ; DATA XREF: strncmp↑r
.idata:00412244 ; int (__cdecl *strtol)(const char *String, char **EndPtr, int Radix)
.idata:00412244                 extrn __imp_strtol:dword
.idata:00412244                                         ; DATA XREF: strtol↑r
.idata:00412248 ; int (__cdecl *tolower)(int C)
.idata:00412248                 extrn __imp_tolower:dword
.idata:00412248                                         ; DATA XREF: tolower↑r
.idata:0041224C ; int (__cdecl *vfprintf)(FILE *const Stream, const char *const Format, va_list ArgList)
.idata:0041224C                 extrn __imp_vfprintf:dword
.idata:0041224C                                         ; DATA XREF: vfprintf↑r
.idata:00412250
.idata:00412250
.idata:00412250
.idata:00412250                 end start
