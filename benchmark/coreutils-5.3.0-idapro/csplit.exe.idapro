.text:00401000 ;
.text:00401000 ; +-------------------------------------------------------------------------+
.text:00401000 ; |      This file was generated by The Interactive Disassembler (IDA)      |
.text:00401000 ; |           Copyright (c) 2021 Hex-Rays, <support@hex-rays.com>           |
.text:00401000 ; |                      License info: 48-357D-7BC4-C6                      |
.text:00401000 ; |                              Virginia Tech                              |
.text:00401000 ; +-------------------------------------------------------------------------+
.text:00401000 ;
.text:00401000 ; Input SHA256 : 410AE445C107A342F457FF483E056C66B637EF688FC5C3AE137C88805E057FB0
.text:00401000 ; Input MD5    : 0D75A5C06CBB8CFD0F85EBE4ED8EF2EF
.text:00401000 ; Input CRC32  : CD90E813
.text:00401000
.text:00401000 ; File Name   : /home/cindy/Documents/Projects/binary_cmc/benchmark/coreutils-5.3.0-bin/bin/csplit.exe
.text:00401000 ; Format      : Portable executable for 80386 (PE)
.text:00401000 ; Imagebase   : 400000
.text:00401000 ; Timestamp   : 4266A253 (Wed Apr 20 18:41:23 2005)
.text:00401000 ; Section 1. (virtual address 00001000)
.text:00401000 ; Virtual size                  : 00010B50 (  68432.)
.text:00401000 ; Section size in file          : 00010C00 (  68608.)
.text:00401000 ; Offset to raw data for section: 00000400
.text:00401000 ; Flags 60000020: Text Executable Readable
.text:00401000 ; Alignment     : default
.text:00401000
.text:00401000                 .686p
.text:00401000                 .mmx
.text:00401000                 .model flat
.text:00401000
.text:00401000 ; ===========================================================================
.text:00401000
.text:00401000 ; Segment type: Pure code
.text:00401000 ; Segment permissions: Read/Execute
.text:00401000 _text           segment para public 'CODE' use32
.text:00401000                 assume cs:_text
.text:00401000                 ;org 401000h
.text:00401000                 assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
.text:00401000
.text:00401000 ; =============== S U B R O U T I N E =======================================
.text:00401000
.text:00401000 ; Attributes: noreturn bp-based frame
.text:00401000
.text:00401000                 public start
.text:00401000 start           proc near
.text:00401000
.text:00401000 Type            = dword ptr -8
.text:00401000
.text:00401000                 push    ebp
.text:00401001                 mov     ebp, esp
.text:00401003                 sub     esp, 8
.text:00401006                 mov     [esp+8+Type], 1 ; Type
.text:0040100D                 call    ds:__set_app_type
.text:00401013                 call    sub_401080
.text:00401013 start           endp
.text:00401013
.text:00401018 ; ---------------------------------------------------------------------------
.text:00401018                 mov     esp, ebp
.text:0040101A                 xor     eax, eax
.text:0040101C                 pop     ebp
.text:0040101D                 retn
.text:0040101D ; ---------------------------------------------------------------------------
.text:0040101E                 align 10h
.text:00401020                 push    ebp
.text:00401021                 mov     ebp, esp
.text:00401023                 sub     esp, 8
.text:00401026                 mov     dword ptr [esp], 2
.text:0040102D                 call    ds:__set_app_type
.text:00401033                 call    sub_401080
.text:00401038 ; ---------------------------------------------------------------------------
.text:00401038                 mov     esp, ebp
.text:0040103A                 xor     eax, eax
.text:0040103C                 pop     ebp
.text:0040103D                 retn
.text:0040103D ; ---------------------------------------------------------------------------
.text:0040103E                 align 10h
.text:00401040
.text:00401040 ; =============== S U B R O U T I N E =======================================
.text:00401040
.text:00401040 ; Attributes: bp-based frame
.text:00401040
.text:00401040 ; int __cdecl sub_401040(void (__cdecl *)())
.text:00401040 sub_401040      proc near               ; CODE XREF: sub_4018C0+63↓p
.text:00401040                                         ; .text:00410A30↓p ...
.text:00401040
.text:00401040 var_8           = dword ptr -8
.text:00401040 arg_0           = dword ptr  8
.text:00401040
.text:00401040                 push    ebp
.text:00401041                 mov     ebp, esp
.text:00401043                 sub     esp, 8
.text:00401046                 mov     edx, [ebp+arg_0]
.text:00401049                 mov     [esp+8+var_8], edx ; void (__cdecl *)()
.text:0040104C                 call    ds:atexit
.text:00401052                 mov     esp, ebp
.text:00401054                 pop     ebp
.text:00401055                 retn
.text:00401055 sub_401040      endp
.text:00401055
.text:00401055 ; ---------------------------------------------------------------------------
.text:00401056                 align 10h
.text:00401060                 push    ebp
.text:00401061                 mov     ebp, esp
.text:00401063                 sub     esp, 8
.text:00401066                 mov     edx, [ebp+8]
.text:00401069                 mov     [esp], edx
.text:0040106C                 call    ds:_onexit
.text:00401072                 mov     esp, ebp
.text:00401074                 pop     ebp
.text:00401075                 retn
.text:00401075 ; ---------------------------------------------------------------------------
.text:00401076                 align 10h
.text:00401080
.text:00401080 ; =============== S U B R O U T I N E =======================================
.text:00401080
.text:00401080 ; Attributes: noreturn bp-based frame
.text:00401080
.text:00401080 sub_401080      proc near               ; CODE XREF: start+13↑p
.text:00401080                                         ; .text:00401033↑p
.text:00401080
.text:00401080 lpTopLevelExceptionFilter= dword ptr -28h
.text:00401080 Mode            = dword ptr -24h
.text:00401080 var_20          = dword ptr -20h
.text:00401080 var_1C          = dword ptr -1Ch
.text:00401080 var_18          = dword ptr -18h
.text:00401080 var_C           = byte ptr -0Ch
.text:00401080 var_8           = dword ptr -8
.text:00401080
.text:00401080                 push    ebp
.text:00401081                 mov     ebp, esp
.text:00401083                 push    ebx
.text:00401084                 sub     esp, 24h
.text:00401087                 mov     [esp+28h+lpTopLevelExceptionFilter], offset TopLevelExceptionFilter ; lpTopLevelExceptionFilter
.text:0040108E                 call    SetUnhandledExceptionFilter
.text:00401093                 sub     esp, 4
.text:00401096                 call    sub_4109D0
.text:0040109B                 mov     [esp+28h+lpTopLevelExceptionFilter], offset dword_412000
.text:004010A2                 mov     edx, dword_412070
.text:004010A8                 lea     ecx, [ebp+var_8]
.text:004010AB                 mov     [ebp+var_8], 0
.text:004010B2                 mov     [esp+28h+var_18], ecx
.text:004010B6                 mov     [esp+28h+var_1C], edx
.text:004010BA                 lea     edx, [ebp+var_C]
.text:004010BD                 mov     [esp+28h+var_20], edx
.text:004010C1                 mov     [esp+28h+Mode], offset dword_412004
.text:004010C9                 call    __getmainargs
.text:004010CE                 mov     eax, Mode
.text:004010D3                 test    eax, eax
.text:004010D5                 jz      short loc_401135
.text:004010D7                 mov     dword_412090, eax
.text:004010DC                 mov     edx, ds:_iob
.text:004010E2                 test    edx, edx
.text:004010E4                 jz      short loc_4010FB
.text:004010E6                 mov     [esp+28h+Mode], eax ; Mode
.text:004010EA                 mov     ebx, [edx+10h]
.text:004010ED                 mov     [esp+28h+lpTopLevelExceptionFilter], ebx ; FileHandle
.text:004010F0                 call    _setmode
.text:004010F5                 mov     edx, ds:_iob
.text:004010FB
.text:004010FB loc_4010FB:                             ; CODE XREF: sub_401080+64↑j
.text:004010FB                 cmp     edx, 0FFFFFFE0h
.text:004010FE                 jz      short loc_40111B
.text:00401100                 mov     ebx, Mode
.text:00401106                 mov     [esp+28h+Mode], ebx ; Mode
.text:0040110A                 mov     ecx, [edx+30h]
.text:0040110D                 mov     [esp+28h+lpTopLevelExceptionFilter], ecx ; FileHandle
.text:00401110                 call    _setmode
.text:00401115                 mov     edx, ds:_iob
.text:0040111B
.text:0040111B loc_40111B:                             ; CODE XREF: sub_401080+7E↑j
.text:0040111B                 cmp     edx, 0FFFFFFC0h
.text:0040111E                 jz      short loc_401135
.text:00401120                 mov     ebx, Mode
.text:00401126                 mov     [esp+28h+Mode], ebx ; Mode
.text:0040112A                 mov     ecx, [edx+50h]
.text:0040112D                 mov     [esp+28h+lpTopLevelExceptionFilter], ecx ; FileHandle
.text:00401130                 call    _setmode
.text:00401135
.text:00401135 loc_401135:                             ; CODE XREF: sub_401080+55↑j
.text:00401135                                         ; sub_401080+9E↑j
.text:00401135                 call    __p__fmode
.text:0040113A                 mov     ecx, dword_412090
.text:00401140                 mov     [eax], ecx
.text:00401142                 call    sub_4109A0
.text:00401147                 call    __p__environ
.text:0040114C                 mov     edx, dword_412000
.text:00401152                 mov     ebx, [eax]
.text:00401154                 mov     ecx, dword_412004
.text:0040115A                 mov     [esp+28h+lpTopLevelExceptionFilter], edx
.text:0040115D                 mov     [esp+28h+var_20], ebx
.text:00401161                 mov     [esp+28h+Mode], ecx
.text:00401165                 call    sub_4018C0
.text:00401165 sub_401080      endp
.text:00401165
.text:0040116A ; ---------------------------------------------------------------------------
.text:0040116A                 mov     ebx, eax
.text:0040116C                 call    _cexit
.text:00401171                 mov     [esp], ebx
.text:00401174                 call    ExitProcess
.text:00401174 ; ---------------------------------------------------------------------------
.text:00401179                 align 10h
.text:00401180
.text:00401180 ; =============== S U B R O U T I N E =======================================
.text:00401180
.text:00401180 ; Attributes: bp-based frame
.text:00401180
.text:00401180 ; LONG __stdcall TopLevelExceptionFilter(struct _EXCEPTION_POINTERS *ExceptionInfo)
.text:00401180 TopLevelExceptionFilter proc near       ; DATA XREF: sub_401080+7↑o
.text:00401180
.text:00401180 Signal          = dword ptr -18h
.text:00401180 Function        = dword ptr -14h
.text:00401180 var_8           = dword ptr -8
.text:00401180 var_4           = dword ptr -4
.text:00401180 ExceptionInfo   = dword ptr  8
.text:00401180
.text:00401180                 push    ebp
.text:00401181                 mov     ebp, esp
.text:00401183                 sub     esp, 18h
.text:00401186                 mov     [ebp+var_8], ebx
.text:00401189                 mov     ecx, [ebp+ExceptionInfo]
.text:0040118C                 xor     ebx, ebx
.text:0040118E                 mov     [ebp+var_4], esi
.text:00401191                 xor     esi, esi
.text:00401193                 mov     edx, [ecx]
.text:00401195                 mov     eax, [edx]
.text:00401197                 cmp     eax, 0C0000091h
.text:0040119C                 ja      loc_401260
.text:004011A2                 cmp     eax, 0C000008Dh
.text:004011A7                 jnb     short loc_401210
.text:004011A9                 cmp     eax, 0C0000005h
.text:004011AE                 jz      short loc_4011BE
.text:004011B0
.text:004011B0 loc_4011B0:                             ; CODE XREF: TopLevelExceptionFilter+59↓j
.text:004011B0                                         ; TopLevelExceptionFilter+77↓j ...
.text:004011B0                 mov     eax, ebx
.text:004011B2                 mov     esi, [ebp+var_4]
.text:004011B5                 mov     ebx, [ebp+var_8]
.text:004011B8                 mov     esp, ebp
.text:004011BA                 pop     ebp
.text:004011BB                 retn    4
.text:004011BE ; ---------------------------------------------------------------------------
.text:004011BE
.text:004011BE loc_4011BE:                             ; CODE XREF: TopLevelExceptionFilter+2E↑j
.text:004011BE                 mov     [esp+18h+Function], 0 ; Function
.text:004011C6                 mov     [esp+18h+Signal], 0Bh ; Signal
.text:004011CD                 call    signal
.text:004011D2                 cmp     eax, 1
.text:004011D5                 jz      short loc_4011F9
.text:004011D7                 test    eax, eax
.text:004011D9                 jz      short loc_4011B0
.text:004011DB                 mov     [esp+18h+Signal], 0Bh
.text:004011E2                 lea     esi, [esi+0]
.text:004011E9                 lea     edi, [edi+0]
.text:004011F0
.text:004011F0 loc_4011F0:                             ; CODE XREF: TopLevelExceptionFilter+BD↓j
.text:004011F0                 call    eax
.text:004011F2
.text:004011F2 loc_4011F2:                             ; CODE XREF: TopLevelExceptionFilter+8D↓j
.text:004011F2                                         ; TopLevelExceptionFilter+D5↓j ...
.text:004011F2                 mov     ebx, 0FFFFFFFFh
.text:004011F7                 jmp     short loc_4011B0
.text:004011F9 ; ---------------------------------------------------------------------------
.text:004011F9
.text:004011F9 loc_4011F9:                             ; CODE XREF: TopLevelExceptionFilter+55↑j
.text:004011F9                 mov     [esp+18h+Function], 1 ; Function
.text:00401201                 mov     [esp+18h+Signal], 0Bh ; Signal
.text:00401208                 call    signal
.text:0040120D                 jmp     short loc_4011F2
.text:0040120D ; ---------------------------------------------------------------------------
.text:0040120F                 align 10h
.text:00401210
.text:00401210 loc_401210:                             ; CODE XREF: TopLevelExceptionFilter+27↑j
.text:00401210                                         ; TopLevelExceptionFilter+E5↓j
.text:00401210                 mov     esi, 1
.text:00401215
.text:00401215 loc_401215:                             ; CODE XREF: TopLevelExceptionFilter+EC↓j
.text:00401215                 mov     [esp+18h+Function], 0 ; Function
.text:0040121D                 mov     [esp+18h+Signal], 8 ; Signal
.text:00401224                 call    signal
.text:00401229                 cmp     eax, 1
.text:0040122C                 jz      short loc_40123F
.text:0040122E                 test    eax, eax
.text:00401230                 jz      loc_4011B0
.text:00401236                 mov     [esp+18h+Signal], 8
.text:0040123D                 jmp     short loc_4011F0
.text:0040123F ; ---------------------------------------------------------------------------
.text:0040123F
.text:0040123F loc_40123F:                             ; CODE XREF: TopLevelExceptionFilter+AC↑j
.text:0040123F                 mov     [esp+18h+Function], 1 ; Function
.text:00401247                 mov     [esp+18h+Signal], 8 ; Signal
.text:0040124E                 call    signal
.text:00401253                 test    esi, esi
.text:00401255                 jz      short loc_4011F2
.text:00401257                 call    sub_4109D0
.text:0040125C                 jmp     short loc_4011F2
.text:0040125C ; ---------------------------------------------------------------------------
.text:0040125E                 align 10h
.text:00401260
.text:00401260 loc_401260:                             ; CODE XREF: TopLevelExceptionFilter+1C↑j
.text:00401260                 cmp     eax, 0C0000093h
.text:00401265                 jz      short loc_401210
.text:00401267                 cmp     eax, 0C0000094h
.text:0040126C                 jz      short loc_401215
.text:0040126E                 jmp     loc_4011B0
.text:0040126E TopLevelExceptionFilter endp
.text:0040126E
.text:0040126E ; ---------------------------------------------------------------------------
.text:00401273                 align 10h
.text:00401280 aDigits         db 'digits',0           ; DATA XREF: .text:off_4012E0↓o
.text:00401287 aQuiet          db 'quiet',0            ; DATA XREF: .text:004012F0↓o
.text:0040128D aSilent         db 'silent',0           ; DATA XREF: .text:00401300↓o
.text:00401294 aKeepFiles      db 'keep-files',0       ; DATA XREF: .text:00401310↓o
.text:0040129F aElideEmptyFile db 'elide-empty-files',0
.text:0040129F                                         ; DATA XREF: .text:00401320↓o
.text:004012B1 aPrefix         db 'prefix',0           ; DATA XREF: .text:00401330↓o
.text:004012B8 aSuffixFormat   db 'suffix-format',0    ; DATA XREF: .text:00401340↓o
.text:004012C6 aHelp           db 'help',0             ; DATA XREF: .text:00401350↓o
.text:004012CB aVersion        db 'version',0
.text:004012D3                 align 10h
.text:004012E0 off_4012E0      dd offset aDigits       ; DATA XREF: sub_4018C0+AE↓o
.text:004012E0                                         ; "digits"
.text:004012E4                 dd 1, 0
.text:004012EC                 dd 6Eh
.text:004012F0                 dd offset aQuiet        ; "quiet"
.text:004012F4                 dd 2 dup(0)
.text:004012FC                 dd 71h
.text:00401300                 dd offset aSilent       ; "silent"
.text:00401304                 dd 2 dup(0)
.text:0040130C                 dd 73h
.text:00401310                 dd offset aKeepFiles    ; "keep-files"
.text:00401314                 dd 2 dup(0)
.text:0040131C                 dd 6Bh
.text:00401320                 dd offset aElideEmptyFile ; "elide-empty-files"
.text:00401324                 dd 2 dup(0)
.text:0040132C                 dd 7Ah
.text:00401330                 dd offset aPrefix       ; "prefix"
.text:00401334                 dd 1, 0
.text:0040133C                 dd 66h
.text:00401340                 dd offset aSuffixFormat ; "suffix-format"
.text:00401344                 dd 1, 0
.text:0040134C                 dd 62h
.text:00401350                 dd offset aHelp         ; "help"
.text:00401354                 dd 2 dup(0)
.text:0040135C                 dd 0FFFFFF7Eh
.text:00401360 ; ---------------------------------------------------------------------------
.text:00401360                 retf
.text:00401360 ; ---------------------------------------------------------------------------
.text:00401361                 db 12h, 40h, 0
.text:00401364                 dd 2 dup(0)
.text:0040136C                 dd 0FFFFFF7Dh, 4 dup(0)
.text:00401380 ; const char aW[2]
.text:00401380 aW              db 'w',0                ; DATA XREF: sub_401390:loc_4013EC↓o
.text:00401382 ; const char a0U[]
.text:00401382 a0U             db '%0*u',0             ; DATA XREF: sub_401390+CE↓o
.text:00401382                                         ; sub_4014C0+E3↓o
.text:00401387 ; const char aS[]
.text:00401387 aS              db '%s',0               ; DATA XREF: sub_401390+F3↓o
.text:00401387                                         ; sub_4014C0+A9↓o ...
.text:0040138A                 align 10h
.text:00401390
.text:00401390 ; =============== S U B R O U T I N E =======================================
.text:00401390
.text:00401390
.text:00401390 sub_401390      proc near               ; CODE XREF: sub_4018C0:loc_401C82↓p
.text:00401390                                         ; sub_4018C0+492↓p ...
.text:00401390
.text:00401390 Destination     = dword ptr -1Ch
.text:00401390 Source          = dword ptr -18h
.text:00401390 var_14          = dword ptr -14h
.text:00401390 var_10          = byte ptr -10h
.text:00401390
.text:00401390                 push    ebx
.text:00401391                 sub     esp, 18h
.text:00401394                 mov     ebx, ds:dword_4130A0
.text:0040139A                 mov     ecx, ds:Source
.text:004013A0                 mov     edx, ds:FileName
.text:004013A6                 mov     [esp+1Ch+Source], ecx ; Source
.text:004013AA                 mov     [esp+1Ch+Destination], edx ; Destination
.text:004013AD                 call    strcpy
.text:004013B2                 mov     edx, ds:Format
.text:004013B8                 test    edx, edx
.text:004013BA                 jz      loc_401440
.text:004013C0                 mov     edx, ds:Source
.text:004013C6                 mov     [esp+1Ch+Destination], edx ; Str
.text:004013C9                 call    strlen
.text:004013CE                 mov     [esp+1Ch+var_14], ebx
.text:004013D2                 mov     ecx, ds:FileName
.text:004013D8                 mov     ebx, ds:Format
.text:004013DE                 add     ecx, eax
.text:004013E0                 mov     [esp+1Ch+Source], ebx ; Format
.text:004013E4                 mov     [esp+1Ch+Destination], ecx ; Buffer
.text:004013E7                 call    sprintf
.text:004013EC
.text:004013EC loc_4013EC:                             ; CODE XREF: sub_401390+E4↓j
.text:004013EC                 mov     [esp+1Ch+Source], offset aW ; "w"
.text:004013F4                 mov     ecx, ds:FileName
.text:004013FA                 mov     ds:dword_4130C0, ecx
.text:00401400                 mov     [esp+1Ch+Destination], ecx ; FileName
.text:00401403                 call    fopen
.text:00401408                 mov     ds:Stream, eax
.text:0040140D                 test    eax, eax
.text:0040140F                 setnz   bl
.text:00401412                 call    _errno
.text:00401417                 mov     ecx, [eax]
.text:00401419                 mov     eax, ds:dword_4130A0
.text:0040141E                 movzx   edx, bl
.text:00401421                 add     eax, edx
.text:00401423                 test    bl, bl
.text:00401425                 mov     ds:dword_4130A0, eax
.text:0040142A                 jz      short loc_401479
.text:0040142C                 xor     eax, eax
.text:0040142E                 xor     edx, edx
.text:00401430                 mov     ds:dword_413100, eax
.text:00401435                 mov     ds:dword_413104, edx
.text:0040143B                 add     esp, 18h
.text:0040143E                 pop     ebx
.text:0040143F                 retn
.text:00401440 ; ---------------------------------------------------------------------------
.text:00401440
.text:00401440 loc_401440:                             ; CODE XREF: sub_401390+2A↑j
.text:00401440                 mov     edx, ds:Source
.text:00401446                 mov     [esp+1Ch+Destination], edx ; Str
.text:00401449                 call    strlen
.text:0040144E                 mov     dword ptr [esp+1Ch+var_10], ebx
.text:00401452                 mov     ecx, ds:FileName
.text:00401458                 mov     ebx, dword_412010
.text:0040145E                 mov     [esp+1Ch+Source], offset a0U ; "%0*u"
.text:00401466                 add     ecx, eax
.text:00401468                 mov     [esp+1Ch+var_14], ebx
.text:0040146C                 mov     [esp+1Ch+Destination], ecx ; Buffer
.text:0040146F                 call    sprintf
.text:00401474                 jmp     loc_4013EC
.text:00401479 ; ---------------------------------------------------------------------------
.text:00401479
.text:00401479 loc_401479:                             ; CODE XREF: sub_401390+9A↑j
.text:00401479                 mov     [esp+1Ch+Source], ecx ; ErrorMessage
.text:0040147D                 mov     ebx, ds:dword_4130C0
.text:00401483                 mov     [esp+1Ch+var_14], offset aS ; "%s"
.text:0040148B                 mov     [esp+1Ch+Destination], 0 ; Code
.text:00401492                 mov     dword ptr [esp+1Ch+var_10], ebx ; char
.text:00401496                 call    sub_40FD70
.text:0040149B                 call    sub_4015E0
.text:004014A0                 call    sub_4014C0
.text:004014A5                 mov     [esp+1Ch+Destination], 1 ; Code
.text:004014AC                 call    exit
.text:004014AC sub_401390      endp
.text:004014AC
.text:004014B1 ; ---------------------------------------------------------------------------
.text:004014B1                 jmp     short sub_4014C0
.text:004014B1 ; ---------------------------------------------------------------------------
.text:004014B3                 align 10h
.text:004014C0
.text:004014C0 ; =============== S U B R O U T I N E =======================================
.text:004014C0
.text:004014C0
.text:004014C0 sub_4014C0      proc near               ; CODE XREF: sub_401390+110↑p
.text:004014C0                                         ; .text:004014B1↑j ...
.text:004014C0
.text:004014C0 Destination     = dword ptr -1Ch
.text:004014C0 Source          = dword ptr -18h
.text:004014C0 var_14          = dword ptr -14h
.text:004014C0 var_10          = byte ptr -10h
.text:004014C0
.text:004014C0                 push    esi
.text:004014C1                 push    ebx
.text:004014C2                 sub     esp, 14h
.text:004014C5                 movzx   edx, ds:byte_413130
.text:004014CC                 test    dl, dl
.text:004014CE                 jz      short loc_4014E3
.text:004014D0                 mov     edx, ds:dword_4130A0
.text:004014D6                 xor     esi, esi
.text:004014D8                 cmp     esi, edx
.text:004014DA                 jb      short loc_4014F0
.text:004014DC
.text:004014DC loc_4014DC:                             ; CODE XREF: sub_4014C0+9B↓j
.text:004014DC                 xor     eax, eax
.text:004014DE                 mov     ds:dword_4130A0, eax
.text:004014E3
.text:004014E3 loc_4014E3:                             ; CODE XREF: sub_4014C0+E↑j
.text:004014E3                 add     esp, 14h
.text:004014E6                 pop     ebx
.text:004014E7                 pop     esi
.text:004014E8                 retn
.text:004014E8 ; ---------------------------------------------------------------------------
.text:004014E9                 align 10h
.text:004014F0
.text:004014F0 loc_4014F0:                             ; CODE XREF: sub_4014C0+1A↑j
.text:004014F0                                         ; sub_4014C0+99↓j
.text:004014F0                 mov     edx, ds:Source
.text:004014F6                 mov     ebx, ds:FileName
.text:004014FC                 mov     [esp+1Ch+Source], edx ; Source
.text:00401500                 mov     [esp+1Ch+Destination], ebx ; Destination
.text:00401503                 call    strcpy
.text:00401508                 mov     ecx, ds:Format
.text:0040150E                 test    ecx, ecx
.text:00401510                 jz      short loc_401585
.text:00401512                 mov     edx, ds:Source
.text:00401518                 mov     [esp+1Ch+Destination], edx ; Str
.text:0040151B                 call    strlen
.text:00401520                 mov     [esp+1Ch+var_14], esi
.text:00401524                 mov     ecx, ds:FileName
.text:0040152A                 mov     ebx, ds:Format
.text:00401530                 add     ecx, eax
.text:00401532                 mov     [esp+1Ch+Source], ebx ; Format
.text:00401536                 mov     [esp+1Ch+Destination], ecx ; Buffer
.text:00401539                 call    sprintf
.text:0040153E
.text:0040153E loc_40153E:                             ; CODE XREF: sub_4014C0+F9↓j
.text:0040153E                 mov     ebx, ds:FileName
.text:00401544                 mov     [esp+1Ch+Destination], ebx ; LPCSTR
.text:00401547                 call    sub_410010
.text:0040154C                 test    eax, eax
.text:0040154E                 jnz     short loc_401560
.text:00401550
.text:00401550 loc_401550:                             ; CODE XREF: sub_4014C0+C3↓j
.text:00401550                 mov     ebx, ds:dword_4130A0
.text:00401556                 inc     esi
.text:00401557                 cmp     esi, ebx
.text:00401559                 jb      short loc_4014F0
.text:0040155B                 jmp     loc_4014DC
.text:00401560 ; ---------------------------------------------------------------------------
.text:00401560
.text:00401560 loc_401560:                             ; CODE XREF: sub_4014C0+8E↑j
.text:00401560                 call    _errno
.text:00401565                 mov     dword ptr [esp+1Ch+var_10], ebx ; char
.text:00401569                 mov     [esp+1Ch+var_14], offset aS ; "%s"
.text:00401571                 mov     ecx, [eax]
.text:00401573                 mov     [esp+1Ch+Destination], 0 ; Code
.text:0040157A                 mov     [esp+1Ch+Source], ecx ; ErrorMessage
.text:0040157E                 call    sub_40FD70
.text:00401583                 jmp     short loc_401550
.text:00401585 ; ---------------------------------------------------------------------------
.text:00401585
.text:00401585 loc_401585:                             ; CODE XREF: sub_4014C0+50↑j
.text:00401585                 mov     edx, ds:Source
.text:0040158B                 mov     [esp+1Ch+Destination], edx ; Str
.text:0040158E                 call    strlen
.text:00401593                 mov     dword ptr [esp+1Ch+var_10], esi
.text:00401597                 mov     ecx, ds:FileName
.text:0040159D                 mov     ebx, dword_412010
.text:004015A3                 mov     [esp+1Ch+Source], offset a0U ; "%0*u"
.text:004015AB                 add     ecx, eax
.text:004015AD                 mov     [esp+1Ch+var_14], ebx
.text:004015B1                 mov     [esp+1Ch+Destination], ecx ; Buffer
.text:004015B4                 call    sprintf
.text:004015B9                 jmp     short loc_40153E
.text:004015B9 sub_4014C0      endp
.text:004015B9
.text:004015B9 ; ---------------------------------------------------------------------------
.text:004015BB ; const char aS_3[4]
.text:004015BB aS_3            db '%s',0Ah,0           ; DATA XREF: sub_4015E0+7E↓o
.text:004015BF aWriteErrorForS db 'write error for `%s',27h,0
.text:004015BF                                         ; DATA XREF: sub_4015E0:loc_40170E↓o
.text:004015D4                 align 10h
.text:004015E0
.text:004015E0 ; =============== S U B R O U T I N E =======================================
.text:004015E0
.text:004015E0
.text:004015E0 sub_4015E0      proc near               ; CODE XREF: sub_401390+10B↑p
.text:004015E0                                         ; sub_4015E0+118↓p ...
.text:004015E0
.text:004015E0 Stream          = dword ptr -3Ch
.text:004015E0 Format          = dword ptr -38h
.text:004015E0 var_34          = dword ptr -34h
.text:004015E0 var_30          = byte ptr -30h
.text:004015E0 var_2C          = byte ptr -2Ch
.text:004015E0 var_4           = dword ptr -4
.text:004015E0
.text:004015E0                 sub     esp, 3Ch
.text:004015E3                 mov     eax, ds:Stream
.text:004015E8                 mov     [esp+3Ch+var_4], ebx
.text:004015EC                 test    eax, eax
.text:004015EE                 jz      short loc_401635
.text:004015F0                 test    byte ptr [eax+0Ch], 20h
.text:004015F4                 jnz     loc_40170E
.text:004015FA                 mov     [esp+3Ch+Stream], eax ; Stream
.text:004015FD                 call    fclose
.text:00401602                 test    eax, eax
.text:00401604                 jnz     loc_4016C7
.text:0040160A                 mov     ecx, ds:dword_413104
.text:00401610                 mov     edx, ds:dword_413100
.text:00401616                 mov     ebx, ecx
.text:00401618                 or      ebx, edx
.text:0040161A                 jnz     short loc_401625
.text:0040161C                 cmp     ds:byte_413140, 0
.text:00401623                 jnz     short loc_401673
.text:00401625
.text:00401625 loc_401625:                             ; CODE XREF: sub_4015E0+3A↑j
.text:00401625                 cmp     ds:byte_413120, 0
.text:0040162C                 jz      short loc_401640
.text:0040162E
.text:0040162E loc_40162E:                             ; CODE XREF: sub_4015E0+91↓j
.text:0040162E                                         ; sub_4015E0+BE↓j ...
.text:0040162E                 xor     eax, eax
.text:00401630                 mov     ds:Stream, eax
.text:00401635
.text:00401635 loc_401635:                             ; CODE XREF: sub_4015E0+E↑j
.text:00401635                 mov     ebx, [esp+3Ch+var_4]
.text:00401639                 add     esp, 3Ch
.text:0040163C                 retn
.text:0040163C ; ---------------------------------------------------------------------------
.text:0040163D                 align 10h
.text:00401640
.text:00401640 loc_401640:                             ; CODE XREF: sub_4015E0+4C↑j
.text:00401640                 mov     [esp+3Ch+Format], ecx
.text:00401644                 lea     ebx, [esp+3Ch+var_2C]
.text:00401648                 mov     [esp+3Ch+var_34], ebx
.text:0040164C                 mov     [esp+3Ch+Stream], edx
.text:0040164F                 call    sub_40E8A0
.text:00401654                 mov     [esp+3Ch+var_34], eax
.text:00401658                 mov     ecx, ds:_iob
.text:0040165E                 mov     [esp+3Ch+Format], offset aS_3 ; "%s\n"
.text:00401666                 add     ecx, 20h ; ' '
.text:00401669                 mov     [esp+3Ch+Stream], ecx ; Stream
.text:0040166C                 call    fprintf
.text:00401671                 jmp     short loc_40162E
.text:00401673 ; ---------------------------------------------------------------------------
.text:00401673
.text:00401673 loc_401673:                             ; CODE XREF: sub_4015E0+43↑j
.text:00401673                 mov     edx, ds:dword_4130C0
.text:00401679                 mov     [esp+3Ch+Stream], edx ; LPCSTR
.text:0040167C                 call    sub_410010
.text:00401681                 test    eax, eax
.text:00401683                 setz    bl
.text:00401686                 call    _errno
.text:0040168B                 mov     ecx, [eax]
.text:0040168D                 mov     eax, ds:dword_4130A0
.text:00401692                 movzx   edx, bl
.text:00401695                 sub     eax, edx
.text:00401697                 test    bl, bl
.text:00401699                 mov     ds:dword_4130A0, eax
.text:0040169E                 jnz     short loc_40162E
.text:004016A0                 mov     [esp+3Ch+var_34], offset aS ; "%s"
.text:004016A8                 mov     ebx, ds:dword_4130C0
.text:004016AE                 mov     [esp+3Ch+Format], ecx ; ErrorMessage
.text:004016B2                 mov     [esp+3Ch+Stream], 0 ; Code
.text:004016B9                 mov     dword ptr [esp+3Ch+var_30], ebx ; char
.text:004016BD                 call    sub_40FD70
.text:004016C2                 jmp     loc_40162E
.text:004016C7 ; ---------------------------------------------------------------------------
.text:004016C7
.text:004016C7 loc_4016C7:                             ; CODE XREF: sub_4015E0+24↑j
.text:004016C7                 call    _errno
.text:004016CC                 mov     [esp+3Ch+var_34], offset aS ; "%s"
.text:004016D4                 mov     ecx, ds:dword_4130C0
.text:004016DA                 mov     dword ptr [esp+3Ch+var_30], ecx ; char
.text:004016DE                 mov     edx, [eax]
.text:004016E0                 mov     [esp+3Ch+Format], edx ; ErrorMessage
.text:004016E4
.text:004016E4 loc_4016E4:                             ; CODE XREF: sub_4015E0+151↓j
.text:004016E4                 mov     [esp+3Ch+Stream], 0 ; Code
.text:004016EB                 xor     ebx, ebx
.text:004016ED                 call    sub_40FD70
.text:004016F2                 mov     ds:Stream, ebx
.text:004016F8                 call    sub_4015E0
.text:004016FD                 call    sub_4014C0
.text:00401702                 mov     [esp+3Ch+Stream], 1 ; Code
.text:00401709                 call    exit
.text:0040170E ; ---------------------------------------------------------------------------
.text:0040170E
.text:0040170E loc_40170E:                             ; CODE XREF: sub_4015E0+14↑j
.text:0040170E                 mov     [esp+3Ch+Stream], offset aWriteErrorForS ; "write error for `%s'"
.text:00401715                 call    ds:__imp_libintl_gettext
.text:0040171B                 mov     [esp+3Ch+Format], 0
.text:00401723                 mov     ecx, ds:dword_4130C0
.text:00401729                 mov     [esp+3Ch+var_34], eax
.text:0040172D                 mov     dword ptr [esp+3Ch+var_30], ecx
.text:00401731                 jmp     short loc_4016E4
.text:00401731 sub_4015E0      endp
.text:00401731
.text:00401731 ; ---------------------------------------------------------------------------
.text:00401733                 align 10h
.text:00401740
.text:00401740 ; =============== S U B R O U T I N E =======================================
.text:00401740
.text:00401740
.text:00401740 sub_401740      proc near               ; CODE XREF: sub_4018C0+3D3↓p
.text:00401740                                         ; sub_4018C0+4D2↓p ...
.text:00401740
.text:00401740 Buffer          = dword ptr -1Ch
.text:00401740 ElementSize     = dword ptr -18h
.text:00401740 ElementCount    = dword ptr -14h
.text:00401740 Stream          = dword ptr -10h
.text:00401740 var_4           = dword ptr -4
.text:00401740 arg_0           = dword ptr  4
.text:00401740
.text:00401740                 sub     esp, 1Ch
.text:00401743                 mov     ecx, ds:Stream
.text:00401749                 mov     [esp+1Ch+var_4], ebx
.text:0040174D                 mov     ebx, [esp+1Ch+arg_0]
.text:00401751                 mov     [esp+1Ch+Stream], ecx ; Stream
.text:00401755                 mov     edx, [ebx]
.text:00401757                 mov     [esp+1Ch+ElementSize], 1 ; ElementSize
.text:0040175F                 mov     [esp+1Ch+ElementCount], edx ; ElementCount
.text:00401763                 mov     ecx, [ebx+4]
.text:00401766                 mov     [esp+1Ch+Buffer], ecx ; Buffer
.text:00401769                 call    fwrite
.text:0040176E                 mov     edx, [ebx]
.text:00401770                 xor     ecx, ecx
.text:00401772                 mov     ebx, [esp+1Ch+var_4]
.text:00401776                 add     ds:dword_413100, edx
.text:0040177C                 adc     ds:dword_413104, ecx
.text:00401782                 add     esp, 1Ch
.text:00401785                 retn
.text:00401785 sub_401740      endp
.text:00401785
.text:00401785 ; ---------------------------------------------------------------------------
.text:00401786                 align 4
.text:00401788 ; const int Signal
.text:00401788 Signal          dd 2                    ; DATA XREF: sub_4018C0+303↓r
.text:0040178C                 dd 0Fh
.text:00401790 ; const char Str
.text:00401790 Str             db 0                    ; DATA XREF: sub_4018C0+20↓o
.text:00401790                                         ; sub_4018C0+1AC↓o ...
.text:00401791                 db 0EBh, 0Dh, 90h
.text:00401794                 align 10h
.text:004017A0 aCProgra1Coreut db 'c:/progra~1/CoreUtils/share/locale',0
.text:004017A0                                         ; DATA XREF: sub_4018C0+3A↓o
.text:004017C3 aCoreutils      db 'coreutils',0        ; DATA XREF: sub_4018C0+42↓o
.text:004017C3                                         ; sub_4018C0+4F↓o
.text:004017CD aXx             db 'xx',0               ; DATA XREF: sub_4018C0+7B↓o
.text:004017D0 aFBKnSqz        db 'f:b:kn:sqz',0       ; DATA XREF: sub_4018C0+B6↓o
.text:004017DB aDavidMackenzie db 'David MacKenzie',0  ; DATA XREF: sub_4018C0+11A↓o
.text:004017EB aStuartKemp     db 'Stuart Kemp',0      ; DATA XREF: sub_4018C0+122↓o
.text:004017F7 a530            db '5.3.0',0            ; DATA XREF: sub_4018C0+12D↓o
.text:004017FD aGnuCoreutils   db 'GNU coreutils',0    ; DATA XREF: sub_4018C0+135↓o
.text:0040180B ; const FILE stru_40180B
.text:0040180B stru_40180B     FILE <6C707363h, 25007469h, 69203A73h, 6C61766Eh, 6E206469h, \
.text:0040180B                                         ; DATA XREF: sub_4018C0+13D↓o
.text:0040180B                                         ; sub_4018C0:loc_401AAE↓o
.text:0040180B                       65626D75h, 2D0072h, 64616572h>
.text:0040182B                 db  20h
.text:0040182C                 db  65h ; e
.text:0040182D                 db  72h ; r
.text:0040182E                 db  72h ; r
.text:0040182F                 db  6Fh ; o
.text:00401830                 db  72h ; r
.text:00401831                 db    0
.text:00401832                 align 10h
.text:00401840 aSSLineNumberOu db '%s: `%s',27h,': line number out of range',0
.text:00401840                                         ; DATA XREF: sub_4018C0+571↓o
.text:00401863 aOnRepetitionS  db ' on repetition %s',0Ah,0
.text:00401863                                         ; DATA XREF: sub_4018C0+5C1↓o
.text:00401863                                         ; sub_402BC0+315↓o ...
.text:00401876 aInputDisappear db 'input disappeared',0
.text:00401876                                         ; DATA XREF: sub_4018C0:loc_401EE7↓o
.text:00401876                                         ; sub_402BC0:loc_402DE0↓o
.text:00401888 aMissingOperand db 'missing operand',0  ; DATA XREF: sub_4018C0+6D3↓o
.text:00401898 aMissingOperand_0 db 'missing operand after %s',0
.text:00401898                                         ; DATA XREF: sub_4018C0+71B↓o
.text:004018B1 ; ---------------------------------------------------------------------------
.text:004018B1                 jmp     short sub_4018C0
.text:004018B1 ; ---------------------------------------------------------------------------
.text:004018B3                 align 10h
.text:004018C0
.text:004018C0 ; =============== S U B R O U T I N E =======================================
.text:004018C0
.text:004018C0 ; Attributes: noreturn bp-based frame fuzzy-sp
.text:004018C0
.text:004018C0 sub_4018C0      proc near               ; CODE XREF: sub_401080+E5↑p
.text:004018C0                                         ; .text:004018B1↑j
.text:004018C0
.text:004018C0 Category        = dword ptr -0C8h
.text:004018C0 Locale          = dword ptr -0C4h
.text:004018C0 var_C0          = dword ptr -0C0h
.text:004018C0 var_BC          = byte ptr -0BCh
.text:004018C0 Str             = dword ptr -0B8h
.text:004018C0 var_B4          = dword ptr -0B4h
.text:004018C0 var_B0          = dword ptr -0B0h
.text:004018C0 var_A0          = dword ptr -0A0h
.text:004018C0 var_9C          = dword ptr -9Ch
.text:004018C0 var_8C          = dword ptr -8Ch
.text:004018C0 var_7C          = dword ptr -7Ch
.text:004018C0 var_78          = dword ptr -78h
.text:004018C0 var_74          = dword ptr -74h
.text:004018C0 var_70          = dword ptr -70h
.text:004018C0 var_6C          = dword ptr -6Ch
.text:004018C0 var_68          = dword ptr -68h
.text:004018C0 var_64          = dword ptr -64h
.text:004018C0 var_60          = dword ptr -60h
.text:004018C0 var_5C          = dword ptr -5Ch
.text:004018C0 var_58          = byte ptr -58h
.text:004018C0 var_38          = byte ptr -38h
.text:004018C0 arg_0           = dword ptr  8
.text:004018C0 arg_4           = dword ptr  0Ch
.text:004018C0
.text:004018C0                 push    ebp
.text:004018C1                 xor     eax, eax
.text:004018C3                 mov     ebp, esp
.text:004018C5                 push    edi
.text:004018C6                 push    esi
.text:004018C7                 push    ebx
.text:004018C8                 sub     esp, 0BCh
.text:004018CE                 and     esp, 0FFFFFFF0h
.text:004018D1                 call    __alloca
.text:004018D6                 call    sub_410A70
.text:004018DB                 mov     esi, [ebp+arg_4]
.text:004018DE                 mov     ecx, [esi]
.text:004018E0                 mov     [esp+0C8h+Locale], offset Str ; Locale
.text:004018E8                 mov     [esp+0C8h+Category], 0 ; Category
.text:004018EF                 mov     ds:dword_413430, ecx
.text:004018F5                 call    setlocale
.text:004018FA                 mov     [esp+0C8h+Locale], offset aCProgra1Coreut ; "c:/progra~1/CoreUtils/share/locale"
.text:00401902                 mov     [esp+0C8h+Category], offset aCoreutils ; "coreutils"
.text:00401909                 call    ds:libintl_bindtextdomain
.text:0040190F                 mov     [esp+0C8h+Category], offset aCoreutils ; "coreutils"
.text:00401916                 call    ds:libintl_textdomain
.text:0040191C                 mov     [esp+0C8h+Category], offset sub_40C2D0 ; void (__cdecl *)()
.text:00401923                 call    sub_401040
.text:00401928                 mov     ds:byte_413130, 1
.text:0040192F                 mov     ebx, [ebp+arg_4]
.text:00401932                 xor     eax, eax
.text:00401934                 mov     ds:dword_413160, eax
.text:00401939                 xor     edx, edx
.text:0040193B                 mov     eax, offset aXx ; "xx"
.text:00401940                 mov     ds:dword_413110, ebx
.text:00401946                 mov     ds:dword_413150, edx
.text:0040194C                 mov     ds:byte_413120, 0
.text:00401953                 mov     ds:Source, eax
.text:00401958                 nop
.text:00401959                 lea     esi, [esi+0]
.text:00401960
.text:00401960 loc_401960:                             ; CODE XREF: sub_4018C0+16F↓j
.text:00401960                                         ; sub_4018C0+180↓j ...
.text:00401960                 mov     [esp+0C8h+Str], 0
.text:00401968                 mov     eax, [ebp+arg_4]
.text:0040196B                 mov     edx, [ebp+arg_0]
.text:0040196E                 mov     dword ptr [esp+0C8h+var_BC], offset off_4012E0 ; char
.text:00401976                 mov     [esp+0C8h+var_C0], offset aFBKnSqz ; "f:b:kn:sqz"
.text:0040197E                 mov     [esp+0C8h+Locale], eax
.text:00401982                 mov     [esp+0C8h+Category], edx
.text:00401985                 call    sub_40C160
.text:0040198A                 cmp     eax, 0FFFFFFFFh
.text:0040198D                 jz      loc_401B14
.text:00401993                 cmp     eax, 6Bh ; 'k'
.text:00401996                 jz      loc_401B08
.text:0040199C                 cmp     eax, 6Bh ; 'k'
.text:0040199F                 jg      loc_401A51
.text:004019A5                 cmp     eax, 0FFFFFF7Eh
.text:004019AA                 jz      loc_401A45
.text:004019B0                 cmp     eax, 0FFFFFF7Eh
.text:004019B5                 jg      short loc_401A19
.text:004019B7                 cmp     eax, 0FFFFFF7Dh
.text:004019BC                 jz      short loc_4019CC
.text:004019BE
.text:004019BE loc_4019BE:                             ; CODE XREF: sub_4018C0+161↓j
.text:004019BE                                         ; sub_4018C0+1A6↓j ...
.text:004019BE                 mov     [esp+0C8h+Category], 1 ; Code
.text:004019C5
.text:004019C5 loc_4019C5:                             ; CODE XREF: sub_4018C0+18C↓j
.text:004019C5                 call    sub_4025E0
.text:004019C5 ; ---------------------------------------------------------------------------
.text:004019CA                 db 0EBh ; ë
.text:004019CB                 db  94h ; ”
.text:004019CC ; ---------------------------------------------------------------------------
.text:004019CC
.text:004019CC loc_4019CC:                             ; CODE XREF: sub_4018C0+FC↑j
.text:004019CC                 mov     [esp+0C8h+var_B0], 0
.text:004019D4                 mov     edi, ds:_iob
.text:004019DA                 mov     [esp+0C8h+var_B4], offset aDavidMackenzie ; "David MacKenzie"
.text:004019E2                 mov     [esp+0C8h+Str], offset aStuartKemp ; "Stuart Kemp"
.text:004019EA                 add     edi, 20h ; ' '
.text:004019ED                 mov     dword ptr [esp+0C8h+var_BC], offset a530 ; "5.3.0"
.text:004019F5                 mov     [esp+0C8h+var_C0], offset aGnuCoreutils ; "GNU coreutils"
.text:004019FD                 mov     [esp+0C8h+Locale], offset stru_40180B ; FILE *
.text:00401A05                 mov     [esp+0C8h+Category], edi ; FILE *
.text:00401A08                 call    sub_40C120
.text:00401A0D
.text:00401A0D loc_401A0D:                             ; CODE XREF: sub_4018C0+3EF↓j
.text:00401A0D                 mov     [esp+0C8h+Category], 0 ; Code
.text:00401A14
.text:00401A14 loc_401A14:                             ; CODE XREF: sub_4018C0+430↓j
.text:00401A14                 call    exit
.text:00401A19 ; ---------------------------------------------------------------------------
.text:00401A19
.text:00401A19 loc_401A19:                             ; CODE XREF: sub_4018C0+F5↑j
.text:00401A19                 cmp     eax, 62h ; 'b'
.text:00401A1C                 jz      short loc_401A34
.text:00401A1E                 cmp     eax, 66h ; 'f'
.text:00401A21                 jnz     short loc_4019BE
.text:00401A23                 mov     edi, ds:dword_413460
.text:00401A29                 mov     ds:Source, edi
.text:00401A2F                 jmp     loc_401960
.text:00401A34 ; ---------------------------------------------------------------------------
.text:00401A34
.text:00401A34 loc_401A34:                             ; CODE XREF: sub_4018C0+15C↑j
.text:00401A34                 mov     edx, ds:dword_413460
.text:00401A3A                 mov     ds:Format, edx
.text:00401A40                 jmp     loc_401960
.text:00401A45 ; ---------------------------------------------------------------------------
.text:00401A45
.text:00401A45 loc_401A45:                             ; CODE XREF: sub_4018C0+EA↑j
.text:00401A45                 mov     [esp+0C8h+Category], 0
.text:00401A4C                 jmp     loc_4019C5
.text:00401A51 ; ---------------------------------------------------------------------------
.text:00401A51
.text:00401A51 loc_401A51:                             ; CODE XREF: sub_4018C0+DF↑j
.text:00401A51                 cmp     eax, 71h ; 'q'
.text:00401A54                 jz      loc_401AFC
.text:00401A5A                 cmp     eax, 71h ; 'q'
.text:00401A5D                 jg      loc_401AE2
.text:00401A63                 cmp     eax, 6Eh ; 'n'
.text:00401A66                 jnz     loc_4019BE
.text:00401A6C                 mov     [esp+0C8h+Str], offset Str ; Str
.text:00401A74                 mov     ebx, ds:dword_413460
.text:00401A7A                 lea     ecx, [ebp+var_5C]
.text:00401A7D                 mov     dword ptr [esp+0C8h+var_BC], ecx ; int
.text:00401A81                 mov     [esp+0C8h+var_C0], 0Ah ; int
.text:00401A89                 mov     [esp+0C8h+Locale], 0 ; int
.text:00401A91                 mov     [esp+0C8h+Category], ebx ; int
.text:00401A94                 call    sub_40C420
.text:00401A99                 test    eax, eax
.text:00401A9B                 jnz     short loc_401AAE
.text:00401A9D                 mov     eax, [ebp+var_5C]
.text:00401AA0                 test    eax, eax
.text:00401AA2                 js      short loc_401AAE
.text:00401AA4
.text:00401AA4 loc_401AA4:                             ; CODE XREF: sub_4018C0+220↓j
.text:00401AA4                 mov     dword_412010, eax
.text:00401AA9                 jmp     loc_401960
.text:00401AAE ; ---------------------------------------------------------------------------
.text:00401AAE
.text:00401AAE loc_401AAE:                             ; CODE XREF: sub_4018C0+1DB↑j
.text:00401AAE                                         ; sub_4018C0+1E2↑j
.text:00401AAE                 mov     [esp+0C8h+Category], (offset stru_40180B._cnt+3)
.text:00401AB5                 call    ds:__imp_libintl_gettext
.text:00401ABB                 mov     [esp+0C8h+Locale], 0 ; ErrorMessage
.text:00401AC3                 mov     esi, ds:dword_413460
.text:00401AC9                 mov     [esp+0C8h+Category], 1 ; Code
.text:00401AD0                 mov     [esp+0C8h+var_C0], eax ; char *
.text:00401AD4                 mov     dword ptr [esp+0C8h+var_BC], esi ; char
.text:00401AD8                 call    sub_40FD70
.text:00401ADD                 mov     eax, [ebp+var_5C]
.text:00401AE0                 jmp     short loc_401AA4
.text:00401AE2 ; ---------------------------------------------------------------------------
.text:00401AE2
.text:00401AE2 loc_401AE2:                             ; CODE XREF: sub_4018C0+19D↑j
.text:00401AE2                 cmp     eax, 73h ; 's'
.text:00401AE5                 jz      short loc_401AFC
.text:00401AE7                 cmp     eax, 7Ah ; 'z'
.text:00401AEA                 jnz     loc_4019BE
.text:00401AF0                 mov     ds:byte_413140, 1
.text:00401AF7                 jmp     loc_401960
.text:00401AFC ; ---------------------------------------------------------------------------
.text:00401AFC
.text:00401AFC loc_401AFC:                             ; CODE XREF: sub_4018C0+194↑j
.text:00401AFC                                         ; sub_4018C0+225↑j
.text:00401AFC                 mov     ds:byte_413120, 1
.text:00401B03                 jmp     loc_401960
.text:00401B08 ; ---------------------------------------------------------------------------
.text:00401B08
.text:00401B08 loc_401B08:                             ; CODE XREF: sub_4018C0+D6↑j
.text:00401B08                 mov     ds:byte_413130, 0
.text:00401B0F                 jmp     loc_401960
.text:00401B14 ; ---------------------------------------------------------------------------
.text:00401B14
.text:00401B14 loc_401B14:                             ; CODE XREF: sub_4018C0+CD↑j
.text:00401B14                 mov     edx, dword_412030
.text:00401B1A                 mov     ebx, [ebp+arg_0]
.text:00401B1D                 sub     ebx, edx
.text:00401B1F                 dec     ebx
.text:00401B20                 jle     loc_401F8E
.text:00401B26                 mov     edx, ds:Format
.text:00401B2C                 test    edx, edx
.text:00401B2E                 jz      loc_401F71
.text:00401B34                 mov     edi, ds:Source
.text:00401B3A                 mov     [esp+0C8h+Category], edi ; Str
.text:00401B3D                 call    strlen
.text:00401B42                 mov     ebx, ds:Format
.text:00401B48                 mov     esi, eax
.text:00401B4A                 mov     [esp+0C8h+Category], ebx
.text:00401B4D                 call    sub_403750
.text:00401B52                 lea     eax, [eax+esi+2]
.text:00401B56
.text:00401B56 loc_401B56:                             ; CODE XREF: sub_4018C0+6C9↓j
.text:00401B56                 mov     [esp+0C8h+Category], eax ; size_t
.text:00401B59                 call    sub_40E610
.text:00401B5E                 mov     ds:FileName, eax
.text:00401B63                 mov     edi, dword_412030
.text:00401B69                 mov     edx, 2
.text:00401B6E                 cld
.text:00401B6F                 mov     eax, [ebp+arg_4]
.text:00401B72                 mov     ecx, edx
.text:00401B74                 mov     esi, edi
.text:00401B76                 mov     ebx, [eax+edi*4]
.text:00401B79                 inc     esi
.text:00401B7A                 mov     [ebp+var_8C], esi
.text:00401B80                 mov     edi, (offset stru_40180B._bufsiz+2)
.text:00401B85                 mov     dword_412030, esi
.text:00401B8B                 mov     esi, ebx
.text:00401B8D                 repe cmpsb
.text:00401B8F                 jnz     loc_401F13
.text:00401B95                 xor     ecx, ecx
.text:00401B97                 mov     ds:FileHandle, ecx
.text:00401B9D
.text:00401B9D loc_401B9D:                             ; CODE XREF: sub_4018C0+678↓j
.text:00401B9D                                         ; sub_4018C0+6AC↓j
.text:00401B9D                 mov     ecx, [ebp+arg_4]
.text:00401BA0                 xor     esi, esi
.text:00401BA2                 mov     edi, [ebp+var_8C]
.text:00401BA8                 mov     eax, [ebp+arg_0]
.text:00401BAB                 mov     [esp+0C8h+var_C0], ecx
.text:00401BAF                 mov     [esp+0C8h+Locale], edi
.text:00401BB3                 mov     [esp+0C8h+Category], eax
.text:00401BB6                 call    sub_403200
.text:00401BBB
.text:00401BBB loc_401BBB:                             ; CODE XREF: sub_4018C0+329↓j
.text:00401BBB                 mov     [esp+0C8h+Locale], 1 ; Function
.text:00401BC3                 mov     ebx, ds:Signal[esi*4]
.text:00401BCA                 mov     [esp+0C8h+Category], ebx ; Signal
.text:00401BCD                 call    signal
.text:00401BD2                 dec     eax
.text:00401BD3                 jz      short loc_401BE5
.text:00401BD5                 mov     [esp+0C8h+Locale], offset Function ; Function
.text:00401BDD                 mov     [esp+0C8h+Category], ebx ; Signal
.text:00401BE0                 call    signal
.text:00401BE5
.text:00401BE5 loc_401BE5:                             ; CODE XREF: sub_4018C0+313↑j
.text:00401BE5                 inc     esi
.text:00401BE6                 cmp     esi, 1
.text:00401BE9                 jle     short loc_401BBB
.text:00401BEB                 mov     [ebp+var_60], 0
.text:00401BF2                 xor     edx, edx
.text:00401BF4                 cmp     edx, ds:dword_413160
.text:00401BFA                 jnb     loc_401C82
.text:00401C00                 mov     [ebp+var_7C], 0
.text:00401C07                 mov     eax, ds:dword_413150
.text:00401C0C
.text:00401C0C loc_401C0C:                             ; CODE XREF: sub_4018C0+3C0↓j
.text:00401C0C                 mov     edx, [ebp+var_7C]
.text:00401C0F                 mov     ebx, [eax+edx]
.text:00401C12                 test    ebx, ebx
.text:00401C14                 jz      loc_401CF5
.text:00401C1A                 mov     [ebp+var_68], 0
.text:00401C21                 mov     ebx, edx
.text:00401C23                 mov     [ebp+var_64], 0
.text:00401C2A                 lea     esi, [esi+0]
.text:00401C30
.text:00401C30 loc_401C30:                             ; CODE XREF: sub_4018C0+39A↓j
.text:00401C30                                         ; sub_4018C0+3A7↓j ...
.text:00401C30                 mov     edi, [ebp+var_68]
.text:00401C33                 add     eax, ebx
.text:00401C35                 mov     esi, [ebp+var_64]
.text:00401C38                 mov     [esp+0C8h+Category], eax
.text:00401C3B                 mov     [esp+0C8h+Locale], edi
.text:00401C3F                 mov     [esp+0C8h+var_C0], esi
.text:00401C43                 call    sub_402BC0
.text:00401C48                 add     [ebp+var_68], 1
.text:00401C4C                 mov     eax, ds:dword_413150
.text:00401C51                 adc     [ebp+var_64], 0
.text:00401C55                 cmp     byte ptr [eax+ebx+44h], 0
.text:00401C5A                 jnz     short loc_401C30
.text:00401C5C                 mov     esi, [eax+ebx+3Ch]
.text:00401C60                 mov     edx, [eax+ebx+38h]
.text:00401C64                 cmp     [ebp+var_64], esi
.text:00401C67                 jb      short loc_401C30
.text:00401C69                 ja      short loc_401C70
.text:00401C6B                 cmp     [ebp+var_68], edx
.text:00401C6E                 jbe     short loc_401C30
.text:00401C70
.text:00401C70 loc_401C70:                             ; CODE XREF: sub_4018C0+3A9↑j
.text:00401C70                                         ; sub_4018C0+541↓j ...
.text:00401C70                 inc     [ebp+var_60]
.text:00401C73                 add     [ebp+var_7C], 48h ; 'H'
.text:00401C77                 mov     ecx, [ebp+var_60]
.text:00401C7A                 cmp     ecx, ds:dword_413160
.text:00401C80                 jb      short loc_401C0C
.text:00401C82
.text:00401C82 loc_401C82:                             ; CODE XREF: sub_4018C0+33A↑j
.text:00401C82                 call    sub_401390
.text:00401C87
.text:00401C87 loc_401C87:                             ; CODE XREF: sub_4018C0+3D8↓j
.text:00401C87                 call    sub_4029F0
.text:00401C8C                 test    eax, eax
.text:00401C8E                 jz      short loc_401C9A
.text:00401C90                 mov     [esp+0C8h+Category], eax
.text:00401C93                 call    sub_401740
.text:00401C98                 jmp     short loc_401C87
.text:00401C9A ; ---------------------------------------------------------------------------
.text:00401C9A
.text:00401C9A loc_401C9A:                             ; CODE XREF: sub_4018C0+3CE↑j
.text:00401C9A                 call    sub_4015E0
.text:00401C9F                 mov     ebx, ds:FileHandle
.text:00401CA5                 mov     [esp+0C8h+Category], ebx ; FileHandle
.text:00401CA8                 call    _close
.text:00401CAD                 test    eax, eax
.text:00401CAF                 jns     loc_401A0D
.text:00401CB5                 mov     [esp+0C8h+Category], offset stru_40180B._tmpfname
.text:00401CBC                 call    ds:__imp_libintl_gettext
.text:00401CC2                 mov     esi, eax
.text:00401CC4                 call    _errno
.text:00401CC9                 mov     [esp+0C8h+var_C0], esi ; char *
.text:00401CCD                 mov     edx, [eax]
.text:00401CCF                 mov     [esp+0C8h+Category], 0 ; Code
.text:00401CD6                 mov     [esp+0C8h+Locale], edx ; ErrorMessage
.text:00401CDA                 call    sub_40FD70
.text:00401CDF
.text:00401CDF loc_401CDF:                             ; CODE XREF: sub_4018C0+5E9↓j
.text:00401CDF                                         ; sub_4018C0+607↓j
.text:00401CDF                 call    sub_4015E0
.text:00401CE4                 call    sub_4014C0
.text:00401CE9                 mov     [esp+0C8h+Category], 1
.text:00401CF0                 jmp     loc_401A14
.text:00401CF5 ; ---------------------------------------------------------------------------
.text:00401CF5
.text:00401CF5 loc_401CF5:                             ; CODE XREF: sub_4018C0+354↑j
.text:00401CF5                 mov     [ebp+var_68], 0
.text:00401CFC                 mov     edx, [ebp+var_7C]
.text:00401CFF                 mov     [ebp+var_64], 0
.text:00401D06                 mov     [ebp+var_70], edx
.text:00401D09
.text:00401D09 loc_401D09:                             ; CODE XREF: sub_4018C0+52A↓j
.text:00401D09                                         ; sub_4018C0+53B↓j ...
.text:00401D09                 mov     ecx, [ebp+var_70]
.text:00401D0C                 mov     ebx, [ebp+var_64]
.text:00401D0F                 add     eax, ecx
.text:00401D11                 mov     [ebp+var_6C], eax
.text:00401D14                 mov     ecx, [ebp+var_68]
.text:00401D17                 mov     esi, eax
.text:00401D19                 mov     eax, [eax+30h]
.text:00401D1C                 mov     edi, [esi+34h]
.text:00401D1F                 add     ecx, 1
.text:00401D22                 adc     ebx, 0
.text:00401D25                 mov     [ebp+var_A0], eax
.text:00401D2B                 mul     ecx
.text:00401D2D                 mov     [ebp+var_9C], edi
.text:00401D33                 mov     edi, [ebp+var_9C]
.text:00401D39                 mov     esi, edx
.text:00401D3B                 mov     [ebp+var_78], eax
.text:00401D3E                 imul    edi, ecx
.text:00401D41                 mov     eax, [ebp+var_A0]
.text:00401D47                 imul    eax, ebx
.text:00401D4A                 add     esi, eax
.text:00401D4C                 lea     ecx, [edi+esi]
.text:00401D4F                 mov     [ebp+var_74], ecx
.text:00401D52                 call    sub_401390
.text:00401D57                 mov     eax, ds:dword_413010
.text:00401D5C                 test    eax, eax
.text:00401D5E                 jz      loc_401ED4
.text:00401D64
.text:00401D64 loc_401D64:                             ; CODE XREF: sub_4018C0+622↓j
.text:00401D64                 mov     esi, [eax+14h]
.text:00401D67                 mov     ebx, [eax+10h]
.text:00401D6A                 mov     ecx, esi
.text:00401D6C                 mov     eax, ebx
.text:00401D6E                 add     ebx, 1
.text:00401D71                 adc     esi, 0
.text:00401D74                 cmp     ecx, [ebp+var_74]
.text:00401D77                 jb      short loc_401D80
.text:00401D79                 ja      short loc_401DAB
.text:00401D7B                 cmp     eax, [ebp+var_78]
.text:00401D7E                 jnb     short loc_401DAB
.text:00401D80
.text:00401D80 loc_401D80:                             ; CODE XREF: sub_4018C0+4B7↑j
.text:00401D80                                         ; sub_4018C0+4E2↓j ...
.text:00401D80                 call    sub_4029F0
.text:00401D85                 test    eax, eax
.text:00401D87                 jz      loc_401ECC
.text:00401D8D                 mov     [esp+0C8h+Category], eax
.text:00401D90                 mov     edi, esi
.text:00401D92                 call    sub_401740
.text:00401D97                 mov     eax, ebx
.text:00401D99                 add     ebx, 1
.text:00401D9C                 adc     esi, 0
.text:00401D9F                 cmp     edi, [ebp+var_74]
.text:00401DA2                 jb      short loc_401D80
.text:00401DA4                 ja      short loc_401DAB
.text:00401DA6                 cmp     eax, [ebp+var_78]
.text:00401DA9                 jb      short loc_401D80
.text:00401DAB
.text:00401DAB loc_401DAB:                             ; CODE XREF: sub_4018C0+4B9↑j
.text:00401DAB                                         ; sub_4018C0+4BE↑j ...
.text:00401DAB                 call    sub_4015E0
.text:00401DB0                 mov     esi, ds:dword_413050
.text:00401DB6                 mov     ebx, ds:dword_413054
.text:00401DBC                 add     esi, 1
.text:00401DBF                 adc     ebx, 0
.text:00401DC2                 mov     [esp+0C8h+Category], esi
.text:00401DC5                 mov     [esp+0C8h+Locale], ebx
.text:00401DC9                 call    sub_402AC0
.text:00401DCE                 test    eax, eax
.text:00401DD0                 jz      short loc_401E15
.text:00401DD2                 add     [ebp+var_68], 1
.text:00401DD6                 mov     edx, ds:dword_413150
.text:00401DDC                 mov     ecx, [ebp+var_70]
.text:00401DDF                 adc     [ebp+var_64], 0
.text:00401DE3                 mov     eax, edx
.text:00401DE5                 cmp     byte ptr [edx+ecx+44h], 0
.text:00401DEA                 jnz     loc_401D09
.text:00401DF0                 mov     esi, [edx+ecx+3Ch]
.text:00401DF4                 mov     edx, [edx+ecx+38h]
.text:00401DF8                 cmp     [ebp+var_64], esi
.text:00401DFB                 jb      loc_401D09
.text:00401E01                 ja      loc_401C70
.text:00401E07                 cmp     [ebp+var_68], edx
.text:00401E0A                 jbe     loc_401D09
.text:00401E10                 jmp     loc_401C70
.text:00401E15 ; ---------------------------------------------------------------------------
.text:00401E15
.text:00401E15 loc_401E15:                             ; CODE XREF: sub_4018C0+510↑j
.text:00401E15                 lea     esi, [ebp+var_58]
.text:00401E18
.text:00401E18 loc_401E18:                             ; CODE XREF: sub_4018C0+60F↓j
.text:00401E18                 mov     [esp+0C8h+var_C0], esi
.text:00401E1C                 mov     eax, [ebp+var_6C]
.text:00401E1F                 mov     edx, [eax+30h]
.text:00401E22                 mov     ebx, [eax+34h]
.text:00401E25                 mov     [esp+0C8h+Category], edx
.text:00401E28                 mov     [esp+0C8h+Locale], ebx
.text:00401E2C                 call    sub_40E8A0
.text:00401E31                 mov     [esp+0C8h+Category], offset aSSLineNumberOu ; "%s: `%s': line number out of range"
.text:00401E38                 mov     edi, eax
.text:00401E3A                 call    ds:__imp_libintl_gettext
.text:00401E40                 mov     dword ptr [esp+0C8h+var_BC], edi
.text:00401E44                 mov     edx, ds:_iob
.text:00401E4A                 mov     ecx, ds:dword_413430
.text:00401E50                 mov     [esp+0C8h+Locale], eax ; Format
.text:00401E54                 add     edx, 40h ; '@'
.text:00401E57                 mov     [esp+0C8h+var_C0], ecx
.text:00401E5B                 mov     [esp+0C8h+Category], edx ; Stream
.text:00401E5E                 call    fprintf
.text:00401E63                 mov     eax, [ebp+var_64]
.text:00401E66                 or      eax, [ebp+var_68]
.text:00401E69                 jz      short loc_401EAE
.text:00401E6B                 mov     [esp+0C8h+var_C0], esi
.text:00401E6F                 mov     ecx, [ebp+var_64]
.text:00401E72                 mov     ebx, [ebp+var_68]
.text:00401E75                 mov     [esp+0C8h+Locale], ecx
.text:00401E79                 mov     [esp+0C8h+Category], ebx
.text:00401E7C                 call    sub_40E8A0
.text:00401E81                 mov     [esp+0C8h+Category], offset aOnRepetitionS ; " on repetition %s\n"
.text:00401E88                 mov     edi, eax
.text:00401E8A                 call    ds:__imp_libintl_gettext
.text:00401E90                 mov     [esp+0C8h+var_C0], edi
.text:00401E94                 mov     esi, ds:_iob
.text:00401E9A                 add     esi, 40h ; '@'
.text:00401E9D                 mov     [esp+0C8h+Locale], eax ; Format
.text:00401EA1                 mov     [esp+0C8h+Category], esi ; Stream
.text:00401EA4                 call    fprintf
.text:00401EA9                 jmp     loc_401CDF
.text:00401EAE ; ---------------------------------------------------------------------------
.text:00401EAE
.text:00401EAE loc_401EAE:                             ; CODE XREF: sub_4018C0+5A9↑j
.text:00401EAE                 mov     [esp+0C8h+Category], 0Ah ; Character
.text:00401EB5                 mov     edx, ds:_iob
.text:00401EBB                 add     edx, 40h ; '@'
.text:00401EBE                 mov     [esp+0C8h+Locale], edx ; Stream
.text:00401EC2                 call    fputc
.text:00401EC7                 jmp     loc_401CDF
.text:00401ECC ; ---------------------------------------------------------------------------
.text:00401ECC
.text:00401ECC loc_401ECC:                             ; CODE XREF: sub_4018C0+4C7↑j
.text:00401ECC                 lea     esi, [ebp+var_38]
.text:00401ECF                 jmp     loc_401E18
.text:00401ED4 ; ---------------------------------------------------------------------------
.text:00401ED4
.text:00401ED4 loc_401ED4:                             ; CODE XREF: sub_4018C0+49E↑j
.text:00401ED4                 call    sub_402820
.text:00401ED9                 test    al, al
.text:00401EDB                 jz      short loc_401EE7
.text:00401EDD
.text:00401EDD loc_401EDD:                             ; CODE XREF: sub_4018C0+651↓j
.text:00401EDD                 mov     eax, ds:dword_413010
.text:00401EE2                 jmp     loc_401D64
.text:00401EE7 ; ---------------------------------------------------------------------------
.text:00401EE7
.text:00401EE7 loc_401EE7:                             ; CODE XREF: sub_4018C0+61B↑j
.text:00401EE7                 mov     [esp+0C8h+Category], offset aInputDisappear ; "input disappeared"
.text:00401EEE                 call    ds:__imp_libintl_gettext
.text:00401EF4                 mov     edi, eax
.text:00401EF6                 call    _errno
.text:00401EFB                 mov     [esp+0C8h+var_C0], edi ; char *
.text:00401EFF                 mov     edx, [eax]
.text:00401F01                 mov     [esp+0C8h+Category], 1 ; Code
.text:00401F08                 mov     [esp+0C8h+Locale], edx ; ErrorMessage
.text:00401F0C                 call    sub_40FD70
.text:00401F11                 jmp     short loc_401EDD
.text:00401F13 ; ---------------------------------------------------------------------------
.text:00401F13
.text:00401F13 loc_401F13:                             ; CODE XREF: sub_4018C0+2CF↑j
.text:00401F13                 mov     [esp+0C8h+Locale], 0 ; OpenFlag
.text:00401F1B                 mov     [esp+0C8h+Category], ebx ; FileName
.text:00401F1E                 call    _open
.text:00401F23                 mov     ds:FileHandle, eax
.text:00401F28                 test    eax, eax
.text:00401F2A                 js      short loc_401F3D
.text:00401F2C                 mov     esi, dword_412030
.text:00401F32                 mov     [ebp+var_8C], esi
.text:00401F38                 jmp     loc_401B9D
.text:00401F3D ; ---------------------------------------------------------------------------
.text:00401F3D
.text:00401F3D loc_401F3D:                             ; CODE XREF: sub_4018C0+66A↑j
.text:00401F3D                 call    _errno
.text:00401F42                 mov     dword ptr [esp+0C8h+var_BC], ebx ; char
.text:00401F46                 mov     [esp+0C8h+var_C0], offset aS ; "%s"
.text:00401F4E                 mov     ebx, [eax]
.text:00401F50                 mov     [esp+0C8h+Category], 1 ; Code
.text:00401F57                 mov     [esp+0C8h+Locale], ebx ; ErrorMessage
.text:00401F5B                 call    sub_40FD70
.text:00401F60                 mov     edx, dword_412030
.text:00401F66                 mov     [ebp+var_8C], edx
.text:00401F6C                 jmp     loc_401B9D
.text:00401F71 ; ---------------------------------------------------------------------------
.text:00401F71
.text:00401F71 loc_401F71:                             ; CODE XREF: sub_4018C0+26E↑j
.text:00401F71                 mov     edx, ds:Source
.text:00401F77                 mov     [esp+0C8h+Category], edx ; Str
.text:00401F7A                 call    strlen
.text:00401F7F                 mov     ecx, dword_412010
.text:00401F85                 lea     eax, [ecx+eax+2]
.text:00401F89                 jmp     loc_401B56
.text:00401F8E ; ---------------------------------------------------------------------------
.text:00401F8E
.text:00401F8E loc_401F8E:                             ; CODE XREF: sub_4018C0+260↑j
.text:00401F8E                 cmp     [ebp+arg_0], edx
.text:00401F91                 jg      short loc_401FC9
.text:00401F93                 mov     [esp+0C8h+Category], offset aMissingOperand ; "missing operand"
.text:00401F9A                 call    ds:__imp_libintl_gettext
.text:00401FA0                 mov     [esp+0C8h+Locale], 0 ; ErrorMessage
.text:00401FA8                 mov     [esp+0C8h+Category], 0 ; Code
.text:00401FAF                 mov     [esp+0C8h+var_C0], eax ; char *
.text:00401FB3                 call    sub_40FD70
.text:00401FB8
.text:00401FB8 loc_401FB8:                             ; CODE XREF: sub_4018C0+746↓j
.text:00401FB8                 mov     [esp+0C8h+Category], 1 ; Code
.text:00401FBF                 call    sub_4025E0
.text:00401FBF ; ---------------------------------------------------------------------------
.text:00401FC4                 db 0E9h ; é
.text:00401FC5                 db  5Dh ; ]
.text:00401FC6                 db 0FBh ; û
.text:00401FC7                 db 0FFh ; ÿ
.text:00401FC8                 db 0FFh ; ÿ
.text:00401FC9 ; ---------------------------------------------------------------------------
.text:00401FC9
.text:00401FC9 loc_401FC9:                             ; CODE XREF: sub_4018C0+6D1↑j
.text:00401FC9                 mov     ecx, [ebp+arg_0]
.text:00401FCC                 mov     eax, [ebp+arg_4]
.text:00401FCF                 mov     edi, [eax+ecx*4-4]
.text:00401FD3                 mov     [esp+0C8h+Category], edi ; char *
.text:00401FD6                 call    sub_40BC30
.text:00401FDB                 mov     [esp+0C8h+Category], offset aMissingOperand_0 ; "missing operand after %s"
.text:00401FE2                 mov     esi, eax
.text:00401FE4                 call    ds:__imp_libintl_gettext
.text:00401FEA                 mov     dword ptr [esp+0C8h+var_BC], esi ; char
.text:00401FEE                 mov     [esp+0C8h+Locale], 0 ; ErrorMessage
.text:00401FF6                 mov     [esp+0C8h+Category], 0 ; Code
.text:00401FFD                 mov     [esp+0C8h+var_C0], eax ; char *
.text:00402001                 call    sub_40FD70
.text:00402006                 jmp     short loc_401FB8
.text:00402006 sub_4018C0      endp
.text:00402006
.text:00402006 ; ---------------------------------------------------------------------------
.text:00402008                 align 20h
.text:00402020 aTrySHelpForMor db 'Try `%s --help',27h,' for more information.',0Ah,0
.text:00402020                                         ; DATA XREF: sub_4025E0+C↓o
.text:00402047                 align 20h
.text:00402060 aUsageSOptionFi db 'Usage: %s [OPTION]... FILE PATTERN...',0Ah,0
.text:00402060                                         ; DATA XREF: sub_4025E0:loc_402620↓o
.text:00402087                 align 20h
.text:004020A0 aOutputPiecesOf db 'Output pieces of FILE separated by PATTERN(s) to files `xx00',27h
.text:004020A0                                         ; DATA XREF: sub_4025E0+5F↓o
.text:004020A0                 db ', `xx01',27h,', ...,',0Ah
.text:004020A0                 db 'and output byte counts of each piece to standard output.',0Ah
.text:004020A0                 db 0Ah,0
.text:00402127                 align 20h
.text:00402140 aMandatoryArgum db 'Mandatory arguments to long options are mandatory for short optio'
.text:00402140                                         ; DATA XREF: sub_4025E0+81↓o
.text:00402140                 db 'ns too.',0Ah,0
.text:0040218A                 align 20h
.text:004021A0 aBSuffixFormatF db '  -b, --suffix-format=FORMAT use sprintf FORMAT instead of %02d',0Ah
.text:004021A0                                         ; DATA XREF: sub_4025E0+A3↓o
.text:004021A0                 db '  -f, --prefix=PREFIX        use PREFIX instead of `xx',27h,0Ah
.text:004021A0                 db '  -k, --keep-files           do not remove output files on errors'
.text:004021A0                 db 0Ah,0
.text:0040225B                 align 10h
.text:00402260 aNDigitsDigitsU db '  -n, --digits=DIGITS        use specified number of digits inste'
.text:00402260                                         ; DATA XREF: sub_4025E0+C5↓o
.text:00402260                 db 'ad of 2',0Ah
.text:00402260                 db '  -s, --quiet, --silent      do not print counts of output file s'
.text:00402260                 db 'izes',0Ah
.text:00402260                 db '  -z, --elide-empty-files    remove empty output files',0Ah,0
.text:00402327                 align 20h
.text:00402340 aHelpDisplayThi db '      --help     display this help and exit',0Ah,0
.text:00402340                                         ; DATA XREF: sub_4025E0+E7↓o
.text:0040236D                 align 20h
.text:00402380 aVersionOutputV db '      --version  output version information and exit',0Ah,0
.text:00402380                                         ; DATA XREF: sub_4025E0+109↓o
.text:004023B6                 align 10h
.text:004023C0 aReadStandardIn db 0Ah                  ; DATA XREF: sub_4025E0+12B↓o
.text:004023C0                 db 'Read standard input if FILE is -.  Each PATTERN may be:',0Ah,0
.text:004023FA                 align 10h
.text:00402400 aIntegerCopyUpT db 0Ah                  ; DATA XREF: sub_4025E0+14D↓o
.text:00402400                 db '  INTEGER            copy up to but not including specified line '
.text:00402400                 db 'number',0Ah
.text:00402400                 db '  /REGEXP/[OFFSET]   copy up to but not including a matching line'
.text:00402400                 db 0Ah
.text:00402400                 db '  %REGEXP%[OFFSET]   skip to, but not including a matching line',0Ah
.text:00402400                 db '  {INTEGER}          repeat the previous pattern specified number'
.text:00402400                 db ' of times',0Ah
.text:00402400                 db '  {*}                repeat the previous pattern as many times as'
.text:00402400                 db ' possible',0Ah
.text:00402400                 db 0Ah
.text:00402400                 db 'A line OFFSET is a required `+',27h,' or `-',27h,' followed by a '
.text:00402400                 db 'positive integer.',0Ah,0
.text:004025AA aReportBugsToS  db 0Ah                  ; DATA XREF: sub_4025E0+16F↓o
.text:004025AA                 db 'Report bugs to <%s>.',0Ah,0
.text:004025C1 aBugCoreutilsGn db 'bug-coreutils@gnu.org',0
.text:004025C1                                         ; DATA XREF: sub_4025E0+17C↓o
.text:004025D7                 align 10h
.text:004025E0
.text:004025E0 ; =============== S U B R O U T I N E =======================================
.text:004025E0
.text:004025E0 ; Attributes: noreturn
.text:004025E0
.text:004025E0 ; void __cdecl __noreturn sub_4025E0(int Code)
.text:004025E0 sub_4025E0      proc near               ; CODE XREF: sub_4018C0:loc_4019C5↑p
.text:004025E0                                         ; sub_4018C0+6FF↑p
.text:004025E0
.text:004025E0 Stream          = dword ptr -1Ch
.text:004025E0 Format          = dword ptr -18h
.text:004025E0 var_14          = dword ptr -14h
.text:004025E0 Code            = dword ptr  4
.text:004025E0
.text:004025E0                 push    ebx
.text:004025E1                 sub     esp, 18h
.text:004025E4                 mov     ebx, [esp+1Ch+Code]
.text:004025E8                 test    ebx, ebx
.text:004025EA                 jz      short loc_402620
.text:004025EC                 mov     [esp+1Ch+Stream], offset aTrySHelpForMor ; "Try `%s --help' for more information.\n"
.text:004025F3                 call    ds:__imp_libintl_gettext
.text:004025F9                 mov     edx, ds:_iob
.text:004025FF                 mov     ecx, ds:dword_413430
.text:00402605                 add     edx, 40h ; '@'
.text:00402608                 mov     [esp+1Ch+var_14], ecx
.text:0040260C                 mov     [esp+1Ch+Format], eax ; Format
.text:00402610                 mov     [esp+1Ch+Stream], edx ; Stream
.text:00402613                 call    fprintf
.text:00402618
.text:00402618 loc_402618:                             ; CODE XREF: sub_4025E0+18C↓j
.text:00402618                 mov     [esp+1Ch+Stream], ebx ; Code
.text:0040261B                 call    exit
.text:00402620 ; ---------------------------------------------------------------------------
.text:00402620
.text:00402620 loc_402620:                             ; CODE XREF: sub_4025E0+A↑j
.text:00402620                 mov     [esp+1Ch+Stream], offset aUsageSOptionFi ; "Usage: %s [OPTION]... FILE PATTERN...\n"
.text:00402627                 call    ds:__imp_libintl_gettext
.text:0040262D                 mov     ecx, ds:dword_413430
.text:00402633                 mov     [esp+1Ch+Stream], eax ; Format
.text:00402636                 mov     [esp+1Ch+Format], ecx
.text:0040263A                 call    printf
.text:0040263F                 mov     [esp+1Ch+Stream], offset aOutputPiecesOf ; "Output pieces of FILE separated by PATT"...
.text:00402646                 call    ds:__imp_libintl_gettext
.text:0040264C                 mov     ecx, ds:_iob
.text:00402652                 add     ecx, 20h ; ' '
.text:00402655                 mov     [esp+1Ch+Format], ecx ; Stream
.text:00402659                 mov     [esp+1Ch+Stream], eax ; Buffer
.text:0040265C                 call    fputs
.text:00402661                 mov     [esp+1Ch+Stream], offset aMandatoryArgum ; "Mandatory arguments to long options are"...
.text:00402668                 call    ds:__imp_libintl_gettext
.text:0040266E                 mov     ecx, ds:_iob
.text:00402674                 add     ecx, 20h ; ' '
.text:00402677                 mov     [esp+1Ch+Format], ecx ; Stream
.text:0040267B                 mov     [esp+1Ch+Stream], eax ; Buffer
.text:0040267E                 call    fputs
.text:00402683                 mov     [esp+1Ch+Stream], offset aBSuffixFormatF ; "  -b, --suffix-format=FORMAT use sprint"...
.text:0040268A                 call    ds:__imp_libintl_gettext
.text:00402690                 mov     ecx, ds:_iob
.text:00402696                 add     ecx, 20h ; ' '
.text:00402699                 mov     [esp+1Ch+Format], ecx ; Stream
.text:0040269D                 mov     [esp+1Ch+Stream], eax ; Buffer
.text:004026A0                 call    fputs
.text:004026A5                 mov     [esp+1Ch+Stream], offset aNDigitsDigitsU ; "  -n, --digits=DIGITS        use specif"...
.text:004026AC                 call    ds:__imp_libintl_gettext
.text:004026B2                 mov     ecx, ds:_iob
.text:004026B8                 add     ecx, 20h ; ' '
.text:004026BB                 mov     [esp+1Ch+Format], ecx ; Stream
.text:004026BF                 mov     [esp+1Ch+Stream], eax ; Buffer
.text:004026C2                 call    fputs
.text:004026C7                 mov     [esp+1Ch+Stream], offset aHelpDisplayThi ; "      --help     display this help and "...
.text:004026CE                 call    ds:__imp_libintl_gettext
.text:004026D4                 mov     ecx, ds:_iob
.text:004026DA                 add     ecx, 20h ; ' '
.text:004026DD                 mov     [esp+1Ch+Format], ecx ; Stream
.text:004026E1                 mov     [esp+1Ch+Stream], eax ; Buffer
.text:004026E4                 call    fputs
.text:004026E9                 mov     [esp+1Ch+Stream], offset aVersionOutputV ; "      --version  output version informa"...
.text:004026F0                 call    ds:__imp_libintl_gettext
.text:004026F6                 mov     ecx, ds:_iob
.text:004026FC                 add     ecx, 20h ; ' '
.text:004026FF                 mov     [esp+1Ch+Format], ecx ; Stream
.text:00402703                 mov     [esp+1Ch+Stream], eax ; Buffer
.text:00402706                 call    fputs
.text:0040270B                 mov     [esp+1Ch+Stream], offset aReadStandardIn ; "\nRead standard input if FILE is -.  Ea"...
.text:00402712                 call    ds:__imp_libintl_gettext
.text:00402718                 mov     ecx, ds:_iob
.text:0040271E                 add     ecx, 20h ; ' '
.text:00402721                 mov     [esp+1Ch+Format], ecx ; Stream
.text:00402725                 mov     [esp+1Ch+Stream], eax ; Buffer
.text:00402728                 call    fputs
.text:0040272D                 mov     [esp+1Ch+Stream], offset aIntegerCopyUpT ; "\n  INTEGER            copy up to but n"...
.text:00402734                 call    ds:__imp_libintl_gettext
.text:0040273A                 mov     ecx, ds:_iob
.text:00402740                 add     ecx, 20h ; ' '
.text:00402743                 mov     [esp+1Ch+Format], ecx ; Stream
.text:00402747                 mov     [esp+1Ch+Stream], eax ; Buffer
.text:0040274A                 call    fputs
.text:0040274F                 mov     [esp+1Ch+Stream], offset aReportBugsToS ; "\nReport bugs to <%s>.\n"
.text:00402756                 call    ds:__imp_libintl_gettext
.text:0040275C                 mov     [esp+1Ch+Format], offset aBugCoreutilsGn ; "bug-coreutils@gnu.org"
.text:00402764                 mov     [esp+1Ch+Stream], eax ; Format
.text:00402767                 call    printf
.text:0040276C                 jmp     loc_402618
.text:0040276C sub_4025E0      endp
.text:0040276C
.text:0040276C ; ---------------------------------------------------------------------------
.text:00402771 aMemoryExhauste db 'memory exhausted',0 ; DATA XREF: sub_402790+3↓o
.text:00402782                 align 10h
.text:00402790
.text:00402790 ; =============== S U B R O U T I N E =======================================
.text:00402790
.text:00402790 ; Attributes: noreturn
.text:00402790
.text:00402790 sub_402790      proc near               ; CODE XREF: .text:loc_40E609↓p
.text:00402790                                         ; sub_40E610+24↓p ...
.text:00402790
.text:00402790 Code            = dword ptr -1Ch
.text:00402790 ErrorMessage    = dword ptr -18h
.text:00402790 var_14          = dword ptr -14h
.text:00402790 var_10          = byte ptr -10h
.text:00402790
.text:00402790                 sub     esp, 1Ch
.text:00402793                 mov     [esp+1Ch+Code], offset aMemoryExhauste ; "memory exhausted"
.text:0040279A                 call    ds:__imp_libintl_gettext
.text:004027A0                 mov     [esp+1Ch+var_14], offset aS ; "%s"
.text:004027A8                 mov     [esp+1Ch+ErrorMessage], 0 ; ErrorMessage
.text:004027B0                 mov     [esp+1Ch+Code], 0 ; Code
.text:004027B7                 mov     dword ptr [esp+1Ch+var_10], eax ; char
.text:004027BB                 call    sub_40FD70
.text:004027C0                 call    sub_4015E0
.text:004027C5                 call    sub_4014C0
.text:004027CA                 mov     [esp+1Ch+Code], 1 ; Code
.text:004027D1                 call    exit
.text:004027D1 sub_402790      endp
.text:004027D1
.text:004027D1 ; ---------------------------------------------------------------------------
.text:004027D6                 align 10h
.text:004027E0
.text:004027E0 ; =============== S U B R O U T I N E =======================================
.text:004027E0
.text:004027E0
.text:004027E0 ; void __cdecl Function(int)
.text:004027E0 Function        proc near               ; DATA XREF: sub_4018C0+315↑o
.text:004027E0
.text:004027E0 Signal          = dword ptr -0Ch
.text:004027E0 Function        = dword ptr -8
.text:004027E0 var_4           = dword ptr -4
.text:004027E0 arg_0           = dword ptr  4
.text:004027E0
.text:004027E0                 sub     esp, 0Ch
.text:004027E3                 mov     [esp+0Ch+var_4], ebx
.text:004027E7                 mov     ebx, [esp+0Ch+arg_0]
.text:004027EB                 mov     [esp+0Ch+Function], 1 ; Function
.text:004027F3                 mov     [esp+0Ch+Signal], ebx ; Signal
.text:004027F6                 call    signal
.text:004027FB                 call    sub_4014C0
.text:00402800                 mov     [esp+0Ch+Signal], ebx ; Signal
.text:00402803                 mov     [esp+0Ch+Function], 0 ; Function
.text:0040280B                 call    signal
.text:00402810                 mov     [esp+0Ch+arg_0], ebx ; Signal
.text:00402814                 mov     ebx, [esp+0Ch+var_4]
.text:00402818                 add     esp, 0Ch
.text:0040281B                 jmp     raise
.text:0040281B Function        endp
.text:0040281B
.text:00402820
.text:00402820 ; =============== S U B R O U T I N E =======================================
.text:00402820
.text:00402820
.text:00402820 sub_402820      proc near               ; CODE XREF: sub_4018C0:loc_401ED4↑p
.text:00402820                                         ; sub_4029F0:loc_402A91↓p ...
.text:00402820
.text:00402820 Block           = dword ptr -1Ch
.text:00402820 Src             = dword ptr -18h
.text:00402820 Size            = dword ptr -14h
.text:00402820
.text:00402820                 push    edi
.text:00402821                 mov     edi, 1FFFh
.text:00402826                 push    esi
.text:00402827                 push    ebx
.text:00402828                 sub     esp, 10h
.text:0040282B                 cmp     ds:byte_413060, 0
.text:00402832                 jz      short loc_402840
.text:00402834                 xor     eax, eax
.text:00402836
.text:00402836 loc_402836:                             ; CODE XREF: sub_402820+11E↓j
.text:00402836                 add     esp, 10h
.text:00402839                 pop     ebx
.text:0040283A                 pop     esi
.text:0040283B                 pop     edi
.text:0040283C                 retn
.text:0040283C ; ---------------------------------------------------------------------------
.text:0040283D                 align 10h
.text:00402840
.text:00402840 loc_402840:                             ; CODE XREF: sub_402820+12↑j
.text:00402840                 mov     eax, ds:Size
.text:00402845                 cmp     edi, eax
.text:00402847                 jnb     short loc_402850
.text:00402849                 mov     edi, eax
.text:0040284B                 nop
.text:0040284C                 lea     esi, [esi+0]
.text:00402850
.text:00402850 loc_402850:                             ; CODE XREF: sub_402820+27↑j
.text:00402850                                         ; sub_402820+111↓j
.text:00402850                 mov     esi, 1FFFh
.text:00402855                 cmp     esi, edi
.text:00402857                 jnb     short loc_40286B
.text:00402859                 lea     edx, [edi-1800h]
.text:0040285F                 and     edx, 0FFFFF800h
.text:00402865                 lea     esi, [edx+1FFFh]
.text:0040286B
.text:0040286B loc_40286B:                             ; CODE XREF: sub_402820+37↑j
.text:0040286B                 mov     [esp+1Ch+Block], 30h ; '0' ; size_t
.text:00402872                 call    sub_40E610
.text:00402877                 lea     edx, [esi+1]
.text:0040287A                 mov     ebx, eax
.text:0040287C                 mov     [esp+1Ch+Block], edx ; size_t
.text:0040287F                 call    sub_40E610
.text:00402884                 mov     [ebx+1Ch], eax
.text:00402887                 mov     ecx, ds:dword_413040
.text:0040288D                 mov     edi, ds:dword_413044
.text:00402893                 mov     [ebx], esi
.text:00402895                 add     ecx, 1
.text:00402898                 adc     edi, 0
.text:0040289B                 mov     [ebx+14h], edi
.text:0040289E                 mov     [ebx+0Ch], edi
.text:004028A1                 mov     edi, eax
.text:004028A3                 mov     eax, ds:Size
.text:004028A8                 mov     dword ptr [ebx+24h], 0
.text:004028AF                 mov     dword ptr [ebx+20h], 0
.text:004028B6                 test    eax, eax
.text:004028B8                 mov     dword ptr [ebx+18h], 0
.text:004028BF                 mov     dword ptr [ebx+4], 0
.text:004028C6                 mov     [ebx+10h], ecx
.text:004028C9                 mov     [ebx+8], ecx
.text:004028CC                 mov     dword ptr [ebx+28h], 0
.text:004028D3                 jz      short loc_402903
.text:004028D5                 mov     edx, ds:Src
.text:004028DB                 cmp     edi, edx
.text:004028DD                 jz      short loc_4028F4
.text:004028DF                 mov     [esp+1Ch+Size], eax ; Size
.text:004028E3                 mov     [esp+1Ch+Src], edx ; Src
.text:004028E7                 mov     [esp+1Ch+Block], edi ; void *
.text:004028EA                 call    memcpy
.text:004028EF                 mov     eax, ds:Size
.text:004028F4
.text:004028F4 loc_4028F4:                             ; CODE XREF: sub_402820+BD↑j
.text:004028F4                 add     [ebx+4], eax
.text:004028F7                 xor     ecx, ecx
.text:004028F9                 add     edi, eax
.text:004028FB                 mov     ds:Size, ecx
.text:00402901                 sub     esi, eax
.text:00402903
.text:00402903 loc_402903:                             ; CODE XREF: sub_402820+B3↑j
.text:00402903                 xor     eax, eax
.text:00402905                 test    esi, esi
.text:00402907                 jnz     short loc_402980
.text:00402909
.text:00402909 loc_402909:                             ; CODE XREF: sub_402820+184↓j
.text:00402909                 add     [ebx+4], eax
.text:0040290C                 mov     [esp+1Ch+Block], ebx
.text:0040290F                 call    sub_403A90
.text:00402914                 mov     edx, [ebx]
.text:00402916                 test    eax, eax
.text:00402918                 mov     esi, eax
.text:0040291A                 lea     edi, [edx+edx]
.text:0040291D                 jnz     short loc_402943
.text:0040291F                 mov     ecx, [ebx+1Ch]
.text:00402922                 mov     [esp+1Ch+Block], ecx ; Block
.text:00402925                 call    free
.text:0040292A                 cmp     ds:byte_413060, 0
.text:00402931                 jz      loc_402850
.text:00402937
.text:00402937 loc_402937:                             ; CODE XREF: sub_402820+13F↓j
.text:00402937                                         ; sub_402820+15C↓j
.text:00402937                 xor     eax, eax
.text:00402939                 test    esi, esi
.text:0040293B                 setnz   al
.text:0040293E                 jmp     loc_402836
.text:00402943 ; ---------------------------------------------------------------------------
.text:00402943
.text:00402943 loc_402943:                             ; CODE XREF: sub_402820+FD↑j
.text:00402943                 mov     dword ptr [ebx+28h], 0
.text:0040294A                 mov     eax, ds:dword_413010
.text:0040294F                 mov     edi, [ebx+20h]
.text:00402952                 test    eax, eax
.text:00402954                 mov     [ebx+24h], edi
.text:00402957                 jnz     short loc_402961
.text:00402959                 mov     ds:dword_413010, ebx
.text:0040295F                 jmp     short loc_402937
.text:00402961 ; ---------------------------------------------------------------------------
.text:00402961
.text:00402961 loc_402961:                             ; CODE XREF: sub_402820+137↑j
.text:00402961                 mov     edx, eax
.text:00402963                 mov     eax, [eax+28h]
.text:00402966                 test    eax, eax
.text:00402968                 jz      short loc_402979
.text:0040296A                 lea     esi, [esi+0]
.text:00402970
.text:00402970 loc_402970:                             ; CODE XREF: sub_402820+157↓j
.text:00402970                 mov     edx, eax
.text:00402972                 mov     eax, [eax+28h]
.text:00402975                 test    eax, eax
.text:00402977                 jnz     short loc_402970
.text:00402979
.text:00402979 loc_402979:                             ; CODE XREF: sub_402820+148↑j
.text:00402979                 mov     [edx+28h], ebx
.text:0040297C                 jmp     short loc_402937
.text:0040297C ; ---------------------------------------------------------------------------
.text:0040297E                 align 10h
.text:00402980
.text:00402980 loc_402980:                             ; CODE XREF: sub_402820+E7↑j
.text:00402980                 mov     [esp+1Ch+Size], esi
.text:00402984                 mov     esi, ds:FileHandle
.text:0040298A                 mov     [esp+1Ch+Src], edi
.text:0040298E                 mov     [esp+1Ch+Block], esi
.text:00402991                 call    sub_40E910
.text:00402996                 test    eax, eax
.text:00402998                 jnz     short loc_4029A1
.text:0040299A                 mov     ds:byte_413060, 1
.text:004029A1
.text:004029A1 loc_4029A1:                             ; CODE XREF: sub_402820+178↑j
.text:004029A1                 cmp     eax, 0FFFFFFFFh
.text:004029A4                 jnz     loc_402909
.text:004029AA                 mov     [esp+1Ch+Block], offset stru_40180B._tmpfname
.text:004029B1                 call    ds:__imp_libintl_gettext
.text:004029B7                 mov     edi, eax
.text:004029B9                 call    _errno
.text:004029BE                 mov     [esp+1Ch+Size], edi ; char *
.text:004029C2                 mov     ebx, [eax]
.text:004029C4                 mov     [esp+1Ch+Block], 0 ; Code
.text:004029CB                 mov     [esp+1Ch+Src], ebx ; ErrorMessage
.text:004029CF                 call    sub_40FD70
.text:004029D4                 call    sub_4015E0
.text:004029D9                 call    sub_4014C0
.text:004029DE                 mov     [esp+1Ch+Block], 1 ; Code
.text:004029E5                 call    exit
.text:004029E5 sub_402820      endp
.text:004029E5
.text:004029E5 ; ---------------------------------------------------------------------------
.text:004029EA                 align 10h
.text:004029F0
.text:004029F0 ; =============== S U B R O U T I N E =======================================
.text:004029F0
.text:004029F0
.text:004029F0 sub_4029F0      proc near               ; CODE XREF: sub_4018C0:loc_401C87↑p
.text:004029F0                                         ; sub_4018C0:loc_401D80↑p ...
.text:004029F0
.text:004029F0 Block           = dword ptr -0Ch
.text:004029F0 var_8           = dword ptr -8
.text:004029F0 var_4           = dword ptr -4
.text:004029F0
.text:004029F0                 sub     esp, 0Ch
.text:004029F3                 mov     eax, ds:dword_4130D0
.text:004029F8                 mov     [esp+0Ch+var_8], ebx
.text:004029FC                 mov     [esp+0Ch+var_4], esi
.text:00402A00                 test    eax, eax
.text:00402A02                 jnz     loc_402AA7
.text:00402A08
.text:00402A08 loc_402A08:                             ; CODE XREF: sub_4029F0+CA↓j
.text:00402A08                 mov     esi, ds:dword_413010
.text:00402A0E                 test    esi, esi
.text:00402A10                 jz      loc_402A91
.text:00402A16
.text:00402A16 loc_402A16:                             ; CODE XREF: sub_4029F0+B2↓j
.text:00402A16                 mov     edx, ds:dword_413054
.text:00402A1C                 mov     ebx, [esi+14h]
.text:00402A1F                 mov     eax, ds:dword_413050
.text:00402A24                 mov     ecx, [esi+10h]
.text:00402A27                 cmp     edx, ebx
.text:00402A29                 ja      short loc_402A3D
.text:00402A2B                 jb      short loc_402A31
.text:00402A2D                 cmp     eax, ecx
.text:00402A2F                 jnb     short loc_402A3D
.text:00402A31
.text:00402A31 loc_402A31:                             ; CODE XREF: sub_4029F0+3B↑j
.text:00402A31                 mov     ds:dword_413050, ecx
.text:00402A37                 mov     ds:dword_413054, ebx
.text:00402A3D
.text:00402A3D loc_402A3D:                             ; CODE XREF: sub_4029F0+39↑j
.text:00402A3D                                         ; sub_4029F0+3F↑j
.text:00402A3D                 add     dword ptr [esi+10h], 1
.text:00402A41                 mov     edx, [esi+24h]
.text:00402A44                 adc     dword ptr [esi+14h], 0
.text:00402A48                 mov     ebx, [edx+8]
.text:00402A4B                 lea     ecx, [edx+ebx*8+0Ch]
.text:00402A4F                 inc     ebx
.text:00402A50                 cmp     ebx, [edx]
.text:00402A52                 mov     [edx+8], ebx
.text:00402A55                 jz      short loc_402A67
.text:00402A57
.text:00402A57 loc_402A57:                             ; CODE XREF: sub_4029F0+88↓j
.text:00402A57                                         ; sub_4029F0+9F↓j
.text:00402A57                 mov     edx, ecx
.text:00402A59
.text:00402A59 loc_402A59:                             ; CODE XREF: sub_4029F0+AA↓j
.text:00402A59                 mov     ebx, [esp+0Ch+var_8]
.text:00402A5D                 mov     eax, edx
.text:00402A5F                 mov     esi, [esp+0Ch+var_4]
.text:00402A63                 add     esp, 0Ch
.text:00402A66                 retn
.text:00402A67 ; ---------------------------------------------------------------------------
.text:00402A67
.text:00402A67 loc_402A67:                             ; CODE XREF: sub_4029F0+65↑j
.text:00402A67                 mov     eax, [edx+28Ch]
.text:00402A6D                 test    eax, eax
.text:00402A6F                 mov     [esi+24h], eax
.text:00402A72                 jz      short loc_402A80
.text:00402A74                 mov     edx, [eax]
.text:00402A76                 test    edx, edx
.text:00402A78                 jnz     short loc_402A57
.text:00402A7A                 lea     esi, [esi+0]
.text:00402A80
.text:00402A80 loc_402A80:                             ; CODE XREF: sub_4029F0+82↑j
.text:00402A80                 mov     ds:dword_4130D0, esi
.text:00402A86                 mov     ebx, [esi+28h]
.text:00402A89                 mov     ds:dword_413010, ebx
.text:00402A8F                 jmp     short loc_402A57
.text:00402A91 ; ---------------------------------------------------------------------------
.text:00402A91
.text:00402A91 loc_402A91:                             ; CODE XREF: sub_4029F0+20↑j
.text:00402A91                 call    sub_402820
.text:00402A96                 xor     edx, edx
.text:00402A98                 test    al, al
.text:00402A9A                 jz      short loc_402A59
.text:00402A9C                 mov     esi, ds:dword_413010
.text:00402AA2                 jmp     loc_402A16
.text:00402AA7 ; ---------------------------------------------------------------------------
.text:00402AA7
.text:00402AA7 loc_402AA7:                             ; CODE XREF: sub_4029F0+12↑j
.text:00402AA7                 mov     edx, [eax+1Ch]
.text:00402AAA                 mov     [esp+0Ch+Block], edx ; Block
.text:00402AAD                 call    free
.text:00402AB2                 xor     edx, edx
.text:00402AB4                 mov     ds:dword_4130D0, edx
.text:00402ABA                 jmp     loc_402A08
.text:00402ABA sub_4029F0      endp
.text:00402ABA
.text:00402ABA ; ---------------------------------------------------------------------------
.text:00402ABF                 align 10h
.text:00402AC0
.text:00402AC0 ; =============== S U B R O U T I N E =======================================
.text:00402AC0
.text:00402AC0
.text:00402AC0 sub_402AC0      proc near               ; CODE XREF: sub_4018C0+509↑p
.text:00402AC0                                         ; sub_402BC0+65↓p ...
.text:00402AC0
.text:00402AC0 arg_0           = dword ptr  4
.text:00402AC0 arg_4           = dword ptr  8
.text:00402AC0
.text:00402AC0                 push    edi
.text:00402AC1                 mov     ecx, ds:dword_413010
.text:00402AC7                 push    esi
.text:00402AC8                 push    ebx
.text:00402AC9                 test    ecx, ecx
.text:00402ACB                 mov     esi, [esp+0Ch+arg_0]
.text:00402ACF                 mov     edi, [esp+0Ch+arg_4]
.text:00402AD3                 jz      short loc_402B44
.text:00402AD5
.text:00402AD5 loc_402AD5:                             ; CODE XREF: sub_402AC0+95↓j
.text:00402AD5                 mov     ebx, [ecx+0Ch]
.text:00402AD8                 mov     eax, [ecx+8]
.text:00402ADB                 cmp     edi, ebx
.text:00402ADD                 ja      short loc_402AED
.text:00402ADF                 jb      short loc_402AE5
.text:00402AE1                 cmp     esi, eax
.text:00402AE3                 jnb     short loc_402AED
.text:00402AE5
.text:00402AE5 loc_402AE5:                             ; CODE XREF: sub_402AC0+1F↑j
.text:00402AE5                 xor     edx, edx
.text:00402AE7
.text:00402AE7 loc_402AE7:                             ; CODE XREF: sub_402AC0+59↓j
.text:00402AE7                                         ; sub_402AC0+82↓j ...
.text:00402AE7                 pop     ebx
.text:00402AE8                 mov     eax, edx
.text:00402AEA                 pop     esi
.text:00402AEB                 pop     edi
.text:00402AEC                 retn
.text:00402AED ; ---------------------------------------------------------------------------
.text:00402AED
.text:00402AED loc_402AED:                             ; CODE XREF: sub_402AC0+1D↑j
.text:00402AED                                         ; sub_402AC0+23↑j
.text:00402AED                 mov     ebx, ecx
.text:00402AEF                 nop
.text:00402AF0
.text:00402AF0 loc_402AF0:                             ; CODE XREF: sub_402AC0+4E↓j
.text:00402AF0                 mov     eax, [ebx+18h]
.text:00402AF3                 xor     ecx, ecx
.text:00402AF5                 add     eax, [ebx+8]
.text:00402AF8                 adc     ecx, [ebx+0Ch]
.text:00402AFB                 cmp     edi, ecx
.text:00402AFD                 ja      short loc_402B05
.text:00402AFF                 jb      short loc_402B20
.text:00402B01                 cmp     esi, eax
.text:00402B03                 jb      short loc_402B20
.text:00402B05
.text:00402B05 loc_402B05:                             ; CODE XREF: sub_402AC0+3D↑j
.text:00402B05                 mov     eax, [ebx+28h]
.text:00402B08                 test    eax, eax
.text:00402B0A                 jz      short loc_402B10
.text:00402B0C
.text:00402B0C loc_402B0C:                             ; CODE XREF: sub_402AC0+5E↓j
.text:00402B0C                 mov     ebx, eax
.text:00402B0E                 jmp     short loc_402AF0
.text:00402B10 ; ---------------------------------------------------------------------------
.text:00402B10
.text:00402B10 loc_402B10:                             ; CODE XREF: sub_402AC0+4A↑j
.text:00402B10                 call    sub_402820
.text:00402B15                 xor     edx, edx
.text:00402B17                 test    al, al
.text:00402B19                 jz      short loc_402AE7
.text:00402B1B                 mov     eax, [ebx+28h]
.text:00402B1E                 jmp     short loc_402B0C
.text:00402B20 ; ---------------------------------------------------------------------------
.text:00402B20
.text:00402B20 loc_402B20:                             ; CODE XREF: sub_402AC0+3F↑j
.text:00402B20                                         ; sub_402AC0+43↑j
.text:00402B20                 mov     eax, esi
.text:00402B22                 mov     edx, [ebx+20h]
.text:00402B25                 mov     esi, [ebx+8]
.text:00402B28                 sub     eax, esi
.text:00402B2A                 cmp     eax, 4Fh ; 'O'
.text:00402B2D                 jbe     short loc_402B3E
.text:00402B2F                 nop
.text:00402B30
.text:00402B30 loc_402B30:                             ; CODE XREF: sub_402AC0+7C↓j
.text:00402B30                 sub     eax, 50h ; 'P'
.text:00402B33                 mov     edx, [edx+28Ch]
.text:00402B39                 cmp     eax, 4Fh ; 'O'
.text:00402B3C                 ja      short loc_402B30
.text:00402B3E
.text:00402B3E loc_402B3E:                             ; CODE XREF: sub_402AC0+6D↑j
.text:00402B3E                 lea     edx, [edx+eax*8+0Ch]
.text:00402B42                 jmp     short loc_402AE7
.text:00402B44 ; ---------------------------------------------------------------------------
.text:00402B44
.text:00402B44 loc_402B44:                             ; CODE XREF: sub_402AC0+13↑j
.text:00402B44                 call    sub_402820
.text:00402B49                 xor     edx, edx
.text:00402B4B                 test    al, al
.text:00402B4D                 jz      short loc_402AE7
.text:00402B4F                 mov     ecx, ds:dword_413010
.text:00402B55                 jmp     loc_402AD5
.text:00402B55 sub_402AC0      endp
.text:00402B55
.text:00402B55 ; ---------------------------------------------------------------------------
.text:00402B5A aSLineNumberOut db '%s: line number out of range',0
.text:00402B5A                                         ; DATA XREF: sub_402BC0:loc_402CED↓o
.text:00402B77                 align 10h
.text:00402B80 aErrorInRegular db 'error in regular expression search',0
.text:00402B80                                         ; DATA XREF: sub_402BC0:loc_402E0C↓o
.text:00402BA3 aSSMatchNotFoun db '%s: `%s',27h,': match not found',0
.text:00402BA3                                         ; DATA XREF: sub_402BC0:loc_402E7A↓o
.text:00402BA3                                         ; sub_402BC0:loc_402FEB↓o
.text:00402BBD                 align 10h
.text:00402BC0
.text:00402BC0 ; =============== S U B R O U T I N E =======================================
.text:00402BC0
.text:00402BC0
.text:00402BC0 sub_402BC0      proc near               ; CODE XREF: sub_4018C0+383↑p
.text:00402BC0
.text:00402BC0 Code            = dword ptr -6Ch
.text:00402BC0 Format          = dword ptr -68h
.text:00402BC0 var_64          = dword ptr -64h
.text:00402BC0 var_60          = byte ptr -60h
.text:00402BC0 var_5C          = dword ptr -5Ch
.text:00402BC0 var_58          = dword ptr -58h
.text:00402BC0 var_4C          = dword ptr -4Ch
.text:00402BC0 var_45          = byte ptr -45h
.text:00402BC0 var_44          = dword ptr -44h
.text:00402BC0 var_40          = dword ptr -40h
.text:00402BC0 var_3C          = byte ptr -3Ch
.text:00402BC0 arg_0           = dword ptr  4
.text:00402BC0 arg_4           = dword ptr  8
.text:00402BC0 arg_8           = dword ptr  0Ch
.text:00402BC0
.text:00402BC0                 push    ebp
.text:00402BC1                 push    edi
.text:00402BC2                 push    esi
.text:00402BC3                 push    ebx
.text:00402BC4                 sub     esp, 5Ch
.text:00402BC7                 mov     ecx, [esp+6Ch+arg_0]
.text:00402BCB                 mov     ebx, [esp+6Ch+arg_4]
.text:00402BCF                 mov     esi, [esp+6Ch+arg_8]
.text:00402BD3                 movzx   edx, byte ptr [ecx+45h]
.text:00402BD7                 test    dl, dl
.text:00402BD9                 mov     [esp+6Ch+var_45], dl
.text:00402BDD                 jz      loc_4030B0
.text:00402BE3
.text:00402BE3 loc_402BE3:                             ; CODE XREF: sub_402BC0+4F5↓j
.text:00402BE3                 mov     edi, [esp+6Ch+arg_0]
.text:00402BE7                 mov     eax, [edi+2Ch]
.text:00402BEA                 test    eax, eax
.text:00402BEC                 js      loc_402F40
.text:00402BF2                 lea     esi, [esi+0]
.text:00402BF9                 lea     edi, [edi+0]
.text:00402C00
.text:00402C00 loc_402C00:                             ; CODE XREF: sub_402BC0+C8↓j
.text:00402C00                                         ; sub_402BC0+D6↓j
.text:00402C00                 mov     edx, ds:dword_413050
.text:00402C06                 mov     ebp, ds:dword_413054
.text:00402C0C                 add     edx, 1
.text:00402C0F                 adc     ebp, 0
.text:00402C12                 mov     ds:dword_413050, edx
.text:00402C18                 mov     ds:dword_413054, ebp
.text:00402C1E                 mov     [esp+6Ch+Code], edx
.text:00402C21                 mov     [esp+6Ch+Format], ebp
.text:00402C25                 call    sub_402AC0
.text:00402C2A                 test    eax, eax
.text:00402C2C                 mov     ecx, eax
.text:00402C2E                 jz      loc_402E3C
.text:00402C34                 mov     edx, [eax]
.text:00402C36                 mov     ebp, [eax+4]
.text:00402C39                 cmp     byte ptr [edx+ebp-1], 0Ah
.text:00402C3E                 jz      loc_402E36
.text:00402C44
.text:00402C44 loc_402C44:                             ; CODE XREF: sub_402BC0+277↓j
.text:00402C44                 mov     [esp+6Ch+var_58], 0
.text:00402C4C                 mov     edi, [esp+6Ch+arg_0]
.text:00402C50                 mov     [esp+6Ch+var_5C], edx
.text:00402C54                 mov     dword ptr [esp+6Ch+var_60], 0 ; char
.text:00402C5C                 add     edi, 4
.text:00402C5F                 mov     [esp+6Ch+var_64], edx
.text:00402C63                 mov     edx, [ecx+4]
.text:00402C66                 mov     [esp+6Ch+Code], edi
.text:00402C69                 mov     [esp+6Ch+Format], edx
.text:00402C6D                 call    sub_406FA0
.text:00402C72                 cmp     eax, 0FFFFFFFEh
.text:00402C75                 jz      loc_402E0C
.text:00402C7B                 inc     eax
.text:00402C7C                 jnz     short loc_402C9B
.text:00402C7E                 call    sub_4029F0
.text:00402C83                 cmp     [esp+6Ch+var_45], 0
.text:00402C88                 jnz     loc_402C00
.text:00402C8E                 mov     [esp+6Ch+Code], eax
.text:00402C91                 call    sub_401740
.text:00402C96                 jmp     loc_402C00
.text:00402C9B ; ---------------------------------------------------------------------------
.text:00402C9B
.text:00402C9B loc_402C9B:                             ; CODE XREF: sub_402BC0+BC↑j
.text:00402C9B                                         ; sub_402BC0+3F7↓j
.text:00402C9B                 mov     eax, [esp+6Ch+arg_0]
.text:00402C9F                 mov     ebx, [esp+6Ch+arg_0]
.text:00402CA3                 mov     ecx, ds:dword_413050
.text:00402CA9                 mov     ebp, [eax+28h]
.text:00402CAC                 mov     edi, [eax+2Ch]
.text:00402CAF                 mov     eax, [ebx+40h]
.text:00402CB2                 mov     [esp+6Ch+var_44], ebp
.text:00402CB6                 mov     esi, ds:dword_413054
.text:00402CBC                 add     [esp+6Ch+var_44], ecx
.text:00402CC0                 mov     [esp+6Ch+var_4C], eax
.text:00402CC4                 mov     eax, ds:dword_413010
.text:00402CC9                 mov     [esp+6Ch+var_40], edi
.text:00402CCD                 adc     [esp+6Ch+var_40], esi
.text:00402CD1                 test    eax, eax
.text:00402CD3                 jz      loc_402DCD
.text:00402CD9
.text:00402CD9 loc_402CD9:                             ; CODE XREF: sub_402BC0+21B↓j
.text:00402CD9                 mov     edx, [eax+14h]
.text:00402CDC                 mov     eax, [eax+10h]
.text:00402CDF                 cmp     edx, [esp+6Ch+var_40]
.text:00402CE3                 jb      short loc_402D39
.text:00402CE5                 ja      short loc_402CED
.text:00402CE7                 cmp     eax, [esp+6Ch+var_44]
.text:00402CEB                 jbe     short loc_402D39
.text:00402CED
.text:00402CED loc_402CED:                             ; CODE XREF: sub_402BC0+125↑j
.text:00402CED                                         ; sub_402BC0+1A7↓j
.text:00402CED                 mov     [esp+6Ch+Code], offset aSLineNumberOut ; "%s: line number out of range"
.text:00402CF4                 call    ds:__imp_libintl_gettext
.text:00402CFA                 mov     edi, ds:dword_413110
.text:00402D00                 mov     ebp, [esp+6Ch+var_4C]
.text:00402D04                 mov     ebx, [edi+ebp*4]
.text:00402D07                 mov     [esp+6Ch+var_64], eax ; char *
.text:00402D0B                 mov     [esp+6Ch+Format], 0 ; ErrorMessage
.text:00402D13                 mov     dword ptr [esp+6Ch+var_60], ebx ; char
.text:00402D17                 mov     [esp+6Ch+Code], 0 ; Code
.text:00402D1E                 call    sub_40FD70
.text:00402D23
.text:00402D23 loc_402D23:                             ; CODE XREF: sub_402BC0+271↓j
.text:00402D23                                         ; sub_402BC0+342↓j ...
.text:00402D23                 call    sub_4015E0
.text:00402D28                 call    sub_4014C0
.text:00402D2D                 mov     [esp+6Ch+Code], 1 ; Code
.text:00402D34
.text:00402D34 loc_402D34:                             ; CODE XREF: sub_402BC0+294↓j
.text:00402D34                 call    exit
.text:00402D39 ; ---------------------------------------------------------------------------
.text:00402D39
.text:00402D39 loc_402D39:                             ; CODE XREF: sub_402BC0+123↑j
.text:00402D39                                         ; sub_402BC0+12B↑j
.text:00402D39                 mov     edi, [esp+6Ch+var_44]
.text:00402D3D                 mov     ebp, [esp+6Ch+var_40]
.text:00402D41                 sub     edi, eax
.text:00402D43                 sbb     ebp, edx
.text:00402D45                 xor     esi, esi
.text:00402D47                 xor     ebx, ebx
.text:00402D49                 cmp     esi, ebp
.text:00402D4B                 jb      short loc_402D60
.text:00402D4D                 cmp     ebx, edi
.text:00402D4F                 jnb     short loc_402D80
.text:00402D51                 jmp     short loc_402D60
.text:00402D51 ; ---------------------------------------------------------------------------
.text:00402D53                 align 10h
.text:00402D60
.text:00402D60 loc_402D60:                             ; CODE XREF: sub_402BC0+18B↑j
.text:00402D60                                         ; sub_402BC0+191↑j ...
.text:00402D60                 call    sub_4029F0
.text:00402D65                 test    eax, eax
.text:00402D67                 jz      short loc_402CED
.text:00402D69                 cmp     [esp+6Ch+var_45], 0
.text:00402D6E                 jz      short loc_402DC3
.text:00402D70
.text:00402D70 loc_402D70:                             ; CODE XREF: sub_402BC0+20B↓j
.text:00402D70                 add     ebx, 1
.text:00402D73                 adc     esi, 0
.text:00402D76                 cmp     esi, ebp
.text:00402D78                 jb      short loc_402D60
.text:00402D7A                 ja      short loc_402D80
.text:00402D7C                 cmp     ebx, edi
.text:00402D7E                 jb      short loc_402D60
.text:00402D80
.text:00402D80 loc_402D80:                             ; CODE XREF: sub_402BC0+18F↑j
.text:00402D80                                         ; sub_402BC0+1BA↑j
.text:00402D80                 cmp     [esp+6Ch+var_45], 0
.text:00402D85                 jz      short loc_402DBC
.text:00402D87
.text:00402D87 loc_402D87:                             ; CODE XREF: sub_402BC0+201↓j
.text:00402D87                 mov     esi, [esp+6Ch+arg_0]
.text:00402D8B                 mov     edx, [esi+2Ch]
.text:00402D8E                 mov     eax, [esi+28h]
.text:00402D91                 test    edx, edx
.text:00402D93                 js      short loc_402DAD
.text:00402D95                 test    edx, edx
.text:00402D97                 jle     short loc_402DB5
.text:00402D99
.text:00402D99 loc_402D99:                             ; CODE XREF: sub_402BC0+1FA↓j
.text:00402D99                 mov     edx, [esp+6Ch+var_44]
.text:00402D9D                 mov     ecx, [esp+6Ch+var_40]
.text:00402DA1                 mov     ds:dword_413050, edx
.text:00402DA7                 mov     ds:dword_413054, ecx
.text:00402DAD
.text:00402DAD loc_402DAD:                             ; CODE XREF: sub_402BC0+1D3↑j
.text:00402DAD                                         ; sub_402BC0+1F8↓j
.text:00402DAD                 add     esp, 5Ch
.text:00402DB0                 pop     ebx
.text:00402DB1                 pop     esi
.text:00402DB2                 pop     edi
.text:00402DB3                 pop     ebp
.text:00402DB4                 retn
.text:00402DB5 ; ---------------------------------------------------------------------------
.text:00402DB5
.text:00402DB5 loc_402DB5:                             ; CODE XREF: sub_402BC0+1D7↑j
.text:00402DB5                 cmp     eax, 0
.text:00402DB8                 jbe     short loc_402DAD
.text:00402DBA                 jmp     short loc_402D99
.text:00402DBC ; ---------------------------------------------------------------------------
.text:00402DBC
.text:00402DBC loc_402DBC:                             ; CODE XREF: sub_402BC0+1C5↑j
.text:00402DBC                 call    sub_4015E0
.text:00402DC1                 jmp     short loc_402D87
.text:00402DC3 ; ---------------------------------------------------------------------------
.text:00402DC3
.text:00402DC3 loc_402DC3:                             ; CODE XREF: sub_402BC0+1AE↑j
.text:00402DC3                 mov     [esp+6Ch+Code], eax
.text:00402DC6                 call    sub_401740
.text:00402DCB                 jmp     short loc_402D70
.text:00402DCD ; ---------------------------------------------------------------------------
.text:00402DCD
.text:00402DCD loc_402DCD:                             ; CODE XREF: sub_402BC0+113↑j
.text:00402DCD                 call    sub_402820
.text:00402DD2                 test    al, al
.text:00402DD4                 jz      short loc_402DE0
.text:00402DD6
.text:00402DD6 loc_402DD6:                             ; CODE XREF: sub_402BC0+24A↓j
.text:00402DD6                 mov     eax, ds:dword_413010
.text:00402DDB                 jmp     loc_402CD9
.text:00402DE0 ; ---------------------------------------------------------------------------
.text:00402DE0
.text:00402DE0 loc_402DE0:                             ; CODE XREF: sub_402BC0+214↑j
.text:00402DE0                 mov     [esp+6Ch+Code], offset aInputDisappear ; "input disappeared"
.text:00402DE7                 call    ds:__imp_libintl_gettext
.text:00402DED                 mov     esi, eax
.text:00402DEF                 call    _errno
.text:00402DF4                 mov     [esp+6Ch+var_64], esi ; char *
.text:00402DF8                 mov     edx, [eax]
.text:00402DFA                 mov     [esp+6Ch+Code], 1 ; Code
.text:00402E01                 mov     [esp+6Ch+Format], edx ; ErrorMessage
.text:00402E05                 call    sub_40FD70
.text:00402E0A                 jmp     short loc_402DD6
.text:00402E0C ; ---------------------------------------------------------------------------
.text:00402E0C
.text:00402E0C loc_402E0C:                             ; CODE XREF: sub_402BC0+B5↑j
.text:00402E0C                                         ; sub_402BC0+3ED↓j
.text:00402E0C                 mov     [esp+6Ch+Code], offset aErrorInRegular ; "error in regular expression search"
.text:00402E13                 call    ds:__imp_libintl_gettext
.text:00402E19                 mov     [esp+6Ch+Format], 0 ; ErrorMessage
.text:00402E21                 mov     [esp+6Ch+Code], 0 ; Code
.text:00402E28                 mov     [esp+6Ch+var_64], eax ; char *
.text:00402E2C                 call    sub_40FD70
.text:00402E31                 jmp     loc_402D23
.text:00402E36 ; ---------------------------------------------------------------------------
.text:00402E36
.text:00402E36 loc_402E36:                             ; CODE XREF: sub_402BC0+7E↑j
.text:00402E36                 dec     edx
.text:00402E37                 jmp     loc_402C44
.text:00402E3C ; ---------------------------------------------------------------------------
.text:00402E3C
.text:00402E3C loc_402E3C:                             ; CODE XREF: sub_402BC0+6E↑j
.text:00402E3C                 mov     eax, [esp+6Ch+arg_0]
.text:00402E40                 cmp     byte ptr [eax+44h], 0
.text:00402E44                 jz      short loc_402E7A
.text:00402E46                 cmp     [esp+6Ch+var_45], 0
.text:00402E4B                 jz      short loc_402E60
.text:00402E4D
.text:00402E4D loc_402E4D:                             ; CODE XREF: sub_402BC0+2B8↓j
.text:00402E4D                                         ; sub_402BC0+40E↓j
.text:00402E4D                 mov     [esp+6Ch+Code], 0
.text:00402E54                 jmp     loc_402D34
.text:00402E54 ; ---------------------------------------------------------------------------
.text:00402E59                 align 10h
.text:00402E60
.text:00402E60 loc_402E60:                             ; CODE XREF: sub_402BC0+28B↑j
.text:00402E60                                         ; sub_402BC0+2B1↓j
.text:00402E60                 call    sub_4029F0
.text:00402E65                 test    eax, eax
.text:00402E67                 jz      short loc_402E73
.text:00402E69                 mov     [esp+6Ch+Code], eax
.text:00402E6C                 call    sub_401740
.text:00402E71                 jmp     short loc_402E60
.text:00402E73 ; ---------------------------------------------------------------------------
.text:00402E73
.text:00402E73 loc_402E73:                             ; CODE XREF: sub_402BC0+2A7↑j
.text:00402E73                                         ; sub_402BC0+41B↓j
.text:00402E73                 call    sub_4015E0
.text:00402E78                 jmp     short loc_402E4D
.text:00402E7A ; ---------------------------------------------------------------------------
.text:00402E7A
.text:00402E7A loc_402E7A:                             ; CODE XREF: sub_402BC0+284↑j
.text:00402E7A                 mov     [esp+6Ch+Code], offset aSSMatchNotFoun ; "%s: `%s': match not found"
.text:00402E81                 call    ds:__imp_libintl_gettext
.text:00402E87                 mov     edi, [esp+6Ch+arg_0]
.text:00402E8B                 mov     ebp, ds:dword_413110
.text:00402E91                 mov     ecx, [edi+40h]
.text:00402E94                 mov     edi, [ebp+ecx*4+0]
.text:00402E98                 mov     ecx, ds:_iob
.text:00402E9E                 mov     [esp+6Ch+Format], eax ; Format
.text:00402EA2                 mov     ebp, ds:dword_413430
.text:00402EA8                 mov     dword ptr [esp+6Ch+var_60], edi
.text:00402EAC                 add     ecx, 40h ; '@'
.text:00402EAF                 mov     edi, esi
.text:00402EB1                 mov     [esp+6Ch+var_64], ebp
.text:00402EB5                 mov     [esp+6Ch+Code], ecx ; Stream
.text:00402EB8                 call    fprintf
.text:00402EBD                 or      edi, ebx
.text:00402EBF                 jz      short loc_402F25
.text:00402EC1                 mov     [esp+6Ch+Code], ebx
.text:00402EC4                 lea     edx, [esp+6Ch+var_3C]
.text:00402EC8                 mov     [esp+6Ch+var_64], edx
.text:00402ECC                 mov     [esp+6Ch+Format], esi
.text:00402ED0                 call    sub_40E8A0
.text:00402ED5                 mov     [esp+6Ch+Code], offset aOnRepetitionS ; " on repetition %s\n"
.text:00402EDC                 mov     esi, eax
.text:00402EDE                 call    ds:__imp_libintl_gettext
.text:00402EE4                 mov     [esp+6Ch+var_64], esi
.text:00402EE8                 mov     ebx, ds:_iob
.text:00402EEE                 add     ebx, 40h ; '@'
.text:00402EF1                 mov     [esp+6Ch+Format], eax ; Format
.text:00402EF5                 mov     [esp+6Ch+Code], ebx ; Stream
.text:00402EF8                 call    fprintf
.text:00402EFD
.text:00402EFD loc_402EFD:                             ; CODE XREF: sub_402BC0+37E↓j
.text:00402EFD                 cmp     [esp+6Ch+var_45], 0
.text:00402F02                 jnz     loc_402D23
.text:00402F08
.text:00402F08 loc_402F08:                             ; CODE XREF: sub_402BC0+359↓j
.text:00402F08                 call    sub_4029F0
.text:00402F0D                 test    eax, eax
.text:00402F0F                 jz      short loc_402F1B
.text:00402F11                 mov     [esp+6Ch+Code], eax
.text:00402F14                 call    sub_401740
.text:00402F19                 jmp     short loc_402F08
.text:00402F1B ; ---------------------------------------------------------------------------
.text:00402F1B
.text:00402F1B loc_402F1B:                             ; CODE XREF: sub_402BC0+34F↑j
.text:00402F1B                                         ; sub_402BC0+4BF↓j
.text:00402F1B                 call    sub_4015E0
.text:00402F20                 jmp     loc_402D23
.text:00402F25 ; ---------------------------------------------------------------------------
.text:00402F25
.text:00402F25 loc_402F25:                             ; CODE XREF: sub_402BC0+2FF↑j
.text:00402F25                 mov     [esp+6Ch+Code], 0Ah ; Character
.text:00402F2C                 mov     ecx, ds:_iob
.text:00402F32                 add     ecx, 40h ; '@'
.text:00402F35                 mov     [esp+6Ch+Format], ecx ; Stream
.text:00402F39                 call    fputc
.text:00402F3E                 jmp     short loc_402EFD
.text:00402F40 ; ---------------------------------------------------------------------------
.text:00402F40
.text:00402F40 loc_402F40:                             ; CODE XREF: sub_402BC0+2C↑j
.text:00402F40                                         ; sub_402BC0+3F5↓j
.text:00402F40                 mov     ebp, ds:dword_413050
.text:00402F46                 mov     ecx, ds:dword_413054
.text:00402F4C                 add     ebp, 1
.text:00402F4F                 adc     ecx, 0
.text:00402F52                 mov     ds:dword_413054, ecx
.text:00402F58                 mov     [esp+6Ch+Format], ecx
.text:00402F5C                 mov     ds:dword_413050, ebp
.text:00402F62                 mov     [esp+6Ch+Code], ebp
.text:00402F65                 call    sub_402AC0
.text:00402F6A                 test    eax, eax
.text:00402F6C                 mov     ecx, eax
.text:00402F6E                 jz      short loc_402FBF
.text:00402F70                 mov     edx, [eax]
.text:00402F72                 mov     edi, [eax+4]
.text:00402F75                 cmp     byte ptr [edx+edi-1], 0Ah
.text:00402F7A                 jz      short loc_402FBC
.text:00402F7C
.text:00402F7C loc_402F7C:                             ; CODE XREF: sub_402BC0+3FD↓j
.text:00402F7C                 mov     [esp+6Ch+var_58], 0
.text:00402F84                 mov     ebp, [esp+6Ch+arg_0]
.text:00402F88                 mov     [esp+6Ch+var_5C], edx
.text:00402F8C                 mov     dword ptr [esp+6Ch+var_60], 0
.text:00402F94                 add     ebp, 4
.text:00402F97                 mov     [esp+6Ch+var_64], edx
.text:00402F9B                 mov     edx, [ecx+4]
.text:00402F9E                 mov     [esp+6Ch+Code], ebp
.text:00402FA1                 mov     [esp+6Ch+Format], edx
.text:00402FA5                 call    sub_406FA0
.text:00402FAA                 cmp     eax, 0FFFFFFFEh
.text:00402FAD                 jz      loc_402E0C
.text:00402FB3                 test    eax, eax
.text:00402FB5                 js      short loc_402F40
.text:00402FB7                 jmp     loc_402C9B
.text:00402FBC ; ---------------------------------------------------------------------------
.text:00402FBC
.text:00402FBC loc_402FBC:                             ; CODE XREF: sub_402BC0+3BA↑j
.text:00402FBC                 dec     edx
.text:00402FBD                 jmp     short loc_402F7C
.text:00402FBF ; ---------------------------------------------------------------------------
.text:00402FBF
.text:00402FBF loc_402FBF:                             ; CODE XREF: sub_402BC0+3AE↑j
.text:00402FBF                 mov     edi, [esp+6Ch+arg_0]
.text:00402FC3                 cmp     byte ptr [edi+44h], 0
.text:00402FC7                 jz      short loc_402FEB
.text:00402FC9                 cmp     [esp+6Ch+var_45], 0
.text:00402FCE                 jnz     loc_402E4D
.text:00402FD4
.text:00402FD4 loc_402FD4:                             ; CODE XREF: sub_402BC0+429↓j
.text:00402FD4                 call    sub_4029F0
.text:00402FD9                 test    eax, eax
.text:00402FDB                 jz      loc_402E73
.text:00402FE1                 mov     [esp+6Ch+Code], eax
.text:00402FE4                 call    sub_401740
.text:00402FE9                 jmp     short loc_402FD4
.text:00402FEB ; ---------------------------------------------------------------------------
.text:00402FEB
.text:00402FEB loc_402FEB:                             ; CODE XREF: sub_402BC0+407↑j
.text:00402FEB                 mov     [esp+6Ch+Code], offset aSSMatchNotFoun ; "%s: `%s': match not found"
.text:00402FF2                 call    ds:__imp_libintl_gettext
.text:00402FF8                 mov     ebp, [esp+6Ch+arg_0]
.text:00402FFC                 mov     edi, ds:dword_413110
.text:00403002                 mov     edx, ds:_iob
.text:00403008                 mov     ecx, [ebp+40h]
.text:0040300B                 add     edx, 40h ; '@'
.text:0040300E                 mov     ebp, [edi+ecx*4]
.text:00403011                 mov     [esp+6Ch+Format], eax ; Format
.text:00403015                 mov     ecx, ds:dword_413430
.text:0040301B                 mov     [esp+6Ch+Code], edx ; Stream
.text:0040301E                 mov     dword ptr [esp+6Ch+var_60], ebp
.text:00403022                 mov     [esp+6Ch+var_64], ecx
.text:00403026                 call    fprintf
.text:0040302B                 mov     eax, esi
.text:0040302D                 or      eax, ebx
.text:0040302F                 jz      short loc_40308F
.text:00403031                 mov     [esp+6Ch+Code], ebx
.text:00403034                 lea     edx, [esp+6Ch+var_3C]
.text:00403038                 mov     [esp+6Ch+var_64], edx
.text:0040303C                 mov     [esp+6Ch+Format], esi
.text:00403040                 call    sub_40E8A0
.text:00403045                 mov     [esp+6Ch+Code], offset aOnRepetitionS ; " on repetition %s\n"
.text:0040304C                 mov     esi, eax
.text:0040304E                 call    ds:__imp_libintl_gettext
.text:00403054                 mov     [esp+6Ch+var_64], esi
.text:00403058                 mov     ebx, ds:_iob
.text:0040305E                 add     ebx, 40h ; '@'
.text:00403061                 mov     [esp+6Ch+Format], eax ; Format
.text:00403065                 mov     [esp+6Ch+Code], ebx ; Stream
.text:00403068                 call    fprintf
.text:0040306D
.text:0040306D loc_40306D:                             ; CODE XREF: sub_402BC0+4E8↓j
.text:0040306D                 cmp     [esp+6Ch+var_45], 0
.text:00403072                 jnz     loc_402D23
.text:00403078
.text:00403078 loc_403078:                             ; CODE XREF: sub_402BC0+4CD↓j
.text:00403078                 call    sub_4029F0
.text:0040307D                 test    eax, eax
.text:0040307F                 jz      loc_402F1B
.text:00403085                 mov     [esp+6Ch+Code], eax
.text:00403088                 call    sub_401740
.text:0040308D                 jmp     short loc_403078
.text:0040308F ; ---------------------------------------------------------------------------
.text:0040308F
.text:0040308F loc_40308F:                             ; CODE XREF: sub_402BC0+46F↑j
.text:0040308F                 mov     [esp+6Ch+Code], 0Ah ; Character
.text:00403096                 mov     ecx, ds:_iob
.text:0040309C                 add     ecx, 40h ; '@'
.text:0040309F                 mov     [esp+6Ch+Format], ecx ; Stream
.text:004030A3                 call    fputc
.text:004030A8                 jmp     short loc_40306D
.text:004030A8 ; ---------------------------------------------------------------------------
.text:004030AA                 align 10h
.text:004030B0
.text:004030B0 loc_4030B0:                             ; CODE XREF: sub_402BC0+1D↑j
.text:004030B0                 call    sub_401390
.text:004030B5                 jmp     loc_402BE3
.text:004030B5 sub_402BC0      endp
.text:004030B5
.text:004030B5 ; ---------------------------------------------------------------------------
.text:004030BA                 align 10h
.text:004030C0 aLineNumberSIsS db 'line number `%s',27h,' is smaller than preceding line number, %s',0
.text:004030C0                                         ; DATA XREF: sub_403200+132↓o
.text:004030FB                 align 10h
.text:00403100 aSIsRequiredInR db '%s: `}',27h,' is required in repeat count',0
.text:00403100                                         ; DATA XREF: sub_403200+209↓o
.text:00403124                 align 20h
.text:00403140 aSIntegerRequir db '%s}: integer required between `{',27h,' and `}',27h,0
.text:00403140                                         ; DATA XREF: sub_403200:loc_40348A↓o
.text:0040316A                 align 20h
.text:00403180 aWarningLineNum db 'warning: line number `%s',27h,' is the same as preceding line num'
.text:00403180                                         ; DATA XREF: sub_403200:loc_4034D2↓o
.text:00403180                 db 'ber',0
.text:004031BF                 align 10h
.text:004031C0 aSLineNumberMus db '%s: line number must be greater than zero',0
.text:004031C0                                         ; DATA XREF: sub_403200:loc_403516↓o
.text:004031EA aSInvalidPatter db '%s: invalid pattern',0
.text:004031EA                                         ; DATA XREF: sub_403200:loc_403560↓o
.text:004031FE                 align 10h
.text:00403200
.text:00403200 ; =============== S U B R O U T I N E =======================================
.text:00403200
.text:00403200
.text:00403200 sub_403200      proc near               ; CODE XREF: sub_4018C0+2F6↑p
.text:00403200
.text:00403200 Str             = dword ptr -7Ch
.text:00403200 ErrorMessage    = dword ptr -78h
.text:00403200 var_74          = dword ptr -74h
.text:00403200 var_70          = byte ptr -70h
.text:00403200 var_6C          = dword ptr -6Ch
.text:00403200 var_54          = dword ptr -54h
.text:00403200 var_50          = dword ptr -50h
.text:00403200 var_4C          = dword ptr -4Ch
.text:00403200 var_48          = dword ptr -48h
.text:00403200 var_44          = dword ptr -44h
.text:00403200 var_40          = dword ptr -40h
.text:00403200 var_3C          = byte ptr -3Ch
.text:00403200 arg_0           = dword ptr  4
.text:00403200 arg_4           = dword ptr  8
.text:00403200 arg_8           = dword ptr  0Ch
.text:00403200
.text:00403200                 push    ebp
.text:00403201                 push    edi
.text:00403202                 push    esi
.text:00403203                 push    ebx
.text:00403204                 sub     esp, 6Ch
.text:00403207                 mov     edx, [esp+7Ch+arg_4]
.text:0040320E                 mov     ecx, [esp+7Ch+arg_0]
.text:00403215                 mov     [esp+7Ch+var_50], edx
.text:00403219                 cmp     edx, ecx
.text:0040321B                 jge     loc_4033EA
.text:00403221                 jmp     short loc_403230
.text:00403221 ; ---------------------------------------------------------------------------
.text:00403223                 align 10h
.text:00403230
.text:00403230 loc_403230:                             ; CODE XREF: sub_403200+21↑j
.text:00403230                                         ; sub_403200+1E4↓j
.text:00403230                 mov     eax, [esp+7Ch+arg_8]
.text:00403237                 mov     ebx, [esp+7Ch+var_50]
.text:0040323B                 mov     edx, [eax+ebx*4]
.text:0040323E                 movzx   eax, byte ptr [edx]
.text:00403241                 cmp     al, 2Fh ; '/'
.text:00403243                 jz      loc_4035D0
.text:00403249                 cmp     al, 25h ; '%'
.text:0040324B                 jz      loc_4035D0
.text:00403251                 mov     ecx, ds:dword_413160
.text:00403257                 cmp     ecx, ds:dword_4130E0
.text:0040325D                 jz      loc_40359C
.text:00403263
.text:00403263 loc_403263:                             ; CODE XREF: sub_403200+3C5↓j
.text:00403263                 mov     edi, ds:dword_413150
.text:00403269                 lea     eax, [ecx+ecx*8]
.text:0040326C                 mov     ebx, [esp+7Ch+var_50]
.text:00403270                 lea     esi, [ecx+1]
.text:00403273                 mov     ecx, [esp+7Ch+var_50]
.text:00403277                 lea     ebp, [edi+eax*8]
.text:0040327A                 mov     dword ptr [ebp+0], 0
.text:00403281                 mov     eax, [esp+7Ch+arg_8]
.text:00403288                 lea     edx, [esp+7Ch+var_44]
.text:0040328C                 mov     dword ptr [ebp+38h], 0
.text:00403293                 mov     dword ptr [ebp+3Ch], 0
.text:0040329A                 mov     byte ptr [ebp+44h], 0
.text:0040329E                 mov     dword ptr [ebp+30h], 0
.text:004032A5                 mov     dword ptr [ebp+34h], 0
.text:004032AC                 mov     dword ptr [ebp+28h], 0
.text:004032B3                 mov     dword ptr [ebp+2Ch], 0
.text:004032BA                 mov     ds:dword_413160, esi
.text:004032C0                 mov     [ebp+40h], ebx
.text:004032C3                 mov     [esp+7Ch+var_6C], offset Str ; Str
.text:004032CB                 mov     dword ptr [esp+7Ch+var_70], edx ; int
.text:004032CF                 mov     [esp+7Ch+var_74], 0Ah ; int
.text:004032D7                 mov     [esp+7Ch+ErrorMessage], 0 ; int
.text:004032DF                 mov     edi, [eax+ecx*4]
.text:004032E2                 mov     [esp+7Ch+var_54], ebp
.text:004032E6                 mov     [esp+7Ch+Str], edi ; int
.text:004032E9                 call    sub_40CA00
.text:004032EE                 test    eax, eax
.text:004032F0                 jnz     loc_403560
.text:004032F6
.text:004032F6 loc_4032F6:                             ; CODE XREF: sub_403200+397↓j
.text:004032F6                 mov     ebx, [esp+7Ch+var_40]
.text:004032FA                 mov     ecx, [esp+7Ch+var_44]
.text:004032FE                 mov     edi, ebx
.text:00403300                 or      edi, ecx
.text:00403302                 jz      loc_403516
.text:00403308
.text:00403308 loc_403308:                             ; CODE XREF: sub_403200+355↓j
.text:00403308                 mov     edi, ds:dword_4130F4
.text:0040330E                 mov     esi, ds:dword_4130F0
.text:00403314                 cmp     ebx, edi
.text:00403316                 ja      short loc_403390
.text:00403318                 jb      short loc_40331E
.text:0040331A                 cmp     ecx, esi
.text:0040331C                 jnb     short loc_403390
.text:0040331E
.text:0040331E loc_40331E:                             ; CODE XREF: sub_403200+118↑j
.text:0040331E                 mov     [esp+7Ch+Str], esi
.text:00403321                 lea     ebx, [esp+7Ch+var_3C]
.text:00403325                 mov     [esp+7Ch+var_74], ebx
.text:00403329                 mov     [esp+7Ch+ErrorMessage], edi
.text:0040332D                 call    sub_40E8A0
.text:00403332                 mov     [esp+7Ch+Str], offset aLineNumberSIsS ; "line number `%s' is smaller than preced"...
.text:00403339                 mov     esi, eax
.text:0040333B                 call    ds:__imp_libintl_gettext
.text:00403341                 mov     [esp+7Ch+var_6C], esi
.text:00403345                 mov     ecx, [esp+7Ch+var_50]
.text:00403349                 mov     edx, [esp+7Ch+arg_8]
.text:00403350                 mov     edi, [edx+ecx*4]
.text:00403353                 mov     [esp+7Ch+var_74], eax ; char *
.text:00403357                 mov     [esp+7Ch+ErrorMessage], 0 ; ErrorMessage
.text:0040335F                 mov     dword ptr [esp+7Ch+var_70], edi ; char
.text:00403363                 mov     [esp+7Ch+Str], 1 ; Code
.text:0040336A                 call    sub_40FD70
.text:0040336F                 mov     ecx, [esp+7Ch+var_44]
.text:00403373                 mov     ebx, [esp+7Ch+var_40]
.text:00403377                 mov     esi, ds:dword_4130F0
.text:0040337D                 mov     edi, ds:dword_4130F4
.text:00403383                 lea     esi, [esi+0]
.text:00403389                 lea     edi, [edi+0]
.text:00403390
.text:00403390 loc_403390:                             ; CODE XREF: sub_403200+116↑j
.text:00403390                                         ; sub_403200+11C↑j
.text:00403390                 mov     eax, ebx
.text:00403392                 xor     eax, edi
.text:00403394                 mov     edi, ecx
.text:00403396                 xor     edi, esi
.text:00403398                 or      eax, edi
.text:0040339A                 jz      loc_4034D2
.text:004033A0
.text:004033A0 loc_4033A0:                             ; CODE XREF: sub_403200+311↓j
.text:004033A0                 mov     ds:dword_4130F0, ecx
.text:004033A6                 mov     ds:dword_4130F4, ebx
.text:004033AC                 mov     [ebp+30h], ecx
.text:004033AF                 mov     [ebp+34h], ebx
.text:004033B2
.text:004033B2 loc_4033B2:                             ; CODE XREF: sub_403200+3F0↓j
.text:004033B2                 mov     ebx, [esp+7Ch+var_50]
.text:004033B6                 inc     ebx
.text:004033B7                 mov     edx, ebx
.text:004033B9                 cmp     ebx, [esp+7Ch+arg_0]
.text:004033C0                 jge     short loc_4033D7
.text:004033C2                 mov     edi, [esp+7Ch+var_50]
.text:004033C6                 mov     esi, [esp+7Ch+arg_8]
.text:004033CD                 mov     ebp, [esi+edi*4+4]
.text:004033D1                 cmp     byte ptr [ebp+0], 7Bh ; '{'
.text:004033D5                 jz      short loc_4033F2
.text:004033D7
.text:004033D7 loc_4033D7:                             ; CODE XREF: sub_403200+1C0↑j
.text:004033D7                                         ; sub_403200+285↓j
.text:004033D7                 mov     [esp+7Ch+var_50], edx
.text:004033DB                 mov     eax, [esp+7Ch+arg_0]
.text:004033E2                 cmp     edx, eax
.text:004033E4                 jl      loc_403230
.text:004033EA
.text:004033EA loc_4033EA:                             ; CODE XREF: sub_403200+1B↑j
.text:004033EA                 add     esp, 6Ch
.text:004033ED                 pop     ebx
.text:004033EE                 pop     esi
.text:004033EF                 pop     edi
.text:004033F0                 pop     ebp
.text:004033F1                 retn
.text:004033F2 ; ---------------------------------------------------------------------------
.text:004033F2
.text:004033F2 loc_4033F2:                             ; CODE XREF: sub_403200+1D5↑j
.text:004033F2                 mov     edi, [esi+ebx*4]
.text:004033F5                 mov     [esp+7Ch+Str], edi ; Str
.text:004033F8                 call    strlen
.text:004033FD                 lea     esi, [eax+edi]
.text:00403400                 lea     ebp, [esi-1]
.text:00403403                 cmp     byte ptr [esi-1], 7Dh ; '}'
.text:00403407                 jz      short loc_403432
.text:00403409                 mov     [esp+7Ch+Str], offset aSIsRequiredInR ; "%s: `}' is required in repeat count"
.text:00403410                 call    ds:__imp_libintl_gettext
.text:00403416                 mov     dword ptr [esp+7Ch+var_70], edi ; char
.text:0040341A                 mov     [esp+7Ch+ErrorMessage], 0 ; ErrorMessage
.text:00403422                 mov     [esp+7Ch+Str], 1 ; Code
.text:00403429                 mov     [esp+7Ch+var_74], eax ; char *
.text:0040342D                 call    sub_40FD70
.text:00403432
.text:00403432 loc_403432:                             ; CODE XREF: sub_403200+207↑j
.text:00403432                 mov     byte ptr [esi-1], 0
.text:00403436                 lea     edx, [edi+1]
.text:00403439                 lea     ecx, [esi-2]
.text:0040343C                 cmp     edx, ecx
.text:0040343E                 jz      short loc_4034BE
.text:00403440
.text:00403440 loc_403440:                             ; CODE XREF: sub_403200+2C2↓j
.text:00403440                 mov     [esp+7Ch+var_6C], offset Str ; Str
.text:00403448                 lea     esi, [esp+7Ch+var_4C]
.text:0040344C                 mov     dword ptr [esp+7Ch+var_70], esi ; int
.text:00403450                 mov     [esp+7Ch+var_74], 0Ah ; int
.text:00403458                 mov     [esp+7Ch+ErrorMessage], 0 ; int
.text:00403460                 mov     [esp+7Ch+Str], edx ; int
.text:00403463                 call    sub_40CA00
.text:00403468                 test    eax, eax
.text:0040346A                 jnz     short loc_40348A
.text:0040346C
.text:0040346C loc_40346C:                             ; CODE XREF: sub_403200+2BC↓j
.text:0040346C                 mov     edx, [esp+7Ch+var_4C]
.text:00403470                 mov     edi, [esp+7Ch+var_48]
.text:00403474                 mov     esi, [esp+7Ch+var_54]
.text:00403478                 mov     [esi+38h], edx
.text:0040347B                 mov     [esi+3Ch], edi
.text:0040347E
.text:0040347E loc_40347E:                             ; CODE XREF: sub_403200+2D0↓j
.text:0040347E                 mov     byte ptr [ebp+0], 7Dh ; '}'
.text:00403482                 lea     edx, [ebx+1]
.text:00403485                 jmp     loc_4033D7
.text:0040348A ; ---------------------------------------------------------------------------
.text:0040348A
.text:0040348A loc_40348A:                             ; CODE XREF: sub_403200+26A↑j
.text:0040348A                 mov     [esp+7Ch+Str], offset aSIntegerRequir ; "%s}: integer required between `{' and `"...
.text:00403491                 call    ds:__imp_libintl_gettext
.text:00403497                 mov     ecx, ds:dword_413110
.text:0040349D                 mov     edi, [ecx+ebx*4]
.text:004034A0                 mov     [esp+7Ch+var_74], eax ; char *
.text:004034A4                 mov     [esp+7Ch+ErrorMessage], 0 ; ErrorMessage
.text:004034AC                 mov     dword ptr [esp+7Ch+var_70], edi ; char
.text:004034B0                 mov     [esp+7Ch+Str], 1 ; Code
.text:004034B7                 call    sub_40FD70
.text:004034BC                 jmp     short loc_40346C
.text:004034BE ; ---------------------------------------------------------------------------
.text:004034BE
.text:004034BE loc_4034BE:                             ; CODE XREF: sub_403200+23E↑j
.text:004034BE                 cmp     byte ptr [edi+1], 2Ah ; '*'
.text:004034C2                 jnz     loc_403440
.text:004034C8                 mov     edx, [esp+7Ch+var_54]
.text:004034CC                 mov     byte ptr [edx+44h], 1
.text:004034D0                 jmp     short loc_40347E
.text:004034D2 ; ---------------------------------------------------------------------------
.text:004034D2
.text:004034D2 loc_4034D2:                             ; CODE XREF: sub_403200+19A↑j
.text:004034D2                 mov     [esp+7Ch+Str], offset aWarningLineNum ; "warning: line number `%s' is the same a"...
.text:004034D9                 call    ds:__imp_libintl_gettext
.text:004034DF                 mov     esi, [esp+7Ch+var_50]
.text:004034E3                 mov     edx, [esp+7Ch+arg_8]
.text:004034EA                 mov     ecx, [edx+esi*4]
.text:004034ED                 mov     [esp+7Ch+var_74], eax ; char *
.text:004034F1                 mov     [esp+7Ch+ErrorMessage], 0 ; ErrorMessage
.text:004034F9                 mov     dword ptr [esp+7Ch+var_70], ecx ; char
.text:004034FD                 mov     [esp+7Ch+Str], 0 ; Code
.text:00403504                 call    sub_40FD70
.text:00403509                 mov     ecx, [esp+7Ch+var_44]
.text:0040350D                 mov     ebx, [esp+7Ch+var_40]
.text:00403511                 jmp     loc_4033A0
.text:00403516 ; ---------------------------------------------------------------------------
.text:00403516
.text:00403516 loc_403516:                             ; CODE XREF: sub_403200+102↑j
.text:00403516                 mov     [esp+7Ch+Str], offset aSLineNumberMus ; "%s: line number must be greater than ze"...
.text:0040351D                 call    ds:__imp_libintl_gettext
.text:00403523                 mov     ebx, [esp+7Ch+var_50]
.text:00403527                 mov     edx, [esp+7Ch+arg_8]
.text:0040352E                 mov     esi, [edx+ebx*4]
.text:00403531                 mov     [esp+7Ch+var_74], eax ; char *
.text:00403535                 mov     [esp+7Ch+ErrorMessage], 0 ; ErrorMessage
.text:0040353D                 mov     dword ptr [esp+7Ch+var_70], esi ; char
.text:00403541                 mov     [esp+7Ch+Str], 1 ; Code
.text:00403548                 call    sub_40FD70
.text:0040354D                 mov     ecx, [esp+7Ch+var_44]
.text:00403551                 mov     ebx, [esp+7Ch+var_40]
.text:00403555                 jmp     loc_403308
.text:00403555 ; ---------------------------------------------------------------------------
.text:0040355A                 align 10h
.text:00403560
.text:00403560 loc_403560:                             ; CODE XREF: sub_403200+F0↑j
.text:00403560                 mov     [esp+7Ch+Str], offset aSInvalidPatter ; "%s: invalid pattern"
.text:00403567                 call    ds:__imp_libintl_gettext
.text:0040356D                 mov     esi, [esp+7Ch+var_50]
.text:00403571                 mov     edx, [esp+7Ch+arg_8]
.text:00403578                 mov     ecx, [edx+esi*4]
.text:0040357B                 mov     [esp+7Ch+var_74], eax ; char *
.text:0040357F                 mov     [esp+7Ch+ErrorMessage], 0 ; ErrorMessage
.text:00403587                 mov     dword ptr [esp+7Ch+var_70], ecx ; char
.text:0040358B                 mov     [esp+7Ch+Str], 1 ; Code
.text:00403592                 call    sub_40FD70
.text:00403597                 jmp     loc_4032F6
.text:0040359C ; ---------------------------------------------------------------------------
.text:0040359C
.text:0040359C loc_40359C:                             ; CODE XREF: sub_403200+5D↑j
.text:0040359C                 mov     [esp+7Ch+var_74], 48h ; 'H' ; int
.text:004035A4                 mov     esi, ds:dword_413150
.text:004035AA                 mov     [esp+7Ch+ErrorMessage], offset dword_4130E0 ; int
.text:004035B2                 mov     [esp+7Ch+Str], esi ; void *
.text:004035B5                 call    sub_40E6D0
.text:004035BA                 mov     ds:dword_413150, eax
.text:004035BF                 mov     ecx, ds:dword_413160
.text:004035C5                 jmp     loc_403263
.text:004035C5 ; ---------------------------------------------------------------------------
.text:004035CA                 align 10h
.text:004035D0
.text:004035D0 loc_4035D0:                             ; CODE XREF: sub_403200+43↑j
.text:004035D0                                         ; sub_403200+4B↑j
.text:004035D0                 mov     [esp+7Ch+var_74], edx
.text:004035D4                 xor     ebx, ebx
.text:004035D6                 mov     ecx, [esp+7Ch+var_50]
.text:004035DA                 cmp     byte ptr [edx], 25h ; '%'
.text:004035DD                 mov     [esp+7Ch+Str], ecx
.text:004035E0                 setz    bl
.text:004035E3                 mov     [esp+7Ch+ErrorMessage], ebx
.text:004035E7                 call    sub_403D90
.text:004035EC                 mov     [esp+7Ch+var_54], eax
.text:004035F0                 jmp     loc_4033B2
.text:004035F0 sub_403200      endp
.text:004035F0
.text:004035F0 ; ---------------------------------------------------------------------------
.text:004035F5                 align 10h
.text:00403600 aMissingConvers db 'missing %% conversion specification in suffix',0
.text:00403600                                         ; DATA XREF: sub_403750:loc_40378D↓o
.text:0040362E                 align 20h
.text:00403640 aInvalidConvers db 'invalid conversion specifier in suffix: %c',0
.text:00403640                                         ; DATA XREF: sub_403750+167↓o
.text:0040366B                 align 20h
.text:00403680 aInvalidConvers_0 db 'invalid conversion specifier in suffix: \%.3o',0
.text:00403680                                         ; DATA XREF: sub_403750:loc_4038E8↓o
.text:004036AE                 align 20h
.text:004036C0 aMissingConvers_0 db 'missing conversion specifier in suffix',0
.text:004036C0                                         ; DATA XREF: sub_403750:loc_403903↓o
.text:004036E7 aInvalidFormatP db 'invalid format precision',0
.text:004036E7                                         ; DATA XREF: sub_403750:loc_4039A5↓o
.text:00403700 aInvalidFormatW db 'invalid format width',0
.text:00403700                                         ; DATA XREF: sub_403750+2B0↓o
.text:00403715                 align 10h
.text:00403720 aTooManyConvers db 'too many %% conversion specifications in suffix',0
.text:00403720                                         ; DATA XREF: sub_403750:loc_403A4F↓o
.text:00403750
.text:00403750 ; =============== S U B R O U T I N E =======================================
.text:00403750
.text:00403750
.text:00403750 sub_403750      proc near               ; CODE XREF: sub_4018C0+28D↑p
.text:00403750
.text:00403750 C               = dword ptr -2Ch
.text:00403750 Type            = dword ptr -28h
.text:00403750 var_24          = dword ptr -24h
.text:00403750 var_20          = byte ptr -20h
.text:00403750 Str             = dword ptr -1Ch
.text:00403750 var_11          = byte ptr -11h
.text:00403750 var_10          = byte ptr -10h
.text:00403750 var_C           = byte ptr -0Ch
.text:00403750 arg_0           = dword ptr  4
.text:00403750
.text:00403750                 push    esi
.text:00403751                 xor     esi, esi
.text:00403753                 push    ebx
.text:00403754                 sub     esp, 24h
.text:00403757                 mov     edx, [esp+2Ch+arg_0]
.text:0040375B                 mov     [esp+2Ch+var_11], 0
.text:00403760                 cmp     byte ptr [edx], 0
.text:00403763                 jz      short loc_40378D
.text:00403765                 lea     esi, [esi+0]
.text:00403769                 lea     edi, [edi+0]
.text:00403770
.text:00403770 loc_403770:                             ; CODE XREF: sub_403750+34↓j
.text:00403770                 mov     ecx, edx
.text:00403772                 inc     edx
.text:00403773                 mov     [esp+2Ch+arg_0], edx
.text:00403777                 cmp     byte ptr [ecx], 25h ; '%'
.text:0040377A                 jz      short loc_4037C0
.text:0040377C
.text:0040377C loc_40377C:                             ; CODE XREF: sub_403750+32E↓j
.text:0040377C                 inc     esi
.text:0040377D
.text:0040377D loc_40377D:                             ; CODE XREF: sub_403750+120↓j
.text:0040377D                                         ; sub_403750+132↓j ...
.text:0040377D                 mov     edx, [esp+2Ch+arg_0]
.text:00403781                 cmp     byte ptr [edx], 0
.text:00403784                 jnz     short loc_403770
.text:00403786                 cmp     [esp+2Ch+var_11], 0
.text:0040378B                 jnz     short loc_4037B2
.text:0040378D
.text:0040378D loc_40378D:                             ; CODE XREF: sub_403750+13↑j
.text:0040378D                 mov     [esp+2Ch+C], offset aMissingConvers ; "missing %% conversion specification in "...
.text:00403794                 call    ds:__imp_libintl_gettext
.text:0040379A                 mov     [esp+2Ch+Type], 0 ; ErrorMessage
.text:004037A2                 mov     [esp+2Ch+C], 1  ; Code
.text:004037A9                 mov     [esp+2Ch+var_24], eax ; char *
.text:004037AD                 call    sub_40FD70
.text:004037B2
.text:004037B2 loc_4037B2:                             ; CODE XREF: sub_403750+3B↑j
.text:004037B2                 add     esp, 24h
.text:004037B5                 mov     eax, esi
.text:004037B7                 pop     ebx
.text:004037B8                 pop     esi
.text:004037B9                 retn
.text:004037B9 ; ---------------------------------------------------------------------------
.text:004037BA                 align 10h
.text:004037C0
.text:004037C0 loc_4037C0:                             ; CODE XREF: sub_403750+2A↑j
.text:004037C0                 cmp     byte ptr [edx], 25h ; '%'
.text:004037C3                 jz      loc_403A79
.text:004037C9                 cmp     [esp+2Ch+var_11], 0
.text:004037CE                 jnz     loc_403A4F
.text:004037D4
.text:004037D4 loc_4037D4:                             ; CODE XREF: sub_403750+324↓j
.text:004037D4                 mov     [esp+2Ch+var_11], 1
.text:004037D9                 mov     edx, [esp+2Ch+arg_0]
.text:004037DD                 xor     ecx, ecx
.text:004037DF                 lea     ebx, [esp+2Ch+arg_0]
.text:004037E3                 cmp     byte ptr [edx], 0
.text:004037E6                 jz      short loc_40381C
.text:004037E8                 nop
.text:004037E9                 lea     esi, [esi+0]
.text:004037F0
.text:004037F0 loc_4037F0:                             ; CODE XREF: sub_403750+CA↓j
.text:004037F0                 movsx   eax, byte ptr [edx]
.text:004037F3                 cmp     eax, 23h ; '#'
.text:004037F6                 jz      loc_403A47
.text:004037FC                 cmp     eax, 23h ; '#'
.text:004037FF                 jg      loc_403A30
.text:00403805                 cmp     eax, 20h ; ' '
.text:00403808                 jnz     short loc_40381C
.text:0040380A
.text:0040380A loc_40380A:                             ; CODE XREF: sub_403750+2E3↓j
.text:0040380A                 or      ecx, 1
.text:0040380D
.text:0040380D loc_40380D:                             ; CODE XREF: sub_403750+2EC↓j
.text:0040380D                                         ; sub_403750+2FA↓j
.text:0040380D                 lea     eax, [edx+1]
.text:00403810                 mov     [ebx], eax
.text:00403812                 cmp     byte ptr [edx+1], 0
.text:00403816                 jz      short loc_40381C
.text:00403818                 mov     edx, eax
.text:0040381A                 jmp     short loc_4037F0
.text:0040381C ; ---------------------------------------------------------------------------
.text:0040381C
.text:0040381C loc_40381C:                             ; CODE XREF: sub_403750+96↑j
.text:0040381C                                         ; sub_403750+B8↑j ...
.text:0040381C                 mov     dword ptr [esp+2Ch+var_C], 0
.text:00403824                 mov     edx, [esp+2Ch+arg_0]
.text:00403828                 add     esi, ecx
.text:0040382A                 movsx   ecx, byte ptr [edx]
.text:0040382D                 sub     ecx, 30h ; '0'
.text:00403830                 cmp     ecx, 9
.text:00403833                 jbe     loc_4039D0
.text:00403839
.text:00403839 loc_403839:                             ; CODE XREF: sub_403750+2AA↓j
.text:00403839                                         ; sub_403750+2D5↓j
.text:00403839                 mov     ebx, dword ptr [esp+2Ch+var_C]
.text:0040383D                 cmp     ebx, 0Bh
.text:00403840                 jnb     short loc_403847
.text:00403842                 mov     ebx, 0Bh
.text:00403847
.text:00403847 loc_403847:                             ; CODE XREF: sub_403750+F0↑j
.text:00403847                 mov     eax, [esp+2Ch+arg_0]
.text:0040384B                 cmp     byte ptr [eax], 2Eh ; '.'
.text:0040384E                 jz      loc_403953
.text:00403854                 xor     ecx, ecx
.text:00403856                 mov     edx, eax
.text:00403858
.text:00403858 loc_403858:                             ; CODE XREF: sub_403750+216↓j
.text:00403858                                         ; sub_403750+250↓j
.text:00403858                 cmp     ecx, ebx
.text:0040385A                 mov     eax, ecx
.text:0040385C                 jnb     short loc_403860
.text:0040385E                 mov     eax, ebx
.text:00403860
.text:00403860 loc_403860:                             ; CODE XREF: sub_403750+10C↑j
.text:00403860                 movzx   ebx, byte ptr [edx]
.text:00403863                 add     esi, eax
.text:00403865                 inc     edx
.text:00403866                 mov     [esp+2Ch+arg_0], edx
.text:0040386A                 movzx   eax, bl
.text:0040386D                 cmp     eax, 69h ; 'i'
.text:00403870                 jz      loc_40377D
.text:00403876                 cmp     eax, 69h ; 'i'
.text:00403879                 jg      loc_40393B
.text:0040387F                 cmp     eax, 58h ; 'X'
.text:00403882                 jz      loc_40377D
.text:00403888                 cmp     eax, 58h ; 'X'
.text:0040388B                 jg      loc_40392D
.text:00403891                 test    eax, eax
.text:00403893                 jz      short loc_403903
.text:00403895
.text:00403895 loc_403895:                             ; CODE XREF: sub_403750:loc_403930↓j
.text:00403895                 mov     ecx, ds:__mb_cur_max
.text:0040389B                 movzx   edx, bl
.text:0040389E                 cmp     dword ptr [ecx], 1
.text:004038A1                 jz      short loc_4038F1
.text:004038A3                 mov     [esp+2Ch+Type], 157h ; Type
.text:004038AB                 mov     [esp+2Ch+C], edx ; C
.text:004038AE                 call    _isctype
.text:004038B3
.text:004038B3 loc_4038B3:                             ; CODE XREF: sub_403750+1B1↓j
.text:004038B3                 test    eax, eax
.text:004038B5                 jz      short loc_4038E8
.text:004038B7                 mov     [esp+2Ch+C], offset aInvalidConvers ; "invalid conversion specifier in suffix:"...
.text:004038BE
.text:004038BE loc_4038BE:                             ; CODE XREF: sub_403750+19F↓j
.text:004038BE                 call    ds:__imp_libintl_gettext
.text:004038C4                 mov     [esp+2Ch+Type], 0 ; ErrorMessage
.text:004038CC                 movzx   ecx, bl
.text:004038CF                 mov     dword ptr [esp+2Ch+var_20], ecx ; char
.text:004038D3                 mov     [esp+2Ch+C], 1  ; Code
.text:004038DA                 mov     [esp+2Ch+var_24], eax ; char *
.text:004038DE                 call    sub_40FD70
.text:004038E3                 jmp     loc_40377D
.text:004038E8 ; ---------------------------------------------------------------------------
.text:004038E8
.text:004038E8 loc_4038E8:                             ; CODE XREF: sub_403750+165↑j
.text:004038E8                 mov     [esp+2Ch+C], offset aInvalidConvers_0 ; "invalid conversion specifier in suffix:"...
.text:004038EF                 jmp     short loc_4038BE
.text:004038F1 ; ---------------------------------------------------------------------------
.text:004038F1
.text:004038F1 loc_4038F1:                             ; CODE XREF: sub_403750+151↑j
.text:004038F1                 mov     eax, ds:_pctype
.text:004038F6                 mov     ecx, [eax]
.text:004038F8                 movzx   eax, word ptr [ecx+edx*2]
.text:004038FC                 and     eax, 157h
.text:00403901                 jmp     short loc_4038B3
.text:00403903 ; ---------------------------------------------------------------------------
.text:00403903
.text:00403903 loc_403903:                             ; CODE XREF: sub_403750+143↑j
.text:00403903                 mov     [esp+2Ch+C], offset aMissingConvers_0 ; "missing conversion specifier in suffix"
.text:0040390A                 call    ds:__imp_libintl_gettext
.text:00403910                 mov     [esp+2Ch+Type], 0 ; ErrorMessage
.text:00403918                 mov     [esp+2Ch+C], 1  ; Code
.text:0040391F                 mov     [esp+2Ch+var_24], eax ; char *
.text:00403923                 call    sub_40FD70
.text:00403928                 jmp     loc_40377D
.text:0040392D ; ---------------------------------------------------------------------------
.text:0040392D
.text:0040392D loc_40392D:                             ; CODE XREF: sub_403750+13B↑j
.text:0040392D                 cmp     eax, 64h ; 'd'
.text:00403930
.text:00403930 loc_403930:                             ; CODE XREF: sub_403750+1FC↓j
.text:00403930                                         ; sub_403750+201↓j
.text:00403930                 jnz     loc_403895
.text:00403936                 jmp     loc_40377D
.text:0040393B ; ---------------------------------------------------------------------------
.text:0040393B
.text:0040393B loc_40393B:                             ; CODE XREF: sub_403750+129↑j
.text:0040393B                 cmp     eax, 75h ; 'u'
.text:0040393E                 jz      loc_40377D
.text:00403944                 cmp     eax, 75h ; 'u'
.text:00403947                 jg      short loc_40394E
.text:00403949                 cmp     eax, 6Fh ; 'o'
.text:0040394C                 jmp     short loc_403930
.text:0040394E ; ---------------------------------------------------------------------------
.text:0040394E
.text:0040394E loc_40394E:                             ; CODE XREF: sub_403750+1F7↑j
.text:0040394E                 cmp     eax, 78h ; 'x'
.text:00403951                 jmp     short loc_403930
.text:00403953 ; ---------------------------------------------------------------------------
.text:00403953
.text:00403953 loc_403953:                             ; CODE XREF: sub_403750+FE↑j
.text:00403953                 lea     edx, [eax+1]
.text:00403956                 xor     ecx, ecx
.text:00403958                 mov     [esp+2Ch+arg_0], edx
.text:0040395C                 movsx   eax, byte ptr [eax+1]
.text:00403960                 sub     eax, 30h ; '0'
.text:00403963                 cmp     eax, 9
.text:00403966                 ja      loc_403858
.text:0040396C                 mov     [esp+2Ch+Str], 0 ; Str
.text:00403974                 lea     ecx, [esp+2Ch+var_10]
.text:00403978                 mov     dword ptr [esp+2Ch+var_20], ecx ; char
.text:0040397C                 lea     ecx, [esp+2Ch+arg_0]
.text:00403980                 mov     [esp+2Ch+var_24], 0Ah ; int
.text:00403988                 mov     [esp+2Ch+Type], ecx ; int
.text:0040398C                 mov     [esp+2Ch+C], edx ; int
.text:0040398F                 call    sub_40C420
.text:00403994                 test    eax, eax
.text:00403996                 jnz     short loc_4039A5
.text:00403998
.text:00403998 loc_403998:                             ; CODE XREF: sub_403750+27A↓j
.text:00403998                 mov     ecx, dword ptr [esp+2Ch+var_10]
.text:0040399C                 mov     edx, [esp+2Ch+arg_0]
.text:004039A0                 jmp     loc_403858
.text:004039A5 ; ---------------------------------------------------------------------------
.text:004039A5
.text:004039A5 loc_4039A5:                             ; CODE XREF: sub_403750+246↑j
.text:004039A5                 mov     [esp+2Ch+C], offset aInvalidFormatP ; "invalid format precision"
.text:004039AC                 call    ds:__imp_libintl_gettext
.text:004039B2                 mov     [esp+2Ch+Type], 0 ; ErrorMessage
.text:004039BA                 mov     [esp+2Ch+C], 1  ; Code
.text:004039C1                 mov     [esp+2Ch+var_24], eax ; char *
.text:004039C5                 call    sub_40FD70
.text:004039CA                 jmp     short loc_403998
.text:004039CA ; ---------------------------------------------------------------------------
.text:004039CC                 align 10h
.text:004039D0
.text:004039D0 loc_4039D0:                             ; CODE XREF: sub_403750+E3↑j
.text:004039D0                 mov     [esp+2Ch+Str], 0 ; Str
.text:004039D8                 lea     ecx, [esp+2Ch+var_C]
.text:004039DC                 lea     ebx, [esp+2Ch+arg_0]
.text:004039E0                 mov     dword ptr [esp+2Ch+var_20], ecx ; char
.text:004039E4                 mov     [esp+2Ch+var_24], 0Ah ; int
.text:004039EC                 mov     [esp+2Ch+Type], ebx ; int
.text:004039F0                 mov     [esp+2Ch+C], edx ; int
.text:004039F3                 call    sub_40C420
.text:004039F8                 test    eax, eax
.text:004039FA                 jz      loc_403839
.text:00403A00                 mov     [esp+2Ch+C], offset aInvalidFormatW ; "invalid format width"
.text:00403A07                 call    ds:__imp_libintl_gettext
.text:00403A0D                 mov     [esp+2Ch+Type], 0 ; ErrorMessage
.text:00403A15                 mov     [esp+2Ch+C], 1  ; Code
.text:00403A1C                 mov     [esp+2Ch+var_24], eax ; char *
.text:00403A20                 call    sub_40FD70
.text:00403A25                 jmp     loc_403839
.text:00403A25 ; ---------------------------------------------------------------------------
.text:00403A2A                 align 10h
.text:00403A30
.text:00403A30 loc_403A30:                             ; CODE XREF: sub_403750+AF↑j
.text:00403A30                 cmp     eax, 2Bh ; '+'
.text:00403A33                 jz      loc_40380A
.text:00403A39                 cmp     eax, 2Dh ; '-'
.text:00403A3C                 jz      loc_40380D
.text:00403A42                 jmp     loc_40381C
.text:00403A47 ; ---------------------------------------------------------------------------
.text:00403A47
.text:00403A47 loc_403A47:                             ; CODE XREF: sub_403750+A6↑j
.text:00403A47                 or      ecx, 2
.text:00403A4A                 jmp     loc_40380D
.text:00403A4F ; ---------------------------------------------------------------------------
.text:00403A4F
.text:00403A4F loc_403A4F:                             ; CODE XREF: sub_403750+7E↑j
.text:00403A4F                 mov     [esp+2Ch+C], offset aTooManyConvers ; "too many %% conversion specifications i"...
.text:00403A56                 call    ds:__imp_libintl_gettext
.text:00403A5C                 mov     [esp+2Ch+Type], 0 ; ErrorMessage
.text:00403A64                 mov     [esp+2Ch+C], 1  ; Code
.text:00403A6B                 mov     [esp+2Ch+var_24], eax ; char *
.text:00403A6F                 call    sub_40FD70
.text:00403A74                 jmp     loc_4037D4
.text:00403A79 ; ---------------------------------------------------------------------------
.text:00403A79
.text:00403A79 loc_403A79:                             ; CODE XREF: sub_403750+73↑j
.text:00403A79                 inc     edx
.text:00403A7A                 mov     [esp+2Ch+arg_0], edx
.text:00403A7E                 jmp     loc_40377C
.text:00403A7E sub_403750      endp
.text:00403A7E
.text:00403A7E ; ---------------------------------------------------------------------------
.text:00403A83                 align 10h
.text:00403A90
.text:00403A90 ; =============== S U B R O U T I N E =======================================
.text:00403A90
.text:00403A90
.text:00403A90 sub_403A90      proc near               ; CODE XREF: sub_402820+EF↑p
.text:00403A90
.text:00403A90 Buf             = dword ptr -2Ch
.text:00403A90 Val             = dword ptr -28h
.text:00403A90 MaxCount        = dword ptr -24h
.text:00403A90 var_18          = dword ptr -18h
.text:00403A90 var_14          = dword ptr -14h
.text:00403A90 arg_0           = dword ptr  4
.text:00403A90
.text:00403A90                 push    ebp
.text:00403A91                 xor     eax, eax
.text:00403A93                 push    edi
.text:00403A94                 push    esi
.text:00403A95                 push    ebx
.text:00403A96                 sub     esp, 1Ch
.text:00403A99                 mov     ecx, [esp+2Ch+arg_0]
.text:00403A9D                 mov     edx, [ecx+4]
.text:00403AA0                 test    edx, edx
.text:00403AA2                 jz      loc_403C2C
.text:00403AA8                 mov     [esp+2Ch+var_18], 0
.text:00403AB0                 mov     eax, [esp+2Ch+arg_0]
.text:00403AB4                 mov     [esp+2Ch+var_14], edx
.text:00403AB8                 mov     edi, [eax+1Ch]
.text:00403ABB                 nop
.text:00403ABC                 lea     esi, [esi+0]
.text:00403AC0
.text:00403AC0 loc_403AC0:                             ; CODE XREF: sub_403A90+89↓j
.text:00403AC0                 mov     [esp+2Ch+Val], 0Ah ; Val
.text:00403AC8                 mov     edx, [esp+2Ch+var_14]
.text:00403ACC                 mov     [esp+2Ch+Buf], edi ; Buf
.text:00403ACF                 mov     [esp+2Ch+MaxCount], edx ; MaxCount
.text:00403AD3                 call    memchr
.text:00403AD8                 test    eax, eax
.text:00403ADA                 mov     esi, eax
.text:00403ADC                 jz      loc_403B99
.text:00403AE2                 mov     ebx, [esp+2Ch+arg_0]
.text:00403AE6                 sub     eax, edi
.text:00403AE8                 lea     ebp, [eax+1]
.text:00403AEB                 mov     ecx, [ebx+20h]
.text:00403AEE                 test    ecx, ecx
.text:00403AF0                 jz      short loc_403B62
.text:00403AF2
.text:00403AF2 loc_403AF2:                             ; CODE XREF: sub_403A90+104↓j
.text:00403AF2                 mov     ecx, [esp+2Ch+arg_0]
.text:00403AF6                 mov     ebx, [ecx+24h]
.text:00403AF9                 cmp     dword ptr [ebx], 50h ; 'P'
.text:00403AFC                 jz      short loc_403B20
.text:00403AFE
.text:00403AFE loc_403AFE:                             ; CODE XREF: sub_403A90+D0↓j
.text:00403AFE                 sub     [esp+2Ch+var_14], ebp
.text:00403B02                 mov     edx, [ebx+4]
.text:00403B05                 inc     [esp+2Ch+var_18]
.text:00403B09                 mov     [ebx+edx*8+0Ch], ebp
.text:00403B0D                 inc     dword ptr [ebx]
.text:00403B0F                 inc     dword ptr [ebx+4]
.text:00403B12                 mov     [ebx+edx*8+10h], edi
.text:00403B16                 lea     edi, [esi+1]
.text:00403B19                 jmp     short loc_403AC0
.text:00403B19 ; ---------------------------------------------------------------------------
.text:00403B1B                 align 10h
.text:00403B20
.text:00403B20 loc_403B20:                             ; CODE XREF: sub_403A90+6C↑j
.text:00403B20                 mov     [esp+2Ch+Buf], 290h ; size_t
.text:00403B27                 call    sub_40E610
.text:00403B2C                 mov     dword ptr [eax], 0
.text:00403B32                 xor     ecx, ecx
.text:00403B34                 mov     [eax+28Ch], ecx
.text:00403B3A                 mov     [ebx+28Ch], eax
.text:00403B40                 mov     ebx, [esp+2Ch+arg_0]
.text:00403B44                 mov     dword ptr [eax+4], 0
.text:00403B4B                 mov     dword ptr [eax+8], 0
.text:00403B52                 mov     edx, [ebx+24h]
.text:00403B55                 mov     ecx, [edx+28Ch]
.text:00403B5B                 mov     [ebx+24h], ecx
.text:00403B5E                 mov     ebx, ecx
.text:00403B60                 jmp     short loc_403AFE
.text:00403B62 ; ---------------------------------------------------------------------------
.text:00403B62
.text:00403B62 loc_403B62:                             ; CODE XREF: sub_403A90+60↑j
.text:00403B62                 mov     [esp+2Ch+Buf], 290h ; size_t
.text:00403B69                 call    sub_40E610
.text:00403B6E                 mov     dword ptr [eax], 0
.text:00403B74                 mov     ecx, [esp+2Ch+arg_0]
.text:00403B78                 xor     edx, edx
.text:00403B7A                 mov     [eax+28Ch], edx
.text:00403B80                 mov     dword ptr [eax+4], 0
.text:00403B87                 mov     dword ptr [eax+8], 0
.text:00403B8E                 mov     [ecx+24h], eax
.text:00403B91                 mov     [ecx+20h], eax
.text:00403B94                 jmp     loc_403AF2
.text:00403B99 ; ---------------------------------------------------------------------------
.text:00403B99
.text:00403B99 loc_403B99:                             ; CODE XREF: sub_403A90+4C↑j
.text:00403B99                 mov     esi, [esp+2Ch+var_14]
.text:00403B9D                 test    esi, esi
.text:00403B9F                 jz      short loc_403BE1
.text:00403BA1                 cmp     ds:byte_413060, 0
.text:00403BA8                 jz      loc_403CAC
.text:00403BAE                 mov     esi, [esp+2Ch+arg_0]
.text:00403BB2                 mov     ebp, [esi+20h]
.text:00403BB5                 test    ebp, ebp
.text:00403BB7                 jz      loc_403C79
.text:00403BBD
.text:00403BBD loc_403BBD:                             ; CODE XREF: sub_403A90+217↓j
.text:00403BBD                 mov     ecx, [esp+2Ch+arg_0]
.text:00403BC1                 mov     ebx, [ecx+24h]
.text:00403BC4                 cmp     dword ptr [ebx], 50h ; 'P'
.text:00403BC7                 jz      short loc_403C34
.text:00403BC9
.text:00403BC9 loc_403BC9:                             ; CODE XREF: sub_403A90+1E4↓j
.text:00403BC9                 inc     [esp+2Ch+var_18]
.text:00403BCD                 mov     ebp, [ebx+4]
.text:00403BD0                 mov     [ebx+ebp*8+10h], edi
.text:00403BD4                 mov     edi, [esp+2Ch+var_14]
.text:00403BD8                 mov     [ebx+ebp*8+0Ch], edi
.text:00403BDC                 inc     dword ptr [ebx]
.text:00403BDE                 inc     dword ptr [ebx+4]
.text:00403BE1
.text:00403BE1 loc_403BE1:                             ; CODE XREF: sub_403A90+10F↑j
.text:00403BE1                                         ; sub_403A90+22C↓j
.text:00403BE1                 mov     ebp, [esp+2Ch+var_18]
.text:00403BE5                 mov     eax, [esp+2Ch+arg_0]
.text:00403BE9                 mov     edi, ds:dword_413040
.text:00403BEF                 mov     ecx, [esp+2Ch+arg_0]
.text:00403BF3                 mov     edx, [esp+2Ch+var_18]
.text:00403BF7                 mov     esi, edi
.text:00403BF9                 mov     [eax+18h], ebp
.text:00403BFC                 add     esi, 1
.text:00403BFF                 mov     ebp, ds:dword_413044
.text:00403C05                 mov     [ecx+8], esi
.text:00403C08                 mov     eax, [esp+2Ch+var_18]
.text:00403C0C                 mov     [ecx+10h], esi
.text:00403C0F                 mov     ebx, ebp
.text:00403C11                 adc     ebx, 0
.text:00403C14                 xor     esi, esi
.text:00403C16                 add     edi, edx
.text:00403C18                 adc     ebp, esi
.text:00403C1A                 mov     [ecx+0Ch], ebx
.text:00403C1D                 mov     [ecx+14h], ebx
.text:00403C20                 mov     ds:dword_413040, edi
.text:00403C26                 mov     ds:dword_413044, ebp
.text:00403C2C
.text:00403C2C loc_403C2C:                             ; CODE XREF: sub_403A90+12↑j
.text:00403C2C                 add     esp, 1Ch
.text:00403C2F                 pop     ebx
.text:00403C30                 pop     esi
.text:00403C31                 pop     edi
.text:00403C32                 pop     ebp
.text:00403C33                 retn
.text:00403C34 ; ---------------------------------------------------------------------------
.text:00403C34
.text:00403C34 loc_403C34:                             ; CODE XREF: sub_403A90+137↑j
.text:00403C34                 mov     [esp+2Ch+Buf], 290h ; size_t
.text:00403C3B                 call    sub_40E610
.text:00403C40                 mov     dword ptr [eax], 0
.text:00403C46                 mov     ebp, [esp+2Ch+arg_0]
.text:00403C4A                 xor     ecx, ecx
.text:00403C4C                 mov     [eax+28Ch], ecx
.text:00403C52                 mov     [ebx+28Ch], eax
.text:00403C58                 mov     edx, [ebp+24h]
.text:00403C5B                 mov     dword ptr [eax+4], 0
.text:00403C62                 mov     dword ptr [eax+8], 0
.text:00403C69                 mov     esi, [edx+28Ch]
.text:00403C6F                 mov     ebx, esi
.text:00403C71                 mov     [ebp+24h], esi
.text:00403C74                 jmp     loc_403BC9
.text:00403C79 ; ---------------------------------------------------------------------------
.text:00403C79
.text:00403C79 loc_403C79:                             ; CODE XREF: sub_403A90+127↑j
.text:00403C79                 mov     [esp+2Ch+Buf], 290h ; size_t
.text:00403C80                 xor     ebx, ebx
.text:00403C82                 call    sub_40E610
.text:00403C87                 mov     [eax+28Ch], ebx
.text:00403C8D                 mov     dword ptr [eax], 0
.text:00403C93                 mov     dword ptr [eax+4], 0
.text:00403C9A                 mov     dword ptr [eax+8], 0
.text:00403CA1                 mov     [esi+24h], eax
.text:00403CA4                 mov     [esi+20h], eax
.text:00403CA7                 jmp     loc_403BBD
.text:00403CAC ; ---------------------------------------------------------------------------
.text:00403CAC
.text:00403CAC loc_403CAC:                             ; CODE XREF: sub_403A90+118↑j
.text:00403CAC                 mov     ds:Src, edi
.text:00403CB2                 mov     ebx, [esp+2Ch+var_14]
.text:00403CB6                 mov     ds:Size, ebx
.text:00403CBC                 jmp     loc_403BE1
.text:00403CBC sub_403A90      endp
.text:00403CBC
.text:00403CBC ; ---------------------------------------------------------------------------
.text:00403CC1                 align 20h
.text:00403CE0 aSIntegerExpect db '%s: integer expected after delimiter',0
.text:00403CE0                                         ; DATA XREF: sub_403D90+14E↓o
.text:00403D05                 align 20h
.text:00403D20 aSClosingDelimi db '%s: closing delimiter `%c',27h,' missing',0
.text:00403D20                                         ; DATA XREF: sub_403D90:loc_403F3E↓o
.text:00403D43                 align 20h
.text:00403D60 aSInvalidRegula db '%s: invalid regular expression: %s',0
.text:00403D60                                         ; DATA XREF: sub_403D90:loc_403F74↓o
.text:00403D83                 align 10h
.text:00403D90
.text:00403D90 ; =============== S U B R O U T I N E =======================================
.text:00403D90
.text:00403D90
.text:00403D90 sub_403D90      proc near               ; CODE XREF: sub_403200+3E7↑p
.text:00403D90
.text:00403D90 Str             = dword ptr -2Ch
.text:00403D90 Source          = dword ptr -28h
.text:00403D90 Count           = dword ptr -24h
.text:00403D90 var_20          = byte ptr -20h
.text:00403D90 var_1C          = dword ptr -1Ch
.text:00403D90 var_18          = dword ptr -18h
.text:00403D90 var_14          = dword ptr -14h
.text:00403D90 arg_0           = dword ptr  4
.text:00403D90 arg_4           = dword ptr  8
.text:00403D90 arg_8           = byte ptr  0Ch
.text:00403D90
.text:00403D90                 push    ebp
.text:00403D91                 push    edi
.text:00403D92                 push    esi
.text:00403D93                 push    ebx
.text:00403D94                 sub     esp, 1Ch
.text:00403D97                 mov     edx, [esp+2Ch+arg_4]
.text:00403D9B                 mov     eax, dword ptr [esp+2Ch+arg_8]
.text:00403D9F                 mov     [esp+2Ch+var_14], edx
.text:00403DA3                 movsx   ebx, byte ptr [eax]
.text:00403DA6                 inc     eax
.text:00403DA7                 mov     [esp+2Ch+var_18], eax
.text:00403DAB                 mov     [esp+2Ch+Str], eax ; Str
.text:00403DAE                 mov     [esp+2Ch+Source], ebx ; Ch
.text:00403DB2                 call    strrchr
.text:00403DB7                 test    eax, eax
.text:00403DB9                 mov     edi, eax
.text:00403DBB                 jz      loc_403F3E
.text:00403DC1
.text:00403DC1 loc_403DC1:                             ; CODE XREF: sub_403D90+1DF↓j
.text:00403DC1                 mov     eax, dword ptr [esp+2Ch+arg_8]
.text:00403DC5                 mov     ebp, edi
.text:00403DC7                 mov     ecx, ds:dword_413160
.text:00403DCD                 sub     ebp, eax
.text:00403DCF                 lea     esi, [ebp-1]
.text:00403DD2                 cmp     ecx, ds:dword_4130E0
.text:00403DD8                 jz      loc_403F10
.text:00403DDE
.text:00403DDE loc_403DDE:                             ; CODE XREF: sub_403D90+1A9↓j
.text:00403DDE                 mov     eax, ds:dword_413150
.text:00403DE3                 lea     edx, [ecx+ecx*8]
.text:00403DE6                 lea     ebx, [eax+edx*8]
.text:00403DE9                 mov     dword ptr [ebx], 0
.text:00403DEF                 lea     edx, [ecx+1]
.text:00403DF2                 mov     ecx, [esp+2Ch+arg_0]
.text:00403DF6                 mov     ds:dword_413160, edx
.text:00403DFC                 movzx   edx, byte ptr [esp+2Ch+var_14]
.text:00403E01                 mov     [ebx+40h], ecx
.text:00403E04                 mov     dword ptr [ebx+38h], 0
.text:00403E0B                 mov     dword ptr [ebx+3Ch], 0
.text:00403E12                 mov     [ebx+45h], dl
.text:00403E15                 mov     byte ptr [ebx+44h], 0
.text:00403E19                 mov     dword ptr [ebx+30h], 0
.text:00403E20                 mov     dword ptr [ebx+34h], 0
.text:00403E27                 mov     dword ptr [ebx+28h], 0
.text:00403E2E                 mov     dword ptr [ebx+2Ch], 0
.text:00403E35                 mov     [esp+2Ch+Str], ebp ; size_t
.text:00403E38                 lea     ebp, [ebx+4]
.text:00403E3B                 call    sub_40E610
.text:00403E40                 mov     [ebx], eax
.text:00403E42                 mov     eax, [esp+2Ch+var_18]
.text:00403E46                 mov     [esp+2Ch+Count], esi ; Count
.text:00403E4A                 mov     [esp+2Ch+Source], eax ; Source
.text:00403E4E                 mov     ecx, [ebx]
.text:00403E50                 mov     [esp+2Ch+Str], ecx ; Destination
.text:00403E53                 call    strncpy
.text:00403E58                 lea     edx, [esi+esi]
.text:00403E5B                 mov     [ebx+8], edx
.text:00403E5E                 mov     [esp+2Ch+Str], edx ; size_t
.text:00403E61                 call    sub_40E610
.text:00403E66                 mov     [ebx+4], eax
.text:00403E69                 mov     [esp+2Ch+Str], 100h ; size_t
.text:00403E70                 call    sub_40E610
.text:00403E75                 mov     [ebx+14h], eax
.text:00403E78                 mov     dword ptr [ebx+18h], 0
.text:00403E7F                 mov     [esp+2Ch+Count], ebp
.text:00403E83                 mov     [esp+2Ch+Source], esi
.text:00403E87                 mov     esi, [ebx]
.text:00403E89                 mov     [esp+2Ch+Str], esi
.text:00403E8C                 call    sub_407060
.text:00403E91                 test    eax, eax
.text:00403E93                 mov     esi, eax
.text:00403E95                 jnz     loc_403F74
.text:00403E9B                 cmp     byte ptr [edi+1], 0
.text:00403E9F                 jnz     short loc_403EB0
.text:00403EA1
.text:00403EA1 loc_403EA1:                             ; CODE XREF: sub_403D90+14C↓j
.text:00403EA1                                         ; sub_403D90+17B↓j
.text:00403EA1                 add     esp, 1Ch
.text:00403EA4                 mov     eax, ebx
.text:00403EA6                 pop     ebx
.text:00403EA7                 pop     esi
.text:00403EA8                 pop     edi
.text:00403EA9                 pop     ebp
.text:00403EAA                 retn
.text:00403EAA ; ---------------------------------------------------------------------------
.text:00403EAB                 align 10h
.text:00403EB0
.text:00403EB0 loc_403EB0:                             ; CODE XREF: sub_403D90+10F↑j
.text:00403EB0                 mov     [esp+2Ch+var_1C], offset Str ; char *
.text:00403EB8                 lea     esi, [edi+1]
.text:00403EBB                 lea     ebp, [ebx+28h]
.text:00403EBE                 mov     dword ptr [esp+2Ch+var_20], ebp ; int
.text:00403EC2                 mov     [esp+2Ch+Count], 0Ah ; int
.text:00403ECA                 mov     [esp+2Ch+Source], 0 ; int
.text:00403ED2                 mov     [esp+2Ch+Str], esi ; int
.text:00403ED5                 call    sub_40D700
.text:00403EDA                 test    eax, eax
.text:00403EDC                 jz      short loc_403EA1
.text:00403EDE                 mov     [esp+2Ch+Str], offset aSIntegerExpect ; "%s: integer expected after delimiter"
.text:00403EE5                 call    ds:__imp_libintl_gettext
.text:00403EEB                 mov     [esp+2Ch+Source], 0 ; ErrorMessage
.text:00403EF3                 mov     ecx, dword ptr [esp+2Ch+arg_8]
.text:00403EF7                 mov     [esp+2Ch+Str], 1 ; Code
.text:00403EFE                 mov     dword ptr [esp+2Ch+var_20], ecx ; char
.text:00403F02                 mov     [esp+2Ch+Count], eax ; char *
.text:00403F06                 call    sub_40FD70
.text:00403F0B                 jmp     short loc_403EA1
.text:00403F0B ; ---------------------------------------------------------------------------
.text:00403F0D                 align 10h
.text:00403F10
.text:00403F10 loc_403F10:                             ; CODE XREF: sub_403D90+48↑j
.text:00403F10                 mov     [esp+2Ch+Count], 48h ; 'H' ; int
.text:00403F18                 mov     ebx, ds:dword_413150
.text:00403F1E                 mov     [esp+2Ch+Source], offset dword_4130E0 ; int
.text:00403F26                 mov     [esp+2Ch+Str], ebx ; void *
.text:00403F29                 call    sub_40E6D0
.text:00403F2E                 mov     ds:dword_413150, eax
.text:00403F33                 mov     ecx, ds:dword_413160
.text:00403F39                 jmp     loc_403DDE
.text:00403F3E ; ---------------------------------------------------------------------------
.text:00403F3E
.text:00403F3E loc_403F3E:                             ; CODE XREF: sub_403D90+2B↑j
.text:00403F3E                 mov     [esp+2Ch+Str], offset aSClosingDelimi ; "%s: closing delimiter `%c' missing"
.text:00403F45                 call    ds:__imp_libintl_gettext
.text:00403F4B                 mov     [esp+2Ch+var_1C], ebx
.text:00403F4F                 mov     ecx, dword ptr [esp+2Ch+arg_8]
.text:00403F53                 mov     [esp+2Ch+Source], 0 ; ErrorMessage
.text:00403F5B                 mov     [esp+2Ch+Str], 1 ; Code
.text:00403F62                 mov     dword ptr [esp+2Ch+var_20], ecx ; char
.text:00403F66                 mov     [esp+2Ch+Count], eax ; char *
.text:00403F6A                 call    sub_40FD70
.text:00403F6F                 jmp     loc_403DC1
.text:00403F74 ; ---------------------------------------------------------------------------
.text:00403F74
.text:00403F74 loc_403F74:                             ; CODE XREF: sub_403D90+105↑j
.text:00403F74                 mov     [esp+2Ch+Str], offset aSInvalidRegula ; "%s: invalid regular expression: %s"
.text:00403F7B                 call    ds:__imp_libintl_gettext
.text:00403F81                 mov     [esp+2Ch+var_1C], esi
.text:00403F85                 mov     edi, dword ptr [esp+2Ch+arg_8]
.text:00403F89                 mov     [esp+2Ch+Source], 0 ; ErrorMessage
.text:00403F91                 mov     [esp+2Ch+Str], 0 ; Code
.text:00403F98                 mov     [esp+2Ch+Count], eax ; char *
.text:00403F9C                 mov     dword ptr [esp+2Ch+var_20], edi ; char
.text:00403FA0                 call    sub_40FD70
.text:00403FA5                 call    sub_4015E0
.text:00403FAA                 call    sub_4014C0
.text:00403FAF                 mov     [esp+2Ch+Str], 1 ; Code
.text:00403FB6                 call    exit
.text:00403FB6 sub_403D90      endp
.text:00403FB6
.text:00403FB6 ; ---------------------------------------------------------------------------
.text:00403FBB                 align 10h
.text:00403FC0
.text:00403FC0 ; =============== S U B R O U T I N E =======================================
.text:00403FC0
.text:00403FC0
.text:00403FC0 sub_403FC0      proc near               ; CODE XREF: sub_404010+3A↓j
.text:00403FC0                                         ; sub_4071F0+46B↓p ...
.text:00403FC0
.text:00403FC0 arg_0           = dword ptr  4
.text:00403FC0 arg_4           = dword ptr  8
.text:00403FC0 arg_8           = dword ptr  0Ch
.text:00403FC0
.text:00403FC0                 mov     edx, [esp+arg_8]
.text:00403FC4                 mov     ecx, [esp+arg_4]
.text:00403FC8                 mov     eax, [esp+arg_0]
.text:00403FCC                 mov     [ecx+1], dl
.text:00403FCF                 sar     edx, 8
.text:00403FD2                 mov     [ecx], al
.text:00403FD4                 mov     [ecx+2], dl
.text:00403FD7                 retn
.text:00403FD7 sub_403FC0      endp
.text:00403FD7
.text:00403FD7 ; ---------------------------------------------------------------------------
.text:00403FD8                 align 10h
.text:00403FE0
.text:00403FE0 ; =============== S U B R O U T I N E =======================================
.text:00403FE0
.text:00403FE0
.text:00403FE0 sub_403FE0      proc near               ; CODE XREF: sub_404050+3F↓j
.text:00403FE0                                         ; sub_4071F0+313B↓p
.text:00403FE0
.text:00403FE0 arg_0           = dword ptr  4
.text:00403FE0 arg_4           = dword ptr  8
.text:00403FE0 arg_8           = dword ptr  0Ch
.text:00403FE0 arg_C           = dword ptr  10h
.text:00403FE0
.text:00403FE0                 push    ebx
.text:00403FE1                 mov     edx, [esp+4+arg_8]
.text:00403FE5                 mov     ebx, [esp+4+arg_C]
.text:00403FE9                 mov     ecx, [esp+4+arg_4]
.text:00403FED                 mov     eax, [esp+4+arg_0]
.text:00403FF1                 mov     [ecx+1], dl
.text:00403FF4                 sar     edx, 8
.text:00403FF7                 mov     [ecx+3], bl
.text:00403FFA                 sar     ebx, 8
.text:00403FFD                 mov     [ecx], al
.text:00403FFF                 mov     [ecx+2], dl
.text:00404002                 mov     [ecx+4], bl
.text:00404005                 pop     ebx
.text:00404006                 retn
.text:00404006 sub_403FE0      endp
.text:00404006
.text:00404006 ; ---------------------------------------------------------------------------
.text:00404007                 align 10h
.text:00404010
.text:00404010 ; =============== S U B R O U T I N E =======================================
.text:00404010
.text:00404010
.text:00404010 sub_404010      proc near               ; CODE XREF: sub_4071F0+967↓p
.text:00404010                                         ; sub_4071F0+137C↓p ...
.text:00404010
.text:00404010 arg_0           = dword ptr  4
.text:00404010 arg_4           = dword ptr  8
.text:00404010 arg_8           = dword ptr  0Ch
.text:00404010 arg_C           = dword ptr  10h
.text:00404010
.text:00404010                 push    edi
.text:00404011                 push    esi
.text:00404012                 push    ebx
.text:00404013                 mov     edx, [esp+0Ch+arg_C]
.text:00404017                 mov     ebx, [esp+0Ch+arg_4]
.text:0040401B                 mov     edi, [esp+0Ch+arg_0]
.text:0040401F                 mov     esi, [esp+0Ch+arg_8]
.text:00404023                 lea     ecx, [edx+3]
.text:00404026                 cmp     edx, ebx
.text:00404028                 jz      short loc_40403B
.text:0040402A                 lea     esi, [esi+0]
.text:00404030
.text:00404030 loc_404030:                             ; CODE XREF: sub_404010+29↓j
.text:00404030                 dec     edx
.text:00404031                 dec     ecx
.text:00404032                 cmp     edx, ebx
.text:00404034                 movzx   eax, byte ptr [edx]
.text:00404037                 mov     [ecx], al
.text:00404039                 jnz     short loc_404030
.text:0040403B
.text:0040403B loc_40403B:                             ; CODE XREF: sub_404010+18↑j
.text:0040403B                 mov     [esp+0Ch+arg_8], esi
.text:0040403F                 mov     [esp+0Ch+arg_0], edi
.text:00404043                 mov     [esp+0Ch+arg_4], ebx
.text:00404047                 pop     ebx
.text:00404048                 pop     esi
.text:00404049                 pop     edi
.text:0040404A                 jmp     sub_403FC0
.text:0040404A sub_404010      endp
.text:0040404A
.text:0040404A ; ---------------------------------------------------------------------------
.text:0040404F                 align 10h
.text:00404050
.text:00404050 ; =============== S U B R O U T I N E =======================================
.text:00404050
.text:00404050
.text:00404050 sub_404050      proc near               ; CODE XREF: sub_4071F0+30CC↓p
.text:00404050                                         ; sub_4071F0+30F8↓p ...
.text:00404050
.text:00404050 arg_0           = dword ptr  4
.text:00404050 arg_4           = dword ptr  8
.text:00404050 arg_8           = dword ptr  0Ch
.text:00404050 arg_C           = dword ptr  10h
.text:00404050 arg_10          = dword ptr  14h
.text:00404050
.text:00404050                 push    ebp
.text:00404051                 push    edi
.text:00404052                 push    esi
.text:00404053                 push    ebx
.text:00404054                 mov     edx, [esp+10h+arg_10]
.text:00404058                 mov     ebx, [esp+10h+arg_4]
.text:0040405C                 mov     ebp, [esp+10h+arg_0]
.text:00404060                 mov     edi, [esp+10h+arg_8]
.text:00404064                 lea     ecx, [edx+5]
.text:00404067                 cmp     edx, ebx
.text:00404069                 mov     esi, [esp+10h+arg_C]
.text:0040406D                 jz      short loc_40407B
.text:0040406F                 nop
.text:00404070
.text:00404070 loc_404070:                             ; CODE XREF: sub_404050+29↓j
.text:00404070                 dec     edx
.text:00404071                 dec     ecx
.text:00404072                 cmp     edx, ebx
.text:00404074                 movzx   eax, byte ptr [edx]
.text:00404077                 mov     [ecx], al
.text:00404079                 jnz     short loc_404070
.text:0040407B
.text:0040407B loc_40407B:                             ; CODE XREF: sub_404050+1D↑j
.text:0040407B                 mov     [esp+10h+arg_C], esi
.text:0040407F                 mov     [esp+10h+arg_8], edi
.text:00404083                 mov     [esp+10h+arg_0], ebp
.text:00404087                 mov     [esp+10h+arg_4], ebx
.text:0040408B                 pop     ebx
.text:0040408C                 pop     esi
.text:0040408D                 pop     edi
.text:0040408E                 pop     ebp
.text:0040408F                 jmp     sub_403FE0
.text:0040408F sub_404050      endp
.text:0040408F
.text:0040408F ; ---------------------------------------------------------------------------
.text:00404094                 align 10h
.text:004040A0
.text:004040A0 ; =============== S U B R O U T I N E =======================================
.text:004040A0
.text:004040A0
.text:004040A0 sub_4040A0      proc near               ; CODE XREF: sub_4071F0+5C6↓p
.text:004040A0
.text:004040A0 arg_0           = dword ptr  4
.text:004040A0 arg_4           = dword ptr  8
.text:004040A0 arg_8           = dword ptr  0Ch
.text:004040A0
.text:004040A0                 push    ebx
.text:004040A1                 mov     edx, [esp+4+arg_4]
.text:004040A5                 xor     ebx, ebx
.text:004040A7                 mov     ecx, [esp+4+arg_8]
.text:004040AB                 sub     edx, 2
.text:004040AE                 cmp     edx, [esp+4+arg_0]
.text:004040B2                 jbe     short loc_4040BA
.text:004040B4                 cmp     byte ptr [edx-1], 5Ch ; '\'
.text:004040B8                 jz      short loc_4040F2
.text:004040BA
.text:004040BA loc_4040BA:                             ; CODE XREF: sub_4040A0+12↑j
.text:004040BA                                         ; sub_4040A0+54↓j
.text:004040BA                 movzx   edx, byte ptr [edx]
.text:004040BD                 xor     eax, eax
.text:004040BF                 cmp     dl, 28h ; '('
.text:004040C2                 jz      short loc_4040E7
.text:004040C4
.text:004040C4 loc_4040C4:                             ; CODE XREF: sub_4040A0+50↓j
.text:004040C4                 cmp     dl, 7Ch ; '|'
.text:004040C7                 jz      short loc_4040D0
.text:004040C9
.text:004040C9 loc_4040C9:                             ; CODE XREF: sub_4040A0+3D↓j
.text:004040C9                                         ; sub_4040A0+45↓j
.text:004040C9                 pop     ebx
.text:004040CA                 retn
.text:004040CA ; ---------------------------------------------------------------------------
.text:004040CB                 align 10h
.text:004040D0
.text:004040D0 loc_4040D0:                             ; CODE XREF: sub_4040A0+27↑j
.text:004040D0                 and     ecx, 0FFFF8000h
.text:004040D6                 test    cx, cx
.text:004040D9                 jnz     short loc_4040E0
.text:004040DB                 test    bl, bl
.text:004040DD                 jz      short loc_4040C9
.text:004040DF                 nop
.text:004040E0
.text:004040E0 loc_4040E0:                             ; CODE XREF: sub_4040A0+39↑j
.text:004040E0                                         ; sub_4040A0+4A↓j ...
.text:004040E0                 mov     eax, 1
.text:004040E5                 jmp     short loc_4040C9
.text:004040E7 ; ---------------------------------------------------------------------------
.text:004040E7
.text:004040E7 loc_4040E7:                             ; CODE XREF: sub_4040A0+22↑j
.text:004040E7                 test    ch, 20h
.text:004040EA                 jnz     short loc_4040E0
.text:004040EC                 test    bl, bl
.text:004040EE                 jnz     short loc_4040E0
.text:004040F0                 jmp     short loc_4040C4
.text:004040F2 ; ---------------------------------------------------------------------------
.text:004040F2
.text:004040F2 loc_4040F2:                             ; CODE XREF: sub_4040A0+18↑j
.text:004040F2                 mov     bl, 1
.text:004040F4                 jmp     short loc_4040BA
.text:004040F4 sub_4040A0      endp
.text:004040F4
.text:004040F4 ; ---------------------------------------------------------------------------
.text:004040F6                 align 10h
.text:00404100
.text:00404100 ; =============== S U B R O U T I N E =======================================
.text:00404100
.text:00404100
.text:00404100 sub_404100      proc near               ; CODE XREF: sub_4071F0+B9A↓p
.text:00404100
.text:00404100 var_9           = byte ptr -9
.text:00404100 var_8           = dword ptr -8
.text:00404100 var_4           = dword ptr -4
.text:00404100 arg_0           = dword ptr  4
.text:00404100 arg_4           = dword ptr  8
.text:00404100 arg_8           = dword ptr  0Ch
.text:00404100
.text:00404100                 sub     esp, 0Ch
.text:00404103                 mov     edx, [esp+0Ch+arg_8]
.text:00404107                 mov     [esp+0Ch+var_4], esi
.text:0040410B                 mov     esi, [esp+0Ch+arg_0]
.text:0040410F                 mov     [esp+0Ch+var_8], ebx
.text:00404113                 lea     eax, [esi+1]
.text:00404116                 movzx   ebx, byte ptr [esi]
.text:00404119                 cmp     bl, 5Ch ; '\'
.text:0040411C                 setz    [esp+0Ch+var_9]
.text:00404121                 cmp     eax, [esp+0Ch+arg_4]
.text:00404125                 sbb     ecx, ecx
.text:00404127                 and     ecx, eax
.text:00404129                 xor     eax, eax
.text:0040412B                 test    dh, 20h
.text:0040412E                 jz      short loc_404168
.text:00404130                 cmp     bl, 29h ; ')'
.text:00404133
.text:00404133 loc_404133:                             ; CODE XREF: sub_404100+76↓j
.text:00404133                 jz      short loc_404151
.text:00404135
.text:00404135 loc_404135:                             ; CODE XREF: sub_404100+6D↓j
.text:00404135                                         ; sub_404100+71↓j
.text:00404135                 and     edx, 0FFFF8000h
.text:0040413B                 test    dx, dx
.text:0040413E                 jz      short loc_404158
.text:00404140                 cmp     byte ptr [esi], 7Ch ; '|'
.text:00404143
.text:00404143 loc_404143:                             ; CODE XREF: sub_404100+66↓j
.text:00404143                 jz      short loc_404151
.text:00404145
.text:00404145 loc_404145:                             ; CODE XREF: sub_404100+56↓j
.text:00404145                                         ; sub_404100+5D↓j ...
.text:00404145                 mov     ebx, [esp+0Ch+var_8]
.text:00404149                 mov     esi, [esp+0Ch+var_4]
.text:0040414D                 add     esp, 0Ch
.text:00404150                 retn
.text:00404151 ; ---------------------------------------------------------------------------
.text:00404151
.text:00404151 loc_404151:                             ; CODE XREF: sub_404100:loc_404133↑j
.text:00404151                                         ; sub_404100:loc_404143↑j
.text:00404151                 mov     eax, 1
.text:00404156                 jmp     short loc_404145
.text:00404158 ; ---------------------------------------------------------------------------
.text:00404158
.text:00404158 loc_404158:                             ; CODE XREF: sub_404100+3E↑j
.text:00404158                 cmp     [esp+0Ch+var_9], 0
.text:0040415D                 jz      short loc_404145
.text:0040415F                 test    ecx, ecx
.text:00404161                 jz      short loc_404145
.text:00404163                 cmp     byte ptr [ecx], 7Ch ; '|'
.text:00404166                 jmp     short loc_404143
.text:00404168 ; ---------------------------------------------------------------------------
.text:00404168
.text:00404168 loc_404168:                             ; CODE XREF: sub_404100+2E↑j
.text:00404168                 cmp     [esp+0Ch+var_9], 0
.text:0040416D                 jz      short loc_404135
.text:0040416F                 test    ecx, ecx
.text:00404171                 jz      short loc_404135
.text:00404173                 cmp     byte ptr [ecx], 29h ; ')'
.text:00404176                 jmp     short loc_404133
.text:00404176 sub_404100      endp
.text:00404176
.text:00404176 ; ---------------------------------------------------------------------------
.text:00404178                 align 10h
.text:00404180
.text:00404180 ; =============== S U B R O U T I N E =======================================
.text:00404180
.text:00404180
.text:00404180 sub_404180      proc near               ; CODE XREF: sub_4071F0:loc_4092D3↓p
.text:00404180
.text:00404180 arg_0           = dword ptr  4
.text:00404180 arg_4           = dword ptr  8
.text:00404180 arg_8           = dword ptr  0Ch
.text:00404180 arg_C           = dword ptr  10h
.text:00404180 arg_10          = dword ptr  14h
.text:00404180 arg_14          = dword ptr  18h
.text:00404180
.text:00404180                 push    ebp
.text:00404181                 push    edi
.text:00404182                 push    esi
.text:00404183                 push    ebx
.text:00404184                 mov     ecx, [esp+10h+arg_4]
.text:00404188                 mov     esi, [esp+10h+arg_0]
.text:0040418C                 mov     ebx, [esp+10h+arg_C]
.text:00404190                 mov     edx, [ecx]
.text:00404192                 cmp     edx, [esp+10h+arg_8]
.text:00404196                 jz      loc_40424A
.text:0040419C                 lea     edi, [edx+1]
.text:0040419F                 mov     [ecx], edi
.text:004041A1                 xor     ecx, ecx
.text:004041A3                 test    [esp+10h+arg_10], 10000h
.text:004041AB                 setz    cl
.text:004041AE                 dec     ecx
.text:004041AF                 and     ecx, 0Bh
.text:004041B2                 test    ebx, ebx
.text:004041B4                 jz      loc_404245
.text:004041BA                 movzx   edi, byte ptr [edx]
.text:004041BD                 and     esi, 0FFh
.text:004041C3                 movsx   esi, byte ptr [esi+ebx]
.text:004041C7                 movzx   ebp, byte ptr [edi+ebx]
.text:004041CB
.text:004041CB loc_4041CB:                             ; CODE XREF: sub_404180+C8↓j
.text:004041CB                 cmp     esi, ebp
.text:004041CD                 mov     edx, esi
.text:004041CF                 ja      short loc_40423E
.text:004041D1                 jmp     short loc_4041E0
.text:004041D1 ; ---------------------------------------------------------------------------
.text:004041D3                 align 10h
.text:004041E0
.text:004041E0 loc_4041E0:                             ; CODE XREF: sub_404180+51↑j
.text:004041E0                                         ; sub_404180+BC↓j
.text:004041E0                 test    ebx, ebx
.text:004041E2                 movzx   eax, dl
.text:004041E5                 jz      short loc_4041EE
.text:004041E7                 movzx   ecx, dl
.text:004041EA                 movzx   eax, byte ptr [ecx+ebx]
.text:004041EE
.text:004041EE loc_4041EE:                             ; CODE XREF: sub_404180+65↑j
.text:004041EE                 mov     edi, [esp+10h+arg_14]
.text:004041F2                 sar     eax, 3
.text:004041F5                 add     edi, eax
.text:004041F7                 test    ebx, ebx
.text:004041F9                 movzx   eax, dl
.text:004041FC                 jz      short loc_404205
.text:004041FE                 movzx   esi, dl
.text:00404201                 movzx   eax, byte ptr [esi+ebx]
.text:00404205
.text:00404205 loc_404205:                             ; CODE XREF: sub_404180+7C↑j
.text:00404205                 mov     esi, [esp+10h+arg_14]
.text:00404209                 sar     eax, 3
.text:0040420C                 movzx   ecx, dl
.text:0040420F                 add     eax, esi
.text:00404211                 test    ebx, ebx
.text:00404213                 movzx   esi, byte ptr [eax]
.text:00404216                 jz      short loc_40421F
.text:00404218                 movzx   eax, dl
.text:0040421B                 movzx   ecx, byte ptr [eax+ebx]
.text:0040421F
.text:0040421F loc_40421F:                             ; CODE XREF: sub_404180+96↑j
.text:0040421F                 mov     eax, ecx
.text:00404221                 inc     edx
.text:00404222                 and     eax, 1F8h
.text:00404227                 sub     ecx, eax
.text:00404229                 mov     eax, 1
.text:0040422E                 shl     eax, cl
.text:00404230                 mov     ecx, eax
.text:00404232                 mov     eax, esi
.text:00404234                 or      al, cl
.text:00404236                 mov     [edi], al
.text:00404238                 xor     ecx, ecx
.text:0040423A                 cmp     edx, ebp
.text:0040423C                 jbe     short loc_4041E0
.text:0040423E
.text:0040423E loc_40423E:                             ; CODE XREF: sub_404180+4F↑j
.text:0040423E                 mov     eax, ecx
.text:00404240
.text:00404240 loc_404240:                             ; CODE XREF: sub_404180+CF↓j
.text:00404240                 pop     ebx
.text:00404241                 pop     esi
.text:00404242                 pop     edi
.text:00404243                 pop     ebp
.text:00404244                 retn
.text:00404245 ; ---------------------------------------------------------------------------
.text:00404245
.text:00404245 loc_404245:                             ; CODE XREF: sub_404180+34↑j
.text:00404245                 movzx   ebp, byte ptr [edx]
.text:00404248                 jmp     short loc_4041CB
.text:0040424A ; ---------------------------------------------------------------------------
.text:0040424A
.text:0040424A loc_40424A:                             ; CODE XREF: sub_404180+16↑j
.text:0040424A                 mov     eax, 0Bh
.text:0040424F                 jmp     short loc_404240
.text:0040424F sub_404180      endp
.text:0040424F
.text:0040424F ; ---------------------------------------------------------------------------
.text:00404251                 db 0EBh, 0Dh, 90h
.text:00404254                 align 10h
.text:00404260 jpt_404557      dd offset loc_404B0B    ; DATA XREF: sub_4042E0:loc_404550↓r
.text:00404260                                         ; sub_4042E0+BEF↓r ...
.text:00404260                 dd offset loc_404B23    ; jump table for switch statement
.text:00404260                 dd offset loc_404B28
.text:00404260                 dd offset loc_404C23
.text:00404260                 dd offset loc_406486
.text:00404260                 dd offset loc_406390
.text:00404278 jpt_404CE4      dd offset loc_4062A4    ; DATA XREF: sub_4042E0+9FD↓r
.text:00404278                 dd offset loc_405EA0    ; jump table for switch statement
.text:00404280                 dd offset loc_405D03
.text:00404284                 dd offset loc_405CB9
.text:00404288                 dd offset loc_405C5D
.text:0040428C                 dd offset loc_405C20
.text:00404290                 dd offset loc_405C06
.text:00404294                 dd offset loc_40527A
.text:00404298                 dd offset loc_405C01
.text:0040429C                 dd offset loc_405BFC
.text:004042A0                 dd offset loc_405A81
.text:004042A4                 dd offset loc_405885
.text:004042A8                 dd offset loc_4057EC
.text:004042AC                 dd offset loc_405666
.text:004042B0                 dd offset loc_4054E0
.text:004042B4                 dd offset loc_405298
.text:004042B8                 dd offset loc_40524F
.text:004042BC                 dd offset loc_4051F7
.text:004042C0                 dd offset loc_405147
.text:004042C4                 dd offset loc_405096
.text:004042C8                 dd offset loc_404FAA
.text:004042CC                 dd offset loc_404ED8
.text:004042D0                 dd offset loc_404DD2
.text:004042D4                 dd offset loc_404CE6
.text:004042D8                 align 10h
.text:004042E0
.text:004042E0 ; =============== S U B R O U T I N E =======================================
.text:004042E0
.text:004042E0
.text:004042E0 sub_4042E0      proc near               ; CODE XREF: .text:0040703E↓p
.text:004042E0                                         ; .text:00407050↓j ...
.text:004042E0
.text:004042E0 Size            = dword ptr -0BCh
.text:004042E0 var_B8          = dword ptr -0B8h
.text:004042E0 var_B4          = dword ptr -0B4h
.text:004042E0 var_B0          = dword ptr -0B0h
.text:004042E0 var_A5          = byte ptr -0A5h
.text:004042E0 var_A4          = dword ptr -0A4h
.text:004042E0 var_A0          = dword ptr -0A0h
.text:004042E0 var_9C          = dword ptr -9Ch
.text:004042E0 var_97          = byte ptr -97h
.text:004042E0 var_96          = byte ptr -96h
.text:004042E0 var_95          = byte ptr -95h
.text:004042E0 var_94          = dword ptr -94h
.text:004042E0 var_90          = dword ptr -90h
.text:004042E0 var_8C          = dword ptr -8Ch
.text:004042E0 var_88          = dword ptr -88h
.text:004042E0 var_84          = dword ptr -84h
.text:004042E0 var_80          = dword ptr -80h
.text:004042E0 var_7C          = dword ptr -7Ch
.text:004042E0 var_78          = dword ptr -78h
.text:004042E0 var_74          = dword ptr -74h
.text:004042E0 var_70          = dword ptr -70h
.text:004042E0 var_6C          = dword ptr -6Ch
.text:004042E0 var_68          = dword ptr -68h
.text:004042E0 var_64          = dword ptr -64h
.text:004042E0 var_60          = dword ptr -60h
.text:004042E0 var_5C          = dword ptr -5Ch
.text:004042E0 var_58          = dword ptr -58h
.text:004042E0 var_54          = dword ptr -54h
.text:004042E0 var_50          = dword ptr -50h
.text:004042E0 var_4C          = dword ptr -4Ch
.text:004042E0 var_48          = dword ptr -48h
.text:004042E0 var_44          = dword ptr -44h
.text:004042E0 var_40          = dword ptr -40h
.text:004042E0 var_3C          = dword ptr -3Ch
.text:004042E0 var_38          = dword ptr -38h
.text:004042E0 var_34          = dword ptr -34h
.text:004042E0 var_30          = dword ptr -30h
.text:004042E0 Src             = dword ptr -2Ch
.text:004042E0 var_28          = dword ptr -28h
.text:004042E0 var_24          = dword ptr -24h
.text:004042E0 arg_0           = dword ptr  4
.text:004042E0 arg_4           = dword ptr  8
.text:004042E0 arg_8           = dword ptr  0Ch
.text:004042E0 arg_C           = dword ptr  10h
.text:004042E0 arg_10          = dword ptr  14h
.text:004042E0 arg_14          = dword ptr  18h
.text:004042E0 arg_18          = dword ptr  1Ch
.text:004042E0 arg_1C          = dword ptr  20h
.text:004042E0
.text:004042E0                 push    ebp
.text:004042E1                 push    edi
.text:004042E2                 push    esi
.text:004042E3                 push    ebx
.text:004042E4                 sub     esp, 0ACh
.text:004042EA                 mov     ebx, [esp+0BCh+arg_0]
.text:004042F1                 mov     [esp+0BCh+var_54], 0
.text:004042F9                 mov     ecx, [esp+0BCh+arg_0]
.text:00404300                 mov     esi, [esp+0BCh+arg_1C]
.text:00404307                 mov     [esp+0BCh+var_60], 101h
.text:0040430F                 mov     ebp, [ebx+8]
.text:00404312                 mov     edi, [ecx]
.text:00404314                 mov     [esp+0BCh+var_64], 100h
.text:0040431C                 mov     eax, [ebx+18h]
.text:0040431F                 mov     edx, [ebx+14h]
.text:00404322                 mov     [esp+0BCh+var_4C], edi
.text:00404326                 inc     eax
.text:00404327                 add     edi, ebp
.text:00404329                 mov     [esp+0BCh+var_58], edx
.text:0040432D                 mov     [esp+0BCh+var_50], edi
.text:00404331                 mov     [esp+0BCh+var_5C], eax
.text:00404335                 mov     [esp+0BCh+var_7C], 0
.text:0040433D                 mov     [esp+0BCh+var_88], 0
.text:00404345                 mov     [esp+0BCh+var_8C], 0
.text:0040434D                 mov     [esp+0BCh+Size], 14h ; Size
.text:00404354                 call    malloc
.text:00404359                 mov     [esp+0BCh+Src], eax
.text:00404360                 mov     edx, eax
.text:00404362                 test    edx, edx
.text:00404364                 mov     eax, 0FFFFFFFEh
.text:00404369                 jz      loc_404A37
.text:0040436F                 mov     edx, [esp+0BCh+arg_0]
.text:00404376                 xor     edi, edi
.text:00404378                 mov     ebp, 5
.text:0040437D                 mov     [esp+0BCh+var_28], ebp
.text:00404384                 mov     [esp+0BCh+var_24], edi
.text:0040438B                 mov     ebx, [edx+18h]
.text:0040438E                 test    ebx, ebx
.text:00404390                 jnz     loc_406577
.text:00404396                 mov     [esp+0BCh+var_90], 0
.text:0040439E                 mov     [esp+0BCh+var_84], 0
.text:004043A6                 mov     [esp+0BCh+var_80], 0
.text:004043AE                 mov     [esp+0BCh+var_74], 0
.text:004043B6                 mov     [esp+0BCh+var_70], 0
.text:004043BE                 mov     [esp+0BCh+var_6C], 0
.text:004043C6                 mov     [esp+0BCh+var_68], 0
.text:004043CE                 mov     [esp+0BCh+var_94], 0
.text:004043D6                 mov     [esp+0BCh+var_78], 0
.text:004043DE
.text:004043DE loc_4043DE:                             ; CODE XREF: sub_4042E0+236C↓j
.text:004043DE                 mov     eax, [esp+0BCh+arg_14]
.text:004043E5                 test    eax, eax
.text:004043E7                 js      loc_404AD5
.text:004043ED                 mov     ebp, [esp+0BCh+arg_8]
.text:004043F4                 mov     ecx, [esp+0BCh+arg_10]
.text:004043FB                 add     ebp, ecx
.text:004043FD                 cmp     [esp+0BCh+arg_14], ebp
.text:00404404                 jg      loc_404AD5
.text:0040440A                 mov     ebp, 1
.text:0040440F                 cmp     ebp, [esp+0BCh+var_5C]
.text:00404413                 jnb     short loc_404458
.text:00404415                 mov     eax, [esp+0BCh+var_78]
.text:00404419                 add     eax, 4
.text:0040441C
.text:0040441C loc_40441C:                             ; CODE XREF: sub_4042E0+176↓j
.text:0040441C                 mov     ecx, [esp+0BCh+var_74]
.text:00404420                 mov     ebx, [esp+0BCh+var_70]
.text:00404424                 mov     edx, [esp+0BCh+var_6C]
.text:00404428                 mov     dword ptr [ecx+ebp*4], offset unk_413290
.text:0040442F                 mov     edi, [esp+0BCh+var_68]
.text:00404433                 mov     dword ptr [ebx+ebp*4], offset unk_413290
.text:0040443A                 mov     dword ptr [edx+ebp*4], offset unk_413290
.text:00404441                 mov     dword ptr [edi+ebp*4], offset unk_413290
.text:00404448                 inc     ebp
.text:00404449                 or      dword ptr [eax], 3
.text:0040444C                 and     byte ptr [eax], 0E3h
.text:0040444F                 add     eax, 4
.text:00404452                 cmp     ebp, [esp+0BCh+var_5C]
.text:00404456                 jb      short loc_40441C
.text:00404458
.text:00404458 loc_404458:                             ; CODE XREF: sub_4042E0+133↑j
.text:00404458                 mov     eax, [esp+0BCh+arg_10]
.text:0040445F                 test    eax, eax
.text:00404461                 jnz     short loc_40449C
.text:00404463                 mov     ebp, [esp+0BCh+arg_4]
.text:0040446A                 test    ebp, ebp
.text:0040446C                 jz      short loc_40449C
.text:0040446E                 mov     ebx, [esp+0BCh+arg_4]
.text:00404475                 xor     edx, edx
.text:00404477                 xor     edi, edi
.text:00404479                 mov     [esp+0BCh+arg_4], edx
.text:00404480                 mov     ecx, [esp+0BCh+arg_8]
.text:00404487                 mov     [esp+0BCh+arg_8], edi
.text:0040448E                 mov     [esp+0BCh+arg_C], ebx
.text:00404495                 mov     [esp+0BCh+arg_10], ecx
.text:0040449C
.text:0040449C loc_40449C:                             ; CODE XREF: sub_4042E0+181↑j
.text:0040449C                                         ; sub_4042E0+18C↑j
.text:0040449C                 mov     ecx, [esp+0BCh+arg_4]
.text:004044A3                 mov     eax, [esp+0BCh+arg_8]
.text:004044AA                 mov     ebp, [esp+0BCh+arg_C]
.text:004044B1                 mov     edi, [esp+0BCh+arg_10]
.text:004044B8                 add     ecx, eax
.text:004044BA                 mov     [esp+0BCh+var_34], ecx
.text:004044C1                 add     ebp, edi
.text:004044C3                 cmp     esi, [esp+0BCh+arg_8]
.text:004044CA                 mov     [esp+0BCh+var_38], ebp
.text:004044D1                 jg      loc_406552
.text:004044D7                 mov     edx, [esp+0BCh+arg_4]
.text:004044DE                 add     esi, edx
.text:004044E0                 mov     [esp+0BCh+var_3C], esi
.text:004044E7                 mov     esi, [esp+0BCh+arg_C]
.text:004044EE
.text:004044EE loc_4044EE:                             ; CODE XREF: sub_4042E0+2292↓j
.text:004044EE                 mov     [esp+0BCh+var_40], esi
.text:004044F2                 mov     ecx, [esp+0BCh+arg_8]
.text:004044F9                 test    ecx, ecx
.text:004044FB                 jle     loc_406528
.text:00404501                 mov     eax, [esp+0BCh+arg_8]
.text:00404508                 cmp     [esp+0BCh+arg_14], eax
.text:0040450F                 jg      loc_406528
.text:00404515                 mov     edx, [esp+0BCh+arg_4]
.text:0040451C                 mov     ebx, [esp+0BCh+arg_14]
.text:00404523                 mov     esi, [esp+0BCh+var_3C]
.text:0040452A                 add     edx, ebx
.text:0040452C                 mov     [esp+0BCh+var_44], edx
.text:00404530                 mov     [esp+0BCh+var_48], esi
.text:00404534
.text:00404534 loc_404534:                             ; CODE XREF: sub_4042E0+469↓j
.text:00404534                                         ; sub_4042E0+47A↓j ...
.text:00404534                 mov     edx, [esp+0BCh+var_50]
.text:00404538                 mov     eax, offset loc_404559
.text:0040453D                 cmp     [esp+0BCh+var_4C], edx
.text:00404541                 jz      short loc_404557
.text:00404543
.text:00404543 loc_404543:                             ; CODE XREF: sub_4042E0+838↓j
.text:00404543                 mov     ebp, [esp+0BCh+var_4C]
.text:00404547                 movzx   ebx, byte ptr [ebp+0]
.text:0040454B                 inc     ebp
.text:0040454C                 mov     [esp+0BCh+var_4C], ebp
.text:00404550
.text:00404550 loc_404550:                             ; CODE XREF: sub_4042E0+1CA0↓j
.text:00404550                 mov     eax, ds:jpt_404557[ebx*4] ; switch 6 cases
.text:00404557
.text:00404557 loc_404557:                             ; CODE XREF: sub_4042E0+261↑j
.text:00404557                                         ; sub_4042E0+83E↓j ...
.text:00404557                 jmp     eax             ; switch jump
.text:00404559 ; ---------------------------------------------------------------------------
.text:00404559
.text:00404559 loc_404559:                             ; DATA XREF: sub_4042E0+258↑o
.text:00404559                                         ; sub_4042E0+82F↓o ...
.text:00404559                 mov     eax, [esp+0BCh+var_40]
.text:0040455D                 cmp     [esp+0BCh+var_44], eax
.text:00404561                 jz      loc_4047E9
.text:00404567                 mov     edi, [esp+0BCh+arg_8]
.text:0040456E                 xor     edx, edx
.text:00404570                 test    edi, edi
.text:00404572                 jz      short loc_40458C
.text:00404574                 mov     eax, [esp+0BCh+var_88]
.text:00404578                 cmp     [esp+0BCh+arg_4], eax
.text:0040457F                 ja      short loc_40458C
.text:00404581                 mov     esi, [esp+0BCh+var_34]
.text:00404588                 cmp     eax, esi
.text:0040458A                 jbe     short loc_40458E
.text:0040458C
.text:0040458C loc_40458C:                             ; CODE XREF: sub_4042E0+292↑j
.text:0040458C                                         ; sub_4042E0+29F↑j
.text:0040458C                 mov     dl, 1
.text:0040458E
.text:0040458E loc_40458E:                             ; CODE XREF: sub_4042E0+2AA↑j
.text:0040458E                 mov     ebp, [esp+0BCh+var_3C]
.text:00404595                 cmp     [esp+0BCh+var_48], ebp
.text:00404599                 setz    cl
.text:0040459C                 cmp     dl, cl
.text:0040459E                 jz      loc_404AF8
.text:004045A4                 mov     edx, [esp+0BCh+var_88]
.text:004045A8                 cmp     [esp+0BCh+var_44], edx
.text:004045AC                 setnbe  al
.text:004045AF
.text:004045AF loc_4045AF:                             ; CODE XREF: sub_4042E0+826↓j
.text:004045AF                 mov     esi, [esp+0BCh+var_24]
.text:004045B6                 test    esi, esi
.text:004045B8                 jz      loc_404ADF
.text:004045BE                 mov     ecx, [esp+0BCh+var_7C]
.text:004045C2                 test    ecx, ecx
.text:004045C4                 jz      short loc_4045CA
.text:004045C6                 test    al, al
.text:004045C8                 jz      short loc_404610
.text:004045CA
.text:004045CA loc_4045CA:                             ; CODE XREF: sub_4042E0+2E4↑j
.text:004045CA                 mov     [esp+0BCh+var_7C], 1
.text:004045D2                 mov     eax, [esp+0BCh+var_5C]
.text:004045D6                 mov     ebp, 1
.text:004045DB                 mov     edi, [esp+0BCh+var_44]
.text:004045DF                 cmp     ebp, eax
.text:004045E1                 mov     [esp+0BCh+var_88], edi
.text:004045E5                 jnb     short loc_404610
.text:004045E7
.text:004045E7 loc_4045E7:                             ; CODE XREF: sub_4042E0+328↓j
.text:004045E7                 mov     edx, [esp+0BCh+var_68]
.text:004045EB                 mov     ecx, [esp+0BCh+var_80]
.text:004045EF                 mov     eax, [esp+0BCh+var_6C]
.text:004045F3                 mov     edi, [edx+ebp*4]
.text:004045F6                 mov     edx, [esp+0BCh+var_84]
.text:004045FA                 mov     [ecx+ebp*4], edi
.text:004045FD                 mov     ebx, [eax+ebp*4]
.text:00404600                 mov     [edx+ebp*4], ebx
.text:00404603                 inc     ebp
.text:00404604                 cmp     ebp, [esp+0BCh+var_5C]
.text:00404608                 jb      short loc_4045E7
.text:0040460A                 lea     esi, [esi+0]
.text:00404610
.text:00404610 loc_404610:                             ; CODE XREF: sub_4042E0+2E8↑j
.text:00404610                                         ; sub_4042E0+305↑j ...
.text:00404610                 test    esi, esi
.text:00404612                 mov     eax, esi
.text:00404614                 jz      loc_40477E
.text:0040461A                 mov     ebx, [esp+0BCh+Src]
.text:00404621                 dec     esi
.text:00404622                 mov     [esp+0BCh+var_24], esi
.text:00404629                 mov     esi, [ebx+esi*4]
.text:0040462C                 test    esi, esi
.text:0040462E                 jz      short loc_404634
.text:00404630                 mov     [esp+0BCh+var_44], esi
.text:00404634
.text:00404634 loc_404634:                             ; CODE XREF: sub_4042E0+34E↑j
.text:00404634                 lea     ecx, [eax-2]
.text:00404637                 lea     edx, [eax-3]
.text:0040463A                 mov     [esp+0BCh+var_24], ecx
.text:00404641                 mov     ebp, [ebx+ecx*4]
.text:00404644                 lea     ecx, [eax-4]
.text:00404647                 mov     [esp+0BCh+var_24], edx
.text:0040464E                 mov     [esp+0BCh+var_4C], ebp
.text:00404652                 mov     edi, [ebx+edx*4]
.text:00404655                 mov     [esp+0BCh+var_24], ecx
.text:0040465C                 mov     [esp+0BCh+var_64], edi
.text:00404660                 mov     ebp, [ebx+ecx*4]
.text:00404663                 mov     ecx, [esp+0BCh+var_64]
.text:00404667                 mov     [esp+0BCh+var_60], ebp
.text:0040466B                 cmp     ecx, ebp
.text:0040466D                 jb      short loc_4046C9
.text:0040466F                 nop
.text:00404670
.text:00404670 loc_404670:                             ; CODE XREF: sub_4042E0+3E7↓j
.text:00404670                 mov     eax, [esp+0BCh+var_24]
.text:00404677                 mov     ebp, [esp+0BCh+var_78]
.text:0040467B                 dec     eax
.text:0040467C                 mov     [esp+0BCh+var_24], eax
.text:00404683                 mov     edi, [ebx+eax*4]
.text:00404686                 mov     [ebp+ecx*4+0], edi
.text:0040468A                 mov     ebp, [esp+0BCh+var_24]
.text:00404691                 mov     esi, [esp+0BCh+Src]
.text:00404698                 lea     edx, [ebp-1]
.text:0040469B                 sub     ebp, 2
.text:0040469E                 mov     ebx, esi
.text:004046A0                 mov     [esp+0BCh+var_24], edx
.text:004046A7                 mov     edi, [esi+edx*4]
.text:004046AA                 mov     edx, [esp+0BCh+var_6C]
.text:004046AE                 mov     [esp+0BCh+var_24], ebp
.text:004046B5                 mov     [edx+ecx*4], edi
.text:004046B8                 mov     edi, [esi+ebp*4]
.text:004046BB                 mov     esi, [esp+0BCh+var_68]
.text:004046BF                 mov     [esi+ecx*4], edi
.text:004046C2                 dec     ecx
.text:004046C3                 cmp     ecx, [esp+0BCh+var_60]
.text:004046C7                 jnb     short loc_404670
.text:004046C9
.text:004046C9 loc_4046C9:                             ; CODE XREF: sub_4042E0+38D↑j
.text:004046C9                 mov     [esp+0BCh+var_8C], 0
.text:004046D1                 mov     ebx, [esp+0BCh+var_4C]
.text:004046D5                 test    ebx, ebx
.text:004046D7                 jz      short loc_404732
.text:004046D9                 mov     edx, [esp+0BCh+var_50]
.text:004046DD                 cmp     [esp+0BCh+var_4C], edx
.text:004046E1                 jnb     short loc_40473E
.text:004046E3                 mov     ecx, [esp+0BCh+var_4C]
.text:004046E7                 xor     edx, edx
.text:004046E9                 movzx   eax, byte ptr [ecx]
.text:004046EC                 cmp     eax, 12h
.text:004046EF                 ja      loc_404775
.text:004046F5                 cmp     eax, 11h
.text:004046F8                 jnb     short loc_404700
.text:004046FA                 cmp     eax, 0Dh
.text:004046FD                 jnz     short loc_40473E
.text:004046FF                 nop
.text:00404700
.text:00404700 loc_404700:                             ; CODE XREF: sub_4042E0+418↑j
.text:00404700                                         ; sub_4042E0+49C↓j
.text:00404700                 mov     ebp, [esp+0BCh+var_4C]
.text:00404704                 mov     ecx, [esp+0BCh+var_4C]
.text:00404708                 inc     ebp
.text:00404709                 mov     [esp+0BCh+var_30], ebp
.text:00404710                 movsx   esi, byte ptr [ebp+1]
.text:00404714                 movzx   eax, byte ptr [ecx+1]
.text:00404718                 shl     esi, 8
.text:0040471B                 lea     edi, [esi+eax]
.text:0040471E                 lea     eax, [edi+ecx+3]
.text:00404722                 test    dl, dl
.text:00404724                 mov     [esp+0BCh+var_30], eax
.text:0040472B                 jz      short loc_404770
.text:0040472D                 cmp     byte ptr [eax], 15h
.text:00404730
.text:00404730 loc_404730:                             ; CODE XREF: sub_4042E0+493↓j
.text:00404730                 jnz     short loc_40473E
.text:00404732
.text:00404732 loc_404732:                             ; CODE XREF: sub_4042E0+3F7↑j
.text:00404732                                         ; sub_4042E0+889↓j ...
.text:00404732                 mov     esi, [esp+0BCh+var_24]
.text:00404739                 jmp     loc_404610
.text:0040473E ; ---------------------------------------------------------------------------
.text:0040473E
.text:0040473E loc_40473E:                             ; CODE XREF: sub_4042E0+401↑j
.text:0040473E                                         ; sub_4042E0+41D↑j ...
.text:0040473E                 mov     ebx, [esp+0BCh+arg_4]
.text:00404745                 cmp     [esp+0BCh+var_44], ebx
.text:00404749                 jb      loc_404534
.text:0040474F                 mov     edi, [esp+0BCh+var_34]
.text:00404756                 cmp     [esp+0BCh+var_44], edi
.text:0040475A                 ja      loc_404534
.text:00404760                 mov     edx, [esp+0BCh+var_3C]
.text:00404767                 mov     [esp+0BCh+var_48], edx
.text:0040476B                 jmp     loc_404534
.text:00404770 ; ---------------------------------------------------------------------------
.text:00404770
.text:00404770 loc_404770:                             ; CODE XREF: sub_4042E0+44B↑j
.text:00404770                 cmp     byte ptr [eax], 0Fh
.text:00404773                 jmp     short loc_404730
.text:00404775 ; ---------------------------------------------------------------------------
.text:00404775
.text:00404775 loc_404775:                             ; CODE XREF: sub_4042E0+40F↑j
.text:00404775                 cmp     eax, 16h
.text:00404778                 jnz     short loc_40473E
.text:0040477A                 mov     dl, 1
.text:0040477C                 jmp     short loc_404700
.text:0040477E ; ---------------------------------------------------------------------------
.text:0040477E
.text:0040477E loc_40477E:                             ; CODE XREF: sub_4042E0+334↑j
.text:0040477E                 mov     ecx, [esp+0BCh+var_7C]
.text:00404782                 test    ecx, ecx
.text:00404784                 jz      loc_404AD5
.text:0040478A
.text:0040478A loc_40478A:                             ; CODE XREF: sub_4042E0+813↓j
.text:0040478A                 mov     esi, [esp+0BCh+var_88]
.text:0040478E                 mov     ebx, [esp+0BCh+arg_4]
.text:00404795                 mov     [esp+0BCh+var_44], esi
.text:00404799                 cmp     esi, ebx
.text:0040479B                 jb      short loc_4047B3
.text:0040479D                 mov     eax, [esp+0BCh+var_34]
.text:004047A4                 mov     ecx, [esp+0BCh+var_3C]
.text:004047AB                 cmp     esi, eax
.text:004047AD                 mov     [esp+0BCh+var_48], ecx
.text:004047B1                 jbe     short loc_4047BB
.text:004047B3
.text:004047B3 loc_4047B3:                             ; CODE XREF: sub_4042E0+4BB↑j
.text:004047B3                 mov     esi, [esp+0BCh+var_40]
.text:004047B7                 mov     [esp+0BCh+var_48], esi
.text:004047BB
.text:004047BB loc_4047BB:                             ; CODE XREF: sub_4042E0+4D1↑j
.text:004047BB                 mov     ebp, 1
.text:004047C0                 cmp     ebp, [esp+0BCh+var_5C]
.text:004047C4                 jnb     short loc_4047E9
.text:004047C6
.text:004047C6 loc_4047C6:                             ; CODE XREF: sub_4042E0+507↓j
.text:004047C6                 mov     eax, [esp+0BCh+var_80]
.text:004047CA                 mov     ecx, [esp+0BCh+var_68]
.text:004047CE                 mov     ebx, [esp+0BCh+var_84]
.text:004047D2                 mov     edi, [eax+ebp*4]
.text:004047D5                 mov     [ecx+ebp*4], edi
.text:004047D8                 mov     edx, [ebx+ebp*4]
.text:004047DB                 mov     edi, [esp+0BCh+var_6C]
.text:004047DF                 mov     [edi+ebp*4], edx
.text:004047E2                 inc     ebp
.text:004047E3                 cmp     ebp, [esp+0BCh+var_5C]
.text:004047E7                 jb      short loc_4047C6
.text:004047E9
.text:004047E9 loc_4047E9:                             ; CODE XREF: sub_4042E0+281↑j
.text:004047E9                                         ; sub_4042E0+4E4↑j ...
.text:004047E9                 mov     ebp, [esp+0BCh+arg_18]
.text:004047F0                 test    ebp, ebp
.text:004047F2                 jz      loc_404A02
.text:004047F8                 mov     edx, [esp+0BCh+arg_0]
.text:004047FF                 movzx   eax, byte ptr [edx+1Ch]
.text:00404803                 test    al, 10h
.text:00404805                 jnz     loc_404A02
.text:0040480B                 shr     al, 1
.text:0040480D                 and     eax, 3
.text:00404810                 jnz     loc_404A68
.text:00404816                 mov     eax, [esp+0BCh+var_5C]
.text:0040481A                 inc     eax
.text:0040481B                 cmp     eax, 1Eh
.text:0040481E                 jnb     short loc_404825
.text:00404820                 mov     eax, 1Eh
.text:00404825
.text:00404825 loc_404825:                             ; CODE XREF: sub_4042E0+53E↑j
.text:00404825                 mov     ebp, [esp+0BCh+arg_18]
.text:0040482C                 mov     [ebp+0], eax
.text:0040482F                 shl     eax, 2
.text:00404832                 mov     [esp+0BCh+Size], eax ; Size
.text:00404835                 call    malloc
.text:0040483A                 mov     edi, [esp+0BCh+arg_18]
.text:00404841                 mov     ebx, [edi]
.text:00404843                 mov     [edi+4], eax
.text:00404846                 shl     ebx, 2
.text:00404849                 mov     [esp+0BCh+Size], ebx ; Size
.text:0040484C                 call    malloc
.text:00404851                 mov     ecx, [esp+0BCh+arg_18]
.text:00404858                 mov     esi, [ecx+4]
.text:0040485B                 mov     [ecx+8], eax
.text:0040485E                 test    esi, esi
.text:00404860                 jz      loc_404A61
.text:00404866                 test    eax, eax
.text:00404868                 jz      loc_404A61
.text:0040486E                 mov     edx, [esp+0BCh+arg_0]
.text:00404875                 movzx   ecx, byte ptr [edx+1Ch]
.text:00404879                 and     cl, 0F9h
.text:0040487C                 or      cl, 2
.text:0040487F                 mov     [edx+1Ch], cl
.text:00404882
.text:00404882 loc_404882:                             ; CODE XREF: sub_4042E0+7ED↓j
.text:00404882                 mov     ecx, [esp+0BCh+arg_18]
.text:00404889                 mov     edx, [ecx]
.text:0040488B
.text:0040488B loc_40488B:                             ; CODE XREF: sub_4042E0+794↓j
.text:0040488B                                         ; sub_4042E0+7A9↓j
.text:0040488B                 test    edx, edx
.text:0040488D                 jz      short loc_4048D8
.text:0040488F                 mov     esi, [esp+0BCh+arg_18]
.text:00404896                 mov     edi, [esp+0BCh+var_3C]
.text:0040489D                 mov     edx, [esp+0BCh+arg_14]
.text:004048A4                 cmp     [esp+0BCh+var_48], edi
.text:004048A8                 mov     ebp, [esi+4]
.text:004048AB                 mov     [ebp+0], edx
.text:004048AE                 mov     edx, [esi+8]
.text:004048B1                 jz      loc_404A4F
.text:004048B7                 mov     eax, [esp+0BCh+var_44]
.text:004048BB                 mov     esi, [esp+0BCh+arg_C]
.text:004048C2                 mov     ecx, [esp+0BCh+arg_8]
.text:004048C9                 sub     eax, esi
.text:004048CB                 add     eax, ecx
.text:004048CD
.text:004048CD loc_4048CD:                             ; CODE XREF: sub_4042E0+77C↓j
.text:004048CD                 mov     [edx], eax
.text:004048CF                 mov     edi, [esp+0BCh+arg_18]
.text:004048D6                 mov     edx, [edi]
.text:004048D8
.text:004048D8 loc_4048D8:                             ; CODE XREF: sub_4042E0+5AD↑j
.text:004048D8                 mov     ebp, 1
.text:004048DD
.text:004048DD loc_4048DD:                             ; CODE XREF: sub_4042E0+6A8↓j
.text:004048DD                 cmp     edx, [esp+0BCh+var_5C]
.text:004048E1                 mov     eax, edx
.text:004048E3                 jbe     short loc_4048E9
.text:004048E5                 mov     eax, [esp+0BCh+var_5C]
.text:004048E9
.text:004048E9 loc_4048E9:                             ; CODE XREF: sub_4042E0+603↑j
.text:004048E9                 cmp     ebp, eax
.text:004048EB                 jnb     loc_4049D3
.text:004048F1                 mov     ebx, [esp+0BCh+var_68]
.text:004048F5                 mov     eax, [ebx+ebp*4]
.text:004048F8                 cmp     eax, offset unk_413290
.text:004048FD                 jz      loc_4049B6
.text:00404903                 mov     esi, [esp+0BCh+var_6C]
.text:00404907                 mov     edx, [esi+ebp*4]
.text:0040490A                 cmp     edx, offset unk_413290
.text:00404910                 jz      loc_4049B6
.text:00404916                 mov     edi, [esp+0BCh+arg_8]
.text:0040491D                 mov     ebx, [esp+0BCh+arg_18]
.text:00404924                 test    edi, edi
.text:00404926                 mov     ecx, [ebx+4]
.text:00404929                 jz      short loc_4049A2
.text:0040492B                 cmp     [esp+0BCh+arg_4], eax
.text:00404932                 ja      short loc_4049A2
.text:00404934                 cmp     eax, [esp+0BCh+var_34]
.text:0040493B                 ja      short loc_4049A2
.text:0040493D                 mov     esi, [esp+0BCh+arg_4]
.text:00404944                 sub     eax, esi
.text:00404946
.text:00404946 loc_404946:                             ; CODE XREF: sub_4042E0+6D4↓j
.text:00404946                 mov     [ecx+ebp*4], eax
.text:00404949                 mov     esi, [esp+0BCh+arg_18]
.text:00404950                 mov     eax, [esp+0BCh+arg_8]
.text:00404957                 mov     ecx, [esi+8]
.text:0040495A                 test    eax, eax
.text:0040495C                 jz      short loc_40498D
.text:0040495E                 cmp     [esp+0BCh+arg_4], edx
.text:00404965                 ja      short loc_40498D
.text:00404967                 cmp     edx, [esp+0BCh+var_34]
.text:0040496E                 ja      short loc_40498D
.text:00404970                 mov     eax, edx
.text:00404972                 mov     edx, [esp+0BCh+arg_4]
.text:00404979                 sub     eax, edx
.text:0040497B
.text:0040497B loc_40497B:                             ; CODE XREF: sub_4042E0+6C0↓j
.text:0040497B                 mov     [ecx+ebp*4], eax
.text:0040497E
.text:0040497E loc_40497E:                             ; CODE XREF: sub_4042E0+6F1↓j
.text:0040497E                 mov     ecx, [esp+0BCh+arg_18]
.text:00404985                 inc     ebp
.text:00404986                 mov     edx, [ecx]
.text:00404988                 jmp     loc_4048DD
.text:0040498D ; ---------------------------------------------------------------------------
.text:0040498D
.text:0040498D loc_40498D:                             ; CODE XREF: sub_4042E0+67C↑j
.text:0040498D                                         ; sub_4042E0+685↑j ...
.text:0040498D                 mov     eax, [esp+0BCh+arg_C]
.text:00404994                 mov     edi, [esp+0BCh+arg_8]
.text:0040499B                 sub     edx, eax
.text:0040499D                 lea     eax, [edi+edx]
.text:004049A0                 jmp     short loc_40497B
.text:004049A2 ; ---------------------------------------------------------------------------
.text:004049A2
.text:004049A2 loc_4049A2:                             ; CODE XREF: sub_4042E0+649↑j
.text:004049A2                                         ; sub_4042E0+652↑j ...
.text:004049A2                 mov     ebx, [esp+0BCh+arg_C]
.text:004049A9                 mov     edi, [esp+0BCh+arg_8]
.text:004049B0                 sub     eax, ebx
.text:004049B2                 add     eax, edi
.text:004049B4                 jmp     short loc_404946
.text:004049B6 ; ---------------------------------------------------------------------------
.text:004049B6
.text:004049B6 loc_4049B6:                             ; CODE XREF: sub_4042E0+61D↑j
.text:004049B6                                         ; sub_4042E0+630↑j
.text:004049B6                 mov     eax, [esp+0BCh+arg_18]
.text:004049BD                 mov     ecx, [eax+4]
.text:004049C0                 mov     edx, [eax+8]
.text:004049C3                 mov     dword ptr [edx+ebp*4], 0FFFFFFFFh
.text:004049CA                 mov     dword ptr [ecx+ebp*4], 0FFFFFFFFh
.text:004049D1                 jmp     short loc_40497E
.text:004049D3 ; ---------------------------------------------------------------------------
.text:004049D3
.text:004049D3 loc_4049D3:                             ; CODE XREF: sub_4042E0+60B↑j
.text:004049D3                 mov     ebp, [esp+0BCh+var_5C]
.text:004049D7                 cmp     ebp, edx
.text:004049D9                 jnb     short loc_404A02
.text:004049DB                 mov     esi, [esp+0BCh+arg_18]
.text:004049E2                 mov     edx, [esi+4]
.text:004049E5                 mov     eax, [esi+8]
.text:004049E8
.text:004049E8 loc_4049E8:                             ; CODE XREF: sub_4042E0+720↓j
.text:004049E8                 mov     dword ptr [eax+ebp*4], 0FFFFFFFFh
.text:004049EF                 mov     edi, [esp+0BCh+arg_18]
.text:004049F6                 mov     dword ptr [edx+ebp*4], 0FFFFFFFFh
.text:004049FD                 inc     ebp
.text:004049FE                 cmp     ebp, [edi]
.text:00404A00                 jb      short loc_4049E8
.text:00404A02
.text:00404A02 loc_404A02:                             ; CODE XREF: sub_4042E0+512↑j
.text:00404A02                                         ; sub_4042E0+525↑j ...
.text:00404A02                 mov     eax, [esp+0BCh+var_44]
.text:00404A06                 mov     ecx, [esp+0BCh+arg_14]
.text:00404A0D                 mov     ebp, [esp+0BCh+var_3C]
.text:00404A14                 sub     eax, ecx
.text:00404A16                 cmp     [esp+0BCh+var_48], ebp
.text:00404A1A                 jz      short loc_404A42
.text:00404A1C                 mov     ebx, [esp+0BCh+arg_8]
.text:00404A23                 mov     ebp, eax
.text:00404A25                 sub     [esp+0BCh+arg_C], ebx
.text:00404A2C                 mov     edx, [esp+0BCh+arg_C]
.text:00404A33                 sub     ebp, edx
.text:00404A35
.text:00404A35 loc_404A35:                             ; CODE XREF: sub_4042E0+76D↓j
.text:00404A35                 mov     eax, ebp
.text:00404A37
.text:00404A37 loc_404A37:                             ; CODE XREF: sub_4042E0+89↑j
.text:00404A37                                         ; sub_4042E0+786↓j ...
.text:00404A37                 add     esp, 0ACh
.text:00404A3D                 pop     ebx
.text:00404A3E                 pop     esi
.text:00404A3F                 pop     edi
.text:00404A40                 pop     ebp
.text:00404A41                 retn
.text:00404A42 ; ---------------------------------------------------------------------------
.text:00404A42
.text:00404A42 loc_404A42:                             ; CODE XREF: sub_4042E0+73A↑j
.text:00404A42                 mov     esi, [esp+0BCh+arg_4]
.text:00404A49                 mov     ebp, eax
.text:00404A4B                 sub     ebp, esi
.text:00404A4D                 jmp     short loc_404A35
.text:00404A4F ; ---------------------------------------------------------------------------
.text:00404A4F
.text:00404A4F loc_404A4F:                             ; CODE XREF: sub_4042E0+5D1↑j
.text:00404A4F                 mov     eax, [esp+0BCh+var_44]
.text:00404A53                 mov     ebx, [esp+0BCh+arg_4]
.text:00404A5A                 sub     eax, ebx
.text:00404A5C                 jmp     loc_4048CD
.text:00404A61 ; ---------------------------------------------------------------------------
.text:00404A61
.text:00404A61 loc_404A61:                             ; CODE XREF: sub_4042E0+580↑j
.text:00404A61                                         ; sub_4042E0+588↑j ...
.text:00404A61                 mov     eax, 0FFFFFFFEh
.text:00404A66                 jmp     short loc_404A37
.text:00404A68 ; ---------------------------------------------------------------------------
.text:00404A68
.text:00404A68 loc_404A68:                             ; CODE XREF: sub_4042E0+530↑j
.text:00404A68                 dec     eax
.text:00404A69                 jz      short loc_404A79
.text:00404A6B                 mov     eax, [esp+0BCh+arg_18]
.text:00404A72                 mov     edx, [eax]
.text:00404A74                 jmp     loc_40488B
.text:00404A79 ; ---------------------------------------------------------------------------
.text:00404A79
.text:00404A79 loc_404A79:                             ; CODE XREF: sub_4042E0+789↑j
.text:00404A79                 mov     ecx, [esp+0BCh+arg_18]
.text:00404A80                 mov     eax, [esp+0BCh+var_5C]
.text:00404A84                 mov     edx, [ecx]
.text:00404A86                 inc     eax
.text:00404A87                 cmp     edx, eax
.text:00404A89                 jnb     loc_40488B
.text:00404A8F                 mov     [ecx], eax
.text:00404A91                 shl     eax, 2
.text:00404A94                 mov     [esp+0BCh+var_B8], eax ; Size
.text:00404A98                 mov     edx, [ecx+4]
.text:00404A9B                 mov     [esp+0BCh+Size], edx ; Block
.text:00404A9E                 call    realloc
.text:00404AA3                 mov     edi, [esp+0BCh+arg_18]
.text:00404AAA                 mov     ebp, [edi]
.text:00404AAC                 mov     [edi+4], eax
.text:00404AAF                 shl     ebp, 2
.text:00404AB2                 mov     [esp+0BCh+var_B8], ebp ; Size
.text:00404AB6                 mov     ebx, [edi+8]
.text:00404AB9                 mov     [esp+0BCh+Size], ebx ; Block
.text:00404ABC                 call    realloc
.text:00404AC1                 mov     [edi+8], eax
.text:00404AC4                 mov     esi, [edi+4]
.text:00404AC7                 test    esi, esi
.text:00404AC9                 jz      short loc_404A61
.text:00404ACB                 test    eax, eax
.text:00404ACD                 jnz     loc_404882
.text:00404AD3                 jmp     short loc_404A61
.text:00404AD5 ; ---------------------------------------------------------------------------
.text:00404AD5
.text:00404AD5 loc_404AD5:                             ; CODE XREF: sub_4042E0+107↑j
.text:00404AD5                                         ; sub_4042E0+124↑j ...
.text:00404AD5                 mov     eax, 0FFFFFFFFh
.text:00404ADA                 jmp     loc_404A37
.text:00404ADF ; ---------------------------------------------------------------------------
.text:00404ADF
.text:00404ADF loc_404ADF:                             ; CODE XREF: sub_4042E0+2D8↑j
.text:00404ADF                 mov     ebp, [esp+0BCh+var_7C]
.text:00404AE3                 test    ebp, ebp
.text:00404AE5                 jz      loc_4047E9
.text:00404AEB                 test    al, al
.text:00404AED                 jnz     loc_4047E9
.text:00404AF3                 jmp     loc_40478A
.text:00404AF8 ; ---------------------------------------------------------------------------
.text:00404AF8
.text:00404AF8 loc_404AF8:                             ; CODE XREF: sub_4042E0+2BE↑j
.text:00404AF8                 mov     ebx, [esp+0BCh+var_3C]
.text:00404AFF                 cmp     [esp+0BCh+var_48], ebx
.text:00404B03                 setnz   al
.text:00404B06                 jmp     loc_4045AF
.text:00404B0B ; ---------------------------------------------------------------------------
.text:00404B0B
.text:00404B0B loc_404B0B:                             ; CODE XREF: sub_4042E0:loc_404557↑j
.text:00404B0B                                         ; sub_4042E0+898↓j ...
.text:00404B0B                 mov     edx, [esp+0BCh+var_50] ; jumptable 00404557 case 0
.text:00404B0B                                         ; jumptable 00404ED6 case 0
.text:00404B0B                                         ; jumptable 00404FA8 case 0
.text:00404B0F                 mov     eax, offset loc_404559
.text:00404B14                 cmp     [esp+0BCh+var_4C], edx
.text:00404B18                 jnz     loc_404543
.text:00404B1E                 jmp     loc_404557
.text:00404B23 ; ---------------------------------------------------------------------------
.text:00404B23
.text:00404B23 loc_404B23:                             ; CODE XREF: sub_4042E0:loc_404557↑j
.text:00404B23                                         ; sub_4042E0+BF6↓j ...
.text:00404B23                 jmp     loc_4047E9      ; jumptable 00404557 case 1
.text:00404B23                                         ; jumptable 00404ED6 case 1
.text:00404B23                                         ; jumptable 00404FA8 case 1
.text:00404B28 ; ---------------------------------------------------------------------------
.text:00404B28
.text:00404B28 loc_404B28:                             ; CODE XREF: sub_4042E0:loc_404557↑j
.text:00404B28                                         ; sub_4042E0+BF6↓j ...
.text:00404B28                 mov     eax, [esp+0BCh+var_4C] ; jumptable 00404557 case 2
.text:00404B28                                         ; jumptable 00404ED6 case 2
.text:00404B28                                         ; jumptable 00404FA8 case 2
.text:00404B2C                 mov     edi, [esp+0BCh+var_58]
.text:00404B30                 movzx   ebp, byte ptr [eax]
.text:00404B33                 inc     eax
.text:00404B34                 test    edi, edi
.text:00404B36                 mov     [esp+0BCh+var_4C], eax
.text:00404B3A                 jz      loc_404BC9
.text:00404B40
.text:00404B40 loc_404B40:                             ; CODE XREF: sub_4042E0+890↓j
.text:00404B40                 mov     ecx, [esp+0BCh+var_48]
.text:00404B44                 cmp     [esp+0BCh+var_44], ecx
.text:00404B48                 jz      short loc_404BA6
.text:00404B4A
.text:00404B4A loc_404B4A:                             ; CODE XREF: sub_4042E0+8E7↓j
.text:00404B4A                 mov     ecx, [esp+0BCh+var_44]
.text:00404B4E                 mov     ebx, [esp+0BCh+var_4C]
.text:00404B52                 mov     edx, [esp+0BCh+var_58]
.text:00404B56                 movzx   edi, byte ptr [ecx]
.text:00404B59                 inc     ecx
.text:00404B5A                 movzx   eax, byte ptr [ebx]
.text:00404B5D                 inc     ebx
.text:00404B5E                 mov     [esp+0BCh+var_4C], ebx
.text:00404B62                 mov     [esp+0BCh+var_44], ecx
.text:00404B66                 cmp     [edi+edx], al
.text:00404B69                 jnz     loc_404732
.text:00404B6F                 dec     ebp
.text:00404B70                 jnz     short loc_404B40
.text:00404B72
.text:00404B72 loc_404B72:                             ; CODE XREF: sub_4042E0+916↓j
.text:00404B72                 mov     ebp, [esp+0BCh+var_8C]
.text:00404B76                 test    ebp, ebp
.text:00404B78                 jnz     short loc_404B0B ; jumptable 00404557 case 0
.text:00404B78                                         ; jumptable 00404ED6 case 0
.text:00404B78                                         ; jumptable 00404FA8 case 0
.text:00404B7A                 mov     [esp+0BCh+var_8C], 1
.text:00404B82                 mov     eax, [esp+0BCh+var_60]
.text:00404B86                 mov     edx, [esp+0BCh+var_64]
.text:00404B8A                 cmp     eax, edx
.text:00404B8C                 ja      loc_404B0B      ; jumptable 00404557 case 0
.text:00404B8C                                         ; jumptable 00404ED6 case 0
.text:00404B8C                                         ; jumptable 00404FA8 case 0
.text:00404B92
.text:00404B92 loc_404B92:                             ; CODE XREF: sub_4042E0+8BF↓j
.text:00404B92                 mov     esi, [esp+0BCh+var_78]
.text:00404B96                 or      byte ptr [esi+eax*4], 18h
.text:00404B9A                 inc     eax
.text:00404B9B                 cmp     eax, [esp+0BCh+var_64]
.text:00404B9F                 jbe     short loc_404B92
.text:00404BA1                 jmp     loc_404B0B      ; jumptable 00404557 case 0
.text:00404BA1                                         ; jumptable 00404ED6 case 0
.text:00404BA1                                         ; jumptable 00404FA8 case 0
.text:00404BA6 ; ---------------------------------------------------------------------------
.text:00404BA6
.text:00404BA6 loc_404BA6:                             ; CODE XREF: sub_4042E0+868↑j
.text:00404BA6                                         ; sub_4042E0+8E5↓j
.text:00404BA6                 mov     edx, [esp+0BCh+var_40]
.text:00404BAA                 cmp     [esp+0BCh+var_48], edx
.text:00404BAE                 jz      loc_404732
.text:00404BB4                 mov     [esp+0BCh+var_48], edx
.text:00404BB8                 mov     ebx, [esp+0BCh+arg_C]
.text:00404BBF                 cmp     ebx, edx
.text:00404BC1                 mov     [esp+0BCh+var_44], ebx
.text:00404BC5                 jz      short loc_404BA6
.text:00404BC7                 jmp     short loc_404B4A
.text:00404BC9 ; ---------------------------------------------------------------------------
.text:00404BC9
.text:00404BC9 loc_404BC9:                             ; CODE XREF: sub_4042E0+85A↑j
.text:00404BC9                                         ; sub_4042E0+914↓j
.text:00404BC9                 mov     esi, [esp+0BCh+var_48]
.text:00404BCD                 cmp     [esp+0BCh+var_44], esi
.text:00404BD1                 jz      short loc_404C00
.text:00404BD3
.text:00404BD3 loc_404BD3:                             ; CODE XREF: sub_4042E0+941↓j
.text:00404BD3                 mov     ebx, [esp+0BCh+var_4C]
.text:00404BD7                 mov     eax, [esp+0BCh+var_44]
.text:00404BDB                 movzx   edx, byte ptr [ebx]
.text:00404BDE                 inc     ebx
.text:00404BDF                 mov     [esp+0BCh+var_4C], ebx
.text:00404BE3                 movzx   ecx, byte ptr [eax]
.text:00404BE6                 inc     eax
.text:00404BE7                 mov     [esp+0BCh+var_44], eax
.text:00404BEB                 cmp     cl, dl
.text:00404BED                 jnz     loc_404732
.text:00404BF3                 dec     ebp
.text:00404BF4                 jnz     short loc_404BC9
.text:00404BF6                 jmp     loc_404B72
.text:00404BF6 ; ---------------------------------------------------------------------------
.text:00404BFB                 align 10h
.text:00404C00
.text:00404C00 loc_404C00:                             ; CODE XREF: sub_4042E0+8F1↑j
.text:00404C00                                         ; sub_4042E0+93F↓j
.text:00404C00                 mov     esi, [esp+0BCh+var_40]
.text:00404C04                 cmp     [esp+0BCh+var_48], esi
.text:00404C08                 jz      loc_404732
.text:00404C0E                 mov     [esp+0BCh+var_48], esi
.text:00404C12                 mov     edi, [esp+0BCh+arg_C]
.text:00404C19                 cmp     edi, esi
.text:00404C1B                 mov     [esp+0BCh+var_44], edi
.text:00404C1F                 jz      short loc_404C00
.text:00404C21                 jmp     short loc_404BD3
.text:00404C23 ; ---------------------------------------------------------------------------
.text:00404C23
.text:00404C23 loc_404C23:                             ; CODE XREF: sub_4042E0:loc_404557↑j
.text:00404C23                                         ; sub_4042E0+BF6↓j ...
.text:00404C23                 mov     edi, [esp+0BCh+var_48] ; jumptable 00404557 case 3
.text:00404C23                                         ; jumptable 00404ED6 case 3
.text:00404C23                                         ; jumptable 00404FA8 case 3
.text:00404C27                 cmp     [esp+0BCh+var_44], edi
.text:00404C2B                 jz      loc_406502
.text:00404C31
.text:00404C31 loc_404C31:                             ; CODE XREF: sub_4042E0+2243↓j
.text:00404C31                 mov     eax, [esp+0BCh+arg_0]
.text:00404C38                 test    byte ptr [eax+0Ch], 40h
.text:00404C3C                 jnz     short loc_404C60
.text:00404C3E                 mov     ebx, [esp+0BCh+var_58]
.text:00404C42                 test    ebx, ebx
.text:00404C44                 jz      loc_4064F6
.text:00404C4A                 mov     esi, [esp+0BCh+var_44]
.text:00404C4E                 mov     edx, [esp+0BCh+var_58]
.text:00404C52                 movzx   ebp, byte ptr [esi]
.text:00404C55                 cmp     byte ptr [ebp+edx+0], 0Ah
.text:00404C5A
.text:00404C5A loc_404C5A:                             ; CODE XREF: sub_4042E0+221D↓j
.text:00404C5A                 jz      loc_404732
.text:00404C60
.text:00404C60 loc_404C60:                             ; CODE XREF: sub_4042E0+95C↑j
.text:00404C60                 mov     ecx, [esp+0BCh+arg_0]
.text:00404C67                 cmp     byte ptr [ecx+0Ch], 0
.text:00404C6B                 jns     short loc_404C8F
.text:00404C6D                 mov     ebx, [esp+0BCh+var_58]
.text:00404C71                 test    ebx, ebx
.text:00404C73                 jz      loc_4064EA
.text:00404C79                 mov     edx, [esp+0BCh+var_44]
.text:00404C7D                 mov     eax, [esp+0BCh+var_58]
.text:00404C81                 movzx   ebp, byte ptr [edx]
.text:00404C84                 cmp     byte ptr [ebp+eax+0], 0
.text:00404C89
.text:00404C89 loc_404C89:                             ; CODE XREF: sub_4042E0+2211↓j
.text:00404C89                 jz      loc_404732
.text:00404C8F
.text:00404C8F loc_404C8F:                             ; CODE XREF: sub_4042E0+98B↑j
.text:00404C8F                 mov     esi, [esp+0BCh+var_8C]
.text:00404C93                 test    esi, esi
.text:00404C95                 jnz     short loc_404CBA
.text:00404C97                 mov     [esp+0BCh+var_8C], 1
.text:00404C9F                 mov     eax, [esp+0BCh+var_60]
.text:00404CA3                 mov     ecx, [esp+0BCh+var_64]
.text:00404CA7                 cmp     eax, ecx
.text:00404CA9                 ja      short loc_404CBA
.text:00404CAB
.text:00404CAB loc_404CAB:                             ; CODE XREF: sub_4042E0+9D8↓j
.text:00404CAB                 mov     ebx, [esp+0BCh+var_78]
.text:00404CAF                 or      byte ptr [ebx+eax*4], 18h
.text:00404CB3                 inc     eax
.text:00404CB4                 cmp     eax, [esp+0BCh+var_64]
.text:00404CB8                 jbe     short loc_404CAB
.text:00404CBA
.text:00404CBA loc_404CBA:                             ; CODE XREF: sub_4042E0+9B5↑j
.text:00404CBA                                         ; sub_4042E0+9C9↑j
.text:00404CBA                 inc     [esp+0BCh+var_44]
.text:00404CBE
.text:00404CBE loc_404CBE:                             ; CODE XREF: sub_4042E0:loc_404D84↓j
.text:00404CBE                                         ; sub_4042E0+B8C↓j ...
.text:00404CBE                 mov     edx, [esp+0BCh+var_50]
.text:00404CC2                 mov     eax, offset loc_404559
.text:00404CC7                 cmp     [esp+0BCh+var_4C], edx
.text:00404CCB                 jz      loc_404557
.text:00404CD1                 mov     esi, [esp+0BCh+var_4C]
.text:00404CD5
.text:00404CD5 loc_404CD5:                             ; CODE XREF: sub_4042E0+F64↓j
.text:00404CD5                 movzx   edi, byte ptr [esi]
.text:00404CD8                 inc     esi
.text:00404CD9                 mov     [esp+0BCh+var_4C], esi
.text:00404CDD                 mov     eax, ds:(jpt_404CE4-18h)[edi*4] ; switch 2 cases
.text:00404CE4                 jmp     eax             ; switch jump
.text:00404CE6 ; ---------------------------------------------------------------------------
.text:00404CE6
.text:00404CE6 loc_404CE6:                             ; DATA XREF: .text:004042D4↑o
.text:00404CE6                 mov     edx, [esp+0BCh+arg_8]
.text:00404CED                 test    edx, edx
.text:00404CEF                 jz      loc_404DC2
.text:00404CF5                 mov     edi, [esp+0BCh+arg_4]
.text:00404CFC                 cmp     [esp+0BCh+var_44], edi
.text:00404D00
.text:00404D00 loc_404D00:                             ; CODE XREF: sub_4042E0+AED↓j
.text:00404D00                 jz      loc_404732
.text:00404D06                 mov     ecx, [esp+0BCh+arg_10]
.text:00404D0D                 test    ecx, ecx
.text:00404D0F                 jz      loc_404732
.text:00404D15                 mov     ebp, [esp+0BCh+var_38]
.text:00404D1C                 cmp     [esp+0BCh+var_44], ebp
.text:00404D20                 jz      loc_404732
.text:00404D26                 mov     edx, [esp+0BCh+var_44]
.text:00404D2A                 dec     edx
.text:00404D2B                 cmp     edx, [esp+0BCh+var_34]
.text:00404D32                 jz      loc_404DB6
.text:00404D38                 mov     ebx, [esp+0BCh+arg_C]
.text:00404D3F                 dec     ebx
.text:00404D40                 cmp     edx, ebx
.text:00404D42                 jz      short loc_404DA9
.text:00404D44                 mov     edi, [esp+0BCh+var_44]
.text:00404D48                 movzx   eax, byte ptr [edi-1]
.text:00404D4C
.text:00404D4C loc_404D4C:                             ; CODE XREF: sub_4042E0+AD4↓j
.text:00404D4C                                         ; sub_4042E0+AE0↓j
.text:00404D4C                 cmp     ds:byte_413190[eax], 1
.text:00404D53                 mov     eax, [esp+0BCh+var_34]
.text:00404D5A                 setz    dl
.text:00404D5D                 cmp     [esp+0BCh+var_44], eax
.text:00404D61                 jz      short loc_404D9D
.text:00404D63                 mov     ebp, [esp+0BCh+arg_C]
.text:00404D6A                 dec     ebp
.text:00404D6B                 cmp     [esp+0BCh+var_44], ebp
.text:00404D6F                 jz      short loc_404D90
.text:00404D71                 mov     esi, [esp+0BCh+var_44]
.text:00404D75                 movzx   eax, byte ptr [esi]
.text:00404D78
.text:00404D78 loc_404D78:                             ; CODE XREF: sub_4042E0+ABB↓j
.text:00404D78                                         ; sub_4042E0+AC7↓j
.text:00404D78                 cmp     ds:byte_413190[eax], 1
.text:00404D7F                 setz    cl
.text:00404D82                 cmp     dl, cl
.text:00404D84
.text:00404D84 loc_404D84:                             ; CODE XREF: sub_4042E0+1A07↓j
.text:00404D84                 jz      loc_404CBE
.text:00404D8A                 jmp     loc_404732
.text:00404D8A ; ---------------------------------------------------------------------------
.text:00404D8F                 align 10h
.text:00404D90
.text:00404D90 loc_404D90:                             ; CODE XREF: sub_4042E0+A8F↑j
.text:00404D90                 mov     ebx, [esp+0BCh+var_34]
.text:00404D97                 movzx   eax, byte ptr [ebx-1]
.text:00404D9B                 jmp     short loc_404D78
.text:00404D9D ; ---------------------------------------------------------------------------
.text:00404D9D
.text:00404D9D loc_404D9D:                             ; CODE XREF: sub_4042E0+A81↑j
.text:00404D9D                 mov     ecx, [esp+0BCh+arg_C]
.text:00404DA4                 movzx   eax, byte ptr [ecx]
.text:00404DA7                 jmp     short loc_404D78
.text:00404DA9 ; ---------------------------------------------------------------------------
.text:00404DA9
.text:00404DA9 loc_404DA9:                             ; CODE XREF: sub_4042E0+A62↑j
.text:00404DA9                 mov     edx, [esp+0BCh+var_34]
.text:00404DB0                 movzx   eax, byte ptr [edx-1]
.text:00404DB4                 jmp     short loc_404D4C
.text:00404DB6 ; ---------------------------------------------------------------------------
.text:00404DB6
.text:00404DB6 loc_404DB6:                             ; CODE XREF: sub_4042E0+A52↑j
.text:00404DB6                 mov     esi, [esp+0BCh+arg_C]
.text:00404DBD                 movzx   eax, byte ptr [esi]
.text:00404DC0                 jmp     short loc_404D4C
.text:00404DC2 ; ---------------------------------------------------------------------------
.text:00404DC2
.text:00404DC2 loc_404DC2:                             ; CODE XREF: sub_4042E0+A0F↑j
.text:00404DC2                 mov     eax, [esp+0BCh+arg_C]
.text:00404DC9                 cmp     [esp+0BCh+var_44], eax
.text:00404DCD                 jmp     loc_404D00
.text:00404DD2 ; ---------------------------------------------------------------------------
.text:00404DD2
.text:00404DD2 loc_404DD2:                             ; DATA XREF: .text:004042D0↑o
.text:00404DD2                 mov     esi, [esp+0BCh+arg_8]
.text:00404DD9                 test    esi, esi
.text:00404DDB                 jz      loc_4064DA
.text:00404DE1                 mov     ebp, [esp+0BCh+arg_4]
.text:00404DE8                 cmp     [esp+0BCh+var_44], ebp
.text:00404DEC
.text:00404DEC loc_404DEC:                             ; CODE XREF: sub_4042E0+2205↓j
.text:00404DEC                 jz      loc_404EB0
.text:00404DF2                 mov     edi, [esp+0BCh+arg_10]
.text:00404DF9                 test    edi, edi
.text:00404DFB                 jz      loc_404EB0
.text:00404E01                 mov     edx, [esp+0BCh+var_38]
.text:00404E08                 cmp     [esp+0BCh+var_44], edx
.text:00404E0C                 jz      loc_404EB0
.text:00404E12                 mov     edx, [esp+0BCh+var_44]
.text:00404E16                 dec     edx
.text:00404E17                 cmp     edx, [esp+0BCh+var_34]
.text:00404E1E                 jz      short loc_404E9D
.text:00404E20                 mov     esi, [esp+0BCh+arg_C]
.text:00404E27                 dec     esi
.text:00404E28                 cmp     edx, esi
.text:00404E2A                 jz      short loc_404E90
.text:00404E2C                 mov     ebx, [esp+0BCh+var_44]
.text:00404E30                 movzx   eax, byte ptr [ebx-1]
.text:00404E34
.text:00404E34 loc_404E34:                             ; CODE XREF: sub_4042E0+BBB↓j
.text:00404E34                                         ; sub_4042E0+BC7↓j
.text:00404E34                 cmp     ds:byte_413190[eax], 1
.text:00404E3B                 mov     eax, [esp+0BCh+var_34]
.text:00404E42                 setz    dl
.text:00404E45                 cmp     [esp+0BCh+var_44], eax
.text:00404E49                 jz      short loc_404E84
.text:00404E4B                 mov     ecx, [esp+0BCh+arg_C]
.text:00404E52                 dec     ecx
.text:00404E53                 cmp     [esp+0BCh+var_44], ecx
.text:00404E57                 jz      short loc_404E77
.text:00404E59                 mov     esi, [esp+0BCh+var_44]
.text:00404E5D                 movzx   eax, byte ptr [esi]
.text:00404E60
.text:00404E60 loc_404E60:                             ; CODE XREF: sub_4042E0+BA2↓j
.text:00404E60                                         ; sub_4042E0+BAE↓j
.text:00404E60                 cmp     ds:byte_413190[eax], 1
.text:00404E67                 setz    bl
.text:00404E6A                 cmp     dl, bl
.text:00404E6C                 jnz     loc_404CBE
.text:00404E72                 jmp     loc_404732
.text:00404E77 ; ---------------------------------------------------------------------------
.text:00404E77
.text:00404E77 loc_404E77:                             ; CODE XREF: sub_4042E0+B77↑j
.text:00404E77                 mov     ebp, [esp+0BCh+var_34]
.text:00404E7E                 movzx   eax, byte ptr [ebp-1]
.text:00404E82                 jmp     short loc_404E60
.text:00404E84 ; ---------------------------------------------------------------------------
.text:00404E84
.text:00404E84 loc_404E84:                             ; CODE XREF: sub_4042E0+B69↑j
.text:00404E84                 mov     edi, [esp+0BCh+arg_C]
.text:00404E8B                 movzx   eax, byte ptr [edi]
.text:00404E8E                 jmp     short loc_404E60
.text:00404E90 ; ---------------------------------------------------------------------------
.text:00404E90
.text:00404E90 loc_404E90:                             ; CODE XREF: sub_4042E0+B4A↑j
.text:00404E90                 mov     ebp, [esp+0BCh+var_34]
.text:00404E97                 movzx   eax, byte ptr [ebp-1]
.text:00404E9B                 jmp     short loc_404E34
.text:00404E9D ; ---------------------------------------------------------------------------
.text:00404E9D
.text:00404E9D loc_404E9D:                             ; CODE XREF: sub_4042E0+B3E↑j
.text:00404E9D                 mov     ecx, [esp+0BCh+arg_C]
.text:00404EA4                 movzx   eax, byte ptr [ecx]
.text:00404EA7                 jmp     short loc_404E34
.text:00404EA7 ; ---------------------------------------------------------------------------
.text:00404EA9                 align 10h
.text:00404EB0
.text:00404EB0 loc_404EB0:                             ; CODE XREF: sub_4042E0:loc_404DEC↑j
.text:00404EB0                                         ; sub_4042E0+B1B↑j ...
.text:00404EB0                 mov     ebp, [esp+0BCh+var_50]
.text:00404EB4                 mov     eax, offset loc_404559
.text:00404EB9                 cmp     [esp+0BCh+var_4C], ebp
.text:00404EBD                 jz      loc_404557
.text:00404EC3                 mov     ebx, [esp+0BCh+var_4C]
.text:00404EC7                 movzx   esi, byte ptr [ebx]
.text:00404ECA                 inc     ebx
.text:00404ECB                 mov     [esp+0BCh+var_4C], ebx
.text:00404ECF                 mov     eax, ds:jpt_404557[esi*4] ; switch 6 cases
.text:00404ED6                 jmp     eax             ; switch jump
.text:00404ED8 ; ---------------------------------------------------------------------------
.text:00404ED8
.text:00404ED8 loc_404ED8:                             ; DATA XREF: .text:004042CC↑o
.text:00404ED8                 mov     ecx, [esp+0BCh+arg_8]
.text:00404EDF                 test    ecx, ecx
.text:00404EE1                 jz      loc_4064CA
.text:00404EE7                 mov     eax, [esp+0BCh+arg_4]
.text:00404EEE                 cmp     [esp+0BCh+var_44], eax
.text:00404EF2
.text:00404EF2 loc_404EF2:                             ; CODE XREF: sub_4042E0+21F5↓j
.text:00404EF2                 jz      loc_404732
.text:00404EF8                 mov     edi, [esp+0BCh+arg_10]
.text:00404EFF                 test    edi, edi
.text:00404F01                 jz      loc_404732
.text:00404F07                 mov     edx, [esp+0BCh+var_44]
.text:00404F0B                 dec     edx
.text:00404F0C                 cmp     edx, [esp+0BCh+var_34]
.text:00404F13                 jz      loc_4064BA
.text:00404F19                 mov     ebx, [esp+0BCh+arg_C]
.text:00404F20                 dec     ebx
.text:00404F21                 cmp     edx, ebx
.text:00404F23                 jz      loc_4064AA
.text:00404F29                 mov     ecx, [esp+0BCh+var_44]
.text:00404F2D                 movzx   eax, byte ptr [ecx-1]
.text:00404F31
.text:00404F31 loc_404F31:                             ; CODE XREF: sub_4042E0+21D5↓j
.text:00404F31                                         ; sub_4042E0+21E5↓j
.text:00404F31                 cmp     ds:byte_413190[eax], 1
.text:00404F38                 jnz     loc_404732
.text:00404F3E                 mov     eax, [esp+0BCh+var_38]
.text:00404F45                 cmp     [esp+0BCh+var_44], eax
.text:00404F49                 jz      short loc_404F82
.text:00404F4B                 mov     edx, [esp+0BCh+var_34]
.text:00404F52                 cmp     [esp+0BCh+var_44], edx
.text:00404F56                 jz      loc_40649B
.text:00404F5C                 mov     ebp, [esp+0BCh+arg_C]
.text:00404F63                 dec     ebp
.text:00404F64                 cmp     [esp+0BCh+var_44], ebp
.text:00404F68                 jz      loc_40648B
.text:00404F6E                 mov     esi, [esp+0BCh+var_44]
.text:00404F72                 movzx   eax, byte ptr [esi]
.text:00404F75
.text:00404F75 loc_404F75:                             ; CODE XREF: sub_4042E0+21B6↓j
.text:00404F75                                         ; sub_4042E0+21C5↓j
.text:00404F75                 cmp     ds:byte_413190[eax], 1
.text:00404F7C                 jz      loc_404732
.text:00404F82
.text:00404F82 loc_404F82:                             ; CODE XREF: sub_4042E0+C69↑j
.text:00404F82                                         ; sub_4042E0+E23↓j ...
.text:00404F82                 mov     ecx, [esp+0BCh+var_50]
.text:00404F86                 mov     eax, offset loc_404559
.text:00404F8B                 cmp     [esp+0BCh+var_4C], ecx
.text:00404F8F                 jz      loc_404557
.text:00404F95                 mov     edi, [esp+0BCh+var_4C]
.text:00404F99                 movzx   edx, byte ptr [edi]
.text:00404F9C                 inc     edi
.text:00404F9D                 mov     [esp+0BCh+var_4C], edi
.text:00404FA1                 mov     eax, ds:jpt_404557[edx*4] ; switch 6 cases
.text:00404FA8                 jmp     eax             ; switch jump
.text:00404FAA ; ---------------------------------------------------------------------------
.text:00404FAA
.text:00404FAA loc_404FAA:                             ; DATA XREF: .text:004042C8↑o
.text:00404FAA                 mov     ebp, [esp+0BCh+var_38]
.text:00404FB1                 cmp     [esp+0BCh+var_44], ebp
.text:00404FB5                 jz      loc_404732
.text:00404FBB                 mov     eax, [esp+0BCh+var_34]
.text:00404FC2                 cmp     [esp+0BCh+var_44], eax
.text:00404FC6                 jz      loc_405087
.text:00404FCC                 mov     esi, [esp+0BCh+arg_C]
.text:00404FD3                 dec     esi
.text:00404FD4                 cmp     [esp+0BCh+var_44], esi
.text:00404FD8                 jz      loc_405077
.text:00404FDE                 mov     edx, [esp+0BCh+var_44]
.text:00404FE2                 movzx   eax, byte ptr [edx]
.text:00404FE5
.text:00404FE5 loc_404FE5:                             ; CODE XREF: sub_4042E0+DA2↓j
.text:00404FE5                                         ; sub_4042E0+DB1↓j
.text:00404FE5                 cmp     ds:byte_413190[eax], 1
.text:00404FEC                 jnz     loc_404732
.text:00404FF2                 mov     edi, [esp+0BCh+arg_8]
.text:00404FF9                 test    edi, edi
.text:00404FFB                 jz      short loc_40506A
.text:00404FFD                 mov     ebp, [esp+0BCh+arg_4]
.text:00405004                 cmp     [esp+0BCh+var_44], ebp
.text:00405008
.text:00405008 loc_405008:                             ; CODE XREF: sub_4042E0+D95↓j
.text:00405008                 jz      loc_404EB0
.text:0040500E                 mov     ebx, [esp+0BCh+arg_10]
.text:00405015                 test    ebx, ebx
.text:00405017                 jz      loc_404EB0
.text:0040501D                 mov     edx, [esp+0BCh+var_44]
.text:00405021                 dec     edx
.text:00405022                 cmp     edx, [esp+0BCh+var_34]
.text:00405029                 jz      short loc_40505E
.text:0040502B                 mov     ecx, [esp+0BCh+arg_C]
.text:00405032                 dec     ecx
.text:00405033                 cmp     edx, ecx
.text:00405035                 jz      short loc_405051
.text:00405037                 mov     edi, [esp+0BCh+var_44]
.text:0040503B                 movzx   eax, byte ptr [edi-1]
.text:0040503F
.text:0040503F loc_40503F:                             ; CODE XREF: sub_4042E0+D7C↓j
.text:0040503F                                         ; sub_4042E0+D88↓j
.text:0040503F                 cmp     ds:byte_413190[eax], 1
.text:00405046                 jnz     loc_404EB0
.text:0040504C                 jmp     loc_404732
.text:00405051 ; ---------------------------------------------------------------------------
.text:00405051
.text:00405051 loc_405051:                             ; CODE XREF: sub_4042E0+D55↑j
.text:00405051                 mov     edx, [esp+0BCh+var_34]
.text:00405058                 movzx   eax, byte ptr [edx-1]
.text:0040505C                 jmp     short loc_40503F
.text:0040505E ; ---------------------------------------------------------------------------
.text:0040505E
.text:0040505E loc_40505E:                             ; CODE XREF: sub_4042E0+D49↑j
.text:0040505E                 mov     esi, [esp+0BCh+arg_C]
.text:00405065                 movzx   eax, byte ptr [esi]
.text:00405068                 jmp     short loc_40503F
.text:0040506A ; ---------------------------------------------------------------------------
.text:0040506A
.text:0040506A loc_40506A:                             ; CODE XREF: sub_4042E0+D1B↑j
.text:0040506A                 mov     eax, [esp+0BCh+arg_C]
.text:00405071                 cmp     [esp+0BCh+var_44], eax
.text:00405075                 jmp     short loc_405008
.text:00405077 ; ---------------------------------------------------------------------------
.text:00405077
.text:00405077 loc_405077:                             ; CODE XREF: sub_4042E0+CF8↑j
.text:00405077                 mov     ecx, [esp+0BCh+var_34]
.text:0040507E                 movzx   eax, byte ptr [ecx-1]
.text:00405082                 jmp     loc_404FE5
.text:00405087 ; ---------------------------------------------------------------------------
.text:00405087
.text:00405087 loc_405087:                             ; CODE XREF: sub_4042E0+CE6↑j
.text:00405087                 mov     ebx, [esp+0BCh+arg_C]
.text:0040508E                 movzx   eax, byte ptr [ebx]
.text:00405091                 jmp     loc_404FE5
.text:00405096 ; ---------------------------------------------------------------------------
.text:00405096
.text:00405096 loc_405096:                             ; DATA XREF: .text:004042C4↑o
.text:00405096                 mov     ebp, [esp+0BCh+var_48]
.text:0040509A                 cmp     [esp+0BCh+var_44], ebp
.text:0040509E                 jz      loc_405121
.text:004050A4
.text:004050A4 loc_4050A4:                             ; CODE XREF: sub_4042E0+E62↓j
.text:004050A4                 mov     esi, [esp+0BCh+var_34]
.text:004050AB                 cmp     [esp+0BCh+var_44], esi
.text:004050AF                 jz      short loc_405115
.text:004050B1                 mov     edi, [esp+0BCh+arg_C]
.text:004050B8                 dec     edi
.text:004050B9                 cmp     [esp+0BCh+var_44], edi
.text:004050BD                 jz      short loc_405108
.text:004050BF                 mov     ebp, [esp+0BCh+var_44]
.text:004050C3                 movzx   eax, byte ptr [ebp+0]
.text:004050C7
.text:004050C7 loc_4050C7:                             ; CODE XREF: sub_4042E0+E33↓j
.text:004050C7                                         ; sub_4042E0+E3F↓j
.text:004050C7                 cmp     ds:byte_413190[eax], 1
.text:004050CE                 jz      loc_404732
.text:004050D4                 mov     eax, [esp+0BCh+var_8C]
.text:004050D8                 test    eax, eax
.text:004050DA                 jnz     short loc_4050FF
.text:004050DC                 mov     [esp+0BCh+var_8C], 1
.text:004050E4                 mov     eax, [esp+0BCh+var_60]
.text:004050E8                 mov     ebx, [esp+0BCh+var_64]
.text:004050EC                 cmp     eax, ebx
.text:004050EE                 ja      short loc_4050FF
.text:004050F0
.text:004050F0 loc_4050F0:                             ; CODE XREF: sub_4042E0+E1D↓j
.text:004050F0                 mov     esi, [esp+0BCh+var_78]
.text:004050F4                 or      byte ptr [esi+eax*4], 18h
.text:004050F8                 inc     eax
.text:004050F9                 cmp     eax, [esp+0BCh+var_64]
.text:004050FD                 jbe     short loc_4050F0
.text:004050FF
.text:004050FF loc_4050FF:                             ; CODE XREF: sub_4042E0+DFA↑j
.text:004050FF                                         ; sub_4042E0+E0E↑j ...
.text:004050FF                 inc     [esp+0BCh+var_44]
.text:00405103                 jmp     loc_404F82
.text:00405108 ; ---------------------------------------------------------------------------
.text:00405108
.text:00405108 loc_405108:                             ; CODE XREF: sub_4042E0+DDD↑j
.text:00405108                 mov     edx, [esp+0BCh+var_34]
.text:0040510F                 movzx   eax, byte ptr [edx-1]
.text:00405113                 jmp     short loc_4050C7
.text:00405115 ; ---------------------------------------------------------------------------
.text:00405115
.text:00405115 loc_405115:                             ; CODE XREF: sub_4042E0+DCF↑j
.text:00405115                 mov     ecx, [esp+0BCh+arg_C]
.text:0040511C                 movzx   eax, byte ptr [ecx]
.text:0040511F                 jmp     short loc_4050C7
.text:00405121 ; ---------------------------------------------------------------------------
.text:00405121
.text:00405121 loc_405121:                             ; CODE XREF: sub_4042E0+DBE↑j
.text:00405121                                         ; sub_4042E0+E60↓j
.text:00405121                 mov     eax, [esp+0BCh+var_40]
.text:00405125                 cmp     [esp+0BCh+var_48], eax
.text:00405129                 jz      loc_404732
.text:0040512F                 mov     [esp+0BCh+var_48], eax
.text:00405133                 mov     ebx, [esp+0BCh+arg_C]
.text:0040513A                 cmp     ebx, eax
.text:0040513C                 mov     [esp+0BCh+var_44], ebx
.text:00405140                 jz      short loc_405121
.text:00405142                 jmp     loc_4050A4
.text:00405147 ; ---------------------------------------------------------------------------
.text:00405147
.text:00405147 loc_405147:                             ; DATA XREF: .text:004042C0↑o
.text:00405147                 mov     eax, [esp+0BCh+var_48]
.text:0040514B                 cmp     [esp+0BCh+var_44], eax
.text:0040514F                 jz      loc_4051D1
.text:00405155
.text:00405155 loc_405155:                             ; CODE XREF: sub_4042E0+F12↓j
.text:00405155                 mov     edx, [esp+0BCh+var_34]
.text:0040515C                 cmp     [esp+0BCh+var_44], edx
.text:00405160                 jz      short loc_4051C5
.text:00405162                 mov     ebp, [esp+0BCh+arg_C]
.text:00405169                 dec     ebp
.text:0040516A                 cmp     [esp+0BCh+var_44], ebp
.text:0040516E                 jz      short loc_4051B8
.text:00405170                 mov     esi, [esp+0BCh+var_44]
.text:00405174                 movzx   eax, byte ptr [esi]
.text:00405177
.text:00405177 loc_405177:                             ; CODE XREF: sub_4042E0+EE3↓j
.text:00405177                                         ; sub_4042E0+EEF↓j
.text:00405177                 cmp     ds:byte_413190[eax], 1
.text:0040517E                 jnz     loc_404732
.text:00405184                 mov     eax, [esp+0BCh+var_8C]
.text:00405188                 test    eax, eax
.text:0040518A                 jnz     short loc_4051AF
.text:0040518C                 mov     [esp+0BCh+var_8C], 1
.text:00405194                 mov     eax, [esp+0BCh+var_60]
.text:00405198                 mov     ecx, [esp+0BCh+var_64]
.text:0040519C                 cmp     eax, ecx
.text:0040519E                 ja      short loc_4051AF
.text:004051A0
.text:004051A0 loc_4051A0:                             ; CODE XREF: sub_4042E0+ECD↓j
.text:004051A0                 mov     edi, [esp+0BCh+var_78]
.text:004051A4                 or      byte ptr [edi+eax*4], 18h
.text:004051A8                 inc     eax
.text:004051A9                 cmp     eax, [esp+0BCh+var_64]
.text:004051AD                 jbe     short loc_4051A0
.text:004051AF
.text:004051AF loc_4051AF:                             ; CODE XREF: sub_4042E0+EAA↑j
.text:004051AF                                         ; sub_4042E0+EBE↑j
.text:004051AF                 inc     [esp+0BCh+var_44]
.text:004051B3                 jmp     loc_404B0B      ; jumptable 00404557 case 0
.text:004051B3                                         ; jumptable 00404ED6 case 0
.text:004051B3                                         ; jumptable 00404FA8 case 0
.text:004051B8 ; ---------------------------------------------------------------------------
.text:004051B8
.text:004051B8 loc_4051B8:                             ; CODE XREF: sub_4042E0+E8E↑j
.text:004051B8                 mov     ebx, [esp+0BCh+var_34]
.text:004051BF                 movzx   eax, byte ptr [ebx-1]
.text:004051C3                 jmp     short loc_405177
.text:004051C5 ; ---------------------------------------------------------------------------
.text:004051C5
.text:004051C5 loc_4051C5:                             ; CODE XREF: sub_4042E0+E80↑j
.text:004051C5                 mov     edi, [esp+0BCh+arg_C]
.text:004051CC                 movzx   eax, byte ptr [edi]
.text:004051CF                 jmp     short loc_405177
.text:004051D1 ; ---------------------------------------------------------------------------
.text:004051D1
.text:004051D1 loc_4051D1:                             ; CODE XREF: sub_4042E0+E6F↑j
.text:004051D1                                         ; sub_4042E0+F10↓j
.text:004051D1                 mov     ebx, [esp+0BCh+var_40]
.text:004051D5                 cmp     [esp+0BCh+var_48], ebx
.text:004051D9                 jz      loc_404732
.text:004051DF                 mov     [esp+0BCh+var_48], ebx
.text:004051E3                 mov     ecx, [esp+0BCh+arg_C]
.text:004051EA                 cmp     ecx, ebx
.text:004051EC                 mov     [esp+0BCh+var_44], ecx
.text:004051F0                 jz      short loc_4051D1
.text:004051F2                 jmp     loc_405155
.text:004051F7 ; ---------------------------------------------------------------------------
.text:004051F7
.text:004051F7 loc_4051F7:                             ; DATA XREF: .text:004042BC↑o
.text:004051F7                 mov     esi, [esp+0BCh+var_4C]
.text:004051FB                 movsx   ecx, byte ptr [esi+1]
.text:004051FF                 movzx   eax, byte ptr [esi]
.text:00405202                 add     esi, 2
.text:00405205                 mov     ebp, esi
.text:00405207                 shl     ecx, 8
.text:0040520A                 lea     edi, [ecx+eax]
.text:0040520D                 add     ebp, edi
.text:0040520F                 mov     [esp+0BCh+var_30], ebp
.text:00405216                 mov     eax, offset loc_404559
.text:0040521B                 movsx   edx, byte ptr [esi+1]
.text:0040521F                 movzx   ecx, byte ptr [esi]
.text:00405222                 add     esi, 2
.text:00405225                 mov     [esp+0BCh+var_4C], esi
.text:00405229                 shl     edx, 8
.text:0040522C                 add     ecx, edx
.text:0040522E                 mov     [ebp+0], cl
.text:00405231                 mov     edi, [esp+0BCh+var_30]
.text:00405238                 sar     ecx, 8
.text:0040523B                 mov     [edi+1], cl
.text:0040523E                 mov     edx, [esp+0BCh+var_50]
.text:00405242                 cmp     esi, edx
.text:00405244                 jnz     loc_404CD5
.text:0040524A                 jmp     loc_404557
.text:0040524F ; ---------------------------------------------------------------------------
.text:0040524F
.text:0040524F loc_40524F:                             ; DATA XREF: .text:004042B8↑o
.text:0040524F                 mov     esi, [esp+0BCh+var_4C]
.text:00405253                 movsx   edi, byte ptr [esi+3]
.text:00405257                 movzx   ebp, byte ptr [esi+2]
.text:0040525B                 shl     edi, 8
.text:0040525E                 add     ebp, edi
.text:00405260                 jnz     short loc_40526C
.text:00405262                 add     [esp+0BCh+var_4C], 4
.text:00405267                 jmp     loc_404B0B      ; jumptable 00404557 case 0
.text:00405267                                         ; jumptable 00404ED6 case 0
.text:00405267                                         ; jumptable 00404FA8 case 0
.text:0040526C ; ---------------------------------------------------------------------------
.text:0040526C
.text:0040526C loc_40526C:                             ; CODE XREF: sub_4042E0+F80↑j
.text:0040526C                 dec     ebp
.text:0040526D                 mov     ebx, ebp
.text:0040526F                 sar     ebp, 8
.text:00405272                 mov     [esi+2], bl
.text:00405275                 mov     ecx, ebp
.text:00405277                 mov     [esi+3], cl
.text:0040527A
.text:0040527A loc_40527A:                             ; CODE XREF: sub_4042E0+14FE↓j
.text:0040527A                                         ; sub_4042E0+15A0↓j ...
.text:0040527A                 mov     ebx, [esp+0BCh+var_4C]
.text:0040527E                 movsx   ecx, byte ptr [ebx+1]
.text:00405282                 movzx   edx, byte ptr [ebx]
.text:00405285                 shl     ecx, 8
.text:00405288                 lea     esi, [ecx+edx]
.text:0040528B                 lea     edi, [esi+ebx+2]
.text:0040528F                 mov     [esp+0BCh+var_4C], edi
.text:00405293                 jmp     loc_404CBE
.text:00405298 ; ---------------------------------------------------------------------------
.text:00405298
.text:00405298 loc_405298:                             ; DATA XREF: .text:004042B4↑o
.text:00405298                 mov     ecx, [esp+0BCh+var_4C]
.text:0040529C                 movsx   ebx, byte ptr [ecx+3]
.text:004052A0                 movzx   ebp, byte ptr [ecx+2]
.text:004052A4                 shl     ebx, 8
.text:004052A7                 add     ebp, ebx
.text:004052A9                 test    ebp, ebp
.text:004052AB                 jle     short loc_4052C9
.text:004052AD                 dec     ebp
.text:004052AE                 add     ecx, 2
.text:004052B1                 mov     eax, ebp
.text:004052B3                 mov     [ecx], al
.text:004052B5                 sar     ebp, 8
.text:004052B8                 mov     edx, ebp
.text:004052BA                 mov     [ecx+1], dl
.text:004052BD                 add     ecx, 2
.text:004052C0                 mov     [esp+0BCh+var_4C], ecx
.text:004052C4                 jmp     loc_404B0B      ; jumptable 00404557 case 0
.text:004052C4                                         ; jumptable 00404ED6 case 0
.text:004052C4                                         ; jumptable 00404FA8 case 0
.text:004052C9 ; ---------------------------------------------------------------------------
.text:004052C9
.text:004052C9 loc_4052C9:                             ; CODE XREF: sub_4042E0+FCB↑j
.text:004052C9                 test    ebp, ebp
.text:004052CB                 jnz     loc_404B0B      ; jumptable 00404557 case 0
.text:004052CB                                         ; jumptable 00404ED6 case 0
.text:004052CB                                         ; jumptable 00404FA8 case 0
.text:004052D1                 mov     ebp, [esp+0BCh+var_4C]
.text:004052D5                 mov     byte ptr [ebp+2], 0
.text:004052D9                 mov     byte ptr [ebp+3], 0
.text:004052DD
.text:004052DD loc_4052DD:                             ; CODE XREF: sub_4042E0:loc_405BFC↓j
.text:004052DD                 mov     edx, [esp+0BCh+var_4C]
.text:004052E1                 movsx   ecx, byte ptr [edx+1]
.text:004052E5                 movzx   ebp, byte ptr [edx]
.text:004052E8                 add     edx, 2
.text:004052EB                 mov     ebx, edx
.text:004052ED                 mov     [esp+0BCh+var_4C], edx
.text:004052F1                 shl     ecx, 8
.text:004052F4                 add     ebp, ecx
.text:004052F6                 cmp     edx, [esp+0BCh+var_50]
.text:004052FA                 mov     [esp+0BCh+var_30], edx
.text:00405301                 jnb     short loc_405332
.text:00405303                 cmp     byte ptr [edx], 0
.text:00405306                 jnz     short loc_405323
.text:00405308                 lea     eax, [edx+1]
.text:0040530B
.text:0040530B loc_40530B:                             ; CODE XREF: sub_4042E0+1041↓j
.text:0040530B                 mov     [esp+0BCh+var_30], eax
.text:00405312                 mov     ebx, eax
.text:00405314                 lea     eax, [eax+1]
.text:00405317                 cmp     ebx, [esp+0BCh+var_50]
.text:0040531B                 jnb     short loc_405332
.text:0040531D                 cmp     byte ptr [eax-1], 0
.text:00405321                 jz      short loc_40530B
.text:00405323
.text:00405323 loc_405323:                             ; CODE XREF: sub_4042E0+1026↑j
.text:00405323                 cmp     ebx, [esp+0BCh+var_50]
.text:00405327                 jnb     short loc_405332
.text:00405329                 cmp     byte ptr [ebx], 6
.text:0040532C                 jz      loc_4054BA
.text:00405332
.text:00405332 loc_405332:                             ; CODE XREF: sub_4042E0+1021↑j
.text:00405332                                         ; sub_4042E0+103B↑j ...
.text:00405332                 mov     edi, [esp+0BCh+var_60]
.text:00405336                 mov     ebx, [esp+0BCh+var_64]
.text:0040533A                 mov     ecx, [esp+0BCh+var_28]
.text:00405341                 mov     esi, [esp+0BCh+var_24]
.text:00405348                 sub     ebx, edi
.text:0040534A                 mov     edx, ecx
.text:0040534C                 lea     edi, [ebx+ebx]
.text:0040534F                 sub     edx, esi
.text:00405351                 lea     eax, [ebx+edi+7]
.text:00405355                 cmp     edx, eax
.text:00405357                 jnb     short loc_4053CD
.text:00405359                 mov     edi, eax
.text:0040535B
.text:0040535B loc_40535B:                             ; CODE XREF: sub_4042E0+10EB↓j
.text:0040535B                 mov     edx, dword_412020
.text:00405361                 lea     ebx, [edx+edx*8]
.text:00405364                 lea     esi, [edx+ebx*2]
.text:00405367                 cmp     ecx, esi
.text:00405369                 ja      loc_404A61
.text:0040536F                 lea     edx, ds:0[ecx*8]
.text:00405376                 mov     [esp+0BCh+Size], edx ; Size
.text:00405379                 call    malloc
.text:0040537E                 mov     [esp+0BCh+Size], eax ; void *
.text:00405381                 mov     ebx, [esp+0BCh+var_28]
.text:00405388                 mov     esi, [esp+0BCh+Src]
.text:0040538F                 shl     ebx, 2
.text:00405392                 mov     [esp+0BCh+var_B4], ebx ; Size
.text:00405396                 mov     [esp+0BCh+var_B8], esi ; Src
.text:0040539A                 call    memcpy
.text:0040539F                 mov     [esp+0BCh+Src], eax
.text:004053A6                 test    eax, eax
.text:004053A8                 jz      loc_404A61
.text:004053AE                 mov     ebx, [esp+0BCh+var_28]
.text:004053B5                 mov     esi, [esp+0BCh+var_24]
.text:004053BC                 add     ebx, ebx
.text:004053BE                 mov     [esp+0BCh+var_28], ebx
.text:004053C5                 mov     ecx, ebx
.text:004053C7                 sub     ebx, esi
.text:004053C9                 cmp     ebx, edi
.text:004053CB                 jb      short loc_40535B
.text:004053CD
.text:004053CD loc_4053CD:                             ; CODE XREF: sub_4042E0+1077↑j
.text:004053CD                 mov     ecx, [esp+0BCh+var_60]
.text:004053D1                 mov     eax, [esp+0BCh+var_64]
.text:004053D5                 cmp     ecx, eax
.text:004053D7                 ja      loc_4054B1
.text:004053DD                 mov     ebx, [esp+0BCh+Src]
.text:004053E4
.text:004053E4 loc_4053E4:                             ; CODE XREF: sub_4042E0+1162↓j
.text:004053E4                 mov     eax, [esp+0BCh+var_68]
.text:004053E8                 mov     edi, [eax+ecx*4]
.text:004053EB                 mov     [ebx+esi*4], edi
.text:004053EE                 mov     edx, [esp+0BCh+var_6C]
.text:004053F2                 mov     edi, [esp+0BCh+var_24]
.text:004053F9                 mov     ebx, [esp+0BCh+Src]
.text:00405400                 mov     esi, [edx+ecx*4]
.text:00405403                 inc     edi
.text:00405404                 mov     [esp+0BCh+var_24], edi
.text:0040540B                 mov     [ebx+edi*4], esi
.text:0040540E                 mov     edi, [esp+0BCh+var_24]
.text:00405415                 mov     eax, [esp+0BCh+var_78]
.text:00405419                 mov     ebx, [esp+0BCh+Src]
.text:00405420                 inc     edi
.text:00405421                 mov     [esp+0BCh+var_24], edi
.text:00405428                 mov     esi, [eax+ecx*4]
.text:0040542B                 inc     ecx
.text:0040542C                 mov     [ebx+edi*4], esi
.text:0040542F                 mov     esi, [esp+0BCh+var_24]
.text:00405436                 inc     esi
.text:00405437                 cmp     ecx, [esp+0BCh+var_64]
.text:0040543B                 mov     [esp+0BCh+var_24], esi
.text:00405442                 jbe     short loc_4053E4
.text:00405444
.text:00405444 loc_405444:                             ; CODE XREF: sub_4042E0+11D8↓j
.text:00405444                 mov     eax, [esp+0BCh+var_60]
.text:00405448                 mov     [ebx+esi*4], eax
.text:0040544B                 mov     ecx, [esp+0BCh+var_24]
.text:00405452                 mov     edi, [esp+0BCh+var_64]
.text:00405456                 mov     edx, [esp+0BCh+Src]
.text:0040545D                 inc     ecx
.text:0040545E                 mov     [esp+0BCh+var_24], ecx
.text:00405465                 mov     [edx+ecx*4], edi
.text:00405468                 mov     eax, [esp+0BCh+var_24]
.text:0040546F                 mov     esi, [esp+0BCh+var_4C]
.text:00405473                 mov     edi, [esp+0BCh+Src]
.text:0040547A                 inc     eax
.text:0040547B                 add     esi, ebp
.text:0040547D                 mov     [esp+0BCh+var_24], eax
.text:00405484                 mov     [edi+eax*4], esi
.text:00405487                 mov     ecx, [esp+0BCh+var_24]
.text:0040548E                 mov     ebp, [esp+0BCh+Src]
.text:00405495                 mov     ebx, [esp+0BCh+var_44]
.text:00405499                 inc     ecx
.text:0040549A                 mov     [esp+0BCh+var_24], ecx
.text:004054A1                 mov     [ebp+ecx*4+0], ebx
.text:004054A5                 inc     [esp+0BCh+var_24]
.text:004054AC                 jmp     loc_404B0B      ; jumptable 00404557 case 0
.text:004054AC                                         ; jumptable 00404ED6 case 0
.text:004054AC                                         ; jumptable 00404FA8 case 0
.text:004054B1 ; ---------------------------------------------------------------------------
.text:004054B1
.text:004054B1 loc_4054B1:                             ; CODE XREF: sub_4042E0+10F7↑j
.text:004054B1                 mov     ebx, [esp+0BCh+Src]
.text:004054B8                 jmp     short loc_405444
.text:004054BA ; ---------------------------------------------------------------------------
.text:004054BA
.text:004054BA loc_4054BA:                             ; CODE XREF: sub_4042E0+104C↑j
.text:004054BA                 movzx   edx, byte ptr [ebx+1]
.text:004054BE                 movzx   edi, byte ptr [ebx+2]
.text:004054C2                 cmp     [esp+0BCh+var_60], 101h
.text:004054CA                 lea     ebx, [edi+edx]
.text:004054CD                 mov     [esp+0BCh+var_64], ebx
.text:004054D1                 jnz     loc_405332
.text:004054D7                 mov     [esp+0BCh+var_60], edx
.text:004054DB                 jmp     loc_405332
.text:004054E0 ; ---------------------------------------------------------------------------
.text:004054E0
.text:004054E0 loc_4054E0:                             ; DATA XREF: .text:004042B0↑o
.text:004054E0                 mov     eax, [esp+0BCh+var_60]
.text:004054E4                 mov     edx, [esp+0BCh+var_64]
.text:004054E8                 mov     ecx, [esp+0BCh+var_28]
.text:004054EF                 mov     esi, [esp+0BCh+var_24]
.text:004054F6                 sub     edx, eax
.text:004054F8                 mov     ebp, ecx
.text:004054FA                 lea     ebx, [edx+edx]
.text:004054FD                 sub     ebp, esi
.text:004054FF                 lea     eax, [edx+ebx+7]
.text:00405503                 cmp     ebp, eax
.text:00405505                 jnb     short loc_40557B
.text:00405507                 mov     edi, eax
.text:00405509
.text:00405509 loc_405509:                             ; CODE XREF: sub_4042E0+1299↓j
.text:00405509                 mov     edx, dword_412020
.text:0040550F                 lea     ebp, [edx+edx*8]
.text:00405512                 lea     esi, [edx+ebp*2]
.text:00405515                 cmp     ecx, esi
.text:00405517                 ja      loc_404A61
.text:0040551D                 lea     ebp, ds:0[ecx*8]
.text:00405524                 mov     [esp+0BCh+Size], ebp ; Size
.text:00405527                 call    malloc
.text:0040552C                 mov     [esp+0BCh+Size], eax ; void *
.text:0040552F                 mov     esi, [esp+0BCh+var_28]
.text:00405536                 mov     ebx, [esp+0BCh+Src]
.text:0040553D                 shl     esi, 2
.text:00405540                 mov     [esp+0BCh+var_B4], esi ; Size
.text:00405544                 mov     [esp+0BCh+var_B8], ebx ; Src
.text:00405548                 call    memcpy
.text:0040554D                 mov     [esp+0BCh+Src], eax
.text:00405554                 test    eax, eax
.text:00405556                 jz      loc_404A61
.text:0040555C                 mov     edx, [esp+0BCh+var_28]
.text:00405563                 mov     esi, [esp+0BCh+var_24]
.text:0040556A                 add     edx, edx
.text:0040556C                 mov     [esp+0BCh+var_28], edx
.text:00405573                 mov     ecx, edx
.text:00405575                 sub     edx, esi
.text:00405577                 cmp     edx, edi
.text:00405579                 jb      short loc_405509
.text:0040557B
.text:0040557B loc_40557B:                             ; CODE XREF: sub_4042E0+1225↑j
.text:0040557B                 mov     ecx, [esp+0BCh+var_60]
.text:0040557F                 mov     edi, [esp+0BCh+var_64]
.text:00405583                 cmp     ecx, edi
.text:00405585                 ja      loc_40565D
.text:0040558B                 mov     ebx, [esp+0BCh+Src]
.text:00405592
.text:00405592 loc_405592:                             ; CODE XREF: sub_4042E0+1310↓j
.text:00405592                 mov     eax, [esp+0BCh+var_68]
.text:00405596                 mov     edi, [eax+ecx*4]
.text:00405599                 mov     [ebx+esi*4], edi
.text:0040559C                 mov     edx, [esp+0BCh+var_6C]
.text:004055A0                 mov     edi, [esp+0BCh+var_24]
.text:004055A7                 mov     ebx, [esp+0BCh+Src]
.text:004055AE                 mov     ebp, [edx+ecx*4]
.text:004055B1                 inc     edi
.text:004055B2                 mov     [esp+0BCh+var_24], edi
.text:004055B9                 mov     [ebx+edi*4], ebp
.text:004055BC                 mov     ebp, [esp+0BCh+var_24]
.text:004055C3                 mov     eax, [esp+0BCh+var_78]
.text:004055C7                 mov     ebx, [esp+0BCh+Src]
.text:004055CE                 inc     ebp
.text:004055CF                 mov     [esp+0BCh+var_24], ebp
.text:004055D6                 mov     esi, [eax+ecx*4]
.text:004055D9                 inc     ecx
.text:004055DA                 mov     [ebx+ebp*4], esi
.text:004055DD                 mov     esi, [esp+0BCh+var_24]
.text:004055E4                 inc     esi
.text:004055E5                 cmp     ecx, [esp+0BCh+var_64]
.text:004055E9                 mov     [esp+0BCh+var_24], esi
.text:004055F0                 jbe     short loc_405592
.text:004055F2
.text:004055F2 loc_4055F2:                             ; CODE XREF: sub_4042E0+1384↓j
.text:004055F2                 mov     edi, [esp+0BCh+var_60]
.text:004055F6                 mov     [ebx+esi*4], edi
.text:004055F9                 mov     edx, [esp+0BCh+var_24]
.text:00405600                 mov     ebp, [esp+0BCh+Src]
.text:00405607                 mov     esi, [esp+0BCh+var_64]
.text:0040560B                 inc     edx
.text:0040560C                 mov     [esp+0BCh+var_24], edx
.text:00405613                 mov     [ebp+edx*4+0], esi
.text:00405617                 mov     ebx, [esp+0BCh+var_24]
.text:0040561E                 mov     ecx, [esp+0BCh+Src]
.text:00405625                 inc     ebx
.text:00405626                 mov     [esp+0BCh+var_24], ebx
.text:0040562D                 mov     dword ptr [ecx+ebx*4], 0
.text:00405634
.text:00405634 loc_405634:                             ; CODE XREF: sub_4042E0+190E↓j
.text:00405634                 mov     eax, [esp+0BCh+var_24]
.text:0040563B                 mov     ecx, [esp+0BCh+Src]
.text:00405642                 inc     eax
.text:00405643                 mov     [esp+0BCh+var_24], eax
.text:0040564A                 mov     dword ptr [ecx+eax*4], 0
.text:00405651                 inc     [esp+0BCh+var_24]
.text:00405658                 jmp     loc_404F82
.text:0040565D ; ---------------------------------------------------------------------------
.text:0040565D
.text:0040565D loc_40565D:                             ; CODE XREF: sub_4042E0+12A5↑j
.text:0040565D                 mov     ebx, [esp+0BCh+Src]
.text:00405664                 jmp     short loc_4055F2
.text:00405666 ; ---------------------------------------------------------------------------
.text:00405666
.text:00405666 loc_405666:                             ; DATA XREF: .text:004042AC↑o
.text:00405666                 mov     eax, [esp+0BCh+var_60]
.text:0040566A                 mov     ebx, [esp+0BCh+var_64]
.text:0040566E                 mov     ecx, [esp+0BCh+var_28]
.text:00405675                 mov     esi, [esp+0BCh+var_24]
.text:0040567C                 sub     ebx, eax
.text:0040567E                 mov     edx, ecx
.text:00405680                 lea     ebp, [ebx+ebx]
.text:00405683                 sub     edx, esi
.text:00405685                 lea     eax, [ebx+ebp+7]
.text:00405689                 cmp     edx, eax
.text:0040568B                 jnb     short loc_405701
.text:0040568D                 mov     edi, eax
.text:0040568F
.text:0040568F loc_40568F:                             ; CODE XREF: sub_4042E0+141F↓j
.text:0040568F                 mov     edx, dword_412020
.text:00405695                 lea     ebx, [edx+edx*8]
.text:00405698                 lea     esi, [edx+ebx*2]
.text:0040569B                 cmp     ecx, esi
.text:0040569D                 ja      loc_404A61
.text:004056A3                 lea     ebx, ds:0[ecx*8]
.text:004056AA                 mov     [esp+0BCh+Size], ebx ; Size
.text:004056AD                 call    malloc
.text:004056B2                 mov     [esp+0BCh+Size], eax ; void *
.text:004056B5                 mov     esi, [esp+0BCh+var_28]
.text:004056BC                 mov     ebp, [esp+0BCh+Src]
.text:004056C3                 shl     esi, 2
.text:004056C6                 mov     [esp+0BCh+var_B4], esi ; Size
.text:004056CA                 mov     [esp+0BCh+var_B8], ebp ; Src
.text:004056CE                 call    memcpy
.text:004056D3                 mov     [esp+0BCh+Src], eax
.text:004056DA                 test    eax, eax
.text:004056DC                 jz      loc_404A61
.text:004056E2                 mov     edx, [esp+0BCh+var_28]
.text:004056E9                 mov     esi, [esp+0BCh+var_24]
.text:004056F0                 add     edx, edx
.text:004056F2                 mov     [esp+0BCh+var_28], edx
.text:004056F9                 mov     ecx, edx
.text:004056FB                 sub     edx, esi
.text:004056FD                 cmp     edx, edi
.text:004056FF                 jb      short loc_40568F
.text:00405701
.text:00405701 loc_405701:                             ; CODE XREF: sub_4042E0+13AB↑j
.text:00405701                 mov     ecx, [esp+0BCh+var_60]
.text:00405705                 mov     edi, [esp+0BCh+var_64]
.text:00405709                 cmp     ecx, edi
.text:0040570B                 ja      loc_4057E3
.text:00405711                 mov     ebx, [esp+0BCh+Src]
.text:00405718
.text:00405718 loc_405718:                             ; CODE XREF: sub_4042E0+1496↓j
.text:00405718                 mov     eax, [esp+0BCh+var_68]
.text:0040571C                 mov     edi, [eax+ecx*4]
.text:0040571F                 mov     [ebx+esi*4], edi
.text:00405722                 mov     edx, [esp+0BCh+var_6C]
.text:00405726                 mov     edi, [esp+0BCh+var_24]
.text:0040572D                 mov     ebx, [esp+0BCh+Src]
.text:00405734                 mov     ebp, [edx+ecx*4]
.text:00405737                 inc     edi
.text:00405738                 mov     [esp+0BCh+var_24], edi
.text:0040573F                 mov     [ebx+edi*4], ebp
.text:00405742                 mov     ebp, [esp+0BCh+var_24]
.text:00405749                 mov     eax, [esp+0BCh+var_78]
.text:0040574D                 mov     ebx, [esp+0BCh+Src]
.text:00405754                 inc     ebp
.text:00405755                 mov     [esp+0BCh+var_24], ebp
.text:0040575C                 mov     esi, [eax+ecx*4]
.text:0040575F                 inc     ecx
.text:00405760                 mov     [ebx+ebp*4], esi
.text:00405763                 mov     esi, [esp+0BCh+var_24]
.text:0040576A                 inc     esi
.text:0040576B                 cmp     ecx, [esp+0BCh+var_64]
.text:0040576F                 mov     [esp+0BCh+var_24], esi
.text:00405776                 jbe     short loc_405718
.text:00405778
.text:00405778 loc_405778:                             ; CODE XREF: sub_4042E0+150A↓j
.text:00405778                 mov     ebp, [esp+0BCh+var_60]
.text:0040577C                 mov     [ebx+esi*4], ebp
.text:0040577F                 mov     eax, [esp+0BCh+var_24]
.text:00405786                 mov     edi, [esp+0BCh+Src]
.text:0040578D                 mov     esi, [esp+0BCh+var_64]
.text:00405791                 inc     eax
.text:00405792                 mov     [esp+0BCh+var_24], eax
.text:00405799                 mov     [edi+eax*4], esi
.text:0040579C                 mov     edx, [esp+0BCh+var_24]
.text:004057A3                 mov     ebp, [esp+0BCh+Src]
.text:004057AA                 inc     edx
.text:004057AB                 mov     [esp+0BCh+var_24], edx
.text:004057B2                 mov     dword ptr [ebp+edx*4+0], 0
.text:004057BA                 mov     ebx, [esp+0BCh+var_24]
.text:004057C1                 mov     ecx, [esp+0BCh+Src]
.text:004057C8                 inc     ebx
.text:004057C9                 mov     [esp+0BCh+var_24], ebx
.text:004057D0                 mov     dword ptr [ecx+ebx*4], 0
.text:004057D7                 inc     [esp+0BCh+var_24]
.text:004057DE                 jmp     loc_40527A
.text:004057E3 ; ---------------------------------------------------------------------------
.text:004057E3
.text:004057E3 loc_4057E3:                             ; CODE XREF: sub_4042E0+142B↑j
.text:004057E3                 mov     ebx, [esp+0BCh+Src]
.text:004057EA                 jmp     short loc_405778
.text:004057EC ; ---------------------------------------------------------------------------
.text:004057EC
.text:004057EC loc_4057EC:                             ; DATA XREF: .text:004042A8↑o
.text:004057EC                 mov     esi, [esp+0BCh+var_4C]
.text:004057F0                 movsx   ebx, byte ptr [esi+1]
.text:004057F4                 movzx   ebp, byte ptr [esi]
.text:004057F7                 add     esi, 2
.text:004057FA                 mov     [esp+0BCh+var_4C], esi
.text:004057FE                 shl     ebx, 8
.text:00405801                 add     ebp, ebx
.text:00405803
.text:00405803 loc_405803:                             ; CODE XREF: sub_4042E0+153A↓j
.text:00405803                                         ; sub_4042E0+154C↓j
.text:00405803                 lea     edx, [esi+2]
.text:00405806                 cmp     edx, [esp+0BCh+var_50]
.text:0040580A                 jnb     short def_404CE4 ; jumptable 00404CE4 default case
.text:0040580C                 movzx   ecx, byte ptr [esi]
.text:0040580F                 sub     cl, 6
.text:00405812                 cmp     cl, 1
.text:00405815                 ja      short def_404CE4 ; jumptable 00404CE4 default case
.text:00405817                 add     esi, 3
.text:0040581A                 jmp     short loc_405803
.text:0040581C ; ---------------------------------------------------------------------------
.text:0040581C
.text:0040581C def_404CE4:                             ; CODE XREF: sub_4042E0+152A↑j
.text:0040581C                                         ; sub_4042E0+1535↑j
.text:0040581C                 lea     eax, [esi+6]    ; jumptable 00404CE4 default case
.text:0040581F                 cmp     eax, [esp+0BCh+var_50]
.text:00405823                 jnb     short loc_40582E
.text:00405825                 cmp     byte ptr [esi], 13h
.text:00405828                 jnz     short loc_40582E
.text:0040582A                 mov     esi, eax
.text:0040582C                 jmp     short loc_405803
.text:0040582E ; ---------------------------------------------------------------------------
.text:0040582E
.text:0040582E loc_40582E:                             ; CODE XREF: sub_4042E0+1543↑j
.text:0040582E                                         ; sub_4042E0+1548↑j
.text:0040582E                 mov     edi, [esp+0BCh+var_4C]
.text:00405832                 add     edi, ebp
.text:00405834                 cmp     esi, [esp+0BCh+var_50]
.text:00405838                 mov     [esp+0BCh+var_30], edi
.text:0040583F                 jz      loc_4059C5
.text:00405845                 movzx   eax, byte ptr [esi]
.text:00405848                 cmp     al, 2
.text:0040584A                 jz      loc_405A7B
.text:00405850                 mov     ebp, [esp+0BCh+arg_0]
.text:00405857                 test    byte ptr [ebp+1Ch], 80h
.text:0040585B                 jz      short loc_405865
.text:0040585D                 cmp     al, 0Ah
.text:0040585F                 jz      loc_405A0B
.text:00405865
.text:00405865 loc_405865:                             ; CODE XREF: sub_4042E0+157B↑j
.text:00405865                 cmp     al, 4
.text:00405867                 jz      loc_405915
.text:0040586D
.text:0040586D loc_40586D:                             ; CODE XREF: sub_4042E0+1652↓j
.text:0040586D                                         ; sub_4042E0:loc_405974↓j ...
.text:0040586D                 sub     [esp+0BCh+var_4C], 2
.text:00405872                 mov     esi, [esp+0BCh+var_4C]
.text:00405876                 cmp     byte ptr [esi-1], 11h
.text:0040587A                 jz      short loc_405885
.text:0040587C                 mov     byte ptr [esi-1], 0Dh
.text:00405880                 jmp     loc_40527A
.text:00405885 ; ---------------------------------------------------------------------------
.text:00405885
.text:00405885 loc_405885:                             ; CODE XREF: sub_4042E0+159A↑j
.text:00405885                                         ; DATA XREF: .text:004042A4↑o
.text:00405885                 mov     edi, [esp+0BCh+var_24]
.text:0040588C                 mov     ebx, [esp+0BCh+Src]
.text:00405893                 lea     eax, [edi-3]
.text:00405896                 mov     [esp+0BCh+var_24], eax
.text:0040589D                 lea     ecx, [edi-4]
.text:004058A0                 mov     ebp, [ebx+eax*4]
.text:004058A3                 mov     [esp+0BCh+var_24], ecx
.text:004058AA                 mov     edi, [ebx+ecx*4]
.text:004058AD                 mov     ecx, ebp
.text:004058AF                 cmp     ebp, edi
.text:004058B1                 jb      short loc_405908
.text:004058B3
.text:004058B3 loc_4058B3:                             ; CODE XREF: sub_4042E0+1626↓j
.text:004058B3                 mov     eax, [esp+0BCh+var_24]
.text:004058BA                 dec     eax
.text:004058BB                 mov     [esp+0BCh+var_24], eax
.text:004058C2                 mov     edx, [ebx+eax*4]
.text:004058C5                 mov     ebx, [esp+0BCh+var_94]
.text:004058C9                 mov     [ebx+ecx*4], edx
.text:004058CC                 mov     edx, [esp+0BCh+var_24]
.text:004058D3                 mov     ebx, [esp+0BCh+Src]
.text:004058DA                 mov     esi, [esp+0BCh+var_90]
.text:004058DE                 lea     ebp, [edx-1]
.text:004058E1                 mov     [esp+0BCh+var_24], ebp
.text:004058E8                 mov     eax, [ebx+ebp*4]
.text:004058EB                 mov     ebp, [esp+0BCh+var_90]
.text:004058EF                 mov     [ebp+ecx*4+0], eax
.text:004058F3                 lea     ebp, [edx-2]
.text:004058F6                 mov     [esp+0BCh+var_24], ebp
.text:004058FD                 mov     edx, [ebx+ebp*4]
.text:00405900                 mov     [esi+ecx*4], edx
.text:00405903                 dec     ecx
.text:00405904                 cmp     ecx, edi
.text:00405906                 jnb     short loc_4058B3
.text:00405908
.text:00405908 loc_405908:                             ; CODE XREF: sub_4042E0+15D1↑j
.text:00405908                 mov     [esp+0BCh+var_8C], 0
.text:00405910                 jmp     loc_40527A
.text:00405915 ; ---------------------------------------------------------------------------
.text:00405915
.text:00405915 loc_405915:                             ; CODE XREF: sub_4042E0+1587↑j
.text:00405915                 mov     ebx, [esp+0BCh+var_30]
.text:0040591C                 mov     edi, ebx
.text:0040591E                 cmp     byte ptr [ebx+3], 2
.text:00405922                 jz      loc_4059D2
.text:00405928
.text:00405928 loc_405928:                             ; CODE XREF: sub_4042E0+1718↓j
.text:00405928                 movzx   eax, byte ptr [edi+3]
.text:0040592C                 cmp     al, 5
.text:0040592E                 jz      short loc_405987
.text:00405930                 cmp     al, 4
.text:00405932                 jnz     loc_40586D
.text:00405938                 movzx   eax, byte ptr [esi+1]
.text:0040593C                 xor     edx, edx
.text:0040593E                 movzx   ebx, al
.text:00405941                 mov     [esp+0BCh+var_A5], al
.text:00405945                 cmp     edx, ebx
.text:00405947                 jge     short loc_405965
.text:00405949                 movzx   ecx, byte ptr [edi+4]
.text:0040594D                 cmp     edx, ecx
.text:0040594F                 jge     short loc_405965
.text:00405951
.text:00405951 loc_405951:                             ; CODE XREF: sub_4042E0+1683↓j
.text:00405951                 movzx   eax, byte ptr [edx+edi+5]
.text:00405956                 test    [edx+esi+2], al
.text:0040595A                 jnz     short loc_405965
.text:0040595C                 inc     edx
.text:0040595D                 cmp     edx, ebx
.text:0040595F                 jge     short loc_405965
.text:00405961                 cmp     edx, ecx
.text:00405963                 jl      short loc_405951
.text:00405965
.text:00405965 loc_405965:                             ; CODE XREF: sub_4042E0+1667↑j
.text:00405965                                         ; sub_4042E0+166F↑j ...
.text:00405965                 movzx   ebp, [esp+0BCh+var_A5]
.text:0040596A                 cmp     edx, ebp
.text:0040596C                 jz      short loc_40597A
.text:0040596E                 movzx   ebx, byte ptr [edi+4]
.text:00405972                 cmp     edx, ebx
.text:00405974
.text:00405974 loc_405974:                             ; CODE XREF: sub_4042E0+1784↓j
.text:00405974                 jnz     loc_40586D
.text:0040597A
.text:0040597A loc_40597A:                             ; CODE XREF: sub_4042E0+168C↑j
.text:0040597A                 mov     edx, [esp+0BCh+var_4C]
.text:0040597E                 mov     byte ptr [edx-3], 11h
.text:00405982                 jmp     loc_40586D
.text:00405987 ; ---------------------------------------------------------------------------
.text:00405987
.text:00405987 loc_405987:                             ; CODE XREF: sub_4042E0+164E↑j
.text:00405987                 movzx   ebx, byte ptr [esi+1]
.text:0040598B                 xor     ecx, ecx
.text:0040598D                 movzx   eax, bl
.text:00405990                 cmp     ecx, eax
.text:00405992                 jge     short loc_4059BA
.text:00405994                 mov     ebp, eax
.text:00405996
.text:00405996 loc_405996:                             ; CODE XREF: sub_4042E0+16D8↓j
.text:00405996                 movzx   edx, byte ptr [ecx+esi+2]
.text:0040599B                 test    dl, dl
.text:0040599D                 jz      short loc_4059B5
.text:0040599F                 movzx   eax, byte ptr [edi+4]
.text:004059A3                 cmp     ecx, eax
.text:004059A5                 jge     short loc_4059BA
.text:004059A7                 movzx   eax, byte ptr [ecx+edi+5]
.text:004059AC                 movzx   edx, dl
.text:004059AF                 not     eax
.text:004059B1                 test    eax, edx
.text:004059B3                 jnz     short loc_4059BA
.text:004059B5
.text:004059B5 loc_4059B5:                             ; CODE XREF: sub_4042E0+16BD↑j
.text:004059B5                 inc     ecx
.text:004059B6                 cmp     ecx, ebp
.text:004059B8                 jl      short loc_405996
.text:004059BA
.text:004059BA loc_4059BA:                             ; CODE XREF: sub_4042E0+16B2↑j
.text:004059BA                                         ; sub_4042E0+16C5↑j ...
.text:004059BA                 movzx   esi, bl
.text:004059BD                 cmp     ecx, esi
.text:004059BF                 jnz     loc_40586D
.text:004059C5
.text:004059C5 loc_4059C5:                             ; CODE XREF: sub_4042E0+155F↑j
.text:004059C5                 mov     ecx, [esp+0BCh+var_4C]
.text:004059C9                 mov     byte ptr [ecx-3], 11h
.text:004059CD                 jmp     loc_40586D
.text:004059D2 ; ---------------------------------------------------------------------------
.text:004059D2
.text:004059D2 loc_4059D2:                             ; CODE XREF: sub_4042E0+1642↑j
.text:004059D2                 movzx   edx, byte ptr [esi+1]
.text:004059D6                 movzx   ecx, byte ptr [ebx+5]
.text:004059DA                 shl     edx, 3
.text:004059DD                 movzx   ebp, cl
.text:004059E0                 cmp     edx, ebp
.text:004059E2                 jle     short loc_4059FE
.text:004059E4                 mov     dl, cl
.text:004059E6                 shr     dl, 3
.text:004059E9                 and     ecx, 7
.text:004059EC                 movzx   ebx, dl
.text:004059EF                 movzx   eax, byte ptr [ebx+esi+2]
.text:004059F4                 sar     eax, cl
.text:004059F6                 test    al, 1
.text:004059F8                 jnz     loc_405928
.text:004059FE
.text:004059FE loc_4059FE:                             ; CODE XREF: sub_4042E0+1702↑j
.text:004059FE                 mov     edi, [esp+0BCh+var_4C]
.text:00405A02                 mov     byte ptr [edi-3], 11h
.text:00405A06                 jmp     loc_40586D
.text:00405A0B ; ---------------------------------------------------------------------------
.text:00405A0B
.text:00405A0B loc_405A0B:                             ; CODE XREF: sub_4042E0+157F↑j
.text:00405A0B                 mov     cl, 0Ah
.text:00405A0D
.text:00405A0D loc_405A0D:                             ; CODE XREF: sub_4042E0+179F↓j
.text:00405A0D                 mov     ebx, [esp+0BCh+var_30]
.text:00405A14                 mov     esi, ebx
.text:00405A16                 cmp     byte ptr [ebx+3], 2
.text:00405A1A                 jz      short loc_405A69
.text:00405A1C
.text:00405A1C loc_405A1C:                             ; CODE XREF: sub_4042E0+178C↓j
.text:00405A1C                 movzx   edx, byte ptr [esi+3]
.text:00405A20                 mov     bl, dl
.text:00405A22                 sub     bl, 4
.text:00405A25                 cmp     bl, 1
.text:00405A28                 ja      loc_40586D
.text:00405A2E                 movzx   edi, byte ptr [esi+4]
.text:00405A32                 xor     ebx, ebx
.text:00405A34                 cmp     dl, 5
.text:00405A37                 setz    bl
.text:00405A3A                 movzx   eax, cl
.text:00405A3D                 shl     edi, 3
.text:00405A40                 cmp     eax, edi
.text:00405A42                 jnb     short loc_405A62
.text:00405A44                 mov     al, cl
.text:00405A46                 shr     al, 3
.text:00405A49                 and     ecx, 7
.text:00405A4C                 movzx   edx, al
.text:00405A4F                 movzx   eax, byte ptr [edx+esi+5]
.text:00405A54                 sar     eax, cl
.text:00405A56                 test    al, 1
.text:00405A58                 jz      short loc_405A62
.text:00405A5A                 test    ebx, ebx
.text:00405A5C                 setz    cl
.text:00405A5F                 movzx   ebx, cl
.text:00405A62
.text:00405A62 loc_405A62:                             ; CODE XREF: sub_4042E0+1762↑j
.text:00405A62                                         ; sub_4042E0+1778↑j
.text:00405A62                 test    ebx, ebx
.text:00405A64                 jmp     loc_405974
.text:00405A69 ; ---------------------------------------------------------------------------
.text:00405A69
.text:00405A69 loc_405A69:                             ; CODE XREF: sub_4042E0+173A↑j
.text:00405A69                 cmp     [ebx+5], cl
.text:00405A6C                 jz      short loc_405A1C
.text:00405A6E                 mov     esi, [esp+0BCh+var_4C]
.text:00405A72                 mov     byte ptr [esi-3], 11h
.text:00405A76                 jmp     loc_40586D
.text:00405A7B ; ---------------------------------------------------------------------------
.text:00405A7B
.text:00405A7B loc_405A7B:                             ; CODE XREF: sub_4042E0+156A↑j
.text:00405A7B                 movzx   ecx, byte ptr [esi+2]
.text:00405A7F                 jmp     short loc_405A0D
.text:00405A81 ; ---------------------------------------------------------------------------
.text:00405A81
.text:00405A81 loc_405A81:                             ; DATA XREF: .text:004042A0↑o
.text:00405A81                 mov     edx, [esp+0BCh+var_4C]
.text:00405A85                 mov     edi, [esp+0BCh+var_60]
.text:00405A89                 mov     ebx, [esp+0BCh+var_64]
.text:00405A8D                 movsx   ecx, byte ptr [edx+1]
.text:00405A91                 mov     esi, [esp+0BCh+var_24]
.text:00405A98                 sub     ebx, edi
.text:00405A9A                 movzx   ebp, byte ptr [edx]
.text:00405A9D                 lea     edi, [ebx+ebx]
.text:00405AA0                 shl     ecx, 8
.text:00405AA3                 add     edx, 2
.text:00405AA6                 lea     eax, [ebx+edi+7]
.text:00405AAA                 mov     [esp+0BCh+var_4C], edx
.text:00405AAE                 add     ebp, ecx
.text:00405AB0                 mov     ecx, [esp+0BCh+var_28]
.text:00405AB7                 mov     edx, ecx
.text:00405AB9                 sub     edx, esi
.text:00405ABB                 cmp     edx, eax
.text:00405ABD                 jnb     short loc_405B33
.text:00405ABF                 mov     edi, eax
.text:00405AC1
.text:00405AC1 loc_405AC1:                             ; CODE XREF: sub_4042E0+1851↓j
.text:00405AC1                 mov     edx, dword_412020
.text:00405AC7                 lea     esi, [edx+edx*8]
.text:00405ACA                 lea     ebx, [edx+esi*2]
.text:00405ACD                 cmp     ecx, ebx
.text:00405ACF                 ja      loc_404A61
.text:00405AD5                 lea     edx, ds:0[ecx*8]
.text:00405ADC                 mov     [esp+0BCh+Size], edx ; Size
.text:00405ADF                 call    malloc
.text:00405AE4                 mov     [esp+0BCh+Size], eax ; void *
.text:00405AE7                 mov     esi, [esp+0BCh+var_28]
.text:00405AEE                 mov     ebx, [esp+0BCh+Src]
.text:00405AF5                 shl     esi, 2
.text:00405AF8                 mov     [esp+0BCh+var_B4], esi ; Size
.text:00405AFC                 mov     [esp+0BCh+var_B8], ebx ; Src
.text:00405B00                 call    memcpy
.text:00405B05                 mov     [esp+0BCh+Src], eax
.text:00405B0C                 test    eax, eax
.text:00405B0E                 jz      loc_404A61
.text:00405B14                 mov     ebx, [esp+0BCh+var_28]
.text:00405B1B                 mov     esi, [esp+0BCh+var_24]
.text:00405B22                 add     ebx, ebx
.text:00405B24                 mov     [esp+0BCh+var_28], ebx
.text:00405B2B                 mov     ecx, ebx
.text:00405B2D                 sub     ebx, esi
.text:00405B2F                 cmp     ebx, edi
.text:00405B31                 jb      short loc_405AC1
.text:00405B33
.text:00405B33 loc_405B33:                             ; CODE XREF: sub_4042E0+17DD↑j
.text:00405B33                 mov     ecx, [esp+0BCh+var_60]
.text:00405B37                 mov     eax, [esp+0BCh+var_64]
.text:00405B3B                 cmp     ecx, eax
.text:00405B3D                 ja      loc_405BF3
.text:00405B43                 mov     ebx, [esp+0BCh+Src]
.text:00405B4A
.text:00405B4A loc_405B4A:                             ; CODE XREF: sub_4042E0+18C8↓j
.text:00405B4A                 mov     eax, [esp+0BCh+var_68]
.text:00405B4E                 mov     edi, [eax+ecx*4]
.text:00405B51                 mov     [ebx+esi*4], edi
.text:00405B54                 mov     edx, [esp+0BCh+var_6C]
.text:00405B58                 mov     edi, [esp+0BCh+var_24]
.text:00405B5F                 mov     ebx, [esp+0BCh+Src]
.text:00405B66                 mov     esi, [edx+ecx*4]
.text:00405B69                 inc     edi
.text:00405B6A                 mov     [esp+0BCh+var_24], edi
.text:00405B71                 mov     [ebx+edi*4], esi
.text:00405B74                 mov     edi, [esp+0BCh+var_24]
.text:00405B7B                 mov     eax, [esp+0BCh+var_78]
.text:00405B7F                 mov     ebx, [esp+0BCh+Src]
.text:00405B86                 inc     edi
.text:00405B87                 mov     [esp+0BCh+var_24], edi
.text:00405B8E                 mov     esi, [eax+ecx*4]
.text:00405B91                 inc     ecx
.text:00405B92                 mov     [ebx+edi*4], esi
.text:00405B95                 mov     esi, [esp+0BCh+var_24]
.text:00405B9C                 inc     esi
.text:00405B9D                 cmp     ecx, [esp+0BCh+var_64]
.text:00405BA1                 mov     [esp+0BCh+var_24], esi
.text:00405BA8                 jbe     short loc_405B4A
.text:00405BAA
.text:00405BAA loc_405BAA:                             ; CODE XREF: sub_4042E0+191A↓j
.text:00405BAA                 mov     eax, [esp+0BCh+var_60]
.text:00405BAE                 mov     [ebx+esi*4], eax
.text:00405BB1                 mov     edi, [esp+0BCh+var_24]
.text:00405BB8                 mov     edx, [esp+0BCh+Src]
.text:00405BBF                 mov     esi, [esp+0BCh+var_64]
.text:00405BC3                 inc     edi
.text:00405BC4                 mov     [esp+0BCh+var_24], edi
.text:00405BCB                 mov     [edx+edi*4], esi
.text:00405BCE                 mov     ebx, [esp+0BCh+var_4C]
.text:00405BD2                 mov     ecx, [esp+0BCh+var_24]
.text:00405BD9                 add     ebx, ebp
.text:00405BDB                 mov     ebp, [esp+0BCh+Src]
.text:00405BE2                 inc     ecx
.text:00405BE3                 mov     [esp+0BCh+var_24], ecx
.text:00405BEA                 mov     [ebp+ecx*4+0], ebx
.text:00405BEE                 jmp     loc_405634
.text:00405BF3 ; ---------------------------------------------------------------------------
.text:00405BF3
.text:00405BF3 loc_405BF3:                             ; CODE XREF: sub_4042E0+185D↑j
.text:00405BF3                 mov     ebx, [esp+0BCh+Src]
.text:00405BFA                 jmp     short loc_405BAA
.text:00405BFC ; ---------------------------------------------------------------------------
.text:00405BFC
.text:00405BFC loc_405BFC:                             ; DATA XREF: .text:0040429C↑o
.text:00405BFC                 jmp     loc_4052DD
.text:00405C01 ; ---------------------------------------------------------------------------
.text:00405C01
.text:00405C01 loc_405C01:                             ; DATA XREF: .text:00404298↑o
.text:00405C01                 jmp     loc_40527A
.text:00405C06 ; ---------------------------------------------------------------------------
.text:00405C06
.text:00405C06 loc_405C06:                             ; DATA XREF: .text:00404290↑o
.text:00405C06                 mov     eax, [esp+0BCh+var_38]
.text:00405C0D                 cmp     [esp+0BCh+var_44], eax
.text:00405C11                 jz      loc_404F82
.text:00405C17                 jmp     loc_404732
.text:00405C17 ; ---------------------------------------------------------------------------
.text:00405C1C                 align 10h
.text:00405C20
.text:00405C20 loc_405C20:                             ; DATA XREF: .text:0040428C↑o
.text:00405C20                 mov     ecx, [esp+0BCh+arg_8]
.text:00405C27                 test    ecx, ecx
.text:00405C29                 jz      short loc_405C50
.text:00405C2B                 mov     ebx, [esp+0BCh+arg_4]
.text:00405C32                 cmp     [esp+0BCh+var_44], ebx
.text:00405C36
.text:00405C36 loc_405C36:                             ; CODE XREF: sub_4042E0+197B↓j
.text:00405C36                 jz      loc_404EB0
.text:00405C3C                 mov     edi, [esp+0BCh+arg_10]
.text:00405C43                 test    edi, edi
.text:00405C45
.text:00405C45 loc_405C45:                             ; CODE XREF: sub_4042E0+19D7↓j
.text:00405C45                 jz      loc_404EB0
.text:00405C4B                 jmp     loc_404732
.text:00405C50 ; ---------------------------------------------------------------------------
.text:00405C50
.text:00405C50 loc_405C50:                             ; CODE XREF: sub_4042E0+1949↑j
.text:00405C50                 mov     esi, [esp+0BCh+arg_C]
.text:00405C57                 cmp     [esp+0BCh+var_44], esi
.text:00405C5B                 jmp     short loc_405C36
.text:00405C5D ; ---------------------------------------------------------------------------
.text:00405C5D
.text:00405C5D loc_405C5D:                             ; DATA XREF: .text:00404288↑o
.text:00405C5D                 mov     ebx, [esp+0BCh+var_38]
.text:00405C64                 cmp     [esp+0BCh+var_44], ebx
.text:00405C68                 jz      short loc_405CAC
.text:00405C6A                 mov     edi, [esp+0BCh+var_34]
.text:00405C71                 cmp     [esp+0BCh+var_44], edi
.text:00405C75                 jz      short loc_405CA0
.text:00405C77                 mov     edx, [esp+0BCh+var_44]
.text:00405C7B                 cmp     byte ptr [edx], 0Ah
.text:00405C7E
.text:00405C7E loc_405C7E:                             ; CODE XREF: sub_4042E0+19CA↓j
.text:00405C7E                                         ; sub_4042E0+1A14↓j
.text:00405C7E                 jnz     loc_404732
.text:00405C84                 mov     ebp, [esp+0BCh+arg_0]
.text:00405C8B                 test    byte ptr [ebp+1Ch], 80h
.text:00405C8F                 jnz     loc_404B0B      ; jumptable 00404557 case 0
.text:00405C8F                                         ; jumptable 00404ED6 case 0
.text:00405C8F                                         ; jumptable 00404FA8 case 0
.text:00405C95                 jmp     loc_404732
.text:00405C95 ; ---------------------------------------------------------------------------
.text:00405C9A                 align 10h
.text:00405CA0
.text:00405CA0 loc_405CA0:                             ; CODE XREF: sub_4042E0+1995↑j
.text:00405CA0                 mov     eax, [esp+0BCh+arg_C]
.text:00405CA7                 cmp     byte ptr [eax], 0Ah
.text:00405CAA                 jmp     short loc_405C7E
.text:00405CAC ; ---------------------------------------------------------------------------
.text:00405CAC
.text:00405CAC loc_405CAC:                             ; CODE XREF: sub_4042E0+1988↑j
.text:00405CAC                 mov     esi, [esp+0BCh+arg_0]
.text:00405CB3                 test    byte ptr [esi+1Ch], 40h
.text:00405CB7                 jmp     short loc_405C45
.text:00405CB9 ; ---------------------------------------------------------------------------
.text:00405CB9
.text:00405CB9 loc_405CB9:                             ; DATA XREF: .text:00404284↑o
.text:00405CB9                 mov     ebx, [esp+0BCh+arg_8]
.text:00405CC0                 test    ebx, ebx
.text:00405CC2                 jz      short loc_405CF6
.text:00405CC4                 mov     edi, [esp+0BCh+arg_4]
.text:00405CCB                 cmp     [esp+0BCh+var_44], edi
.text:00405CCF
.text:00405CCF loc_405CCF:                             ; CODE XREF: sub_4042E0+1A21↓j
.text:00405CCF                 jz      short loc_405CDC
.text:00405CD1                 mov     edx, [esp+0BCh+arg_10]
.text:00405CD8                 test    edx, edx
.text:00405CDA                 jnz     short loc_405CEC
.text:00405CDC
.text:00405CDC loc_405CDC:                             ; CODE XREF: sub_4042E0:loc_405CCF↑j
.text:00405CDC                 mov     ebp, [esp+0BCh+arg_0]
.text:00405CE3                 test    byte ptr [ebp+1Ch], 20h
.text:00405CE7                 jmp     loc_404D84
.text:00405CEC ; ---------------------------------------------------------------------------
.text:00405CEC
.text:00405CEC loc_405CEC:                             ; CODE XREF: sub_4042E0+19FA↑j
.text:00405CEC                 mov     ecx, [esp+0BCh+var_44]
.text:00405CF0                 cmp     byte ptr [ecx-1], 0Ah
.text:00405CF4                 jmp     short loc_405C7E
.text:00405CF6 ; ---------------------------------------------------------------------------
.text:00405CF6
.text:00405CF6 loc_405CF6:                             ; CODE XREF: sub_4042E0+19E2↑j
.text:00405CF6                 mov     eax, [esp+0BCh+arg_C]
.text:00405CFD                 cmp     [esp+0BCh+var_44], eax
.text:00405D01                 jmp     short loc_405CCF
.text:00405D03 ; ---------------------------------------------------------------------------
.text:00405D03
.text:00405D03 loc_405D03:                             ; DATA XREF: .text:00404280↑o
.text:00405D03                 mov     eax, [esp+0BCh+var_4C]
.text:00405D07                 mov     ecx, [esp+0BCh+var_68]
.text:00405D0B                 movzx   esi, byte ptr [eax]
.text:00405D0E                 inc     [esp+0BCh+var_4C]
.text:00405D12                 mov     edi, [ecx+esi*4]
.text:00405D15                 mov     [esp+0BCh+var_A4], esi
.text:00405D19                 cmp     edi, offset unk_413290
.text:00405D1F                 jz      loc_404732
.text:00405D25                 mov     ebp, [esp+0BCh+var_6C]
.text:00405D29                 mov     eax, [ebp+esi*4+0]
.text:00405D2D                 cmp     eax, offset unk_413290
.text:00405D32                 jz      loc_404732
.text:00405D38                 mov     [esp+0BCh+var_A0], edi
.text:00405D3C                 mov     esi, [esp+0BCh+arg_8]
.text:00405D43                 xor     ecx, ecx
.text:00405D45                 test    esi, esi
.text:00405D47                 jz      short loc_405D5D
.text:00405D49                 cmp     [esp+0BCh+arg_4], edi
.text:00405D50                 ja      short loc_405D5D
.text:00405D52                 mov     edx, [esp+0BCh+var_34]
.text:00405D59                 cmp     edi, edx
.text:00405D5B                 jbe     short loc_405D62
.text:00405D5D
.text:00405D5D loc_405D5D:                             ; CODE XREF: sub_4042E0+1A67↑j
.text:00405D5D                                         ; sub_4042E0+1A70↑j
.text:00405D5D                 mov     ecx, 1
.text:00405D62
.text:00405D62 loc_405D62:                             ; CODE XREF: sub_4042E0+1A7B↑j
.text:00405D62                 mov     edi, [esp+0BCh+arg_8]
.text:00405D69                 xor     edx, edx
.text:00405D6B                 test    edi, edi
.text:00405D6D                 jz      short loc_405D86
.text:00405D6F                 cmp     [esp+0BCh+arg_4], eax
.text:00405D76                 ja      short loc_405D86
.text:00405D78                 cmp     eax, [esp+0BCh+var_34]
.text:00405D7F                 ja      short loc_405D86
.text:00405D81                 mov     edx, 1
.text:00405D86
.text:00405D86 loc_405D86:                             ; CODE XREF: sub_4042E0+1A8D↑j
.text:00405D86                                         ; sub_4042E0+1A96↑j ...
.text:00405D86                 cmp     ecx, edx
.text:00405D88                 mov     ebx, eax
.text:00405D8A                 jnz     short loc_405D93
.text:00405D8C                 mov     ebx, [esp+0BCh+var_3C]
.text:00405D93
.text:00405D93 loc_405D93:                             ; CODE XREF: sub_4042E0+1AAA↑j
.text:00405D93                                         ; sub_4042E0+1B21↓j ...
.text:00405D93                 cmp     [esp+0BCh+var_A0], ebx
.text:00405D97                 jz      loc_405E66
.text:00405D9D
.text:00405D9D loc_405D9D:                             ; CODE XREF: sub_4042E0+1BAC↓j
.text:00405D9D                                         ; sub_4042E0+1BB5↓j
.text:00405D9D                 mov     eax, [esp+0BCh+var_48]
.text:00405DA1                 cmp     [esp+0BCh+var_44], eax
.text:00405DA5                 jz      loc_405E40
.text:00405DAB
.text:00405DAB loc_405DAB:                             ; CODE XREF: sub_4042E0+1B81↓j
.text:00405DAB                 mov     ecx, [esp+0BCh+var_44]
.text:00405DAF                 mov     ebp, [esp+0BCh+var_48]
.text:00405DB3                 mov     edx, [esp+0BCh+var_A0]
.text:00405DB7                 sub     ebp, ecx
.text:00405DB9                 mov     ecx, ebx
.text:00405DBB                 sub     ecx, edx
.text:00405DBD                 cmp     ebp, ecx
.text:00405DBF                 jle     short loc_405DC3
.text:00405DC1                 mov     ebp, ecx
.text:00405DC3
.text:00405DC3 loc_405DC3:                             ; CODE XREF: sub_4042E0+1ADF↑j
.text:00405DC3                 mov     esi, [esp+0BCh+var_58]
.text:00405DC7                 test    esi, esi
.text:00405DC9                 jz      short loc_405E2F
.text:00405DCB                 mov     [esp+0BCh+var_B4], ebp
.text:00405DCF                 mov     edx, [esp+0BCh+var_58]
.text:00405DD3                 mov     eax, [esp+0BCh+var_A0]
.text:00405DD7                 mov     edi, [esp+0BCh+var_44]
.text:00405DDB                 mov     [esp+0BCh+var_B0], edx
.text:00405DDF                 mov     [esp+0BCh+var_B8], eax
.text:00405DE3                 mov     [esp+0BCh+Size], edi
.text:00405DE6                 call    sub_4069A0
.text:00405DEB                 test    eax, eax
.text:00405DED
.text:00405DED loc_405DED:                             ; CODE XREF: sub_4042E0+1B5E↓j
.text:00405DED                 jnz     loc_404732
.text:00405DF3                 add     [esp+0BCh+var_44], ebp
.text:00405DF7                 add     [esp+0BCh+var_A0], ebp
.text:00405DFB                 mov     ebp, [esp+0BCh+var_8C]
.text:00405DFF                 test    ebp, ebp
.text:00405E01                 jnz     short loc_405D93
.text:00405E03                 mov     [esp+0BCh+var_8C], 1
.text:00405E0B                 mov     eax, [esp+0BCh+var_60]
.text:00405E0F                 mov     ecx, [esp+0BCh+var_64]
.text:00405E13                 cmp     eax, ecx
.text:00405E15                 ja      loc_405D93
.text:00405E1B
.text:00405E1B loc_405E1B:                             ; CODE XREF: sub_4042E0+1B48↓j
.text:00405E1B                 mov     esi, [esp+0BCh+var_78]
.text:00405E1F                 or      byte ptr [esi+eax*4], 18h
.text:00405E23                 inc     eax
.text:00405E24                 cmp     eax, [esp+0BCh+var_64]
.text:00405E28                 jbe     short loc_405E1B
.text:00405E2A                 jmp     loc_405D93
.text:00405E2F ; ---------------------------------------------------------------------------
.text:00405E2F
.text:00405E2F loc_405E2F:                             ; CODE XREF: sub_4042E0+1AE9↑j
.text:00405E2F                 cld
.text:00405E30                 mov     esi, [esp+0BCh+var_44]
.text:00405E34                 cmp     ebp, ebp
.text:00405E36                 mov     edi, [esp+0BCh+var_A0]
.text:00405E3A                 mov     ecx, ebp
.text:00405E3C                 repe cmpsb
.text:00405E3E                 jmp     short loc_405DED
.text:00405E40 ; ---------------------------------------------------------------------------
.text:00405E40
.text:00405E40 loc_405E40:                             ; CODE XREF: sub_4042E0+1AC5↑j
.text:00405E40                                         ; sub_4042E0+1B7F↓j
.text:00405E40                 mov     eax, [esp+0BCh+var_40]
.text:00405E44                 cmp     [esp+0BCh+var_48], eax
.text:00405E48                 jz      loc_404732
.text:00405E4E                 mov     [esp+0BCh+var_48], eax
.text:00405E52                 mov     edi, [esp+0BCh+arg_C]
.text:00405E59                 cmp     edi, eax
.text:00405E5B                 mov     [esp+0BCh+var_44], edi
.text:00405E5F                 jz      short loc_405E40
.text:00405E61                 jmp     loc_405DAB
.text:00405E66 ; ---------------------------------------------------------------------------
.text:00405E66
.text:00405E66 loc_405E66:                             ; CODE XREF: sub_4042E0+1AB7↑j
.text:00405E66                                         ; sub_4042E0+1BAA↓j
.text:00405E66                 cmp     ebx, [esp+0BCh+var_40]
.text:00405E6A                 jz      short loc_405E91
.text:00405E6C                 mov     ebp, [esp+0BCh+var_A4]
.text:00405E70                 mov     ecx, [esp+0BCh+var_6C]
.text:00405E74                 mov     eax, [ecx+ebp*4]
.text:00405E77                 cmp     ebx, eax
.text:00405E79                 jz      short loc_405E91
.text:00405E7B                 mov     esi, [esp+0BCh+arg_C]
.text:00405E82                 mov     ebx, eax
.text:00405E84                 cmp     esi, eax
.text:00405E86                 mov     [esp+0BCh+var_A0], esi
.text:00405E8A                 jz      short loc_405E66
.text:00405E8C                 jmp     loc_405D9D
.text:00405E91 ; ---------------------------------------------------------------------------
.text:00405E91
.text:00405E91 loc_405E91:                             ; CODE XREF: sub_4042E0+1B8A↑j
.text:00405E91                                         ; sub_4042E0+1B99↑j
.text:00405E91                 cmp     [esp+0BCh+var_A0], ebx
.text:00405E95                 jnz     loc_405D9D
.text:00405E9B                 jmp     loc_404CBE
.text:00405EA0 ; ---------------------------------------------------------------------------
.text:00405EA0
.text:00405EA0 loc_405EA0:                             ; CODE XREF: sub_4042E0+A04↑j
.text:00405EA0                                         ; DATA XREF: .text:jpt_404CE4↑o
.text:00405EA0                 mov     esi, [esp+0BCh+var_4C] ; jumptable 00404CE4 case 7
.text:00405EA4                 mov     ebx, [esp+0BCh+var_78]
.text:00405EA8                 movzx   edx, byte ptr [esi]
.text:00405EAB                 test    byte ptr [ebx+edx*4], 3
.text:00405EAF                 jz      loc_406297
.text:00405EB5                 mov     edi, [esp+0BCh+var_6C]
.text:00405EB9                 mov     eax, [edi+edx*4]
.text:00405EBC                 cmp     eax, offset unk_413290
.text:00405EC1                 jz      loc_40628E
.text:00405EC7
.text:00405EC7 loc_405EC7:                             ; CODE XREF: sub_4042E0+1FB2↓j
.text:00405EC7                                         ; sub_4042E0+1FBF↓j
.text:00405EC7                 mov     ecx, [esp+0BCh+var_74]
.text:00405ECB                 mov     edi, [esp+0BCh+var_6C]
.text:00405ECF                 mov     ebx, [esp+0BCh+var_78]
.text:00405ED3                 mov     [ecx+edx*4], eax
.text:00405ED6                 mov     edx, [esp+0BCh+var_4C]
.text:00405EDA                 mov     eax, [esp+0BCh+var_44]
.text:00405EDE                 movzx   ebp, byte ptr [edx]
.text:00405EE1                 mov     [edi+ebp*4], eax
.text:00405EE4                 movzx   esi, byte ptr [edx]
.text:00405EE7                 and     byte ptr [ebx+esi*4], 0FBh
.text:00405EEB                 mov     [esp+0BCh+var_8C], 0
.text:00405EF3                 mov     ecx, [esp+0BCh+var_64]
.text:00405EF7                 cmp     [esp+0BCh+var_60], ecx
.text:00405EFB                 jz      loc_406276
.text:00405F01                 mov     ebx, [esp+0BCh+var_4C]
.text:00405F05                 movzx   ecx, byte ptr [ebx]
.text:00405F08                 mov     dl, cl
.text:00405F0A                 dec     dl
.text:00405F0C                 jz      short loc_405F35
.text:00405F0E                 mov     esi, [esp+0BCh+var_78]
.text:00405F12                 movzx   edi, dl
.text:00405F15                 test    byte ptr [esi+edi*4], 4
.text:00405F19                 jnz     short loc_405F2D
.text:00405F1B
.text:00405F1B loc_405F1B:                             ; CODE XREF: sub_4042E0+1C4B↓j
.text:00405F1B                 dec     dl
.text:00405F1D                 jz      short loc_405F35
.text:00405F1F                 mov     ebp, [esp+0BCh+var_78]
.text:00405F23                 movzx   ebx, dl
.text:00405F26                 test    byte ptr [ebp+ebx*4+0], 4
.text:00405F2B                 jz      short loc_405F1B
.text:00405F2D
.text:00405F2D loc_405F2D:                             ; CODE XREF: sub_4042E0+1C39↑j
.text:00405F2D                 test    dl, dl
.text:00405F2F                 jnz     loc_40626A
.text:00405F35
.text:00405F35 loc_405F35:                             ; CODE XREF: sub_4042E0+1C2C↑j
.text:00405F35                                         ; sub_4042E0+1C3D↑j
.text:00405F35                 mov     [esp+0BCh+var_60], 101h
.text:00405F3D                 mov     [esp+0BCh+var_64], 100h
.text:00405F45
.text:00405F45 loc_405F45:                             ; CODE XREF: sub_4042E0+1F91↓j
.text:00405F45                                         ; sub_4042E0+1FA9↓j
.text:00405F45                 movzx   edx, cl
.text:00405F48                 mov     ecx, [esp+0BCh+var_78]
.text:00405F4C                 test    byte ptr [ecx+edx*4], 8
.text:00405F50                 jz      short loc_405F85
.text:00405F52                 mov     esi, [esp+0BCh+var_4C]
.text:00405F56                 mov     edi, [esp+0BCh+var_4C]
.text:00405F5A                 dec     esi
.text:00405F5B                 cmp     [esp+0BCh+var_54], esi
.text:00405F5F                 lea     ecx, [edi+2]
.text:00405F62                 jz      short loc_405F85
.text:00405F64
.text:00405F64 loc_405F64:                             ; CODE XREF: sub_4042E0+1CB0↓j
.text:00405F64                                         ; sub_4042E0+1D01↓j ...
.text:00405F64                 mov     [esp+0BCh+var_4C], ecx
.text:00405F68                 mov     ebp, [esp+0BCh+var_50]
.text:00405F6C                 mov     eax, offset loc_404559
.text:00405F71                 cmp     ecx, ebp
.text:00405F73                 jz      loc_404557
.text:00405F79                 movzx   ebx, byte ptr [ecx]
.text:00405F7C                 inc     [esp+0BCh+var_4C]
.text:00405F80                 jmp     loc_404550
.text:00405F85 ; ---------------------------------------------------------------------------
.text:00405F85
.text:00405F85 loc_405F85:                             ; CODE XREF: sub_4042E0+1C70↑j
.text:00405F85                                         ; sub_4042E0+1C82↑j
.text:00405F85                 mov     ecx, [esp+0BCh+var_4C]
.text:00405F89                 add     ecx, 2
.text:00405F8C                 cmp     ecx, [esp+0BCh+var_50]
.text:00405F90                 jnb     short loc_405F64
.text:00405F92                 mov     [esp+0BCh+var_30], ecx
.text:00405F99                 mov     ebx, [esp+0BCh+var_4C]
.text:00405F9D                 xor     ebp, ebp
.text:00405F9F                 mov     [esp+0BCh+var_97], 0
.text:00405FA4                 mov     edx, ebx
.text:00405FA6                 add     edx, 3
.text:00405FA9                 movzx   eax, byte ptr [ebx+2]
.text:00405FAD                 mov     [esp+0BCh+var_30], edx
.text:00405FB4                 cmp     eax, 13h
.text:00405FB7                 ja      loc_40625A
.text:00405FBD                 cmp     eax, 11h
.text:00405FC0                 jnb     loc_406223
.text:00405FC6                 cmp     eax, 0Dh
.text:00405FC9                 jz      loc_406223
.text:00405FCF
.text:00405FCF loc_405FCF:                             ; CODE XREF: sub_4042E0+1F65↓j
.text:00405FCF                                         ; sub_4042E0+1F75↓j ...
.text:00405FCF                 mov     ebx, [esp+0BCh+var_30]
.text:00405FD6                 add     ebx, ebp
.text:00405FD8                 test    ebp, ebp
.text:00405FDA                 mov     [esp+0BCh+var_30], ebx
.text:00405FE1                 jns     short loc_405F64
.text:00405FE3                 cmp     byte ptr [ebx], 0Fh
.text:00405FE6                 jnz     loc_405F64
.text:00405FEC                 cmp     byte ptr [ebx+3], 6
.text:00405FF0                 jnz     loc_405F64
.text:00405FF6                 movzx   eax, byte ptr [ebx+4]
.text:00405FFA                 mov     ebp, [esp+0BCh+var_4C]
.text:00405FFE                 cmp     al, [ebp+0]
.text:00406001                 jnz     loc_405F64
.text:00406007                 mov     ecx, [esp+0BCh+var_78]
.text:0040600B                 movzx   edx, al
.text:0040600E                 movzx   eax, byte ptr [ecx+edx*4]
.text:00406012                 test    al, 10h
.text:00406014                 jz      short loc_406068
.text:00406016                 and     al, 0EFh
.text:00406018                 mov     [ecx+edx*4], al
.text:0040601B                 mov     eax, [esp+0BCh+var_4C]
.text:0040601F                 movzx   ecx, byte ptr [eax]
.text:00406022                 movzx   esi, byte ptr [eax+1]
.text:00406026                 lea     edx, [esi+ecx]
.text:00406029                 cmp     ecx, edx
.text:0040602B                 jnb     short loc_406061
.text:0040602D
.text:0040602D loc_40602D:                             ; CODE XREF: sub_4042E0+1D7F↓j
.text:0040602D                 mov     edx, [esp+0BCh+var_70]
.text:00406031                 mov     ebx, [esp+0BCh+var_68]
.text:00406035                 mov     ebp, [esp+0BCh+var_74]
.text:00406039                 mov     edi, [edx+ecx*4]
.text:0040603C                 mov     [ebx+ecx*4], edi
.text:0040603F                 mov     edx, [ebp+ecx*4+0]
.text:00406043                 cmp     edx, edi
.text:00406045                 jb      short loc_40604E
.text:00406047                 mov     eax, [esp+0BCh+var_6C]
.text:0040604B                 mov     [eax+ecx*4], edx
.text:0040604E
.text:0040604E loc_40604E:                             ; CODE XREF: sub_4042E0+1D65↑j
.text:0040604E                 mov     ebp, [esp+0BCh+var_4C]
.text:00406052                 inc     ecx
.text:00406053                 movzx   esi, byte ptr [ebp+0]
.text:00406057                 movzx   edi, byte ptr [ebp+1]
.text:0040605B                 add     esi, edi
.text:0040605D                 cmp     ecx, esi
.text:0040605F                 jb      short loc_40602D
.text:00406061
.text:00406061 loc_406061:                             ; CODE XREF: sub_4042E0+1D4B↑j
.text:00406061                 mov     ebx, [esp+0BCh+var_30]
.text:00406068
.text:00406068 loc_406068:                             ; CODE XREF: sub_4042E0+1D34↑j
.text:00406068                 mov     esi, ebx
.text:0040606A                 mov     eax, [esp+0BCh+var_60]
.text:0040606E                 inc     ebx
.text:0040606F                 mov     [esp+0BCh+var_30], ebx
.text:00406076                 lea     ecx, [esi+3]
.text:00406079                 mov     edi, [esp+0BCh+var_28]
.text:00406080                 movsx   edx, byte ptr [ebx+1]
.text:00406084                 movzx   ebp, byte ptr [esi+1]
.text:00406088                 mov     esi, [esp+0BCh+var_24]
.text:0040608F                 mov     [esp+0BCh+var_30], ecx
.text:00406096                 mov     ecx, [esp+0BCh+var_64]
.text:0040609A                 shl     edx, 8
.text:0040609D                 add     ebp, edx
.text:0040609F                 mov     edx, edi
.text:004060A1                 sub     ecx, eax
.text:004060A3                 lea     ebx, [ecx+ecx]
.text:004060A6                 sub     edx, esi
.text:004060A8                 lea     eax, [ecx+ebx+7]
.text:004060AC                 cmp     edx, eax
.text:004060AE                 jnb     short loc_406128
.text:004060B0                 mov     [esp+0BCh+var_9C], eax
.text:004060B4
.text:004060B4 loc_4060B4:                             ; CODE XREF: sub_4042E0+1E46↓j
.text:004060B4                 mov     edx, dword_412020
.text:004060BA                 lea     esi, [edx+edx*8]
.text:004060BD                 lea     ebx, [edx+esi*2]
.text:004060C0                 cmp     edi, ebx
.text:004060C2                 ja      loc_404A61
.text:004060C8                 lea     esi, ds:0[edi*8]
.text:004060CF                 mov     [esp+0BCh+Size], esi ; Size
.text:004060D2                 call    malloc
.text:004060D7                 mov     [esp+0BCh+Size], eax ; void *
.text:004060DA                 mov     ebx, [esp+0BCh+var_28]
.text:004060E1                 mov     ecx, [esp+0BCh+Src]
.text:004060E8                 shl     ebx, 2
.text:004060EB                 mov     [esp+0BCh+var_B4], ebx ; Size
.text:004060EF                 mov     [esp+0BCh+var_B8], ecx ; Src
.text:004060F3                 call    memcpy
.text:004060F8                 mov     [esp+0BCh+Src], eax
.text:004060FF                 test    eax, eax
.text:00406101                 jz      loc_404A61
.text:00406107                 mov     edx, [esp+0BCh+var_28]
.text:0040610E                 mov     esi, [esp+0BCh+var_24]
.text:00406115                 add     edx, edx
.text:00406117                 mov     [esp+0BCh+var_28], edx
.text:0040611E                 mov     edi, edx
.text:00406120                 sub     edx, esi
.text:00406122                 cmp     edx, [esp+0BCh+var_9C]
.text:00406126                 jb      short loc_4060B4
.text:00406128
.text:00406128 loc_406128:                             ; CODE XREF: sub_4042E0+1DCE↑j
.text:00406128                 mov     ecx, [esp+0BCh+var_60]
.text:0040612C                 mov     eax, [esp+0BCh+var_64]
.text:00406130                 cmp     ecx, eax
.text:00406132                 ja      loc_406217
.text:00406138                 mov     ebx, [esp+0BCh+Src]
.text:0040613F
.text:0040613F loc_40613F:                             ; CODE XREF: sub_4042E0+1EBD↓j
.text:0040613F                 mov     eax, [esp+0BCh+var_68]
.text:00406143                 mov     edi, [eax+ecx*4]
.text:00406146                 mov     [ebx+esi*4], edi
.text:00406149                 mov     edx, [esp+0BCh+var_6C]
.text:0040614D                 mov     edi, [esp+0BCh+var_24]
.text:00406154                 mov     ebx, [esp+0BCh+Src]
.text:0040615B                 mov     esi, [edx+ecx*4]
.text:0040615E                 inc     edi
.text:0040615F                 mov     [esp+0BCh+var_24], edi
.text:00406166                 mov     [ebx+edi*4], esi
.text:00406169                 mov     edi, [esp+0BCh+var_24]
.text:00406170                 mov     eax, [esp+0BCh+var_78]
.text:00406174                 mov     ebx, [esp+0BCh+Src]
.text:0040617B                 inc     edi
.text:0040617C                 mov     [esp+0BCh+var_24], edi
.text:00406183                 mov     esi, [eax+ecx*4]
.text:00406186                 inc     ecx
.text:00406187                 mov     [ebx+edi*4], esi
.text:0040618A                 mov     esi, [esp+0BCh+var_24]
.text:00406191                 inc     esi
.text:00406192                 cmp     ecx, [esp+0BCh+var_64]
.text:00406196                 mov     [esp+0BCh+var_24], esi
.text:0040619D                 jbe     short loc_40613F
.text:0040619F
.text:0040619F loc_40619F:                             ; CODE XREF: sub_4042E0+1F3E↓j
.text:0040619F                 mov     edi, [esp+0BCh+var_60]
.text:004061A3                 mov     [ebx+esi*4], edi
.text:004061A6                 mov     eax, [esp+0BCh+var_24]
.text:004061AD                 mov     ecx, [esp+0BCh+Src]
.text:004061B4                 mov     edx, [esp+0BCh+var_64]
.text:004061B8                 inc     eax
.text:004061B9                 mov     [esp+0BCh+var_24], eax
.text:004061C0                 mov     [ecx+eax*4], edx
.text:004061C3                 mov     edi, [esp+0BCh+var_24]
.text:004061CA                 mov     esi, [esp+0BCh+var_30]
.text:004061D1                 mov     edx, [esp+0BCh+Src]
.text:004061D8                 inc     edi
.text:004061D9                 add     ebp, esi
.text:004061DB                 mov     [esp+0BCh+var_24], edi
.text:004061E2                 mov     [edx+edi*4], ebp
.text:004061E5                 mov     ecx, [esp+0BCh+var_24]
.text:004061EC                 mov     ebp, [esp+0BCh+Src]
.text:004061F3                 mov     ebx, [esp+0BCh+var_44]
.text:004061F7                 inc     ecx
.text:004061F8                 mov     [esp+0BCh+var_24], ecx
.text:004061FF                 mov     [ebp+ecx*4+0], ebx
.text:00406203                 mov     esi, [esp+0BCh+var_24]
.text:0040620A                 inc     esi
.text:0040620B                 mov     [esp+0BCh+var_24], esi
.text:00406212                 jmp     loc_404610
.text:00406217 ; ---------------------------------------------------------------------------
.text:00406217
.text:00406217 loc_406217:                             ; CODE XREF: sub_4042E0+1E52↑j
.text:00406217                 mov     ebx, [esp+0BCh+Src]
.text:0040621E                 jmp     loc_40619F
.text:00406223 ; ---------------------------------------------------------------------------
.text:00406223
.text:00406223 loc_406223:                             ; CODE XREF: sub_4042E0+1CE0↑j
.text:00406223                                         ; sub_4042E0+1CE9↑j ...
.text:00406223                 mov     edx, [esp+0BCh+var_30]
.text:0040622A                 lea     eax, [edx+2]
.text:0040622D                 movsx   esi, byte ptr [edx+1]
.text:00406231                 movzx   ebp, byte ptr [edx]
.text:00406234                 mov     [esp+0BCh+var_30], eax
.text:0040623B                 shl     esi, 8
.text:0040623E                 add     ebp, esi
.text:00406240                 cmp     [esp+0BCh+var_97], 0
.text:00406245                 jz      loc_405FCF
.text:0040624B                 lea     edi, [edx+4]
.text:0040624E                 mov     [esp+0BCh+var_30], edi
.text:00406255                 jmp     loc_405FCF
.text:0040625A ; ---------------------------------------------------------------------------
.text:0040625A
.text:0040625A loc_40625A:                             ; CODE XREF: sub_4042E0+1CD7↑j
.text:0040625A                 cmp     eax, 16h
.text:0040625D                 jnz     loc_405FCF
.text:00406263                 mov     [esp+0BCh+var_97], 1
.text:00406268                 jmp     short loc_406223
.text:0040626A ; ---------------------------------------------------------------------------
.text:0040626A
.text:0040626A loc_40626A:                             ; CODE XREF: sub_4042E0+1C4F↑j
.text:0040626A                 movzx   eax, dl
.text:0040626D                 mov     [esp+0BCh+var_64], eax
.text:00406271                 jmp     loc_405F45
.text:00406276 ; ---------------------------------------------------------------------------
.text:00406276
.text:00406276 loc_406276:                             ; CODE XREF: sub_4042E0+1C1B↑j
.text:00406276                 mov     [esp+0BCh+var_60], 101h
.text:0040627E                 mov     [esp+0BCh+var_64], 100h
.text:00406286                 movzx   ecx, byte ptr [edx]
.text:00406289                 jmp     loc_405F45
.text:0040628E ; ---------------------------------------------------------------------------
.text:0040628E
.text:0040628E loc_40628E:                             ; CODE XREF: sub_4042E0+1BE1↑j
.text:0040628E                 mov     eax, [esp+0BCh+var_44]
.text:00406292                 jmp     loc_405EC7
.text:00406297 ; ---------------------------------------------------------------------------
.text:00406297
.text:00406297 loc_406297:                             ; CODE XREF: sub_4042E0+1BCF↑j
.text:00406297                 mov     ebp, [esp+0BCh+var_6C]
.text:0040629B                 mov     eax, [ebp+edx*4+0]
.text:0040629F                 jmp     loc_405EC7
.text:004062A4 ; ---------------------------------------------------------------------------
.text:004062A4
.text:004062A4 loc_4062A4:                             ; CODE XREF: sub_4042E0+A04↑j
.text:004062A4                                         ; DATA XREF: .text:jpt_404CE4↑o
.text:004062A4                 mov     ebx, [esp+0BCh+var_4C] ; jumptable 00404CE4 case 6
.text:004062A8                 mov     edx, [esp+0BCh+var_78]
.text:004062AC                 mov     [esp+0BCh+var_30], ebx
.text:004062B3                 movzx   ecx, byte ptr [ebx]
.text:004062B6                 movzx   esi, cl
.text:004062B9                 movzx   ebp, byte ptr [edx+esi*4]
.text:004062BD                 and     ebp, 3
.text:004062C0                 cmp     ebp, 3
.text:004062C3                 jz      loc_406354
.text:004062C9
.text:004062C9 loc_4062C9:                             ; CODE XREF: sub_4042E0+20A6↓j
.text:004062C9                 mov     esi, [esp+0BCh+var_78]
.text:004062CD                 movzx   edx, cl
.text:004062D0                 test    byte ptr [esi+edx*4], 3
.text:004062D4                 jz      short loc_40634B
.text:004062D6                 mov     ebx, [esp+0BCh+var_68]
.text:004062DA                 mov     eax, [ebx+edx*4]
.text:004062DD                 cmp     eax, offset unk_413290
.text:004062E2                 jz      short loc_406345
.text:004062E4
.text:004062E4 loc_4062E4:                             ; CODE XREF: sub_4042E0+2069↓j
.text:004062E4                                         ; sub_4042E0+2072↓j
.text:004062E4                 mov     ebp, [esp+0BCh+var_70]
.text:004062E8                 mov     ebx, [esp+0BCh+var_68]
.text:004062EC                 mov     ecx, [esp+0BCh+var_78]
.text:004062F0                 mov     [ebp+edx*4+0], eax
.text:004062F4                 mov     ebp, [esp+0BCh+var_4C]
.text:004062F8                 mov     eax, [esp+0BCh+var_44]
.text:004062FC                 movzx   edi, byte ptr [ebp+0]
.text:00406300                 mov     [ebx+edi*4], eax
.text:00406303                 movzx   esi, byte ptr [ebp+0]
.text:00406307                 or      byte ptr [ecx+esi*4], 4
.text:0040630B                 movzx   edx, byte ptr [ebp+0]
.text:0040630F                 and     byte ptr [ecx+edx*4], 0F7h
.text:00406313                 mov     [esp+0BCh+var_8C], 0
.text:0040631B                 movzx   esi, byte ptr [ebp+0]
.text:0040631F                 cmp     [esp+0BCh+var_60], 101h
.text:00406327                 mov     [esp+0BCh+var_64], esi
.text:0040632B                 jz      short loc_40633F
.text:0040632D
.text:0040632D loc_40632D:                             ; CODE XREF: sub_4042E0+2063↓j
.text:0040632D                 add     [esp+0BCh+var_4C], 2
.text:00406332                 mov     ecx, [esp+0BCh+var_4C]
.text:00406336                 mov     [esp+0BCh+var_54], ecx
.text:0040633A                 jmp     loc_404EB0
.text:0040633F ; ---------------------------------------------------------------------------
.text:0040633F
.text:0040633F loc_40633F:                             ; CODE XREF: sub_4042E0+204B↑j
.text:0040633F                 mov     [esp+0BCh+var_60], esi
.text:00406343                 jmp     short loc_40632D
.text:00406345 ; ---------------------------------------------------------------------------
.text:00406345
.text:00406345 loc_406345:                             ; CODE XREF: sub_4042E0+2002↑j
.text:00406345                 mov     eax, [esp+0BCh+var_44]
.text:00406349                 jmp     short loc_4062E4
.text:0040634B ; ---------------------------------------------------------------------------
.text:0040634B
.text:0040634B loc_40634B:                             ; CODE XREF: sub_4042E0+1FF4↑j
.text:0040634B                 mov     edi, [esp+0BCh+var_68]
.text:0040634F                 mov     eax, [edi+edx*4]
.text:00406352                 jmp     short loc_4062E4
.text:00406354 ; ---------------------------------------------------------------------------
.text:00406354
.text:00406354 loc_406354:                             ; CODE XREF: sub_4042E0+1FE3↑j
.text:00406354                 mov     [esp+0BCh+var_B4], edx
.text:00406358                 mov     eax, [esp+0BCh+var_50]
.text:0040635C                 lea     edx, [esp+0BCh+var_30]
.text:00406363                 mov     [esp+0BCh+Size], edx
.text:00406366                 mov     [esp+0BCh+var_B8], eax
.text:0040636A                 call    sub_406660
.text:0040636F                 mov     edi, [esp+0BCh+var_78]
.text:00406373                 mov     ebp, eax
.text:00406375                 and     ebp, 3
.text:00406378                 mov     ecx, [edi+esi*4]
.text:0040637B                 and     ecx, 0FFFFFFFCh
.text:0040637E                 or      ecx, ebp
.text:00406380                 mov     [edi+esi*4], ecx
.text:00406383                 movzx   ecx, byte ptr [ebx]
.text:00406386                 jmp     loc_4062C9
.text:00406386 ; ---------------------------------------------------------------------------
.text:0040638B                 align 10h
.text:00406390
.text:00406390 loc_406390:                             ; CODE XREF: sub_4042E0:loc_404557↑j
.text:00406390                                         ; sub_4042E0+BF6↑j ...
.text:00406390                 mov     edx, [esp+0BCh+var_4C] ; jumptable 00404557 case 5
.text:00406390                                         ; jumptable 00404ED6 case 5
.text:00406390                                         ; jumptable 00404FA8 case 5
.text:00406394                 mov     ebp, [esp+0BCh+var_48]
.text:00406398                 cmp     byte ptr [edx-1], 5
.text:0040639C                 setz    [esp+0BCh+var_95]
.text:004063A1                 cmp     [esp+0BCh+var_44], ebp
.text:004063A5                 jz      loc_406460
.text:004063AB
.text:004063AB loc_4063AB:                             ; CODE XREF: sub_4042E0+21A1↓j
.text:004063AB                 mov     esi, [esp+0BCh+var_58]
.text:004063AF                 test    esi, esi
.text:004063B1                 jz      loc_40644F
.text:004063B7                 mov     ebx, [esp+0BCh+var_44]
.text:004063BB                 mov     ecx, [esp+0BCh+var_58]
.text:004063BF                 movzx   edi, byte ptr [ebx]
.text:004063C2                 movzx   ebx, byte ptr [edi+ecx]
.text:004063C6
.text:004063C6 loc_4063C6:                             ; CODE XREF: sub_4042E0+2177↓j
.text:004063C6                 mov     esi, [esp+0BCh+var_4C]
.text:004063CA                 movzx   eax, bl
.text:004063CD                 movzx   edx, byte ptr [esi]
.text:004063D0                 movzx   edi, dl
.text:004063D3                 shl     edi, 3
.text:004063D6                 mov     [esp+0BCh+var_96], dl
.text:004063DA                 cmp     eax, edi
.text:004063DC                 jnb     short loc_4063FB
.text:004063DE                 mov     dl, bl
.text:004063E0                 shr     dl, 3
.text:004063E3                 movzx   ecx, dl
.text:004063E6                 movzx   eax, byte ptr [ecx+esi+1]
.text:004063EB                 mov     ecx, ebx
.text:004063ED                 and     ecx, 7
.text:004063F0                 sar     eax, cl
.text:004063F2                 test    al, 1
.text:004063F4                 jz      short loc_4063FB
.text:004063F6                 xor     [esp+0BCh+var_95], 1
.text:004063FB
.text:004063FB loc_4063FB:                             ; CODE XREF: sub_4042E0+20FC↑j
.text:004063FB                                         ; sub_4042E0+2114↑j
.text:004063FB                 movzx   ebx, [esp+0BCh+var_96]
.text:00406400                 mov     ebp, [esp+0BCh+var_4C]
.text:00406404                 cmp     [esp+0BCh+var_95], 0
.text:00406409                 lea     esi, [ebx+ebp+1]
.text:0040640D                 mov     [esp+0BCh+var_4C], esi
.text:00406411                 jz      loc_404732
.text:00406417                 mov     edi, [esp+0BCh+var_8C]
.text:0040641B                 test    edi, edi
.text:0040641D                 jnz     loc_4050FF
.text:00406423                 mov     [esp+0BCh+var_8C], 1
.text:0040642B                 mov     eax, [esp+0BCh+var_60]
.text:0040642F                 mov     edx, [esp+0BCh+var_64]
.text:00406433                 cmp     eax, edx
.text:00406435                 ja      loc_4050FF
.text:0040643B
.text:0040643B loc_40643B:                             ; CODE XREF: sub_4042E0+2168↓j
.text:0040643B                 mov     ecx, [esp+0BCh+var_78]
.text:0040643F                 or      byte ptr [ecx+eax*4], 18h
.text:00406443                 inc     eax
.text:00406444                 cmp     eax, [esp+0BCh+var_64]
.text:00406448                 jbe     short loc_40643B
.text:0040644A                 jmp     loc_4050FF
.text:0040644F ; ---------------------------------------------------------------------------
.text:0040644F
.text:0040644F loc_40644F:                             ; CODE XREF: sub_4042E0+20D1↑j
.text:0040644F                 mov     ebp, [esp+0BCh+var_44]
.text:00406453                 movzx   ebx, byte ptr [ebp+0]
.text:00406457                 jmp     loc_4063C6
.text:00406457 ; ---------------------------------------------------------------------------
.text:0040645C                 align 10h
.text:00406460
.text:00406460 loc_406460:                             ; CODE XREF: sub_4042E0+20C5↑j
.text:00406460                                         ; sub_4042E0+219F↓j
.text:00406460                 mov     ecx, [esp+0BCh+var_40]
.text:00406464                 cmp     [esp+0BCh+var_48], ecx
.text:00406468                 jz      loc_404732
.text:0040646E                 mov     [esp+0BCh+var_48], ecx
.text:00406472                 mov     eax, [esp+0BCh+arg_C]
.text:00406479                 cmp     eax, ecx
.text:0040647B                 mov     [esp+0BCh+var_44], eax
.text:0040647F                 jz      short loc_406460
.text:00406481                 jmp     loc_4063AB
.text:00406486 ; ---------------------------------------------------------------------------
.text:00406486
.text:00406486 loc_406486:                             ; CODE XREF: sub_4042E0:loc_404557↑j
.text:00406486                                         ; sub_4042E0+BF6↑j ...
.text:00406486                 jmp     loc_406390      ; jumptable 00404557 case 4
.text:00406486                                         ; jumptable 00404ED6 case 4
.text:00406486                                         ; jumptable 00404FA8 case 4
.text:0040648B ; ---------------------------------------------------------------------------
.text:0040648B
.text:0040648B loc_40648B:                             ; CODE XREF: sub_4042E0+C88↑j
.text:0040648B                 mov     ebx, [esp+0BCh+var_34]
.text:00406492                 movzx   eax, byte ptr [ebx-1]
.text:00406496                 jmp     loc_404F75
.text:0040649B ; ---------------------------------------------------------------------------
.text:0040649B
.text:0040649B loc_40649B:                             ; CODE XREF: sub_4042E0+C76↑j
.text:0040649B                 mov     edi, [esp+0BCh+arg_C]
.text:004064A2                 movzx   eax, byte ptr [edi]
.text:004064A5                 jmp     loc_404F75
.text:004064AA ; ---------------------------------------------------------------------------
.text:004064AA
.text:004064AA loc_4064AA:                             ; CODE XREF: sub_4042E0+C43↑j
.text:004064AA                 mov     esi, [esp+0BCh+var_34]
.text:004064B1                 movzx   eax, byte ptr [esi-1]
.text:004064B5                 jmp     loc_404F31
.text:004064BA ; ---------------------------------------------------------------------------
.text:004064BA
.text:004064BA loc_4064BA:                             ; CODE XREF: sub_4042E0+C33↑j
.text:004064BA                 mov     ebp, [esp+0BCh+arg_C]
.text:004064C1                 movzx   eax, byte ptr [ebp+0]
.text:004064C5                 jmp     loc_404F31
.text:004064CA ; ---------------------------------------------------------------------------
.text:004064CA
.text:004064CA loc_4064CA:                             ; CODE XREF: sub_4042E0+C01↑j
.text:004064CA                 mov     edx, [esp+0BCh+arg_C]
.text:004064D1                 cmp     [esp+0BCh+var_44], edx
.text:004064D5                 jmp     loc_404EF2
.text:004064DA ; ---------------------------------------------------------------------------
.text:004064DA
.text:004064DA loc_4064DA:                             ; CODE XREF: sub_4042E0+AFB↑j
.text:004064DA                 mov     ebx, [esp+0BCh+arg_C]
.text:004064E1                 cmp     [esp+0BCh+var_44], ebx
.text:004064E5                 jmp     loc_404DEC
.text:004064EA ; ---------------------------------------------------------------------------
.text:004064EA
.text:004064EA loc_4064EA:                             ; CODE XREF: sub_4042E0+993↑j
.text:004064EA                 mov     edi, [esp+0BCh+var_44]
.text:004064EE                 cmp     byte ptr [edi], 0
.text:004064F1                 jmp     loc_404C89
.text:004064F6 ; ---------------------------------------------------------------------------
.text:004064F6
.text:004064F6 loc_4064F6:                             ; CODE XREF: sub_4042E0+964↑j
.text:004064F6                 mov     edi, [esp+0BCh+var_44]
.text:004064FA                 cmp     byte ptr [edi], 0Ah
.text:004064FD                 jmp     loc_404C5A
.text:00406502 ; ---------------------------------------------------------------------------
.text:00406502
.text:00406502 loc_406502:                             ; CODE XREF: sub_4042E0+94B↑j
.text:00406502                                         ; sub_4042E0+2241↓j
.text:00406502                 mov     eax, [esp+0BCh+var_40]
.text:00406506                 cmp     [esp+0BCh+var_48], eax
.text:0040650A                 jz      loc_404732
.text:00406510                 mov     [esp+0BCh+var_48], eax
.text:00406514                 mov     ecx, [esp+0BCh+arg_C]
.text:0040651B                 cmp     ecx, eax
.text:0040651D                 mov     [esp+0BCh+var_44], ecx
.text:00406521                 jz      short loc_406502
.text:00406523                 jmp     loc_404C31
.text:00406528 ; ---------------------------------------------------------------------------
.text:00406528
.text:00406528 loc_406528:                             ; CODE XREF: sub_4042E0+21B↑j
.text:00406528                                         ; sub_4042E0+22F↑j
.text:00406528                 mov     edi, [esp+0BCh+arg_C]
.text:0040652F                 mov     esi, [esp+0BCh+arg_14]
.text:00406536                 mov     ecx, [esp+0BCh+arg_8]
.text:0040653D                 mov     ebp, [esp+0BCh+var_40]
.text:00406541                 add     edi, esi
.text:00406543                 sub     edi, ecx
.text:00406545                 mov     [esp+0BCh+var_44], edi
.text:00406549                 mov     [esp+0BCh+var_48], ebp
.text:0040654D                 jmp     loc_404534
.text:00406552 ; ---------------------------------------------------------------------------
.text:00406552
.text:00406552 loc_406552:                             ; CODE XREF: sub_4042E0+1F1↑j
.text:00406552                 mov     ebp, [esp+0BCh+arg_C]
.text:00406559                 mov     ebx, [esp+0BCh+arg_8]
.text:00406560                 mov     edi, [esp+0BCh+var_34]
.text:00406567                 add     esi, ebp
.text:00406569                 sub     esi, ebx
.text:0040656B                 mov     [esp+0BCh+var_3C], edi
.text:00406572                 jmp     loc_4044EE
.text:00406577 ; ---------------------------------------------------------------------------
.text:00406577
.text:00406577 loc_406577:                             ; CODE XREF: sub_4042E0+B0↑j
.text:00406577                 mov     edi, [esp+0BCh+var_5C]
.text:0040657B                 shl     edi, 2
.text:0040657E                 mov     [esp+0BCh+Size], edi ; Size
.text:00406581                 call    malloc
.text:00406586                 mov     [esp+0BCh+var_68], eax
.text:0040658A                 mov     [esp+0BCh+Size], edi ; Size
.text:0040658D                 call    malloc
.text:00406592                 mov     [esp+0BCh+var_6C], eax
.text:00406596                 mov     [esp+0BCh+Size], edi ; Size
.text:00406599                 call    malloc
.text:0040659E                 mov     [esp+0BCh+var_70], eax
.text:004065A2                 mov     [esp+0BCh+Size], edi ; Size
.text:004065A5                 call    malloc
.text:004065AA                 mov     [esp+0BCh+var_74], eax
.text:004065AE                 mov     [esp+0BCh+Size], edi ; Size
.text:004065B1                 call    malloc
.text:004065B6                 mov     [esp+0BCh+var_80], eax
.text:004065BA                 mov     [esp+0BCh+Size], edi ; Size
.text:004065BD                 call    malloc
.text:004065C2                 mov     [esp+0BCh+var_84], eax
.text:004065C6                 mov     [esp+0BCh+Size], edi ; Size
.text:004065C9                 call    malloc
.text:004065CE                 mov     [esp+0BCh+var_78], eax
.text:004065D2                 mov     [esp+0BCh+Size], edi ; Size
.text:004065D5                 call    malloc
.text:004065DA                 mov     [esp+0BCh+var_90], eax
.text:004065DE                 mov     [esp+0BCh+Size], edi ; Size
.text:004065E1                 call    malloc
.text:004065E6                 mov     [esp+0BCh+var_94], eax
.text:004065EA                 mov     ecx, [esp+0BCh+var_68]
.text:004065EE                 test    ecx, ecx
.text:004065F0                 jz      loc_404A61
.text:004065F6                 mov     ebx, [esp+0BCh+var_6C]
.text:004065FA                 test    ebx, ebx
.text:004065FC                 jz      loc_404A61
.text:00406602                 mov     edx, [esp+0BCh+var_70]
.text:00406606                 test    edx, edx
.text:00406608                 jz      loc_404A61
.text:0040660E                 mov     ebp, [esp+0BCh+var_74]
.text:00406612                 test    ebp, ebp
.text:00406614                 jz      loc_404A61
.text:0040661A                 mov     ecx, [esp+0BCh+var_78]
.text:0040661E                 test    ecx, ecx
.text:00406620                 jz      loc_404A61
.text:00406626                 mov     edi, [esp+0BCh+var_80]
.text:0040662A                 test    edi, edi
.text:0040662C                 jz      loc_404A61
.text:00406632                 mov     ebx, [esp+0BCh+var_84]
.text:00406636                 test    ebx, ebx
.text:00406638                 jz      loc_404A61
.text:0040663E                 mov     edx, [esp+0BCh+var_90]
.text:00406642                 test    edx, edx
.text:00406644                 jz      loc_404A61
.text:0040664A                 test    eax, eax
.text:0040664C                 jnz     loc_4043DE
.text:00406652                 jmp     loc_404A61
.text:00406652 sub_4042E0      endp
.text:00406652
.text:00406652 ; ---------------------------------------------------------------------------
.text:00406657                 align 10h
.text:00406660
.text:00406660 ; =============== S U B R O U T I N E =======================================
.text:00406660
.text:00406660
.text:00406660 sub_406660      proc near               ; CODE XREF: sub_4042E0+208A↑p
.text:00406660                                         ; sub_406810+CA↓p
.text:00406660
.text:00406660 var_2C          = dword ptr -2Ch
.text:00406660 var_28          = dword ptr -28h
.text:00406660 var_24          = dword ptr -24h
.text:00406660 var_14          = dword ptr -14h
.text:00406660 arg_0           = dword ptr  4
.text:00406660 arg_4           = dword ptr  8
.text:00406660 arg_8           = dword ptr  0Ch
.text:00406660
.text:00406660                 push    ebp
.text:00406661                 push    edi
.text:00406662                 push    esi
.text:00406663                 push    ebx
.text:00406664                 sub     esp, 1Ch
.text:00406667                 mov     ebp, [esp+2Ch+arg_0]
.text:0040666B                 mov     edi, [esp+2Ch+arg_4]
.text:0040666F                 mov     esi, [esp+2Ch+arg_8]
.text:00406673                 mov     eax, [ebp+0]
.text:00406676                 add     eax, 2
.text:00406679                 cmp     eax, edi
.text:0040667B                 mov     ecx, eax
.text:0040667D                 mov     [esp+2Ch+var_14], eax
.text:00406681                 jnb     short loc_4066C3
.text:00406683                 lea     esi, [esi+0]
.text:00406689                 lea     edi, [edi+0]
.text:00406690
.text:00406690 loc_406690:                             ; CODE XREF: sub_406660+61↓j
.text:00406690                 movzx   eax, byte ptr [ecx]
.text:00406693                 cmp     eax, 7
.text:00406696                 jz      loc_406773
.text:0040669C                 cmp     eax, 0Fh
.text:0040669F                 jz      short loc_4066D0
.text:004066A1                 mov     [esp+2Ch+var_24], esi
.text:004066A5                 lea     ebx, [esp+2Ch+var_14]
.text:004066A9                 mov     [esp+2Ch+var_28], edi
.text:004066AD                 mov     [esp+2Ch+var_2C], ebx
.text:004066B0                 call    sub_406810
.text:004066B5                 xor     edx, edx
.text:004066B7                 test    al, al
.text:004066B9                 jz      short loc_4066C5
.text:004066BB
.text:004066BB loc_4066BB:                             ; CODE XREF: sub_406660+8B↓j
.text:004066BB                                         ; sub_406660+BE↓j
.text:004066BB                 mov     ecx, [esp+2Ch+var_14]
.text:004066BF                 cmp     ecx, edi
.text:004066C1                 jb      short loc_406690
.text:004066C3
.text:004066C3 loc_4066C3:                             ; CODE XREF: sub_406660+21↑j
.text:004066C3                 xor     edx, edx
.text:004066C5
.text:004066C5 loc_4066C5:                             ; CODE XREF: sub_406660+59↑j
.text:004066C5                                         ; sub_406660+B8↓j ...
.text:004066C5                 add     esp, 1Ch
.text:004066C8                 mov     eax, edx
.text:004066CA                 pop     ebx
.text:004066CB                 pop     esi
.text:004066CC                 pop     edi
.text:004066CD                 pop     ebp
.text:004066CE                 retn
.text:004066CE ; ---------------------------------------------------------------------------
.text:004066CF                 align 10h
.text:004066D0
.text:004066D0 loc_4066D0:                             ; CODE XREF: sub_406660+3F↑j
.text:004066D0                 lea     edx, [ecx+1]
.text:004066D3                 mov     [esp+2Ch+var_14], edx
.text:004066D7                 movsx   eax, byte ptr [edx+1]
.text:004066DB                 lea     edx, [ecx+3]
.text:004066DE                 movzx   ebx, byte ptr [ecx+1]
.text:004066E2                 mov     [esp+2Ch+var_14], edx
.text:004066E6                 shl     eax, 8
.text:004066E9                 add     ebx, eax
.text:004066EB                 js      short loc_4066BB
.text:004066ED                 cmp     byte ptr [ebx+edx-3], 0Eh
.text:004066F2                 jz      short loc_406720
.text:004066F4
.text:004066F4 loc_4066F4:                             ; CODE XREF: sub_406660+E9↓j
.text:004066F4                                         ; sub_406660+111↓j
.text:004066F4                 movsx   ecx, byte ptr [edx-1]
.text:004066F8                 movzx   ebx, byte ptr [edx-2]
.text:004066FC                 mov     [esp+2Ch+var_2C], edx
.text:004066FF                 mov     [esp+2Ch+var_24], esi
.text:00406703                 shl     ecx, 8
.text:00406706                 add     ebx, ecx
.text:00406708                 lea     ecx, [ebx+edx]
.text:0040670B                 mov     [esp+2Ch+var_28], ecx
.text:0040670F                 call    sub_406790
.text:00406714                 xor     edx, edx
.text:00406716                 test    al, al
.text:00406718                 jz      short loc_4066C5
.text:0040671A                 add     [esp+2Ch+var_14], ebx
.text:0040671E                 jmp     short loc_4066BB
.text:00406720 ; ---------------------------------------------------------------------------
.text:00406720
.text:00406720 loc_406720:                             ; CODE XREF: sub_406660+92↑j
.text:00406720                                         ; sub_406660+109↓j
.text:00406720                 mov     [esp+2Ch+var_2C], edx
.text:00406723                 lea     ecx, [ebx+edx-3]
.text:00406727                 mov     [esp+2Ch+var_24], esi
.text:0040672B                 mov     [esp+2Ch+var_28], ecx
.text:0040672F                 call    sub_406790
.text:00406734                 xor     edx, edx
.text:00406736                 test    al, al
.text:00406738                 jz      short loc_4066C5
.text:0040673A                 mov     ecx, [esp+2Ch+var_14]
.text:0040673E                 add     ecx, ebx
.text:00406740                 mov     edx, ecx
.text:00406742                 mov     [esp+2Ch+var_14], ecx
.text:00406746                 cmp     byte ptr [ecx], 0Fh
.text:00406749                 jnz     short loc_4066F4
.text:0040674B                 inc     edx
.text:0040674C                 mov     [esp+2Ch+var_14], edx
.text:00406750                 movsx   eax, byte ptr [edx+1]
.text:00406754                 lea     edx, [ecx+3]
.text:00406757                 movzx   ebx, byte ptr [ecx+1]
.text:0040675B                 mov     [esp+2Ch+var_14], edx
.text:0040675F                 shl     eax, 8
.text:00406762                 add     ebx, eax
.text:00406764                 cmp     byte ptr [ebx+edx-3], 0Eh
.text:00406769                 jz      short loc_406720
.text:0040676B                 mov     [esp+2Ch+var_14], ecx
.text:0040676F                 mov     edx, ecx
.text:00406771                 jmp     short loc_4066F4
.text:00406773 ; ---------------------------------------------------------------------------
.text:00406773
.text:00406773 loc_406773:                             ; CODE XREF: sub_406660+36↑j
.text:00406773                 lea     edx, [ecx+2]
.text:00406776                 mov     [ebp+0], edx
.text:00406779                 mov     edx, 1
.text:0040677E                 jmp     loc_4066C5
.text:0040677E sub_406660      endp
.text:0040677E
.text:0040677E ; ---------------------------------------------------------------------------
.text:00406783                 align 10h
.text:00406790
.text:00406790 ; =============== S U B R O U T I N E =======================================
.text:00406790
.text:00406790
.text:00406790 sub_406790      proc near               ; CODE XREF: sub_406660+AF↑p
.text:00406790                                         ; sub_406660+CF↑p
.text:00406790
.text:00406790 var_1C          = dword ptr -1Ch
.text:00406790 var_18          = dword ptr -18h
.text:00406790 var_14          = dword ptr -14h
.text:00406790 var_C           = dword ptr -0Ch
.text:00406790 arg_0           = dword ptr  4
.text:00406790 arg_4           = dword ptr  8
.text:00406790 arg_8           = dword ptr  0Ch
.text:00406790
.text:00406790                 push    esi
.text:00406791                 push    ebx
.text:00406792                 sub     esp, 14h
.text:00406795                 mov     edx, [esp+1Ch+arg_0]
.text:00406799                 mov     ebx, [esp+1Ch+arg_4]
.text:0040679D                 mov     esi, [esp+1Ch+arg_8]
.text:004067A1                 mov     ecx, edx
.text:004067A3                 mov     [esp+1Ch+var_C], edx
.text:004067A7                 cmp     edx, ebx
.text:004067A9                 jnb     short loc_4067D7
.text:004067AB                 nop
.text:004067AC                 lea     esi, [esi+0]
.text:004067B0
.text:004067B0 loc_4067B0:                             ; CODE XREF: sub_406790+45↓j
.text:004067B0                 cmp     byte ptr [ecx], 0Fh
.text:004067B3                 jz      short loc_4067E4
.text:004067B5                 mov     [esp+1Ch+var_14], esi
.text:004067B9                 lea     edx, [esp+1Ch+var_C]
.text:004067BD                 mov     [esp+1Ch+var_1C], edx
.text:004067C0                 mov     [esp+1Ch+var_18], ebx
.text:004067C4                 call    sub_406810
.text:004067C9                 xor     edx, edx
.text:004067CB                 test    al, al
.text:004067CD                 jz      short loc_4067DC
.text:004067CF
.text:004067CF loc_4067CF:                             ; CODE XREF: sub_406790+70↓j
.text:004067CF                 mov     ecx, [esp+1Ch+var_C]
.text:004067D3                 cmp     ecx, ebx
.text:004067D5                 jb      short loc_4067B0
.text:004067D7
.text:004067D7 loc_4067D7:                             ; CODE XREF: sub_406790+19↑j
.text:004067D7                 mov     edx, 1
.text:004067DC
.text:004067DC loc_4067DC:                             ; CODE XREF: sub_406790+3D↑j
.text:004067DC                 add     esp, 14h
.text:004067DF                 mov     eax, edx
.text:004067E1                 pop     ebx
.text:004067E2                 pop     esi
.text:004067E3                 retn
.text:004067E4 ; ---------------------------------------------------------------------------
.text:004067E4
.text:004067E4 loc_4067E4:                             ; CODE XREF: sub_406790+23↑j
.text:004067E4                 lea     eax, [ecx+1]
.text:004067E7                 mov     [esp+1Ch+var_C], eax
.text:004067EB                 movsx   eax, byte ptr [eax+1]
.text:004067EF                 movzx   edx, byte ptr [ecx+1]
.text:004067F3                 shl     eax, 8
.text:004067F6                 add     edx, eax
.text:004067F8                 lea     eax, [edx+ecx+3]
.text:004067FC                 mov     [esp+1Ch+var_C], eax
.text:00406800                 jmp     short loc_4067CF
.text:00406800 sub_406790      endp
.text:00406800
.text:00406800 ; ---------------------------------------------------------------------------
.text:00406802                 align 10h
.text:00406810
.text:00406810 ; =============== S U B R O U T I N E =======================================
.text:00406810
.text:00406810
.text:00406810 sub_406810      proc near               ; CODE XREF: sub_406660+50↑p
.text:00406810                                         ; sub_406790+34↑p
.text:00406810
.text:00406810 var_1C          = dword ptr -1Ch
.text:00406810 var_18          = dword ptr -18h
.text:00406810 var_14          = dword ptr -14h
.text:00406810 var_10          = dword ptr -10h
.text:00406810 var_C           = dword ptr -0Ch
.text:00406810 var_8           = dword ptr -8
.text:00406810 var_4           = dword ptr -4
.text:00406810 arg_0           = dword ptr  4
.text:00406810 arg_4           = dword ptr  8
.text:00406810 arg_8           = dword ptr  0Ch
.text:00406810
.text:00406810                 sub     esp, 1Ch
.text:00406813                 mov     [esp+1Ch+var_4], edi
.text:00406817                 mov     edi, [esp+1Ch+arg_0]
.text:0040681B                 mov     [esp+1Ch+var_C], ebx
.text:0040681F                 mov     ebx, [esp+1Ch+arg_8]
.text:00406823                 mov     [esp+1Ch+var_8], esi
.text:00406827                 mov     edx, [edi]
.text:00406829                 mov     [esp+1Ch+var_10], edx
.text:0040682D                 movzx   eax, byte ptr [edx]
.text:00406830                 inc     edx
.text:00406831                 mov     [esp+1Ch+var_10], edx
.text:00406835                 cmp     eax, 1Dh        ; switch 30 cases
.text:00406838                 ja      def_40683E      ; jumptable 0040683E default case, cases 1-5,7,14-20,22,24,25
.text:0040683E                 jmp     ds:jpt_40683E[eax*4] ; switch jump
.text:0040683E ; ---------------------------------------------------------------------------
.text:00406845                 align 4
.text:00406848 jpt_40683E      dd offset loc_4068F3    ; DATA XREF: sub_406810+2E↑r
.text:00406848                 dd offset def_40683E    ; jump table for switch statement
.text:00406848                 dd offset def_40683E
.text:00406848                 dd offset def_40683E
.text:00406848                 dd offset def_40683E
.text:00406848                 dd offset def_40683E
.text:00406848                 dd offset loc_4068C0
.text:00406848                 dd offset def_40683E
.text:00406848                 dd offset loc_406922
.text:00406848                 dd offset loc_4068F3
.text:00406848                 dd offset loc_4068F3
.text:00406848                 dd offset loc_4068F3
.text:00406848                 dd offset loc_4068F3
.text:00406848                 dd offset loc_406934
.text:00406848                 dd offset def_40683E
.text:00406848                 dd offset def_40683E
.text:00406848                 dd offset def_40683E
.text:00406848                 dd offset def_40683E
.text:00406848                 dd offset def_40683E
.text:00406848                 dd offset def_40683E
.text:00406848                 dd offset def_40683E
.text:00406848                 dd offset loc_406955
.text:00406848                 dd offset def_40683E
.text:00406848                 dd offset loc_406991
.text:00406848                 dd offset def_40683E
.text:00406848                 dd offset def_40683E
.text:00406848                 dd offset loc_4068F3
.text:00406848                 dd offset loc_4068F3
.text:00406848                 dd offset loc_4068F3
.text:00406848                 dd offset loc_4068F3
.text:004068C0 ; ---------------------------------------------------------------------------
.text:004068C0
.text:004068C0 loc_4068C0:                             ; CODE XREF: sub_406810+2E↑j
.text:004068C0                                         ; DATA XREF: sub_406810:jpt_40683E↑o
.text:004068C0                 mov     ecx, [esp+1Ch+var_10] ; jumptable 0040683E case 6
.text:004068C4                 mov     edx, [esp+1Ch+arg_4]
.text:004068C8                 movzx   esi, byte ptr [ecx]
.text:004068CB                 lea     ecx, [esp+1Ch+var_10]
.text:004068CF                 mov     [esp+1Ch+var_18], edx
.text:004068D3                 mov     [esp+1Ch+var_1C], ecx
.text:004068D6                 mov     [esp+1Ch+var_14], ebx
.text:004068DA                 call    sub_406660
.text:004068DF                 movzx   edx, byte ptr [ebx+esi*4]
.text:004068E3                 mov     cl, al
.text:004068E5                 and     edx, 3
.text:004068E8                 cmp     edx, 3
.text:004068EB                 jz      short loc_406910
.text:004068ED
.text:004068ED loc_4068ED:                             ; CODE XREF: sub_406810+110↓j
.text:004068ED                 xor     eax, eax
.text:004068EF                 test    cl, cl
.text:004068F1                 jz      short loc_406900
.text:004068F3
.text:004068F3 loc_4068F3:                             ; CODE XREF: sub_406810+2E↑j
.text:004068F3                                         ; DATA XREF: sub_406810:jpt_40683E↑o
.text:004068F3                 mov     ecx, [esp+1Ch+var_10] ; jumptable 0040683E cases 0,9-12,26-29
.text:004068F7
.text:004068F7 loc_4068F7:                             ; CODE XREF: sub_406810+11D↓j
.text:004068F7                                         ; sub_406810+143↓j
.text:004068F7                 mov     [edi], ecx
.text:004068F9                 mov     eax, 1
.text:004068FE                 mov     esi, esi
.text:00406900
.text:00406900 loc_406900:                             ; CODE XREF: sub_406810+E1↑j
.text:00406900                                         ; sub_406810+122↓j ...
.text:00406900                 mov     ebx, [esp+1Ch+var_C]
.text:00406904                 mov     esi, [esp+1Ch+var_8]
.text:00406908                 mov     edi, [esp+1Ch+var_4]
.text:0040690C                 add     esp, 1Ch
.text:0040690F                 retn
.text:00406910 ; ---------------------------------------------------------------------------
.text:00406910
.text:00406910 loc_406910:                             ; CODE XREF: sub_406810+DB↑j
.text:00406910                 mov     eax, [ebx+esi*4]
.text:00406913                 mov     edx, ecx
.text:00406915                 and     edx, 3
.text:00406918                 and     eax, 0FFFFFFFCh
.text:0040691B                 or      eax, edx
.text:0040691D                 mov     [ebx+esi*4], eax
.text:00406920                 jmp     short loc_4068ED
.text:00406922 ; ---------------------------------------------------------------------------
.text:00406922
.text:00406922 loc_406922:                             ; CODE XREF: sub_406810+2E↑j
.text:00406922                                         ; DATA XREF: sub_406810:jpt_40683E↑o
.text:00406922                 mov     ecx, [esp+1Ch+var_10] ; jumptable 0040683E case 8
.text:00406926                 movzx   esi, byte ptr [ecx]
.text:00406929                 test    byte ptr [ebx+esi*4], 3
.text:0040692D                 jnz     short loc_4068F7
.text:0040692F                 nop
.text:00406930
.text:00406930 def_40683E:                             ; CODE XREF: sub_406810+28↑j
.text:00406930                                         ; sub_406810+2E↑j ...
.text:00406930                 xor     eax, eax        ; jumptable 0040683E default case, cases 1-5,7,14-20,22,24,25
.text:00406932                 jmp     short loc_406900
.text:00406934 ; ---------------------------------------------------------------------------
.text:00406934
.text:00406934 loc_406934:                             ; CODE XREF: sub_406810+2E↑j
.text:00406934                                         ; DATA XREF: sub_406810:jpt_40683E↑o
.text:00406934                 mov     edx, [esp+1Ch+var_10] ; jumptable 0040683E case 13
.text:00406938                 lea     ecx, [edx+2]
.text:0040693B                 movsx   esi, byte ptr [edx+1]
.text:0040693F                 movzx   ebx, byte ptr [edx]
.text:00406942                 mov     [esp+1Ch+var_10], ecx
.text:00406946                 shl     esi, 8
.text:00406949                 add     ebx, esi
.text:0040694B                 js      short def_40683E ; jumptable 0040683E default case, cases 1-5,7,14-20,22,24,25
.text:0040694D                 add     ecx, ebx
.text:0040694F
.text:0040694F loc_40694F:                             ; CODE XREF: sub_406810+17F↓j
.text:0040694F                 mov     [esp+1Ch+var_10], ecx
.text:00406953                 jmp     short loc_4068F7
.text:00406955 ; ---------------------------------------------------------------------------
.text:00406955
.text:00406955 loc_406955:                             ; CODE XREF: sub_406810+2E↑j
.text:00406955                                         ; DATA XREF: sub_406810:jpt_40683E↑o
.text:00406955                 mov     edx, [esp+1Ch+var_10] ; jumptable 0040683E case 21
.text:00406959                 lea     esi, [edx+2]
.text:0040695C                 mov     [esp+1Ch+var_10], esi
.text:00406960                 movsx   eax, byte ptr [esi+1]
.text:00406964                 movzx   ebx, byte ptr [edx+2]
.text:00406968                 shl     eax, 8
.text:0040696B                 add     ebx, eax
.text:0040696D                 lea     eax, [edx+4]
.text:00406970                 mov     [esp+1Ch+var_10], eax
.text:00406974                 xor     eax, eax
.text:00406976                 test    ebx, ebx
.text:00406978                 jnz     short loc_406900
.text:0040697A                 mov     [esp+1Ch+var_10], edx
.text:0040697E                 mov     eax, edx
.text:00406980                 movsx   ebx, byte ptr [eax+1]
.text:00406984                 movzx   edx, byte ptr [edx]
.text:00406987                 shl     ebx, 8
.text:0040698A                 add     edx, ebx
.text:0040698C                 lea     ecx, [edx+esi]
.text:0040698F                 jmp     short loc_40694F
.text:00406991 ; ---------------------------------------------------------------------------
.text:00406991
.text:00406991 loc_406991:                             ; CODE XREF: sub_406810+2E↑j
.text:00406991                                         ; DATA XREF: sub_406810:jpt_40683E↑o
.text:00406991                 add     [esp+1Ch+var_10], 4 ; jumptable 0040683E case 23
.text:00406996                 jmp     short def_40683E ; jumptable 0040683E default case, cases 1-5,7,14-20,22,24,25
.text:00406996 sub_406810      endp
.text:00406996
.text:00406996 ; ---------------------------------------------------------------------------
.text:00406998                 align 10h
.text:004069A0
.text:004069A0 ; =============== S U B R O U T I N E =======================================
.text:004069A0
.text:004069A0
.text:004069A0 sub_4069A0      proc near               ; CODE XREF: sub_4042E0+1B06↑p
.text:004069A0
.text:004069A0 arg_0           = dword ptr  4
.text:004069A0 arg_4           = dword ptr  8
.text:004069A0 arg_8           = dword ptr  0Ch
.text:004069A0 arg_C           = dword ptr  10h
.text:004069A0
.text:004069A0                 push    edi
.text:004069A1                 push    esi
.text:004069A2                 push    ebx
.text:004069A3                 mov     esi, [esp+0Ch+arg_8]
.text:004069A7                 mov     edi, [esp+0Ch+arg_C]
.text:004069AB                 mov     ebx, [esp+0Ch+arg_0]
.text:004069AF                 test    esi, esi
.text:004069B1                 mov     ecx, [esp+0Ch+arg_4]
.text:004069B5                 jz      short loc_4069D4
.text:004069B7                 mov     esi, esi
.text:004069B9                 lea     edi, [edi+0]
.text:004069C0
.text:004069C0 loc_4069C0:                             ; CODE XREF: sub_4069A0+32↓j
.text:004069C0                 movzx   eax, byte ptr [ecx]
.text:004069C3                 inc     ecx
.text:004069C4                 movzx   edx, byte ptr [ebx]
.text:004069C7                 inc     ebx
.text:004069C8                 movzx   eax, byte ptr [eax+edi]
.text:004069CC                 cmp     [edx+edi], al
.text:004069CF                 jnz     short loc_4069DA
.text:004069D1                 dec     esi
.text:004069D2                 jnz     short loc_4069C0
.text:004069D4
.text:004069D4 loc_4069D4:                             ; CODE XREF: sub_4069A0+15↑j
.text:004069D4                 xor     eax, eax
.text:004069D6
.text:004069D6 loc_4069D6:                             ; CODE XREF: sub_4069A0+3F↓j
.text:004069D6                 pop     ebx
.text:004069D7                 pop     esi
.text:004069D8                 pop     edi
.text:004069D9                 retn
.text:004069DA ; ---------------------------------------------------------------------------
.text:004069DA
.text:004069DA loc_4069DA:                             ; CODE XREF: sub_4069A0+2F↑j
.text:004069DA                 mov     eax, 1
.text:004069DF                 jmp     short loc_4069D6
.text:004069DF sub_4069A0      endp
.text:004069DF
.text:004069DF ; ---------------------------------------------------------------------------
.text:004069E1                 align 20h
.text:00406A00 aSuccess        db 'Success',0          ; DATA XREF: sub_407060+41↓o
.text:00406A00                                         ; .text:004070EB↓o
.text:00406A08 aNoMatch        db 'No match',0
.text:00406A11 aInvalidRegular db 'Invalid regular expression',0
.text:00406A2C aInvalidCollati db 'Invalid collation character',0
.text:00406A48 aInvalidCharact db 'Invalid character class name',0
.text:00406A65 aTrailingBacksl db 'Trailing backslash',0
.text:00406A78 aInvalidBackRef db 'Invalid back reference',0
.text:00406A8F aUnmatchedOr    db 'Unmatched [ or [^',0
.text:00406AA1 aUnmatchedOr_0  db 'Unmatched ( or \(',0
.text:00406AB3 aUnmatched      db 'Unmatched \{',0
.text:00406AC0 aInvalidContent db 'Invalid content of \{\}',0
.text:00406AD8 aInvalidRangeEn db 'Invalid range end',0
.text:00406AEA aMemoryExhauste_0 db 'Memory exhausted',0
.text:00406AFB aInvalidPrecedi db 'Invalid preceding regular expression',0
.text:00406B20 aPrematureEndOf db 'Premature end of regular expression',0
.text:00406B44 aRegularExpress db 'Regular expression too big',0
.text:00406B5F aUnmatchedOr_1  db 'Unmatched ) or \)',0
.text:00406B71                 db 0EBh, 0Dh, 90h
.text:00406B74                 align 10h
.text:00406B80 dword_406B80    dd 0                    ; DATA XREF: sub_407060+3A↓r
.text:00406B80                                         ; .text:004070E4↓r
.text:00406B84                 dd 8, 11h, 2Ch, 48h, 65h, 78h, 8Fh, 0A1h, 0B3h, 0C0h, 0D8h
.text:00406B84                 dd 0EAh, 0FBh, 120h, 144h, 15Fh, 0B68Dh, 0BF8D0000h, 0
.text:00406BD0
.text:00406BD0 ; =============== S U B R O U T I N E =======================================
.text:00406BD0
.text:00406BD0
.text:00406BD0 sub_406BD0      proc near               ; CODE XREF: sub_4071F0+25A0↓p
.text:00406BD0
.text:00406BD0 arg_0           = dword ptr  4
.text:00406BD0 arg_8           = dword ptr  0Ch
.text:00406BD0 arg_C           = dword ptr  10h
.text:00406BD0
.text:00406BD0                 mov     edx, [esp+arg_8]
.text:00406BD4                 mov     ecx, [esp+arg_C]
.text:00406BD8                 dec     edx
.text:00406BD9                 js      short loc_406BFA
.text:00406BDB                 lea     eax, [edx+edx*4]
.text:00406BDE                 shl     eax, 2
.text:00406BE1                 add     eax, [esp+arg_0]
.text:00406BE5                 add     eax, 10h
.text:00406BE8                 nop
.text:00406BE9                 lea     esi, [esi+0]
.text:00406BF0
.text:00406BF0 loc_406BF0:                             ; CODE XREF: sub_406BD0+28↓j
.text:00406BF0                 cmp     [eax], ecx
.text:00406BF2                 jz      short loc_406BFD
.text:00406BF4                 sub     eax, 14h
.text:00406BF7                 dec     edx
.text:00406BF8                 jns     short loc_406BF0
.text:00406BFA
.text:00406BFA loc_406BFA:                             ; CODE XREF: sub_406BD0+9↑j
.text:00406BFA                 xor     eax, eax
.text:00406BFC                 retn
.text:00406BFD ; ---------------------------------------------------------------------------
.text:00406BFD
.text:00406BFD loc_406BFD:                             ; CODE XREF: sub_406BD0+22↑j
.text:00406BFD                 mov     eax, 1
.text:00406C02                 retn
.text:00406C02 sub_406BD0      endp
.text:00406C02
.text:00406C02 ; ---------------------------------------------------------------------------
.text:00406C03                 align 10h
.text:00406C10
.text:00406C10 ; =============== S U B R O U T I N E =======================================
.text:00406C10
.text:00406C10 ; Attributes: thunk
.text:00406C10
.text:00406C10 sub_406C10      proc near               ; CODE XREF: .text:00406CF1↓p
.text:00406C10                                         ; sub_40A560+258↓p
.text:00406C10                 jmp     sub_40A800
.text:00406C10 sub_406C10      endp
.text:00406C10
.text:00406C10 ; ---------------------------------------------------------------------------
.text:00406C15                 align 10h
.text:00406C20                 push    ebp
.text:00406C21                 push    edi
.text:00406C22                 push    esi
.text:00406C23                 push    ebx
.text:00406C24                 sub     esp, 1Ch
.text:00406C27                 mov     edi, [esp+30h]
.text:00406C2B                 test    byte ptr [esp+38h], 1
.text:00406C30                 mov     dword ptr [edi], 0
.text:00406C36                 setnz   dl
.text:00406C39                 mov     dword ptr [edi+4], 0
.text:00406C40                 mov     dword ptr [edi+8], 0
.text:00406C47                 mov     dword ptr [esp], 100h
.text:00406C4E                 movzx   ebp, dl
.text:00406C51                 dec     ebp
.text:00406C52                 and     ebp, 0FFFD4FCAh
.text:00406C58                 add     ebp, 3B2FCh
.text:00406C5E                 call    malloc
.text:00406C63                 test    byte ptr [esp+38h], 2
.text:00406C68                 mov     [edi+10h], eax
.text:00406C6B                 jnz     loc_406D20
.text:00406C71                 mov     dword ptr [edi+14h], 0
.text:00406C78
.text:00406C78 loc_406C78:                             ; CODE XREF: .text:00406D70↓j
.text:00406C78                 test    byte ptr [esp+38h], 4
.text:00406C7D                 jz      loc_406D17
.text:00406C83                 or      byte ptr [edi+1Ch], 80h
.text:00406C87                 and     ebp, 0FFFFFFBFh
.text:00406C8A                 or      ebp, 100h
.text:00406C90
.text:00406C90 loc_406C90:                             ; CODE XREF: .text:00406D1B↓j
.text:00406C90                 shr     dword ptr [esp+38h], 3
.text:00406C95                 movzx   edx, byte ptr [esp+38h]
.text:00406C9A                 movzx   ecx, byte ptr [edi+1Ch]
.text:00406C9E                 and     dl, 1
.text:00406CA1                 shl     dl, 4
.text:00406CA4                 and     cl, 0EFh
.text:00406CA7                 or      cl, dl
.text:00406CA9                 mov     [edi+1Ch], cl
.text:00406CAC                 mov     esi, [esp+34h]
.text:00406CB0                 mov     [esp], esi
.text:00406CB3                 call    strlen
.text:00406CB8                 mov     [esp+4], eax
.text:00406CBC                 mov     ebx, [esp+34h]
.text:00406CC0                 mov     [esp+0Ch], edi
.text:00406CC4                 mov     [esp+8], ebp
.text:00406CC8                 mov     [esp], ebx
.text:00406CCB                 call    sub_4071F0
.text:00406CD0                 cmp     eax, 10h
.text:00406CD3                 mov     ebx, eax
.text:00406CD5                 jz      short loc_406D10
.text:00406CD7
.text:00406CD7 loc_406CD7:                             ; CODE XREF: .text:00406D15↓j
.text:00406CD7                 test    ebx, ebx
.text:00406CD9                 jnz     short loc_406CE2
.text:00406CDB                 mov     ebp, [edi+10h]
.text:00406CDE                 test    ebp, ebp
.text:00406CE0                 jnz     short loc_406CEE
.text:00406CE2
.text:00406CE2 loc_406CE2:                             ; CODE XREF: .text:00406CD9↑j
.text:00406CE2                                         ; .text:00406CF9↓j ...
.text:00406CE2                 mov     edx, ebx
.text:00406CE4
.text:00406CE4 loc_406CE4:                             ; CODE XREF: .text:00406D36↓j
.text:00406CE4                 add     esp, 1Ch
.text:00406CE7                 mov     eax, edx
.text:00406CE9                 pop     ebx
.text:00406CEA                 pop     esi
.text:00406CEB                 pop     edi
.text:00406CEC                 pop     ebp
.text:00406CED                 retn
.text:00406CEE ; ---------------------------------------------------------------------------
.text:00406CEE
.text:00406CEE loc_406CEE:                             ; CODE XREF: .text:00406CE0↑j
.text:00406CEE                 mov     [esp], edi
.text:00406CF1                 call    sub_406C10
.text:00406CF6                 cmp     eax, 0FFFFFFFEh
.text:00406CF9                 jnz     short loc_406CE2
.text:00406CFB                 mov     esi, [edi+10h]
.text:00406CFE                 mov     [esp], esi
.text:00406D01                 call    free
.text:00406D06                 mov     dword ptr [edi+10h], 0
.text:00406D0D                 jmp     short loc_406CE2
.text:00406D0D ; ---------------------------------------------------------------------------
.text:00406D0F                 align 10h
.text:00406D10
.text:00406D10 loc_406D10:                             ; CODE XREF: .text:00406CD5↑j
.text:00406D10                 mov     ebx, 8
.text:00406D15                 jmp     short loc_406CD7
.text:00406D17 ; ---------------------------------------------------------------------------
.text:00406D17
.text:00406D17 loc_406D17:                             ; CODE XREF: .text:00406C7D↑j
.text:00406D17                 and     byte ptr [edi+1Ch], 7Fh
.text:00406D1B                 jmp     loc_406C90
.text:00406D20 ; ---------------------------------------------------------------------------
.text:00406D20
.text:00406D20 loc_406D20:                             ; CODE XREF: .text:00406C6B↑j
.text:00406D20                 mov     dword ptr [esp], 100h
.text:00406D27                 call    malloc
.text:00406D2C                 mov     [edi+14h], eax
.text:00406D2F                 test    eax, eax
.text:00406D31                 mov     edx, 0Ch
.text:00406D36                 jz      short loc_406CE4
.text:00406D38                 xor     ebx, ebx
.text:00406D3A                 lea     esi, [esi+0]
.text:00406D40
.text:00406D40 loc_406D40:                             ; CODE XREF: .text:00406D6E↓j
.text:00406D40                 mov     edx, ds:__mb_cur_max
.text:00406D46                 mov     esi, [edi+14h]
.text:00406D49                 cmp     dword ptr [edx], 1
.text:00406D4C                 jz      short loc_406D81
.text:00406D4E                 mov     dword ptr [esp+4], 1
.text:00406D56                 mov     [esp], ebx
.text:00406D59                 call    _isctype
.text:00406D5E
.text:00406D5E loc_406D5E:                             ; CODE XREF: .text:00406D90↓j
.text:00406D5E                 test    eax, eax
.text:00406D60                 mov     dl, bl
.text:00406D62                 jnz     short loc_406D75
.text:00406D64
.text:00406D64 loc_406D64:                             ; CODE XREF: .text:00406D7F↓j
.text:00406D64                 mov     [ebx+esi], dl
.text:00406D67                 inc     ebx
.text:00406D68                 cmp     ebx, 0FFh
.text:00406D6E                 jbe     short loc_406D40
.text:00406D70                 jmp     loc_406C78
.text:00406D75 ; ---------------------------------------------------------------------------
.text:00406D75
.text:00406D75 loc_406D75:                             ; CODE XREF: .text:00406D62↑j
.text:00406D75                 mov     [esp], ebx
.text:00406D78                 call    tolower
.text:00406D7D                 mov     dl, al
.text:00406D7F                 jmp     short loc_406D64
.text:00406D81 ; ---------------------------------------------------------------------------
.text:00406D81
.text:00406D81 loc_406D81:                             ; CODE XREF: .text:00406D4C↑j
.text:00406D81                 mov     edx, ds:_pctype
.text:00406D87                 mov     ecx, [edx]
.text:00406D89                 movzx   eax, word ptr [ecx+ebx*2]
.text:00406D8D                 and     eax, 1
.text:00406D90                 jmp     short loc_406D5E
.text:00406D90 ; ---------------------------------------------------------------------------
.text:00406D92                 align 10h
.text:00406DA0                 push    ebp
.text:00406DA1                 push    edi
.text:00406DA2                 push    esi
.text:00406DA3                 push    ebx
.text:00406DA4                 sub     esp, 7Ch
.text:00406DA7                 mov     ebx, [esp+90h]
.text:00406DAE                 mov     edx, [esp+94h]
.text:00406DB5                 mov     ebp, [esp+98h]
.text:00406DBC                 mov     esi, [esp+0A0h]
.text:00406DC3                 mov     [esp], edx
.text:00406DC6                 call    strlen
.text:00406DCB                 test    byte ptr [ebx+1Ch], 10h
.text:00406DCF                 mov     edi, eax
.text:00406DD1                 mov     byte ptr [esp+3Fh], 0
.text:00406DD6                 jnz     short loc_406DF0
.text:00406DD8                 test    ebp, ebp
.text:00406DDA                 jz      short loc_406DF0
.text:00406DDC                 mov     byte ptr [esp+3Fh], 1
.text:00406DE1                 jmp     short loc_406DF0
.text:00406DE1 ; ---------------------------------------------------------------------------
.text:00406DE3                 align 10h
.text:00406DF0
.text:00406DF0 loc_406DF0:                             ; CODE XREF: .text:00406DD6↑j
.text:00406DF0                                         ; .text:00406DDA↑j ...
.text:00406DF0                 mov     edx, [ebx]
.text:00406DF2                 mov     [esp+40h], edx
.text:00406DF6                 mov     ecx, [ebx+4]
.text:00406DF9                 mov     [esp+44h], ecx
.text:00406DFD                 mov     edx, [ebx+8]
.text:00406E00                 mov     [esp+48h], edx
.text:00406E04                 mov     ecx, [ebx+0Ch]
.text:00406E07                 mov     [esp+4Ch], ecx
.text:00406E0B                 mov     edx, [ebx+10h]
.text:00406E0E                 mov     [esp+50h], edx
.text:00406E12                 mov     ecx, [ebx+14h]
.text:00406E15                 mov     [esp+54h], ecx
.text:00406E19                 mov     edx, [ebx+18h]
.text:00406E1C                 mov     [esp+58h], edx
.text:00406E20                 mov     ecx, [ebx+1Ch]
.text:00406E23                 mov     edx, esi
.text:00406E25                 shr     esi, 1
.text:00406E27                 and     dl, 1
.text:00406E2A                 mov     eax, esi
.text:00406E2C                 mov     [esp+5Ch], ecx
.text:00406E30                 shl     dl, 5
.text:00406E33                 and     al, 1
.text:00406E35                 movzx   ebx, byte ptr [esp+5Ch]
.text:00406E3A                 shl     al, 6
.text:00406E3D                 and     bl, 9Fh
.text:00406E40                 or      bl, dl
.text:00406E42                 or      bl, al
.text:00406E44                 and     bl, 0F9h
.text:00406E47                 or      bl, 4
.text:00406E4A                 cmp     byte ptr [esp+3Fh], 0
.text:00406E4F                 mov     [esp+5Ch], bl
.text:00406E53                 jnz     loc_406F06
.text:00406E59
.text:00406E59 loc_406E59:                             ; CODE XREF: .text:00406F2F↓j
.text:00406E59                 movzx   ecx, byte ptr [esp+3Fh]
.text:00406E5E                 lea     esi, [esp+60h]
.text:00406E62                 mov     [esp+20h], edi
.text:00406E66                 lea     ebx, [esp+40h]
.text:00406E6A                 mov     [esp+18h], edi
.text:00406E6E                 mov     dword ptr [esp+14h], 0
.text:00406E76                 xor     cl, 1
.text:00406E79                 movzx   edx, cl
.text:00406E7C                 mov     [esp+10h], edi
.text:00406E80                 mov     ecx, [esp+94h]
.text:00406E87                 dec     edx
.text:00406E88                 mov     dword ptr [esp+8], 0
.text:00406E90                 and     esi, edx
.text:00406E92                 mov     [esp+1Ch], esi
.text:00406E96                 mov     [esp+0Ch], ecx
.text:00406E9A                 mov     dword ptr [esp+4], 0
.text:00406EA2                 mov     [esp], ebx
.text:00406EA5                 call    sub_40A560
.text:00406EAA                 cmp     byte ptr [esp+3Fh], 0
.text:00406EAF                 mov     esi, eax
.text:00406EB1                 jz      short loc_406EF1
.text:00406EB3                 test    eax, eax
.text:00406EB5                 js      short loc_406F00
.text:00406EB7                 xor     edx, edx
.text:00406EB9                 cmp     edx, ebp
.text:00406EBB                 jnb     short loc_406F00
.text:00406EBD                 mov     ecx, [esp+64h]
.text:00406EC1                 mov     ebx, [esp+68h]
.text:00406EC5                 lea     esi, [esi+0]
.text:00406EC9                 lea     edi, [edi+0]
.text:00406ED0
.text:00406ED0 loc_406ED0:                             ; CODE XREF: .text:00406EE7↓j
.text:00406ED0                 mov     eax, [ecx+edx*4]
.text:00406ED3                 mov     edi, [esp+9Ch]
.text:00406EDA                 mov     [edi+edx*8], eax
.text:00406EDD                 mov     eax, [ebx+edx*4]
.text:00406EE0                 mov     [edi+edx*8+4], eax
.text:00406EE4                 inc     edx
.text:00406EE5                 cmp     edx, ebp
.text:00406EE7                 jb      short loc_406ED0
.text:00406EE9
.text:00406EE9 loc_406EE9:                             ; CODE XREF: .text:00406F04↓j
.text:00406EE9                 mov     [esp], ecx
.text:00406EEC                 call    free
.text:00406EF1
.text:00406EF1 loc_406EF1:                             ; CODE XREF: .text:00406EB1↑j
.text:00406EF1                 mov     eax, esi
.text:00406EF3                 shr     eax, 1Fh
.text:00406EF6
.text:00406EF6 loc_406EF6:                             ; CODE XREF: .text:00406F26↓j
.text:00406EF6                 add     esp, 7Ch
.text:00406EF9                 pop     ebx
.text:00406EFA                 pop     esi
.text:00406EFB                 pop     edi
.text:00406EFC                 pop     ebp
.text:00406EFD                 retn
.text:00406EFD ; ---------------------------------------------------------------------------
.text:00406EFE                 align 10h
.text:00406F00
.text:00406F00 loc_406F00:                             ; CODE XREF: .text:00406EB5↑j
.text:00406F00                                         ; .text:00406EBB↑j
.text:00406F00                 mov     ecx, [esp+64h]
.text:00406F04                 jmp     short loc_406EE9
.text:00406F06 ; ---------------------------------------------------------------------------
.text:00406F06
.text:00406F06 loc_406F06:                             ; CODE XREF: .text:00406E53↑j
.text:00406F06                 mov     [esp+60h], ebp
.text:00406F0A                 lea     esi, ds:0[ebp*8]
.text:00406F11                 mov     [esp], esi
.text:00406F14                 call    malloc
.text:00406F19                 mov     [esp+64h], eax
.text:00406F1D                 mov     ecx, eax
.text:00406F1F                 test    ecx, ecx
.text:00406F21                 mov     eax, 1
.text:00406F26                 jz      short loc_406EF6
.text:00406F28                 lea     eax, [ecx+ebp*4]
.text:00406F2B                 mov     [esp+68h], eax
.text:00406F2F                 jmp     loc_406E59
.text:00406F2F ; ---------------------------------------------------------------------------
.text:00406F34                 align 10h
.text:00406F40                 mov     eax, ds:dword_413450
.text:00406F45                 mov     ecx, [esp+4]
.text:00406F49                 mov     ds:dword_413450, ecx
.text:00406F4F                 retn
.text:00406F50 ; ---------------------------------------------------------------------------
.text:00406F50                 push    ebx
.text:00406F51                 mov     ebx, [esp+10h]
.text:00406F55                 mov     edx, [esp+8]
.text:00406F59                 mov     ecx, [esp+0Ch]
.text:00406F5D                 test    ebx, ebx
.text:00406F5F                 jz      short loc_406F80
.text:00406F61                 movzx   eax, byte ptr [edx+1Ch]
.text:00406F65                 and     al, 0F9h
.text:00406F67                 or      al, 2
.text:00406F69                 mov     [edx+1Ch], al
.text:00406F6C                 mov     edx, [esp+14h]
.text:00406F70                 mov     [ecx], ebx
.text:00406F72                 mov     [ecx+4], edx
.text:00406F75                 mov     edx, [esp+18h]
.text:00406F79                 mov     [ecx+8], edx
.text:00406F7C
.text:00406F7C loc_406F7C:                             ; CODE XREF: .text:00406F98↓j
.text:00406F7C                 pop     ebx
.text:00406F7D                 retn
.text:00406F7D ; ---------------------------------------------------------------------------
.text:00406F7E                 align 10h
.text:00406F80
.text:00406F80 loc_406F80:                             ; CODE XREF: .text:00406F5F↑j
.text:00406F80                 and     byte ptr [edx+1Ch], 0F9h
.text:00406F84                 mov     dword ptr [ecx], 0
.text:00406F8A                 mov     dword ptr [ecx+8], 0
.text:00406F91                 mov     dword ptr [ecx+4], 0
.text:00406F98                 jmp     short loc_406F7C
.text:00406F98 ; ---------------------------------------------------------------------------
.text:00406F9A                 align 10h
.text:00406FA0
.text:00406FA0 ; =============== S U B R O U T I N E =======================================
.text:00406FA0
.text:00406FA0
.text:00406FA0 sub_406FA0      proc near               ; CODE XREF: sub_402BC0+AD↑p
.text:00406FA0                                         ; sub_402BC0+3E5↑p
.text:00406FA0
.text:00406FA0 var_2C          = dword ptr -2Ch
.text:00406FA0 var_28          = dword ptr -28h
.text:00406FA0 var_24          = dword ptr -24h
.text:00406FA0 var_20          = dword ptr -20h
.text:00406FA0 var_1C          = dword ptr -1Ch
.text:00406FA0 var_18          = dword ptr -18h
.text:00406FA0 var_14          = dword ptr -14h
.text:00406FA0 var_10          = dword ptr -10h
.text:00406FA0 var_C           = dword ptr -0Ch
.text:00406FA0 arg_0           = dword ptr  4
.text:00406FA0 arg_4           = dword ptr  8
.text:00406FA0 arg_8           = dword ptr  0Ch
.text:00406FA0 arg_C           = dword ptr  10h
.text:00406FA0 arg_10          = dword ptr  14h
.text:00406FA0 arg_14          = dword ptr  18h
.text:00406FA0
.text:00406FA0                 sub     esp, 2Ch
.text:00406FA3                 mov     edx, [esp+2Ch+arg_14]
.text:00406FA7                 mov     [esp+2Ch+var_24], 0
.text:00406FAF                 mov     ecx, [esp+2Ch+arg_8]
.text:00406FB3                 mov     [esp+2Ch+var_28], 0
.text:00406FBB                 mov     [esp+2Ch+var_10], edx
.text:00406FBF                 mov     edx, [esp+2Ch+arg_10]
.text:00406FC3                 mov     [esp+2Ch+var_C], ecx
.text:00406FC7                 mov     [esp+2Ch+var_1C], ecx
.text:00406FCB                 mov     [esp+2Ch+var_14], edx
.text:00406FCF                 mov     edx, [esp+2Ch+arg_C]
.text:00406FD3                 mov     [esp+2Ch+var_18], edx
.text:00406FD7                 mov     edx, [esp+2Ch+arg_4]
.text:00406FDB                 mov     [esp+2Ch+var_20], edx
.text:00406FDF                 mov     edx, [esp+2Ch+arg_0]
.text:00406FE3                 mov     [esp+2Ch+var_2C], edx
.text:00406FE6                 call    sub_40A560
.text:00406FEB                 add     esp, 2Ch
.text:00406FEE                 retn
.text:00406FEE sub_406FA0      endp
.text:00406FEE
.text:00406FEE ; ---------------------------------------------------------------------------
.text:00406FEF                 align 10h
.text:00406FF0                 jmp     sub_40A560
.text:00406FF0 ; ---------------------------------------------------------------------------
.text:00406FF5                 align 10h
.text:00407000                 sub     esp, 2Ch
.text:00407003                 mov     edx, [esp+40h]
.text:00407007                 mov     dword ptr [esp+8], 0
.text:0040700F                 mov     ecx, [esp+38h]
.text:00407013                 mov     dword ptr [esp+4], 0
.text:0040701B                 mov     [esp+18h], edx
.text:0040701F                 mov     edx, [esp+3Ch]
.text:00407023                 mov     [esp+1Ch], ecx
.text:00407027                 mov     [esp+10h], ecx
.text:0040702B                 mov     [esp+14h], edx
.text:0040702F                 mov     edx, [esp+34h]
.text:00407033                 mov     [esp+0Ch], edx
.text:00407037                 mov     edx, [esp+30h]
.text:0040703B                 mov     [esp], edx
.text:0040703E                 call    sub_4042E0
.text:00407043                 add     esp, 2Ch
.text:00407046                 retn
.text:00407046 ; ---------------------------------------------------------------------------
.text:00407047                 align 10h
.text:00407050                 jmp     sub_4042E0
.text:00407050 ; ---------------------------------------------------------------------------
.text:00407055                 align 10h
.text:00407060
.text:00407060 ; =============== S U B R O U T I N E =======================================
.text:00407060
.text:00407060
.text:00407060 sub_407060      proc near               ; CODE XREF: sub_403D90+FC↑p
.text:00407060
.text:00407060 var_1C          = dword ptr -1Ch
.text:00407060 var_18          = dword ptr -18h
.text:00407060 var_14          = dword ptr -14h
.text:00407060 var_10          = dword ptr -10h
.text:00407060 arg_0           = dword ptr  4
.text:00407060 arg_4           = dword ptr  8
.text:00407060 arg_8           = dword ptr  0Ch
.text:00407060
.text:00407060                 sub     esp, 1Ch
.text:00407063                 mov     ecx, [esp+1Ch+arg_8]
.text:00407067                 movzx   edx, byte ptr [ecx+1Ch]
.text:0040706B                 and     dl, 0E9h
.text:0040706E                 or      dl, 80h
.text:00407071                 mov     [ecx+1Ch], dl
.text:00407074                 mov     edx, [esp+1Ch+arg_4]
.text:00407078                 mov     [esp+1Ch+var_10], ecx
.text:0040707C                 mov     ecx, ds:dword_413450
.text:00407082                 mov     [esp+1Ch+var_18], edx
.text:00407086                 mov     edx, [esp+1Ch+arg_0]
.text:0040708A                 mov     [esp+1Ch+var_14], ecx
.text:0040708E                 mov     [esp+1Ch+var_1C], edx
.text:00407091                 call    sub_4071F0
.text:00407096                 test    eax, eax
.text:00407098                 jz      short loc_4070B4
.text:0040709A                 mov     ecx, ds:dword_406B80[eax*4]
.text:004070A1                 add     ecx, offset aSuccess ; "Success"
.text:004070A7                 mov     [esp+1Ch+arg_0], ecx
.text:004070AB                 add     esp, 1Ch
.text:004070AE                 jmp     ds:__imp_libintl_gettext
.text:004070B4 ; ---------------------------------------------------------------------------
.text:004070B4
.text:004070B4 loc_4070B4:                             ; CODE XREF: sub_407060+38↑j
.text:004070B4                 xor     eax, eax
.text:004070B6                 add     esp, 1Ch
.text:004070B9                 retn
.text:004070B9 sub_407060      endp
.text:004070B9
.text:004070B9 ; ---------------------------------------------------------------------------
.text:004070BA                 align 10h
.text:004070C0                 sub     esp, 1Ch
.text:004070C3                 mov     eax, [esp+20h]
.text:004070C7                 mov     [esp+14h], edi
.text:004070CB                 mov     edi, [esp+2Ch]
.text:004070CF                 cmp     eax, 10h
.text:004070D2                 mov     [esp+18h], ebp
.text:004070D6                 mov     ebp, [esp+28h]
.text:004070DA                 mov     [esp+0Ch], ebx
.text:004070DE                 mov     [esp+10h], esi
.text:004070E2                 ja      short loc_407158
.text:004070E4                 mov     edx, ds:dword_406B80[eax*4]
.text:004070EB                 add     edx, offset aSuccess ; "Success"
.text:004070F1                 mov     [esp], edx
.text:004070F4                 call    ds:__imp_libintl_gettext
.text:004070FA                 mov     [esp], eax
.text:004070FD                 mov     ebx, eax
.text:004070FF                 call    strlen
.text:00407104                 test    edi, edi
.text:00407106                 lea     esi, [eax+1]
.text:00407109                 jz      short loc_407130
.text:0040710B                 cmp     esi, edi
.text:0040710D                 jbe     short loc_407146
.text:0040710F                 mov     [esp+4], ebx
.text:00407113                 lea     edx, [edi-1]
.text:00407116                 mov     [esp+8], edx
.text:0040711A                 mov     [esp], ebp
.text:0040711D                 call    sub_4100C0
.text:00407122                 mov     byte ptr [eax], 0
.text:00407125                 lea     esi, [esi+0]
.text:00407129                 lea     edi, [edi+0]
.text:00407130
.text:00407130 loc_407130:                             ; CODE XREF: .text:00407109↑j
.text:00407130                                         ; .text:00407156↓j
.text:00407130                 mov     eax, esi
.text:00407132                 mov     ebx, [esp+0Ch]
.text:00407136                 mov     esi, [esp+10h]
.text:0040713A                 mov     edi, [esp+14h]
.text:0040713E                 mov     ebp, [esp+18h]
.text:00407142                 add     esp, 1Ch
.text:00407145                 retn
.text:00407146 ; ---------------------------------------------------------------------------
.text:00407146
.text:00407146 loc_407146:                             ; CODE XREF: .text:0040710D↑j
.text:00407146                 mov     [esp+8], esi
.text:0040714A                 mov     [esp+4], ebx
.text:0040714E                 mov     [esp], ebp
.text:00407151                 call    memcpy
.text:00407156                 jmp     short loc_407130
.text:00407158 ; ---------------------------------------------------------------------------
.text:00407158
.text:00407158 loc_407158:                             ; CODE XREF: .text:004070E2↑j
.text:00407158                 call    abort
.text:00407158 ; ---------------------------------------------------------------------------
.text:0040715D                 align 10h
.text:00407160                 sub     esp, 0Ch
.text:00407163                 mov     [esp+8], ebx
.text:00407167                 mov     ebx, [esp+10h]
.text:0040716B                 mov     eax, [ebx]
.text:0040716D                 test    eax, eax
.text:0040716F                 jnz     short loc_4071D0
.text:00407171
.text:00407171 loc_407171:                             ; CODE XREF: .text:004071D8↓j
.text:00407171                 mov     dword ptr [ebx], 0
.text:00407177                 mov     eax, [ebx+10h]
.text:0040717A                 mov     dword ptr [ebx+4], 0
.text:00407181                 mov     dword ptr [ebx+8], 0
.text:00407188                 test    eax, eax
.text:0040718A                 jnz     short loc_4071C0
.text:0040718C
.text:0040718C loc_40718C:                             ; CODE XREF: .text:004071C8↓j
.text:0040718C                 and     byte ptr [ebx+1Ch], 0F7h
.text:00407190                 mov     eax, [ebx+14h]
.text:00407193                 mov     dword ptr [ebx+10h], 0
.text:0040719A                 test    eax, eax
.text:0040719C                 jnz     short loc_4071B0
.text:0040719E
.text:0040719E loc_40719E:                             ; CODE XREF: .text:004071B8↓j
.text:0040719E                 mov     dword ptr [ebx+14h], 0
.text:004071A5                 mov     ebx, [esp+8]
.text:004071A9                 add     esp, 0Ch
.text:004071AC                 retn
.text:004071AC ; ---------------------------------------------------------------------------
.text:004071AD                 align 10h
.text:004071B0
.text:004071B0 loc_4071B0:                             ; CODE XREF: .text:0040719C↑j
.text:004071B0                 mov     [esp], eax
.text:004071B3                 call    free
.text:004071B8                 jmp     short loc_40719E
.text:004071B8 ; ---------------------------------------------------------------------------
.text:004071BA                 align 10h
.text:004071C0
.text:004071C0 loc_4071C0:                             ; CODE XREF: .text:0040718A↑j
.text:004071C0                 mov     [esp], eax
.text:004071C3                 call    free
.text:004071C8                 jmp     short loc_40718C
.text:004071C8 ; ---------------------------------------------------------------------------
.text:004071CA                 align 10h
.text:004071D0
.text:004071D0 loc_4071D0:                             ; CODE XREF: .text:0040716F↑j
.text:004071D0                 mov     [esp], eax
.text:004071D3                 call    free
.text:004071D8                 jmp     short loc_407171
.text:004071D8 ; ---------------------------------------------------------------------------
.text:004071DA aLower          db 'lower',0            ; DATA XREF: sub_4071F0+1EEB↓o
.text:004071E0 aUpper          db 'upper',0            ; DATA XREF: sub_4071F0+1F11↓o
.text:004071E6                 align 10h
.text:004071F0
.text:004071F0 ; =============== S U B R O U T I N E =======================================
.text:004071F0
.text:004071F0
.text:004071F0 sub_4071F0      proc near               ; CODE XREF: .text:00406CCB↑p
.text:004071F0                                         ; sub_407060+31↑p
.text:004071F0
.text:004071F0 Size            = dword ptr -97Ch
.text:004071F0 var_978         = dword ptr -978h
.text:004071F0 var_974         = dword ptr -974h
.text:004071F0 var_970         = dword ptr -970h
.text:004071F0 var_96C         = dword ptr -96Ch
.text:004071F0 var_968         = dword ptr -968h
.text:004071F0 var_950         = dword ptr -950h
.text:004071F0 var_940         = dword ptr -940h
.text:004071F0 var_93C         = dword ptr -93Ch
.text:004071F0 var_938         = dword ptr -938h
.text:004071F0 var_934         = dword ptr -934h
.text:004071F0 var_930         = dword ptr -930h
.text:004071F0 Type            = word ptr -92Ch
.text:004071F0 var_926         = byte ptr -926h
.text:004071F0 var_925         = byte ptr -925h
.text:004071F0 var_924         = dword ptr -924h
.text:004071F0 var_91E         = byte ptr -91Eh
.text:004071F0 var_91D         = byte ptr -91Dh
.text:004071F0 var_91C         = byte ptr -91Ch
.text:004071F0 var_90C         = dword ptr -90Ch
.text:004071F0 var_908         = dword ptr -908h
.text:004071F0 var_904         = dword ptr -904h
.text:004071F0 var_900         = dword ptr -900h
.text:004071F0 var_8FC         = dword ptr -8FCh
.text:004071F0 var_8F8         = dword ptr -8F8h
.text:004071F0 var_8F4         = dword ptr -8F4h
.text:004071F0 var_8F0         = dword ptr -8F0h
.text:004071F0 var_8EC         = byte ptr -8ECh
.text:004071F0 var_8D0         = dword ptr -8D0h
.text:004071F0 var_8CC         = byte ptr -8CCh
.text:004071F0 var_84C         = byte ptr -84Ch
.text:004071F0 name            = byte ptr -83Ch
.text:004071F0 Block           = dword ptr -2Ch
.text:004071F0 var_28          = dword ptr -28h
.text:004071F0 var_24          = dword ptr -24h
.text:004071F0 arg_0           = dword ptr  4
.text:004071F0 arg_4           = dword ptr  8
.text:004071F0 arg_8           = dword ptr  0Ch
.text:004071F0 arg_C           = dword ptr  10h
.text:004071F0
.text:004071F0                 push    ebp
.text:004071F1                 mov     ebp, 0Ch
.text:004071F6                 push    edi
.text:004071F7                 push    esi
.text:004071F8                 push    ebx
.text:004071F9                 sub     esp, 96Ch
.text:004071FF                 mov     eax, [esp+97Ch+arg_0]
.text:00407206                 mov     [esp+97Ch+var_900], 0
.text:0040720E                 mov     ecx, [esp+97Ch+arg_C]
.text:00407215                 mov     ebx, [esp+97Ch+arg_4]
.text:0040721C                 mov     [esp+97Ch+var_8D0], eax
.text:00407223                 mov     edx, [ecx+14h]
.text:00407226                 add     eax, ebx
.text:00407228                 mov     [esp+97Ch+var_8F4], eax
.text:0040722F                 xor     eax, eax
.text:00407231                 mov     [esp+97Ch+var_8F8], edx
.text:00407238                 mov     [esp+97Ch+var_8FC], eax
.text:0040723F                 mov     [esp+97Ch+var_908], 0
.text:00407247                 mov     [esp+97Ch+var_90C], 0
.text:0040724F                 mov     [esp+97Ch+Size], 280h ; Size
.text:00407256                 call    malloc
.text:0040725B                 mov     [esp+97Ch+Block], eax
.text:00407262                 test    eax, eax
.text:00407264                 jz      loc_407606
.text:0040726A                 mov     edi, [esp+97Ch+arg_C]
.text:00407271                 xor     edx, edx
.text:00407273                 mov     ecx, 20h ; ' '
.text:00407278                 mov     [esp+97Ch+var_28], ecx
.text:0040727F                 mov     ebp, [esp+97Ch+arg_8]
.text:00407286                 mov     [esp+97Ch+var_24], edx
.text:0040728D                 and     byte ptr [edi+1Ch], 97h
.text:00407291                 mov     [edi+0Ch], ebp
.text:00407294                 mov     dword ptr [edi+8], 0
.text:0040729B                 mov     esi, ds:dword_413180
.text:004072A1                 mov     dword ptr [edi+18h], 0
.text:004072A8                 test    esi, esi
.text:004072AA                 jz      loc_40A4E1
.text:004072B0
.text:004072B0 loc_4072B0:                             ; CODE XREF: sub_4071F0+3351↓j
.text:004072B0                 mov     ebx, [esp+97Ch+arg_C]
.text:004072B7                 mov     edx, [ebx+4]
.text:004072BA                 test    edx, edx
.text:004072BC                 jnz     loc_40A4D2
.text:004072C2                 mov     eax, [ebx]
.text:004072C4                 test    eax, eax
.text:004072C6                 jz      loc_40A4B8
.text:004072CC                 mov     [esp+97Ch+var_978], 20h ; ' ' ; Size
.text:004072D4                 mov     [esp+97Ch+Size], eax ; Block
.text:004072D7                 call    realloc
.text:004072DC                 mov     [ebx], eax
.text:004072DE
.text:004072DE loc_4072DE:                             ; CODE XREF: sub_4071F0+32DD↓j
.text:004072DE                 mov     esi, [esp+97Ch+arg_C]
.text:004072E5                 mov     edi, [esi]
.text:004072E7                 test    edi, edi
.text:004072E9                 jz      loc_40A4A7
.text:004072EF                 mov     eax, [esp+97Ch+arg_C]
.text:004072F6                 mov     dword ptr [eax+4], 20h ; ' '
.text:004072FD
.text:004072FD loc_4072FD:                             ; CODE XREF: sub_4071F0+32EC↓j
.text:004072FD                 mov     [esp+97Ch+var_950], edi
.text:00407301                 mov     [esp+97Ch+var_904], edi
.text:00407305                 mov     edi, [esp+97Ch+var_8D0]
.text:0040730C                 cmp     edi, [esp+97Ch+var_8F4]
.text:00407313                 jz      loc_407660
.text:00407319
.text:00407319 loc_407319:                             ; CODE XREF: sub_4071F0+43D↓j
.text:00407319                 movzx   ebx, byte ptr [edi]
.text:0040731C                 inc     edi
.text:0040731D                 mov     edx, [esp+97Ch+var_8F8]
.text:00407324                 mov     [esp+97Ch+var_8D0], edi
.text:0040732B                 test    edx, edx
.text:0040732D                 mov     [esp+97Ch+var_8EC], bl
.text:00407334                 jz      short loc_40734B
.text:00407336                 mov     edi, [esp+97Ch+var_8F8]
.text:0040733D                 movzx   ecx, bl
.text:00407340                 movzx   ebx, byte ptr [ecx+edi]
.text:00407344                 mov     [esp+97Ch+var_8EC], bl
.text:0040734B
.text:0040734B loc_40734B:                             ; CODE XREF: sub_4071F0+144↑j
.text:0040734B                 movzx   eax, [esp+97Ch+var_8EC]
.text:00407353                 sub     eax, 0Ah        ; switch 115 cases
.text:00407356                 cmp     eax, 72h
.text:00407359                 ja      def_40735F      ; jumptable 0040735F default case, cases 11-35,37-39,44,45,47-62,64-90,93,95-122
.text:0040735F                 jmp     ds:jpt_40735F[eax*4] ; switch jump
.text:0040735F ; ---------------------------------------------------------------------------
.text:00407366                 align 4
.text:00407368 jpt_40735F      dd offset loc_407A55, offset def_40735F, offset def_40735F
.text:00407368                                         ; DATA XREF: sub_4071F0+16F↑r
.text:00407368                 dd offset def_40735F, offset def_40735F, offset def_40735F ; jump table for switch statement
.text:00407368                 dd offset def_40735F, offset def_40735F, offset def_40735F
.text:00407368                 dd offset def_40735F, offset def_40735F, offset def_40735F
.text:00407368                 dd offset def_40735F, offset def_40735F, offset def_40735F
.text:00407368                 dd offset def_40735F, offset def_40735F, offset def_40735F
.text:00407368                 dd offset def_40735F, offset def_40735F, offset def_40735F
.text:00407368                 dd offset def_40735F, offset def_40735F, offset def_40735F
.text:00407368                 dd offset def_40735F, offset def_40735F, offset loc_407C8D
.text:00407368                 dd offset def_40735F, offset def_40735F, offset def_40735F
.text:00407368                 dd offset loc_407D9C, offset loc_407F86, offset loc_408250
.text:00407368                 dd offset loc_4088C4, offset def_40735F, offset def_40735F
.text:00407368                 dd offset loc_4087E0, offset def_40735F, offset def_40735F
.text:00407368                 dd offset def_40735F, offset def_40735F, offset def_40735F
.text:00407368                 dd offset def_40735F, offset def_40735F, offset def_40735F
.text:00407368                 dd offset def_40735F, offset def_40735F, offset def_40735F
.text:00407368                 dd offset def_40735F, offset def_40735F, offset def_40735F
.text:00407368                 dd offset def_40735F, offset def_40735F, offset loc_4088C4
.text:00407368                 dd offset def_40735F, offset def_40735F, offset def_40735F
.text:00407368                 dd offset def_40735F, offset def_40735F, offset def_40735F
.text:00407368                 dd offset def_40735F, offset def_40735F, offset def_40735F
.text:00407368                 dd offset def_40735F, offset def_40735F, offset def_40735F
.text:00407368                 dd offset def_40735F, offset def_40735F, offset def_40735F
.text:00407368                 dd offset def_40735F, offset def_40735F, offset def_40735F
.text:00407368                 dd offset def_40735F, offset def_40735F, offset def_40735F
.text:00407368                 dd offset def_40735F, offset def_40735F, offset def_40735F
.text:00407368                 dd offset def_40735F, offset def_40735F, offset def_40735F
.text:00407368                 dd offset loc_4088DA, offset loc_409466, offset def_40735F
.text:00407368                 dd offset loc_407534, offset def_40735F, offset def_40735F
.text:00407368                 dd offset def_40735F, offset def_40735F, offset def_40735F
.text:00407368                 dd offset def_40735F, offset def_40735F, offset def_40735F
.text:00407368                 dd offset def_40735F, offset def_40735F, offset def_40735F
.text:00407368                 dd offset def_40735F, offset def_40735F, offset def_40735F
.text:00407368                 dd offset def_40735F, offset def_40735F, offset def_40735F
.text:00407368                 dd offset def_40735F, offset def_40735F, offset def_40735F
.text:00407368                 dd offset def_40735F, offset def_40735F, offset def_40735F
.text:00407368                 dd offset def_40735F, offset def_40735F, offset def_40735F
.text:00407368                 dd offset def_40735F, offset def_40735F, offset loc_40A474
.text:00407368                 dd offset loc_40A492
.text:00407534 ; ---------------------------------------------------------------------------
.text:00407534
.text:00407534 loc_407534:                             ; CODE XREF: sub_4071F0+16F↑j
.text:00407534                                         ; DATA XREF: sub_4071F0:jpt_40735F↑o
.text:00407534                 mov     esi, [esp+97Ch+arg_0] ; jumptable 0040735F case 94
.text:0040753B                 mov     edx, [esp+97Ch+var_8D0]
.text:00407542                 inc     esi
.text:00407543                 cmp     edx, esi
.text:00407545                 jz      short loc_407555
.text:00407547                 test    byte ptr [esp+97Ch+arg_8], 8
.text:0040754F                 jz      loc_40779D
.text:00407555
.text:00407555 loc_407555:                             ; CODE XREF: sub_4071F0+355↑j
.text:00407555                                         ; sub_4071F0+3D7↓j ...
.text:00407555                 mov     eax, [esp+97Ch+arg_C]
.text:0040755C                 mov     ebp, [esp+97Ch+var_950]
.text:00407560                 mov     edi, [eax]
.text:00407562                 mov     edx, [eax+4]
.text:00407565                 sub     ebp, edi
.text:00407567                 inc     ebp
.text:00407568                 cmp     ebp, edx
.text:0040756A                 jbe     loc_407613
.text:00407570                 cmp     edx, 10000h
.text:00407576                 mov     ebp, 0Fh
.text:0040757B                 jz      loc_407606
.text:00407581                 lea     ebx, [edx+edx]
.text:00407584                 mov     edx, [esp+97Ch+arg_C]
.text:0040758B                 cmp     ebx, 10000h
.text:00407591                 mov     [edx+4], ebx
.text:00407594                 jbe     short loc_40759D
.text:00407596                 mov     dword ptr [edx+4], 10000h
.text:0040759D
.text:0040759D loc_40759D:                             ; CODE XREF: sub_4071F0+3A4↑j
.text:0040759D                 mov     ebp, [esp+97Ch+arg_C]
.text:004075A4                 mov     esi, [ebp+4]
.text:004075A7                 mov     ebp, 0Ch
.text:004075AC                 mov     [esp+97Ch+Size], edi ; Block
.text:004075AF                 mov     [esp+97Ch+var_978], esi ; Size
.text:004075B3                 call    realloc
.text:004075B8                 mov     edx, [esp+97Ch+arg_C]
.text:004075BF                 test    eax, eax
.text:004075C1                 mov     [edx], eax
.text:004075C3                 jz      short loc_407606
.text:004075C5                 cmp     edi, eax
.text:004075C7                 jz      short loc_407555
.text:004075C9                 mov     ecx, [esp+97Ch+var_908]
.text:004075CD                 sub     eax, edi
.text:004075CF                 add     [esp+97Ch+var_950], eax
.text:004075D3                 add     [esp+97Ch+var_904], eax
.text:004075D7                 test    ecx, ecx
.text:004075D9                 jz      short loc_4075DF
.text:004075DB                 add     [esp+97Ch+var_908], eax
.text:004075DF
.text:004075DF loc_4075DF:                             ; CODE XREF: sub_4071F0+3E9↑j
.text:004075DF                 mov     ebx, [esp+97Ch+var_900]
.text:004075E3                 test    ebx, ebx
.text:004075E5                 jz      short loc_4075EB
.text:004075E7                 add     [esp+97Ch+var_900], eax
.text:004075EB
.text:004075EB loc_4075EB:                             ; CODE XREF: sub_4071F0+3F5↑j
.text:004075EB                 mov     edi, [esp+97Ch+var_8FC]
.text:004075F2                 test    edi, edi
.text:004075F4                 jz      loc_407555
.text:004075FA                 add     [esp+97Ch+var_8FC], eax
.text:00407601                 jmp     loc_407555
.text:00407606 ; ---------------------------------------------------------------------------
.text:00407606
.text:00407606 loc_407606:                             ; CODE XREF: sub_4071F0+74↑j
.text:00407606                                         ; sub_4071F0+38B↑j ...
.text:00407606                 add     esp, 96Ch
.text:0040760C                 mov     eax, ebp
.text:0040760E                 pop     ebx
.text:0040760F                 pop     esi
.text:00407610                 pop     edi
.text:00407611                 pop     ebp
.text:00407612                 retn
.text:00407613 ; ---------------------------------------------------------------------------
.text:00407613
.text:00407613 loc_407613:                             ; CODE XREF: sub_4071F0+37A↑j
.text:00407613                 mov     edi, [esp+97Ch+var_950]
.text:00407617                 mov     byte ptr [edi], 9
.text:0040761A
.text:0040761A loc_40761A:                             ; CODE XREF: sub_4071F0+16CF↓j
.text:0040761A                                         ; sub_4071F0+2518↓j ...
.text:0040761A                 inc     edi
.text:0040761B
.text:0040761B loc_40761B:                             ; CODE XREF: sub_4071F0+1496↓j
.text:0040761B                 mov     [esp+97Ch+var_950], edi
.text:0040761F
.text:0040761F loc_40761F:                             ; CODE XREF: sub_4071F0+7DA↓j
.text:0040761F                                         ; sub_4071F0+A98↓j ...
.text:0040761F                 mov     edi, [esp+97Ch+var_8D0]
.text:00407626                 cmp     edi, [esp+97Ch+var_8F4]
.text:0040762D                 jnz     loc_407319
.text:00407633                 mov     ebx, [esp+97Ch+var_908]
.text:00407637                 test    ebx, ebx
.text:00407639                 jz      short loc_407660
.text:0040763B                 mov     [esp+97Ch+Size], 0Eh
.text:00407642                 mov     ebp, [esp+97Ch+var_950]
.text:00407646                 mov     edx, [esp+97Ch+var_908]
.text:0040764A                 mov     esi, [esp+97Ch+var_908]
.text:0040764E                 sub     ebp, edx
.text:00407650                 sub     ebp, 3
.text:00407653                 mov     [esp+97Ch+var_974], ebp
.text:00407657                 mov     [esp+97Ch+var_978], esi
.text:0040765B                 call    sub_403FC0
.text:00407660
.text:00407660 loc_407660:                             ; CODE XREF: sub_4071F0+123↑j
.text:00407660                                         ; sub_4071F0+449↑j
.text:00407660                 mov     eax, [esp+97Ch+var_24]
.text:00407667                 test    eax, eax
.text:00407669                 jnz     loc_407784
.text:0040766F                 test    [esp+97Ch+arg_8], 40000h
.text:0040767A                 jz      loc_407753
.text:00407680                 mov     ecx, [esp+97Ch+arg_C]
.text:00407687                 mov     ebp, [esp+97Ch+var_950]
.text:0040768B                 mov     ebx, [ecx]
.text:0040768D                 mov     edx, [ecx+4]
.text:00407690                 sub     ebp, ebx
.text:00407692                 mov     edi, ebx
.text:00407694                 inc     ebp
.text:00407695                 cmp     ebp, edx
.text:00407697                 jbe     loc_407747
.text:0040769D
.text:0040769D loc_40769D:                             ; CODE XREF: sub_4071F0+551↓j
.text:0040769D                 cmp     edx, 10000h
.text:004076A3                 mov     ebp, 0Fh
.text:004076A8                 jz      loc_407606
.text:004076AE                 mov     esi, [esp+97Ch+arg_C]
.text:004076B5                 lea     ebp, [edx+edx]
.text:004076B8                 cmp     ebp, 10000h
.text:004076BE                 mov     [esi+4], ebp
.text:004076C1                 jbe     short loc_4076CA
.text:004076C3                 mov     dword ptr [esi+4], 10000h
.text:004076CA
.text:004076CA loc_4076CA:                             ; CODE XREF: sub_4071F0+4D1↑j
.text:004076CA                 mov     eax, [esp+97Ch+arg_C]
.text:004076D1                 mov     ebp, 0Ch
.text:004076D6                 mov     esi, [eax+4]
.text:004076D9                 mov     [esp+97Ch+Size], edi ; Block
.text:004076DC                 mov     [esp+97Ch+var_978], esi ; Size
.text:004076E0                 call    realloc
.text:004076E5                 mov     edx, [esp+97Ch+arg_C]
.text:004076EC                 test    eax, eax
.text:004076EE                 mov     [edx], eax
.text:004076F0                 jz      loc_407606
.text:004076F6                 cmp     ebx, eax
.text:004076F8                 jz      short loc_40772A
.text:004076FA                 mov     edi, [esp+97Ch+var_908]
.text:004076FE                 sub     eax, ebx
.text:00407700                 add     [esp+97Ch+var_950], eax
.text:00407704                 test    edi, edi
.text:00407706                 jz      short loc_40770C
.text:00407708                 add     [esp+97Ch+var_908], eax
.text:0040770C
.text:0040770C loc_40770C:                             ; CODE XREF: sub_4071F0+516↑j
.text:0040770C                 mov     ebx, [esp+97Ch+var_900]
.text:00407710                 test    ebx, ebx
.text:00407712                 jz      short loc_407718
.text:00407714                 add     [esp+97Ch+var_900], eax
.text:00407718
.text:00407718 loc_407718:                             ; CODE XREF: sub_4071F0+522↑j
.text:00407718                 mov     ecx, [esp+97Ch+var_8FC]
.text:0040771F                 test    ecx, ecx
.text:00407721                 jz      short loc_40772A
.text:00407723                 add     [esp+97Ch+var_8FC], eax
.text:0040772A
.text:0040772A loc_40772A:                             ; CODE XREF: sub_4071F0+508↑j
.text:0040772A                                         ; sub_4071F0+531↑j
.text:0040772A                 mov     eax, [esp+97Ch+arg_C]
.text:00407731                 mov     ebp, [esp+97Ch+var_950]
.text:00407735                 mov     ebx, [eax]
.text:00407737                 mov     edx, [eax+4]
.text:0040773A                 sub     ebp, ebx
.text:0040773C                 mov     edi, ebx
.text:0040773E                 inc     ebp
.text:0040773F                 cmp     ebp, edx
.text:00407741                 ja      loc_40769D
.text:00407747
.text:00407747 loc_407747:                             ; CODE XREF: sub_4071F0+4A7↑j
.text:00407747                 mov     edx, [esp+97Ch+var_950]
.text:0040774B                 mov     byte ptr [edx], 1
.text:0040774E                 inc     edx
.text:0040774F                 mov     [esp+97Ch+var_950], edx
.text:00407753
.text:00407753 loc_407753:                             ; CODE XREF: sub_4071F0+48A↑j
.text:00407753                 mov     ebp, [esp+97Ch+Block]
.text:0040775A                 mov     [esp+97Ch+Size], ebp ; Block
.text:0040775D                 xor     ebp, ebp
.text:0040775F                 call    free
.text:00407764                 mov     ecx, [esp+97Ch+arg_C]
.text:0040776B                 mov     esi, [esp+97Ch+arg_C]
.text:00407772                 mov     ebx, [ecx]
.text:00407774                 sub     [esp+97Ch+var_950], ebx
.text:00407778                 mov     edi, [esp+97Ch+var_950]
.text:0040777C                 mov     [esi+8], edi
.text:0040777F                 jmp     loc_407606
.text:00407784 ; ---------------------------------------------------------------------------
.text:00407784
.text:00407784 loc_407784:                             ; CODE XREF: sub_4071F0+479↑j
.text:00407784                 mov     edi, [esp+97Ch+Block]
.text:0040778B                 mov     ebp, 8
.text:00407790
.text:00407790 loc_407790:                             ; CODE XREF: sub_4071F0+15BC↓j
.text:00407790                                         ; sub_4071F0+32C3↓j
.text:00407790                 mov     [esp+97Ch+Size], edi ; Block
.text:00407793
.text:00407793 loc_407793:                             ; CODE XREF: sub_4071F0+EDF↓j
.text:00407793                                         ; sub_4071F0+1C4C↓j ...
.text:00407793                 call    free
.text:00407798                 jmp     loc_407606
.text:0040779D ; ---------------------------------------------------------------------------
.text:0040779D
.text:0040779D loc_40779D:                             ; CODE XREF: sub_4071F0+35F↑j
.text:0040779D                 mov     [esp+97Ch+var_978], edx
.text:004077A1                 mov     eax, [esp+97Ch+arg_8]
.text:004077A8                 mov     ebp, [esp+97Ch+arg_0]
.text:004077AF                 mov     [esp+97Ch+var_974], eax
.text:004077B3                 mov     [esp+97Ch+Size], ebp
.text:004077B6                 call    sub_4040A0
.text:004077BB                 test    al, al
.text:004077BD                 jnz     loc_407555
.text:004077C3
.text:004077C3 def_40735F:                             ; CODE XREF: sub_4071F0+169↑j
.text:004077C3                                         ; sub_4071F0+16F↑j ...
.text:004077C3                 mov     edx, [esp+97Ch+var_8FC] ; jumptable 0040735F default case, cases 11-35,37-39,44,45,47-62,64-90,93,95-122
.text:004077CA                 test    edx, edx
.text:004077CC                 jz      short loc_4077E9
.text:004077CE                 mov     eax, [esp+97Ch+var_8FC]
.text:004077D5                 movzx   edx, byte ptr [eax]
.text:004077D8                 movzx   ebx, dl
.text:004077DB                 lea     ebp, [ebx+eax+1]
.text:004077DF                 cmp     ebp, [esp+97Ch+var_950]
.text:004077E3                 jz      loc_4079CF
.text:004077E9
.text:004077E9 loc_4077E9:                             ; CODE XREF: sub_4071F0+5DC↑j
.text:004077E9                                         ; sub_4071F0+7E1↓j ...
.text:004077E9                 mov     edi, [esp+97Ch+var_950]
.text:004077ED                 mov     ebp, [esp+97Ch+arg_C]
.text:004077F4                 mov     ecx, [esp+97Ch+var_950]
.text:004077F8                 mov     [esp+97Ch+var_900], edi
.text:004077FC                 mov     edi, [ebp+0]
.text:004077FF                 mov     edx, [ebp+4]
.text:00407802                 sub     ecx, edi
.text:00407804                 mov     ebx, edi
.text:00407806                 add     ecx, 2
.text:00407809                 cmp     ecx, edx
.text:0040780B                 jbe     loc_4078C8
.text:00407811
.text:00407811 loc_407811:                             ; CODE XREF: sub_4071F0+6D2↓j
.text:00407811                 cmp     edx, 10000h
.text:00407817                 mov     ebp, 0Fh
.text:0040781C                 jz      loc_407606
.text:00407822                 lea     esi, [edx+edx]
.text:00407825                 mov     edx, [esp+97Ch+arg_C]
.text:0040782C                 cmp     esi, 10000h
.text:00407832                 mov     [edx+4], esi
.text:00407835                 jbe     short loc_40783E
.text:00407837                 mov     dword ptr [edx+4], 10000h
.text:0040783E
.text:0040783E loc_40783E:                             ; CODE XREF: sub_4071F0+645↑j
.text:0040783E                 mov     eax, [esp+97Ch+arg_C]
.text:00407845                 mov     ebp, [eax+4]
.text:00407848                 mov     [esp+97Ch+Size], edi ; Block
.text:0040784B                 mov     [esp+97Ch+var_978], ebp ; Size
.text:0040784F                 mov     ebp, 0Ch
.text:00407854                 call    realloc
.text:00407859                 mov     edx, [esp+97Ch+arg_C]
.text:00407860                 test    eax, eax
.text:00407862                 mov     [edx], eax
.text:00407864                 jz      loc_407606
.text:0040786A                 cmp     ebx, eax
.text:0040786C                 jz      short loc_4078A2
.text:0040786E                 sub     eax, ebx
.text:00407870                 mov     ebx, [esp+97Ch+var_908]
.text:00407874                 add     [esp+97Ch+var_950], eax
.text:00407878                 add     [esp+97Ch+var_904], eax
.text:0040787C                 test    ebx, ebx
.text:0040787E                 jz      short loc_407884
.text:00407880                 add     [esp+97Ch+var_908], eax
.text:00407884
.text:00407884 loc_407884:                             ; CODE XREF: sub_4071F0+68E↑j
.text:00407884                 mov     ecx, [esp+97Ch+var_900]
.text:00407888                 test    ecx, ecx
.text:0040788A                 jz      short loc_407890
.text:0040788C                 add     [esp+97Ch+var_900], eax
.text:00407890
.text:00407890 loc_407890:                             ; CODE XREF: sub_4071F0+69A↑j
.text:00407890                 mov     edi, [esp+97Ch+var_8FC]
.text:00407897                 test    edi, edi
.text:00407899                 jz      short loc_4078A2
.text:0040789B                 add     [esp+97Ch+var_8FC], eax
.text:004078A2
.text:004078A2 loc_4078A2:                             ; CODE XREF: sub_4071F0+67C↑j
.text:004078A2                                         ; sub_4071F0+6A9↑j
.text:004078A2                 mov     edx, [esp+97Ch+arg_C]
.text:004078A9                 mov     ebp, [esp+97Ch+arg_C]
.text:004078B0                 mov     esi, [esp+97Ch+var_950]
.text:004078B4                 mov     edi, [edx]
.text:004078B6                 mov     edx, [ebp+4]
.text:004078B9                 sub     esi, edi
.text:004078BB                 add     esi, 2
.text:004078BE                 mov     ebx, edi
.text:004078C0                 cmp     esi, edx
.text:004078C2                 ja      loc_407811
.text:004078C8
.text:004078C8 loc_4078C8:                             ; CODE XREF: sub_4071F0+61B↑j
.text:004078C8                 mov     eax, [esp+97Ch+var_950]
.text:004078CC                 mov     byte ptr [eax], 2
.text:004078CF                 inc     eax
.text:004078D0                 mov     byte ptr [eax], 0
.text:004078D3                 mov     ecx, [esp+97Ch+arg_C]
.text:004078DA                 inc     eax
.text:004078DB                 mov     [esp+97Ch+var_950], eax
.text:004078DF                 dec     eax
.text:004078E0                 mov     edi, [ecx]
.text:004078E2                 mov     [esp+97Ch+var_8FC], eax
.text:004078E9                 mov     edx, [ecx+4]
.text:004078EC                 mov     eax, [esp+97Ch+var_950]
.text:004078F0                 mov     ebx, edi
.text:004078F2                 sub     eax, edi
.text:004078F4
.text:004078F4 loc_4078F4:                             ; CODE XREF: sub_4071F0+7B9↓j
.text:004078F4                 inc     eax
.text:004078F5                 cmp     eax, edx
.text:004078F7                 jbe     loc_4079AE
.text:004078FD                 cmp     edx, 10000h
.text:00407903                 mov     ebp, 0Fh
.text:00407908                 jz      loc_407606
.text:0040790E                 lea     esi, [edx+edx]
.text:00407911                 mov     edx, [esp+97Ch+arg_C]
.text:00407918                 cmp     esi, 10000h
.text:0040791E                 mov     [edx+4], esi
.text:00407921                 jbe     short loc_40792A
.text:00407923                 mov     dword ptr [edx+4], 10000h
.text:0040792A
.text:0040792A loc_40792A:                             ; CODE XREF: sub_4071F0+731↑j
.text:0040792A                 mov     edx, [esp+97Ch+arg_C]
.text:00407931                 mov     ebp, [edx+4]
.text:00407934                 mov     [esp+97Ch+Size], edi ; Block
.text:00407937                 mov     [esp+97Ch+var_978], ebp ; Size
.text:0040793B                 mov     ebp, 0Ch
.text:00407940                 call    realloc
.text:00407945                 mov     edi, [esp+97Ch+arg_C]
.text:0040794C                 test    eax, eax
.text:0040794E                 mov     [edi], eax
.text:00407950                 jz      loc_407606
.text:00407956                 cmp     ebx, eax
.text:00407958                 jz      short loc_40798E
.text:0040795A                 mov     ecx, [esp+97Ch+var_908]
.text:0040795E                 sub     eax, ebx
.text:00407960                 add     [esp+97Ch+var_950], eax
.text:00407964                 add     [esp+97Ch+var_904], eax
.text:00407968                 test    ecx, ecx
.text:0040796A                 jz      short loc_407970
.text:0040796C                 add     [esp+97Ch+var_908], eax
.text:00407970
.text:00407970 loc_407970:                             ; CODE XREF: sub_4071F0+77A↑j
.text:00407970                 mov     ebx, [esp+97Ch+var_900]
.text:00407974                 test    ebx, ebx
.text:00407976                 jz      short loc_40797C
.text:00407978                 add     [esp+97Ch+var_900], eax
.text:0040797C
.text:0040797C loc_40797C:                             ; CODE XREF: sub_4071F0+786↑j
.text:0040797C                 mov     esi, [esp+97Ch+var_8FC]
.text:00407983                 test    esi, esi
.text:00407985                 jz      short loc_40798E
.text:00407987                 add     [esp+97Ch+var_8FC], eax
.text:0040798E
.text:0040798E loc_40798E:                             ; CODE XREF: sub_4071F0+768↑j
.text:0040798E                                         ; sub_4071F0+795↑j ...
.text:0040798E                 mov     edx, [esp+97Ch+arg_C]
.text:00407995                 mov     ebp, [esp+97Ch+arg_C]
.text:0040799C                 mov     eax, [esp+97Ch+var_950]
.text:004079A0                 mov     edi, [edx]
.text:004079A2                 mov     edx, [ebp+4]
.text:004079A5                 sub     eax, edi
.text:004079A7                 mov     ebx, edi
.text:004079A9                 jmp     loc_4078F4
.text:004079AE ; ---------------------------------------------------------------------------
.text:004079AE
.text:004079AE loc_4079AE:                             ; CODE XREF: sub_4071F0+707↑j
.text:004079AE                 movzx   ecx, [esp+97Ch+var_8EC]
.text:004079B6                 mov     edi, [esp+97Ch+var_950]
.text:004079BA                 mov     [edi], cl
.text:004079BC                 mov     eax, [esp+97Ch+var_8FC]
.text:004079C3                 inc     edi
.text:004079C4                 mov     [esp+97Ch+var_950], edi
.text:004079C8                 inc     byte ptr [eax]
.text:004079CA                 jmp     loc_40761F
.text:004079CF ; ---------------------------------------------------------------------------
.text:004079CF
.text:004079CF loc_4079CF:                             ; CODE XREF: sub_4071F0+5F3↑j
.text:004079CF                 inc     dl
.text:004079D1                 jz      loc_4077E9
.text:004079D7                 mov     edi, [esp+97Ch+var_8D0]
.text:004079DE                 mov     edx, edi
.text:004079E0                 movzx   eax, byte ptr [edi]
.text:004079E3                 cmp     al, 2Ah ; '*'
.text:004079E5                 jz      loc_4077E9
.text:004079EB                 cmp     al, 5Eh ; '^'
.text:004079ED                 jz      loc_4077E9
.text:004079F3                 test    byte ptr [esp+97Ch+arg_8], 2
.text:004079FB                 jz      short loc_407A44
.text:004079FD                 cmp     al, 5Ch ; '\'
.text:004079FF                 jz      short loc_407A40
.text:00407A01
.text:00407A01 loc_407A01:                             ; CODE XREF: sub_4071F0+85E↓j
.text:00407A01                 test    [esp+97Ch+arg_8], 200h
.text:00407A0C                 jz      short loc_40798E
.text:00407A0E                 test    [esp+97Ch+arg_8], 1000h
.text:00407A19                 jz      short loc_407A30
.text:00407A1B                 cmp     byte ptr [edx], 7Bh ; '{'
.text:00407A1E
.text:00407A1E loc_407A1E:                             ; CODE XREF: sub_4071F0+84D↓j
.text:00407A1E                 jnz     loc_40798E
.text:00407A24                 jmp     loc_4077E9
.text:00407A24 ; ---------------------------------------------------------------------------
.text:00407A29                 align 10h
.text:00407A30
.text:00407A30 loc_407A30:                             ; CODE XREF: sub_4071F0+829↑j
.text:00407A30                 cmp     byte ptr [edx], 5Ch ; '\'
.text:00407A33                 jnz     loc_40798E
.text:00407A39                 cmp     byte ptr [edx+1], 7Bh ; '{'
.text:00407A3D                 jmp     short loc_407A1E
.text:00407A3D ; ---------------------------------------------------------------------------
.text:00407A3F                 align 10h
.text:00407A40
.text:00407A40 loc_407A40:                             ; CODE XREF: sub_4071F0+80F↑j
.text:00407A40                 movzx   eax, byte ptr [edi+1]
.text:00407A44
.text:00407A44 loc_407A44:                             ; CODE XREF: sub_4071F0+80B↑j
.text:00407A44                 cmp     al, 2Bh ; '+'
.text:00407A46                 jz      loc_4077E9
.text:00407A4C                 cmp     al, 3Fh ; '?'
.text:00407A4E                 jnz     short loc_407A01
.text:00407A50                 jmp     loc_4077E9
.text:00407A55 ; ---------------------------------------------------------------------------
.text:00407A55
.text:00407A55 loc_407A55:                             ; CODE XREF: sub_4071F0+16F↑j
.text:00407A55                                         ; DATA XREF: sub_4071F0:jpt_40735F↑o
.text:00407A55                 test    [esp+97Ch+arg_8], 800h ; jumptable 0040735F case 10
.text:00407A60
.text:00407A60 loc_407A60:                             ; CODE XREF: sub_4071F0+32B2↓j
.text:00407A60                 jz      def_40735F      ; jumptable 0040735F default case, cases 11-35,37-39,44,45,47-62,64-90,93,95-122
.text:00407A66
.text:00407A66 loc_407A66:                             ; CODE XREF: sub_4071F0+3279↓j
.text:00407A66                 test    [esp+97Ch+arg_8], 400h
.text:00407A71                 jnz     def_40735F      ; jumptable 0040735F default case, cases 11-35,37-39,44,45,47-62,64-90,93,95-122
.text:00407A77
.text:00407A77 loc_407A77:                             ; CODE XREF: sub_4071F0+8FF↓j
.text:00407A77                                         ; sub_4071F0+92C↓j ...
.text:00407A77                 mov     eax, [esp+97Ch+arg_C]
.text:00407A7E                 mov     ebp, [esp+97Ch+var_950]
.text:00407A82                 mov     edi, [eax]
.text:00407A84                 mov     edx, [eax+4]
.text:00407A87                 sub     ebp, edi
.text:00407A89                 add     ebp, 3
.text:00407A8C                 cmp     ebp, edx
.text:00407A8E                 jbe     loc_407B2E
.text:00407A94                 cmp     edx, 10000h
.text:00407A9A                 mov     ebp, 0Fh
.text:00407A9F                 jz      loc_407606
.text:00407AA5                 lea     ebx, [edx+edx]
.text:00407AA8                 mov     edx, [esp+97Ch+arg_C]
.text:00407AAF                 cmp     ebx, 10000h
.text:00407AB5                 mov     [edx+4], ebx
.text:00407AB8                 jbe     short loc_407AC1
.text:00407ABA                 mov     dword ptr [edx+4], 10000h
.text:00407AC1
.text:00407AC1 loc_407AC1:                             ; CODE XREF: sub_4071F0+8C8↑j
.text:00407AC1                 mov     eax, [esp+97Ch+arg_C]
.text:00407AC8                 mov     ebp, [eax+4]
.text:00407ACB                 mov     [esp+97Ch+Size], edi ; Block
.text:00407ACE                 mov     [esp+97Ch+var_978], ebp ; Size
.text:00407AD2                 mov     ebp, 0Ch
.text:00407AD7                 call    realloc
.text:00407ADC                 mov     esi, [esp+97Ch+arg_C]
.text:00407AE3                 test    eax, eax
.text:00407AE5                 mov     [esi], eax
.text:00407AE7                 jz      loc_407606
.text:00407AED                 cmp     edi, eax
.text:00407AEF                 jz      short loc_407A77
.text:00407AF1                 mov     ecx, [esp+97Ch+var_908]
.text:00407AF5                 sub     eax, edi
.text:00407AF7                 add     [esp+97Ch+var_950], eax
.text:00407AFB                 add     [esp+97Ch+var_904], eax
.text:00407AFF                 test    ecx, ecx
.text:00407B01                 jz      short loc_407B07
.text:00407B03                 add     [esp+97Ch+var_908], eax
.text:00407B07
.text:00407B07 loc_407B07:                             ; CODE XREF: sub_4071F0+911↑j
.text:00407B07                 mov     edx, [esp+97Ch+var_900]
.text:00407B0B                 test    edx, edx
.text:00407B0D                 jz      short loc_407B13
.text:00407B0F                 add     [esp+97Ch+var_900], eax
.text:00407B13
.text:00407B13 loc_407B13:                             ; CODE XREF: sub_4071F0+91D↑j
.text:00407B13                 mov     ebx, [esp+97Ch+var_8FC]
.text:00407B1A                 test    ebx, ebx
.text:00407B1C                 jz      loc_407A77
.text:00407B22                 add     [esp+97Ch+var_8FC], eax
.text:00407B29                 jmp     loc_407A77
.text:00407B2E ; ---------------------------------------------------------------------------
.text:00407B2E
.text:00407B2E loc_407B2E:                             ; CODE XREF: sub_4071F0+89E↑j
.text:00407B2E                 mov     [esp+97Ch+Size], 0Fh
.text:00407B35                 mov     edi, [esp+97Ch+var_950]
.text:00407B39                 mov     ebp, [esp+97Ch+var_904]
.text:00407B3D                 mov     edx, [esp+97Ch+var_904]
.text:00407B41                 mov     ebx, edi
.text:00407B43                 sub     ebx, ebp
.text:00407B45                 mov     [esp+97Ch+var_970], edi
.text:00407B49                 add     ebx, 3
.text:00407B4C                 add     edi, 3
.text:00407B4F                 mov     [esp+97Ch+var_974], ebx
.text:00407B53                 mov     [esp+97Ch+var_978], edx
.text:00407B57                 call    sub_404010
.text:00407B5C                 mov     [esp+97Ch+var_950], edi
.text:00407B60                 mov     esi, [esp+97Ch+var_908]
.text:00407B64                 xor     ecx, ecx
.text:00407B66                 mov     [esp+97Ch+var_8FC], ecx
.text:00407B6D                 test    esi, esi
.text:00407B6F                 jz      short loc_407B94
.text:00407B71                 mov     [esp+97Ch+Size], 0Eh
.text:00407B78                 mov     eax, [esp+97Ch+var_908]
.text:00407B7C                 mov     esi, edi
.text:00407B7E                 mov     edi, [esp+97Ch+var_908]
.text:00407B82                 sub     esi, eax
.text:00407B84                 sub     esi, 3
.text:00407B87                 mov     [esp+97Ch+var_974], esi
.text:00407B8B                 mov     [esp+97Ch+var_978], edi
.text:00407B8F                 call    sub_403FC0
.text:00407B94
.text:00407B94 loc_407B94:                             ; CODE XREF: sub_4071F0+97F↑j
.text:00407B94                 mov     esi, [esp+97Ch+arg_C]
.text:00407B9B                 mov     edx, [esp+97Ch+var_950]
.text:00407B9F                 mov     ecx, [esp+97Ch+arg_C]
.text:00407BA6                 mov     edi, [esi]
.text:00407BA8                 mov     ebp, edx
.text:00407BAA                 mov     [esp+97Ch+var_908], edx
.text:00407BAE                 mov     edx, [ecx+4]
.text:00407BB1                 sub     ebp, edi
.text:00407BB3                 add     ebp, 3
.text:00407BB6                 mov     ebx, edi
.text:00407BB8                 cmp     ebp, edx
.text:00407BBA                 jbe     loc_407C73
.text:00407BC0
.text:00407BC0 loc_407BC0:                             ; CODE XREF: sub_4071F0+A7D↓j
.text:00407BC0                 cmp     edx, 10000h
.text:00407BC6                 mov     ebp, 0Fh
.text:00407BCB                 jz      loc_407606
.text:00407BD1                 lea     ebp, [edx+edx]
.text:00407BD4                 mov     edx, [esp+97Ch+arg_C]
.text:00407BDB                 cmp     ebp, 10000h
.text:00407BE1                 mov     [edx+4], ebp
.text:00407BE4                 jbe     short loc_407BED
.text:00407BE6                 mov     dword ptr [edx+4], 10000h
.text:00407BED
.text:00407BED loc_407BED:                             ; CODE XREF: sub_4071F0+9F4↑j
.text:00407BED                 mov     eax, [esp+97Ch+arg_C]
.text:00407BF4                 mov     ebp, 0Ch
.text:00407BF9                 mov     edx, [eax+4]
.text:00407BFC                 mov     [esp+97Ch+Size], edi ; Block
.text:00407BFF                 mov     [esp+97Ch+var_978], edx ; Size
.text:00407C03                 call    realloc
.text:00407C08                 mov     edi, [esp+97Ch+arg_C]
.text:00407C0F                 test    eax, eax
.text:00407C11                 mov     [edi], eax
.text:00407C13                 jz      loc_407606
.text:00407C19                 cmp     ebx, eax
.text:00407C1B                 jz      short loc_407C4D
.text:00407C1D                 sub     eax, ebx
.text:00407C1F                 mov     ebx, [esp+97Ch+var_908]
.text:00407C23                 add     [esp+97Ch+var_950], eax
.text:00407C27                 test    ebx, ebx
.text:00407C29                 jz      short loc_407C2F
.text:00407C2B                 add     [esp+97Ch+var_908], eax
.text:00407C2F
.text:00407C2F loc_407C2F:                             ; CODE XREF: sub_4071F0+A39↑j
.text:00407C2F                 mov     ecx, [esp+97Ch+var_900]
.text:00407C33                 test    ecx, ecx
.text:00407C35                 jz      short loc_407C3B
.text:00407C37                 add     [esp+97Ch+var_900], eax
.text:00407C3B
.text:00407C3B loc_407C3B:                             ; CODE XREF: sub_4071F0+A45↑j
.text:00407C3B                 mov     ebp, [esp+97Ch+var_8FC]
.text:00407C42                 test    ebp, ebp
.text:00407C44                 jz      short loc_407C4D
.text:00407C46                 add     [esp+97Ch+var_8FC], eax
.text:00407C4D
.text:00407C4D loc_407C4D:                             ; CODE XREF: sub_4071F0+A2B↑j
.text:00407C4D                                         ; sub_4071F0+A54↑j
.text:00407C4D                 mov     edx, [esp+97Ch+arg_C]
.text:00407C54                 mov     eax, [esp+97Ch+arg_C]
.text:00407C5B                 mov     esi, [esp+97Ch+var_950]
.text:00407C5F                 mov     edi, [edx]
.text:00407C61                 mov     edx, [eax+4]
.text:00407C64                 sub     esi, edi
.text:00407C66                 add     esi, 3
.text:00407C69                 mov     ebx, edi
.text:00407C6B                 cmp     esi, edx
.text:00407C6D                 ja      loc_407BC0
.text:00407C73
.text:00407C73 loc_407C73:                             ; CODE XREF: sub_4071F0+9CA↑j
.text:00407C73                 add     [esp+97Ch+var_950], 3
.text:00407C78                 mov     [esp+97Ch+var_900], 0
.text:00407C80                 mov     edi, [esp+97Ch+var_950]
.text:00407C84                 mov     [esp+97Ch+var_904], edi
.text:00407C88                 jmp     loc_40761F
.text:00407C8D ; ---------------------------------------------------------------------------
.text:00407C8D
.text:00407C8D loc_407C8D:                             ; CODE XREF: sub_4071F0+16F↑j
.text:00407C8D                                         ; DATA XREF: sub_4071F0:jpt_40735F↑o
.text:00407C8D                 mov     eax, [esp+97Ch+var_8D0] ; jumptable 0040735F case 36
.text:00407C94                 cmp     eax, [esp+97Ch+var_8F4]
.text:00407C9B                 jz      short loc_407CAB
.text:00407C9D                 test    byte ptr [esp+97Ch+arg_8], 8
.text:00407CA5                 jz      loc_407D71
.text:00407CAB
.text:00407CAB loc_407CAB:                             ; CODE XREF: sub_4071F0+AAB↑j
.text:00407CAB                                         ; sub_4071F0+B31↓j ...
.text:00407CAB                 mov     ecx, [esp+97Ch+arg_C]
.text:00407CB2                 mov     eax, [esp+97Ch+arg_C]
.text:00407CB9                 mov     ebx, [esp+97Ch+var_950]
.text:00407CBD                 mov     edi, [ecx]
.text:00407CBF                 mov     edx, [eax+4]
.text:00407CC2                 sub     ebx, edi
.text:00407CC4                 inc     ebx
.text:00407CC5                 cmp     ebx, edx
.text:00407CC7                 jbe     loc_407D60
.text:00407CCD                 cmp     edx, 10000h
.text:00407CD3                 mov     ebp, 0Fh
.text:00407CD8                 jz      loc_407606
.text:00407CDE                 mov     ebx, [esp+97Ch+arg_C]
.text:00407CE5                 lea     ecx, [edx+edx]
.text:00407CE8                 cmp     ecx, 10000h
.text:00407CEE                 mov     [ebx+4], ecx
.text:00407CF1                 jbe     short loc_407CFA
.text:00407CF3                 mov     dword ptr [ebx+4], 10000h
.text:00407CFA
.text:00407CFA loc_407CFA:                             ; CODE XREF: sub_4071F0+B01↑j
.text:00407CFA                 mov     ebx, [esp+97Ch+arg_C]
.text:00407D01                 mov     ebp, [ebx+4]
.text:00407D04                 mov     [esp+97Ch+Size], edi ; Block
.text:00407D07                 mov     [esp+97Ch+var_978], ebp ; Size
.text:00407D0B                 mov     ebp, 0Ch
.text:00407D10                 call    realloc
.text:00407D15                 mov     [ebx], eax
.text:00407D17                 test    eax, eax
.text:00407D19                 jz      loc_407606
.text:00407D1F                 cmp     edi, eax
.text:00407D21                 jz      short loc_407CAB
.text:00407D23                 sub     eax, edi
.text:00407D25                 mov     edi, [esp+97Ch+var_908]
.text:00407D29                 add     [esp+97Ch+var_950], eax
.text:00407D2D                 add     [esp+97Ch+var_904], eax
.text:00407D31                 test    edi, edi
.text:00407D33                 jz      short loc_407D39
.text:00407D35                 add     [esp+97Ch+var_908], eax
.text:00407D39
.text:00407D39 loc_407D39:                             ; CODE XREF: sub_4071F0+B43↑j
.text:00407D39                 mov     edx, [esp+97Ch+var_900]
.text:00407D3D                 test    edx, edx
.text:00407D3F                 jz      short loc_407D45
.text:00407D41                 add     [esp+97Ch+var_900], eax
.text:00407D45
.text:00407D45 loc_407D45:                             ; CODE XREF: sub_4071F0+B4F↑j
.text:00407D45                 mov     esi, [esp+97Ch+var_8FC]
.text:00407D4C                 test    esi, esi
.text:00407D4E                 jz      loc_407CAB
.text:00407D54                 add     [esp+97Ch+var_8FC], eax
.text:00407D5B                 jmp     loc_407CAB
.text:00407D60 ; ---------------------------------------------------------------------------
.text:00407D60
.text:00407D60 loc_407D60:                             ; CODE XREF: sub_4071F0+AD7↑j
.text:00407D60                 mov     ebx, [esp+97Ch+var_950]
.text:00407D64                 mov     byte ptr [ebx], 0Ah
.text:00407D67
.text:00407D67 loc_407D67:                             ; CODE XREF: sub_4071F0+1059↓j
.text:00407D67                 inc     ebx
.text:00407D68                 mov     [esp+97Ch+var_950], ebx
.text:00407D6C                 jmp     loc_40761F
.text:00407D71 ; ---------------------------------------------------------------------------
.text:00407D71
.text:00407D71 loc_407D71:                             ; CODE XREF: sub_4071F0+AB5↑j
.text:00407D71                 mov     [esp+97Ch+Size], eax
.text:00407D74                 mov     esi, [esp+97Ch+arg_8]
.text:00407D7B                 mov     edx, [esp+97Ch+var_8F4]
.text:00407D82                 mov     [esp+97Ch+var_974], esi
.text:00407D86                 mov     [esp+97Ch+var_978], edx
.text:00407D8A                 call    sub_404100
.text:00407D8F                 test    al, al
.text:00407D91                 jnz     loc_407CAB
.text:00407D97                 jmp     def_40735F      ; jumptable 0040735F default case, cases 11-35,37-39,44,45,47-62,64-90,93,95-122
.text:00407D9C ; ---------------------------------------------------------------------------
.text:00407D9C
.text:00407D9C loc_407D9C:                             ; CODE XREF: sub_4071F0+16F↑j
.text:00407D9C                                         ; DATA XREF: sub_4071F0:jpt_40735F↑o
.text:00407D9C                 test    [esp+97Ch+arg_8], 2000h ; jumptable 0040735F case 40
.text:00407DA7                 jz      def_40735F      ; jumptable 0040735F default case, cases 11-35,37-39,44,45,47-62,64-90,93,95-122
.text:00407DAD
.text:00407DAD loc_407DAD:                             ; CODE XREF: sub_4071F0+2417↓j
.text:00407DAD                 inc     [esp+97Ch+var_90C]
.text:00407DB1                 mov     eax, [esp+97Ch+arg_C]
.text:00407DB8                 inc     dword ptr [eax+18h]
.text:00407DBB                 mov     ecx, [esp+97Ch+var_24]
.text:00407DC2                 cmp     ecx, [esp+97Ch+var_28]
.text:00407DC9                 jz      loc_407F46
.text:00407DCF
.text:00407DCF loc_407DCF:                             ; CODE XREF: sub_4071F0+D91↓j
.text:00407DCF                 mov     edx, [esp+97Ch+arg_C]
.text:00407DD6                 lea     edi, [ecx+ecx*4]
.text:00407DD9                 xor     eax, eax
.text:00407DDB                 lea     ebp, ds:0[edi*4]
.text:00407DE2                 mov     ebx, [esp+97Ch+Block]
.text:00407DE9                 mov     edi, [edx]
.text:00407DEB                 sub     [esp+97Ch+var_904], edi
.text:00407DEF                 mov     edx, edi
.text:00407DF1                 mov     esi, [esp+97Ch+var_904]
.text:00407DF5                 mov     [ebx+ebp], esi
.text:00407DF8                 mov     esi, [esp+97Ch+var_908]
.text:00407DFC                 test    esi, esi
.text:00407DFE                 jz      short loc_407E07
.text:00407E00                 mov     eax, [esp+97Ch+var_908]
.text:00407E04                 sub     eax, edi
.text:00407E06                 inc     eax
.text:00407E07
.text:00407E07 loc_407E07:                             ; CODE XREF: sub_4071F0+C0E↑j
.text:00407E07                 mov     [ebx+ebp+4], eax
.text:00407E0B                 lea     esi, [ecx+ecx*4]
.text:00407E0E                 mov     ebp, [esp+97Ch+var_90C]
.text:00407E12                 mov     ecx, [esp+97Ch+var_950]
.text:00407E16                 shl     esi, 2
.text:00407E19                 mov     [ebx+esi+10h], ebp
.text:00407E1D                 sub     ecx, edx
.text:00407E1F                 cmp     ebp, 0FFh
.text:00407E25                 mov     [ebx+esi+0Ch], ecx
.text:00407E29                 ja      loc_407F19
.text:00407E2F                 mov     edx, [esp+97Ch+var_24]
.text:00407E36                 lea     esi, [ecx+2]
.text:00407E39                 mov     eax, [esp+97Ch+arg_C]
.text:00407E40                 lea     ebp, [edx+edx*4]
.text:00407E43                 lea     edx, [ecx+3]
.text:00407E46                 mov     [ebx+ebp*4+8], esi
.text:00407E4A                 mov     ecx, [eax+4]
.text:00407E4D                 cmp     edx, ecx
.text:00407E4F                 jbe     loc_407F01
.text:00407E55
.text:00407E55 loc_407E55:                             ; CODE XREF: sub_4071F0+D0B↓j
.text:00407E55                 cmp     ecx, 10000h
.text:00407E5B                 mov     ebp, 0Fh
.text:00407E60                 jz      loc_407606
.text:00407E66                 mov     esi, [esp+97Ch+arg_C]
.text:00407E6D                 lea     ebx, [ecx+ecx]
.text:00407E70                 cmp     ebx, 10000h
.text:00407E76                 mov     [esi+4], ebx
.text:00407E79                 jbe     short loc_407E82
.text:00407E7B                 mov     dword ptr [esi+4], 10000h
.text:00407E82
.text:00407E82 loc_407E82:                             ; CODE XREF: sub_4071F0+C89↑j
.text:00407E82                 mov     eax, [esp+97Ch+arg_C]
.text:00407E89                 mov     ecx, [eax+4]
.text:00407E8C                 mov     [esp+97Ch+Size], edi ; Block
.text:00407E8F                 mov     [esp+97Ch+var_978], ecx ; Size
.text:00407E93                 call    realloc
.text:00407E98                 mov     ebp, [esp+97Ch+arg_C]
.text:00407E9F                 test    eax, eax
.text:00407EA1                 mov     [ebp+0], eax
.text:00407EA4                 mov     ebp, 0Ch
.text:00407EA9                 jz      loc_407606
.text:00407EAF                 cmp     edi, eax
.text:00407EB1                 jz      short loc_407EE3
.text:00407EB3                 sub     eax, edi
.text:00407EB5                 mov     edi, [esp+97Ch+var_908]
.text:00407EB9                 add     [esp+97Ch+var_950], eax
.text:00407EBD                 test    edi, edi
.text:00407EBF                 jz      short loc_407EC5
.text:00407EC1                 add     [esp+97Ch+var_908], eax
.text:00407EC5
.text:00407EC5 loc_407EC5:                             ; CODE XREF: sub_4071F0+CCF↑j
.text:00407EC5                 mov     esi, [esp+97Ch+var_900]
.text:00407EC9                 test    esi, esi
.text:00407ECB                 jz      short loc_407ED1
.text:00407ECD                 add     [esp+97Ch+var_900], eax
.text:00407ED1
.text:00407ED1 loc_407ED1:                             ; CODE XREF: sub_4071F0+CDB↑j
.text:00407ED1                 mov     ebx, [esp+97Ch+var_8FC]
.text:00407ED8                 test    ebx, ebx
.text:00407EDA                 jz      short loc_407EE3
.text:00407EDC                 add     [esp+97Ch+var_8FC], eax
.text:00407EE3
.text:00407EE3 loc_407EE3:                             ; CODE XREF: sub_4071F0+CC1↑j
.text:00407EE3                                         ; sub_4071F0+CEA↑j
.text:00407EE3                 mov     ebp, [esp+97Ch+arg_C]
.text:00407EEA                 mov     edx, [esp+97Ch+var_950]
.text:00407EEE                 mov     edi, [ebp+0]
.text:00407EF1                 mov     ecx, [ebp+4]
.text:00407EF4                 sub     edx, edi
.text:00407EF6                 add     edx, 3
.text:00407EF9                 cmp     edx, ecx
.text:00407EFB                 ja      loc_407E55
.text:00407F01
.text:00407F01 loc_407F01:                             ; CODE XREF: sub_4071F0+C5F↑j
.text:00407F01                 mov     ecx, [esp+97Ch+var_950]
.text:00407F05                 mov     byte ptr [ecx], 6
.text:00407F08                 inc     ecx
.text:00407F09                 movzx   ebx, byte ptr [esp+97Ch+var_90C]
.text:00407F0E                 mov     [ecx], bl
.text:00407F10                 inc     ecx
.text:00407F11                 mov     byte ptr [ecx], 0
.text:00407F14                 inc     ecx
.text:00407F15                 mov     [esp+97Ch+var_950], ecx
.text:00407F19
.text:00407F19 loc_407F19:                             ; CODE XREF: sub_4071F0+C39↑j
.text:00407F19                 inc     [esp+97Ch+var_24]
.text:00407F20                 mov     eax, [esp+97Ch+var_950]
.text:00407F24                 mov     [esp+97Ch+var_908], 0
.text:00407F2C                 mov     [esp+97Ch+var_900], 0
.text:00407F34                 mov     [esp+97Ch+var_904], eax
.text:00407F38
.text:00407F38 loc_407F38:                             ; CODE XREF: sub_4071F0+2F9A↓j
.text:00407F38                                         ; sub_4071F0+3107↓j ...
.text:00407F38                 xor     eax, eax
.text:00407F3A                 mov     [esp+97Ch+var_8FC], eax
.text:00407F41                 jmp     loc_40761F
.text:00407F46 ; ---------------------------------------------------------------------------
.text:00407F46
.text:00407F46 loc_407F46:                             ; CODE XREF: sub_4071F0+BD9↑j
.text:00407F46                 mov     ebp, [esp+97Ch+Block]
.text:00407F4D                 lea     edi, [ecx+ecx*4]
.text:00407F50                 shl     edi, 3
.text:00407F53                 mov     [esp+97Ch+var_978], edi ; Size
.text:00407F57                 mov     [esp+97Ch+Size], ebp ; Block
.text:00407F5A                 mov     ebp, 0Ch
.text:00407F5F                 call    realloc
.text:00407F64                 mov     [esp+97Ch+Block], eax
.text:00407F6B                 test    eax, eax
.text:00407F6D                 jz      loc_407606
.text:00407F73                 shl     [esp+97Ch+var_28], 1
.text:00407F7A                 mov     ecx, [esp+97Ch+var_24]
.text:00407F81                 jmp     loc_407DCF
.text:00407F86 ; ---------------------------------------------------------------------------
.text:00407F86
.text:00407F86 loc_407F86:                             ; CODE XREF: sub_4071F0+16F↑j
.text:00407F86                                         ; DATA XREF: sub_4071F0:jpt_40735F↑o
.text:00407F86                 test    [esp+97Ch+arg_8], 2000h ; jumptable 0040735F case 41
.text:00407F91                 jz      def_40735F      ; jumptable 0040735F default case, cases 11-35,37-39,44,45,47-62,64-90,93,95-122
.text:00407F97
.text:00407F97 loc_407F97:                             ; CODE XREF: sub_4071F0+2537↓j
.text:00407F97                 mov     esi, [esp+97Ch+var_908]
.text:00407F9B                 test    esi, esi
.text:00407F9D                 jz      loc_4080A4
.text:00407FA3                 mov     eax, [esp+97Ch+arg_C]
.text:00407FAA                 mov     ebp, [esp+97Ch+var_950]
.text:00407FAE                 mov     edi, [eax]
.text:00407FB0                 mov     edx, [eax+4]
.text:00407FB3                 sub     ebp, edi
.text:00407FB5                 mov     ebx, edi
.text:00407FB7                 inc     ebp
.text:00407FB8                 cmp     ebp, edx
.text:00407FBA                 jbe     loc_408075
.text:00407FC0
.text:00407FC0 loc_407FC0:                             ; CODE XREF: sub_4071F0+E7F↓j
.text:00407FC0                 cmp     edx, 10000h
.text:00407FC6                 mov     ebp, 0Fh
.text:00407FCB                 jz      loc_407606
.text:00407FD1                 mov     esi, [esp+97Ch+arg_C]
.text:00407FD8                 lea     ecx, [edx+edx]
.text:00407FDB                 cmp     ecx, 10000h
.text:00407FE1                 mov     [esi+4], ecx
.text:00407FE4                 jbe     short loc_407FED
.text:00407FE6                 mov     dword ptr [esi+4], 10000h
.text:00407FED
.text:00407FED loc_407FED:                             ; CODE XREF: sub_4071F0+DF4↑j
.text:00407FED                 mov     ebp, [esp+97Ch+arg_C]
.text:00407FF4                 mov     esi, [ebp+4]
.text:00407FF7                 mov     ebp, 0Ch
.text:00407FFC                 mov     [esp+97Ch+Size], edi ; Block
.text:00407FFF                 mov     [esp+97Ch+var_978], esi ; Size
.text:00408003                 call    realloc
.text:00408008                 mov     edx, [esp+97Ch+arg_C]
.text:0040800F                 test    eax, eax
.text:00408011                 mov     [edx], eax
.text:00408013                 jz      loc_407606
.text:00408019                 cmp     ebx, eax
.text:0040801B                 jz      short loc_408051
.text:0040801D                 sub     eax, ebx
.text:0040801F                 mov     ebx, [esp+97Ch+var_908]
.text:00408023                 add     [esp+97Ch+var_950], eax
.text:00408027                 add     [esp+97Ch+var_904], eax
.text:0040802B                 test    ebx, ebx
.text:0040802D                 jz      short loc_408033
.text:0040802F                 add     [esp+97Ch+var_908], eax
.text:00408033
.text:00408033 loc_408033:                             ; CODE XREF: sub_4071F0+E3D↑j
.text:00408033                 mov     edi, [esp+97Ch+var_900]
.text:00408037                 test    edi, edi
.text:00408039                 jz      short loc_40803F
.text:0040803B                 add     [esp+97Ch+var_900], eax
.text:0040803F
.text:0040803F loc_40803F:                             ; CODE XREF: sub_4071F0+E49↑j
.text:0040803F                 mov     edx, [esp+97Ch+var_8FC]
.text:00408046                 test    edx, edx
.text:00408048                 jz      short loc_408051
.text:0040804A                 add     [esp+97Ch+var_8FC], eax
.text:00408051
.text:00408051 loc_408051:                             ; CODE XREF: sub_4071F0+E2B↑j
.text:00408051                                         ; sub_4071F0+E58↑j
.text:00408051                 mov     esi, [esp+97Ch+arg_C]
.text:00408058                 mov     eax, [esp+97Ch+arg_C]
.text:0040805F                 mov     ecx, [esp+97Ch+var_950]
.text:00408063                 mov     edi, [esi]
.text:00408065                 mov     edx, [eax+4]
.text:00408068                 sub     ecx, edi
.text:0040806A                 inc     ecx
.text:0040806B                 mov     ebx, edi
.text:0040806D                 cmp     ecx, edx
.text:0040806F                 ja      loc_407FC0
.text:00408075
.text:00408075 loc_408075:                             ; CODE XREF: sub_4071F0+DCA↑j
.text:00408075                 mov     edx, [esp+97Ch+var_950]
.text:00408079                 mov     byte ptr [edx], 14h
.text:0040807C                 mov     edi, [esp+97Ch+var_908]
.text:00408080                 inc     edx
.text:00408081                 mov     [esp+97Ch+var_950], edx
.text:00408085                 mov     ebx, edx
.text:00408087                 mov     ebp, [esp+97Ch+var_908]
.text:0040808B                 mov     [esp+97Ch+Size], 0Eh
.text:00408092                 sub     ebx, edi
.text:00408094                 sub     ebx, 4
.text:00408097                 mov     [esp+97Ch+var_974], ebx
.text:0040809B                 mov     [esp+97Ch+var_978], ebp
.text:0040809F                 call    sub_403FC0
.text:004080A4
.text:004080A4 loc_4080A4:                             ; CODE XREF: sub_4071F0+DAD↑j
.text:004080A4                 mov     eax, [esp+97Ch+var_24]
.text:004080AB                 test    eax, eax
.text:004080AD                 jnz     short loc_4080D4
.text:004080AF                 test    [esp+97Ch+arg_8], 20000h
.text:004080BA                 jnz     def_40735F      ; jumptable 0040735F default case, cases 11-35,37-39,44,45,47-62,64-90,93,95-122
.text:004080C0
.text:004080C0 loc_4080C0:                             ; CODE XREF: sub_4071F0+254E↓j
.text:004080C0                 mov     ecx, [esp+97Ch+Block]
.text:004080C7                 mov     ebp, 10h
.text:004080CC
.text:004080CC loc_4080CC:                             ; CODE XREF: sub_4071F0+15EA↓j
.text:004080CC                                         ; sub_4071F0+21AF↓j
.text:004080CC                 mov     [esp+97Ch+Size], ecx
.text:004080CF                 jmp     loc_407793
.text:004080D4 ; ---------------------------------------------------------------------------
.text:004080D4
.text:004080D4 loc_4080D4:                             ; CODE XREF: sub_4071F0+EBD↑j
.text:004080D4                 dec     eax
.text:004080D5                 mov     edx, [esp+97Ch+Block]
.text:004080DC                 mov     ebp, [esp+97Ch+arg_C]
.text:004080E3                 mov     [esp+97Ch+var_24], eax
.text:004080EA                 lea     esi, [eax+eax*4]
.text:004080ED                 shl     esi, 2
.text:004080F0                 mov     ebx, [ebp+0]
.text:004080F3                 mov     edi, [edx+esi]
.text:004080F6                 mov     ebp, [edx+esi+4]
.text:004080FA                 mov     ecx, ebx
.text:004080FC                 add     edi, ebx
.text:004080FE                 test    ebp, ebp
.text:00408100                 mov     [esp+97Ch+var_904], edi
.text:00408104                 lea     edi, [ebp+ebx-1]
.text:00408108                 setz    bl
.text:0040810B                 movzx   esi, bl
.text:0040810E                 mov     ebx, [esp+97Ch+var_24]
.text:00408115                 dec     esi
.text:00408116                 and     edi, esi
.text:00408118                 lea     eax, [ebx+ebx*4]
.text:0040811B                 mov     [esp+97Ch+var_908], edi
.text:0040811F                 shl     eax, 2
.text:00408122                 xor     esi, esi
.text:00408124                 mov     [esp+97Ch+var_8FC], esi
.text:0040812B                 mov     ebx, [edx+eax+10h]
.text:0040812F                 mov     ebp, [edx+eax+0Ch]
.text:00408133                 mov     [esp+97Ch+var_930], ebx
.text:00408137                 add     ebp, ecx
.text:00408139                 cmp     ebx, 0FFh
.text:0040813F                 mov     [esp+97Ch+var_900], ebp
.text:00408143                 ja      loc_40761F
.text:00408149                 mov     esi, [edx+eax+8]
.text:0040814D                 movzx   edx, byte ptr [esp+97Ch+var_90C]
.text:00408152                 add     ecx, esi
.text:00408154                 sub     dl, bl
.text:00408156                 mov     [ecx], dl
.text:00408158                 mov     eax, [esp+97Ch+arg_C]
.text:0040815F                 mov     ecx, [esp+97Ch+var_950]
.text:00408163                 mov     edi, [eax]
.text:00408165                 mov     edx, [eax+4]
.text:00408168                 sub     ecx, edi
.text:0040816A                 add     ecx, 3
.text:0040816D                 mov     ebx, edi
.text:0040816F                 cmp     ecx, edx
.text:00408171                 jbe     loc_40822E
.text:00408177
.text:00408177 loc_408177:                             ; CODE XREF: sub_4071F0+1038↓j
.text:00408177                 cmp     edx, 10000h
.text:0040817D                 mov     ebp, 0Fh
.text:00408182                 jz      loc_407606
.text:00408188                 lea     ebp, [edx+edx]
.text:0040818B                 mov     edx, [esp+97Ch+arg_C]
.text:00408192                 cmp     ebp, 10000h
.text:00408198                 mov     [edx+4], ebp
.text:0040819B                 jbe     short loc_4081A4
.text:0040819D                 mov     dword ptr [edx+4], 10000h
.text:004081A4
.text:004081A4 loc_4081A4:                             ; CODE XREF: sub_4071F0+FAB↑j
.text:004081A4                 mov     eax, [esp+97Ch+arg_C]
.text:004081AB                 mov     ebp, 0Ch
.text:004081B0                 mov     edx, [eax+4]
.text:004081B3                 mov     [esp+97Ch+Size], edi ; Block
.text:004081B6                 mov     [esp+97Ch+var_978], edx ; Size
.text:004081BA                 call    realloc
.text:004081BF                 mov     edi, [esp+97Ch+arg_C]
.text:004081C6                 test    eax, eax
.text:004081C8                 mov     [edi], eax
.text:004081CA                 jz      loc_407606
.text:004081D0                 cmp     ebx, eax
.text:004081D2                 jz      short loc_408208
.text:004081D4                 sub     eax, ebx
.text:004081D6                 mov     ebx, [esp+97Ch+var_908]
.text:004081DA                 add     [esp+97Ch+var_950], eax
.text:004081DE                 add     [esp+97Ch+var_904], eax
.text:004081E2                 test    ebx, ebx
.text:004081E4                 jz      short loc_4081EA
.text:004081E6                 add     [esp+97Ch+var_908], eax
.text:004081EA
.text:004081EA loc_4081EA:                             ; CODE XREF: sub_4071F0+FF4↑j
.text:004081EA                 mov     ecx, [esp+97Ch+var_900]
.text:004081EE                 test    ecx, ecx
.text:004081F0                 jz      short loc_4081F6
.text:004081F2                 add     [esp+97Ch+var_900], eax
.text:004081F6
.text:004081F6 loc_4081F6:                             ; CODE XREF: sub_4071F0+1000↑j
.text:004081F6                 mov     esi, [esp+97Ch+var_8FC]
.text:004081FD                 test    esi, esi
.text:004081FF                 jz      short loc_408208
.text:00408201                 add     [esp+97Ch+var_8FC], eax
.text:00408208
.text:00408208 loc_408208:                             ; CODE XREF: sub_4071F0+FE2↑j
.text:00408208                                         ; sub_4071F0+100F↑j
.text:00408208                 mov     edx, [esp+97Ch+arg_C]
.text:0040820F                 mov     eax, [esp+97Ch+arg_C]
.text:00408216                 mov     ebp, [esp+97Ch+var_950]
.text:0040821A                 mov     edi, [edx]
.text:0040821C                 mov     edx, [eax+4]
.text:0040821F                 sub     ebp, edi
.text:00408221                 add     ebp, 3
.text:00408224                 mov     ebx, edi
.text:00408226                 cmp     ebp, edx
.text:00408228                 ja      loc_408177
.text:0040822E
.text:0040822E loc_40822E:                             ; CODE XREF: sub_4071F0+F81↑j
.text:0040822E                 mov     ebx, [esp+97Ch+var_950]
.text:00408232                 mov     byte ptr [ebx], 7
.text:00408235                 inc     ebx
.text:00408236                 movzx   edx, byte ptr [esp+97Ch+var_930]
.text:0040823B                 mov     [ebx], dl
.text:0040823D                 inc     ebx
.text:0040823E                 movzx   ecx, byte ptr [esp+97Ch+var_90C]
.text:00408243                 sub     cl, byte ptr [esp+97Ch+var_930]
.text:00408247                 mov     [ebx], cl
.text:00408249                 jmp     loc_407D67
.text:00408249 ; ---------------------------------------------------------------------------
.text:0040824E                 align 10h
.text:00408250
.text:00408250 loc_408250:                             ; CODE XREF: sub_4071F0+16F↑j
.text:00408250                                         ; sub_4071F0+16DF↓j ...
.text:00408250                 mov     ebp, [esp+97Ch+var_900] ; jumptable 0040735F case 42
.text:00408254                 test    ebp, ebp
.text:00408256                 jz      loc_4087B1
.text:0040825C
.text:0040825C loc_40825C:                             ; CODE XREF: sub_4071F0+15D3↓j
.text:0040825C                 mov     [esp+97Ch+var_91C], 0
.text:00408261                 xor     ecx, ecx
.text:00408263                 mov     [esp+97Ch+var_91D], 0
.text:00408268
.text:00408268 loc_408268:                             ; CODE XREF: sub_4071F0+10ED↓j
.text:00408268                                         ; sub_4071F0+1105↓j ...
.text:00408268                 cmp     [esp+97Ch+var_8EC], 2Bh ; '+'
.text:00408270                 movsx   eax, [esp+97Ch+var_91D]
.text:00408275                 jz      short loc_40827A
.text:00408277                 or      eax, 1
.text:0040827A
.text:0040827A loc_40827A:                             ; CODE XREF: sub_4071F0+1085↑j
.text:0040827A                 cmp     [esp+97Ch+var_8EC], 3Fh ; '?'
.text:00408282                 mov     [esp+97Ch+var_91D], al
.text:00408286                 movsx   eax, cl
.text:00408289                 jz      short loc_40828E
.text:0040828B                 or      eax, 1
.text:0040828E
.text:0040828E loc_40828E:                             ; CODE XREF: sub_4071F0+1099↑j
.text:0040828E                 mov     edx, [esp+97Ch+var_8D0]
.text:00408295                 mov     cl, al
.text:00408297                 cmp     edx, [esp+97Ch+var_8F4]
.text:0040829E                 jz      short loc_408310
.text:004082A0                 movzx   eax, byte ptr [edx]
.text:004082A3                 lea     edi, [edx+1]
.text:004082A6                 mov     esi, [esp+97Ch+var_8F8]
.text:004082AD                 mov     [esp+97Ch+var_8D0], edi
.text:004082B4                 test    esi, esi
.text:004082B6                 mov     [esp+97Ch+var_8EC], al
.text:004082BD                 jz      short loc_4082D5
.text:004082BF                 mov     esi, [esp+97Ch+var_8F8]
.text:004082C6                 movzx   ebp, al
.text:004082C9                 movzx   eax, byte ptr [ebp+esi+0]
.text:004082CE                 mov     [esp+97Ch+var_8EC], al
.text:004082D5
.text:004082D5 loc_4082D5:                             ; CODE XREF: sub_4071F0+10CD↑j
.text:004082D5                 cmp     [esp+97Ch+var_8EC], 2Ah ; '*'
.text:004082DD                 jz      short loc_408268
.text:004082DF                 test    byte ptr [esp+97Ch+arg_8], 2
.text:004082E7                 jnz     loc_408740
.text:004082ED                 cmp     [esp+97Ch+var_8EC], 2Bh ; '+'
.text:004082F5                 jz      loc_408268
.text:004082FB                 cmp     [esp+97Ch+var_8EC], 3Fh ; '?'
.text:00408303                 jz      loc_408268
.text:00408309
.text:00408309 loc_408309:                             ; CODE XREF: sub_4071F0+1558↓j
.text:00408309                 dec     [esp+97Ch+var_8D0]
.text:00408310
.text:00408310 loc_408310:                             ; CODE XREF: sub_4071F0+10AE↑j
.text:00408310                                         ; sub_4071F0+15AB↓j
.text:00408310                 mov     edx, [esp+97Ch+var_900]
.text:00408314                 test    edx, edx
.text:00408316                 jz      loc_40761F
.text:0040831C                 test    cl, cl
.text:0040831E                 jz      loc_408523
.text:00408324                 mov     ebx, [esp+97Ch+arg_C]
.text:0040832B                 mov     ebp, [esp+97Ch+arg_C]
.text:00408332                 mov     esi, [esp+97Ch+var_950]
.text:00408336                 mov     edi, [ebx]
.text:00408338                 mov     edx, [ebp+4]
.text:0040833B                 sub     esi, edi
.text:0040833D                 add     esi, 3
.text:00408340                 mov     ebx, edi
.text:00408342                 cmp     esi, edx
.text:00408344                 jbe     loc_408401
.text:0040834A
.text:0040834A loc_40834A:                             ; CODE XREF: sub_4071F0+120B↓j
.text:0040834A                 cmp     edx, 10000h
.text:00408350                 mov     ebp, 0Fh
.text:00408355                 jz      loc_407606
.text:0040835B                 mov     esi, [esp+97Ch+arg_C]
.text:00408362                 lea     ecx, [edx+edx]
.text:00408365                 cmp     ecx, 10000h
.text:0040836B                 mov     [esi+4], ecx
.text:0040836E                 jbe     short loc_408377
.text:00408370                 mov     dword ptr [esi+4], 10000h
.text:00408377
.text:00408377 loc_408377:                             ; CODE XREF: sub_4071F0+117E↑j
.text:00408377                 mov     eax, [esp+97Ch+arg_C]
.text:0040837E                 mov     ebp, 0Ch
.text:00408383                 mov     esi, [eax+4]
.text:00408386                 mov     [esp+97Ch+Size], edi ; Block
.text:00408389                 mov     [esp+97Ch+var_978], esi ; Size
.text:0040838D                 call    realloc
.text:00408392                 mov     edi, [esp+97Ch+arg_C]
.text:00408399                 test    eax, eax
.text:0040839B                 mov     [edi], eax
.text:0040839D                 jz      loc_407606
.text:004083A3                 cmp     ebx, eax
.text:004083A5                 jz      short loc_4083DB
.text:004083A7                 mov     edx, [esp+97Ch+var_908]
.text:004083AB                 sub     eax, ebx
.text:004083AD                 add     [esp+97Ch+var_950], eax
.text:004083B1                 add     [esp+97Ch+var_904], eax
.text:004083B5                 test    edx, edx
.text:004083B7                 jz      short loc_4083BD
.text:004083B9                 add     [esp+97Ch+var_908], eax
.text:004083BD
.text:004083BD loc_4083BD:                             ; CODE XREF: sub_4071F0+11C7↑j
.text:004083BD                 mov     ebp, [esp+97Ch+var_900]
.text:004083C1                 test    ebp, ebp
.text:004083C3                 jz      short loc_4083C9
.text:004083C5                 add     [esp+97Ch+var_900], eax
.text:004083C9
.text:004083C9 loc_4083C9:                             ; CODE XREF: sub_4071F0+11D3↑j
.text:004083C9                 mov     ebx, [esp+97Ch+var_8FC]
.text:004083D0                 test    ebx, ebx
.text:004083D2                 jz      short loc_4083DB
.text:004083D4                 add     [esp+97Ch+var_8FC], eax
.text:004083DB
.text:004083DB loc_4083DB:                             ; CODE XREF: sub_4071F0+11B5↑j
.text:004083DB                                         ; sub_4071F0+11E2↑j
.text:004083DB                 mov     esi, [esp+97Ch+arg_C]
.text:004083E2                 mov     eax, [esp+97Ch+arg_C]
.text:004083E9                 mov     ecx, [esp+97Ch+var_950]
.text:004083ED                 mov     edi, [esi]
.text:004083EF                 mov     edx, [eax+4]
.text:004083F2                 sub     ecx, edi
.text:004083F4                 add     ecx, 3
.text:004083F7                 mov     ebx, edi
.text:004083F9                 cmp     ecx, edx
.text:004083FB                 ja      loc_40834A
.text:00408401
.text:00408401 loc_408401:                             ; CODE XREF: sub_4071F0+1154↑j
.text:00408401                 mov     edi, [esp+97Ch+var_8F8]
.text:00408408                 test    edi, edi
.text:0040840A                 jz      loc_40872A
.text:00408410                 mov     edi, [esp+97Ch+var_8D0]
.text:00408417                 mov     ebx, [esp+97Ch+var_8F8]
.text:0040841E                 movzx   ebp, byte ptr [edi-2]
.text:00408422                 movsx   edx, byte ptr [ebp+ebx+0]
.text:00408427
.text:00408427 loc_408427:                             ; CODE XREF: sub_4071F0+1545↓j
.text:00408427                 mov     ecx, [esp+97Ch+var_8F8]
.text:0040842E                 test    ecx, ecx
.text:00408430                 jz      loc_408722
.text:00408436                 mov     eax, [esp+97Ch+var_8F8]
.text:0040843D                 movsx   esi, byte ptr [eax+2Eh]
.text:00408441                 cmp     edx, esi
.text:00408443
.text:00408443 loc_408443:                             ; CODE XREF: sub_4071F0+1535↓j
.text:00408443                 jz      loc_40868B
.text:00408449
.text:00408449 loc_408449:                             ; CODE XREF: sub_4071F0+14A0↓j
.text:00408449                                         ; sub_4071F0+14AD↓j ...
.text:00408449                 mov     [esp+97Ch+Size], 12h
.text:00408450                 mov     ebx, [esp+97Ch+var_900]
.text:00408454                 mov     ecx, [esp+97Ch+var_950]
.text:00408458                 mov     edi, [esp+97Ch+var_950]
.text:0040845C                 sub     ebx, ecx
.text:0040845E                 sub     ebx, 6
.text:00408461                 mov     [esp+97Ch+var_974], ebx
.text:00408465                 mov     [esp+97Ch+var_978], edi
.text:00408469                 call    sub_403FC0
.text:0040846E
.text:0040846E loc_40846E:                             ; CODE XREF: sub_4071F0+1523↓j
.text:0040846E                 add     [esp+97Ch+var_950], 3
.text:00408473                 mov     esi, [esp+97Ch+arg_C]
.text:0040847A                 mov     eax, [esp+97Ch+var_950]
.text:0040847E                 mov     edi, [esi]
.text:00408480                 mov     edx, [esi+4]
.text:00408483
.text:00408483 loc_408483:                             ; CODE XREF: sub_4071F0+134A↓j
.text:00408483                 sub     eax, edi
.text:00408485                 mov     ebx, edi
.text:00408487                 add     eax, 3
.text:0040848A                 cmp     eax, edx
.text:0040848C                 jbe     loc_40853F
.text:00408492                 cmp     edx, 10000h
.text:00408498                 mov     ebp, 0Fh
.text:0040849D                 jz      loc_407606
.text:004084A3                 mov     esi, [esp+97Ch+arg_C]
.text:004084AA                 lea     ebp, [edx+edx]
.text:004084AD                 cmp     ebp, 10000h
.text:004084B3                 mov     [esi+4], ebp
.text:004084B6                 jbe     short loc_4084BF
.text:004084B8                 mov     dword ptr [esi+4], 10000h
.text:004084BF
.text:004084BF loc_4084BF:                             ; CODE XREF: sub_4071F0+12C6↑j
.text:004084BF                 mov     eax, [esp+97Ch+arg_C]
.text:004084C6                 mov     ebp, 0Ch
.text:004084CB                 mov     ecx, [eax+4]
.text:004084CE                 mov     [esp+97Ch+Size], edi ; Block
.text:004084D1                 mov     [esp+97Ch+var_978], ecx ; Size
.text:004084D5                 call    realloc
.text:004084DA                 mov     edx, [esp+97Ch+arg_C]
.text:004084E1                 test    eax, eax
.text:004084E3                 mov     [edx], eax
.text:004084E5                 jz      loc_407606
.text:004084EB                 cmp     ebx, eax
.text:004084ED                 jz      short loc_408523
.text:004084EF                 mov     edi, [esp+97Ch+var_908]
.text:004084F3                 sub     eax, ebx
.text:004084F5                 add     [esp+97Ch+var_950], eax
.text:004084F9                 add     [esp+97Ch+var_904], eax
.text:004084FD                 test    edi, edi
.text:004084FF                 jz      short loc_408505
.text:00408501                 add     [esp+97Ch+var_908], eax
.text:00408505
.text:00408505 loc_408505:                             ; CODE XREF: sub_4071F0+130F↑j
.text:00408505                 mov     ebx, [esp+97Ch+var_900]
.text:00408509                 test    ebx, ebx
.text:0040850B                 jz      short loc_408511
.text:0040850D                 add     [esp+97Ch+var_900], eax
.text:00408511
.text:00408511 loc_408511:                             ; CODE XREF: sub_4071F0+131B↑j
.text:00408511                 mov     esi, [esp+97Ch+var_8FC]
.text:00408518                 test    esi, esi
.text:0040851A                 jz      short loc_408523
.text:0040851C                 add     [esp+97Ch+var_8FC], eax
.text:00408523
.text:00408523 loc_408523:                             ; CODE XREF: sub_4071F0+112E↑j
.text:00408523                                         ; sub_4071F0+12FD↑j ...
.text:00408523                 mov     edx, [esp+97Ch+arg_C]
.text:0040852A                 mov     ebp, [esp+97Ch+arg_C]
.text:00408531                 mov     eax, [esp+97Ch+var_950]
.text:00408535                 mov     edi, [edx]
.text:00408537                 mov     edx, [ebp+4]
.text:0040853A                 jmp     loc_408483
.text:0040853F ; ---------------------------------------------------------------------------
.text:0040853F
.text:0040853F loc_40853F:                             ; CODE XREF: sub_4071F0+129C↑j
.text:0040853F                 movzx   edx, [esp+97Ch+var_91C]
.text:00408544                 mov     ebx, [esp+97Ch+var_950]
.text:00408548                 mov     eax, [esp+97Ch+var_900]
.text:0040854C                 mov     edi, [esp+97Ch+var_900]
.text:00408550                 mov     esi, ebx
.text:00408552                 and     edx, 1
.text:00408555                 mov     [esp+97Ch+var_970], ebx
.text:00408559                 sub     esi, eax
.text:0040855B                 add     edx, 0Fh
.text:0040855E                 mov     [esp+97Ch+var_974], esi
.text:00408562                 add     ebx, 3
.text:00408565                 mov     [esp+97Ch+var_978], edi
.text:00408569                 mov     [esp+97Ch+Size], edx
.text:0040856C                 call    sub_404010
.text:00408571                 mov     [esp+97Ch+var_950], ebx
.text:00408575                 xor     ecx, ecx
.text:00408577                 cmp     [esp+97Ch+var_91D], 0
.text:0040857C                 mov     [esp+97Ch+var_8FC], ecx
.text:00408583                 jnz     loc_40761F
.text:00408589                 mov     ecx, [esp+97Ch+arg_C]
.text:00408590                 mov     ebp, [esp+97Ch+var_950]
.text:00408594                 mov     edi, [ecx]
.text:00408596                 mov     edx, [ecx+4]
.text:00408599                 sub     ebp, edi
.text:0040859B                 mov     ebx, edi
.text:0040859D                 add     ebp, 3
.text:004085A0                 cmp     ebp, edx
.text:004085A2                 jbe     loc_40865F
.text:004085A8
.text:004085A8 loc_4085A8:                             ; CODE XREF: sub_4071F0+1469↓j
.text:004085A8                 cmp     edx, 10000h
.text:004085AE                 mov     ebp, 0Fh
.text:004085B3                 jz      loc_407606
.text:004085B9                 mov     esi, [esp+97Ch+arg_C]
.text:004085C0                 lea     ebp, [edx+edx]
.text:004085C3                 cmp     ebp, 10000h
.text:004085C9                 mov     [esi+4], ebp
.text:004085CC                 jbe     short loc_4085D5
.text:004085CE                 mov     dword ptr [esi+4], 10000h
.text:004085D5
.text:004085D5 loc_4085D5:                             ; CODE XREF: sub_4071F0+13DC↑j
.text:004085D5                 mov     eax, [esp+97Ch+arg_C]
.text:004085DC                 mov     ebp, 0Ch
.text:004085E1                 mov     esi, [eax+4]
.text:004085E4                 mov     [esp+97Ch+Size], edi ; Block
.text:004085E7                 mov     [esp+97Ch+var_978], esi ; Size
.text:004085EB                 call    realloc
.text:004085F0                 mov     edx, [esp+97Ch+arg_C]
.text:004085F7                 test    eax, eax
.text:004085F9                 mov     [edx], eax
.text:004085FB                 jz      loc_407606
.text:00408601                 cmp     ebx, eax
.text:00408603                 jz      short loc_408639
.text:00408605                 mov     edi, [esp+97Ch+var_908]
.text:00408609                 sub     eax, ebx
.text:0040860B                 add     [esp+97Ch+var_950], eax
.text:0040860F                 add     [esp+97Ch+var_904], eax
.text:00408613                 test    edi, edi
.text:00408615                 jz      short loc_40861B
.text:00408617                 add     [esp+97Ch+var_908], eax
.text:0040861B
.text:0040861B loc_40861B:                             ; CODE XREF: sub_4071F0+1425↑j
.text:0040861B                 mov     ebx, [esp+97Ch+var_900]
.text:0040861F                 test    ebx, ebx
.text:00408621                 jz      short loc_408627
.text:00408623                 add     [esp+97Ch+var_900], eax
.text:00408627
.text:00408627 loc_408627:                             ; CODE XREF: sub_4071F0+1431↑j
.text:00408627                 mov     ecx, [esp+97Ch+var_8FC]
.text:0040862E                 test    ecx, ecx
.text:00408630                 jz      short loc_408639
.text:00408632                 add     [esp+97Ch+var_8FC], eax
.text:00408639
.text:00408639 loc_408639:                             ; CODE XREF: sub_4071F0+1413↑j
.text:00408639                                         ; sub_4071F0+1440↑j
.text:00408639                 mov     edx, [esp+97Ch+arg_C]
.text:00408640                 mov     eax, [esp+97Ch+arg_C]
.text:00408647                 mov     ebp, [esp+97Ch+var_950]
.text:0040864B                 mov     edi, [edx]
.text:0040864D                 mov     edx, [eax+4]
.text:00408650                 sub     ebp, edi
.text:00408652                 add     ebp, 3
.text:00408655                 mov     ebx, edi
.text:00408657                 cmp     ebp, edx
.text:00408659                 ja      loc_4085A8
.text:0040865F
.text:0040865F loc_40865F:                             ; CODE XREF: sub_4071F0+13B2↑j
.text:0040865F                 mov     [esp+97Ch+var_974], 3
.text:00408667                 mov     edi, [esp+97Ch+var_950]
.text:0040866B                 mov     esi, [esp+97Ch+var_900]
.text:0040866F                 mov     [esp+97Ch+Size], 13h
.text:00408676                 mov     [esp+97Ch+var_970], edi
.text:0040867A                 add     edi, 3
.text:0040867D                 mov     [esp+97Ch+var_978], esi
.text:00408681                 call    sub_404010
.text:00408686                 jmp     loc_40761B
.text:0040868B ; ---------------------------------------------------------------------------
.text:0040868B
.text:0040868B loc_40868B:                             ; CODE XREF: sub_4071F0:loc_408443↑j
.text:0040868B                 cmp     [esp+97Ch+var_91D], 0
.text:00408690                 jz      loc_408449
.text:00408696                 cmp     edi, [esp+97Ch+var_8F4]
.text:0040869D                 jnb     loc_408449
.text:004086A3                 mov     edx, [esp+97Ch+var_8F8]
.text:004086AA                 test    edx, edx
.text:004086AC                 jz      short loc_40871D
.text:004086AE                 movzx   ebp, byte ptr [edi]
.text:004086B1                 mov     edi, [esp+97Ch+var_8F8]
.text:004086B8                 movsx   edx, byte ptr [ebp+edi+0]
.text:004086BD
.text:004086BD loc_4086BD:                             ; CODE XREF: sub_4071F0+1530↓j
.text:004086BD                 mov     ebx, [esp+97Ch+var_8F8]
.text:004086C4                 test    ebx, ebx
.text:004086C6                 jz      short loc_408718
.text:004086C8                 mov     esi, [esp+97Ch+var_8F8]
.text:004086CF                 movsx   ecx, byte ptr [esi+0Ah]
.text:004086D3                 cmp     edx, ecx
.text:004086D5
.text:004086D5 loc_4086D5:                             ; CODE XREF: sub_4071F0+152B↓j
.text:004086D5                 jnz     loc_408449
.text:004086DB                 test    byte ptr [esp+97Ch+arg_8], 40h
.text:004086E3                 jnz     loc_408449
.text:004086E9                 mov     [esp+97Ch+Size], 0Dh
.text:004086F0                 mov     ebp, [esp+97Ch+var_900]
.text:004086F4                 mov     eax, [esp+97Ch+var_950]
.text:004086F8                 mov     edx, [esp+97Ch+var_950]
.text:004086FC                 sub     ebp, eax
.text:004086FE                 sub     ebp, 3
.text:00408701                 mov     [esp+97Ch+var_974], ebp
.text:00408705                 mov     [esp+97Ch+var_978], edx
.text:00408709                 call    sub_403FC0
.text:0040870E                 mov     [esp+97Ch+var_91C], 1
.text:00408713                 jmp     loc_40846E
.text:00408718 ; ---------------------------------------------------------------------------
.text:00408718
.text:00408718 loc_408718:                             ; CODE XREF: sub_4071F0+14D6↑j
.text:00408718                 cmp     edx, 0Ah
.text:0040871B                 jmp     short loc_4086D5
.text:0040871D ; ---------------------------------------------------------------------------
.text:0040871D
.text:0040871D loc_40871D:                             ; CODE XREF: sub_4071F0+14BC↑j
.text:0040871D                 movsx   edx, byte ptr [edi]
.text:00408720                 jmp     short loc_4086BD
.text:00408722 ; ---------------------------------------------------------------------------
.text:00408722
.text:00408722 loc_408722:                             ; CODE XREF: sub_4071F0+1240↑j
.text:00408722                 cmp     edx, 2Eh ; '.'
.text:00408725                 jmp     loc_408443
.text:0040872A ; ---------------------------------------------------------------------------
.text:0040872A
.text:0040872A loc_40872A:                             ; CODE XREF: sub_4071F0+121A↑j
.text:0040872A                 mov     edi, [esp+97Ch+var_8D0]
.text:00408731                 movsx   edx, byte ptr [edi-2]
.text:00408735                 jmp     loc_408427
.text:00408735 ; ---------------------------------------------------------------------------
.text:0040873A                 align 10h
.text:00408740
.text:00408740 loc_408740:                             ; CODE XREF: sub_4071F0+10F7↑j
.text:00408740                 cmp     [esp+97Ch+var_8EC], 5Ch ; '\'
.text:00408748                 jnz     loc_408309
.text:0040874E                 cmp     edi, [esp+97Ch+var_8F4]
.text:00408755                 jz      short loc_4087A0
.text:00408757                 movzx   ebx, byte ptr [edx+1]
.text:0040875B                 lea     ebp, [edx+2]
.text:0040875E                 mov     eax, [esp+97Ch+var_8F8]
.text:00408765                 mov     [esp+97Ch+var_8D0], ebp
.text:0040876C                 test    eax, eax
.text:0040876E                 jz      short loc_40877E
.text:00408770                 mov     eax, [esp+97Ch+var_8F8]
.text:00408777                 movzx   edi, bl
.text:0040877A                 movzx   ebx, byte ptr [edi+eax]
.text:0040877E
.text:0040877E loc_40877E:                             ; CODE XREF: sub_4071F0+157E↑j
.text:0040877E                 cmp     bl, 2Bh ; '+'
.text:00408781                 jz      short loc_408788
.text:00408783                 cmp     bl, 3Fh ; '?'
.text:00408786                 jnz     short loc_408794
.text:00408788
.text:00408788 loc_408788:                             ; CODE XREF: sub_4071F0+1591↑j
.text:00408788                 mov     [esp+97Ch+var_8EC], bl
.text:0040878F                 jmp     loc_408268
.text:00408794 ; ---------------------------------------------------------------------------
.text:00408794
.text:00408794 loc_408794:                             ; CODE XREF: sub_4071F0+1596↑j
.text:00408794                 mov     [esp+97Ch+var_8D0], edx
.text:0040879B                 jmp     loc_408310
.text:004087A0 ; ---------------------------------------------------------------------------
.text:004087A0
.text:004087A0 loc_4087A0:                             ; CODE XREF: sub_4071F0+1565↑j
.text:004087A0                                         ; sub_4071F0+21FF↓j ...
.text:004087A0                 mov     edi, [esp+97Ch+Block]
.text:004087A7                 mov     ebp, 5
.text:004087AC                 jmp     loc_407790
.text:004087B1 ; ---------------------------------------------------------------------------
.text:004087B1
.text:004087B1 loc_4087B1:                             ; CODE XREF: sub_4071F0+1066↑j
.text:004087B1                 test    byte ptr [esp+97Ch+arg_8], 20h
.text:004087B9                 jnz     short loc_4087CE
.text:004087BB                 test    byte ptr [esp+97Ch+arg_8], 10h
.text:004087C3                 jnz     loc_40825C
.text:004087C9                 jmp     def_40735F      ; jumptable 0040735F default case, cases 11-35,37-39,44,45,47-62,64-90,93,95-122
.text:004087CE ; ---------------------------------------------------------------------------
.text:004087CE
.text:004087CE loc_4087CE:                             ; CODE XREF: sub_4071F0+15C9↑j
.text:004087CE                                         ; sub_4071F0+31A3↓j
.text:004087CE                 mov     ecx, [esp+97Ch+Block]
.text:004087D5                 mov     ebp, 0Dh
.text:004087DA                 jmp     loc_4080CC
.text:004087DA ; ---------------------------------------------------------------------------
.text:004087DF                 align 10h
.text:004087E0
.text:004087E0 loc_4087E0:                             ; CODE XREF: sub_4071F0+16F↑j
.text:004087E0                                         ; DATA XREF: sub_4071F0:jpt_40735F↑o
.text:004087E0                 mov     eax, [esp+97Ch+arg_C] ; jumptable 0040735F case 46
.text:004087E7                 mov     ecx, [esp+97Ch+var_950]
.text:004087EB                 mov     edi, [eax]
.text:004087ED                 mov     [esp+97Ch+var_900], ecx
.text:004087F1                 mov     ebp, ecx
.text:004087F3                 mov     edx, [eax+4]
.text:004087F6                 sub     ebp, edi
.text:004087F8                 mov     ebx, edi
.text:004087FA                 inc     ebp
.text:004087FB                 cmp     ebp, edx
.text:004087FD                 jbe     loc_4088B8
.text:00408803
.text:00408803 loc_408803:                             ; CODE XREF: sub_4071F0+16C2↓j
.text:00408803                 cmp     edx, 10000h
.text:00408809                 mov     ebp, 0Fh
.text:0040880E                 jz      loc_407606
.text:00408814                 mov     esi, [esp+97Ch+arg_C]
.text:0040881B                 lea     ebp, [edx+edx]
.text:0040881E                 cmp     ebp, 10000h
.text:00408824                 mov     [esi+4], ebp
.text:00408827                 jbe     short loc_408830
.text:00408829                 mov     dword ptr [esi+4], 10000h
.text:00408830
.text:00408830 loc_408830:                             ; CODE XREF: sub_4071F0+1637↑j
.text:00408830                 mov     eax, [esp+97Ch+arg_C]
.text:00408837                 mov     ebp, 0Ch
.text:0040883C                 mov     esi, [eax+4]
.text:0040883F                 mov     [esp+97Ch+Size], edi ; Block
.text:00408842                 mov     [esp+97Ch+var_978], esi ; Size
.text:00408846                 call    realloc
.text:0040884B                 mov     edi, [esp+97Ch+arg_C]
.text:00408852                 test    eax, eax
.text:00408854                 mov     [edi], eax
.text:00408856                 jz      loc_407606
.text:0040885C                 cmp     ebx, eax
.text:0040885E                 jz      short loc_408894
.text:00408860                 sub     eax, ebx
.text:00408862                 mov     ebx, [esp+97Ch+var_908]
.text:00408866                 add     [esp+97Ch+var_950], eax
.text:0040886A                 add     [esp+97Ch+var_904], eax
.text:0040886E                 test    ebx, ebx
.text:00408870                 jz      short loc_408876
.text:00408872                 add     [esp+97Ch+var_908], eax
.text:00408876
.text:00408876 loc_408876:                             ; CODE XREF: sub_4071F0+1680↑j
.text:00408876                 mov     edx, [esp+97Ch+var_900]
.text:0040887A                 test    edx, edx
.text:0040887C                 jz      short loc_408882
.text:0040887E                 add     [esp+97Ch+var_900], eax
.text:00408882
.text:00408882 loc_408882:                             ; CODE XREF: sub_4071F0+168C↑j
.text:00408882                 mov     ecx, [esp+97Ch+var_8FC]
.text:00408889                 test    ecx, ecx
.text:0040888B                 jz      short loc_408894
.text:0040888D                 add     [esp+97Ch+var_8FC], eax
.text:00408894
.text:00408894 loc_408894:                             ; CODE XREF: sub_4071F0+166E↑j
.text:00408894                                         ; sub_4071F0+169B↑j
.text:00408894                 mov     esi, [esp+97Ch+arg_C]
.text:0040889B                 mov     eax, [esp+97Ch+arg_C]
.text:004088A2                 mov     ebp, [esp+97Ch+var_950]
.text:004088A6                 mov     edi, [esi]
.text:004088A8                 mov     edx, [eax+4]
.text:004088AB                 sub     ebp, edi
.text:004088AD                 inc     ebp
.text:004088AE                 mov     ebx, edi
.text:004088B0                 cmp     ebp, edx
.text:004088B2                 ja      loc_408803
.text:004088B8
.text:004088B8 loc_4088B8:                             ; CODE XREF: sub_4071F0+160D↑j
.text:004088B8                 mov     edi, [esp+97Ch+var_950]
.text:004088BC                 mov     byte ptr [edi], 3
.text:004088BF                 jmp     loc_40761A
.text:004088C4 ; ---------------------------------------------------------------------------
.text:004088C4
.text:004088C4 loc_4088C4:                             ; CODE XREF: sub_4071F0+16F↑j
.text:004088C4                                         ; DATA XREF: sub_4071F0:jpt_40735F↑o
.text:004088C4                 test    [esp+97Ch+arg_8], 402h ; jumptable 0040735F cases 43,63
.text:004088CF                 jz      loc_408250      ; jumptable 0040735F case 42
.text:004088D5                 jmp     def_40735F      ; jumptable 0040735F default case, cases 11-35,37-39,44,45,47-62,64-90,93,95-122
.text:004088DA ; ---------------------------------------------------------------------------
.text:004088DA
.text:004088DA loc_4088DA:                             ; CODE XREF: sub_4071F0+16F↑j
.text:004088DA                                         ; DATA XREF: sub_4071F0:jpt_40735F↑o
.text:004088DA                 mov     [esp+97Ch+var_91E], 0 ; jumptable 0040735F case 91
.text:004088DF                 mov     edi, [esp+97Ch+var_8F4]
.text:004088E6                 cmp     [esp+97Ch+var_8D0], edi
.text:004088ED                 mov     [esp+97Ch+var_924], 0FFFFFFFFh
.text:004088F5                 jz      loc_408E4F
.text:004088FB
.text:004088FB loc_4088FB:                             ; CODE XREF: sub_4071F0+1784↓j
.text:004088FB                                         ; sub_4071F0+17B1↓j ...
.text:004088FB                 mov     ebp, [esp+97Ch+arg_C]
.text:00408902                 mov     ecx, [esp+97Ch+var_950]
.text:00408906                 mov     edi, [ebp+0]
.text:00408909                 mov     edx, [ebp+4]
.text:0040890C                 sub     ecx, edi
.text:0040890E                 lea     ebx, [ecx+22h]
.text:00408911                 cmp     ebx, edx
.text:00408913                 jbe     loc_4089B3
.text:00408919                 cmp     edx, 10000h
.text:0040891F                 mov     ebp, 0Fh
.text:00408924                 jz      loc_407606
.text:0040892A                 lea     ebx, [edx+edx]
.text:0040892D                 mov     edx, [esp+97Ch+arg_C]
.text:00408934                 cmp     ebx, 10000h
.text:0040893A                 mov     [edx+4], ebx
.text:0040893D                 jbe     short loc_408946
.text:0040893F                 mov     dword ptr [edx+4], 10000h
.text:00408946
.text:00408946 loc_408946:                             ; CODE XREF: sub_4071F0+174D↑j
.text:00408946                 mov     eax, [esp+97Ch+arg_C]
.text:0040894D                 mov     ebp, [eax+4]
.text:00408950                 mov     [esp+97Ch+Size], edi ; Block
.text:00408953                 mov     [esp+97Ch+var_978], ebp ; Size
.text:00408957                 mov     ebp, 0Ch
.text:0040895C                 call    realloc
.text:00408961                 mov     edx, [esp+97Ch+arg_C]
.text:00408968                 test    eax, eax
.text:0040896A                 mov     [edx], eax
.text:0040896C                 jz      loc_407606
.text:00408972                 cmp     edi, eax
.text:00408974                 jz      short loc_4088FB
.text:00408976                 mov     ecx, [esp+97Ch+var_908]
.text:0040897A                 sub     eax, edi
.text:0040897C                 add     [esp+97Ch+var_950], eax
.text:00408980                 add     [esp+97Ch+var_904], eax
.text:00408984                 test    ecx, ecx
.text:00408986                 jz      short loc_40898C
.text:00408988                 add     [esp+97Ch+var_908], eax
.text:0040898C
.text:0040898C loc_40898C:                             ; CODE XREF: sub_4071F0+1796↑j
.text:0040898C                 mov     esi, [esp+97Ch+var_900]
.text:00408990                 test    esi, esi
.text:00408992                 jz      short loc_408998
.text:00408994                 add     [esp+97Ch+var_900], eax
.text:00408998
.text:00408998 loc_408998:                             ; CODE XREF: sub_4071F0+17A2↑j
.text:00408998                 mov     edi, [esp+97Ch+var_8FC]
.text:0040899F                 test    edi, edi
.text:004089A1                 jz      loc_4088FB
.text:004089A7                 add     [esp+97Ch+var_8FC], eax
.text:004089AE                 jmp     loc_4088FB
.text:004089B3 ; ---------------------------------------------------------------------------
.text:004089B3
.text:004089B3 loc_4089B3:                             ; CODE XREF: sub_4071F0+1723↑j
.text:004089B3                 mov     ebx, [esp+97Ch+var_950]
.text:004089B7                 lea     esi, [ecx+1]
.text:004089BA                 cmp     esi, edx
.text:004089BC                 mov     [esp+97Ch+var_900], ebx
.text:004089C0                 mov     ebx, edi
.text:004089C2                 jbe     loc_408A7D
.text:004089C8
.text:004089C8 loc_4089C8:                             ; CODE XREF: sub_4071F0+1887↓j
.text:004089C8                 cmp     edx, 10000h
.text:004089CE                 mov     ebp, 0Fh
.text:004089D3                 jz      loc_407606
.text:004089D9                 lea     ecx, [edx+edx]
.text:004089DC                 mov     edx, [esp+97Ch+arg_C]
.text:004089E3                 cmp     ecx, 10000h
.text:004089E9                 mov     [edx+4], ecx
.text:004089EC                 jbe     short loc_4089F5
.text:004089EE                 mov     dword ptr [edx+4], 10000h
.text:004089F5
.text:004089F5 loc_4089F5:                             ; CODE XREF: sub_4071F0+17FC↑j
.text:004089F5                 mov     eax, [esp+97Ch+arg_C]
.text:004089FC                 mov     ebp, [eax+4]
.text:004089FF                 mov     [esp+97Ch+Size], edi ; Block
.text:00408A02                 mov     [esp+97Ch+var_978], ebp ; Size
.text:00408A06                 mov     ebp, 0Ch
.text:00408A0B                 call    realloc
.text:00408A10                 mov     edx, [esp+97Ch+arg_C]
.text:00408A17                 test    eax, eax
.text:00408A19                 mov     [edx], eax
.text:00408A1B                 jz      loc_407606
.text:00408A21                 cmp     ebx, eax
.text:00408A23                 jz      short loc_408A59
.text:00408A25                 mov     edi, [esp+97Ch+var_908]
.text:00408A29                 sub     eax, ebx
.text:00408A2B                 add     [esp+97Ch+var_950], eax
.text:00408A2F                 add     [esp+97Ch+var_904], eax
.text:00408A33                 test    edi, edi
.text:00408A35                 jz      short loc_408A3B
.text:00408A37                 add     [esp+97Ch+var_908], eax
.text:00408A3B
.text:00408A3B loc_408A3B:                             ; CODE XREF: sub_4071F0+1845↑j
.text:00408A3B                 mov     esi, [esp+97Ch+var_900]
.text:00408A3F                 test    esi, esi
.text:00408A41                 jz      short loc_408A47
.text:00408A43                 add     [esp+97Ch+var_900], eax
.text:00408A47
.text:00408A47 loc_408A47:                             ; CODE XREF: sub_4071F0+1851↑j
.text:00408A47                 mov     ebx, [esp+97Ch+var_8FC]
.text:00408A4E                 test    ebx, ebx
.text:00408A50                 jz      short loc_408A59
.text:00408A52                 add     [esp+97Ch+var_8FC], eax
.text:00408A59
.text:00408A59 loc_408A59:                             ; CODE XREF: sub_4071F0+1833↑j
.text:00408A59                                         ; sub_4071F0+1860↑j
.text:00408A59                 mov     ecx, [esp+97Ch+arg_C]
.text:00408A60                 mov     eax, [esp+97Ch+arg_C]
.text:00408A67                 mov     ebp, [esp+97Ch+var_950]
.text:00408A6B                 mov     edi, [ecx]
.text:00408A6D                 mov     edx, [eax+4]
.text:00408A70                 sub     ebp, edi
.text:00408A72                 inc     ebp
.text:00408A73                 mov     ebx, edi
.text:00408A75                 cmp     ebp, edx
.text:00408A77                 ja      loc_4089C8
.text:00408A7D
.text:00408A7D loc_408A7D:                             ; CODE XREF: sub_4071F0+17D2↑j
.text:00408A7D                 mov     edi, [esp+97Ch+var_950]
.text:00408A81                 mov     bl, 5
.text:00408A83                 mov     edx, [esp+97Ch+var_8D0]
.text:00408A8A                 inc     [esp+97Ch+var_950]
.text:00408A8E                 cmp     byte ptr [edx], 5Eh ; '^'
.text:00408A91                 setnz   al
.text:00408A94                 sub     bl, al
.text:00408A96                 mov     [edi], bl
.text:00408A98                 mov     edi, [esp+97Ch+var_8D0]
.text:00408A9F                 cmp     byte ptr [edi], 5Eh ; '^'
.text:00408AA2                 jz      loc_409459
.text:00408AA8
.text:00408AA8 loc_408AA8:                             ; CODE XREF: sub_4071F0+2271↓j
.text:00408AA8                 mov     [esp+97Ch+var_8F0], edi
.text:00408AAF                 mov     esi, [esp+97Ch+arg_C]
.text:00408AB6                 mov     ecx, [esp+97Ch+arg_C]
.text:00408ABD                 mov     ebp, [esp+97Ch+var_950]
.text:00408AC1                 mov     edi, [esi]
.text:00408AC3                 mov     edx, [ecx+4]
.text:00408AC6                 sub     ebp, edi
.text:00408AC8                 mov     ebx, edi
.text:00408ACA                 inc     ebp
.text:00408ACB                 cmp     ebp, edx
.text:00408ACD                 jbe     loc_408B88
.text:00408AD3
.text:00408AD3 loc_408AD3:                             ; CODE XREF: sub_4071F0+1992↓j
.text:00408AD3                 cmp     edx, 10000h
.text:00408AD9                 mov     ebp, 0Fh
.text:00408ADE                 jz      loc_407606
.text:00408AE4                 lea     ebp, [edx+edx]
.text:00408AE7                 mov     edx, [esp+97Ch+arg_C]
.text:00408AEE                 cmp     ebp, 10000h
.text:00408AF4                 mov     [edx+4], ebp
.text:00408AF7                 jbe     short loc_408B00
.text:00408AF9                 mov     dword ptr [edx+4], 10000h
.text:00408B00
.text:00408B00 loc_408B00:                             ; CODE XREF: sub_4071F0+1907↑j
.text:00408B00                 mov     eax, [esp+97Ch+arg_C]
.text:00408B07                 mov     ebp, 0Ch
.text:00408B0C                 mov     edx, [eax+4]
.text:00408B0F                 mov     [esp+97Ch+Size], edi ; Block
.text:00408B12                 mov     [esp+97Ch+var_978], edx ; Size
.text:00408B16                 call    realloc
.text:00408B1B                 mov     edi, [esp+97Ch+arg_C]
.text:00408B22                 test    eax, eax
.text:00408B24                 mov     [edi], eax
.text:00408B26                 jz      loc_407606
.text:00408B2C                 cmp     ebx, eax
.text:00408B2E                 jz      short loc_408B64
.text:00408B30                 mov     ecx, [esp+97Ch+var_908]
.text:00408B34                 sub     eax, ebx
.text:00408B36                 add     [esp+97Ch+var_950], eax
.text:00408B3A                 add     [esp+97Ch+var_904], eax
.text:00408B3E                 test    ecx, ecx
.text:00408B40                 jz      short loc_408B46
.text:00408B42                 add     [esp+97Ch+var_908], eax
.text:00408B46
.text:00408B46 loc_408B46:                             ; CODE XREF: sub_4071F0+1950↑j
.text:00408B46                 mov     ebx, [esp+97Ch+var_900]
.text:00408B4A                 test    ebx, ebx
.text:00408B4C                 jz      short loc_408B52
.text:00408B4E                 add     [esp+97Ch+var_900], eax
.text:00408B52
.text:00408B52 loc_408B52:                             ; CODE XREF: sub_4071F0+195C↑j
.text:00408B52                 mov     esi, [esp+97Ch+var_8FC]
.text:00408B59                 test    esi, esi
.text:00408B5B                 jz      short loc_408B64
.text:00408B5D                 add     [esp+97Ch+var_8FC], eax
.text:00408B64
.text:00408B64 loc_408B64:                             ; CODE XREF: sub_4071F0+193E↑j
.text:00408B64                                         ; sub_4071F0+196B↑j
.text:00408B64                 mov     edx, [esp+97Ch+arg_C]
.text:00408B6B                 mov     eax, [esp+97Ch+arg_C]
.text:00408B72                 mov     ebp, [esp+97Ch+var_950]
.text:00408B76                 mov     edi, [edx]
.text:00408B78                 mov     edx, [eax+4]
.text:00408B7B                 sub     ebp, edi
.text:00408B7D                 inc     ebp
.text:00408B7E                 mov     ebx, edi
.text:00408B80                 cmp     ebp, edx
.text:00408B82                 ja      loc_408AD3
.text:00408B88
.text:00408B88 loc_408B88:                             ; CODE XREF: sub_4071F0+18DD↑j
.text:00408B88                 cld
.text:00408B89                 mov     ebx, [esp+97Ch+var_950]
.text:00408B8D                 xor     eax, eax
.text:00408B8F                 mov     ecx, 8
.text:00408B94                 mov     byte ptr [ebx], 20h ; ' '
.text:00408B97                 inc     ebx
.text:00408B98                 mov     edi, ebx
.text:00408B9A                 mov     [esp+97Ch+var_950], ebx
.text:00408B9E                 rep stosd
.text:00408BA0                 cmp     byte ptr [ebx-2], 5
.text:00408BA4                 jz      loc_40943F
.text:00408BAA
.text:00408BAA loc_408BAA:                             ; CODE XREF: sub_4071F0+1ACD↓j
.text:00408BAA                                         ; sub_4071F0+1BD8↓j ...
.text:00408BAA                 mov     edx, [esp+97Ch+var_8D0]
.text:00408BB1                 cmp     edx, [esp+97Ch+var_8F4]
.text:00408BB8                 jz      loc_408E4F
.text:00408BBE                 movzx   eax, byte ptr [edx]
.text:00408BC1                 lea     edi, [edx+1]
.text:00408BC4                 mov     ecx, [esp+97Ch+var_8F8]
.text:00408BCB                 mov     [esp+97Ch+var_8D0], edi
.text:00408BD2                 test    ecx, ecx
.text:00408BD4                 mov     [esp+97Ch+var_8EC], al
.text:00408BDB                 jz      short loc_408BF2
.text:00408BDD                 mov     ebp, [esp+97Ch+var_8F8]
.text:00408BE4                 movzx   esi, al
.text:00408BE7                 movzx   ebx, byte ptr [esi+ebp]
.text:00408BEB                 mov     [esp+97Ch+var_8EC], bl
.text:00408BF2
.text:00408BF2 loc_408BF2:                             ; CODE XREF: sub_4071F0+19EB↑j
.text:00408BF2                 test    byte ptr [esp+97Ch+arg_8], 1
.text:00408BFA                 jz      short loc_408C0A
.text:00408BFC                 cmp     [esp+97Ch+var_8EC], 5Ch ; '\'
.text:00408C04                 jz      loc_4093E8
.text:00408C0A
.text:00408C0A loc_408C0A:                             ; CODE XREF: sub_4071F0+1A0A↑j
.text:00408C0A                 cmp     [esp+97Ch+var_8EC], 5Dh ; ']'
.text:00408C12                 jz      loc_4093A4
.text:00408C18                 mov     edi, [esp+97Ch+var_8D0]
.text:00408C1F
.text:00408C1F loc_408C1F:                             ; CODE XREF: sub_4071F0+21C5↓j
.text:00408C1F                 cmp     [esp+97Ch+var_91E], 0
.text:00408C24                 jz      loc_409309
.text:00408C2A                 cmp     [esp+97Ch+var_8EC], 2Dh ; '-'
.text:00408C32                 jz      loc_409300
.text:00408C38
.text:00408C38 loc_408C38:                             ; CODE XREF: sub_4071F0+2121↓j
.text:00408C38                                         ; sub_4071F0+2137↓j ...
.text:00408C38                 cmp     byte ptr [edi], 2Dh ; '-'
.text:00408C3B                 jz      loc_409270
.text:00408C41
.text:00408C41 loc_408C41:                             ; CODE XREF: sub_4071F0+2084↓j
.text:00408C41                 test    byte ptr [esp+97Ch+arg_8], 4
.text:00408C49                 jz      short loc_408C59
.text:00408C4B                 cmp     [esp+97Ch+var_8EC], 5Bh ; '['
.text:00408C53                 jz      loc_408FD6
.text:00408C59
.text:00408C59 loc_408C59:                             ; CODE XREF: sub_4071F0+1A59↑j
.text:00408C59                                         ; sub_4071F0+1DE9↓j
.text:00408C59                 test    byte ptr [esp+97Ch+arg_8], 4
.text:00408C61                 jz      short loc_408C71
.text:00408C63                 cmp     [esp+97Ch+var_8EC], 5Bh ; '['
.text:00408C6B                 jz      loc_408E63
.text:00408C71
.text:00408C71 loc_408C71:                             ; CODE XREF: sub_4071F0+1A71↑j
.text:00408C71                                         ; sub_4071F0+1C76↓j
.text:00408C71                 test    byte ptr [esp+97Ch+arg_8], 4
.text:00408C79                 jz      short loc_408C85
.text:00408C7B                 cmp     [esp+97Ch+var_8EC], 5Bh ; '['
.text:00408C83                 jz      short loc_408CC2
.text:00408C85
.text:00408C85 loc_408C85:                             ; CODE XREF: sub_4071F0+1A89↑j
.text:00408C85                                         ; sub_4071F0+1AD5↓j
.text:00408C85                 movzx   ecx, [esp+97Ch+var_8EC]
.text:00408C8D                 mov     edx, 1
.text:00408C92                 mov     [esp+97Ch+var_91E], 0
.text:00408C97                 mov     esi, [esp+97Ch+var_950]
.text:00408C9B                 shr     cl, 3
.text:00408C9E                 movzx   edi, cl
.text:00408CA1                 movzx   ecx, [esp+97Ch+var_8EC]
.text:00408CA9                 and     ecx, 7
.text:00408CAC                 shl     edx, cl
.text:00408CAE                 or      [edi+esi], dl
.text:00408CB1                 movzx   ebx, [esp+97Ch+var_8EC]
.text:00408CB9
.text:00408CB9 loc_408CB9:                             ; CODE XREF: sub_4071F0+224A↓j
.text:00408CB9                 mov     [esp+97Ch+var_924], ebx
.text:00408CBD                 jmp     loc_408BAA
.text:00408CC2 ; ---------------------------------------------------------------------------
.text:00408CC2
.text:00408CC2 loc_408CC2:                             ; CODE XREF: sub_4071F0+1A93↑j
.text:00408CC2                 cmp     byte ptr [edi], 2Eh ; '.'
.text:00408CC5                 jnz     short loc_408C85
.text:00408CC7                 cmp     edi, [esp+97Ch+var_8F4]
.text:00408CCE                 mov     ebp, 0Eh
.text:00408CD3                 jz      loc_407606
.text:00408CD9                 inc     edi
.text:00408CDA                 xor     ebx, ebx
.text:00408CDC                 cmp     edi, [esp+97Ch+var_8F4]
.text:00408CE3                 mov     [esp+97Ch+var_8D0], edi
.text:00408CEA                 jz      loc_408E4F
.text:00408CF0
.text:00408CF0 loc_408CF0:                             ; CODE XREF: sub_4071F0+1B75↓j
.text:00408CF0                 movzx   eax, byte ptr [edi]
.text:00408CF3                 inc     edi
.text:00408CF4                 mov     esi, [esp+97Ch+var_8F8]
.text:00408CFB                 mov     [esp+97Ch+var_8D0], edi
.text:00408D02                 test    esi, esi
.text:00408D04                 mov     [esp+97Ch+var_8EC], al
.text:00408D0B                 jz      short loc_408D23
.text:00408D0D                 mov     esi, [esp+97Ch+var_8F8]
.text:00408D14                 movzx   ebp, al
.text:00408D17                 movzx   ecx, byte ptr [ebp+esi+0]
.text:00408D1C                 mov     [esp+97Ch+var_8EC], cl
.text:00408D23
.text:00408D23 loc_408D23:                             ; CODE XREF: sub_4071F0+1B1B↑j
.text:00408D23                 cmp     [esp+97Ch+var_8EC], 2Eh ; '.'
.text:00408D2B                 jz      loc_408E41
.text:00408D31
.text:00408D31 loc_408D31:                             ; CODE XREF: sub_4071F0+1C54↓j
.text:00408D31                 cmp     edi, [esp+97Ch+var_8F4]
.text:00408D38                 jz      short loc_408D7A
.text:00408D3A                 test    bl, bl
.text:00408D3C                 js      short loc_408D70
.text:00408D3E                 movzx   eax, [esp+97Ch+var_8EC]
.text:00408D46                 movzx   edx, bl
.text:00408D49                 inc     bl
.text:00408D4B                 mov     [esp+edx+97Ch+var_8CC], al
.text:00408D52                 mov     edi, [esp+97Ch+var_8D0]
.text:00408D59
.text:00408D59 loc_408D59:                             ; CODE XREF: sub_4071F0+1B88↓j
.text:00408D59                 cmp     edi, [esp+97Ch+var_8F4]
.text:00408D60                 mov     ebp, 0Eh
.text:00408D65                 jnz     short loc_408CF0
.text:00408D67                 jmp     loc_407606
.text:00408D67 ; ---------------------------------------------------------------------------
.text:00408D6C                 align 10h
.text:00408D70
.text:00408D70 loc_408D70:                             ; CODE XREF: sub_4071F0+1B4C↑j
.text:00408D70                 mov     [esp+97Ch+var_8CC], 0
.text:00408D78                 jmp     short loc_408D59
.text:00408D7A ; ---------------------------------------------------------------------------
.text:00408D7A
.text:00408D7A loc_408D7A:                             ; CODE XREF: sub_4071F0+1B48↑j
.text:00408D7A                                         ; sub_4071F0+1C5A↓j
.text:00408D7A                 xor     ecx, ecx
.text:00408D7C                 movzx   edi, bl
.text:00408D7F                 mov     [esp+edi+97Ch+var_8CC], cl
.text:00408D86                 cmp     [esp+97Ch+var_8EC], 2Eh ; '.'
.text:00408D8E                 jz      short loc_408DCD
.text:00408D90
.text:00408D90 loc_408D90:                             ; CODE XREF: sub_4071F0+1BE7↓j
.text:00408D90                                         ; sub_4071F0+1BF3↓j
.text:00408D90                 cmp     bl, 0FFh
.text:00408D93                 jz      short loc_408DAF
.text:00408D95                 mov     eax, [esp+97Ch+var_8D0]
.text:00408D9C
.text:00408D9C loc_408D9C:                             ; CODE XREF: sub_4071F0+1BB6↓j
.text:00408D9C                 dec     bl
.text:00408D9E                 lea     edi, [eax-1]
.text:00408DA1                 cmp     bl, 0FFh
.text:00408DA4                 mov     eax, edi
.text:00408DA6                 jnz     short loc_408D9C
.text:00408DA8                 mov     [esp+97Ch+var_8D0], edi
.text:00408DAF
.text:00408DAF loc_408DAF:                             ; CODE XREF: sub_4071F0+1BA3↑j
.text:00408DAF                 mov     eax, [esp+97Ch+var_950]
.text:00408DB3                 or      byte ptr [eax+0Bh], 8
.text:00408DB7                 or      byte ptr [eax+5], 40h
.text:00408DBB                 mov     [esp+97Ch+var_924], 2Eh ; '.'
.text:00408DC3
.text:00408DC3 loc_408DC3:                             ; CODE XREF: sub_4071F0+1C3B↓j
.text:00408DC3                                         ; sub_4071F0+1D73↓j ...
.text:00408DC3                 mov     [esp+97Ch+var_91E], 0
.text:00408DC8                 jmp     loc_408BAA
.text:00408DCD ; ---------------------------------------------------------------------------
.text:00408DCD
.text:00408DCD loc_408DCD:                             ; CODE XREF: sub_4071F0+1B9E↑j
.text:00408DCD                 mov     eax, [esp+97Ch+var_8D0]
.text:00408DD4                 cmp     byte ptr [eax], 5Dh ; ']'
.text:00408DD7                 jnz     short loc_408D90
.text:00408DD9                 movzx   ecx, [esp+97Ch+var_8CC]
.text:00408DE1                 test    cl, cl
.text:00408DE3                 jz      short loc_408D90
.text:00408DE5                 dec     bl
.text:00408DE7                 jnz     short loc_408E2D
.text:00408DE9                 cmp     eax, [esp+97Ch+var_8F4]
.text:00408DF0                 mov     ebp, 0Eh
.text:00408DF5                 jz      loc_407606
.text:00408DFB                 mov     bl, cl
.text:00408DFD                 mov     esi, [esp+97Ch+var_950]
.text:00408E01                 lea     ebp, [eax+1]
.text:00408E04                 mov     [esp+97Ch+var_8D0], ebp
.text:00408E0B                 shr     bl, 3
.text:00408E0E                 and     ecx, 7
.text:00408E11                 mov     edx, 1
.text:00408E16                 movzx   ebp, bl
.text:00408E19                 shl     edx, cl
.text:00408E1B                 or      [ebp+esi+0], dl
.text:00408E1F                 movzx   ebx, [esp+97Ch+var_8CC]
.text:00408E27                 mov     [esp+97Ch+var_924], ebx
.text:00408E2B                 jmp     short loc_408DC3
.text:00408E2D ; ---------------------------------------------------------------------------
.text:00408E2D
.text:00408E2D loc_408E2D:                             ; CODE XREF: sub_4071F0+1BF7↑j
.text:00408E2D                                         ; sub_4071F0+1D92↓j
.text:00408E2D                 mov     edx, [esp+97Ch+Block]
.text:00408E34                 mov     ebp, 3
.text:00408E39                 mov     [esp+97Ch+Size], edx
.text:00408E3C                 jmp     loc_407793
.text:00408E41 ; ---------------------------------------------------------------------------
.text:00408E41
.text:00408E41 loc_408E41:                             ; CODE XREF: sub_4071F0+1B3B↑j
.text:00408E41                 cmp     byte ptr [edi], 5Dh ; ']'
.text:00408E44                 jnz     loc_408D31
.text:00408E4A                 jmp     loc_408D7A
.text:00408E4F ; ---------------------------------------------------------------------------
.text:00408E4F
.text:00408E4F loc_408E4F:                             ; CODE XREF: sub_4071F0+1705↑j
.text:00408E4F                                         ; sub_4071F0+19C8↑j ...
.text:00408E4F                 mov     ebp, [esp+97Ch+Block]
.text:00408E56                 mov     [esp+97Ch+Size], ebp
.text:00408E59                 mov     ebp, 7
.text:00408E5E                 jmp     loc_407793
.text:00408E63 ; ---------------------------------------------------------------------------
.text:00408E63
.text:00408E63 loc_408E63:                             ; CODE XREF: sub_4071F0+1A7B↑j
.text:00408E63                 cmp     byte ptr [edi], 3Dh ; '='
.text:00408E66                 jnz     loc_408C71
.text:00408E6C                 cmp     edi, [esp+97Ch+var_8F4]
.text:00408E73                 mov     ebp, 0Eh
.text:00408E78                 jz      loc_407606
.text:00408E7E                 inc     edi
.text:00408E7F                 xor     ebx, ebx
.text:00408E81                 cmp     edi, [esp+97Ch+var_8F4]
.text:00408E88                 mov     [esp+97Ch+var_8D0], edi
.text:00408E8F                 jz      short loc_408E4F
.text:00408E91
.text:00408E91 loc_408E91:                             ; CODE XREF: sub_4071F0+1D17↓j
.text:00408E91                 movzx   eax, byte ptr [edi]
.text:00408E94                 inc     edi
.text:00408E95                 mov     esi, [esp+97Ch+var_8F8]
.text:00408E9C                 mov     [esp+97Ch+var_8D0], edi
.text:00408EA3                 test    esi, esi
.text:00408EA5                 mov     [esp+97Ch+var_8EC], al
.text:00408EAC                 jz      short loc_408EC4
.text:00408EAE                 mov     esi, [esp+97Ch+var_8F8]
.text:00408EB5                 movzx   ebp, al
.text:00408EB8                 movzx   ecx, byte ptr [ebp+esi+0]
.text:00408EBD                 mov     [esp+97Ch+var_8EC], cl
.text:00408EC4
.text:00408EC4 loc_408EC4:                             ; CODE XREF: sub_4071F0+1CBC↑j
.text:00408EC4                 cmp     [esp+97Ch+var_8EC], 3Dh ; '='
.text:00408ECC                 jz      loc_408FC8
.text:00408ED2
.text:00408ED2 loc_408ED2:                             ; CODE XREF: sub_4071F0+1DDB↓j
.text:00408ED2                 cmp     edi, [esp+97Ch+var_8F4]
.text:00408ED9                 jz      short loc_408F1A
.text:00408EDB                 cmp     bl, 1
.text:00408EDE                 ja      short loc_408F10
.text:00408EE0                 movzx   edx, [esp+97Ch+var_8EC]
.text:00408EE8                 movzx   edi, bl
.text:00408EEB                 inc     bl
.text:00408EED                 mov     [esp+edi+97Ch+var_84C], dl
.text:00408EF4                 mov     edi, [esp+97Ch+var_8D0]
.text:00408EFB
.text:00408EFB loc_408EFB:                             ; CODE XREF: sub_4071F0+1D28↓j
.text:00408EFB                 cmp     edi, [esp+97Ch+var_8F4]
.text:00408F02                 mov     ebp, 0Eh
.text:00408F07                 jnz     short loc_408E91
.text:00408F09                 jmp     loc_407606
.text:00408F09 ; ---------------------------------------------------------------------------
.text:00408F0E                 align 10h
.text:00408F10
.text:00408F10 loc_408F10:                             ; CODE XREF: sub_4071F0+1CEE↑j
.text:00408F10                 mov     [esp+97Ch+var_84C], 0
.text:00408F18                 jmp     short loc_408EFB
.text:00408F1A ; ---------------------------------------------------------------------------
.text:00408F1A
.text:00408F1A loc_408F1A:                             ; CODE XREF: sub_4071F0+1CE9↑j
.text:00408F1A                                         ; sub_4071F0+1DE1↓j
.text:00408F1A                 xor     eax, eax
.text:00408F1C                 movzx   ecx, bl
.text:00408F1F                 mov     [esp+ecx+97Ch+var_84C], al
.text:00408F26                 cmp     [esp+97Ch+var_8EC], 3Dh ; '='
.text:00408F2E                 jz      short loc_408F68
.text:00408F30
.text:00408F30 loc_408F30:                             ; CODE XREF: sub_4071F0+1D82↓j
.text:00408F30                                         ; sub_4071F0+1D8E↓j
.text:00408F30                 cmp     bl, 0FFh
.text:00408F33                 jz      short loc_408F4F
.text:00408F35                 mov     eax, [esp+97Ch+var_8D0]
.text:00408F3C
.text:00408F3C loc_408F3C:                             ; CODE XREF: sub_4071F0+1D56↓j
.text:00408F3C                 dec     bl
.text:00408F3E                 lea     edi, [eax-1]
.text:00408F41                 cmp     bl, 0FFh
.text:00408F44                 mov     eax, edi
.text:00408F46                 jnz     short loc_408F3C
.text:00408F48                 mov     [esp+97Ch+var_8D0], edi
.text:00408F4F
.text:00408F4F loc_408F4F:                             ; CODE XREF: sub_4071F0+1D43↑j
.text:00408F4F                 mov     edi, [esp+97Ch+var_950]
.text:00408F53                 or      byte ptr [edi+0Bh], 8
.text:00408F57                 or      byte ptr [edi+7], 20h
.text:00408F5B                 mov     [esp+97Ch+var_924], 3Dh ; '='
.text:00408F63                 jmp     loc_408DC3
.text:00408F68 ; ---------------------------------------------------------------------------
.text:00408F68
.text:00408F68 loc_408F68:                             ; CODE XREF: sub_4071F0+1D3E↑j
.text:00408F68                 mov     eax, [esp+97Ch+var_8D0]
.text:00408F6F                 cmp     byte ptr [eax], 5Dh ; ']'
.text:00408F72                 jnz     short loc_408F30
.text:00408F74                 movzx   ecx, [esp+97Ch+var_84C]
.text:00408F7C                 test    cl, cl
.text:00408F7E                 jz      short loc_408F30
.text:00408F80                 dec     bl
.text:00408F82                 jnz     loc_408E2D
.text:00408F88                 cmp     eax, [esp+97Ch+var_8F4]
.text:00408F8F                 mov     ebp, 0Eh
.text:00408F94                 jz      loc_407606
.text:00408F9A                 mov     dl, cl
.text:00408F9C                 mov     esi, [esp+97Ch+var_950]
.text:00408FA0                 lea     ebp, [eax+1]
.text:00408FA3                 mov     [esp+97Ch+var_8D0], ebp
.text:00408FAA                 shr     dl, 3
.text:00408FAD                 and     ecx, 7
.text:00408FB0                 mov     ebx, 1
.text:00408FB5                 movzx   ebp, dl
.text:00408FB8                 shl     ebx, cl
.text:00408FBA                 or      [ebp+esi+0], bl
.text:00408FBE                 mov     [esp+97Ch+var_91E], 1
.text:00408FC3                 jmp     loc_408BAA
.text:00408FC8 ; ---------------------------------------------------------------------------
.text:00408FC8
.text:00408FC8 loc_408FC8:                             ; CODE XREF: sub_4071F0+1CDC↑j
.text:00408FC8                 cmp     byte ptr [edi], 5Dh ; ']'
.text:00408FCB                 jnz     loc_408ED2
.text:00408FD1                 jmp     loc_408F1A
.text:00408FD6 ; ---------------------------------------------------------------------------
.text:00408FD6
.text:00408FD6 loc_408FD6:                             ; CODE XREF: sub_4071F0+1A63↑j
.text:00408FD6                 cmp     byte ptr [edi], 3Ah ; ':'
.text:00408FD9                 jnz     loc_408C59
.text:00408FDF                 cmp     edi, [esp+97Ch+var_8F4]
.text:00408FE6                 mov     ebp, 0Eh
.text:00408FEB                 jz      loc_407606
.text:00408FF1                 inc     edi
.text:00408FF2                 xor     ebx, ebx
.text:00408FF4                 cmp     edi, [esp+97Ch+var_8F4]
.text:00408FFB                 mov     [esp+97Ch+var_8D0], edi
.text:00409002                 jz      loc_408E4F
.text:00409008
.text:00409008 loc_409008:                             ; CODE XREF: sub_4071F0+1E89↓j
.text:00409008                 movzx   ecx, byte ptr [edi]
.text:0040900B                 inc     edi
.text:0040900C                 mov     ebp, [esp+97Ch+var_8F8]
.text:00409013                 mov     [esp+97Ch+var_8D0], edi
.text:0040901A                 test    ebp, ebp
.text:0040901C                 mov     [esp+97Ch+var_8EC], cl
.text:00409023                 jz      short loc_40903B
.text:00409025                 movzx   ebp, cl
.text:00409028                 mov     ecx, [esp+97Ch+var_8F8]
.text:0040902F                 movzx   edx, byte ptr [ebp+ecx+0]
.text:00409034                 mov     [esp+97Ch+var_8EC], dl
.text:0040903B
.text:0040903B loc_40903B:                             ; CODE XREF: sub_4071F0+1E33↑j
.text:0040903B                 cmp     [esp+97Ch+var_8EC], 3Ah ; ':'
.text:00409043                 jz      loc_409260
.text:00409049
.text:00409049 loc_409049:                             ; CODE XREF: sub_4071F0+2073↓j
.text:00409049                 cmp     edi, [esp+97Ch+var_8F4]
.text:00409050                 jz      short loc_409080
.text:00409052                 movzx   eax, [esp+97Ch+var_8EC]
.text:0040905A                 movzx   esi, bl
.text:0040905D                 inc     bl
.text:0040905F                 mov     ebp, 0Eh
.text:00409064                 mov     [esp+esi+97Ch+name], al
.text:0040906B                 mov     edi, [esp+97Ch+var_8D0]
.text:00409072                 cmp     edi, [esp+97Ch+var_8F4]
.text:00409079                 jnz     short loc_409008
.text:0040907B                 jmp     loc_407606
.text:00409080 ; ---------------------------------------------------------------------------
.text:00409080
.text:00409080 loc_409080:                             ; CODE XREF: sub_4071F0+1E60↑j
.text:00409080                                         ; sub_4071F0+2079↓j
.text:00409080                 xor     eax, eax
.text:00409082                 movzx   edi, bl
.text:00409085                 mov     [esp+edi+97Ch+name], al
.text:0040908C                 cmp     [esp+97Ch+var_8EC], 3Ah ; ':'
.text:00409094                 jz      short loc_4090CE
.text:00409096
.text:00409096 loc_409096:                             ; CODE XREF: sub_4071F0+1EE8↓j
.text:00409096                 cmp     bl, 0FFh
.text:00409099                 jz      short loc_4090B5
.text:0040909B                 mov     eax, [esp+97Ch+var_8D0]
.text:004090A2
.text:004090A2 loc_4090A2:                             ; CODE XREF: sub_4071F0+1EBC↓j
.text:004090A2                 dec     bl
.text:004090A4                 lea     edi, [eax-1]
.text:004090A7                 cmp     bl, 0FFh
.text:004090AA                 mov     eax, edi
.text:004090AC                 jnz     short loc_4090A2
.text:004090AE                 mov     [esp+97Ch+var_8D0], edi
.text:004090B5
.text:004090B5 loc_4090B5:                             ; CODE XREF: sub_4071F0+1EA9↑j
.text:004090B5                 mov     eax, [esp+97Ch+var_950]
.text:004090B9                 or      byte ptr [eax+0Bh], 8
.text:004090BD                 or      byte ptr [eax+7], 4
.text:004090C1                 mov     [esp+97Ch+var_924], 3Ah ; ':'
.text:004090C9                 jmp     loc_408DC3
.text:004090CE ; ---------------------------------------------------------------------------
.text:004090CE
.text:004090CE loc_4090CE:                             ; CODE XREF: sub_4071F0+1EA4↑j
.text:004090CE                 mov     esi, [esp+97Ch+var_8D0]
.text:004090D5                 cmp     byte ptr [esi], 5Dh ; ']'
.text:004090D8                 jnz     short loc_409096
.text:004090DA                 cld
.text:004090DB                 mov     edi, offset aLower ; "lower"
.text:004090E0                 lea     ebx, [esp+97Ch+name]
.text:004090E7                 mov     esi, ebx
.text:004090E9                 mov     ecx, 6
.text:004090EE                 lea     ebp, [esp+97Ch+name]
.text:004090F5                 repe cmpsb
.text:004090F7                 setz    [esp+97Ch+var_925]
.text:004090FC                 mov     ecx, 6
.text:00409101                 mov     edi, offset aUpper ; "upper"
.text:00409106                 mov     esi, ebp
.text:00409108                 lea     edx, [esp+97Ch+name]
.text:0040910F                 repe cmpsb
.text:00409111                 setz    [esp+97Ch+var_926]
.text:00409116                 mov     [esp+97Ch+Size], edx ; name
.text:00409119                 call    wctype
.text:0040911E                 movzx   ebx, ax
.text:00409121                 test    bx, bx
.text:00409124                 mov     dword ptr [esp+97Ch+Type], ebx
.text:00409128                 jz      loc_40924C
.text:0040912E                 mov     eax, [esp+97Ch+var_8D0]
.text:00409135                 mov     ebp, 0Eh
.text:0040913A                 cmp     eax, [esp+97Ch+var_8F4]
.text:00409141                 jz      loc_407606
.text:00409147                 lea     ecx, [eax+1]
.text:0040914A                 cmp     ecx, [esp+97Ch+var_8F4]
.text:00409151                 mov     [esp+97Ch+var_8D0], ecx
.text:00409158                 jz      loc_408E4F
.text:0040915E                 xor     edi, edi
.text:00409160
.text:00409160 loc_409160:                             ; CODE XREF: sub_4071F0+202E↓j
.text:00409160                 mov     [esp+97Ch+Size], edi ; Ch
.text:00409163                 call    btowc
.text:00409168                 mov     ebp, dword ptr [esp+97Ch+Type]
.text:0040916C                 movzx   esi, ax
.text:0040916F                 mov     [esp+97Ch+Size], esi ; C
.text:00409172                 mov     [esp+97Ch+var_978], ebp ; Type
.text:00409176                 call    iswctype
.text:0040917B                 test    eax, eax
.text:0040917D                 jz      short loc_40919C
.text:0040917F                 mov     ecx, edi
.text:00409181                 mov     ebx, edi
.text:00409183                 mov     edx, [esp+97Ch+var_950]
.text:00409187                 shr     cl, 3
.text:0040918A                 movzx   esi, cl
.text:0040918D                 mov     ecx, ebx
.text:0040918F                 and     ecx, 7
.text:00409192                 mov     ebx, 1
.text:00409197                 shl     ebx, cl
.text:00409199                 or      [esi+edx], bl
.text:0040919C
.text:0040919C loc_40919C:                             ; CODE XREF: sub_4071F0+1F8D↑j
.text:0040919C                 mov     eax, [esp+97Ch+var_8F8]
.text:004091A3                 test    eax, eax
.text:004091A5                 jz      short loc_409212
.text:004091A7                 cmp     [esp+97Ch+var_926], 0
.text:004091AC                 jnz     short loc_4091B5
.text:004091AE                 cmp     [esp+97Ch+var_925], 0
.text:004091B3                 jz      short loc_409212
.text:004091B5
.text:004091B5 loc_4091B5:                             ; CODE XREF: sub_4071F0+1FBC↑j
.text:004091B5                 mov     ebp, ds:__mb_cur_max
.text:004091BB                 cmp     dword ptr [ebp+0], 1
.text:004091BF                 jz      short loc_40923B
.text:004091C1                 mov     [esp+97Ch+var_978], 1 ; Type
.text:004091C9                 mov     [esp+97Ch+Size], edi ; C
.text:004091CC                 call    _isctype
.text:004091D1
.text:004091D1 loc_4091D1:                             ; CODE XREF: sub_4071F0+205A↓j
.text:004091D1                 test    eax, eax
.text:004091D3                 jnz     short loc_4091F4
.text:004091D5                 mov     ebx, ds:__mb_cur_max
.text:004091DB                 cmp     dword ptr [ebx], 1
.text:004091DE                 jz      short loc_409229
.text:004091E0                 mov     [esp+97Ch+var_978], 2 ; Type
.text:004091E8                 mov     [esp+97Ch+Size], edi ; C
.text:004091EB                 call    _isctype
.text:004091F0
.text:004091F0 loc_4091F0:                             ; CODE XREF: sub_4071F0+2049↓j
.text:004091F0                 test    eax, eax
.text:004091F2                 jz      short loc_409212
.text:004091F4
.text:004091F4 loc_4091F4:                             ; CODE XREF: sub_4071F0+1FE3↑j
.text:004091F4                 mov     ecx, edi
.text:004091F6                 mov     ebx, edi
.text:004091F8                 mov     edx, [esp+97Ch+var_950]
.text:004091FC                 shr     cl, 3
.text:004091FF                 movzx   ebp, cl
.text:00409202                 mov     ecx, ebx
.text:00409204                 and     ecx, 7
.text:00409207                 mov     ebx, 1
.text:0040920C                 shl     ebx, cl
.text:0040920E                 or      [ebp+edx+0], bl
.text:00409212
.text:00409212 loc_409212:                             ; CODE XREF: sub_4071F0+1FB5↑j
.text:00409212                                         ; sub_4071F0+1FC3↑j ...
.text:00409212                 mov     [esp+97Ch+var_91E], 1
.text:00409217                 inc     edi
.text:00409218                 cmp     edi, 0FFh
.text:0040921E                 jle     loc_409160
.text:00409224                 jmp     loc_408BAA
.text:00409229 ; ---------------------------------------------------------------------------
.text:00409229
.text:00409229 loc_409229:                             ; CODE XREF: sub_4071F0+1FEE↑j
.text:00409229                 mov     ebp, ds:_pctype
.text:0040922F                 mov     ecx, [ebp+0]
.text:00409232                 movzx   eax, word ptr [ecx+edi*2]
.text:00409236                 and     eax, 2
.text:00409239                 jmp     short loc_4091F0
.text:0040923B ; ---------------------------------------------------------------------------
.text:0040923B
.text:0040923B loc_40923B:                             ; CODE XREF: sub_4071F0+1FCF↑j
.text:0040923B                 mov     edx, ds:_pctype
.text:00409241                 mov     esi, [edx]
.text:00409243                 movzx   eax, word ptr [esi+edi*2]
.text:00409247                 and     eax, 1
.text:0040924A                 jmp     short loc_4091D1
.text:0040924C ; ---------------------------------------------------------------------------
.text:0040924C
.text:0040924C loc_40924C:                             ; CODE XREF: sub_4071F0+1F38↑j
.text:0040924C                 mov     ebx, [esp+97Ch+Block]
.text:00409253                 mov     ebp, 4
.text:00409258
.text:00409258 loc_409258:                             ; CODE XREF: sub_4071F0+26A5↓j
.text:00409258                 mov     [esp+97Ch+Size], ebx
.text:0040925B                 jmp     loc_407793
.text:00409260 ; ---------------------------------------------------------------------------
.text:00409260
.text:00409260 loc_409260:                             ; CODE XREF: sub_4071F0+1E53↑j
.text:00409260                 cmp     byte ptr [edi], 5Dh ; ']'
.text:00409263                 jnz     loc_409049
.text:00409269                 jmp     loc_409080
.text:00409269 ; ---------------------------------------------------------------------------
.text:0040926E                 align 10h
.text:00409270
.text:00409270 loc_409270:                             ; CODE XREF: sub_4071F0+1A4B↑j
.text:00409270                 cmp     byte ptr [edi+1], 5Dh ; ']'
.text:00409274                 jz      loc_408C41
.text:0040927A                 cmp     edi, [esp+97Ch+var_8F4]
.text:00409281                 mov     ebp, 0Eh
.text:00409286                 jz      loc_407606
.text:0040928C                 movzx   ebp, [esp+97Ch+var_8EC]
.text:00409294                 inc     edi
.text:00409295                 mov     ecx, [esp+97Ch+var_950]
.text:00409299                 mov     [esp+97Ch+var_8D0], edi
.text:004092A0                 mov     edx, [esp+97Ch+arg_8]
.text:004092A7                 lea     edi, [esp+97Ch+var_8D0]
.text:004092AE                 mov     [esp+97Ch+var_978], edi
.text:004092B2                 mov     ebx, [esp+97Ch+var_8F8]
.text:004092B9                 mov     eax, [esp+97Ch+var_8F4]
.text:004092C0                 mov     [esp+97Ch+var_968], ecx
.text:004092C4                 mov     [esp+97Ch+var_96C], edx
.text:004092C8                 mov     [esp+97Ch+var_970], ebx
.text:004092CC                 mov     [esp+97Ch+var_974], eax
.text:004092D0                 mov     [esp+97Ch+Size], ebp
.text:004092D3
.text:004092D3 loc_4092D3:                             ; CODE XREF: sub_4071F0+2193↓j
.text:004092D3                 call    sub_404180
.text:004092D8                 mov     [esp+97Ch+var_924], 0FFFFFFFFh
.text:004092E0                 test    eax, eax
.text:004092E2                 mov     ebx, eax
.text:004092E4                 jz      loc_408BAA
.text:004092EA                 mov     esi, [esp+97Ch+Block]
.text:004092F1                 mov     ebp, ebx
.text:004092F3
.text:004092F3 loc_4092F3:                             ; CODE XREF: sub_4071F0+318E↓j
.text:004092F3                 mov     [esp+97Ch+Size], esi
.text:004092F6                 jmp     loc_407793
.text:004092F6 ; ---------------------------------------------------------------------------
.text:004092FB                 align 10h
.text:00409300
.text:00409300 loc_409300:                             ; CODE XREF: sub_4071F0+1A42↑j
.text:00409300                 cmp     byte ptr [edi], 5Dh ; ']'
.text:00409303                 jnz     loc_409393
.text:00409309
.text:00409309 loc_409309:                             ; CODE XREF: sub_4071F0+1A34↑j
.text:00409309                 cmp     [esp+97Ch+var_8EC], 2Dh ; '-'
.text:00409311                 jnz     loc_408C38
.text:00409317                 lea     esi, [edi-2]
.text:0040931A                 cmp     esi, [esp+97Ch+arg_0]
.text:00409321                 jb      short loc_40932D
.text:00409323                 cmp     byte ptr [edi-2], 5Bh ; '['
.text:00409327                 jz      loc_408C38
.text:0040932D
.text:0040932D loc_40932D:                             ; CODE XREF: sub_4071F0+2131↑j
.text:0040932D                 lea     ebp, [edi-3]
.text:00409330                 cmp     ebp, [esp+97Ch+arg_0]
.text:00409337                 jb      short loc_40933F
.text:00409339                 cmp     byte ptr [edi-3], 5Bh ; '['
.text:0040933D                 jz      short loc_409388
.text:0040933F
.text:0040933F loc_40933F:                             ; CODE XREF: sub_4071F0+2147↑j
.text:0040933F                                         ; sub_4071F0+219C↓j
.text:0040933F                 cmp     byte ptr [edi], 5Dh ; ']'
.text:00409342                 jz      loc_408C38
.text:00409348                 mov     esi, [esp+97Ch+var_950]
.text:0040934C                 lea     edi, [esp+97Ch+var_8D0]
.text:00409353                 mov     ecx, [esp+97Ch+arg_8]
.text:0040935A                 mov     [esp+97Ch+var_978], edi
.text:0040935E                 mov     ebx, [esp+97Ch+var_8F8]
.text:00409365                 mov     edx, [esp+97Ch+var_8F4]
.text:0040936C                 mov     [esp+97Ch+var_968], esi
.text:00409370                 mov     eax, [esp+97Ch+var_924]
.text:00409374                 mov     [esp+97Ch+var_96C], ecx
.text:00409378                 mov     [esp+97Ch+var_970], ebx
.text:0040937C                 mov     [esp+97Ch+var_974], edx
.text:00409380                 mov     [esp+97Ch+Size], eax
.text:00409383                 jmp     loc_4092D3
.text:00409388 ; ---------------------------------------------------------------------------
.text:00409388
.text:00409388 loc_409388:                             ; CODE XREF: sub_4071F0+214D↑j
.text:00409388                 cmp     byte ptr [edi-2], 5Eh ; '^'
.text:0040938C                 jnz     short loc_40933F
.text:0040938E                 jmp     loc_408C38
.text:00409393 ; ---------------------------------------------------------------------------
.text:00409393
.text:00409393 loc_409393:                             ; CODE XREF: sub_4071F0+2113↑j
.text:00409393                 mov     ecx, [esp+97Ch+Block]
.text:0040939A                 mov     ebp, 0Bh
.text:0040939F                 jmp     loc_4080CC
.text:004093A4 ; ---------------------------------------------------------------------------
.text:004093A4
.text:004093A4 loc_4093A4:                             ; CODE XREF: sub_4071F0+1A22↑j
.text:004093A4                 mov     ebx, [esp+97Ch+var_8F0]
.text:004093AB                 mov     edi, [esp+97Ch+var_8D0]
.text:004093B2                 inc     ebx
.text:004093B3                 cmp     edi, ebx
.text:004093B5                 jz      loc_408C1F
.text:004093BB
.text:004093BB loc_4093BB:                             ; CODE XREF: sub_4071F0+21EA↓j
.text:004093BB                 mov     edi, [esp+97Ch+var_950]
.text:004093BF                 movzx   edx, byte ptr [edi-1]
.text:004093C3                 test    dl, dl
.text:004093C5                 jz      short loc_4093DC
.text:004093C7                 movzx   ebp, dl
.text:004093CA                 cmp     byte ptr [ebp+edi-1], 0
.text:004093CF                 jnz     short loc_4093DC
.text:004093D1                 mov     ebx, [esp+97Ch+var_950]
.text:004093D5                 dec     dl
.text:004093D7                 mov     [ebx-1], dl
.text:004093DA                 jmp     short loc_4093BB
.text:004093DC ; ---------------------------------------------------------------------------
.text:004093DC
.text:004093DC loc_4093DC:                             ; CODE XREF: sub_4071F0+21D5↑j
.text:004093DC                                         ; sub_4071F0+21DF↑j
.text:004093DC                 movzx   edi, dl
.text:004093DF                 add     [esp+97Ch+var_950], edi
.text:004093E3                 jmp     loc_40761F
.text:004093E8 ; ---------------------------------------------------------------------------
.text:004093E8
.text:004093E8 loc_4093E8:                             ; CODE XREF: sub_4071F0+1A14↑j
.text:004093E8                 cmp     edi, [esp+97Ch+var_8F4]
.text:004093EF                 jz      loc_4087A0
.text:004093F5                 movzx   ebx, byte ptr [edx+1]
.text:004093F9                 lea     ecx, [edx+2]
.text:004093FC                 mov     eax, [esp+97Ch+var_8F8]
.text:00409403                 mov     [esp+97Ch+var_8D0], ecx
.text:0040940A                 test    eax, eax
.text:0040940C                 jz      short loc_40941C
.text:0040940E                 mov     edx, [esp+97Ch+var_8F8]
.text:00409415                 movzx   edi, bl
.text:00409418                 movzx   ebx, byte ptr [edi+edx]
.text:0040941C
.text:0040941C loc_40941C:                             ; CODE XREF: sub_4071F0+221C↑j
.text:0040941C                 mov     cl, bl
.text:0040941E                 mov     ebp, [esp+97Ch+var_950]
.text:00409422                 mov     edx, 1
.text:00409427                 shr     cl, 3
.text:0040942A                 movzx   esi, cl
.text:0040942D                 mov     ecx, ebx
.text:0040942F                 and     ecx, 7
.text:00409432                 movzx   ebx, bl
.text:00409435                 shl     edx, cl
.text:00409437                 or      [esi+ebp], dl
.text:0040943A                 jmp     loc_408CB9
.text:0040943F ; ---------------------------------------------------------------------------
.text:0040943F
.text:0040943F loc_40943F:                             ; CODE XREF: sub_4071F0+19B4↑j
.text:0040943F                 test    [esp+97Ch+arg_8], 100h
.text:0040944A                 jz      loc_408BAA
.text:00409450                 or      byte ptr [ebx+1], 4
.text:00409454                 jmp     loc_408BAA
.text:00409459 ; ---------------------------------------------------------------------------
.text:00409459
.text:00409459 loc_409459:                             ; CODE XREF: sub_4071F0+18B2↑j
.text:00409459                 inc     edi
.text:0040945A                 mov     [esp+97Ch+var_8D0], edi
.text:00409461                 jmp     loc_408AA8
.text:00409466 ; ---------------------------------------------------------------------------
.text:00409466
.text:00409466 loc_409466:                             ; CODE XREF: sub_4071F0+16F↑j
.text:00409466                                         ; DATA XREF: sub_4071F0:jpt_40735F↑o
.text:00409466                 mov     eax, [esp+97Ch+var_8D0] ; jumptable 0040735F case 92
.text:0040946D                 cmp     eax, [esp+97Ch+var_8F4]
.text:00409474                 jz      loc_4087A0
.text:0040947A                 movzx   ecx, byte ptr [eax]
.text:0040947D                 lea     ebx, [eax+1]
.text:00409480                 mov     [esp+97Ch+var_8D0], ebx
.text:00409487                 movzx   eax, cl
.text:0040948A                 sub     eax, 27h ; '''  ; switch 86 cases
.text:0040948D                 mov     [esp+97Ch+var_8EC], cl
.text:00409494                 cmp     eax, 55h
.text:00409497                 ja      def_40949D      ; jumptable 0040949D default case, cases 42,44-48,58,59,61,64,65,67-86,88-95,97,99-118,120-122
.text:0040949D                 jmp     ds:jpt_40949D[eax*4] ; switch jump
.text:0040949D ; ---------------------------------------------------------------------------
.text:004094A4 jpt_40949D      dd offset loc_40963B, offset loc_4095FC, offset loc_40970D
.text:004094A4                                         ; DATA XREF: sub_4071F0+22AD↑r
.text:004094A4                 dd offset def_40949D, offset loc_409A3E, offset def_40949D ; jump table for switch statement
.text:004094A4                 dd offset def_40949D, offset def_40949D, offset def_40949D
.text:004094A4                 dd offset def_40949D, offset loc_409743, offset loc_409743
.text:004094A4                 dd offset loc_409743, offset loc_409743, offset loc_409743
.text:004094A4                 dd offset loc_409743, offset loc_409743, offset loc_409743
.text:004094A4                 dd offset loc_409743, offset def_40949D, offset def_40949D
.text:004094A4                 dd offset loc_40989A, offset def_40949D, offset loc_40996C
.text:004094A4                 dd offset loc_409A3E, offset def_40949D, offset def_40949D
.text:004094A4                 dd offset loc_409A51, offset def_40949D, offset def_40949D
.text:004094A4                 dd offset def_40949D, offset def_40949D, offset def_40949D
.text:004094A4                 dd offset def_40949D, offset def_40949D, offset def_40949D
.text:004094A4                 dd offset def_40949D, offset def_40949D, offset def_40949D
.text:004094A4                 dd offset def_40949D, offset def_40949D, offset def_40949D
.text:004094A4                 dd offset def_40949D, offset def_40949D, offset def_40949D
.text:004094A4                 dd offset def_40949D, offset def_40949D, offset def_40949D
.text:004094A4                 dd offset loc_409B23, offset def_40949D, offset def_40949D
.text:004094A4                 dd offset def_40949D, offset def_40949D, offset def_40949D
.text:004094A4                 dd offset def_40949D, offset def_40949D, offset def_40949D
.text:004094A4                 dd offset loc_409C16, offset def_40949D, offset loc_409CE8
.text:004094A4                 dd offset def_40949D, offset def_40949D, offset def_40949D
.text:004094A4                 dd offset def_40949D, offset def_40949D, offset def_40949D
.text:004094A4                 dd offset def_40949D, offset def_40949D, offset def_40949D
.text:004094A4                 dd offset def_40949D, offset def_40949D, offset def_40949D
.text:004094A4                 dd offset def_40949D, offset def_40949D, offset def_40949D
.text:004094A4                 dd offset def_40949D, offset def_40949D, offset def_40949D
.text:004094A4                 dd offset def_40949D, offset def_40949D, offset loc_409DBA
.text:004094A4                 dd offset def_40949D, offset def_40949D, offset def_40949D
.text:004094A4                 dd offset loc_409EAF, offset loc_40A459
.text:004095FC ; ---------------------------------------------------------------------------
.text:004095FC
.text:004095FC loc_4095FC:                             ; CODE XREF: sub_4071F0+22AD↑j
.text:004095FC                                         ; DATA XREF: sub_4071F0:jpt_40949D↑o
.text:004095FC                 test    [esp+97Ch+arg_8], 2000h ; jumptable 0040949D case 40
.text:00409607                 jz      loc_407DAD
.text:0040960D
.text:0040960D def_40949D:                             ; CODE XREF: sub_4071F0+22A7↑j
.text:0040960D                                         ; sub_4071F0+22AD↑j ...
.text:0040960D                 mov     ebx, [esp+97Ch+var_8F8] ; jumptable 0040949D default case, cases 42,44-48,58,59,61,64,65,67-86,88-95,97,99-118,120-122
.text:00409614                 test    ebx, ebx
.text:00409616                 jz      def_40735F      ; jumptable 0040735F default case, cases 11-35,37-39,44,45,47-62,64-90,93,95-122
.text:0040961C                 movzx   edi, [esp+97Ch+var_8EC]
.text:00409624                 mov     esi, [esp+97Ch+var_8F8]
.text:0040962B                 movzx   ecx, byte ptr [edi+esi]
.text:0040962F                 mov     [esp+97Ch+var_8EC], cl
.text:00409636                 jmp     def_40735F      ; jumptable 0040735F default case, cases 11-35,37-39,44,45,47-62,64-90,93,95-122
.text:0040963B ; ---------------------------------------------------------------------------
.text:0040963B
.text:0040963B loc_40963B:                             ; CODE XREF: sub_4071F0+22AD↑j
.text:0040963B                                         ; DATA XREF: sub_4071F0:jpt_40949D↑o
.text:0040963B                 test    [esp+97Ch+arg_8], 80000h ; jumptable 0040949D case 39
.text:00409646                 jnz     def_40735F      ; jumptable 0040735F default case, cases 11-35,37-39,44,45,47-62,64-90,93,95-122
.text:0040964C
.text:0040964C loc_40964C:                             ; CODE XREF: sub_4071F0+24D2↓j
.text:0040964C                                         ; sub_4071F0+24FF↓j ...
.text:0040964C                 mov     eax, [esp+97Ch+arg_C]
.text:00409653                 mov     ebp, [esp+97Ch+var_950]
.text:00409657                 mov     edi, [eax]
.text:00409659                 mov     edx, [eax+4]
.text:0040965C                 sub     ebp, edi
.text:0040965E                 inc     ebp
.text:0040965F                 cmp     ebp, edx
.text:00409661                 jbe     loc_409701
.text:00409667                 cmp     edx, 10000h
.text:0040966D                 mov     ebp, 0Fh
.text:00409672                 jz      loc_407606
.text:00409678                 lea     ebp, [edx+edx]
.text:0040967B                 mov     edx, [esp+97Ch+arg_C]
.text:00409682                 cmp     ebp, 10000h
.text:00409688                 mov     [edx+4], ebp
.text:0040968B                 jbe     short loc_409694
.text:0040968D                 mov     dword ptr [edx+4], 10000h
.text:00409694
.text:00409694 loc_409694:                             ; CODE XREF: sub_4071F0+249B↑j
.text:00409694                 mov     ebx, [esp+97Ch+arg_C]
.text:0040969B                 mov     ebp, 0Ch
.text:004096A0                 mov     esi, [ebx+4]
.text:004096A3                 mov     [esp+97Ch+Size], edi ; Block
.text:004096A6                 mov     [esp+97Ch+var_978], esi ; Size
.text:004096AA                 call    realloc
.text:004096AF                 mov     edx, [esp+97Ch+arg_C]
.text:004096B6                 test    eax, eax
.text:004096B8                 mov     [edx], eax
.text:004096BA                 jz      loc_407606
.text:004096C0                 cmp     edi, eax
.text:004096C2                 jz      short loc_40964C
.text:004096C4                 sub     eax, edi
.text:004096C6                 mov     edi, [esp+97Ch+var_908]
.text:004096CA                 add     [esp+97Ch+var_950], eax
.text:004096CE                 add     [esp+97Ch+var_904], eax
.text:004096D2                 test    edi, edi
.text:004096D4                 jz      short loc_4096DA
.text:004096D6                 add     [esp+97Ch+var_908], eax
.text:004096DA
.text:004096DA loc_4096DA:                             ; CODE XREF: sub_4071F0+24E4↑j
.text:004096DA                 mov     ecx, [esp+97Ch+var_900]
.text:004096DE                 test    ecx, ecx
.text:004096E0                 jz      short loc_4096E6
.text:004096E2                 add     [esp+97Ch+var_900], eax
.text:004096E6
.text:004096E6 loc_4096E6:                             ; CODE XREF: sub_4071F0+24F0↑j
.text:004096E6                 mov     edx, [esp+97Ch+var_8FC]
.text:004096ED                 test    edx, edx
.text:004096EF                 jz      loc_40964C
.text:004096F5                 add     [esp+97Ch+var_8FC], eax
.text:004096FC                 jmp     loc_40964C
.text:00409701 ; ---------------------------------------------------------------------------
.text:00409701
.text:00409701 loc_409701:                             ; CODE XREF: sub_4071F0+2471↑j
.text:00409701                 mov     edi, [esp+97Ch+var_950]
.text:00409705                 mov     byte ptr [edi], 0Ch
.text:00409708                 jmp     loc_40761A
.text:0040970D ; ---------------------------------------------------------------------------
.text:0040970D
.text:0040970D loc_40970D:                             ; CODE XREF: sub_4071F0+22AD↑j
.text:0040970D                                         ; DATA XREF: sub_4071F0:jpt_40949D↑o
.text:0040970D                 test    [esp+97Ch+arg_8], 2000h ; jumptable 0040949D case 41
.text:00409718                 jnz     def_40949D      ; jumptable 0040949D default case, cases 42,44-48,58,59,61,64,65,67-86,88-95,97,99-118,120-122
.text:0040971E                 mov     edi, [esp+97Ch+var_24]
.text:00409725                 test    edi, edi
.text:00409727                 jnz     loc_407F97
.text:0040972D                 test    [esp+97Ch+arg_8], 20000h
.text:00409738                 jnz     def_40949D      ; jumptable 0040949D default case, cases 42,44-48,58,59,61,64,65,67-86,88-95,97,99-118,120-122
.text:0040973E                 jmp     loc_4080C0
.text:00409743 ; ---------------------------------------------------------------------------
.text:00409743
.text:00409743 loc_409743:                             ; CODE XREF: sub_4071F0+22AD↑j
.text:00409743                                         ; DATA XREF: sub_4071F0:jpt_40949D↑o
.text:00409743                 test    [esp+97Ch+arg_8], 4000h ; jumptable 0040949D cases 49-57
.text:0040974E                 jnz     def_40735F      ; jumptable 0040735F default case, cases 11-35,37-39,44,45,47-62,64-90,93,95-122
.text:00409754                 movzx   ebx, [esp+97Ch+var_8EC]
.text:0040975C                 sub     bl, 30h ; '0'
.text:0040975F                 movzx   eax, bl
.text:00409762                 cmp     eax, [esp+97Ch+var_90C]
.text:00409766                 ja      loc_409889
.text:0040976C                 mov     [esp+97Ch+var_970], eax
.text:00409770                 mov     ecx, [esp+97Ch+Block]
.text:00409777                 mov     edi, [esp+97Ch+var_28]
.text:0040977E                 mov     esi, [esp+97Ch+var_24]
.text:00409785                 mov     [esp+97Ch+Size], ecx
.text:00409788                 mov     [esp+97Ch+var_978], edi
.text:0040978C                 mov     [esp+97Ch+var_974], esi
.text:00409790                 call    sub_406BD0
.text:00409795                 test    al, al
.text:00409797                 jnz     def_40735F      ; jumptable 0040735F default case, cases 11-35,37-39,44,45,47-62,64-90,93,95-122
.text:0040979D                 mov     esi, [esp+97Ch+arg_C]
.text:004097A4                 mov     ebp, [esp+97Ch+var_950]
.text:004097A8                 mov     edi, [esi]
.text:004097AA                 mov     [esp+97Ch+var_900], ebp
.text:004097AE                 mov     edx, [esi+4]
.text:004097B1                 sub     ebp, edi
.text:004097B3                 mov     [esp+97Ch+var_940], edi
.text:004097B7                 add     ebp, 2
.text:004097BA                 cmp     ebp, edx
.text:004097BC                 jbe     loc_40987A
.text:004097C2
.text:004097C2 loc_4097C2:                             ; CODE XREF: sub_4071F0+2684↓j
.text:004097C2                 cmp     edx, 10000h
.text:004097C8                 mov     ebp, 0Fh
.text:004097CD                 jz      loc_407606
.text:004097D3                 mov     esi, [esp+97Ch+arg_C]
.text:004097DA                 lea     ecx, [edx+edx]
.text:004097DD                 cmp     ecx, 10000h
.text:004097E3                 mov     [esi+4], ecx
.text:004097E6                 jbe     short loc_4097EF
.text:004097E8                 mov     dword ptr [esi+4], 10000h
.text:004097EF
.text:004097EF loc_4097EF:                             ; CODE XREF: sub_4071F0+25F6↑j
.text:004097EF                 mov     eax, [esp+97Ch+arg_C]
.text:004097F6                 mov     ebp, [eax+4]
.text:004097F9                 mov     [esp+97Ch+Size], edi ; Block
.text:004097FC                 mov     [esp+97Ch+var_978], ebp ; Size
.text:00409800                 mov     ebp, 0Ch
.text:00409805                 call    realloc
.text:0040980A                 mov     edx, [esp+97Ch+arg_C]
.text:00409811                 test    eax, eax
.text:00409813                 mov     [edx], eax
.text:00409815                 jz      loc_407606
.text:0040981B                 cmp     [esp+97Ch+var_940], eax
.text:0040981F                 jz      short loc_409859
.text:00409821                 mov     esi, [esp+97Ch+var_940]
.text:00409825                 mov     edi, [esp+97Ch+var_908]
.text:00409829                 sub     eax, esi
.text:0040982B                 add     [esp+97Ch+var_950], eax
.text:0040982F                 add     [esp+97Ch+var_904], eax
.text:00409833                 test    edi, edi
.text:00409835                 jz      short loc_40983B
.text:00409837                 add     [esp+97Ch+var_908], eax
.text:0040983B
.text:0040983B loc_40983B:                             ; CODE XREF: sub_4071F0+2645↑j
.text:0040983B                 mov     edx, [esp+97Ch+var_900]
.text:0040983F                 test    edx, edx
.text:00409841                 jz      short loc_409847
.text:00409843                 add     [esp+97Ch+var_900], eax
.text:00409847
.text:00409847 loc_409847:                             ; CODE XREF: sub_4071F0+2651↑j
.text:00409847                 mov     ecx, [esp+97Ch+var_8FC]
.text:0040984E                 test    ecx, ecx
.text:00409850                 jz      short loc_409859
.text:00409852                 add     [esp+97Ch+var_8FC], eax
.text:00409859
.text:00409859 loc_409859:                             ; CODE XREF: sub_4071F0+262F↑j
.text:00409859                                         ; sub_4071F0+2660↑j
.text:00409859                 mov     eax, [esp+97Ch+arg_C]
.text:00409860                 mov     ebp, [esp+97Ch+var_950]
.text:00409864                 mov     edi, [eax]
.text:00409866                 mov     edx, [eax+4]
.text:00409869                 sub     ebp, edi
.text:0040986B                 add     ebp, 2
.text:0040986E                 mov     [esp+97Ch+var_940], edi
.text:00409872                 cmp     ebp, edx
.text:00409874                 ja      loc_4097C2
.text:0040987A
.text:0040987A loc_40987A:                             ; CODE XREF: sub_4071F0+25CC↑j
.text:0040987A                 mov     edi, [esp+97Ch+var_950]
.text:0040987E                 mov     byte ptr [edi], 8
.text:00409881                 inc     edi
.text:00409882                 mov     [edi], bl
.text:00409884                 jmp     loc_40761A
.text:00409889 ; ---------------------------------------------------------------------------
.text:00409889
.text:00409889 loc_409889:                             ; CODE XREF: sub_4071F0+2576↑j
.text:00409889                 mov     ebx, [esp+97Ch+Block]
.text:00409890                 mov     ebp, 6
.text:00409895                 jmp     loc_409258
.text:0040989A ; ---------------------------------------------------------------------------
.text:0040989A
.text:0040989A loc_40989A:                             ; CODE XREF: sub_4071F0+22AD↑j
.text:0040989A                                         ; DATA XREF: sub_4071F0:jpt_40949D↑o
.text:0040989A                 test    [esp+97Ch+arg_8], 80000h ; jumptable 0040949D case 60
.text:004098A5                 jnz     def_40735F      ; jumptable 0040735F default case, cases 11-35,37-39,44,45,47-62,64-90,93,95-122
.text:004098AB
.text:004098AB loc_4098AB:                             ; CODE XREF: sub_4071F0+2731↓j
.text:004098AB                                         ; sub_4071F0+275E↓j ...
.text:004098AB                 mov     eax, [esp+97Ch+arg_C]
.text:004098B2                 mov     ebx, [esp+97Ch+var_950]
.text:004098B6                 mov     edi, [eax]
.text:004098B8                 mov     edx, [eax+4]
.text:004098BB                 sub     ebx, edi
.text:004098BD                 inc     ebx
.text:004098BE                 cmp     ebx, edx
.text:004098C0                 jbe     loc_409960
.text:004098C6                 cmp     edx, 10000h
.text:004098CC                 mov     ebp, 0Fh
.text:004098D1                 jz      loc_407606
.text:004098D7                 lea     ebx, [edx+edx]
.text:004098DA                 mov     edx, [esp+97Ch+arg_C]
.text:004098E1                 cmp     ebx, 10000h
.text:004098E7                 mov     [edx+4], ebx
.text:004098EA                 jbe     short loc_4098F3
.text:004098EC                 mov     dword ptr [edx+4], 10000h
.text:004098F3
.text:004098F3 loc_4098F3:                             ; CODE XREF: sub_4071F0+26FA↑j
.text:004098F3                 mov     ebp, [esp+97Ch+arg_C]
.text:004098FA                 mov     edx, [ebp+4]
.text:004098FD                 mov     ebp, 0Ch
.text:00409902                 mov     [esp+97Ch+Size], edi ; Block
.text:00409905                 mov     [esp+97Ch+var_978], edx ; Size
.text:00409909                 call    realloc
.text:0040990E                 mov     ecx, [esp+97Ch+arg_C]
.text:00409915                 test    eax, eax
.text:00409917                 mov     [ecx], eax
.text:00409919                 jz      loc_407606
.text:0040991F                 cmp     edi, eax
.text:00409921                 jz      short loc_4098AB
.text:00409923                 mov     esi, [esp+97Ch+var_908]
.text:00409927                 sub     eax, edi
.text:00409929                 add     [esp+97Ch+var_950], eax
.text:0040992D                 add     [esp+97Ch+var_904], eax
.text:00409931                 test    esi, esi
.text:00409933                 jz      short loc_409939
.text:00409935                 add     [esp+97Ch+var_908], eax
.text:00409939
.text:00409939 loc_409939:                             ; CODE XREF: sub_4071F0+2743↑j
.text:00409939                 mov     edi, [esp+97Ch+var_900]
.text:0040993D                 test    edi, edi
.text:0040993F                 jz      short loc_409945
.text:00409941                 add     [esp+97Ch+var_900], eax
.text:00409945
.text:00409945 loc_409945:                             ; CODE XREF: sub_4071F0+274F↑j
.text:00409945                 mov     ecx, [esp+97Ch+var_8FC]
.text:0040994C                 test    ecx, ecx
.text:0040994E                 jz      loc_4098AB
.text:00409954                 add     [esp+97Ch+var_8FC], eax
.text:0040995B                 jmp     loc_4098AB
.text:00409960 ; ---------------------------------------------------------------------------
.text:00409960
.text:00409960 loc_409960:                             ; CODE XREF: sub_4071F0+26D0↑j
.text:00409960                 mov     edi, [esp+97Ch+var_950]
.text:00409964                 mov     byte ptr [edi], 1Ah
.text:00409967                 jmp     loc_40761A
.text:0040996C ; ---------------------------------------------------------------------------
.text:0040996C
.text:0040996C loc_40996C:                             ; CODE XREF: sub_4071F0+22AD↑j
.text:0040996C                                         ; DATA XREF: sub_4071F0:jpt_40949D↑o
.text:0040996C                 test    [esp+97Ch+arg_8], 80000h ; jumptable 0040949D case 62
.text:00409977                 jnz     def_40735F      ; jumptable 0040735F default case, cases 11-35,37-39,44,45,47-62,64-90,93,95-122
.text:0040997D
.text:0040997D loc_40997D:                             ; CODE XREF: sub_4071F0+2803↓j
.text:0040997D                                         ; sub_4071F0+2830↓j ...
.text:0040997D                 mov     eax, [esp+97Ch+arg_C]
.text:00409984                 mov     ebp, [esp+97Ch+var_950]
.text:00409988                 mov     edi, [eax]
.text:0040998A                 mov     edx, [eax+4]
.text:0040998D                 sub     ebp, edi
.text:0040998F                 inc     ebp
.text:00409990                 cmp     ebp, edx
.text:00409992                 jbe     loc_409A32
.text:00409998                 cmp     edx, 10000h
.text:0040999E                 mov     ebp, 0Fh
.text:004099A3                 jz      loc_407606
.text:004099A9                 lea     ebp, [edx+edx]
.text:004099AC                 mov     edx, [esp+97Ch+arg_C]
.text:004099B3                 cmp     ebp, 10000h
.text:004099B9                 mov     [edx+4], ebp
.text:004099BC                 jbe     short loc_4099C5
.text:004099BE                 mov     dword ptr [edx+4], 10000h
.text:004099C5
.text:004099C5 loc_4099C5:                             ; CODE XREF: sub_4071F0+27CC↑j
.text:004099C5                 mov     ebx, [esp+97Ch+arg_C]
.text:004099CC                 mov     ebp, 0Ch
.text:004099D1                 mov     esi, [ebx+4]
.text:004099D4                 mov     [esp+97Ch+Size], edi ; Block
.text:004099D7                 mov     [esp+97Ch+var_978], esi ; Size
.text:004099DB                 call    realloc
.text:004099E0                 mov     edx, [esp+97Ch+arg_C]
.text:004099E7                 test    eax, eax
.text:004099E9                 mov     [edx], eax
.text:004099EB                 jz      loc_407606
.text:004099F1                 cmp     edi, eax
.text:004099F3                 jz      short loc_40997D
.text:004099F5                 sub     eax, edi
.text:004099F7                 mov     edi, [esp+97Ch+var_908]
.text:004099FB                 add     [esp+97Ch+var_950], eax
.text:004099FF                 add     [esp+97Ch+var_904], eax
.text:00409A03                 test    edi, edi
.text:00409A05                 jz      short loc_409A0B
.text:00409A07                 add     [esp+97Ch+var_908], eax
.text:00409A0B
.text:00409A0B loc_409A0B:                             ; CODE XREF: sub_4071F0+2815↑j
.text:00409A0B                 mov     ecx, [esp+97Ch+var_900]
.text:00409A0F                 test    ecx, ecx
.text:00409A11                 jz      short loc_409A17
.text:00409A13                 add     [esp+97Ch+var_900], eax
.text:00409A17
.text:00409A17 loc_409A17:                             ; CODE XREF: sub_4071F0+2821↑j
.text:00409A17                 mov     edx, [esp+97Ch+var_8FC]
.text:00409A1E                 test    edx, edx
.text:00409A20                 jz      loc_40997D
.text:00409A26                 add     [esp+97Ch+var_8FC], eax
.text:00409A2D                 jmp     loc_40997D
.text:00409A32 ; ---------------------------------------------------------------------------
.text:00409A32
.text:00409A32 loc_409A32:                             ; CODE XREF: sub_4071F0+27A2↑j
.text:00409A32                 mov     edi, [esp+97Ch+var_950]
.text:00409A36                 mov     byte ptr [edi], 1Bh
.text:00409A39                 jmp     loc_40761A
.text:00409A3E ; ---------------------------------------------------------------------------
.text:00409A3E
.text:00409A3E loc_409A3E:                             ; CODE XREF: sub_4071F0+22AD↑j
.text:00409A3E                                         ; DATA XREF: sub_4071F0:jpt_40949D↑o
.text:00409A3E                 test    byte ptr [esp+97Ch+arg_8], 2 ; jumptable 0040949D cases 43,63
.text:00409A46                 jz      def_40949D      ; jumptable 0040949D default case, cases 42,44-48,58,59,61,64,65,67-86,88-95,97,99-118,120-122
.text:00409A4C                 jmp     loc_408250      ; jumptable 0040735F case 42
.text:00409A51 ; ---------------------------------------------------------------------------
.text:00409A51
.text:00409A51 loc_409A51:                             ; CODE XREF: sub_4071F0+22AD↑j
.text:00409A51                                         ; DATA XREF: sub_4071F0:jpt_40949D↑o
.text:00409A51                 test    [esp+97Ch+arg_8], 80000h ; jumptable 0040949D case 66
.text:00409A5C                 jnz     def_40735F      ; jumptable 0040735F default case, cases 11-35,37-39,44,45,47-62,64-90,93,95-122
.text:00409A62
.text:00409A62 loc_409A62:                             ; CODE XREF: sub_4071F0+28E8↓j
.text:00409A62                                         ; sub_4071F0+2915↓j ...
.text:00409A62                 mov     eax, [esp+97Ch+arg_C]
.text:00409A69                 mov     ebp, [esp+97Ch+var_950]
.text:00409A6D                 mov     edi, [eax]
.text:00409A6F                 mov     edx, [eax+4]
.text:00409A72                 sub     ebp, edi
.text:00409A74                 inc     ebp
.text:00409A75                 cmp     ebp, edx
.text:00409A77                 jbe     loc_409B17
.text:00409A7D                 cmp     edx, 10000h
.text:00409A83                 mov     ebp, 0Fh
.text:00409A88                 jz      loc_407606
.text:00409A8E                 lea     ebx, [edx+edx]
.text:00409A91                 mov     edx, [esp+97Ch+arg_C]
.text:00409A98                 cmp     ebx, 10000h
.text:00409A9E                 mov     [edx+4], ebx
.text:00409AA1                 jbe     short loc_409AAA
.text:00409AA3                 mov     dword ptr [edx+4], 10000h
.text:00409AAA
.text:00409AAA loc_409AAA:                             ; CODE XREF: sub_4071F0+28B1↑j
.text:00409AAA                 mov     esi, [esp+97Ch+arg_C]
.text:00409AB1                 mov     ebp, [esi+4]
.text:00409AB4                 mov     [esp+97Ch+Size], edi ; Block
.text:00409AB7                 mov     [esp+97Ch+var_978], ebp ; Size
.text:00409ABB                 mov     ebp, 0Ch
.text:00409AC0                 call    realloc
.text:00409AC5                 mov     edx, [esp+97Ch+arg_C]
.text:00409ACC                 test    eax, eax
.text:00409ACE                 mov     [edx], eax
.text:00409AD0                 jz      loc_407606
.text:00409AD6                 cmp     edi, eax
.text:00409AD8                 jz      short loc_409A62
.text:00409ADA                 sub     eax, edi
.text:00409ADC                 mov     edi, [esp+97Ch+var_908]
.text:00409AE0                 add     [esp+97Ch+var_950], eax
.text:00409AE4                 add     [esp+97Ch+var_904], eax
.text:00409AE8                 test    edi, edi
.text:00409AEA                 jz      short loc_409AF0
.text:00409AEC                 add     [esp+97Ch+var_908], eax
.text:00409AF0
.text:00409AF0 loc_409AF0:                             ; CODE XREF: sub_4071F0+28FA↑j
.text:00409AF0                 mov     ecx, [esp+97Ch+var_900]
.text:00409AF4                 test    ecx, ecx
.text:00409AF6                 jz      short loc_409AFC
.text:00409AF8                 add     [esp+97Ch+var_900], eax
.text:00409AFC
.text:00409AFC loc_409AFC:                             ; CODE XREF: sub_4071F0+2906↑j
.text:00409AFC                 mov     ebx, [esp+97Ch+var_8FC]
.text:00409B03                 test    ebx, ebx
.text:00409B05                 jz      loc_409A62
.text:00409B0B                 add     [esp+97Ch+var_8FC], eax
.text:00409B12                 jmp     loc_409A62
.text:00409B17 ; ---------------------------------------------------------------------------
.text:00409B17
.text:00409B17 loc_409B17:                             ; CODE XREF: sub_4071F0+2887↑j
.text:00409B17                 mov     edi, [esp+97Ch+var_950]
.text:00409B1B                 mov     byte ptr [edi], 1Dh
.text:00409B1E                 jmp     loc_40761A
.text:00409B23 ; ---------------------------------------------------------------------------
.text:00409B23
.text:00409B23 loc_409B23:                             ; CODE XREF: sub_4071F0+22AD↑j
.text:00409B23                                         ; DATA XREF: sub_4071F0:jpt_40949D↑o
.text:00409B23                 test    [esp+97Ch+arg_8], 80000h ; jumptable 0040949D case 87
.text:00409B2E                 jnz     def_40735F      ; jumptable 0040735F default case, cases 11-35,37-39,44,45,47-62,64-90,93,95-122
.text:00409B34                 mov     ecx, [esp+97Ch+arg_C]
.text:00409B3B                 mov     esi, [esp+97Ch+var_950]
.text:00409B3F                 mov     edi, [ecx]
.text:00409B41                 mov     [esp+97Ch+var_900], esi
.text:00409B45                 mov     edx, [ecx+4]
.text:00409B48                 sub     esi, edi
.text:00409B4A                 inc     esi
.text:00409B4B                 mov     ebx, edi
.text:00409B4D                 cmp     esi, edx
.text:00409B4F                 jbe     loc_409C0A
.text:00409B55
.text:00409B55 loc_409B55:                             ; CODE XREF: sub_4071F0+2A14↓j
.text:00409B55                 cmp     edx, 10000h
.text:00409B5B                 mov     ebp, 0Fh
.text:00409B60                 jz      loc_407606
.text:00409B66                 mov     esi, [esp+97Ch+arg_C]
.text:00409B6D                 lea     ebp, [edx+edx]
.text:00409B70                 cmp     ebp, 10000h
.text:00409B76                 mov     [esi+4], ebp
.text:00409B79                 jbe     short loc_409B82
.text:00409B7B                 mov     dword ptr [esi+4], 10000h
.text:00409B82
.text:00409B82 loc_409B82:                             ; CODE XREF: sub_4071F0+2989↑j
.text:00409B82                 mov     eax, [esp+97Ch+arg_C]
.text:00409B89                 mov     ebp, 0Ch
.text:00409B8E                 mov     esi, [eax+4]
.text:00409B91                 mov     [esp+97Ch+Size], edi ; Block
.text:00409B94                 mov     [esp+97Ch+var_978], esi ; Size
.text:00409B98                 call    realloc
.text:00409B9D                 mov     edi, [esp+97Ch+arg_C]
.text:00409BA4                 test    eax, eax
.text:00409BA6                 mov     [edi], eax
.text:00409BA8                 jz      loc_407606
.text:00409BAE                 cmp     ebx, eax
.text:00409BB0                 jz      short loc_409BE6
.text:00409BB2                 sub     eax, ebx
.text:00409BB4                 mov     ebx, [esp+97Ch+var_908]
.text:00409BB8                 add     [esp+97Ch+var_950], eax
.text:00409BBC                 add     [esp+97Ch+var_904], eax
.text:00409BC0                 test    ebx, ebx
.text:00409BC2                 jz      short loc_409BC8
.text:00409BC4                 add     [esp+97Ch+var_908], eax
.text:00409BC8
.text:00409BC8 loc_409BC8:                             ; CODE XREF: sub_4071F0+29D2↑j
.text:00409BC8                 mov     ecx, [esp+97Ch+var_900]
.text:00409BCC                 test    ecx, ecx
.text:00409BCE                 jz      short loc_409BD4
.text:00409BD0                 add     [esp+97Ch+var_900], eax
.text:00409BD4
.text:00409BD4 loc_409BD4:                             ; CODE XREF: sub_4071F0+29DE↑j
.text:00409BD4                 mov     edx, [esp+97Ch+var_8FC]
.text:00409BDB                 test    edx, edx
.text:00409BDD                 jz      short loc_409BE6
.text:00409BDF                 add     [esp+97Ch+var_8FC], eax
.text:00409BE6
.text:00409BE6 loc_409BE6:                             ; CODE XREF: sub_4071F0+29C0↑j
.text:00409BE6                                         ; sub_4071F0+29ED↑j
.text:00409BE6                 mov     esi, [esp+97Ch+arg_C]
.text:00409BED                 mov     eax, [esp+97Ch+arg_C]
.text:00409BF4                 mov     ebp, [esp+97Ch+var_950]
.text:00409BF8                 mov     edi, [esi]
.text:00409BFA                 mov     edx, [eax+4]
.text:00409BFD                 sub     ebp, edi
.text:00409BFF                 inc     ebp
.text:00409C00                 mov     ebx, edi
.text:00409C02                 cmp     ebp, edx
.text:00409C04                 ja      loc_409B55
.text:00409C0A
.text:00409C0A loc_409C0A:                             ; CODE XREF: sub_4071F0+295F↑j
.text:00409C0A                 mov     edi, [esp+97Ch+var_950]
.text:00409C0E                 mov     byte ptr [edi], 19h
.text:00409C11                 jmp     loc_40761A
.text:00409C16 ; ---------------------------------------------------------------------------
.text:00409C16
.text:00409C16 loc_409C16:                             ; CODE XREF: sub_4071F0+22AD↑j
.text:00409C16                                         ; DATA XREF: sub_4071F0:jpt_40949D↑o
.text:00409C16                 test    [esp+97Ch+arg_8], 80000h ; jumptable 0040949D case 96
.text:00409C21                 jnz     def_40735F      ; jumptable 0040735F default case, cases 11-35,37-39,44,45,47-62,64-90,93,95-122
.text:00409C27
.text:00409C27 loc_409C27:                             ; CODE XREF: sub_4071F0+2AAD↓j
.text:00409C27                                         ; sub_4071F0+2ADA↓j ...
.text:00409C27                 mov     eax, [esp+97Ch+arg_C]
.text:00409C2E                 mov     ebx, [esp+97Ch+var_950]
.text:00409C32                 mov     edi, [eax]
.text:00409C34                 mov     edx, [eax+4]
.text:00409C37                 sub     ebx, edi
.text:00409C39                 inc     ebx
.text:00409C3A                 cmp     ebx, edx
.text:00409C3C                 jbe     loc_409CDC
.text:00409C42                 cmp     edx, 10000h
.text:00409C48                 mov     ebp, 0Fh
.text:00409C4D                 jz      loc_407606
.text:00409C53                 lea     esi, [edx+edx]
.text:00409C56                 mov     edx, [esp+97Ch+arg_C]
.text:00409C5D                 cmp     esi, 10000h
.text:00409C63                 mov     [edx+4], esi
.text:00409C66                 jbe     short loc_409C6F
.text:00409C68                 mov     dword ptr [edx+4], 10000h
.text:00409C6F
.text:00409C6F loc_409C6F:                             ; CODE XREF: sub_4071F0+2A76↑j
.text:00409C6F                 mov     ebp, [esp+97Ch+arg_C]
.text:00409C76                 mov     ebx, [ebp+4]
.text:00409C79                 mov     ebp, 0Ch
.text:00409C7E                 mov     [esp+97Ch+Size], edi ; Block
.text:00409C81                 mov     [esp+97Ch+var_978], ebx ; Size
.text:00409C85                 call    realloc
.text:00409C8A                 mov     edx, [esp+97Ch+arg_C]
.text:00409C91                 test    eax, eax
.text:00409C93                 mov     [edx], eax
.text:00409C95                 jz      loc_407606
.text:00409C9B                 cmp     edi, eax
.text:00409C9D                 jz      short loc_409C27
.text:00409C9F                 mov     ecx, [esp+97Ch+var_908]
.text:00409CA3                 sub     eax, edi
.text:00409CA5                 add     [esp+97Ch+var_950], eax
.text:00409CA9                 add     [esp+97Ch+var_904], eax
.text:00409CAD                 test    ecx, ecx
.text:00409CAF                 jz      short loc_409CB5
.text:00409CB1                 add     [esp+97Ch+var_908], eax
.text:00409CB5
.text:00409CB5 loc_409CB5:                             ; CODE XREF: sub_4071F0+2ABF↑j
.text:00409CB5                 mov     edi, [esp+97Ch+var_900]
.text:00409CB9                 test    edi, edi
.text:00409CBB                 jz      short loc_409CC1
.text:00409CBD                 add     [esp+97Ch+var_900], eax
.text:00409CC1
.text:00409CC1 loc_409CC1:                             ; CODE XREF: sub_4071F0+2ACB↑j
.text:00409CC1                 mov     esi, [esp+97Ch+var_8FC]
.text:00409CC8                 test    esi, esi
.text:00409CCA                 jz      loc_409C27
.text:00409CD0                 add     [esp+97Ch+var_8FC], eax
.text:00409CD7                 jmp     loc_409C27
.text:00409CDC ; ---------------------------------------------------------------------------
.text:00409CDC
.text:00409CDC loc_409CDC:                             ; CODE XREF: sub_4071F0+2A4C↑j
.text:00409CDC                 mov     edi, [esp+97Ch+var_950]
.text:00409CE0                 mov     byte ptr [edi], 0Bh
.text:00409CE3                 jmp     loc_40761A
.text:00409CE8 ; ---------------------------------------------------------------------------
.text:00409CE8
.text:00409CE8 loc_409CE8:                             ; CODE XREF: sub_4071F0+22AD↑j
.text:00409CE8                                         ; DATA XREF: sub_4071F0:jpt_40949D↑o
.text:00409CE8                 test    [esp+97Ch+arg_8], 80000h ; jumptable 0040949D case 98
.text:00409CF3                 jnz     def_40735F      ; jumptable 0040735F default case, cases 11-35,37-39,44,45,47-62,64-90,93,95-122
.text:00409CF9
.text:00409CF9 loc_409CF9:                             ; CODE XREF: sub_4071F0+2B7F↓j
.text:00409CF9                                         ; sub_4071F0+2BAC↓j ...
.text:00409CF9                 mov     eax, [esp+97Ch+arg_C]
.text:00409D00                 mov     ecx, [esp+97Ch+var_950]
.text:00409D04                 mov     edi, [eax]
.text:00409D06                 mov     edx, [eax+4]
.text:00409D09                 sub     ecx, edi
.text:00409D0B                 inc     ecx
.text:00409D0C                 cmp     ecx, edx
.text:00409D0E                 jbe     loc_409DAE
.text:00409D14                 cmp     edx, 10000h
.text:00409D1A                 mov     ebp, 0Fh
.text:00409D1F                 jz      loc_407606
.text:00409D25                 lea     esi, [edx+edx]
.text:00409D28                 mov     edx, [esp+97Ch+arg_C]
.text:00409D2F                 cmp     esi, 10000h
.text:00409D35                 mov     [edx+4], esi
.text:00409D38                 jbe     short loc_409D41
.text:00409D3A                 mov     dword ptr [edx+4], 10000h
.text:00409D41
.text:00409D41 loc_409D41:                             ; CODE XREF: sub_4071F0+2B48↑j
.text:00409D41                 mov     edx, [esp+97Ch+arg_C]
.text:00409D48                 mov     ebp, 0Ch
.text:00409D4D                 mov     ebx, [edx+4]
.text:00409D50                 mov     [esp+97Ch+Size], edi ; Block
.text:00409D53                 mov     [esp+97Ch+var_978], ebx ; Size
.text:00409D57                 call    realloc
.text:00409D5C                 mov     ecx, [esp+97Ch+arg_C]
.text:00409D63                 test    eax, eax
.text:00409D65                 mov     [ecx], eax
.text:00409D67                 jz      loc_407606
.text:00409D6D                 cmp     edi, eax
.text:00409D6F                 jz      short loc_409CF9
.text:00409D71                 mov     ebp, [esp+97Ch+var_908]
.text:00409D75                 sub     eax, edi
.text:00409D77                 add     [esp+97Ch+var_950], eax
.text:00409D7B                 add     [esp+97Ch+var_904], eax
.text:00409D7F                 test    ebp, ebp
.text:00409D81                 jz      short loc_409D87
.text:00409D83                 add     [esp+97Ch+var_908], eax
.text:00409D87
.text:00409D87 loc_409D87:                             ; CODE XREF: sub_4071F0+2B91↑j
.text:00409D87                 mov     edi, [esp+97Ch+var_900]
.text:00409D8B                 test    edi, edi
.text:00409D8D                 jz      short loc_409D93
.text:00409D8F                 add     [esp+97Ch+var_900], eax
.text:00409D93
.text:00409D93 loc_409D93:                             ; CODE XREF: sub_4071F0+2B9D↑j
.text:00409D93                 mov     esi, [esp+97Ch+var_8FC]
.text:00409D9A                 test    esi, esi
.text:00409D9C                 jz      loc_409CF9
.text:00409DA2                 add     [esp+97Ch+var_8FC], eax
.text:00409DA9                 jmp     loc_409CF9
.text:00409DAE ; ---------------------------------------------------------------------------
.text:00409DAE
.text:00409DAE loc_409DAE:                             ; CODE XREF: sub_4071F0+2B1E↑j
.text:00409DAE                 mov     edi, [esp+97Ch+var_950]
.text:00409DB2                 mov     byte ptr [edi], 1Ch
.text:00409DB5                 jmp     loc_40761A
.text:00409DBA ; ---------------------------------------------------------------------------
.text:00409DBA
.text:00409DBA loc_409DBA:                             ; CODE XREF: sub_4071F0+22AD↑j
.text:00409DBA                                         ; DATA XREF: sub_4071F0:jpt_40949D↑o
.text:00409DBA                 test    [esp+97Ch+arg_8], 80000h ; jumptable 0040949D case 119
.text:00409DC5                 jnz     def_40735F      ; jumptable 0040735F default case, cases 11-35,37-39,44,45,47-62,64-90,93,95-122
.text:00409DCB                 mov     eax, [esp+97Ch+arg_C]
.text:00409DD2                 mov     ecx, [esp+97Ch+var_950]
.text:00409DD6                 mov     edi, [eax]
.text:00409DD8                 mov     [esp+97Ch+var_900], ecx
.text:00409DDC                 mov     esi, ecx
.text:00409DDE                 mov     edx, [eax+4]
.text:00409DE1                 sub     esi, edi
.text:00409DE3                 mov     ebx, edi
.text:00409DE5                 inc     esi
.text:00409DE6                 cmp     esi, edx
.text:00409DE8                 jbe     loc_409EA3
.text:00409DEE
.text:00409DEE loc_409DEE:                             ; CODE XREF: sub_4071F0+2CAD↓j
.text:00409DEE                 cmp     edx, 10000h
.text:00409DF4                 mov     ebp, 0Fh
.text:00409DF9                 jz      loc_407606
.text:00409DFF                 mov     esi, [esp+97Ch+arg_C]
.text:00409E06                 lea     ebp, [edx+edx]
.text:00409E09                 cmp     ebp, 10000h
.text:00409E0F                 mov     [esi+4], ebp
.text:00409E12                 jbe     short loc_409E1B
.text:00409E14                 mov     dword ptr [esi+4], 10000h
.text:00409E1B
.text:00409E1B loc_409E1B:                             ; CODE XREF: sub_4071F0+2C22↑j
.text:00409E1B                 mov     eax, [esp+97Ch+arg_C]
.text:00409E22                 mov     ebp, 0Ch
.text:00409E27                 mov     esi, [eax+4]
.text:00409E2A                 mov     [esp+97Ch+Size], edi ; Block
.text:00409E2D                 mov     [esp+97Ch+var_978], esi ; Size
.text:00409E31                 call    realloc
.text:00409E36                 mov     edx, [esp+97Ch+arg_C]
.text:00409E3D                 test    eax, eax
.text:00409E3F                 mov     [edx], eax
.text:00409E41                 jz      loc_407606
.text:00409E47                 cmp     ebx, eax
.text:00409E49                 jz      short loc_409E7F
.text:00409E4B                 sub     eax, ebx
.text:00409E4D                 mov     ebx, [esp+97Ch+var_908]
.text:00409E51                 add     [esp+97Ch+var_950], eax
.text:00409E55                 add     [esp+97Ch+var_904], eax
.text:00409E59                 test    ebx, ebx
.text:00409E5B                 jz      short loc_409E61
.text:00409E5D                 add     [esp+97Ch+var_908], eax
.text:00409E61
.text:00409E61 loc_409E61:                             ; CODE XREF: sub_4071F0+2C6B↑j
.text:00409E61                 mov     edi, [esp+97Ch+var_900]
.text:00409E65                 test    edi, edi
.text:00409E67                 jz      short loc_409E6D
.text:00409E69                 add     [esp+97Ch+var_900], eax
.text:00409E6D
.text:00409E6D loc_409E6D:                             ; CODE XREF: sub_4071F0+2C77↑j
.text:00409E6D                 mov     ecx, [esp+97Ch+var_8FC]
.text:00409E74                 test    ecx, ecx
.text:00409E76                 jz      short loc_409E7F
.text:00409E78                 add     [esp+97Ch+var_8FC], eax
.text:00409E7F
.text:00409E7F loc_409E7F:                             ; CODE XREF: sub_4071F0+2C59↑j
.text:00409E7F                                         ; sub_4071F0+2C86↑j
.text:00409E7F                 mov     edx, [esp+97Ch+arg_C]
.text:00409E86                 mov     eax, [esp+97Ch+arg_C]
.text:00409E8D                 mov     ebp, [esp+97Ch+var_950]
.text:00409E91                 mov     edi, [edx]
.text:00409E93                 mov     edx, [eax+4]
.text:00409E96                 sub     ebp, edi
.text:00409E98                 inc     ebp
.text:00409E99                 mov     ebx, edi
.text:00409E9B                 cmp     ebp, edx
.text:00409E9D                 ja      loc_409DEE
.text:00409EA3
.text:00409EA3 loc_409EA3:                             ; CODE XREF: sub_4071F0+2BF8↑j
.text:00409EA3                 mov     edi, [esp+97Ch+var_950]
.text:00409EA7                 mov     byte ptr [edi], 18h
.text:00409EAA                 jmp     loc_40761A
.text:00409EAF ; ---------------------------------------------------------------------------
.text:00409EAF
.text:00409EAF loc_409EAF:                             ; CODE XREF: sub_4071F0+22AD↑j
.text:00409EAF                                         ; DATA XREF: sub_4071F0:jpt_40949D↑o
.text:00409EAF                 mov     ebx, [esp+97Ch+arg_8] ; jumptable 0040949D case 123
.text:00409EB6                 and     ebx, 1200h
.text:00409EBC                 cmp     ebx, 200h
.text:00409EC2                 jnz     def_40949D      ; jumptable 0040949D default case, cases 42,44-48,58,59,61,64,65,67-86,88-95,97,99-118,120-122
.text:00409EC8
.text:00409EC8 loc_409EC8:                             ; CODE XREF: sub_4071F0+329D↓j
.text:00409EC8                 mov     [esp+97Ch+var_934], 0FFFFFFFFh
.text:00409ED0                 mov     edi, [esp+97Ch+var_8D0]
.text:00409ED7                 cmp     edi, [esp+97Ch+var_8F4]
.text:00409EDE                 mov     [esp+97Ch+var_938], 0FFFFFFFFh
.text:00409EE6                 mov     ecx, edi
.text:00409EE8                 jz      loc_409FA9
.text:00409EEE
.text:00409EEE loc_409EEE:                             ; CODE XREF: sub_4071F0+2D74↓j
.text:00409EEE                 movzx   eax, byte ptr [edi]
.text:00409EF1                 inc     edi
.text:00409EF2                 mov     ebp, [esp+97Ch+var_8F8]
.text:00409EF9                 mov     [esp+97Ch+var_8D0], edi
.text:00409F00                 test    ebp, ebp
.text:00409F02                 mov     [esp+97Ch+var_8EC], al
.text:00409F09                 jz      short loc_409F20
.text:00409F0B                 mov     ebp, [esp+97Ch+var_8F8]
.text:00409F12                 movzx   esi, al
.text:00409F15                 movzx   ebx, byte ptr [esi+ebp]
.text:00409F19                 mov     [esp+97Ch+var_8EC], bl
.text:00409F20
.text:00409F20 loc_409F20:                             ; CODE XREF: sub_4071F0+2D19↑j
.text:00409F20                 movzx   edx, [esp+97Ch+var_8EC]
.text:00409F28                 sub     dl, 30h ; '0'
.text:00409F2B                 cmp     dl, 9
.text:00409F2E                 ja      short loc_409F66
.text:00409F30                 cmp     [esp+97Ch+var_934], 7FFFh
.text:00409F38                 jg      short loc_409F5D
.text:00409F3A                 movzx   ebp, [esp+97Ch+var_8EC]
.text:00409F42                 mov     edx, [esp+97Ch+var_934]
.text:00409F46                 shr     edx, 1Fh
.text:00409F49                 dec     edx
.text:00409F4A                 and     [esp+97Ch+var_934], edx
.text:00409F4E                 mov     eax, [esp+97Ch+var_934]
.text:00409F52                 lea     esi, [eax+eax*4]
.text:00409F55                 lea     ebx, [ebp+esi*2-30h]
.text:00409F59                 mov     [esp+97Ch+var_934], ebx
.text:00409F5D
.text:00409F5D loc_409F5D:                             ; CODE XREF: sub_4071F0+2D48↑j
.text:00409F5D                 cmp     edi, [esp+97Ch+var_8F4]
.text:00409F64                 jnz     short loc_409EEE
.text:00409F66
.text:00409F66 loc_409F66:                             ; CODE XREF: sub_4071F0+2D3E↑j
.text:00409F66                 cmp     [esp+97Ch+var_8EC], 2Ch ; ','
.text:00409F6E                 jz      loc_40A3B4
.text:00409F74                 mov     ebx, [esp+97Ch+var_934]
.text:00409F78                 mov     [esp+97Ch+var_938], ebx
.text:00409F7C
.text:00409F7C loc_409F7C:                             ; CODE XREF: sub_4071F0+3256↓j
.text:00409F7C                                         ; sub_4071F0+3264↓j
.text:00409F7C                 mov     esi, [esp+97Ch+var_934]
.text:00409F80                 test    esi, esi
.text:00409F82                 js      short loc_409FA9
.text:00409F84                 mov     ebp, [esp+97Ch+var_938]
.text:00409F88                 cmp     [esp+97Ch+var_934], ebp
.text:00409F8C                 jg      short loc_409FA9
.text:00409F8E                 test    [esp+97Ch+arg_8], 1000h
.text:00409F99                 jnz     loc_40A04A
.text:00409F9F                 cmp     [esp+97Ch+var_8EC], 5Ch ; '\'
.text:00409FA7                 jz      short loc_40A006
.text:00409FA9
.text:00409FA9 loc_409FA9:                             ; CODE XREF: sub_4071F0+2CF8↑j
.text:00409FA9                                         ; sub_4071F0+2D92↑j ...
.text:00409FA9                 test    [esp+97Ch+arg_8], 200000h
.text:00409FB4                 jz      short loc_409FDB
.text:00409FB6
.text:00409FB6 loc_409FB6:                             ; CODE XREF: sub_4071F0+31B1↓j
.text:00409FB6                 test    [esp+97Ch+arg_8], 1000h
.text:00409FC1                 mov     [esp+97Ch+var_8D0], ecx
.text:00409FC8                 mov     [esp+97Ch+var_8EC], 7Bh ; '{'
.text:00409FD0                 jz      def_40949D      ; jumptable 0040949D default case, cases 42,44-48,58,59,61,64,65,67-86,88-95,97,99-118,120-122
.text:00409FD6                 jmp     def_40735F      ; jumptable 0040735F default case, cases 11-35,37-39,44,45,47-62,64-90,93,95-122
.text:00409FDB ; ---------------------------------------------------------------------------
.text:00409FDB
.text:00409FDB loc_409FDB:                             ; CODE XREF: sub_4071F0+2DC4↑j
.text:00409FDB                 mov     edi, [esp+97Ch+Block]
.text:00409FE2                 mov     [esp+97Ch+Size], edi ; Block
.text:00409FE5                 call    free
.text:00409FEA                 mov     ebp, [esp+97Ch+var_8F4]
.text:00409FF1                 cmp     [esp+97Ch+var_8D0], ebp
.text:00409FF8                 setnz   cl
.text:00409FFB                 movzx   ebx, cl
.text:00409FFE                 lea     ebp, [ebx+9]
.text:0040A001                 jmp     loc_407606
.text:0040A006 ; ---------------------------------------------------------------------------
.text:0040A006
.text:0040A006 loc_40A006:                             ; CODE XREF: sub_4071F0+2DB7↑j
.text:0040A006                 mov     eax, [esp+97Ch+var_8D0]
.text:0040A00D                 cmp     eax, [esp+97Ch+var_8F4]
.text:0040A014                 jz      short loc_409FA9
.text:0040A016                 movzx   edx, byte ptr [eax]
.text:0040A019                 lea     ebx, [eax+1]
.text:0040A01C                 mov     eax, [esp+97Ch+var_8F8]
.text:0040A023                 mov     [esp+97Ch+var_8D0], ebx
.text:0040A02A                 test    eax, eax
.text:0040A02C                 mov     [esp+97Ch+var_8EC], dl
.text:0040A033                 jz      short loc_40A04A
.text:0040A035                 mov     esi, [esp+97Ch+var_8F8]
.text:0040A03C                 movzx   edi, dl
.text:0040A03F                 movzx   edx, byte ptr [edi+esi]
.text:0040A043                 mov     [esp+97Ch+var_8EC], dl
.text:0040A04A
.text:0040A04A loc_40A04A:                             ; CODE XREF: sub_4071F0+2DA9↑j
.text:0040A04A                                         ; sub_4071F0+2E43↑j
.text:0040A04A                 cmp     [esp+97Ch+var_8EC], 7Dh ; '}'
.text:0040A052                 jnz     loc_409FA9
.text:0040A058                 mov     ebp, [esp+97Ch+var_900]
.text:0040A05C                 test    ebp, ebp
.text:0040A05E                 jz      loc_40A383
.text:0040A064
.text:0040A064 loc_40A064:                             ; CODE XREF: sub_4071F0+31BF↓j
.text:0040A064                 cmp     [esp+97Ch+var_938], 7FFFh
.text:0040A06C                 jg      loc_40A372
.text:0040A072                 mov     eax, [esp+97Ch+var_938]
.text:0040A076                 test    eax, eax
.text:0040A078                 jnz     loc_40A18F
.text:0040A07E                 mov     edx, [esp+97Ch+arg_C]
.text:0040A085                 mov     ebp, [esp+97Ch+arg_C]
.text:0040A08C                 mov     esi, [esp+97Ch+var_950]
.text:0040A090                 mov     edi, [edx]
.text:0040A092                 mov     edx, [ebp+4]
.text:0040A095                 sub     esi, edi
.text:0040A097                 add     esi, 3
.text:0040A09A                 mov     ebx, edi
.text:0040A09C                 cmp     esi, edx
.text:0040A09E                 jbe     loc_40A15B
.text:0040A0A4
.text:0040A0A4 loc_40A0A4:                             ; CODE XREF: sub_4071F0+2F65↓j
.text:0040A0A4                 cmp     edx, 10000h
.text:0040A0AA                 mov     ebp, 0Fh
.text:0040A0AF                 jz      loc_407606
.text:0040A0B5                 mov     esi, [esp+97Ch+arg_C]
.text:0040A0BC                 lea     ecx, [edx+edx]
.text:0040A0BF                 cmp     ecx, 10000h
.text:0040A0C5                 mov     [esi+4], ecx
.text:0040A0C8                 jbe     short loc_40A0D1
.text:0040A0CA                 mov     dword ptr [esi+4], 10000h
.text:0040A0D1
.text:0040A0D1 loc_40A0D1:                             ; CODE XREF: sub_4071F0+2ED8↑j
.text:0040A0D1                 mov     eax, [esp+97Ch+arg_C]
.text:0040A0D8                 mov     ebp, 0Ch
.text:0040A0DD                 mov     esi, [eax+4]
.text:0040A0E0                 mov     [esp+97Ch+Size], edi ; Block
.text:0040A0E3                 mov     [esp+97Ch+var_978], esi ; Size
.text:0040A0E7                 call    realloc
.text:0040A0EC                 mov     edi, [esp+97Ch+arg_C]
.text:0040A0F3                 test    eax, eax
.text:0040A0F5                 mov     [edi], eax
.text:0040A0F7                 jz      loc_407606
.text:0040A0FD                 cmp     ebx, eax
.text:0040A0FF                 jz      short loc_40A135
.text:0040A101                 sub     eax, ebx
.text:0040A103                 mov     ebx, [esp+97Ch+var_908]
.text:0040A107                 add     [esp+97Ch+var_950], eax
.text:0040A10B                 add     [esp+97Ch+var_904], eax
.text:0040A10F                 test    ebx, ebx
.text:0040A111                 jz      short loc_40A117
.text:0040A113                 add     [esp+97Ch+var_908], eax
.text:0040A117
.text:0040A117 loc_40A117:                             ; CODE XREF: sub_4071F0+2F21↑j
.text:0040A117                 mov     edx, [esp+97Ch+var_900]
.text:0040A11B                 test    edx, edx
.text:0040A11D                 jz      short loc_40A123
.text:0040A11F                 add     [esp+97Ch+var_900], eax
.text:0040A123
.text:0040A123 loc_40A123:                             ; CODE XREF: sub_4071F0+2F2D↑j
.text:0040A123                 mov     ebp, [esp+97Ch+var_8FC]
.text:0040A12A                 test    ebp, ebp
.text:0040A12C                 jz      short loc_40A135
.text:0040A12E                 add     [esp+97Ch+var_8FC], eax
.text:0040A135
.text:0040A135 loc_40A135:                             ; CODE XREF: sub_4071F0+2F0F↑j
.text:0040A135                                         ; sub_4071F0+2F3C↑j
.text:0040A135                 mov     esi, [esp+97Ch+arg_C]
.text:0040A13C                 mov     eax, [esp+97Ch+arg_C]
.text:0040A143                 mov     ecx, [esp+97Ch+var_950]
.text:0040A147                 mov     edi, [esi]
.text:0040A149                 mov     edx, [eax+4]
.text:0040A14C                 sub     ecx, edi
.text:0040A14E                 add     ecx, 3
.text:0040A151                 mov     ebx, edi
.text:0040A153                 cmp     ecx, edx
.text:0040A155                 ja      loc_40A0A4
.text:0040A15B
.text:0040A15B loc_40A15B:                             ; CODE XREF: sub_4071F0+2EAE↑j
.text:0040A15B                 mov     [esp+97Ch+Size], 0Dh
.text:0040A162                 mov     ebx, [esp+97Ch+var_950]
.text:0040A166                 mov     ebp, [esp+97Ch+var_900]
.text:0040A16A                 mov     edi, [esp+97Ch+var_900]
.text:0040A16E                 mov     edx, ebx
.text:0040A170                 sub     edx, ebp
.text:0040A172                 mov     [esp+97Ch+var_970], ebx
.text:0040A176                 add     ebx, 3
.text:0040A179                 mov     [esp+97Ch+var_974], edx
.text:0040A17D                 mov     [esp+97Ch+var_978], edi
.text:0040A181                 call    sub_404010
.text:0040A186                 mov     [esp+97Ch+var_950], ebx
.text:0040A18A                 jmp     loc_407F38
.text:0040A18F ; ---------------------------------------------------------------------------
.text:0040A18F
.text:0040A18F loc_40A18F:                             ; CODE XREF: sub_4071F0+2E88↑j
.text:0040A18F                 cmp     [esp+97Ch+var_938], 1
.text:0040A194                 mov     [esp+97Ch+var_93C], 14h
.text:0040A19C                 jg      loc_40A25A
.text:0040A1A2                 mov     [esp+97Ch+var_93C], 0Ah
.text:0040A1AA                 mov     ecx, [esp+97Ch+arg_C]
.text:0040A1B1                 mov     eax, [esp+97Ch+var_950]
.text:0040A1B5                 mov     edi, [ecx]
.text:0040A1B7                 mov     edx, [ecx+4]
.text:0040A1BA                 sub     eax, edi
.text:0040A1BC                 mov     ebx, edi
.text:0040A1BE                 add     eax, 0Ah
.text:0040A1C1
.text:0040A1C1 loc_40A1C1:                             ; CODE XREF: sub_4071F0+308B↓j
.text:0040A1C1                 cmp     eax, edx
.text:0040A1C3                 jbe     loc_40A280
.text:0040A1C9                 cmp     edx, 10000h
.text:0040A1CF                 mov     ebp, 0Fh
.text:0040A1D4                 jz      loc_407606
.text:0040A1DA                 mov     esi, [esp+97Ch+arg_C]
.text:0040A1E1                 lea     ebp, [edx+edx]
.text:0040A1E4                 cmp     ebp, 10000h
.text:0040A1EA                 mov     [esi+4], ebp
.text:0040A1ED                 jbe     short loc_40A1F6
.text:0040A1EF                 mov     dword ptr [esi+4], 10000h
.text:0040A1F6
.text:0040A1F6 loc_40A1F6:                             ; CODE XREF: sub_4071F0+2FFD↑j
.text:0040A1F6                 mov     eax, [esp+97Ch+arg_C]
.text:0040A1FD                 mov     ebp, 0Ch
.text:0040A202                 mov     esi, [eax+4]
.text:0040A205                 mov     [esp+97Ch+Size], edi ; Block
.text:0040A208                 mov     [esp+97Ch+var_978], esi ; Size
.text:0040A20C                 call    realloc
.text:0040A211                 mov     edi, [esp+97Ch+arg_C]
.text:0040A218                 test    eax, eax
.text:0040A21A                 mov     [edi], eax
.text:0040A21C                 jz      loc_407606
.text:0040A222                 cmp     ebx, eax
.text:0040A224                 jz      short loc_40A25A
.text:0040A226                 mov     edx, [esp+97Ch+var_908]
.text:0040A22A                 sub     eax, ebx
.text:0040A22C                 add     [esp+97Ch+var_950], eax
.text:0040A230                 add     [esp+97Ch+var_904], eax
.text:0040A234                 test    edx, edx
.text:0040A236                 jz      short loc_40A23C
.text:0040A238                 add     [esp+97Ch+var_908], eax
.text:0040A23C
.text:0040A23C loc_40A23C:                             ; CODE XREF: sub_4071F0+3046↑j
.text:0040A23C                 mov     ebx, [esp+97Ch+var_900]
.text:0040A240                 test    ebx, ebx
.text:0040A242                 jz      short loc_40A248
.text:0040A244                 add     [esp+97Ch+var_900], eax
.text:0040A248
.text:0040A248 loc_40A248:                             ; CODE XREF: sub_4071F0+3052↑j
.text:0040A248                 mov     ecx, [esp+97Ch+var_8FC]
.text:0040A24F                 test    ecx, ecx
.text:0040A251                 jz      short loc_40A25A
.text:0040A253                 add     [esp+97Ch+var_8FC], eax
.text:0040A25A
.text:0040A25A loc_40A25A:                             ; CODE XREF: sub_4071F0+2FAC↑j
.text:0040A25A                                         ; sub_4071F0+3034↑j ...
.text:0040A25A                 mov     eax, [esp+97Ch+arg_C]
.text:0040A261                 mov     ebp, [esp+97Ch+arg_C]
.text:0040A268                 mov     esi, [esp+97Ch+var_93C]
.text:0040A26C                 mov     edi, [eax]
.text:0040A26E                 mov     eax, [esp+97Ch+var_950]
.text:0040A272                 mov     edx, [ebp+4]
.text:0040A275                 mov     ebx, edi
.text:0040A277                 sub     eax, edi
.text:0040A279                 add     eax, esi
.text:0040A27B                 jmp     loc_40A1C1
.text:0040A280 ; ---------------------------------------------------------------------------
.text:0040A280
.text:0040A280 loc_40A280:                             ; CODE XREF: sub_4071F0+2FD3↑j
.text:0040A280                 mov     edi, [esp+97Ch+var_950]
.text:0040A284                 mov     edx, [esp+97Ch+var_934]
.text:0040A288                 mov     [esp+97Ch+var_96C], edi
.text:0040A28C                 add     edi, 5
.text:0040A28F                 cmp     [esp+97Ch+var_938], 1
.text:0040A294                 mov     [esp+97Ch+var_970], edx
.text:0040A298                 jle     loc_40A362
.text:0040A29E                 mov     ebx, [esp+97Ch+var_900]
.text:0040A2A2                 mov     eax, edi
.text:0040A2A4                 sub     eax, ebx
.text:0040A2A6                 add     eax, 2
.text:0040A2A9
.text:0040A2A9 loc_40A2A9:                             ; CODE XREF: sub_4071F0+317D↓j
.text:0040A2A9                 mov     [esp+97Ch+var_974], eax
.text:0040A2AD                 mov     esi, [esp+97Ch+var_900]
.text:0040A2B1                 mov     [esp+97Ch+Size], 15h
.text:0040A2B8                 mov     [esp+97Ch+var_978], esi
.text:0040A2BC                 call    sub_404050
.text:0040A2C1                 mov     [esp+97Ch+var_950], edi
.text:0040A2C5                 mov     ebp, [esp+97Ch+var_934]
.text:0040A2C9                 mov     [esp+97Ch+var_96C], edi
.text:0040A2CD                 mov     edi, [esp+97Ch+var_900]
.text:0040A2D1                 mov     [esp+97Ch+var_970], ebp
.text:0040A2D5                 mov     [esp+97Ch+var_974], 5
.text:0040A2DD                 mov     [esp+97Ch+var_978], edi
.text:0040A2E1                 mov     [esp+97Ch+Size], 17h
.text:0040A2E8                 call    sub_404050
.text:0040A2ED                 add     [esp+97Ch+var_950], 5
.text:0040A2F2                 cmp     [esp+97Ch+var_938], 1
.text:0040A2F7                 jle     loc_407F38
.text:0040A2FD                 mov     [esp+97Ch+Size], 16h
.text:0040A304                 mov     edx, [esp+97Ch+var_900]
.text:0040A308                 mov     esi, [esp+97Ch+var_950]
.text:0040A30C                 mov     edi, [esp+97Ch+var_938]
.text:0040A310                 mov     ebp, [esp+97Ch+var_950]
.text:0040A314                 sub     edx, esi
.text:0040A316                 add     edx, 2
.text:0040A319                 dec     edi
.text:0040A31A                 mov     [esp+97Ch+var_974], edx
.text:0040A31E                 mov     [esp+97Ch+var_978], ebp
.text:0040A322                 add     ebp, 5
.text:0040A325                 mov     ebx, ebp
.text:0040A327                 mov     [esp+97Ch+var_970], edi
.text:0040A32B                 call    sub_403FE0
.text:0040A330                 mov     [esp+97Ch+var_96C], ebp
.text:0040A334                 mov     ecx, [esp+97Ch+var_900]
.text:0040A338                 add     ebp, 5
.text:0040A33B                 mov     [esp+97Ch+var_970], edi
.text:0040A33F                 mov     eax, [esp+97Ch+var_900]
.text:0040A343                 mov     [esp+97Ch+Size], 17h
.text:0040A34A                 sub     ebx, ecx
.text:0040A34C                 mov     [esp+97Ch+var_974], ebx
.text:0040A350                 mov     [esp+97Ch+var_978], eax
.text:0040A354                 call    sub_404050
.text:0040A359                 mov     [esp+97Ch+var_950], ebp
.text:0040A35D                 jmp     loc_407F38
.text:0040A362 ; ---------------------------------------------------------------------------
.text:0040A362
.text:0040A362 loc_40A362:                             ; CODE XREF: sub_4071F0+30A8↑j
.text:0040A362                 mov     ecx, [esp+97Ch+var_900]
.text:0040A366                 mov     eax, edi
.text:0040A368                 sub     eax, ecx
.text:0040A36A                 sub     eax, 3
.text:0040A36D                 jmp     loc_40A2A9
.text:0040A372 ; ---------------------------------------------------------------------------
.text:0040A372
.text:0040A372 loc_40A372:                             ; CODE XREF: sub_4071F0+2E7C↑j
.text:0040A372                 mov     esi, [esp+97Ch+Block]
.text:0040A379                 mov     ebp, 0Ah
.text:0040A37E                 jmp     loc_4092F3
.text:0040A383 ; ---------------------------------------------------------------------------
.text:0040A383
.text:0040A383 loc_40A383:                             ; CODE XREF: sub_4071F0+2E6E↑j
.text:0040A383                 mov     ebx, [esp+97Ch+arg_8]
.text:0040A38A                 and     ebx, 200020h
.text:0040A390                 cmp     ebx, 20h ; ' '
.text:0040A393                 jz      loc_4087CE
.text:0040A399                 test    byte ptr [esp+97Ch+arg_8], 10h
.text:0040A3A1                 jz      loc_409FB6
.text:0040A3A7                 mov     ecx, [esp+97Ch+var_950]
.text:0040A3AB                 mov     [esp+97Ch+var_900], ecx
.text:0040A3AF                 jmp     loc_40A064
.text:0040A3B4 ; ---------------------------------------------------------------------------
.text:0040A3B4
.text:0040A3B4 loc_40A3B4:                             ; CODE XREF: sub_4071F0+2D7E↑j
.text:0040A3B4                 mov     edi, [esp+97Ch+var_8D0]
.text:0040A3BB                 cmp     edi, [esp+97Ch+var_8F4]
.text:0040A3C2                 jz      loc_40A44C
.text:0040A3C8
.text:0040A3C8 loc_40A3C8:                             ; CODE XREF: sub_4071F0+324E↓j
.text:0040A3C8                 movzx   eax, byte ptr [edi]
.text:0040A3CB                 inc     edi
.text:0040A3CC                 mov     ebx, [esp+97Ch+var_8F8]
.text:0040A3D3                 mov     [esp+97Ch+var_8D0], edi
.text:0040A3DA                 test    ebx, ebx
.text:0040A3DC                 mov     [esp+97Ch+var_8EC], al
.text:0040A3E3                 jz      short loc_40A3FA
.text:0040A3E5                 mov     ebp, [esp+97Ch+var_8F8]
.text:0040A3EC                 movzx   esi, al
.text:0040A3EF                 movzx   ebx, byte ptr [esi+ebp]
.text:0040A3F3                 mov     [esp+97Ch+var_8EC], bl
.text:0040A3FA
.text:0040A3FA loc_40A3FA:                             ; CODE XREF: sub_4071F0+31F3↑j
.text:0040A3FA                 movzx   edx, [esp+97Ch+var_8EC]
.text:0040A402                 sub     dl, 30h ; '0'
.text:0040A405                 cmp     dl, 9
.text:0040A408                 ja      short loc_40A440
.text:0040A40A                 cmp     [esp+97Ch+var_938], 7FFFh
.text:0040A412                 jg      short loc_40A437
.text:0040A414                 movzx   ebp, [esp+97Ch+var_8EC]
.text:0040A41C                 mov     edx, [esp+97Ch+var_938]
.text:0040A420                 shr     edx, 1Fh
.text:0040A423                 dec     edx
.text:0040A424                 and     [esp+97Ch+var_938], edx
.text:0040A428                 mov     eax, [esp+97Ch+var_938]
.text:0040A42C                 lea     esi, [eax+eax*4]
.text:0040A42F                 lea     ebx, [ebp+esi*2-30h]
.text:0040A433                 mov     [esp+97Ch+var_938], ebx
.text:0040A437
.text:0040A437 loc_40A437:                             ; CODE XREF: sub_4071F0+3222↑j
.text:0040A437                 cmp     edi, [esp+97Ch+var_8F4]
.text:0040A43E                 jnz     short loc_40A3C8
.text:0040A440
.text:0040A440 loc_40A440:                             ; CODE XREF: sub_4071F0+3218↑j
.text:0040A440                 mov     edi, [esp+97Ch+var_938]
.text:0040A444                 test    edi, edi
.text:0040A446                 jns     loc_409F7C
.text:0040A44C
.text:0040A44C loc_40A44C:                             ; CODE XREF: sub_4071F0+31D2↑j
.text:0040A44C                 mov     [esp+97Ch+var_938], 7FFFh
.text:0040A454                 jmp     loc_409F7C
.text:0040A459 ; ---------------------------------------------------------------------------
.text:0040A459
.text:0040A459 loc_40A459:                             ; CODE XREF: sub_4071F0+22AD↑j
.text:0040A459                                         ; DATA XREF: sub_4071F0:jpt_40949D↑o
.text:0040A459                 mov     edi, [esp+97Ch+arg_8] ; jumptable 0040949D case 124
.text:0040A460                 and     edi, 0FFFF8400h
.text:0040A466                 test    di, di
.text:0040A469                 jz      loc_407A66
.text:0040A46F                 jmp     def_40949D      ; jumptable 0040949D default case, cases 42,44-48,58,59,61,64,65,67-86,88-95,97,99-118,120-122
.text:0040A474 ; ---------------------------------------------------------------------------
.text:0040A474
.text:0040A474 loc_40A474:                             ; CODE XREF: sub_4071F0+16F↑j
.text:0040A474                                         ; DATA XREF: sub_4071F0:jpt_40735F↑o
.text:0040A474                 mov     edx, [esp+97Ch+arg_8] ; jumptable 0040735F case 123
.text:0040A47B                 and     edx, 1200h
.text:0040A481                 cmp     edx, 1200h
.text:0040A487                 jnz     def_40735F      ; jumptable 0040735F default case, cases 11-35,37-39,44,45,47-62,64-90,93,95-122
.text:0040A48D                 jmp     loc_409EC8
.text:0040A492 ; ---------------------------------------------------------------------------
.text:0040A492
.text:0040A492 loc_40A492:                             ; CODE XREF: sub_4071F0+16F↑j
.text:0040A492                                         ; DATA XREF: sub_4071F0:jpt_40735F↑o
.text:0040A492                 mov     esi, [esp+97Ch+arg_8] ; jumptable 0040735F case 124
.text:0040A499                 and     esi, 0FFFF8000h
.text:0040A49F                 test    si, si
.text:0040A4A2                 jmp     loc_407A60
.text:0040A4A7 ; ---------------------------------------------------------------------------
.text:0040A4A7
.text:0040A4A7 loc_40A4A7:                             ; CODE XREF: sub_4071F0+F9↑j
.text:0040A4A7                 mov     edi, [esp+97Ch+Block]
.text:0040A4AE                 mov     ebp, 0Ch
.text:0040A4B3                 jmp     loc_407790
.text:0040A4B8 ; ---------------------------------------------------------------------------
.text:0040A4B8
.text:0040A4B8 loc_40A4B8:                             ; CODE XREF: sub_4071F0+D6↑j
.text:0040A4B8                 mov     [esp+97Ch+Size], 20h ; ' ' ; Size
.text:0040A4BF                 call    malloc
.text:0040A4C4                 mov     ecx, [esp+97Ch+arg_C]
.text:0040A4CB                 mov     [ecx], eax
.text:0040A4CD                 jmp     loc_4072DE
.text:0040A4D2 ; ---------------------------------------------------------------------------
.text:0040A4D2
.text:0040A4D2 loc_40A4D2:                             ; CODE XREF: sub_4071F0+CC↑j
.text:0040A4D2                 mov     ebp, [esp+97Ch+arg_C]
.text:0040A4D9                 mov     edi, [ebp+0]
.text:0040A4DC                 jmp     loc_4072FD
.text:0040A4E1 ; ---------------------------------------------------------------------------
.text:0040A4E1
.text:0040A4E1 loc_40A4E1:                             ; CODE XREF: sub_4071F0+BA↑j
.text:0040A4E1                 mov     [esp+97Ch+var_974], 100h ; Size
.text:0040A4E9                 xor     ebx, ebx
.text:0040A4EB                 mov     [esp+97Ch+var_978], 0 ; Val
.text:0040A4F3                 mov     [esp+97Ch+Size], offset byte_413190 ; void *
.text:0040A4FA                 call    memset
.text:0040A4FF                 nop
.text:0040A500
.text:0040A500 loc_40A500:                             ; CODE XREF: sub_4071F0+333D↓j
.text:0040A500                 mov     esi, ds:__mb_cur_max
.text:0040A506                 cmp     dword ptr [esi], 1
.text:0040A509                 jz      short loc_40A546
.text:0040A50B                 mov     [esp+97Ch+var_978], 107h ; Type
.text:0040A513                 mov     [esp+97Ch+Size], ebx ; C
.text:0040A516                 call    _isctype
.text:0040A51B
.text:0040A51B loc_40A51B:                             ; CODE XREF: sub_4071F0+3368↓j
.text:0040A51B                 test    eax, eax
.text:0040A51D                 jz      short loc_40A526
.text:0040A51F                 mov     ds:byte_413190[ebx], 1
.text:0040A526
.text:0040A526 loc_40A526:                             ; CODE XREF: sub_4071F0+332D↑j
.text:0040A526                 inc     ebx
.text:0040A527                 cmp     ebx, 0FFh
.text:0040A52D                 jle     short loc_40A500
.text:0040A52F                 mov     ds:byte_4131EF, 1
.text:0040A536                 mov     ebx, 1
.text:0040A53B                 mov     ds:dword_413180, ebx
.text:0040A541                 jmp     loc_4072B0
.text:0040A546 ; ---------------------------------------------------------------------------
.text:0040A546
.text:0040A546 loc_40A546:                             ; CODE XREF: sub_4071F0+3319↑j
.text:0040A546                 mov     ebp, ds:_pctype
.text:0040A54C                 mov     edi, [ebp+0]
.text:0040A54F                 movzx   eax, word ptr [edi+ebx*2]
.text:0040A553                 and     eax, 107h
.text:0040A558                 jmp     short loc_40A51B
.text:0040A558 sub_4071F0      endp
.text:0040A558
.text:0040A558 ; ---------------------------------------------------------------------------
.text:0040A55A                 align 10h
.text:0040A560
.text:0040A560 ; =============== S U B R O U T I N E =======================================
.text:0040A560
.text:0040A560
.text:0040A560 sub_40A560      proc near               ; CODE XREF: .text:00406EA5↑p
.text:0040A560                                         ; sub_406FA0+46↑p ...
.text:0040A560
.text:0040A560 var_4C          = dword ptr -4Ch
.text:0040A560 var_48          = dword ptr -48h
.text:0040A560 var_44          = dword ptr -44h
.text:0040A560 var_40          = dword ptr -40h
.text:0040A560 var_3C          = dword ptr -3Ch
.text:0040A560 var_38          = dword ptr -38h
.text:0040A560 var_34          = dword ptr -34h
.text:0040A560 var_30          = dword ptr -30h
.text:0040A560 var_20          = dword ptr -20h
.text:0040A560 var_1C          = dword ptr -1Ch
.text:0040A560 var_18          = dword ptr -18h
.text:0040A560 var_14          = dword ptr -14h
.text:0040A560 arg_0           = dword ptr  4
.text:0040A560 arg_4           = dword ptr  8
.text:0040A560 arg_8           = dword ptr  0Ch
.text:0040A560 arg_C           = dword ptr  10h
.text:0040A560 arg_10          = dword ptr  14h
.text:0040A560 arg_14          = dword ptr  18h
.text:0040A560 arg_18          = dword ptr  1Ch
.text:0040A560 arg_1C          = dword ptr  20h
.text:0040A560 arg_20          = dword ptr  24h
.text:0040A560
.text:0040A560                 push    ebp
.text:0040A561                 push    edi
.text:0040A562                 push    esi
.text:0040A563                 push    ebx
.text:0040A564                 sub     esp, 3Ch
.text:0040A567                 mov     edi, [esp+4Ch+arg_0]
.text:0040A56B                 mov     ebx, [esp+4Ch+arg_14]
.text:0040A56F                 mov     ecx, [esp+4Ch+arg_10]
.text:0040A573                 mov     edx, [edi+14h]
.text:0040A576                 mov     esi, [esp+4Ch+arg_18]
.text:0040A57A                 mov     ebp, [edi+10h]
.text:0040A57D                 mov     [esp+4Ch+var_14], edx
.text:0040A581                 mov     edx, [esp+4Ch+arg_8]
.text:0040A585                 lea     eax, [esi+ebx]
.text:0040A588                 add     edx, ecx
.text:0040A58A                 test    ebx, ebx
.text:0040A58C                 mov     [esp+4Ch+var_18], edx
.text:0040A590                 js      loc_40A730
.text:0040A596                 cmp     ebx, edx
.text:0040A598                 jg      loc_40A730
.text:0040A59E                 test    eax, eax
.text:0040A5A0                 js      loc_40A7F1
.text:0040A5A6                 cmp     eax, [esp+4Ch+var_18]
.text:0040A5AA                 jle     short loc_40A5B2
.text:0040A5AC                 mov     esi, [esp+4Ch+var_18]
.text:0040A5B0                 sub     esi, ebx
.text:0040A5B2
.text:0040A5B2 loc_40A5B2:                             ; CODE XREF: sub_40A560+4A↑j
.text:0040A5B2                                         ; sub_40A560+295↓j
.text:0040A5B2                 mov     eax, [edi+8]
.text:0040A5B5                 test    eax, eax
.text:0040A5B7                 jz      short loc_40A5E0
.text:0040A5B9                 test    esi, esi
.text:0040A5BB                 jle     short loc_40A5E0
.text:0040A5BD                 mov     ecx, [edi]
.text:0040A5BF                 movzx   eax, byte ptr [ecx]
.text:0040A5C2                 cmp     al, 0Bh
.text:0040A5C4                 jz      loc_40A7DA
.text:0040A5CA                 cmp     al, 9
.text:0040A5CC                 jz      loc_40A7D0
.text:0040A5D2                 lea     esi, [esi+0]
.text:0040A5D9                 lea     edi, [edi+0]
.text:0040A5E0
.text:0040A5E0 loc_40A5E0:                             ; CODE XREF: sub_40A560+57↑j
.text:0040A5E0                                         ; sub_40A560+5B↑j ...
.text:0040A5E0                 test    ebp, ebp
.text:0040A5E2                 jz      loc_40A6A0
.text:0040A5E8                 test    byte ptr [edi+1Ch], 8
.text:0040A5EC                 jz      loc_40A7B5
.text:0040A5F2
.text:0040A5F2 loc_40A5F2:                             ; CODE XREF: sub_40A560+1AF↓j
.text:0040A5F2                                         ; sub_40A560+1B6↓j ...
.text:0040A5F2                 test    ebp, ebp
.text:0040A5F4                 jz      loc_40A6A0
.text:0040A5FA                 cmp     ebx, [esp+4Ch+var_18]
.text:0040A5FE                 jge     loc_40A6A0
.text:0040A604                 test    byte ptr [edi+1Ch], 1
.text:0040A608                 jnz     loc_40A6A0
.text:0040A60E                 test    esi, esi
.text:0040A610                 jle     loc_40A764
.text:0040A616                 cmp     ebx, [esp+4Ch+arg_8]
.text:0040A61A                 mov     [esp+4Ch+var_20], 0
.text:0040A622                 mov     [esp+4Ch+var_1C], esi
.text:0040A626                 jge     loc_40A752
.text:0040A62C                 lea     edx, [esi+ebx]
.text:0040A62F                 cmp     edx, [esp+4Ch+arg_8]
.text:0040A633                 jl      short loc_40A643
.text:0040A635                 mov     ecx, [esp+4Ch+arg_8]
.text:0040A639                 mov     edx, esi
.text:0040A63B                 sub     ecx, ebx
.text:0040A63D                 sub     edx, ecx
.text:0040A63F                 mov     [esp+4Ch+var_20], edx
.text:0040A643
.text:0040A643 loc_40A643:                             ; CODE XREF: sub_40A560+D3↑j
.text:0040A643                 mov     edx, [esp+4Ch+arg_4]
.text:0040A647                 add     edx, ebx
.text:0040A649
.text:0040A649 loc_40A649:                             ; CODE XREF: sub_40A560+1FF↓j
.text:0040A649                 mov     ecx, [esp+4Ch+var_14]
.text:0040A64D                 test    ecx, ecx
.text:0040A64F                 jz      loc_40A737
.text:0040A655                 cmp     esi, [esp+4Ch+var_20]
.text:0040A659                 jle     short loc_40A689
.text:0040A65B                 movzx   eax, byte ptr [edx]
.text:0040A65E                 inc     edx
.text:0040A65F                 mov     ecx, [esp+4Ch+var_14]
.text:0040A663                 movzx   ecx, byte ptr [eax+ecx]
.text:0040A667                 cmp     byte ptr [ecx+ebp], 0
.text:0040A66B                 jnz     short loc_40A689
.text:0040A66D                 lea     esi, [esi+0]
.text:0040A670
.text:0040A670 loc_40A670:                             ; CODE XREF: sub_40A560+127↓j
.text:0040A670                 dec     esi
.text:0040A671                 cmp     esi, [esp+4Ch+var_20]
.text:0040A675                 jle     short loc_40A689
.text:0040A677                 movzx   eax, byte ptr [edx]
.text:0040A67A                 inc     edx
.text:0040A67B                 mov     ecx, [esp+4Ch+var_14]
.text:0040A67F                 movzx   eax, byte ptr [eax+ecx]
.text:0040A683                 cmp     byte ptr [eax+ebp], 0
.text:0040A687                 jz      short loc_40A670
.text:0040A689
.text:0040A689 loc_40A689:                             ; CODE XREF: sub_40A560+F9↑j
.text:0040A689                                         ; sub_40A560+10B↑j ...
.text:0040A689                 sub     [esp+4Ch+var_1C], esi
.text:0040A68D                 mov     edx, [esp+4Ch+var_1C]
.text:0040A691                 add     ebx, edx
.text:0040A693                 lea     esi, [esi+0]
.text:0040A699                 lea     edi, [edi+0]
.text:0040A6A0
.text:0040A6A0 loc_40A6A0:                             ; CODE XREF: sub_40A560+82↑j
.text:0040A6A0                                         ; sub_40A560+94↑j ...
.text:0040A6A0                 test    esi, esi
.text:0040A6A2                 js      short loc_40A6AA
.text:0040A6A4                 cmp     ebx, [esp+4Ch+var_18]
.text:0040A6A8                 jz      short loc_40A720
.text:0040A6AA
.text:0040A6AA loc_40A6AA:                             ; CODE XREF: sub_40A560+142↑j
.text:0040A6AA                                         ; sub_40A560+1C2↓j ...
.text:0040A6AA                 mov     [esp+4Ch+var_38], ebx
.text:0040A6AE                 mov     edx, [esp+4Ch+arg_20]
.text:0040A6B2                 mov     ecx, [esp+4Ch+arg_1C]
.text:0040A6B6                 mov     [esp+4Ch+var_4C], edi
.text:0040A6B9                 mov     eax, [esp+4Ch+arg_10]
.text:0040A6BD                 mov     [esp+4Ch+var_30], edx
.text:0040A6C1                 mov     edx, [esp+4Ch+arg_C]
.text:0040A6C5                 mov     [esp+4Ch+var_34], ecx
.text:0040A6C9                 mov     ecx, [esp+4Ch+arg_8]
.text:0040A6CD                 mov     [esp+4Ch+var_3C], eax
.text:0040A6D1                 mov     eax, [esp+4Ch+arg_4]
.text:0040A6D5                 mov     [esp+4Ch+var_40], edx
.text:0040A6D9                 mov     [esp+4Ch+var_44], ecx
.text:0040A6DD                 mov     [esp+4Ch+var_48], eax
.text:0040A6E1                 call    sub_4042E0
.text:0040A6E6                 test    eax, eax
.text:0040A6E8                 mov     edx, ebx
.text:0040A6EA                 js      short loc_40A6F6
.text:0040A6EC
.text:0040A6EC loc_40A6EC:                             ; CODE XREF: sub_40A560+19E↓j
.text:0040A6EC                                         ; sub_40A560+1A7↓j ...
.text:0040A6EC                 add     esp, 3Ch
.text:0040A6EF                 mov     eax, edx
.text:0040A6F1                 pop     ebx
.text:0040A6F2                 pop     esi
.text:0040A6F3                 pop     edi
.text:0040A6F4                 pop     ebp
.text:0040A6F5                 retn
.text:0040A6F6 ; ---------------------------------------------------------------------------
.text:0040A6F6
.text:0040A6F6 loc_40A6F6:                             ; CODE XREF: sub_40A560+18A↑j
.text:0040A6F6                 cmp     eax, 0FFFFFFFEh
.text:0040A6F9                 mov     edx, 0FFFFFFFEh
.text:0040A6FE                 jz      short loc_40A6EC
.text:0040A700
.text:0040A700 loc_40A700:                             ; CODE XREF: sub_40A560+241↓j
.text:0040A700                 test    esi, esi
.text:0040A702                 mov     edx, 0FFFFFFFFh
.text:0040A707                 jz      short loc_40A6EC
.text:0040A709                 test    esi, esi
.text:0040A70B                 jle     short loc_40A714
.text:0040A70D                 dec     esi
.text:0040A70E                 inc     ebx
.text:0040A70F                 jmp     loc_40A5F2
.text:0040A714 ; ---------------------------------------------------------------------------
.text:0040A714
.text:0040A714 loc_40A714:                             ; CODE XREF: sub_40A560+1AB↑j
.text:0040A714                 inc     esi
.text:0040A715                 dec     ebx
.text:0040A716                 jmp     loc_40A5F2
.text:0040A716 ; ---------------------------------------------------------------------------
.text:0040A71B                 align 10h
.text:0040A720
.text:0040A720 loc_40A720:                             ; CODE XREF: sub_40A560+148↑j
.text:0040A720                 test    ebp, ebp
.text:0040A722                 jz      short loc_40A6AA
.text:0040A724                 test    byte ptr [edi+1Ch], 1
.text:0040A728                 jnz     short loc_40A6AA
.text:0040A72A                 lea     esi, [esi+0]
.text:0040A730
.text:0040A730 loc_40A730:                             ; CODE XREF: sub_40A560+30↑j
.text:0040A730                                         ; sub_40A560+38↑j
.text:0040A730                 mov     edx, 0FFFFFFFFh
.text:0040A735                 jmp     short loc_40A6EC
.text:0040A737 ; ---------------------------------------------------------------------------
.text:0040A737
.text:0040A737 loc_40A737:                             ; CODE XREF: sub_40A560+EF↑j
.text:0040A737                                         ; sub_40A560+1F0↓j
.text:0040A737                 cmp     esi, [esp+4Ch+var_20]
.text:0040A73B                 jle     loc_40A689
.text:0040A741                 movzx   ecx, byte ptr [edx]
.text:0040A744                 inc     edx
.text:0040A745                 cmp     byte ptr [ecx+ebp], 0
.text:0040A749                 jnz     loc_40A689
.text:0040A74F                 dec     esi
.text:0040A750                 jmp     short loc_40A737
.text:0040A752 ; ---------------------------------------------------------------------------
.text:0040A752
.text:0040A752 loc_40A752:                             ; CODE XREF: sub_40A560+C6↑j
.text:0040A752                 mov     ecx, [esp+4Ch+arg_C]
.text:0040A756                 mov     eax, [esp+4Ch+arg_8]
.text:0040A75A                 sub     ecx, eax
.text:0040A75C                 lea     edx, [ebx+ecx]
.text:0040A75F                 jmp     loc_40A649
.text:0040A764 ; ---------------------------------------------------------------------------
.text:0040A764
.text:0040A764 loc_40A764:                             ; CODE XREF: sub_40A560+B0↑j
.text:0040A764                 mov     ecx, [esp+4Ch+arg_8]
.text:0040A768                 test    ecx, ecx
.text:0040A76A                 jz      short loc_40A772
.text:0040A76C                 cmp     ebx, [esp+4Ch+arg_8]
.text:0040A770                 jl      short loc_40A7AB
.text:0040A772
.text:0040A772 loc_40A772:                             ; CODE XREF: sub_40A560+20A↑j
.text:0040A772                 mov     edx, [esp+4Ch+arg_8]
.text:0040A776                 mov     eax, ebx
.text:0040A778                 mov     ecx, [esp+4Ch+arg_C]
.text:0040A77C                 sub     eax, edx
.text:0040A77E                 movzx   eax, byte ptr [eax+ecx]
.text:0040A782
.text:0040A782 loc_40A782:                             ; CODE XREF: sub_40A560+253↓j
.text:0040A782                 mov     ecx, [esp+4Ch+var_14]
.text:0040A786                 test    ecx, ecx
.text:0040A788                 jz      short loc_40A7A6
.text:0040A78A                 mov     edx, [esp+4Ch+var_14]
.text:0040A78E                 movzx   ecx, al
.text:0040A791                 movzx   eax, byte ptr [ecx+edx]
.text:0040A795
.text:0040A795 loc_40A795:                             ; CODE XREF: sub_40A560+249↓j
.text:0040A795                 lea     edx, [eax+ebp]
.text:0040A798                 cmp     byte ptr [edx], 0
.text:0040A79B                 jnz     loc_40A6A0
.text:0040A7A1                 jmp     loc_40A700
.text:0040A7A6 ; ---------------------------------------------------------------------------
.text:0040A7A6
.text:0040A7A6 loc_40A7A6:                             ; CODE XREF: sub_40A560+228↑j
.text:0040A7A6                 movzx   eax, al
.text:0040A7A9                 jmp     short loc_40A795
.text:0040A7AB ; ---------------------------------------------------------------------------
.text:0040A7AB
.text:0040A7AB loc_40A7AB:                             ; CODE XREF: sub_40A560+210↑j
.text:0040A7AB                 mov     edx, [esp+4Ch+arg_4]
.text:0040A7AF                 movzx   eax, byte ptr [ebx+edx]
.text:0040A7B3                 jmp     short loc_40A782
.text:0040A7B5 ; ---------------------------------------------------------------------------
.text:0040A7B5
.text:0040A7B5 loc_40A7B5:                             ; CODE XREF: sub_40A560+8C↑j
.text:0040A7B5                 mov     [esp+4Ch+var_4C], edi
.text:0040A7B8                 call    sub_406C10
.text:0040A7BD                 cmp     eax, 0FFFFFFFEh
.text:0040A7C0                 mov     edx, 0FFFFFFFEh
.text:0040A7C5                 jnz     loc_40A5F2
.text:0040A7CB                 jmp     loc_40A6EC
.text:0040A7D0 ; ---------------------------------------------------------------------------
.text:0040A7D0
.text:0040A7D0 loc_40A7D0:                             ; CODE XREF: sub_40A560+6C↑j
.text:0040A7D0                 test    byte ptr [edi+1Ch], 80h
.text:0040A7D4                 jnz     loc_40A5E0
.text:0040A7DA
.text:0040A7DA loc_40A7DA:                             ; CODE XREF: sub_40A560+64↑j
.text:0040A7DA                 test    ebx, ebx
.text:0040A7DC                 mov     edx, 0FFFFFFFFh
.text:0040A7E1                 jg      loc_40A6EC
.text:0040A7E7                 mov     esi, 1
.text:0040A7EC                 jmp     loc_40A5E0
.text:0040A7F1 ; ---------------------------------------------------------------------------
.text:0040A7F1
.text:0040A7F1 loc_40A7F1:                             ; CODE XREF: sub_40A560+40↑j
.text:0040A7F1                 mov     esi, ebx
.text:0040A7F3                 neg     esi
.text:0040A7F5                 jmp     loc_40A5B2
.text:0040A7F5 sub_40A560      endp
.text:0040A7F5
.text:0040A7F5 ; ---------------------------------------------------------------------------
.text:0040A7FA                 align 10h
.text:0040A800
.text:0040A800 ; =============== S U B R O U T I N E =======================================
.text:0040A800
.text:0040A800
.text:0040A800 sub_40A800      proc near               ; CODE XREF: sub_406C10↑j
.text:0040A800
.text:0040A800 Size            = dword ptr -6Ch
.text:0040A800 Val             = dword ptr -68h
.text:0040A800 var_64          = dword ptr -64h
.text:0040A800 var_4D          = byte ptr -4Dh
.text:0040A800 var_4C          = byte ptr -4Ch
.text:0040A800 var_30          = dword ptr -30h
.text:0040A800 Src             = dword ptr -2Ch
.text:0040A800 var_28          = dword ptr -28h
.text:0040A800 var_24          = dword ptr -24h
.text:0040A800 arg_0           = dword ptr  4
.text:0040A800
.text:0040A800                 push    ebp
.text:0040A801                 push    edi
.text:0040A802                 push    esi
.text:0040A803                 push    ebx
.text:0040A804                 sub     esp, 5Ch
.text:0040A807                 mov     ebp, [esp+6Ch+arg_0]
.text:0040A80B                 mov     [esp+6Ch+var_4C], 1
.text:0040A810                 mov     [esp+6Ch+var_4D], 0
.text:0040A815                 mov     ecx, [ebp+0]
.text:0040A818                 mov     eax, [ebp+8]
.text:0040A81B                 mov     esi, [ebp+10h]
.text:0040A81E                 mov     edi, ecx
.text:0040A820                 add     eax, ecx
.text:0040A822                 mov     [esp+6Ch+var_30], eax
.text:0040A826                 mov     [esp+6Ch+Size], 14h ; Size
.text:0040A82D                 call    malloc
.text:0040A832                 mov     [esp+6Ch+Src], eax
.text:0040A836                 test    eax, eax
.text:0040A838                 mov     edx, 0FFFFFFFEh
.text:0040A83D                 jz      loc_40A922
.text:0040A843                 mov     [esp+6Ch+var_28], 5
.text:0040A84B                 mov     [esp+6Ch+var_24], 0
.text:0040A853                 mov     [esp+6Ch+var_64], 100h ; Size
.text:0040A85B                 mov     [esp+6Ch+Val], 0 ; Val
.text:0040A863                 mov     [esp+6Ch+Size], esi ; void *
.text:0040A866                 call    memset
.text:0040A86B                 movzx   edx, byte ptr [ebp+1Ch]
.text:0040A86F                 or      dl, 8
.text:0040A872                 and     dl, 0FEh
.text:0040A875                 mov     [ebp+1Ch], dl
.text:0040A878
.text:0040A878 loc_40A878:                             ; CODE XREF: sub_40A800+9A↓j
.text:0040A878                                         ; sub_40A800+13D↓j ...
.text:0040A878                 cmp     edi, [esp+6Ch+var_30] ; jumptable 0040A89A cases 0,9-12,20,26-29
.text:0040A87C                 jz      loc_40AB80
.text:0040A882                 movzx   eax, byte ptr [edi]
.text:0040A885                 cmp     al, 1
.text:0040A887                 jz      loc_40AB80
.text:0040A88D                 movzx   eax, al
.text:0040A890                 inc     edi
.text:0040A891                 cmp     eax, 1Dh        ; switch 30 cases
.text:0040A894                 ja      def_40A89A      ; jumptable 0040A89A default case, case 1
.text:0040A89A                 jmp     ds:jpt_40A89A[eax*4] ; switch jump
.text:0040A89A ; ---------------------------------------------------------------------------
.text:0040A8A1                 align 4
.text:0040A8A4 jpt_40A89A      dd offset loc_40A878    ; DATA XREF: sub_40A800+9A↑r
.text:0040A8A4                 dd offset def_40A89A    ; jump table for switch statement
.text:0040A8A4                 dd offset loc_40A92C
.text:0040A8A4                 dd offset loc_40A942
.text:0040A8A4                 dd offset loc_40A970
.text:0040A8A4                 dd offset loc_40A9A8
.text:0040A8A4                 dd offset loc_40AA0C
.text:0040A8A4                 dd offset loc_40AA0C
.text:0040A8A4                 dd offset loc_40A91C
.text:0040A8A4                 dd offset loc_40A878
.text:0040A8A4                 dd offset loc_40A878
.text:0040A8A4                 dd offset loc_40A878
.text:0040A8A4                 dd offset loc_40A878
.text:0040A8A4                 dd offset loc_40AAD5
.text:0040A8A4                 dd offset loc_40AAD5
.text:0040A8A4                 dd offset loc_40AA14
.text:0040A8A4                 dd offset loc_40AA14
.text:0040A8A4                 dd offset loc_40AAD5
.text:0040A8A4                 dd offset loc_40AAD5
.text:0040A8A4                 dd offset loc_40AAD5
.text:0040A8A4                 dd offset loc_40A878
.text:0040A8A4                 dd offset loc_40AAAE
.text:0040A8A4                 dd offset loc_40AAD5
.text:0040A8A4                 dd offset loc_40AB33
.text:0040A8A4                 dd offset loc_40AB3B
.text:0040A8A4                 dd offset loc_40AB5D
.text:0040A8A4                 dd offset loc_40A878
.text:0040A8A4                 dd offset loc_40A878
.text:0040A8A4                 dd offset loc_40A878
.text:0040A8A4                 dd offset loc_40A878
.text:0040A91C ; ---------------------------------------------------------------------------
.text:0040A91C
.text:0040A91C loc_40A91C:                             ; CODE XREF: sub_40A800+9A↑j
.text:0040A91C                                         ; DATA XREF: sub_40A800:jpt_40A89A↑o
.text:0040A91C                 or      byte ptr [ebp+1Ch], 1 ; jumptable 0040A89A case 8
.text:0040A920
.text:0040A920 loc_40A920:                             ; CODE XREF: sub_40A800+16E↓j
.text:0040A920                                         ; sub_40A800+3C8↓j
.text:0040A920                 xor     edx, edx
.text:0040A922
.text:0040A922 loc_40A922:                             ; CODE XREF: sub_40A800+3D↑j
.text:0040A922                                         ; sub_40A800+2A3↓j
.text:0040A922                 add     esp, 5Ch
.text:0040A925                 mov     eax, edx
.text:0040A927                 pop     ebx
.text:0040A928                 pop     esi
.text:0040A929                 pop     edi
.text:0040A92A                 pop     ebp
.text:0040A92B                 retn
.text:0040A92C ; ---------------------------------------------------------------------------
.text:0040A92C
.text:0040A92C loc_40A92C:                             ; CODE XREF: sub_40A800+9A↑j
.text:0040A92C                                         ; DATA XREF: sub_40A800:jpt_40A89A↑o
.text:0040A92C                 movzx   ecx, byte ptr [edi+1] ; jumptable 0040A89A case 2
.text:0040A930                 mov     byte ptr [ecx+esi], 1
.text:0040A934
.text:0040A934 loc_40A934:                             ; CODE XREF: sub_40A800+166↓j
.text:0040A934                                         ; sub_40A800+16C↓j ...
.text:0040A934                 mov     [esp+6Ch+var_4C], 0
.text:0040A939                 mov     edi, [esp+6Ch+var_30]
.text:0040A93D                 jmp     loc_40A878      ; jumptable 0040A89A cases 0,9-12,20,26-29
.text:0040A942 ; ---------------------------------------------------------------------------
.text:0040A942
.text:0040A942 loc_40A942:                             ; CODE XREF: sub_40A800+9A↑j
.text:0040A942                                         ; DATA XREF: sub_40A800:jpt_40A89A↑o
.text:0040A942                 movsx   eax, byte ptr [esi+0Ah] ; jumptable 0040A89A case 3
.text:0040A946                 xor     ebx, ebx
.text:0040A948                 nop
.text:0040A949                 lea     esi, [esi+0]
.text:0040A950
.text:0040A950 loc_40A950:                             ; CODE XREF: sub_40A800+15B↓j
.text:0040A950                 mov     byte ptr [ebx+esi], 1
.text:0040A954                 inc     ebx
.text:0040A955                 cmp     ebx, 0FFh
.text:0040A95B                 jle     short loc_40A950
.text:0040A95D                 test    byte ptr [ebp+0Ch], 40h
.text:0040A961                 jnz     short loc_40A968
.text:0040A963                 mov     [esi+0Ah], al
.text:0040A966                 jmp     short loc_40A934
.text:0040A968 ; ---------------------------------------------------------------------------
.text:0040A968
.text:0040A968 loc_40A968:                             ; CODE XREF: sub_40A800+161↑j
.text:0040A968                 test    byte ptr [ebp+1Ch], 1
.text:0040A96C                 jz      short loc_40A934
.text:0040A96E                 jmp     short loc_40A920
.text:0040A970 ; ---------------------------------------------------------------------------
.text:0040A970
.text:0040A970 loc_40A970:                             ; CODE XREF: sub_40A800+9A↑j
.text:0040A970                                         ; DATA XREF: sub_40A800:jpt_40A89A↑o
.text:0040A970                 movzx   edx, byte ptr [edi] ; jumptable 0040A89A case 4
.text:0040A973                 inc     edi
.text:0040A974                 lea     ebx, ds:0FFFFFFFFh[edx*8]
.text:0040A97B                 test    ebx, ebx
.text:0040A97D                 js      short loc_40A934
.text:0040A97F
.text:0040A97F loc_40A97F:                             ; CODE XREF: sub_40A800+19F↓j
.text:0040A97F                 test    ebx, ebx
.text:0040A981                 mov     eax, ebx
.text:0040A983                 js      short loc_40A9A3
.text:0040A985
.text:0040A985 loc_40A985:                             ; CODE XREF: sub_40A800+1A6↓j
.text:0040A985                 sar     eax, 3
.text:0040A988                 mov     ecx, ebx
.text:0040A98A                 movzx   edx, byte ptr [eax+edi]
.text:0040A98E                 shl     eax, 3
.text:0040A991                 sub     ecx, eax
.text:0040A993                 sar     edx, cl
.text:0040A995                 test    dl, 1
.text:0040A998                 jz      short loc_40A99E
.text:0040A99A                 mov     byte ptr [ebx+esi], 1
.text:0040A99E
.text:0040A99E loc_40A99E:                             ; CODE XREF: sub_40A800+198↑j
.text:0040A99E                 dec     ebx
.text:0040A99F                 jns     short loc_40A97F
.text:0040A9A1                 jmp     short loc_40A934
.text:0040A9A3 ; ---------------------------------------------------------------------------
.text:0040A9A3
.text:0040A9A3 loc_40A9A3:                             ; CODE XREF: sub_40A800+183↑j
.text:0040A9A3                 lea     eax, [ebx+7]
.text:0040A9A6                 jmp     short loc_40A985
.text:0040A9A8 ; ---------------------------------------------------------------------------
.text:0040A9A8
.text:0040A9A8 loc_40A9A8:                             ; CODE XREF: sub_40A800+9A↑j
.text:0040A9A8                                         ; DATA XREF: sub_40A800:jpt_40A89A↑o
.text:0040A9A8                 movzx   edx, byte ptr [edi] ; jumptable 0040A89A case 5
.text:0040A9AB                 movzx   ecx, dl
.text:0040A9AE                 lea     ebx, ds:0[ecx*8]
.text:0040A9B5                 cmp     ebx, 0FFh
.text:0040A9BB                 jg      short loc_40A9CD
.text:0040A9BD
.text:0040A9BD loc_40A9BD:                             ; CODE XREF: sub_40A800+1C8↓j
.text:0040A9BD                 mov     byte ptr [ebx+esi], 1
.text:0040A9C1                 inc     ebx
.text:0040A9C2                 cmp     ebx, 0FFh
.text:0040A9C8                 jle     short loc_40A9BD
.text:0040A9CA                 movzx   edx, byte ptr [edi]
.text:0040A9CD
.text:0040A9CD loc_40A9CD:                             ; CODE XREF: sub_40A800+1BB↑j
.text:0040A9CD                 movzx   ecx, dl
.text:0040A9D0                 inc     edi
.text:0040A9D1                 lea     ebx, ds:0FFFFFFFFh[ecx*8]
.text:0040A9D8                 test    ebx, ebx
.text:0040A9DA                 js      loc_40A934
.text:0040A9E0
.text:0040A9E0 loc_40A9E0:                             ; CODE XREF: sub_40A800+200↓j
.text:0040A9E0                 test    ebx, ebx
.text:0040A9E2                 mov     eax, ebx
.text:0040A9E4                 js      short loc_40AA07
.text:0040A9E6
.text:0040A9E6 loc_40A9E6:                             ; CODE XREF: sub_40A800+20A↓j
.text:0040A9E6                 sar     eax, 3
.text:0040A9E9                 mov     ecx, ebx
.text:0040A9EB                 movzx   edx, byte ptr [eax+edi]
.text:0040A9EF                 shl     eax, 3
.text:0040A9F2                 sub     ecx, eax
.text:0040A9F4                 sar     edx, cl
.text:0040A9F6                 test    dl, 1
.text:0040A9F9                 jnz     short loc_40A9FF
.text:0040A9FB                 mov     byte ptr [ebx+esi], 1
.text:0040A9FF
.text:0040A9FF loc_40A9FF:                             ; CODE XREF: sub_40A800+1F9↑j
.text:0040A9FF                 dec     ebx
.text:0040AA00                 jns     short loc_40A9E0
.text:0040AA02                 jmp     loc_40A934
.text:0040AA07 ; ---------------------------------------------------------------------------
.text:0040AA07
.text:0040AA07 loc_40AA07:                             ; CODE XREF: sub_40A800+1E4↑j
.text:0040AA07                 lea     eax, [ebx+7]
.text:0040AA0A                 jmp     short loc_40A9E6
.text:0040AA0C ; ---------------------------------------------------------------------------
.text:0040AA0C
.text:0040AA0C loc_40AA0C:                             ; CODE XREF: sub_40A800+9A↑j
.text:0040AA0C                                         ; sub_40A800+251↓j
.text:0040AA0C                                         ; DATA XREF: ...
.text:0040AA0C                 add     edi, 2          ; jumptable 0040A89A cases 6,7
.text:0040AA0F                 jmp     loc_40A878      ; jumptable 0040A89A cases 0,9-12,20,26-29
.text:0040AA14 ; ---------------------------------------------------------------------------
.text:0040AA14
.text:0040AA14 loc_40AA14:                             ; CODE XREF: sub_40A800+9A↑j
.text:0040AA14                                         ; sub_40A800+2D0↓j
.text:0040AA14                                         ; DATA XREF: ...
.text:0040AA14                 movsx   ecx, byte ptr [edi+1] ; jumptable 0040A89A cases 15,16
.text:0040AA18                 movzx   edx, byte ptr [edi]
.text:0040AA1B                 add     edi, 2
.text:0040AA1E                 shl     ecx, 8
.text:0040AA21                 add     edx, ecx
.text:0040AA23                 lea     ebx, [edx+edi]
.text:0040AA26                 cmp     ebx, [esp+6Ch+var_30]
.text:0040AA2A                 jnb     short loc_40AAA8
.text:0040AA2C                 mov     ecx, [esp+6Ch+var_24]
.text:0040AA30                 cmp     ecx, [esp+6Ch+var_28]
.text:0040AA34                 jz      short loc_40AA53
.text:0040AA36
.text:0040AA36 loc_40AA36:                             ; CODE XREF: sub_40A800+29C↓j
.text:0040AA36                 mov     edx, [esp+6Ch+Src]
.text:0040AA3A                 mov     [edx+ecx*4], ebx
.text:0040AA3D                 inc     [esp+6Ch+var_24]
.text:0040AA41
.text:0040AA41 loc_40AA41:                             ; CODE XREF: sub_40A800+2AC↓j
.text:0040AA41                 cmp     [esp+6Ch+var_4D], 0
.text:0040AA46                 jz      loc_40A878      ; jumptable 0040A89A cases 0,9-12,20,26-29
.text:0040AA4C                 mov     [esp+6Ch+var_4D], 0
.text:0040AA51                 jmp     short loc_40AA0C ; jumptable 0040A89A cases 6,7
.text:0040AA53 ; ---------------------------------------------------------------------------
.text:0040AA53
.text:0040AA53 loc_40AA53:                             ; CODE XREF: sub_40A800+234↑j
.text:0040AA53                 mov     eax, dword_412020
.text:0040AA58                 lea     edx, [eax+eax*8]
.text:0040AA5B                 lea     edx, [eax+edx*2]
.text:0040AA5E                 cmp     ecx, edx
.text:0040AA60                 ja      short loc_40AA9E
.text:0040AA62                 lea     edx, ds:0[ecx*8]
.text:0040AA69                 mov     [esp+6Ch+Size], edx ; Size
.text:0040AA6C                 call    malloc
.text:0040AA71                 mov     [esp+6Ch+Size], eax ; void *
.text:0040AA74                 mov     ecx, [esp+6Ch+var_28]
.text:0040AA78                 shl     ecx, 2
.text:0040AA7B                 mov     [esp+6Ch+var_64], ecx ; Size
.text:0040AA7F                 mov     ecx, [esp+6Ch+Src]
.text:0040AA83                 mov     [esp+6Ch+Val], ecx ; Src
.text:0040AA87                 call    memcpy
.text:0040AA8C                 mov     [esp+6Ch+Src], eax
.text:0040AA90                 test    eax, eax
.text:0040AA92                 jz      short loc_40AA9E
.text:0040AA94                 shl     [esp+6Ch+var_28], 1
.text:0040AA98                 mov     ecx, [esp+6Ch+var_24]
.text:0040AA9C                 jmp     short loc_40AA36
.text:0040AA9E ; ---------------------------------------------------------------------------
.text:0040AA9E
.text:0040AA9E loc_40AA9E:                             ; CODE XREF: sub_40A800+260↑j
.text:0040AA9E                                         ; sub_40A800+292↑j
.text:0040AA9E                 mov     edx, 0FFFFFFFEh
.text:0040AAA3                 jmp     loc_40A922
.text:0040AAA8 ; ---------------------------------------------------------------------------
.text:0040AAA8
.text:0040AAA8 loc_40AAA8:                             ; CODE XREF: sub_40A800+22A↑j
.text:0040AAA8                 or      byte ptr [ebp+1Ch], 1
.text:0040AAAC                 jmp     short loc_40AA41
.text:0040AAAE ; ---------------------------------------------------------------------------
.text:0040AAAE
.text:0040AAAE loc_40AAAE:                             ; CODE XREF: sub_40A800+9A↑j
.text:0040AAAE                                         ; DATA XREF: sub_40A800:jpt_40A89A↑o
.text:0040AAAE                 add     edi, 2          ; jumptable 0040A89A case 21
.text:0040AAB1                 movsx   ecx, byte ptr [edi+1]
.text:0040AAB5                 movzx   ebx, byte ptr [edi]
.text:0040AAB8                 add     edi, 2
.text:0040AABB                 shl     ecx, 8
.text:0040AABE                 add     ebx, ecx
.text:0040AAC0                 test    ebx, ebx
.text:0040AAC2                 jnz     loc_40A878      ; jumptable 0040A89A cases 0,9-12,20,26-29
.text:0040AAC8                 mov     [esp+6Ch+var_4D], 1
.text:0040AACD                 sub     edi, 4
.text:0040AAD0                 jmp     loc_40AA14      ; jumptable 0040A89A cases 15,16
.text:0040AAD5 ; ---------------------------------------------------------------------------
.text:0040AAD5
.text:0040AAD5 loc_40AAD5:                             ; CODE XREF: sub_40A800+9A↑j
.text:0040AAD5                                         ; DATA XREF: sub_40A800:jpt_40A89A↑o
.text:0040AAD5                 movsx   ebx, byte ptr [edi+1] ; jumptable 0040A89A cases 13,14,17-19,22
.text:0040AAD9                 movzx   ecx, byte ptr [edi]
.text:0040AADC                 shl     ebx, 8
.text:0040AADF                 add     ecx, ebx
.text:0040AAE1                 test    ecx, ecx
.text:0040AAE3                 lea     edi, [ecx+edi+2]
.text:0040AAE7                 jg      loc_40A878      ; jumptable 0040A89A cases 0,9-12,20,26-29
.text:0040AAED                 movzx   eax, byte ptr [edi]
.text:0040AAF0                 cmp     al, 0Fh
.text:0040AAF2                 jz      short loc_40AAFC
.text:0040AAF4                 cmp     al, 15h
.text:0040AAF6                 jnz     loc_40A878      ; jumptable 0040A89A cases 0,9-12,20,26-29
.text:0040AAFC
.text:0040AAFC loc_40AAFC:                             ; CODE XREF: sub_40A800+2F2↑j
.text:0040AAFC                 inc     edi
.text:0040AAFD                 movsx   ecx, byte ptr [edi+1]
.text:0040AB01                 movzx   edx, byte ptr [edi]
.text:0040AB04                 shl     ecx, 8
.text:0040AB07                 add     edx, ecx
.text:0040AB09                 lea     edi, [edx+edi+2]
.text:0040AB0D                 mov     edx, [esp+6Ch+var_24]
.text:0040AB11                 test    edx, edx
.text:0040AB13                 jz      loc_40A878      ; jumptable 0040A89A cases 0,9-12,20,26-29
.text:0040AB19                 mov     ebx, [esp+6Ch+Src]
.text:0040AB1D                 cmp     [ebx+edx*4-4], edi
.text:0040AB21                 jnz     loc_40A878      ; jumptable 0040A89A cases 0,9-12,20,26-29
.text:0040AB27                 lea     eax, [edx-1]
.text:0040AB2A                 mov     [esp+6Ch+var_24], eax
.text:0040AB2E                 jmp     loc_40A878      ; jumptable 0040A89A cases 0,9-12,20,26-29
.text:0040AB33 ; ---------------------------------------------------------------------------
.text:0040AB33
.text:0040AB33 loc_40AB33:                             ; CODE XREF: sub_40A800+9A↑j
.text:0040AB33                                         ; DATA XREF: sub_40A800:jpt_40A89A↑o
.text:0040AB33                 add     edi, 4          ; jumptable 0040A89A case 23
.text:0040AB36                 jmp     loc_40A878      ; jumptable 0040A89A cases 0,9-12,20,26-29
.text:0040AB3B ; ---------------------------------------------------------------------------
.text:0040AB3B
.text:0040AB3B loc_40AB3B:                             ; CODE XREF: sub_40A800+9A↑j
.text:0040AB3B                                         ; DATA XREF: sub_40A800:jpt_40A89A↑o
.text:0040AB3B                 xor     ebx, ebx        ; jumptable 0040A89A case 24
.text:0040AB3D
.text:0040AB3D loc_40AB3D:                             ; CODE XREF: sub_40A800+350↓j
.text:0040AB3D                 movzx   edi, bl
.text:0040AB40                 cmp     ds:byte_413190[edi], 1
.text:0040AB47                 jz      short loc_40AB57
.text:0040AB49
.text:0040AB49 loc_40AB49:                             ; CODE XREF: sub_40A800+35B↓j
.text:0040AB49                 inc     ebx
.text:0040AB4A                 cmp     ebx, 0FFh
.text:0040AB50                 jle     short loc_40AB3D
.text:0040AB52                 jmp     loc_40A934
.text:0040AB57 ; ---------------------------------------------------------------------------
.text:0040AB57
.text:0040AB57 loc_40AB57:                             ; CODE XREF: sub_40A800+347↑j
.text:0040AB57                 mov     byte ptr [ebx+esi], 1
.text:0040AB5B                 jmp     short loc_40AB49
.text:0040AB5D ; ---------------------------------------------------------------------------
.text:0040AB5D
.text:0040AB5D loc_40AB5D:                             ; CODE XREF: sub_40A800+9A↑j
.text:0040AB5D                                         ; DATA XREF: sub_40A800:jpt_40A89A↑o
.text:0040AB5D                 xor     ebx, ebx        ; jumptable 0040A89A case 25
.text:0040AB5F
.text:0040AB5F loc_40AB5F:                             ; CODE XREF: sub_40A800+376↓j
.text:0040AB5F                 movzx   edx, bl
.text:0040AB62                 cmp     ds:byte_413190[edx], 1
.text:0040AB69                 jz      short loc_40AB6F
.text:0040AB6B                 mov     byte ptr [ebx+esi], 1
.text:0040AB6F
.text:0040AB6F loc_40AB6F:                             ; CODE XREF: sub_40A800+369↑j
.text:0040AB6F                 inc     ebx
.text:0040AB70                 cmp     ebx, 0FFh
.text:0040AB76                 jle     short loc_40AB5F
.text:0040AB78                 jmp     loc_40A934
.text:0040AB78 ; ---------------------------------------------------------------------------
.text:0040AB7D                 align 10h
.text:0040AB80
.text:0040AB80 loc_40AB80:                             ; CODE XREF: sub_40A800+7C↑j
.text:0040AB80                                         ; sub_40A800+87↑j
.text:0040AB80                 mov     ecx, [esp+6Ch+var_24]
.text:0040AB84                 test    ecx, ecx
.text:0040AB86                 jz      short loc_40ABB3
.text:0040AB88                 movzx   ebx, byte ptr [ebp+1Ch]
.text:0040AB8C                 dec     ecx
.text:0040AB8D                 movzx   eax, [esp+6Ch+var_4C]
.text:0040AB92                 or      eax, ebx
.text:0040AB94                 and     al, 1
.text:0040AB96                 and     bl, 0FEh
.text:0040AB99                 or      bl, al
.text:0040AB9B                 mov     [ebp+1Ch], bl
.text:0040AB9E                 mov     ebx, [esp+6Ch+Src]
.text:0040ABA2                 mov     [esp+6Ch+var_4C], 1
.text:0040ABA7                 mov     [esp+6Ch+var_24], ecx
.text:0040ABAB                 mov     edi, [ebx+ecx*4]
.text:0040ABAE                 jmp     loc_40A878      ; jumptable 0040A89A cases 0,9-12,20,26-29
.text:0040ABB3 ; ---------------------------------------------------------------------------
.text:0040ABB3
.text:0040ABB3 loc_40ABB3:                             ; CODE XREF: sub_40A800+386↑j
.text:0040ABB3                 movzx   ebx, byte ptr [ebp+1Ch]
.text:0040ABB7                 movzx   eax, [esp+6Ch+var_4C]
.text:0040ABBC                 or      eax, ebx
.text:0040ABBE                 and     al, 1
.text:0040ABC0                 and     bl, 0FEh
.text:0040ABC3                 or      bl, al
.text:0040ABC5                 mov     [ebp+1Ch], bl
.text:0040ABC8                 jmp     loc_40A920
.text:0040ABCD ; ---------------------------------------------------------------------------
.text:0040ABCD
.text:0040ABCD def_40A89A:                             ; CODE XREF: sub_40A800+94↑j
.text:0040ABCD                                         ; sub_40A800+9A↑j
.text:0040ABCD                                         ; DATA XREF: ...
.text:0040ABCD                 call    abort           ; jumptable 0040A89A default case, case 1
.text:0040ABCD sub_40A800      endp
.text:0040ABCD
.text:0040ABCD ; ---------------------------------------------------------------------------
.text:0040ABD2                 align 10h
.text:0040ABE0
.text:0040ABE0 ; =============== S U B R O U T I N E =======================================
.text:0040ABE0
.text:0040ABE0
.text:0040ABE0 sub_40ABE0      proc near               ; DATA XREF: sub_40AD60+1B4↓o
.text:0040ABE0                 sub     eax, 9090002Dh
.text:0040ABE5                 nop
.text:0040ABE6                 nop
.text:0040ABE7                 nop
.text:0040ABE8                 nop
.text:0040ABE9                 nop
.text:0040ABEA                 nop
.text:0040ABEB                 nop
.text:0040ABEC                 nop
.text:0040ABED                 nop
.text:0040ABEE                 nop
.text:0040ABEF                 nop
.text:0040ABF0                 nop
.text:0040ABF1                 nop
.text:0040ABF2                 nop
.text:0040ABF3                 nop
.text:0040ABF4                 nop
.text:0040ABF5                 nop
.text:0040ABF6                 nop
.text:0040ABF7                 nop
.text:0040ABF8                 nop
.text:0040ABF9                 nop
.text:0040ABFA                 nop
.text:0040ABFB                 nop
.text:0040ABFC                 nop
.text:0040ABFD                 nop
.text:0040ABFE                 nop
.text:0040ABFF                 nop
.text:0040ABFF sub_40ABE0      endp
.text:0040ABFF
.text:0040AC00
.text:0040AC00 ; =============== S U B R O U T I N E =======================================
.text:0040AC00
.text:0040AC00
.text:0040AC00 sub_40AC00      proc near               ; DATA XREF: sub_40AD60+3CC↓o
.text:0040AC00                 and     eax, 6F203A73h
.text:0040AC05                 jo      short loc_40AC7B
.text:0040AC07                 imul    ebp, [edi+6Eh], 63256020h
.text:0040AC0E                 and     eax, 64202773h
.text:0040AC13                 outsd
.text:0040AC14                 db      65h
.text:0040AC14                 jnb     short loc_40AC85
.text:0040AC17                 daa
.text:0040AC18                 jz      short loc_40AC3A
.text:0040AC1A                 popa
.text:0040AC1B                 insb
.text:0040AC1C                 insb
.text:0040AC1D                 outsd
.text:0040AC1E                 ja      short sub_40AC40
.text:0040AC20                 popa
.text:0040AC21                 outsb
.text:0040AC22                 and     [ecx+72h], ah
.text:0040AC25                 db      67h
.text:0040AC25                 jnz     near ptr loc_40AC94+1
.text:0040AC28                 outs    dx, byte ptr gs:[esi]
.text:0040AC2A                 jz      short loc_40AC36
.text:0040AC2C                 add     [eax-6F6F6F70h], dl
.text:0040AC32                 nop
.text:0040AC33                 nop
.text:0040AC34                 nop
.text:0040AC35                 nop
.text:0040AC36
.text:0040AC36 loc_40AC36:                             ; CODE XREF: sub_40AC00+2A↑j
.text:0040AC36                 nop
.text:0040AC37                 nop
.text:0040AC38                 nop
.text:0040AC39                 nop
.text:0040AC3A
.text:0040AC3A loc_40AC3A:                             ; CODE XREF: sub_40AC00+18↑j
.text:0040AC3A                 nop
.text:0040AC3B                 nop
.text:0040AC3C                 nop
.text:0040AC3D                 nop
.text:0040AC3E                 nop
.text:0040AC3F                 nop
.text:0040AC3F sub_40AC00      endp ; sp-analysis failed
.text:0040AC3F
.text:0040AC40
.text:0040AC40 ; =============== S U B R O U T I N E =======================================
.text:0040AC40
.text:0040AC40
.text:0040AC40 sub_40AC40      proc near               ; CODE XREF: sub_40AC00+1E↑j
.text:0040AC40                                         ; DATA XREF: sub_40AD60:loc_40B192↓o
.text:0040AC40                 and     eax, 6F203A73h
.text:0040AC45                 jo      short loc_40ACBB
.text:0040AC47                 imul    ebp, [edi+6Eh], 2D2D6020h
.text:0040AC4E                 and     eax, 64202773h
.text:0040AC53                 outsd
.text:0040AC54                 db      65h
.text:0040AC54                 jnb     short loc_40ACC5
.text:0040AC57                 daa
.text:0040AC58                 jz      short loc_40AC7A
.text:0040AC5A                 popa
.text:0040AC5B                 insb
.text:0040AC5C                 insb
.text:0040AC5D                 outsd
.text:0040AC5E                 ja      short sub_40AC80
.text:0040AC60                 popa
.text:0040AC61                 outsb
.text:0040AC62                 and     [ecx+72h], ah
.text:0040AC65                 db      67h
.text:0040AC65                 jnz     loc_40ACD5
.text:0040AC68                 outs    dx, byte ptr gs:[esi]
.text:0040AC6A                 jz      short loc_40AC76
.text:0040AC6C                 add     [eax-6F6F6F70h], dl
.text:0040AC72                 nop
.text:0040AC73                 nop
.text:0040AC74                 nop
.text:0040AC75                 nop
.text:0040AC76
.text:0040AC76 loc_40AC76:                             ; CODE XREF: sub_40AC40+2A↑j
.text:0040AC76                 nop
.text:0040AC77                 nop
.text:0040AC78                 nop
.text:0040AC79                 nop
.text:0040AC7A
.text:0040AC7A loc_40AC7A:                             ; CODE XREF: sub_40AC40+18↑j
.text:0040AC7A                 nop
.text:0040AC7B
.text:0040AC7B loc_40AC7B:                             ; CODE XREF: sub_40AC00+5↑j
.text:0040AC7B                 nop
.text:0040AC7C                 nop
.text:0040AC7D                 nop
.text:0040AC7E                 nop
.text:0040AC7F                 nop
.text:0040AC7F sub_40AC40      endp ; sp-analysis failed
.text:0040AC7F
.text:0040AC80
.text:0040AC80 ; =============== S U B R O U T I N E =======================================
.text:0040AC80
.text:0040AC80
.text:0040AC80 sub_40AC80      proc near               ; CODE XREF: sub_40AC40+1E↑j
.text:0040AC80                                         ; DATA XREF: sub_40AD60:loc_40B230↓o ...
.text:0040AC80                 and     eax, 6F203A73h
.text:0040AC85
.text:0040AC85 loc_40AC85:                             ; CODE XREF: sub_40AC00+14↑j
.text:0040AC85                 jo      short loc_40ACFB
.text:0040AC87                 imul    ebp, [edi+6Eh], 73256020h
.text:0040AC8E                 daa
.text:0040AC8F                 and     [edx+65h], dh
.text:0040AC92                 jno     short near ptr loc_40AD08+1
.text:0040AC94
.text:0040AC94 loc_40AC94:                             ; CODE XREF: sub_40AC00+25↑j
.text:0040AC94                 imul    esi, [edx+65h], 6E612073h
.text:0040AC9B                 and     [ecx+72h], ah
.text:0040AC9E                 db      67h
.text:0040AC9E                 jnz     near ptr loc_40AD0C+2
.text:0040ACA1                 outs    dx, byte ptr gs:[esi]
.text:0040ACA3                 jz      short loc_40ACAF
.text:0040ACA5                 add     [eax-6F6F6F70h], dl
.text:0040ACAB                 nop
.text:0040ACAC                 nop
.text:0040ACAD                 nop
.text:0040ACAE                 nop
.text:0040ACAF
.text:0040ACAF loc_40ACAF:                             ; CODE XREF: sub_40AC80+23↑j
.text:0040ACAF                 nop
.text:0040ACB0                 nop
.text:0040ACB1                 nop
.text:0040ACB2                 nop
.text:0040ACB3                 nop
.text:0040ACB4                 nop
.text:0040ACB5                 nop
.text:0040ACB6                 nop
.text:0040ACB7                 nop
.text:0040ACB8                 nop
.text:0040ACB9                 nop
.text:0040ACBA                 nop
.text:0040ACBB
.text:0040ACBB loc_40ACBB:                             ; CODE XREF: sub_40AC40+5↑j
.text:0040ACBB                 nop
.text:0040ACBC                 nop
.text:0040ACBD                 nop
.text:0040ACBE                 nop
.text:0040ACBF                 nop
.text:0040ACBF sub_40AC80      endp
.text:0040ACBF
.text:0040ACC0
.text:0040ACC0 ; =============== S U B R O U T I N E =======================================
.text:0040ACC0
.text:0040ACC0
.text:0040ACC0 sub_40ACC0      proc near               ; DATA XREF: sub_40AD60+55E↓o
.text:0040ACC0                 and     eax, 75203A73h
.text:0040ACC5
.text:0040ACC5 loc_40ACC5:                             ; CODE XREF: sub_40AC40+14↑j
.text:0040ACC5                 outsb
.text:0040ACC6                 jb      short near ptr loc_40AD27+6
.text:0040ACC8                 arpl    [edi+67h], bp
.text:0040ACCB                 outsb
.text:0040ACCC                 imul    edi, [edx+65h], 706F2064h
.text:0040ACD3                 jz      short loc_40AD3E
.text:0040ACD5
.text:0040ACD5 loc_40ACD5:                             ; CODE XREF: sub_40AC40+25↑j
.text:0040ACD5                 outsd
.text:0040ACD6                 outsb
.text:0040ACD7                 and     [eax+25h], ah
.text:0040ACDA                 arpl    ds:0A2773h, sp
.text:0040ACE0
.text:0040ACE0 loc_40ACE0:                             ; DATA XREF: sub_40AD60:loc_40B301↓o
.text:0040ACE0                 add     [eax-6F6F6F70h], dl
.text:0040ACE6                 nop
.text:0040ACE7                 nop
.text:0040ACE8                 nop
.text:0040ACE9                 nop
.text:0040ACEA                 nop
.text:0040ACEB                 nop
.text:0040ACEC                 nop
.text:0040ACED                 nop
.text:0040ACEE                 nop
.text:0040ACEF                 nop
.text:0040ACF0                 nop
.text:0040ACF1                 nop
.text:0040ACF2                 nop
.text:0040ACF3                 nop
.text:0040ACF4                 nop
.text:0040ACF5                 nop
.text:0040ACF6                 nop
.text:0040ACF7                 nop
.text:0040ACF8                 nop
.text:0040ACF9                 nop
.text:0040ACFA                 nop
.text:0040ACFB
.text:0040ACFB loc_40ACFB:                             ; CODE XREF: sub_40AC80:loc_40AC85↑j
.text:0040ACFB                 nop
.text:0040ACFC                 nop
.text:0040ACFD                 nop
.text:0040ACFE                 nop
.text:0040ACFF                 nop
.text:0040ACFF sub_40ACC0      endp
.text:0040ACFF
.text:0040AD00
.text:0040AD00 ; =============== S U B R O U T I N E =======================================
.text:0040AD00
.text:0040AD00
.text:0040AD00 sub_40AD00      proc near               ; DATA XREF: sub_40AD60:loc_40B31A↓o
.text:0040AD00                 and     eax, 75203A73h
.text:0040AD05                 outsb
.text:0040AD06                 jb      short near ptr loc_40AD67+6
.text:0040AD08
.text:0040AD08 loc_40AD08:                             ; CODE XREF: sub_40AC80+12↑j
.text:0040AD08                 arpl    [edi+67h], bp
.text:0040AD0B                 outsb
.text:0040AD0C
.text:0040AD0C loc_40AD0C:                             ; CODE XREF: sub_40AC80+1E↑j
.text:0040AD0C                 imul    edi, [edx+65h], 706F2064h
.text:0040AD13                 jz      short loc_40AD7E
.text:0040AD15                 outsd
.text:0040AD16                 outsb
.text:0040AD17                 and     [eax+2Dh], ah
.text:0040AD1A                 sub     eax, 0A277325h
.text:0040AD1F                 add     ds:6F203A73h, ah
.text:0040AD25                 jo      short loc_40AD9B
.text:0040AD27
.text:0040AD27 loc_40AD27:                             ; CODE XREF: sub_40ACC0+6↑j
.text:0040AD27                 imul    ebp, [edi+6Eh], 71657220h
.text:0040AD2E                 jnz     short loc_40AD99
.text:0040AD30                 jb      short loc_40AD97
.text:0040AD32                 jnb     short loc_40AD54
.text:0040AD34                 popa
.text:0040AD35                 outsb
.text:0040AD36                 and     [ecx+72h], ah
.text:0040AD39                 db      67h
.text:0040AD39                 jnz     near ptr loc_40ADA7+2
.text:0040AD3C                 outs    dx, byte ptr gs:[esi]
.text:0040AD3E
.text:0040AD3E loc_40AD3E:                             ; CODE XREF: sub_40ACC0+13↑j
.text:0040AD3E                 jz      short sub_40AD60
.text:0040AD40                 sub     eax, 6325202Dh
.text:0040AD45                 or      al, [eax]
.text:0040AD47                 nop
.text:0040AD48                 nop
.text:0040AD49                 nop
.text:0040AD4A                 nop
.text:0040AD4B                 nop
.text:0040AD4C                 nop
.text:0040AD4D                 nop
.text:0040AD4E                 nop
.text:0040AD4F                 nop
.text:0040AD50                 nop
.text:0040AD51                 nop
.text:0040AD52                 nop
.text:0040AD53                 nop
.text:0040AD54
.text:0040AD54 loc_40AD54:                             ; CODE XREF: sub_40AD00+32↑j
.text:0040AD54                 nop
.text:0040AD55                 nop
.text:0040AD56                 nop
.text:0040AD57                 nop
.text:0040AD58                 nop
.text:0040AD59                 nop
.text:0040AD5A                 nop
.text:0040AD5B                 nop
.text:0040AD5C                 nop
.text:0040AD5D                 nop
.text:0040AD5E                 nop
.text:0040AD5F                 nop
.text:0040AD5F sub_40AD00      endp ; sp-analysis failed
.text:0040AD5F
.text:0040AD60
.text:0040AD60 ; =============== S U B R O U T I N E =======================================
.text:0040AD60
.text:0040AD60
.text:0040AD60 ; int __cdecl sub_40AD60(char *Str2, size_t MaxCount, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, int, char *Str, int, int, int, int)
.text:0040AD60 sub_40AD60      proc near               ; CODE XREF: sub_40AD00:loc_40AD3E↑j
.text:0040AD60                                         ; DATA XREF: sub_40AD60:loc_40B573↓o
.text:0040AD60
.text:0040AD60 Str2            = dword ptr  4
.text:0040AD60 MaxCount        = dword ptr  8
.text:0040AD60 arg_8           = dword ptr  0Ch
.text:0040AD60 arg_C           = dword ptr  10h
.text:0040AD60 arg_1C          = dword ptr  20h
.text:0040AD60 arg_20          = dword ptr  24h
.text:0040AD60 arg_24          = dword ptr  28h
.text:0040AD60 arg_28          = dword ptr  2Ch
.text:0040AD60 arg_2C          = dword ptr  30h
.text:0040AD60 arg_30          = dword ptr  34h
.text:0040AD60 arg_34          = dword ptr  38h
.text:0040AD60 arg_38          = dword ptr  3Ch
.text:0040AD60 arg_3C          = dword ptr  40h
.text:0040AD60 arg_40          = dword ptr  44h
.text:0040AD60 arg_44          = dword ptr  48h
.text:0040AD60 arg_5C          = dword ptr  60h
.text:0040AD60 arg_60          = dword ptr  64h
.text:0040AD60 Str             = dword ptr  68h
.text:0040AD60 arg_68          = dword ptr  6Ch
.text:0040AD60 arg_6C          = dword ptr  70h
.text:0040AD60 arg_70          = dword ptr  74h
.text:0040AD60 arg_74          = dword ptr  78h
.text:0040AD60
.text:0040AD60 ; FUNCTION CHUNK AT .text:0040ADDB SIZE 00000053 BYTES
.text:0040AD60 ; FUNCTION CHUNK AT .text:0040AE44 SIZE 0000014B BYTES
.text:0040AD60 ; FUNCTION CHUNK AT .text:0040AF90 SIZE 0000023A BYTES
.text:0040AD60 ; FUNCTION CHUNK AT .text:0040B1D0 SIZE 00000099 BYTES
.text:0040AD60 ; FUNCTION CHUNK AT .text:0040B270 SIZE 000000DF BYTES
.text:0040AD60 ; FUNCTION CHUNK AT .text:0040B350 SIZE 0000025B BYTES
.text:0040AD60 ; FUNCTION CHUNK AT .text:0040B5B0 SIZE 000001AE BYTES
.text:0040AD60 ; FUNCTION CHUNK AT .text:0040B760 SIZE 000000F9 BYTES
.text:0040AD60 ; FUNCTION CHUNK AT .text:0040B860 SIZE 000000CE BYTES
.text:0040AD60 ; FUNCTION CHUNK AT .text:0040B930 SIZE 0000003A BYTES
.text:0040AD60 ; FUNCTION CHUNK AT .text:0040B970 SIZE 0000000B BYTES
.text:0040AD60 ; FUNCTION CHUNK AT .text:0040B980 SIZE 00000019 BYTES
.text:0040AD60 ; FUNCTION CHUNK AT .text:0040B9A0 SIZE 00000011 BYTES
.text:0040AD60
.text:0040AD60                 and     eax, 6F203A73h
.text:0040AD65                 jo      short loc_40ADDB
.text:0040AD67
.text:0040AD67 loc_40AD67:                             ; CODE XREF: sub_40AD00+6↑j
.text:0040AD67                 imul    ebp, [edi+6Eh], 572D6020h
.text:0040AD6E                 and     ds:64202773h, ah
.text:0040AD74                 outsd
.text:0040AD75                 db      65h
.text:0040AD75                 jnb     short near ptr loc_40ADE4+2
.text:0040AD78                 daa
.text:0040AD79                 jz      short loc_40AD9B
.text:0040AD7B                 popa
.text:0040AD7C                 insb
.text:0040AD7D                 insb
.text:0040AD7E
.text:0040AD7E loc_40AD7E:                             ; CODE XREF: sub_40AD00+13↑j
.text:0040AD7E                 outsd
.text:0040AD7F                 ja      short near ptr sub_40ADA0+1
.text:0040AD81                 popa
.text:0040AD82                 outsb
.text:0040AD83                 and     [ecx+72h], ah
.text:0040AD86                 db      67h
.text:0040AD86                 jnz     near ptr loc_40ADF5+1
.text:0040AD89                 outs    dx, byte ptr gs:[esi]
.text:0040AD8B                 jz      short loc_40AD97
.text:0040AD8D                 add     [eax-6F6F6F70h], dl
.text:0040AD93                 nop
.text:0040AD94                 nop
.text:0040AD95                 nop
.text:0040AD96                 nop
.text:0040AD97
.text:0040AD97 loc_40AD97:                             ; CODE XREF: sub_40AD00+30↑j
.text:0040AD97                                         ; sub_40AD60+2B↑j
.text:0040AD97                 nop
.text:0040AD98                 nop
.text:0040AD99
.text:0040AD99 loc_40AD99:                             ; CODE XREF: sub_40AD00+2E↑j
.text:0040AD99                 nop
.text:0040AD9A                 nop
.text:0040AD9B
.text:0040AD9B loc_40AD9B:                             ; CODE XREF: sub_40AD00+25↑j
.text:0040AD9B                                         ; sub_40AD60+19↑j
.text:0040AD9B                 nop
.text:0040AD9C                 nop
.text:0040AD9D                 nop
.text:0040AD9E                 nop
.text:0040AD9F                 nop
.text:0040AD9F sub_40AD60      endp ; sp-analysis failed
.text:0040AD9F
.text:0040ADA0
.text:0040ADA0 ; =============== S U B R O U T I N E =======================================
.text:0040ADA0
.text:0040ADA0
.text:0040ADA0 sub_40ADA0      proc near               ; CODE XREF: sub_40AD60+1F↑j
.text:0040ADA0                                         ; DATA XREF: sub_40AD60:loc_40B65F↓o
.text:0040ADA0
.text:0040ADA0 arg_A4          = dword ptr  0A8h
.text:0040ADA0 arg_B8          = dword ptr  0BCh
.text:0040ADA0
.text:0040ADA0 ; FUNCTION CHUNK AT .text:0040AE3A SIZE 0000000A BYTES
.text:0040ADA0
.text:0040ADA0                 and     eax, 6F203A73h
.text:0040ADA5                 jo      short loc_40AE1B
.text:0040ADA7
.text:0040ADA7 loc_40ADA7:                             ; CODE XREF: sub_40AD00+39↑j
.text:0040ADA7                 imul    ebp, [edi+6Eh], 572D6020h
.text:0040ADAE                 and     ds:69202773h, ah
.text:0040ADB4                 jnb     short near ptr loc_40ADD3+3
.text:0040ADB6                 popa
.text:0040ADB7                 insd
.text:0040ADB8                 bound   ebp, [ecx+67h]
.text:0040ADBB                 jnz     short near ptr loc_40AE28+4
.text:0040ADBD                 jnz     short near ptr loc_40AE31+1
.text:0040ADBF                 or      al, [eax]
.text:0040ADC1
.text:0040ADC1 loc_40ADC1:                             ; DATA XREF: sub_40AD60+A0F↓o
.text:0040ADC1                 and     eax, 69203A73h
.text:0040ADC6                 insb
.text:0040ADC7                 insb
.text:0040ADC8                 db      65h, 67h
.text:0040ADC8                 popa
.text:0040ADCB                 insb
.text:0040ADCC                 and     [edi+70h], ch
.text:0040ADCF                 jz      short loc_40AE3A
.text:0040ADD1                 outsd
.text:0040ADD2                 outsb
.text:0040ADD3
.text:0040ADD3 loc_40ADD3:                             ; CODE XREF: sub_40ADA0+14↑j
.text:0040ADD3                 and     ds:6325202Dh, ch
.text:0040ADD9                 or      al, [eax]
.text:0040ADD9 sub_40ADA0      endp ; sp-analysis failed
.text:0040ADD9
.text:0040ADDB ; START OF FUNCTION CHUNK FOR sub_40AD60
.text:0040ADDB
.text:0040ADDB loc_40ADDB:                             ; CODE XREF: sub_40AD60+5↑j
.text:0040ADDB                                         ; DATA XREF: sub_40AD60:loc_40B7A7↓o
.text:0040ADDB                 and     eax, 69203A73h
.text:0040ADE0                 outsb
.text:0040ADE1                 jbe     short loc_40AE44
.text:0040ADE3                 insb
.text:0040ADE4
.text:0040ADE4 loc_40ADE4:                             ; CODE XREF: sub_40AD60+15↑j
.text:0040ADE4                 imul    esp, [eax+6Fh], 6F697470h
.text:0040ADEC                 outsb
.text:0040ADED                 and     ds:6325202Dh, ch
.text:0040ADF3                 or      al, [eax]
.text:0040ADF5
.text:0040ADF5 loc_40ADF5:                             ; CODE XREF: sub_40AD60+26↑j
.text:0040ADF5                                         ; DATA XREF: sub_40AD60:loc_40B7CE↓o
.text:0040ADF5                 and     eax, 6F203A73h
.text:0040ADFA                 jo      short near ptr loc_40AE6F+1
.text:0040ADFC                 imul    ebp, [edi+6Eh], 73256020h
.text:0040AE03                 daa
.text:0040AE04                 and     [ecx+73h], ch
.text:0040AE07                 and     [ecx+6Dh], ah
.text:0040AE0A                 bound   ebp, [ecx+67h]
.text:0040AE0D                 jnz     short near ptr loc_40AE7C+2
.text:0040AE0F                 jnz     short near ptr loc_40AE83+1
.text:0040AE11                 or      al, [eax]
.text:0040AE13
.text:0040AE13 loc_40AE13:                             ; DATA XREF: sub_40AD60:loc_40B980↓o
.text:0040AE13                 push    eax
.text:0040AE14                 dec     edi
.text:0040AE15                 push    ebx
.text:0040AE16                 dec     ecx
.text:0040AE17                 pop     eax
.text:0040AE18                 dec     esp
.text:0040AE19                 pop     ecx
.text:0040AE1A                 pop     edi
.text:0040AE1B
.text:0040AE1B loc_40AE1B:                             ; CODE XREF: sub_40ADA0+5↑j
.text:0040AE1B                 inc     ebx
.text:0040AE1C                 dec     edi
.text:0040AE1D                 push    edx
.text:0040AE1E                 push    edx
.text:0040AE1F                 inc     ebp
.text:0040AE20                 inc     ebx
.text:0040AE21                 push    esp
.text:0040AE22                 add     [ebp+0B6h], cl
.text:0040AE28
.text:0040AE28 loc_40AE28:                             ; CODE XREF: sub_40ADA0+1B↑j
.text:0040AE28                 add     [ebp+27BCh], cl
.text:0040AE28 ; END OF FUNCTION CHUNK FOR sub_40AD60
.text:0040AE28 ; ---------------------------------------------------------------------------
.text:0040AE2E                 dw 0
.text:0040AE30 ; ---------------------------------------------------------------------------
.text:0040AE30
.text:0040AE30 loc_40AE30:                             ; CODE XREF: sub_40B9C0+5A↓p
.text:0040AE30                                         ; .text:0040BAAA↓p ...
.text:0040AE30                 push    ebp
.text:0040AE31
.text:0040AE31 loc_40AE31:                             ; CODE XREF: sub_40ADA0+1D↑j
.text:0040AE31                 mov     eax, 0FFFFFFFFh
.text:0040AE36                 push    edi
.text:0040AE37                 push    esi
.text:0040AE38                 push    ebx
.text:0040AE38 ; ---------------------------------------------------------------------------
.text:0040AE39                 db 83h
.text:0040AE3A ; ---------------------------------------------------------------------------
.text:0040AE3A ; START OF FUNCTION CHUNK FOR sub_40ADA0
.text:0040AE3A
.text:0040AE3A loc_40AE3A:                             ; CODE XREF: sub_40ADA0+2F↑j
.text:0040AE3A                 in      al, dx
.text:0040AE3B                 dec     esp
.text:0040AE3C                 mov     esi, [esp-40h+arg_A4]
.text:0040AE40                 mov     ebp, [esp-40h+arg_B8]
.text:0040AE40 ; END OF FUNCTION CHUNK FOR sub_40ADA0
.text:0040AE44 ; START OF FUNCTION CHUNK FOR sub_40AD60
.text:0040AE44
.text:0040AE44 loc_40AE44:                             ; CODE XREF: sub_40AD60+81↑j
.text:0040AE44                 cmp     byte ptr [esi], 3Ah ; ':'
.text:0040AE47                 mov     ebx, [ebp+4]
.text:0040AE4A                 setz    dl
.text:0040AE4D                 movzx   ecx, dl
.text:0040AE50                 dec     ecx
.text:0040AE51                 and     ecx, ebx
.text:0040AE53                 mov     [esp+arg_44], ecx
.text:0040AE57                 mov     ecx, [esp+arg_5C]
.text:0040AE5B                 test    ecx, ecx
.text:0040AE5D                 jle     loc_40AF87
.text:0040AE63                 mov     dword ptr [ebp+0Ch], 0
.text:0040AE6A                 mov     ebx, [ebp+0]
.text:0040AE6D                 test    ebx, ebx
.text:0040AE6F
.text:0040AE6F loc_40AE6F:                             ; CODE XREF: sub_40AD60+9A↑j
.text:0040AE6F                 jz      loc_40B9A0
.text:0040AE75                 mov     edi, [ebp+10h]
.text:0040AE78                 test    edi, edi
.text:0040AE7A                 jnz     short loc_40AED3
.text:0040AE7C
.text:0040AE7C loc_40AE7C:                             ; CODE XREF: sub_40AD60+AD↑j
.text:0040AE7C                 lea     esi, [esi+0]
.text:0040AE80
.text:0040AE80 loc_40AE80:                             ; CODE XREF: sub_40AD60+C4C↓j
.text:0040AE80                 mov     [ebp+24h], ebx
.text:0040AE83
.text:0040AE83 loc_40AE83:                             ; CODE XREF: sub_40AD60+AF↑j
.text:0040AE83                 mov     esi, [esp+Str]
.text:0040AE87                 mov     [ebp+20h], ebx
.text:0040AE8A                 mov     ecx, [esp+arg_74]
.text:0040AE8E                 xor     ebx, ebx
.text:0040AE90                 mov     dword ptr [ebp+14h], 0
.text:0040AE97                 test    ecx, ecx
.text:0040AE99                 jz      loc_40B980
.text:0040AE9F
.text:0040AE9F loc_40AE9F:                             ; CODE XREF: sub_40AD60+C34↓j
.text:0040AE9F                 mov     ebx, 1
.text:0040AEA4
.text:0040AEA4 loc_40AEA4:                             ; CODE XREF: sub_40AD60+C2E↓j
.text:0040AEA4                 mov     [ebp+1Ch], ebx
.text:0040AEA7                 mov     ecx, [esp+Str]
.text:0040AEAB                 movzx   eax, byte ptr [ecx]
.text:0040AEAE                 cmp     al, 2Dh ; '-'
.text:0040AEB0                 jz      loc_40B970
.text:0040AEB6                 cmp     al, 2Bh ; '+'
.text:0040AEB8                 jz      loc_40B959
.text:0040AEBE                 xor     edx, edx
.text:0040AEC0                 test    ebx, ebx
.text:0040AEC2                 setz    dl
.text:0040AEC5                 mov     [ebp+18h], edx
.text:0040AEC8
.text:0040AEC8 loc_40AEC8:                             ; CODE XREF: sub_40AD60+C05↓j
.text:0040AEC8                 mov     [esp+Str], esi
.text:0040AECC                 mov     dword ptr [ebp+10h], 1
.text:0040AED3
.text:0040AED3 loc_40AED3:                             ; CODE XREF: sub_40AD60+11A↑j
.text:0040AED3                 mov     eax, [ebp+14h]
.text:0040AED6                 test    eax, eax
.text:0040AED8                 jz      short loc_40AEE3
.text:0040AEDA                 cmp     byte ptr [eax], 0
.text:0040AEDD                 jnz     loc_40AFC0
.text:0040AEE3
.text:0040AEE3 loc_40AEE3:                             ; CODE XREF: sub_40AD60+178↑j
.text:0040AEE3                 mov     ebx, [ebp+0]
.text:0040AEE6                 cmp     [ebp+24h], ebx
.text:0040AEE9                 jle     short loc_40AEEE
.text:0040AEEB                 mov     [ebp+24h], ebx
.text:0040AEEE
.text:0040AEEE loc_40AEEE:                             ; CODE XREF: sub_40AD60+189↑j
.text:0040AEEE                 cmp     [ebp+20h], ebx
.text:0040AEF1                 jle     short loc_40AEF6
.text:0040AEF3                 mov     [ebp+20h], ebx
.text:0040AEF6
.text:0040AEF6 loc_40AEF6:                             ; CODE XREF: sub_40AD60+191↑j
.text:0040AEF6                 cmp     dword ptr [ebp+18h], 1
.text:0040AEFA                 jz      loc_40B8D0
.text:0040AF00
.text:0040AF00 loc_40AF00:                             ; CODE XREF: sub_40AD60+BE3↓j
.text:0040AF00                 cmp     ebx, [esp+arg_5C]
.text:0040AF04                 jz      loc_40B8B4
.text:0040AF0A                 cld
.text:0040AF0B                 mov     ecx, [esp+arg_60]
.text:0040AF0F                 mov     edx, 3
.text:0040AF14                 mov     edi, offset sub_40ABE0
.text:0040AF19                 mov     esi, [ecx+ebx*4]
.text:0040AF1C                 mov     ecx, edx
.text:0040AF1E                 repe cmpsb
.text:0040AF20                 jnz     short loc_40AF5C
.text:0040AF22                 mov     edx, [ebp+24h]
.text:0040AF25                 lea     eax, [ebx+1]
.text:0040AF28                 cmp     [ebp+20h], edx
.text:0040AF2B                 mov     [ebp+0], eax
.text:0040AF2E                 jz      loc_40B8C8
.text:0040AF34                 cmp     edx, eax
.text:0040AF36                 jz      short loc_40AF50
.text:0040AF38                 mov     [esp+Str2], ebp
.text:0040AF3C                 mov     ebx, [esp+arg_60]
.text:0040AF40                 mov     [esp+0], ebx
.text:0040AF43                 call    sub_40BAE0
.text:0040AF48                 nop
.text:0040AF49                 lea     esi, [esi+0]
.text:0040AF50
.text:0040AF50 loc_40AF50:                             ; CODE XREF: sub_40AD60+1D6↑j
.text:0040AF50                                         ; sub_40AD60+B6B↓j
.text:0040AF50                 mov     eax, [esp+arg_5C]
.text:0040AF54                 mov     ebx, eax
.text:0040AF56                 mov     [ebp+24h], eax
.text:0040AF59                 mov     [ebp+0], eax
.text:0040AF5C
.text:0040AF5C loc_40AF5C:                             ; CODE XREF: sub_40AD60+1C0↑j
.text:0040AF5C                 cmp     ebx, [esp+arg_5C]
.text:0040AF60                 jz      loc_40B8B4
.text:0040AF66                 mov     esi, [esp+arg_60]
.text:0040AF6A                 mov     eax, [esi+ebx*4]
.text:0040AF6D                 cmp     byte ptr [eax], 2Dh ; '-'
.text:0040AF70                 jz      short loc_40AF97
.text:0040AF72
.text:0040AF72 loc_40AF72:                             ; CODE XREF: sub_40AD60+23D↓j
.text:0040AF72                 mov     edx, [ebp+18h]
.text:0040AF75                 test    edx, edx
.text:0040AF77                 jz      short loc_40AF90
.text:0040AF79                 mov     [ebp+0Ch], eax
.text:0040AF7C                 lea     edi, [ebx+1]
.text:0040AF7F                 mov     eax, 1
.text:0040AF84                 mov     [ebp+0], edi
.text:0040AF87
.text:0040AF87 loc_40AF87:                             ; CODE XREF: sub_40AD60+FD↑j
.text:0040AF87                                         ; sub_40AD60+235↓j ...
.text:0040AF87                 add     esp, 4Ch
.text:0040AF8A                 pop     ebx
.text:0040AF8B                 pop     esi
.text:0040AF8C                 pop     edi
.text:0040AF8D                 pop     ebp
.text:0040AF8E                 retn
.text:0040AF8E ; END OF FUNCTION CHUNK FOR sub_40AD60
.text:0040AF8E ; ---------------------------------------------------------------------------
.text:0040AF8F                 align 10h
.text:0040AF90 ; START OF FUNCTION CHUNK FOR sub_40AD60
.text:0040AF90
.text:0040AF90 loc_40AF90:                             ; CODE XREF: sub_40AD60+217↑j
.text:0040AF90                                         ; sub_40AD60+B5A↓j ...
.text:0040AF90                 mov     eax, 0FFFFFFFFh
.text:0040AF95                 jmp     short loc_40AF87
.text:0040AF97 ; ---------------------------------------------------------------------------
.text:0040AF97
.text:0040AF97 loc_40AF97:                             ; CODE XREF: sub_40AD60+210↑j
.text:0040AF97                 movzx   edx, byte ptr [eax+1]
.text:0040AF9B                 test    dl, dl
.text:0040AF9D                 jz      short loc_40AF72
.text:0040AF9F                 mov     ebx, [esp+arg_68]
.text:0040AFA3                 xor     ecx, ecx
.text:0040AFA5                 test    ebx, ebx
.text:0040AFA7                 jz      short loc_40AFB2
.text:0040AFA9                 cmp     dl, 2Dh ; '-'
.text:0040AFAC                 jz      loc_40B8AA
.text:0040AFB2
.text:0040AFB2 loc_40AFB2:                             ; CODE XREF: sub_40AD60+247↑j
.text:0040AFB2                                         ; sub_40AD60+B4F↓j
.text:0040AFB2                 lea     esi, [ecx+eax+1]
.text:0040AFB6                 mov     [ebp+14h], esi
.text:0040AFB9                 lea     esi, [esi+0]
.text:0040AFC0
.text:0040AFC0 loc_40AFC0:                             ; CODE XREF: sub_40AD60+17D↑j
.text:0040AFC0                 mov     ecx, [esp+arg_68]
.text:0040AFC4                 test    ecx, ecx
.text:0040AFC6                 jz      loc_40B350
.text:0040AFCC                 mov     edx, [ebp+0]
.text:0040AFCF                 mov     edi, [esp+arg_60]
.text:0040AFD3                 mov     eax, [edi+edx*4]
.text:0040AFD6                 movzx   edx, byte ptr [eax+1]
.text:0040AFDA                 cmp     dl, 2Dh ; '-'
.text:0040AFDD                 jz      short loc_40AFF5
.text:0040AFDF                 mov     ebx, [esp+arg_70]
.text:0040AFE3                 test    ebx, ebx
.text:0040AFE5                 jz      loc_40B350
.text:0040AFEB                 cmp     byte ptr [eax+2], 0
.text:0040AFEF                 jz      loc_40B88A
.text:0040AFF5
.text:0040AFF5 loc_40AFF5:                             ; CODE XREF: sub_40AD60+27D↑j
.text:0040AFF5                                         ; sub_40AD60+B45↓j
.text:0040AFF5                 mov     [esp+arg_40], 0
.text:0040AFFD                 mov     ecx, [ebp+14h]
.text:0040B000                 mov     [esp+arg_3C], 0
.text:0040B008                 mov     [esp+arg_38], 0
.text:0040B010                 mov     edi, ecx
.text:0040B012                 mov     [esp+arg_34], 0FFFFFFFFh
.text:0040B01A                 movzx   eax, byte ptr [ecx]
.text:0040B01D                 test    al, al
.text:0040B01F                 jz      short loc_40B03C
.text:0040B021                 cmp     al, 3Dh ; '='
.text:0040B023                 jz      short loc_40B03C
.text:0040B025                 lea     esi, [esi+0]
.text:0040B029                 lea     edi, [edi+0]
.text:0040B030
.text:0040B030 loc_40B030:                             ; CODE XREF: sub_40AD60+2DA↓j
.text:0040B030                 inc     edi
.text:0040B031                 movzx   eax, byte ptr [edi]
.text:0040B034                 test    al, al
.text:0040B036                 jz      short loc_40B03C
.text:0040B038                 cmp     al, 3Dh ; '='
.text:0040B03A                 jnz     short loc_40B030
.text:0040B03C
.text:0040B03C loc_40B03C:                             ; CODE XREF: sub_40AD60+2BF↑j
.text:0040B03C                                         ; sub_40AD60+2C3↑j ...
.text:0040B03C                 mov     [esp+arg_30], 0
.text:0040B044                 mov     esi, [esp+arg_68]
.text:0040B048                 mov     ebx, [esi]
.text:0040B04A                 test    ebx, ebx
.text:0040B04C                 mov     edx, ebx
.text:0040B04E                 jz      loc_40B270
.text:0040B054                 lea     esi, [esi+0]
.text:0040B05A                 lea     edi, [edi+0]
.text:0040B060
.text:0040B060 loc_40B060:                             ; CODE XREF: sub_40AD60+32E↓j
.text:0040B060                 mov     [esp+Str2], ecx ; Str2
.text:0040B064                 mov     ebx, edi
.text:0040B066                 sub     ebx, ecx
.text:0040B068                 mov     [esp+MaxCount], ebx ; MaxCount
.text:0040B06C                 mov     [esp+0], edx    ; Str1
.text:0040B06F                 call    strncmp
.text:0040B074                 test    eax, eax
.text:0040B076                 jz      loc_40B806
.text:0040B07C
.text:0040B07C loc_40B07C:                             ; CODE XREF: sub_40AD60+ADF↓j
.text:0040B07C                                         ; sub_40AD60+AF4↓j ...
.text:0040B07C                 inc     [esp+arg_30]
.text:0040B080                 add     esi, 10h
.text:0040B083                 mov     ecx, [esi]
.text:0040B085                 test    ecx, ecx
.text:0040B087                 mov     edx, ecx
.text:0040B089                 jz      short loc_40B090
.text:0040B08B                 mov     ecx, [ebp+14h]
.text:0040B08E                 jmp     short loc_40B060
.text:0040B090 ; ---------------------------------------------------------------------------
.text:0040B090
.text:0040B090 loc_40B090:                             ; CODE XREF: sub_40AD60+329↑j
.text:0040B090                                         ; sub_40AD60+B25↓j
.text:0040B090                 mov     esi, [esp+arg_38]
.text:0040B094                 test    esi, esi
.text:0040B096                 jz      short loc_40B0A4
.text:0040B098                 mov     edx, [esp+arg_3C]
.text:0040B09C                 test    edx, edx
.text:0040B09E                 jz      loc_40B7B0
.text:0040B0A4
.text:0040B0A4 loc_40B0A4:                             ; CODE XREF: sub_40AD60+336↑j
.text:0040B0A4                 mov     eax, [esp+arg_40]
.text:0040B0A8                 test    eax, eax
.text:0040B0AA                 jz      loc_40B270
.text:0040B0B0                 mov     ecx, [ebp+0]
.text:0040B0B3                 lea     eax, [ecx+1]
.text:0040B0B6                 mov     [ebp+0], eax
.text:0040B0B9                 cmp     byte ptr [edi], 0
.text:0040B0BC                 jz      loc_40B1D0
.text:0040B0C2                 mov     ecx, [esp+arg_40]
.text:0040B0C6                 mov     esi, [ecx+4]
.text:0040B0C9                 test    esi, esi
.text:0040B0CB                 jz      short loc_40B116
.text:0040B0CD                 lea     ebx, [edi+1]
.text:0040B0D0                 mov     [ebp+0Ch], ebx
.text:0040B0D3
.text:0040B0D3 loc_40B0D3:                             ; CODE XREF: sub_40AD60+478↓j
.text:0040B0D3                                         ; sub_40AD60+494↓j
.text:0040B0D3                 mov     ebx, [ebp+14h]
.text:0040B0D6                 mov     [esp+0], ebx    ; Str
.text:0040B0D9                 call    strlen
.text:0040B0DE                 add     [ebp+14h], eax
.text:0040B0E1                 mov     esi, [esp+arg_6C]
.text:0040B0E5                 test    esi, esi
.text:0040B0E7                 jz      short loc_40B0F3
.text:0040B0E9                 mov     ebp, [esp+arg_34]
.text:0040B0ED                 mov     ecx, [esp+arg_6C]
.text:0040B0F1                 mov     [ecx], ebp
.text:0040B0F3
.text:0040B0F3 loc_40B0F3:                             ; CODE XREF: sub_40AD60+387↑j
.text:0040B0F3                 mov     eax, [esp+arg_40]
.text:0040B0F7                 mov     ecx, [eax+8]
.text:0040B0FA                 test    ecx, ecx
.text:0040B0FC                 jnz     short loc_40B10A
.text:0040B0FE                 mov     ecx, [esp+arg_40]
.text:0040B102
.text:0040B102 loc_40B102:                             ; CODE XREF: sub_40AD60+7F3↓j
.text:0040B102                 mov     eax, [ecx+0Ch]
.text:0040B105                 jmp     loc_40AF87
.text:0040B10A ; ---------------------------------------------------------------------------
.text:0040B10A
.text:0040B10A loc_40B10A:                             ; CODE XREF: sub_40AD60+39C↑j
.text:0040B10A                                         ; sub_40AD60+7E9↓j
.text:0040B10A                 mov     esi, [eax+0Ch]
.text:0040B10D                 xor     eax, eax
.text:0040B10F                 mov     [ecx], esi
.text:0040B111                 jmp     loc_40AF87
.text:0040B116 ; ---------------------------------------------------------------------------
.text:0040B116
.text:0040B116 loc_40B116:                             ; CODE XREF: sub_40AD60+36B↑j
.text:0040B116                 mov     edi, [esp+arg_44]
.text:0040B11A                 test    edi, edi
.text:0040B11C                 jz      short loc_40B170
.text:0040B11E                 mov     esi, [esp+arg_60]
.text:0040B122                 mov     edx, [esi+eax*4-4]
.text:0040B126                 cmp     byte ptr [edx+1], 2Dh ; '-'
.text:0040B12A                 jz      short loc_40B192
.text:0040B12C                 mov     dword ptr [esp+0], offset sub_40AC00
.text:0040B133                 call    ds:__imp_libintl_gettext
.text:0040B139                 mov     edx, [esp+arg_40]
.text:0040B13D                 mov     edi, [edx]
.text:0040B13F                 mov     [esp+arg_C], edi
.text:0040B143                 mov     ebx, [ebp+0]
.text:0040B146                 mov     edi, [esp+arg_60]
.text:0040B14A                 mov     ecx, [edi+ebx*4-4]
.text:0040B14E                 movsx   esi, byte ptr [ecx]
.text:0040B151                 mov     ecx, ds:_iob
.text:0040B157                 add     ecx, 40h ; '@'
.text:0040B15A                 mov     [esp+arg_8], esi
.text:0040B15E                 mov     ebx, [edi]
.text:0040B160                 mov     [esp+Str2], eax ; Format
.text:0040B164                 mov     [esp+0], ecx    ; Stream
.text:0040B167                 mov     [esp+MaxCount], ebx
.text:0040B16B                 call    fprintf
.text:0040B170
.text:0040B170 loc_40B170:                             ; CODE XREF: sub_40AD60+3BC↑j
.text:0040B170                                         ; sub_40AD60+468↓j
.text:0040B170                 mov     ecx, [ebp+14h]
.text:0040B173                 mov     [esp+0], ecx    ; Str
.text:0040B176                 call    strlen
.text:0040B17B                 add     [ebp+14h], eax
.text:0040B17E                 mov     eax, [esp+arg_40]
.text:0040B182                 mov     esi, [eax+0Ch]
.text:0040B185                 mov     [ebp+8], esi
.text:0040B188
.text:0040B188 loc_40B188:                             ; CODE XREF: sub_40AD60+5B5↓j
.text:0040B188                                         ; sub_40AD60+80E↓j ...
.text:0040B188                 mov     eax, 3Fh ; '?'
.text:0040B18D                 jmp     loc_40AF87
.text:0040B192 ; ---------------------------------------------------------------------------
.text:0040B192
.text:0040B192 loc_40B192:                             ; CODE XREF: sub_40AD60+3CA↑j
.text:0040B192                 mov     dword ptr [esp+0], offset sub_40AC40
.text:0040B199                 call    ds:__imp_libintl_gettext
.text:0040B19F                 mov     edx, [esp+arg_40]
.text:0040B1A3                 mov     edi, [esp+arg_60]
.text:0040B1A7                 mov     ecx, ds:_iob
.text:0040B1AD                 mov     esi, [edx]
.text:0040B1AF                 add     ecx, 40h ; '@'
.text:0040B1B2                 mov     [esp+arg_8], esi
.text:0040B1B6                 mov     ebx, [edi]
.text:0040B1B8                 mov     [esp+Str2], eax ; Format
.text:0040B1BC                 mov     [esp+0], ecx    ; Stream
.text:0040B1BF                 mov     [esp+MaxCount], ebx
.text:0040B1C3                 call    fprintf
.text:0040B1C8                 jmp     short loc_40B170
.text:0040B1C8 ; END OF FUNCTION CHUNK FOR sub_40AD60
.text:0040B1C8 ; ---------------------------------------------------------------------------
.text:0040B1CA                 align 10h
.text:0040B1D0 ; START OF FUNCTION CHUNK FOR sub_40AD60
.text:0040B1D0
.text:0040B1D0 loc_40B1D0:                             ; CODE XREF: sub_40AD60+35C↑j
.text:0040B1D0                 mov     ebx, [esp+arg_40]
.text:0040B1D4                 cmp     dword ptr [ebx+4], 1
.text:0040B1D8                 jnz     loc_40B0D3
.text:0040B1DE                 cmp     eax, [esp+arg_5C]
.text:0040B1E2                 jge     short loc_40B1F9
.text:0040B1E4                 mov     ebx, [esp+arg_60]
.text:0040B1E8                 lea     edi, [ecx+2]
.text:0040B1EB                 mov     [ebp+0], edi
.text:0040B1EE                 mov     esi, [ebx+eax*4]
.text:0040B1F1                 mov     [ebp+0Ch], esi
.text:0040B1F4                 jmp     loc_40B0D3
.text:0040B1F9 ; ---------------------------------------------------------------------------
.text:0040B1F9
.text:0040B1F9 loc_40B1F9:                             ; CODE XREF: sub_40AD60+482↑j
.text:0040B1F9                 mov     edx, [esp+arg_44]
.text:0040B1FD                 test    edx, edx
.text:0040B1FF                 jnz     short loc_40B230
.text:0040B201
.text:0040B201 loc_40B201:                             ; CODE XREF: sub_40AD60+507↓j
.text:0040B201                 mov     edx, [ebp+14h]
.text:0040B204                 mov     [esp+0], edx    ; Str
.text:0040B207                 call    strlen
.text:0040B20C                 add     [ebp+14h], eax
.text:0040B20F                 mov     eax, [esp+arg_40]
.text:0040B213                 mov     edi, [eax+0Ch]
.text:0040B216                 mov     [ebp+8], edi
.text:0040B219
.text:0040B219 loc_40B219:                             ; CODE XREF: sub_40AD60+892↓j
.text:0040B219                 mov     ebp, [esp+Str]
.text:0040B21D                 cmp     byte ptr [ebp+0], 3Ah ; ':'
.text:0040B221                 setnz   bl
.text:0040B224                 movzx   esi, bl
.text:0040B227                 lea     eax, [esi+esi*4+3Ah]
.text:0040B22B                 jmp     loc_40AF87
.text:0040B230 ; ---------------------------------------------------------------------------
.text:0040B230
.text:0040B230 loc_40B230:                             ; CODE XREF: sub_40AD60+49F↑j
.text:0040B230                 mov     dword ptr [esp+0], offset sub_40AC80
.text:0040B237                 call    ds:__imp_libintl_gettext
.text:0040B23D                 mov     ecx, [ebp+0]
.text:0040B240                 mov     esi, [esp+arg_60]
.text:0040B244                 mov     ebx, [esi+ecx*4-4]
.text:0040B248                 mov     ecx, ds:_iob
.text:0040B24E                 mov     [esp+arg_8], ebx
.text:0040B252                 mov     edi, [esi]
.text:0040B254                 add     ecx, 40h ; '@'
.text:0040B257                 mov     [esp+Str2], eax ; Format
.text:0040B25B                 mov     [esp+0], ecx    ; Stream
.text:0040B25E                 mov     [esp+MaxCount], edi
.text:0040B262                 call    fprintf
.text:0040B267                 jmp     short loc_40B201
.text:0040B267 ; END OF FUNCTION CHUNK FOR sub_40AD60
.text:0040B267 ; ---------------------------------------------------------------------------
.text:0040B269                 align 10h
.text:0040B270 ; START OF FUNCTION CHUNK FOR sub_40AD60
.text:0040B270
.text:0040B270 loc_40B270:                             ; CODE XREF: sub_40AD60+2EE↑j
.text:0040B270                                         ; sub_40AD60+34A↑j
.text:0040B270                 mov     eax, [esp+arg_70]
.text:0040B274                 test    eax, eax
.text:0040B276                 jz      short loc_40B2A6
.text:0040B278                 mov     ebx, [ebp+0]
.text:0040B27B                 mov     esi, [esp+arg_60]
.text:0040B27F                 mov     edi, [esi+ebx*4]
.text:0040B282                 cmp     byte ptr [edi+1], 2Dh ; '-'
.text:0040B286                 jz      short loc_40B2A9
.text:0040B288                 mov     ecx, [ebp+14h]
.text:0040B28B                 mov     edx, [esp+Str]
.text:0040B28F                 movsx   ebx, byte ptr [ecx]
.text:0040B292                 mov     [esp+0], edx    ; Str
.text:0040B295                 mov     [esp+Str2], ebx ; Val
.text:0040B299                 call    strchr
.text:0040B29E                 test    eax, eax
.text:0040B2A0                 jnz     loc_40B350
.text:0040B2A6
.text:0040B2A6 loc_40B2A6:                             ; CODE XREF: sub_40AD60+516↑j
.text:0040B2A6                 mov     ebx, [ebp+0]
.text:0040B2A9
.text:0040B2A9 loc_40B2A9:                             ; CODE XREF: sub_40AD60+526↑j
.text:0040B2A9                 mov     eax, [esp+arg_44]
.text:0040B2AD                 test    eax, eax
.text:0040B2AF                 jz      short loc_40B301
.text:0040B2B1                 mov     esi, [esp+arg_60]
.text:0040B2B5                 mov     edi, [esi+ebx*4]
.text:0040B2B8                 cmp     byte ptr [edi+1], 2Dh ; '-'
.text:0040B2BC                 jz      short loc_40B31A
.text:0040B2BE                 mov     dword ptr [esp+0], offset sub_40ACC0
.text:0040B2C5                 call    ds:__imp_libintl_gettext
.text:0040B2CB                 mov     edi, [ebp+14h]
.text:0040B2CE                 mov     [esp+arg_C], edi
.text:0040B2D2                 mov     ebx, [ebp+0]
.text:0040B2D5                 mov     edi, [esp+arg_60]
.text:0040B2D9                 mov     esi, [edi+ebx*4]
.text:0040B2DC                 movsx   ecx, byte ptr [esi]
.text:0040B2DF                 mov     esi, ds:_iob
.text:0040B2E5                 add     esi, 40h ; '@'
.text:0040B2E8                 mov     [esp+arg_8], ecx
.text:0040B2EC                 mov     ebx, [edi]
.text:0040B2EE                 mov     [esp+Str2], eax ; Format
.text:0040B2F2                 mov     [esp+0], esi    ; Stream
.text:0040B2F5                 mov     [esp+MaxCount], ebx
.text:0040B2F9                 call    fprintf
.text:0040B2FE
.text:0040B2FE loc_40B2FE:                             ; CODE XREF: sub_40AD60+5ED↓j
.text:0040B2FE                 mov     ebx, [ebp+0]
.text:0040B301
.text:0040B301 loc_40B301:                             ; CODE XREF: sub_40AD60+54F↑j
.text:0040B301                 mov     dword ptr [ebp+14h], offset loc_40ACE0
.text:0040B308                 lea     edx, [ebx+1]
.text:0040B30B                 mov     [ebp+0], edx
.text:0040B30E
.text:0040B30E loc_40B30E:                             ; CODE XREF: sub_40AD60+A69↓j
.text:0040B30E                 mov     dword ptr [ebp+8], 0
.text:0040B315                 jmp     loc_40B188
.text:0040B31A ; ---------------------------------------------------------------------------
.text:0040B31A
.text:0040B31A loc_40B31A:                             ; CODE XREF: sub_40AD60+55C↑j
.text:0040B31A                 mov     dword ptr [esp+0], offset sub_40AD00
.text:0040B321                 call    ds:__imp_libintl_gettext
.text:0040B327                 mov     ecx, [ebp+14h]
.text:0040B32A                 mov     edi, [esp+arg_60]
.text:0040B32E                 mov     edx, ds:_iob
.text:0040B334                 mov     [esp+arg_8], ecx
.text:0040B338                 mov     ebx, [edi]
.text:0040B33A                 add     edx, 40h ; '@'
.text:0040B33D                 mov     [esp+Str2], eax ; Format
.text:0040B341                 mov     [esp+MaxCount], ebx
.text:0040B345                 mov     [esp+0], edx    ; Stream
.text:0040B348                 call    fprintf
.text:0040B34D                 jmp     short loc_40B2FE
.text:0040B34D ; END OF FUNCTION CHUNK FOR sub_40AD60
.text:0040B34D ; ---------------------------------------------------------------------------
.text:0040B34F                 align 10h
.text:0040B350 ; START OF FUNCTION CHUNK FOR sub_40AD60
.text:0040B350
.text:0040B350 loc_40B350:                             ; CODE XREF: sub_40AD60+266↑j
.text:0040B350                                         ; sub_40AD60+285↑j ...
.text:0040B350                 mov     esi, [ebp+14h]
.text:0040B353                 movzx   ebx, byte ptr [esi]
.text:0040B356                 inc     esi
.text:0040B357                 mov     [ebp+14h], esi
.text:0040B35A                 mov     ecx, [esp+Str]
.text:0040B35E                 movsx   esi, bl
.text:0040B361                 mov     [esp+Str2], esi ; Val
.text:0040B365                 mov     edi, esi
.text:0040B367                 mov     [esp+0], ecx    ; Str
.text:0040B36A                 call    strchr
.text:0040B36F                 mov     ecx, [ebp+14h]
.text:0040B372                 cmp     byte ptr [ecx], 0
.text:0040B375                 jnz     short loc_40B37A
.text:0040B377                 inc     dword ptr [ebp+0]
.text:0040B37A
.text:0040B37A loc_40B37A:                             ; CODE XREF: sub_40AD60+615↑j
.text:0040B37A                 test    eax, eax
.text:0040B37C                 jz      loc_40B760
.text:0040B382                 cmp     bl, 3Ah ; ':'
.text:0040B385                 jz      loc_40B760
.text:0040B38B                 cmp     byte ptr [eax], 57h ; 'W'
.text:0040B38E                 jz      loc_40B446
.text:0040B394                 movzx   edx, byte ptr [eax+1]
.text:0040B398
.text:0040B398 loc_40B398:                             ; CODE XREF: sub_40AD60+6ED↓j
.text:0040B398                 cmp     dl, 3Ah ; ':'
.text:0040B39B                 jz      short loc_40B3A4
.text:0040B39D
.text:0040B39D loc_40B39D:                             ; CODE XREF: sub_40AD60+660↓j
.text:0040B39D                 mov     eax, esi
.text:0040B39F                 jmp     loc_40AF87
.text:0040B3A4 ; ---------------------------------------------------------------------------
.text:0040B3A4
.text:0040B3A4 loc_40B3A4:                             ; CODE XREF: sub_40AD60+63B↑j
.text:0040B3A4                 cmp     byte ptr [eax+2], 3Ah ; ':'
.text:0040B3A8                 jz      loc_40B431
.text:0040B3AE                 cmp     byte ptr [ecx], 0
.text:0040B3B1                 jz      short loc_40B3C2
.text:0040B3B3
.text:0040B3B3 loc_40B3B3:                             ; CODE XREF: sub_40AD60+6D4↓j
.text:0040B3B3                 inc     dword ptr [ebp+0]
.text:0040B3B6                 mov     [ebp+0Ch], ecx
.text:0040B3B9
.text:0040B3B9 loc_40B3B9:                             ; CODE XREF: sub_40AD60+67B↓j
.text:0040B3B9                                         ; sub_40AD60+696↓j ...
.text:0040B3B9                 mov     dword ptr [ebp+14h], 0
.text:0040B3C0                 jmp     short loc_40B39D
.text:0040B3C2 ; ---------------------------------------------------------------------------
.text:0040B3C2
.text:0040B3C2 loc_40B3C2:                             ; CODE XREF: sub_40AD60+651↑j
.text:0040B3C2                 mov     ecx, [ebp+0]
.text:0040B3C5                 cmp     ecx, [esp+arg_5C]
.text:0040B3C9                 jz      short loc_40B3DD
.text:0040B3CB                 mov     eax, [esp+arg_60]
.text:0040B3CF                 lea     edx, [ecx+1]
.text:0040B3D2                 mov     [ebp+0], edx
.text:0040B3D5                 mov     ebx, [eax+ecx*4]
.text:0040B3D8                 mov     [ebp+0Ch], ebx
.text:0040B3DB                 jmp     short loc_40B3B9
.text:0040B3DD ; ---------------------------------------------------------------------------
.text:0040B3DD
.text:0040B3DD loc_40B3DD:                             ; CODE XREF: sub_40AD60+669↑j
.text:0040B3DD                 mov     ecx, [esp+arg_44]
.text:0040B3E1                 test    ecx, ecx
.text:0040B3E3                 jnz     short loc_40B3FF
.text:0040B3E5
.text:0040B3E5 loc_40B3E5:                             ; CODE XREF: sub_40AD60+6CF↓j
.text:0040B3E5                 mov     [ebp+8], edi
.text:0040B3E8                 mov     edi, [esp+Str]
.text:0040B3EC                 cmp     byte ptr [edi], 3Ah ; ':'
.text:0040B3EF                 jz      short loc_40B3F8
.text:0040B3F1                 mov     esi, 3Fh ; '?'
.text:0040B3F6                 jmp     short loc_40B3B9
.text:0040B3F8 ; ---------------------------------------------------------------------------
.text:0040B3F8
.text:0040B3F8 loc_40B3F8:                             ; CODE XREF: sub_40AD60+68F↑j
.text:0040B3F8                 mov     esi, 3Ah ; ':'
.text:0040B3FD                 jmp     short loc_40B3B9
.text:0040B3FF ; ---------------------------------------------------------------------------
.text:0040B3FF
.text:0040B3FF loc_40B3FF:                             ; CODE XREF: sub_40AD60+683↑j
.text:0040B3FF                 mov     dword ptr [esp+0], 40AD20h
.text:0040B406                 call    ds:__imp_libintl_gettext
.text:0040B40C                 mov     [esp+arg_8], edi
.text:0040B410                 mov     ebx, [esp+arg_60]
.text:0040B414                 mov     edx, ds:_iob
.text:0040B41A                 mov     esi, [ebx]
.text:0040B41C                 add     edx, 40h ; '@'
.text:0040B41F                 mov     [esp+Str2], eax ; Format
.text:0040B423                 mov     [esp+MaxCount], esi
.text:0040B427                 mov     [esp+0], edx    ; Stream
.text:0040B42A                 call    fprintf
.text:0040B42F                 jmp     short loc_40B3E5
.text:0040B431 ; ---------------------------------------------------------------------------
.text:0040B431
.text:0040B431 loc_40B431:                             ; CODE XREF: sub_40AD60+648↑j
.text:0040B431                 cmp     byte ptr [ecx], 0
.text:0040B434                 jnz     loc_40B3B3
.text:0040B43A                 mov     dword ptr [ebp+0Ch], 0
.text:0040B441                 jmp     loc_40B3B9
.text:0040B446 ; ---------------------------------------------------------------------------
.text:0040B446
.text:0040B446 loc_40B446:                             ; CODE XREF: sub_40AD60+62E↑j
.text:0040B446                 movzx   edx, byte ptr [eax+1]
.text:0040B44A                 cmp     dl, 3Bh ; ';'
.text:0040B44D                 jnz     loc_40B398
.text:0040B453                 mov     [esp+arg_2C], 0
.text:0040B45B                 mov     [esp+arg_28], 0
.text:0040B463                 mov     [esp+arg_24], 0
.text:0040B46B                 mov     [esp+arg_20], 0
.text:0040B473                 cmp     byte ptr [ecx], 0
.text:0040B476                 jz      loc_40B6EB
.text:0040B47C                 inc     dword ptr [ebp+0]
.text:0040B47F                 mov     [ebp+0Ch], ecx
.text:0040B482
.text:0040B482 loc_40B482:                             ; CODE XREF: sub_40AD60+9A4↓j
.text:0040B482                 mov     edi, [ebp+0Ch]
.text:0040B485                 mov     [ebp+14h], edi
.text:0040B488                 movzx   eax, byte ptr [edi]
.text:0040B48B                 test    al, al
.text:0040B48D                 jz      short loc_40B49F
.text:0040B48F                 cmp     al, 3Dh ; '='
.text:0040B491                 jz      short loc_40B49F
.text:0040B493
.text:0040B493 loc_40B493:                             ; CODE XREF: sub_40AD60+73D↓j
.text:0040B493                 inc     edi
.text:0040B494                 movzx   eax, byte ptr [edi]
.text:0040B497                 test    al, al
.text:0040B499                 jz      short loc_40B49F
.text:0040B49B                 cmp     al, 3Dh ; '='
.text:0040B49D                 jnz     short loc_40B493
.text:0040B49F
.text:0040B49F loc_40B49F:                             ; CODE XREF: sub_40AD60+72D↑j
.text:0040B49F                                         ; sub_40AD60+731↑j ...
.text:0040B49F                 mov     [esp+arg_1C], 0
.text:0040B4A7                 mov     esi, [esp+arg_68]
.text:0040B4AB                 mov     eax, [esi]
.text:0040B4AD                 test    eax, eax
.text:0040B4AF                 jz      loc_40B630
.text:0040B4B5                 mov     ecx, eax
.text:0040B4B7
.text:0040B4B7 loc_40B4B7:                             ; CODE XREF: sub_40AD60+783↓j
.text:0040B4B7                 mov     ebx, [ebp+14h]
.text:0040B4BA                 mov     eax, edi
.text:0040B4BC                 mov     [esp+0], ecx    ; Str1
.text:0040B4BF                 sub     eax, ebx
.text:0040B4C1                 mov     [esp+MaxCount], eax ; MaxCount
.text:0040B4C5                 mov     [esp+Str2], ebx ; Str2
.text:0040B4C9                 call    strncmp
.text:0040B4CE                 test    eax, eax
.text:0040B4D0                 jz      loc_40B697
.text:0040B4D6
.text:0040B4D6 loc_40B4D6:                             ; CODE XREF: sub_40AD60+95C↓j
.text:0040B4D6                                         ; sub_40AD60+96D↓j
.text:0040B4D6                 inc     [esp+arg_1C]
.text:0040B4DA                 add     esi, 10h
.text:0040B4DD                 mov     edx, [esi]
.text:0040B4DF                 test    edx, edx
.text:0040B4E1                 mov     ecx, edx
.text:0040B4E3                 jnz     short loc_40B4B7
.text:0040B4E5
.text:0040B4E5 loc_40B4E5:                             ; CODE XREF: sub_40AD60+986↓j
.text:0040B4E5                 mov     esi, [esp+arg_24]
.text:0040B4E9                 test    esi, esi
.text:0040B4EB                 jz      short loc_40B4F9
.text:0040B4ED                 mov     ebx, [esp+arg_28]
.text:0040B4F1                 test    ebx, ebx
.text:0040B4F3                 jz      loc_40B641
.text:0040B4F9
.text:0040B4F9 loc_40B4F9:                             ; CODE XREF: sub_40AD60+78B↑j
.text:0040B4F9                 mov     esi, [esp+arg_2C]
.text:0040B4FD                 test    esi, esi
.text:0040B4FF                 jz      loc_40B630
.text:0040B505                 cmp     byte ptr [edi], 0
.text:0040B508                 jz      loc_40B5B0
.text:0040B50E                 mov     ecx, [esp+arg_2C]
.text:0040B512                 mov     ebx, [ecx+4]
.text:0040B515                 test    ebx, ebx
.text:0040B517                 jz      short loc_40B558
.text:0040B519                 lea     edx, [edi+1]
.text:0040B51C                 mov     [ebp+0Ch], edx
.text:0040B51F
.text:0040B51F loc_40B51F:                             ; CODE XREF: sub_40AD60+858↓j
.text:0040B51F                                         ; sub_40AD60+877↓j
.text:0040B51F                 mov     edi, [ebp+14h]
.text:0040B522                 mov     [esp+0], edi    ; Str
.text:0040B525                 call    strlen
.text:0040B52A                 add     [ebp+14h], eax
.text:0040B52D                 mov     eax, [esp+arg_6C]
.text:0040B531                 test    eax, eax
.text:0040B533                 jz      short loc_40B540
.text:0040B535                 mov     edx, [esp+arg_20]
.text:0040B539                 mov     ebp, [esp+arg_6C]
.text:0040B53D                 mov     [ebp+0], edx
.text:0040B540
.text:0040B540 loc_40B540:                             ; CODE XREF: sub_40AD60+7D3↑j
.text:0040B540                 mov     eax, [esp+arg_2C]
.text:0040B544                 mov     ecx, [eax+8]
.text:0040B547                 test    ecx, ecx
.text:0040B549                 jnz     loc_40B10A
.text:0040B54F                 mov     ecx, [esp+arg_2C]
.text:0040B553                 jmp     loc_40B102
.text:0040B558 ; ---------------------------------------------------------------------------
.text:0040B558
.text:0040B558 loc_40B558:                             ; CODE XREF: sub_40AD60+7B7↑j
.text:0040B558                 mov     eax, [esp+arg_44]
.text:0040B55C                 test    eax, eax
.text:0040B55E                 jnz     short loc_40B573
.text:0040B560
.text:0040B560 loc_40B560:                             ; CODE XREF: sub_40AD60+849↓j
.text:0040B560                 mov     ecx, [ebp+14h]
.text:0040B563                 mov     [esp+0], ecx    ; Str
.text:0040B566                 call    strlen
.text:0040B56B                 add     [ebp+14h], eax
.text:0040B56E                 jmp     loc_40B188
.text:0040B573 ; ---------------------------------------------------------------------------
.text:0040B573
.text:0040B573 loc_40B573:                             ; CODE XREF: sub_40AD60+7FE↑j
.text:0040B573                 mov     dword ptr [esp+0], offset sub_40AD60
.text:0040B57A                 call    ds:__imp_libintl_gettext
.text:0040B580                 mov     edx, [esp+arg_2C]
.text:0040B584                 mov     ebx, [esp+arg_60]
.text:0040B588                 mov     edi, [edx]
.text:0040B58A                 mov     [esp+arg_8], edi
.text:0040B58E                 mov     edi, ds:_iob
.text:0040B594                 mov     esi, [ebx]
.text:0040B596                 mov     [esp+Str2], eax ; Format
.text:0040B59A                 add     edi, 40h ; '@'
.text:0040B59D                 mov     [esp+MaxCount], esi
.text:0040B5A1                 mov     [esp+0], edi    ; Stream
.text:0040B5A4                 call    fprintf
.text:0040B5A9                 jmp     short loc_40B560
.text:0040B5A9 ; END OF FUNCTION CHUNK FOR sub_40AD60
.text:0040B5A9 ; ---------------------------------------------------------------------------
.text:0040B5AB                 align 10h
.text:0040B5B0 ; START OF FUNCTION CHUNK FOR sub_40AD60
.text:0040B5B0
.text:0040B5B0 loc_40B5B0:                             ; CODE XREF: sub_40AD60+7A8↑j
.text:0040B5B0                 mov     esi, [esp+arg_2C]
.text:0040B5B4                 cmp     dword ptr [esi+4], 1
.text:0040B5B8                 jnz     loc_40B51F
.text:0040B5BE                 mov     ecx, [ebp+0]
.text:0040B5C1                 cmp     ecx, [esp+arg_5C]
.text:0040B5C5                 jge     short loc_40B5DC
.text:0040B5C7                 mov     eax, [esp+arg_60]
.text:0040B5CB                 lea     ebx, [ecx+1]
.text:0040B5CE                 mov     [ebp+0], ebx
.text:0040B5D1                 mov     edi, [eax+ecx*4]
.text:0040B5D4                 mov     [ebp+0Ch], edi
.text:0040B5D7                 jmp     loc_40B51F
.text:0040B5DC ; ---------------------------------------------------------------------------
.text:0040B5DC
.text:0040B5DC loc_40B5DC:                             ; CODE XREF: sub_40AD60+865↑j
.text:0040B5DC                 mov     edx, [esp+arg_44]
.text:0040B5E0                 test    edx, edx
.text:0040B5E2                 jnz     short loc_40B5F7
.text:0040B5E4
.text:0040B5E4 loc_40B5E4:                             ; CODE XREF: sub_40AD60+8CE↓j
.text:0040B5E4                 mov     edx, [ebp+14h]
.text:0040B5E7                 mov     [esp+0], edx    ; Str
.text:0040B5EA                 call    strlen
.text:0040B5EF                 add     [ebp+14h], eax
.text:0040B5F2                 jmp     loc_40B219
.text:0040B5F7 ; ---------------------------------------------------------------------------
.text:0040B5F7
.text:0040B5F7 loc_40B5F7:                             ; CODE XREF: sub_40AD60+882↑j
.text:0040B5F7                 mov     dword ptr [esp+0], offset sub_40AC80
.text:0040B5FE                 call    ds:__imp_libintl_gettext
.text:0040B604                 mov     ecx, [ebp+0]
.text:0040B607                 mov     ebx, [esp+arg_60]
.text:0040B60B                 mov     edi, [ebx+ecx*4-4]
.text:0040B60F                 mov     ecx, ds:_iob
.text:0040B615                 mov     [esp+arg_8], edi
.text:0040B619                 mov     esi, [ebx]
.text:0040B61B                 add     ecx, 40h ; '@'
.text:0040B61E                 mov     [esp+Str2], eax ; Format
.text:0040B622                 mov     [esp+0], ecx    ; Stream
.text:0040B625                 mov     [esp+MaxCount], esi
.text:0040B629                 call    fprintf
.text:0040B62E                 jmp     short loc_40B5E4
.text:0040B630 ; ---------------------------------------------------------------------------
.text:0040B630
.text:0040B630 loc_40B630:                             ; CODE XREF: sub_40AD60+74F↑j
.text:0040B630                                         ; sub_40AD60+79F↑j
.text:0040B630                 mov     dword ptr [ebp+14h], 0
.text:0040B637                 mov     eax, 57h ; 'W'
.text:0040B63C                 jmp     loc_40AF87
.text:0040B641 ; ---------------------------------------------------------------------------
.text:0040B641
.text:0040B641 loc_40B641:                             ; CODE XREF: sub_40AD60+793↑j
.text:0040B641                 mov     edi, [esp+arg_44]
.text:0040B645                 test    edi, edi
.text:0040B647                 jnz     short loc_40B65F
.text:0040B649
.text:0040B649 loc_40B649:                             ; CODE XREF: sub_40AD60+935↓j
.text:0040B649                 mov     edx, [ebp+14h]
.text:0040B64C                 mov     [esp+0], edx    ; Str
.text:0040B64F                 call    strlen
.text:0040B654                 add     [ebp+14h], eax
.text:0040B657                 inc     dword ptr [ebp+0]
.text:0040B65A                 jmp     loc_40B188
.text:0040B65F ; ---------------------------------------------------------------------------
.text:0040B65F
.text:0040B65F loc_40B65F:                             ; CODE XREF: sub_40AD60+8E7↑j
.text:0040B65F                 mov     dword ptr [esp+0], offset sub_40ADA0
.text:0040B666                 call    ds:__imp_libintl_gettext
.text:0040B66C                 mov     ecx, [ebp+0]
.text:0040B66F                 mov     ebx, [esp+arg_60]
.text:0040B673                 mov     edi, [ebx+ecx*4]
.text:0040B676                 mov     ecx, ds:_iob
.text:0040B67C                 mov     [esp+arg_8], edi
.text:0040B680                 mov     esi, [ebx]
.text:0040B682                 add     ecx, 40h ; '@'
.text:0040B685                 mov     [esp+Str2], eax ; Format
.text:0040B689                 mov     [esp+0], ecx    ; Stream
.text:0040B68C                 mov     [esp+MaxCount], esi
.text:0040B690                 call    fprintf
.text:0040B695                 jmp     short loc_40B649
.text:0040B697 ; ---------------------------------------------------------------------------
.text:0040B697
.text:0040B697 loc_40B697:                             ; CODE XREF: sub_40AD60+770↑j
.text:0040B697                 mov     edx, [ebp+14h]
.text:0040B69A                 mov     ebx, edi
.text:0040B69C                 mov     ecx, [esi]
.text:0040B69E                 sub     ebx, edx
.text:0040B6A0                 mov     [esp+0], ecx    ; Str
.text:0040B6A3                 call    strlen
.text:0040B6A8                 cmp     ebx, eax
.text:0040B6AA                 jz      short loc_40B6D2
.text:0040B6AC                 mov     ebx, [esp+arg_2C]
.text:0040B6B0                 test    ebx, ebx
.text:0040B6B2                 jz      short loc_40B6C1
.text:0040B6B4                 mov     [esp+arg_24], 1
.text:0040B6BC                 jmp     loc_40B4D6
.text:0040B6C1 ; ---------------------------------------------------------------------------
.text:0040B6C1
.text:0040B6C1 loc_40B6C1:                             ; CODE XREF: sub_40AD60+952↑j
.text:0040B6C1                 mov     [esp+arg_2C], esi
.text:0040B6C5                 mov     ecx, [esp+arg_1C]
.text:0040B6C9                 mov     [esp+arg_20], ecx
.text:0040B6CD                 jmp     loc_40B4D6
.text:0040B6D2 ; ---------------------------------------------------------------------------
.text:0040B6D2
.text:0040B6D2 loc_40B6D2:                             ; CODE XREF: sub_40AD60+94A↑j
.text:0040B6D2                 mov     [esp+arg_2C], esi
.text:0040B6D6                 mov     eax, [esp+arg_1C]
.text:0040B6DA                 mov     [esp+arg_28], 1
.text:0040B6E2                 mov     [esp+arg_20], eax
.text:0040B6E6                 jmp     loc_40B4E5
.text:0040B6EB ; ---------------------------------------------------------------------------
.text:0040B6EB
.text:0040B6EB loc_40B6EB:                             ; CODE XREF: sub_40AD60+716↑j
.text:0040B6EB                 mov     edx, [ebp+0]
.text:0040B6EE                 cmp     edx, [esp+arg_5C]
.text:0040B6F2                 jz      short loc_40B709
.text:0040B6F4                 mov     ebx, [esp+arg_60]
.text:0040B6F8                 lea     esi, [edx+1]
.text:0040B6FB                 mov     [ebp+0], esi
.text:0040B6FE                 mov     edi, [ebx+edx*4]
.text:0040B701                 mov     [ebp+0Ch], edi
.text:0040B704                 jmp     loc_40B482
.text:0040B709 ; ---------------------------------------------------------------------------
.text:0040B709
.text:0040B709 loc_40B709:                             ; CODE XREF: sub_40AD60+992↑j
.text:0040B709                 mov     edi, [esp+arg_44]
.text:0040B70D                 test    edi, edi
.text:0040B70F                 jnz     short loc_40B72C
.text:0040B711
.text:0040B711 loc_40B711:                             ; CODE XREF: sub_40AD60+9FC↓j
.text:0040B711                 mov     [ebp+8], esi
.text:0040B714                 mov     ebp, [esp+Str]
.text:0040B718                 cmp     byte ptr [ebp+0], 3Ah ; ':'
.text:0040B71C                 jz      short loc_40B728
.text:0040B71E                 mov     bl, 3Fh ; '?'
.text:0040B720
.text:0040B720 loc_40B720:                             ; CODE XREF: sub_40AD60+9CA↓j
.text:0040B720                 movsx   eax, bl
.text:0040B723                 jmp     loc_40AF87
.text:0040B728 ; ---------------------------------------------------------------------------
.text:0040B728
.text:0040B728 loc_40B728:                             ; CODE XREF: sub_40AD60+9BC↑j
.text:0040B728                 mov     bl, 3Ah ; ':'
.text:0040B72A                 jmp     short loc_40B720
.text:0040B72C ; ---------------------------------------------------------------------------
.text:0040B72C
.text:0040B72C loc_40B72C:                             ; CODE XREF: sub_40AD60+9AF↑j
.text:0040B72C                 mov     dword ptr [esp+0], 40AD20h
.text:0040B733                 call    ds:__imp_libintl_gettext
.text:0040B739                 mov     [esp+arg_8], esi
.text:0040B73D                 mov     edx, [esp+arg_60]
.text:0040B741                 mov     ecx, ds:_iob
.text:0040B747                 mov     ebx, [edx]
.text:0040B749                 add     ecx, 40h ; '@'
.text:0040B74C                 mov     [esp+Str2], eax ; Format
.text:0040B750                 mov     [esp+MaxCount], ebx
.text:0040B754                 mov     [esp+0], ecx    ; Stream
.text:0040B757                 call    fprintf
.text:0040B75C                 jmp     short loc_40B711
.text:0040B75C ; END OF FUNCTION CHUNK FOR sub_40AD60
.text:0040B75C ; ---------------------------------------------------------------------------
.text:0040B75E                 align 10h
.text:0040B760 ; START OF FUNCTION CHUNK FOR sub_40AD60
.text:0040B760
.text:0040B760 loc_40B760:                             ; CODE XREF: sub_40AD60+61C↑j
.text:0040B760                                         ; sub_40AD60+625↑j
.text:0040B760                 mov     eax, [esp+arg_44]
.text:0040B764                 test    eax, eax
.text:0040B766                 jz      short loc_40B79F
.text:0040B768                 mov     ebx, [ebp+1Ch]
.text:0040B76B                 test    ebx, ebx
.text:0040B76D                 jz      short loc_40B7A7
.text:0040B76F                 mov     dword ptr [esp+0], offset loc_40ADC1
.text:0040B776
.text:0040B776 loc_40B776:                             ; CODE XREF: sub_40AD60+A4E↓j
.text:0040B776                 call    ds:__imp_libintl_gettext
.text:0040B77C                 mov     [esp+arg_8], esi
.text:0040B780                 mov     ebx, [esp+arg_60]
.text:0040B784                 mov     edx, ds:_iob
.text:0040B78A                 mov     esi, [ebx]
.text:0040B78C                 add     edx, 40h ; '@'
.text:0040B78F                 mov     [esp+Str2], eax ; Format
.text:0040B793                 mov     [esp+MaxCount], esi
.text:0040B797                 mov     [esp+0], edx    ; Stream
.text:0040B79A                 call    fprintf
.text:0040B79F
.text:0040B79F loc_40B79F:                             ; CODE XREF: sub_40AD60+A06↑j
.text:0040B79F                 mov     [ebp+8], edi
.text:0040B7A2                 jmp     loc_40B188
.text:0040B7A7 ; ---------------------------------------------------------------------------
.text:0040B7A7
.text:0040B7A7 loc_40B7A7:                             ; CODE XREF: sub_40AD60+A0D↑j
.text:0040B7A7                 mov     dword ptr [esp+0], offset loc_40ADDB
.text:0040B7AE                 jmp     short loc_40B776
.text:0040B7B0 ; ---------------------------------------------------------------------------
.text:0040B7B0
.text:0040B7B0 loc_40B7B0:                             ; CODE XREF: sub_40AD60+33E↑j
.text:0040B7B0                 mov     edi, [esp+arg_44]
.text:0040B7B4                 test    edi, edi
.text:0040B7B6                 jnz     short loc_40B7CE
.text:0040B7B8
.text:0040B7B8 loc_40B7B8:                             ; CODE XREF: sub_40AD60+AA4↓j
.text:0040B7B8                 mov     edx, [ebp+14h]
.text:0040B7BB                 mov     [esp+0], edx    ; Str
.text:0040B7BE                 call    strlen
.text:0040B7C3                 add     [ebp+14h], eax
.text:0040B7C6                 inc     dword ptr [ebp+0]
.text:0040B7C9                 jmp     loc_40B30E
.text:0040B7CE ; ---------------------------------------------------------------------------
.text:0040B7CE
.text:0040B7CE loc_40B7CE:                             ; CODE XREF: sub_40AD60+A56↑j
.text:0040B7CE                 mov     dword ptr [esp+0], offset loc_40ADF5
.text:0040B7D5                 call    ds:__imp_libintl_gettext
.text:0040B7DB                 mov     ebx, [ebp+0]
.text:0040B7DE                 mov     edi, [esp+arg_60]
.text:0040B7E2                 mov     ecx, [edi+ebx*4]
.text:0040B7E5                 mov     ebx, ds:_iob
.text:0040B7EB                 mov     [esp+arg_8], ecx
.text:0040B7EF                 mov     esi, [edi]
.text:0040B7F1                 add     ebx, 40h ; '@'
.text:0040B7F4                 mov     [esp+Str2], eax ; Format
.text:0040B7F8                 mov     [esp+0], ebx    ; Stream
.text:0040B7FB                 mov     [esp+MaxCount], esi
.text:0040B7FF                 call    fprintf
.text:0040B804                 jmp     short loc_40B7B8
.text:0040B806 ; ---------------------------------------------------------------------------
.text:0040B806
.text:0040B806 loc_40B806:                             ; CODE XREF: sub_40AD60+316↑j
.text:0040B806                 mov     ecx, [ebp+14h]
.text:0040B809                 mov     ebx, edi
.text:0040B80B                 mov     edx, [esi]
.text:0040B80D                 sub     ebx, ecx
.text:0040B80F                 mov     [esp+0], edx    ; Str
.text:0040B812                 call    strlen
.text:0040B817                 cmp     ebx, eax
.text:0040B819                 jz      short loc_40B871
.text:0040B81B                 mov     ebx, [esp+arg_40]
.text:0040B81F                 test    ebx, ebx
.text:0040B821                 jz      short loc_40B860
.text:0040B823                 mov     edx, [esp+arg_70]
.text:0040B827                 test    edx, edx
.text:0040B829                 jnz     short loc_40B837
.text:0040B82B                 mov     ecx, [esp+arg_40]
.text:0040B82F                 mov     ebx, [esi+4]
.text:0040B832                 cmp     [ecx+4], ebx
.text:0040B835                 jz      short loc_40B844
.text:0040B837
.text:0040B837 loc_40B837:                             ; CODE XREF: sub_40AD60+AC9↑j
.text:0040B837                                         ; sub_40AD60+AEA↓j ...
.text:0040B837                 mov     [esp+arg_38], 1
.text:0040B83F                 jmp     loc_40B07C
.text:0040B844 ; ---------------------------------------------------------------------------
.text:0040B844
.text:0040B844 loc_40B844:                             ; CODE XREF: sub_40AD60+AD5↑j
.text:0040B844                 mov     edx, [esi+8]
.text:0040B847                 cmp     [ecx+8], edx
.text:0040B84A                 jnz     short loc_40B837
.text:0040B84C                 mov     ebx, [esi+0Ch]
.text:0040B84F                 cmp     [ecx+0Ch], ebx
.text:0040B852                 jnz     short loc_40B837
.text:0040B854                 jmp     loc_40B07C
.text:0040B854 ; END OF FUNCTION CHUNK FOR sub_40AD60
.text:0040B854 ; ---------------------------------------------------------------------------
.text:0040B859                 align 10h
.text:0040B860 ; START OF FUNCTION CHUNK FOR sub_40AD60
.text:0040B860
.text:0040B860 loc_40B860:                             ; CODE XREF: sub_40AD60+AC1↑j
.text:0040B860                 mov     [esp+arg_40], esi
.text:0040B864                 mov     eax, [esp+arg_30]
.text:0040B868                 mov     [esp+arg_34], eax
.text:0040B86C                 jmp     loc_40B07C
.text:0040B871 ; ---------------------------------------------------------------------------
.text:0040B871
.text:0040B871 loc_40B871:                             ; CODE XREF: sub_40AD60+AB9↑j
.text:0040B871                 mov     [esp+arg_40], esi
.text:0040B875                 mov     ecx, [esp+arg_30]
.text:0040B879                 mov     [esp+arg_3C], 1
.text:0040B881                 mov     [esp+arg_34], ecx
.text:0040B885                 jmp     loc_40B090
.text:0040B88A ; ---------------------------------------------------------------------------
.text:0040B88A
.text:0040B88A loc_40B88A:                             ; CODE XREF: sub_40AD60+28F↑j
.text:0040B88A                 mov     eax, [esp+Str]
.text:0040B88E                 movsx   esi, dl
.text:0040B891                 mov     [esp+Str2], esi ; Val
.text:0040B895                 mov     [esp+0], eax    ; Str
.text:0040B898                 call    strchr
.text:0040B89D                 test    eax, eax
.text:0040B89F                 jnz     loc_40B350
.text:0040B8A5                 jmp     loc_40AFF5
.text:0040B8AA ; ---------------------------------------------------------------------------
.text:0040B8AA
.text:0040B8AA loc_40B8AA:                             ; CODE XREF: sub_40AD60+24C↑j
.text:0040B8AA                 mov     ecx, 1
.text:0040B8AF                 jmp     loc_40AFB2
.text:0040B8B4 ; ---------------------------------------------------------------------------
.text:0040B8B4
.text:0040B8B4 loc_40B8B4:                             ; CODE XREF: sub_40AD60+1A4↑j
.text:0040B8B4                                         ; sub_40AD60+200↑j
.text:0040B8B4                 mov     eax, [ebp+20h]
.text:0040B8B7                 cmp     eax, [ebp+24h]
.text:0040B8BA                 jz      loc_40AF90
.text:0040B8C0                 mov     [ebp+0], eax
.text:0040B8C3                 jmp     loc_40AF90
.text:0040B8C8 ; ---------------------------------------------------------------------------
.text:0040B8C8
.text:0040B8C8 loc_40B8C8:                             ; CODE XREF: sub_40AD60+1CE↑j
.text:0040B8C8                 mov     [ebp+20h], eax
.text:0040B8CB                 jmp     loc_40AF50
.text:0040B8D0 ; ---------------------------------------------------------------------------
.text:0040B8D0
.text:0040B8D0 loc_40B8D0:                             ; CODE XREF: sub_40AD60+19A↑j
.text:0040B8D0                 mov     edx, [ebp+20h]
.text:0040B8D3                 mov     eax, [ebp+24h]
.text:0040B8D6                 cmp     edx, eax
.text:0040B8D8                 jz      short loc_40B950
.text:0040B8DA                 cmp     eax, ebx
.text:0040B8DC                 jz      short loc_40B8F1
.text:0040B8DE                 mov     [esp+Str2], ebp
.text:0040B8E2                 mov     ebx, [esp+arg_60]
.text:0040B8E6                 mov     [esp+0], ebx
.text:0040B8E9                 call    sub_40BAE0
.text:0040B8EE                 mov     ebx, [ebp+0]
.text:0040B8F1
.text:0040B8F1 loc_40B8F1:                             ; CODE XREF: sub_40AD60+B7C↑j
.text:0040B8F1                                         ; sub_40AD60+BF2↓j ...
.text:0040B8F1                 cmp     ebx, [esp+arg_5C]
.text:0040B8F5                 jge     short loc_40B940
.text:0040B8F7                 mov     esi, [esp+arg_60]
.text:0040B8FB                 mov     eax, [esi+ebx*4]
.text:0040B8FE                 cmp     byte ptr [eax], 2Dh ; '-'
.text:0040B901                 jz      short loc_40B948
.text:0040B903                 lea     esi, [esi+0]
.text:0040B909                 lea     edi, [edi+0]
.text:0040B910
.text:0040B910 loc_40B910:                             ; CODE XREF: sub_40AD60+BCC↓j
.text:0040B910                                         ; sub_40AD60+BEC↓j
.text:0040B910                 lea     eax, [ebx+1]
.text:0040B913                 mov     ebx, eax
.text:0040B915                 mov     [ebp+0], eax
.text:0040B918                 cmp     eax, [esp+arg_5C]
.text:0040B91C                 jge     short loc_40B940
.text:0040B91E                 mov     edi, [esp+arg_60]
.text:0040B922                 mov     edx, [edi+eax*4]
.text:0040B925                 cmp     byte ptr [edx], 2Dh ; '-'
.text:0040B928                 jz      short loc_40B930
.text:0040B92A
.text:0040B92A loc_40B92A:                             ; CODE XREF: sub_40AD60+BD4↓j
.text:0040B92A                 mov     ebx, eax
.text:0040B92C                 jmp     short loc_40B910
.text:0040B92C ; END OF FUNCTION CHUNK FOR sub_40AD60
.text:0040B92C ; ---------------------------------------------------------------------------
.text:0040B92E                 align 10h
.text:0040B930 ; START OF FUNCTION CHUNK FOR sub_40AD60
.text:0040B930
.text:0040B930 loc_40B930:                             ; CODE XREF: sub_40AD60+BC8↑j
.text:0040B930                 cmp     byte ptr [edx+1], 0
.text:0040B934                 jz      short loc_40B92A
.text:0040B936                 lea     esi, [esi+0]
.text:0040B939                 lea     edi, [edi+0]
.text:0040B940
.text:0040B940 loc_40B940:                             ; CODE XREF: sub_40AD60+B95↑j
.text:0040B940                                         ; sub_40AD60+BBC↑j ...
.text:0040B940                 mov     [ebp+24h], ebx
.text:0040B943                 jmp     loc_40AF00
.text:0040B948 ; ---------------------------------------------------------------------------
.text:0040B948
.text:0040B948 loc_40B948:                             ; CODE XREF: sub_40AD60+BA1↑j
.text:0040B948                 cmp     byte ptr [eax+1], 0
.text:0040B94C                 jz      short loc_40B910
.text:0040B94E                 jmp     short loc_40B940
.text:0040B950 ; ---------------------------------------------------------------------------
.text:0040B950
.text:0040B950 loc_40B950:                             ; CODE XREF: sub_40AD60+B78↑j
.text:0040B950                 cmp     edx, ebx
.text:0040B952                 jz      short loc_40B8F1
.text:0040B954                 mov     [ebp+20h], ebx
.text:0040B957                 jmp     short loc_40B8F1
.text:0040B959 ; ---------------------------------------------------------------------------
.text:0040B959
.text:0040B959 loc_40B959:                             ; CODE XREF: sub_40AD60+158↑j
.text:0040B959                 mov     dword ptr [ebp+18h], 0
.text:0040B960                 mov     esi, [esp+Str]
.text:0040B964
.text:0040B964 loc_40B964:                             ; CODE XREF: sub_40AD60+C19↓j
.text:0040B964                 inc     esi
.text:0040B965                 jmp     loc_40AEC8
.text:0040B965 ; END OF FUNCTION CHUNK FOR sub_40AD60
.text:0040B965 ; ---------------------------------------------------------------------------
.text:0040B96A                 align 10h
.text:0040B970 ; START OF FUNCTION CHUNK FOR sub_40AD60
.text:0040B970
.text:0040B970 loc_40B970:                             ; CODE XREF: sub_40AD60+150↑j
.text:0040B970                 mov     dword ptr [ebp+18h], 2
.text:0040B977                 mov     esi, ecx
.text:0040B979                 jmp     short loc_40B964
.text:0040B979 ; END OF FUNCTION CHUNK FOR sub_40AD60
.text:0040B979 ; ---------------------------------------------------------------------------
.text:0040B97B                 align 10h
.text:0040B980 ; START OF FUNCTION CHUNK FOR sub_40AD60
.text:0040B980
.text:0040B980 loc_40B980:                             ; CODE XREF: sub_40AD60+139↑j
.text:0040B980                 mov     dword ptr [esp+0], offset loc_40AE13 ; VarName
.text:0040B987                 call    getenv
.text:0040B98C                 test    eax, eax
.text:0040B98E                 jz      loc_40AEA4
.text:0040B994                 jmp     loc_40AE9F
.text:0040B994 ; END OF FUNCTION CHUNK FOR sub_40AD60
.text:0040B994 ; ---------------------------------------------------------------------------
.text:0040B999                 align 10h
.text:0040B9A0 ; START OF FUNCTION CHUNK FOR sub_40AD60
.text:0040B9A0
.text:0040B9A0 loc_40B9A0:                             ; CODE XREF: sub_40AD60:loc_40AE6F↑j
.text:0040B9A0                 mov     dword ptr [ebp+0], 1
.text:0040B9A7                 mov     ebx, 1
.text:0040B9AC                 jmp     loc_40AE80
.text:0040B9AC ; END OF FUNCTION CHUNK FOR sub_40AD60
.text:0040B9B1 ; ---------------------------------------------------------------------------
.text:0040B9B1                 jmp     short sub_40B9C0
.text:0040B9B1 ; ---------------------------------------------------------------------------
.text:0040B9B3                 align 10h
.text:0040B9C0
.text:0040B9C0 ; =============== S U B R O U T I N E =======================================
.text:0040B9C0
.text:0040B9C0
.text:0040B9C0 sub_40B9C0      proc near               ; CODE XREF: .text:0040B9B1↑j
.text:0040B9C0                                         ; sub_40C160+3A↓p ...
.text:0040B9C0
.text:0040B9C0 var_2C          = dword ptr -2Ch
.text:0040B9C0 var_28          = dword ptr -28h
.text:0040B9C0 var_24          = dword ptr -24h
.text:0040B9C0 var_20          = dword ptr -20h
.text:0040B9C0 var_1C          = dword ptr -1Ch
.text:0040B9C0 var_18          = dword ptr -18h
.text:0040B9C0 var_14          = dword ptr -14h
.text:0040B9C0 var_10          = dword ptr -10h
.text:0040B9C0 arg_0           = dword ptr  4
.text:0040B9C0 arg_4           = dword ptr  8
.text:0040B9C0 arg_8           = dword ptr  0Ch
.text:0040B9C0 arg_C           = dword ptr  10h
.text:0040B9C0 arg_10          = dword ptr  14h
.text:0040B9C0 arg_14          = dword ptr  18h
.text:0040B9C0 arg_18          = dword ptr  1Ch
.text:0040B9C0
.text:0040B9C0                 sub     esp, 2Ch
.text:0040B9C3                 mov     edx, dword_412030
.text:0040B9C9                 mov     [esp+2Ch+var_10], offset dword_4132A0
.text:0040B9D1                 mov     ecx, dword_412034
.text:0040B9D7                 mov     ds:dword_4132A0, edx
.text:0040B9DD                 mov     edx, [esp+2Ch+arg_18]
.text:0040B9E1                 mov     ds:dword_4132A4, ecx
.text:0040B9E7                 mov     ecx, [esp+2Ch+arg_14]
.text:0040B9EB                 mov     [esp+2Ch+var_14], edx
.text:0040B9EF                 mov     edx, [esp+2Ch+arg_10]
.text:0040B9F3                 mov     [esp+2Ch+var_18], ecx
.text:0040B9F7                 mov     ecx, [esp+2Ch+arg_C]
.text:0040B9FB                 mov     [esp+2Ch+var_1C], edx
.text:0040B9FF                 mov     edx, [esp+2Ch+arg_8]
.text:0040BA03                 mov     [esp+2Ch+var_20], ecx
.text:0040BA07                 mov     ecx, [esp+2Ch+arg_4]
.text:0040BA0B                 mov     [esp+2Ch+var_24], edx
.text:0040BA0F                 mov     edx, [esp+2Ch+arg_0]
.text:0040BA13                 mov     [esp+2Ch+var_28], ecx
.text:0040BA17                 mov     [esp+2Ch+var_2C], edx
.text:0040BA1A                 call    loc_40AE30
.text:0040BA1F                 mov     ecx, ds:dword_4132A0
.text:0040BA25                 mov     dword_412030, ecx
.text:0040BA2B                 mov     ecx, ds:dword_4132AC
.text:0040BA31                 mov     ds:dword_413460, ecx
.text:0040BA37                 mov     ecx, ds:dword_4132A8
.text:0040BA3D                 mov     dword_412038, ecx
.text:0040BA43                 add     esp, 2Ch
.text:0040BA46                 retn
.text:0040BA46 sub_40B9C0      endp
.text:0040BA46
.text:0040BA46 ; ---------------------------------------------------------------------------
.text:0040BA47                 align 10h
.text:0040BA50                 sub     esp, 2Ch
.text:0040BA53                 mov     edx, dword_412030
.text:0040BA59                 mov     dword ptr [esp+1Ch], offset dword_4132A0
.text:0040BA61                 mov     ecx, dword_412034
.text:0040BA67                 mov     dword ptr [esp+18h], 1
.text:0040BA6F                 mov     ds:dword_4132A0, edx
.text:0040BA75                 mov     edx, [esp+38h]
.text:0040BA79                 mov     ds:dword_4132A4, ecx
.text:0040BA7F                 mov     ecx, [esp+34h]
.text:0040BA83                 mov     [esp+8], edx
.text:0040BA87                 mov     edx, [esp+30h]
.text:0040BA8B                 mov     [esp+4], ecx
.text:0040BA8F                 mov     dword ptr [esp+14h], 0
.text:0040BA97                 mov     dword ptr [esp+10h], 0
.text:0040BA9F                 mov     dword ptr [esp+0Ch], 0
.text:0040BAA7                 mov     [esp], edx
.text:0040BAAA                 call    loc_40AE30
.text:0040BAAF                 mov     ecx, ds:dword_4132A0
.text:0040BAB5                 mov     dword_412030, ecx
.text:0040BABB                 mov     ecx, ds:dword_4132AC
.text:0040BAC1                 mov     ds:dword_413460, ecx
.text:0040BAC7                 mov     ecx, ds:dword_4132A8
.text:0040BACD                 mov     dword_412038, ecx
.text:0040BAD3                 add     esp, 2Ch
.text:0040BAD6                 retn
.text:0040BAD6 ; ---------------------------------------------------------------------------
.text:0040BAD7                 align 10h
.text:0040BAE0
.text:0040BAE0 ; =============== S U B R O U T I N E =======================================
.text:0040BAE0
.text:0040BAE0
.text:0040BAE0 sub_40BAE0      proc near               ; CODE XREF: sub_40AD60+1E3↑p
.text:0040BAE0                                         ; sub_40AD60+B89↑p
.text:0040BAE0
.text:0040BAE0 var_2C          = dword ptr -2Ch
.text:0040BAE0 var_28          = dword ptr -28h
.text:0040BAE0 var_24          = dword ptr -24h
.text:0040BAE0 var_20          = dword ptr -20h
.text:0040BAE0 var_1C          = dword ptr -1Ch
.text:0040BAE0 var_18          = dword ptr -18h
.text:0040BAE0 var_14          = dword ptr -14h
.text:0040BAE0 arg_0           = dword ptr  4
.text:0040BAE0 arg_4           = dword ptr  8
.text:0040BAE0
.text:0040BAE0                 push    ebp
.text:0040BAE1                 push    edi
.text:0040BAE2                 push    esi
.text:0040BAE3                 push    ebx
.text:0040BAE4                 sub     esp, 1Ch
.text:0040BAE7                 mov     ecx, [esp+2Ch+arg_4]
.text:0040BAEB                 mov     eax, [esp+2Ch+arg_4]
.text:0040BAEF                 mov     ebx, [esp+2Ch+arg_4]
.text:0040BAF3                 mov     edx, [ecx+20h]
.text:0040BAF6                 mov     edi, [esp+2Ch+arg_0]
.text:0040BAFA                 mov     ecx, [ebx]
.text:0040BAFC                 mov     [esp+2Ch+var_2C], edx
.text:0040BAFF                 mov     [esp+2Ch+var_14], edx
.text:0040BB03                 mov     edx, [eax+24h]
.text:0040BB06                 mov     [esp+2Ch+var_28], ecx
.text:0040BB0A                 mov     [esp+2Ch+var_1C], ecx
.text:0040BB0E                 cmp     ecx, edx
.text:0040BB10                 mov     [esp+2Ch+var_18], edx
.text:0040BB14                 jle     short loc_40BB90
.text:0040BB16                 mov     esi, [esp+2Ch+var_2C]
.text:0040BB19                 cmp     edx, esi
.text:0040BB1B                 jle     short loc_40BB90
.text:0040BB1D                 lea     esi, [esi+0]
.text:0040BB20
.text:0040BB20 loc_40BB20:                             ; CODE XREF: sub_40BAE0+A1↓j
.text:0040BB20                 mov     ebx, [esp+2Ch+var_1C]
.text:0040BB24                 mov     edx, [esp+2Ch+var_18]
.text:0040BB28                 mov     ebp, [esp+2Ch+var_18]
.text:0040BB2C                 mov     eax, [esp+2Ch+var_14]
.text:0040BB30                 sub     ebx, edx
.text:0040BB32                 mov     [esp+2Ch+var_20], ebx
.text:0040BB36                 sub     ebp, eax
.text:0040BB38                 cmp     ebx, ebp
.text:0040BB3A                 jle     short loc_40BBB5
.text:0040BB3C                 xor     esi, esi
.text:0040BB3E                 cmp     esi, ebp
.text:0040BB40                 jge     short loc_40BB6D
.text:0040BB42                 mov     ecx, [esp+2Ch+var_1C]
.text:0040BB46                 sub     ecx, ebp
.text:0040BB48                 mov     [esp+2Ch+var_24], ecx
.text:0040BB4C                 lea     esi, [esi+0]
.text:0040BB50
.text:0040BB50 loc_40BB50:                             ; CODE XREF: sub_40BAE0+8B↓j
.text:0040BB50                 mov     ecx, [esp+2Ch+var_14]
.text:0040BB54                 mov     edx, [esp+2Ch+var_24]
.text:0040BB58                 add     ecx, esi
.text:0040BB5A                 add     edx, esi
.text:0040BB5C                 mov     ebx, [edi+ecx*4]
.text:0040BB5F                 mov     eax, [edi+edx*4]
.text:0040BB62                 inc     esi
.text:0040BB63                 cmp     esi, ebp
.text:0040BB65                 mov     [edi+ecx*4], eax
.text:0040BB68                 mov     [edi+edx*4], ebx
.text:0040BB6B                 jl      short loc_40BB50
.text:0040BB6D
.text:0040BB6D loc_40BB6D:                             ; CODE XREF: sub_40BAE0+60↑j
.text:0040BB6D                 sub     [esp+2Ch+var_1C], ebp
.text:0040BB71
.text:0040BB71 loc_40BB71:                             ; CODE XREF: sub_40BAE0+107↓j
.text:0040BB71                 mov     eax, [esp+2Ch+var_18]
.text:0040BB75                 cmp     [esp+2Ch+var_1C], eax
.text:0040BB79                 jle     short loc_40BB90
.text:0040BB7B                 mov     ebp, [esp+2Ch+var_14]
.text:0040BB7F                 cmp     eax, ebp
.text:0040BB81                 jg      short loc_40BB20
.text:0040BB83                 lea     esi, [esi+0]
.text:0040BB89                 lea     edi, [edi+0]
.text:0040BB90
.text:0040BB90 loc_40BB90:                             ; CODE XREF: sub_40BAE0+34↑j
.text:0040BB90                                         ; sub_40BAE0+3B↑j ...
.text:0040BB90                 mov     esi, [esp+2Ch+var_28]
.text:0040BB94                 mov     ecx, [esp+2Ch+var_18]
.text:0040BB98                 mov     eax, [esp+2Ch+var_2C]
.text:0040BB9B                 mov     edi, [esp+2Ch+arg_4]
.text:0040BB9F                 mov     edx, [esp+2Ch+var_28]
.text:0040BBA3                 sub     esi, ecx
.text:0040BBA5                 add     esi, eax
.text:0040BBA7                 mov     [edi+20h], esi
.text:0040BBAA                 mov     [edi+24h], edx
.text:0040BBAD                 add     esp, 1Ch
.text:0040BBB0                 pop     ebx
.text:0040BBB1                 pop     esi
.text:0040BBB2                 pop     edi
.text:0040BBB3                 pop     ebp
.text:0040BBB4                 retn
.text:0040BBB5 ; ---------------------------------------------------------------------------
.text:0040BBB5
.text:0040BBB5 loc_40BBB5:                             ; CODE XREF: sub_40BAE0+5A↑j
.text:0040BBB5                 xor     esi, esi
.text:0040BBB7                 cmp     esi, [esp+2Ch+var_20]
.text:0040BBBB                 jge     short loc_40BBDF
.text:0040BBBD                 lea     esi, [esi+0]
.text:0040BBC0
.text:0040BBC0 loc_40BBC0:                             ; CODE XREF: sub_40BAE0+FD↓j
.text:0040BBC0                 mov     ebx, [esp+2Ch+var_14]
.text:0040BBC4                 mov     ebp, [esp+2Ch+var_18]
.text:0040BBC8                 add     ebx, esi
.text:0040BBCA                 add     ebp, esi
.text:0040BBCC                 mov     edx, [edi+ebx*4]
.text:0040BBCF                 inc     esi
.text:0040BBD0                 cmp     esi, [esp+2Ch+var_20]
.text:0040BBD4                 mov     ecx, [edi+ebp*4]
.text:0040BBD7                 mov     [edi+ebx*4], ecx
.text:0040BBDA                 mov     [edi+ebp*4], edx
.text:0040BBDD                 jl      short loc_40BBC0
.text:0040BBDF
.text:0040BBDF loc_40BBDF:                             ; CODE XREF: sub_40BAE0+DB↑j
.text:0040BBDF                 mov     esi, [esp+2Ch+var_20]
.text:0040BBE3                 add     [esp+2Ch+var_14], esi
.text:0040BBE7                 jmp     short loc_40BB71
.text:0040BBE7 sub_40BAE0      endp
.text:0040BBE7
.text:0040BBE7 ; ---------------------------------------------------------------------------
.text:0040BBE9                 align 20h
.text:0040BC00                 sub     esp, 0Ch
.text:0040BC03                 mov     edx, [esp+14h]
.text:0040BC07                 mov     dword ptr [esp+4], 5
.text:0040BC0F                 mov     [esp+8], edx
.text:0040BC13                 mov     edx, [esp+10h]
.text:0040BC17                 mov     [esp], edx
.text:0040BC1A                 call    sub_40F740
.text:0040BC1F                 add     esp, 0Ch
.text:0040BC22                 retn
.text:0040BC22 ; ---------------------------------------------------------------------------
.text:0040BC23                 align 10h
.text:0040BC30
.text:0040BC30 ; =============== S U B R O U T I N E =======================================
.text:0040BC30
.text:0040BC30
.text:0040BC30 ; int __cdecl sub_40BC30(char *)
.text:0040BC30 sub_40BC30      proc near               ; CODE XREF: sub_4018C0+716↑p
.text:0040BC30
.text:0040BC30 var_C           = dword ptr -0Ch
.text:0040BC30 var_8           = dword ptr -8
.text:0040BC30 var_4           = dword ptr -4
.text:0040BC30 arg_0           = dword ptr  4
.text:0040BC30
.text:0040BC30                 sub     esp, 0Ch
.text:0040BC33                 mov     edx, [esp+0Ch+arg_0]
.text:0040BC37                 mov     [esp+0Ch+var_8], 5 ; int
.text:0040BC3F                 mov     [esp+0Ch+var_C], 0 ; int
.text:0040BC46                 mov     [esp+0Ch+var_4], edx ; char *
.text:0040BC4A                 call    sub_40F740
.text:0040BC4F                 add     esp, 0Ch
.text:0040BC52                 retn
.text:0040BC52 sub_40BC30      endp
.text:0040BC52
.text:0040BC52 ; ---------------------------------------------------------------------------
.text:0040BC53                 align 10h
.text:0040BC60 aCopyrightC2005 db 'Copyright (C) 2005 Free Software Foundation, Inc.',0
.text:0040BC60                                         ; DATA XREF: .data:Buffer↓o
.text:0040BC92 ; const char aSSS[]
.text:0040BC92 aSSS            db '%s (%s) %s',0Ah,0   ; DATA XREF: sub_40BF50+50↓o
.text:0040BC9E aWrittenByS     db 'Written by %s.',0Ah,0
.text:0040BC9E                                         ; DATA XREF: sub_40BF50:loc_40BFF1↓o
.text:0040BCAE                 align 20h
.text:0040BCC0 aThisIsFreeSoft db 'This is free software; see the source for copying conditions.  Th'
.text:0040BCC0                                         ; DATA XREF: sub_40BF50+100↓o
.text:0040BCC0                 db 'ere is NO',0Ah
.text:0040BCC0                 db 'warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULA'
.text:0040BCC0                 db 'R PURPOSE.',0Ah,0
.text:0040BD58 aWrittenBySAndS db 'Written by %s and %s.',0Ah,0
.text:0040BD58                                         ; DATA XREF: sub_40BF50:loc_40C091↓o
.text:0040BD6F aWrittenBySSAnd db 'Written by %s, %s, and %s.',0Ah,0
.text:0040BD6F                                         ; DATA XREF: sub_40BF50:loc_40C09D↓o
.text:0040BD8B                 align 20h
.text:0040BDA0 aWrittenBySSSAn db 'Written by %s, %s, %s,',0Ah
.text:0040BDA0                                         ; DATA XREF: sub_40BF50:loc_40C0A9↓o
.text:0040BDA0                 db 'and %s.',0Ah,0
.text:0040BDC0 aWrittenBySSSSA db 'Written by %s, %s, %s,',0Ah
.text:0040BDC0                                         ; DATA XREF: sub_40BF50:loc_40C0B5↓o
.text:0040BDC0                 db '%s, and %s.',0Ah,0
.text:0040BDE4                 align 20h
.text:0040BE00 aWrittenBySSSSS_0 db 'Written by %s, %s, %s,',0Ah
.text:0040BE00                                         ; DATA XREF: sub_40BF50:loc_40C0C1↓o
.text:0040BE00                 db '%s, %s, and %s.',0Ah,0
.text:0040BE28                 align 20h
.text:0040BE40 aWrittenBySSSSS_1 db 'Written by %s, %s, %s,',0Ah
.text:0040BE40                                         ; DATA XREF: sub_40BF50:loc_40C0CD↓o
.text:0040BE40                 db '%s, %s, %s, and %s.',0Ah,0
.text:0040BE6C                 align 20h
.text:0040BE80 aWrittenBySSSSS_2 db 'Written by %s, %s, %s,',0Ah
.text:0040BE80                                         ; DATA XREF: sub_40BF50:loc_40C0D9↓o
.text:0040BE80                 db '%s, %s, %s, %s,',0Ah
.text:0040BE80                 db 'and %s.',0Ah,0
.text:0040BEB0                 align 20h
.text:0040BEC0 aWrittenBySSSSS_3 db 'Written by %s, %s, %s,',0Ah
.text:0040BEC0                                         ; DATA XREF: sub_40BF50:loc_40C0E5↓o
.text:0040BEC0                 db '%s, %s, %s, %s,',0Ah
.text:0040BEC0                 db '%s, and %s.',0Ah,0
.text:0040BEF4                 align 10h
.text:0040BF00 aWrittenBySSSSS db 'Written by %s, %s, %s,',0Ah
.text:0040BF00                                         ; DATA XREF: sub_40BF50:def_40BFBD↓o
.text:0040BF00                 db '%s, %s, %s, %s,',0Ah
.text:0040BF00                 db '%s, %s, and others.',0Ah,0
.text:0040BF3C ; const char aSS[]
.text:0040BF3C aSS             db '%s %s',0Ah,0        ; DATA XREF: sub_40BF50+1B5↓o
.text:0040BF43                 align 10h
.text:0040BF50
.text:0040BF50 ; =============== S U B R O U T I N E =======================================
.text:0040BF50
.text:0040BF50
.text:0040BF50 ; int __cdecl sub_40BF50(FILE *, FILE *, int, int, va_list)
.text:0040BF50 sub_40BF50      proc near               ; CODE XREF: sub_40C120+2A↓p
.text:0040BF50
.text:0040BF50 Stream          = dword ptr -2Ch
.text:0040BF50 Format          = dword ptr -28h
.text:0040BF50 ArgList         = dword ptr -24h
.text:0040BF50 var_20          = dword ptr -20h
.text:0040BF50 var_1C          = dword ptr -1Ch
.text:0040BF50 var_14          = dword ptr -14h
.text:0040BF50 arg_0           = dword ptr  4
.text:0040BF50 arg_4           = dword ptr  8
.text:0040BF50 arg_8           = dword ptr  0Ch
.text:0040BF50 arg_C           = dword ptr  10h
.text:0040BF50 arg_10          = dword ptr  14h
.text:0040BF50
.text:0040BF50                 push    ebp
.text:0040BF51                 push    edi
.text:0040BF52                 push    esi
.text:0040BF53                 push    ebx
.text:0040BF54                 sub     esp, 1Ch
.text:0040BF57                 xor     ebx, ebx
.text:0040BF59                 mov     edi, [esp+2Ch+arg_10]
.text:0040BF5D                 mov     edx, [esp+2Ch+arg_8]
.text:0040BF61                 mov     esi, [esp+2Ch+arg_0]
.text:0040BF65                 mov     eax, [edi]
.text:0040BF67                 mov     ecx, [esp+2Ch+arg_4]
.text:0040BF6B                 mov     [esp+2Ch+var_14], edx
.text:0040BF6F                 mov     ebp, [esp+2Ch+arg_C]
.text:0040BF73                 lea     edx, [edi+4]
.text:0040BF76                 test    eax, eax
.text:0040BF78                 jz      short loc_40BF8C
.text:0040BF7A                 lea     esi, [esi+0]
.text:0040BF80
.text:0040BF80 loc_40BF80:                             ; CODE XREF: sub_40BF50+3A↓j
.text:0040BF80                 mov     eax, edx
.text:0040BF82                 inc     ebx
.text:0040BF83                 mov     eax, [eax]
.text:0040BF85                 add     edx, 4
.text:0040BF88                 test    eax, eax
.text:0040BF8A                 jnz     short loc_40BF80
.text:0040BF8C
.text:0040BF8C loc_40BF8C:                             ; CODE XREF: sub_40BF50+28↑j
.text:0040BF8C                 test    ecx, ecx
.text:0040BF8E                 jz      loc_40C0FD
.text:0040BF94                 mov     [esp+2Ch+var_1C], ebp
.text:0040BF98                 mov     edx, [esp+2Ch+var_14]
.text:0040BF9C                 mov     [esp+2Ch+ArgList], ecx
.text:0040BFA0                 mov     [esp+2Ch+Format], offset aSSS ; "%s (%s) %s\n"
.text:0040BFA8                 mov     [esp+2Ch+var_20], edx
.text:0040BFAC                 mov     [esp+2Ch+Stream], esi ; Stream
.text:0040BFAF                 call    fprintf
.text:0040BFB4
.text:0040BFB4 loc_40BFB4:                             ; CODE XREF: sub_40BF50+1C9↓j
.text:0040BFB4                 cmp     ebx, 9          ; switch 10 cases
.text:0040BFB7                 ja      def_40BFBD      ; jumptable 0040BFBD default case
.text:0040BFBD                 jmp     ds:jpt_40BFBD[ebx*4] ; switch jump
.text:0040BFBD ; ---------------------------------------------------------------------------
.text:0040BFC4 jpt_40BFBD      dd offset loc_40BFEC    ; DATA XREF: sub_40BF50+6D↑r
.text:0040BFC4                 dd offset loc_40BFF1    ; jump table for switch statement
.text:0040BFC4                 dd offset loc_40C091
.text:0040BFC4                 dd offset loc_40C09D
.text:0040BFC4                 dd offset loc_40C0A9
.text:0040BFC4                 dd offset loc_40C0B5
.text:0040BFC4                 dd offset loc_40C0C1
.text:0040BFC4                 dd offset loc_40C0CD
.text:0040BFC4                 dd offset loc_40C0D9
.text:0040BFC4                 dd offset loc_40C0E5
.text:0040BFEC ; ---------------------------------------------------------------------------
.text:0040BFEC
.text:0040BFEC loc_40BFEC:                             ; CODE XREF: sub_40BF50+6D↑j
.text:0040BFEC                                         ; DATA XREF: sub_40BF50:jpt_40BFBD↑o
.text:0040BFEC                 call    abort           ; jumptable 0040BFBD case 0
.text:0040BFF1 ; ---------------------------------------------------------------------------
.text:0040BFF1
.text:0040BFF1 loc_40BFF1:                             ; CODE XREF: sub_40BF50+6D↑j
.text:0040BFF1                                         ; DATA XREF: sub_40BF50:jpt_40BFBD↑o
.text:0040BFF1                 mov     [esp+2Ch+Stream], offset aWrittenByS ; jumptable 0040BFBD case 1
.text:0040BFF8                 nop
.text:0040BFF9                 lea     esi, [esi+0]
.text:0040C000
.text:0040C000 loc_40C000:                             ; CODE XREF: sub_40BF50+148↓j
.text:0040C000                                         ; sub_40BF50+154↓j ...
.text:0040C000                 call    ds:__imp_libintl_gettext
.text:0040C006                 mov     [esp+2Ch+ArgList], edi ; ArgList
.text:0040C00A                 mov     [esp+2Ch+Stream], esi ; Stream
.text:0040C00D                 mov     [esp+2Ch+Format], eax ; Format
.text:0040C011                 call    vfprintf
.text:0040C016                 mov     ebx, [esi+4]
.text:0040C019                 dec     ebx
.text:0040C01A                 test    ebx, ebx
.text:0040C01C                 mov     [esi+4], ebx
.text:0040C01F                 js      short loc_40C07F
.text:0040C021                 mov     edi, [esi]
.text:0040C023                 mov     byte ptr [edi], 0Ah
.text:0040C026                 inc     dword ptr [esi]
.text:0040C028
.text:0040C028 loc_40C028:                             ; CODE XREF: sub_40BF50+13F↓j
.text:0040C028                 mov     [esp+2Ch+Format], esi ; Stream
.text:0040C02C                 mov     edx, Buffer
.text:0040C032                 mov     [esp+2Ch+Stream], edx ; Buffer
.text:0040C035                 call    fputs
.text:0040C03A                 mov     ebp, [esi+4]
.text:0040C03D                 dec     ebp
.text:0040C03E                 test    ebp, ebp
.text:0040C040                 mov     [esi+4], ebp
.text:0040C043                 js      short loc_40C06D
.text:0040C045                 mov     ecx, [esi]
.text:0040C047                 mov     byte ptr [ecx], 0Ah
.text:0040C04A                 inc     dword ptr [esi]
.text:0040C04C
.text:0040C04C loc_40C04C:                             ; CODE XREF: sub_40BF50+12D↓j
.text:0040C04C                 mov     [esp+2Ch+arg_4], esi ; Stream
.text:0040C050                 mov     [esp+2Ch+Stream], offset aThisIsFreeSoft ; "This is free software; see the source f"...
.text:0040C057                 call    ds:__imp_libintl_gettext
.text:0040C05D                 mov     [esp+2Ch+arg_0], eax ; Buffer
.text:0040C061                 add     esp, 1Ch
.text:0040C064                 pop     ebx
.text:0040C065                 pop     esi
.text:0040C066                 pop     edi
.text:0040C067                 pop     ebp
.text:0040C068                 jmp     fputs
.text:0040C06D ; ---------------------------------------------------------------------------
.text:0040C06D
.text:0040C06D loc_40C06D:                             ; CODE XREF: sub_40BF50+F3↑j
.text:0040C06D                 mov     [esp+2Ch+Format], esi ; File
.text:0040C071                 mov     [esp+2Ch+Stream], 0Ah ; Ch
.text:0040C078                 call    _flsbuf
.text:0040C07D                 jmp     short loc_40C04C
.text:0040C07F ; ---------------------------------------------------------------------------
.text:0040C07F
.text:0040C07F loc_40C07F:                             ; CODE XREF: sub_40BF50+CF↑j
.text:0040C07F                 mov     [esp+2Ch+Format], esi ; File
.text:0040C083                 mov     [esp+2Ch+Stream], 0Ah ; Ch
.text:0040C08A                 call    _flsbuf
.text:0040C08F                 jmp     short loc_40C028
.text:0040C091 ; ---------------------------------------------------------------------------
.text:0040C091
.text:0040C091 loc_40C091:                             ; CODE XREF: sub_40BF50+6D↑j
.text:0040C091                                         ; DATA XREF: sub_40BF50:jpt_40BFBD↑o
.text:0040C091                 mov     [esp+2Ch+Stream], offset aWrittenBySAndS ; jumptable 0040BFBD case 2
.text:0040C098                 jmp     loc_40C000
.text:0040C09D ; ---------------------------------------------------------------------------
.text:0040C09D
.text:0040C09D loc_40C09D:                             ; CODE XREF: sub_40BF50+6D↑j
.text:0040C09D                                         ; DATA XREF: sub_40BF50:jpt_40BFBD↑o
.text:0040C09D                 mov     [esp+2Ch+Stream], offset aWrittenBySSAnd ; jumptable 0040BFBD case 3
.text:0040C0A4                 jmp     loc_40C000
.text:0040C0A9 ; ---------------------------------------------------------------------------
.text:0040C0A9
.text:0040C0A9 loc_40C0A9:                             ; CODE XREF: sub_40BF50+6D↑j
.text:0040C0A9                                         ; DATA XREF: sub_40BF50:jpt_40BFBD↑o
.text:0040C0A9                 mov     [esp+2Ch+Stream], offset aWrittenBySSSAn ; jumptable 0040BFBD case 4
.text:0040C0B0                 jmp     loc_40C000
.text:0040C0B5 ; ---------------------------------------------------------------------------
.text:0040C0B5
.text:0040C0B5 loc_40C0B5:                             ; CODE XREF: sub_40BF50+6D↑j
.text:0040C0B5                                         ; DATA XREF: sub_40BF50:jpt_40BFBD↑o
.text:0040C0B5                 mov     [esp+2Ch+Stream], offset aWrittenBySSSSA ; jumptable 0040BFBD case 5
.text:0040C0BC                 jmp     loc_40C000
.text:0040C0C1 ; ---------------------------------------------------------------------------
.text:0040C0C1
.text:0040C0C1 loc_40C0C1:                             ; CODE XREF: sub_40BF50+6D↑j
.text:0040C0C1                                         ; DATA XREF: sub_40BF50:jpt_40BFBD↑o
.text:0040C0C1                 mov     [esp+2Ch+Stream], offset aWrittenBySSSSS_0 ; jumptable 0040BFBD case 6
.text:0040C0C8                 jmp     loc_40C000
.text:0040C0CD ; ---------------------------------------------------------------------------
.text:0040C0CD
.text:0040C0CD loc_40C0CD:                             ; CODE XREF: sub_40BF50+6D↑j
.text:0040C0CD                                         ; DATA XREF: sub_40BF50:jpt_40BFBD↑o
.text:0040C0CD                 mov     [esp+2Ch+Stream], offset aWrittenBySSSSS_1 ; jumptable 0040BFBD case 7
.text:0040C0D4                 jmp     loc_40C000
.text:0040C0D9 ; ---------------------------------------------------------------------------
.text:0040C0D9
.text:0040C0D9 loc_40C0D9:                             ; CODE XREF: sub_40BF50+6D↑j
.text:0040C0D9                                         ; DATA XREF: sub_40BF50:jpt_40BFBD↑o
.text:0040C0D9                 mov     [esp+2Ch+Stream], offset aWrittenBySSSSS_2 ; jumptable 0040BFBD case 8
.text:0040C0E0                 jmp     loc_40C000
.text:0040C0E5 ; ---------------------------------------------------------------------------
.text:0040C0E5
.text:0040C0E5 loc_40C0E5:                             ; CODE XREF: sub_40BF50+6D↑j
.text:0040C0E5                                         ; DATA XREF: sub_40BF50:jpt_40BFBD↑o
.text:0040C0E5                 mov     [esp+2Ch+Stream], offset aWrittenBySSSSS_3 ; jumptable 0040BFBD case 9
.text:0040C0EC                 jmp     loc_40C000
.text:0040C0F1 ; ---------------------------------------------------------------------------
.text:0040C0F1
.text:0040C0F1 def_40BFBD:                             ; CODE XREF: sub_40BF50+67↑j
.text:0040C0F1                 mov     [esp+2Ch+Stream], offset aWrittenBySSSSS ; jumptable 0040BFBD default case
.text:0040C0F8                 jmp     loc_40C000
.text:0040C0FD ; ---------------------------------------------------------------------------
.text:0040C0FD
.text:0040C0FD loc_40C0FD:                             ; CODE XREF: sub_40BF50+3E↑j
.text:0040C0FD                 mov     [esp+2Ch+var_20], ebp
.text:0040C101                 mov     ecx, [esp+2Ch+var_14]
.text:0040C105                 mov     [esp+2Ch+Format], offset aSS ; "%s %s\n"
.text:0040C10D                 mov     [esp+2Ch+Stream], esi ; Stream
.text:0040C110                 mov     [esp+2Ch+ArgList], ecx
.text:0040C114                 call    fprintf
.text:0040C119                 jmp     loc_40BFB4
.text:0040C119 sub_40BF50      endp
.text:0040C119
.text:0040C119 ; ---------------------------------------------------------------------------
.text:0040C11E                 align 10h
.text:0040C120
.text:0040C120 ; =============== S U B R O U T I N E =======================================
.text:0040C120
.text:0040C120
.text:0040C120 ; int __cdecl sub_40C120(FILE *, FILE *, int, int, char)
.text:0040C120 sub_40C120      proc near               ; CODE XREF: sub_4018C0+148↑p
.text:0040C120
.text:0040C120 var_1C          = dword ptr -1Ch
.text:0040C120 var_18          = dword ptr -18h
.text:0040C120 var_14          = dword ptr -14h
.text:0040C120 var_10          = dword ptr -10h
.text:0040C120 var_C           = dword ptr -0Ch
.text:0040C120 arg_0           = dword ptr  4
.text:0040C120 arg_4           = dword ptr  8
.text:0040C120 arg_8           = dword ptr  0Ch
.text:0040C120 arg_C           = dword ptr  10h
.text:0040C120 arg_10          = byte ptr  14h
.text:0040C120
.text:0040C120                 sub     esp, 1Ch
.text:0040C123                 mov     edx, [esp+1Ch+arg_C]
.text:0040C127                 lea     ecx, [esp+1Ch+arg_10]
.text:0040C12B                 mov     [esp+1Ch+var_C], ecx ; va_list
.text:0040C12F                 mov     ecx, [esp+1Ch+arg_8]
.text:0040C133                 mov     [esp+1Ch+var_10], edx ; int
.text:0040C137                 mov     edx, [esp+1Ch+arg_4]
.text:0040C13B                 mov     [esp+1Ch+var_14], ecx ; int
.text:0040C13F                 mov     [esp+1Ch+var_18], edx ; FILE *
.text:0040C143                 mov     edx, [esp+1Ch+arg_0]
.text:0040C147                 mov     [esp+1Ch+var_1C], edx ; FILE *
.text:0040C14A                 call    sub_40BF50
.text:0040C14F                 add     esp, 1Ch
.text:0040C152                 retn
.text:0040C152 sub_40C120      endp
.text:0040C152
.text:0040C152 ; ---------------------------------------------------------------------------
.text:0040C153                 align 10h
.text:0040C160
.text:0040C160 ; =============== S U B R O U T I N E =======================================
.text:0040C160
.text:0040C160
.text:0040C160 sub_40C160      proc near               ; CODE XREF: sub_4018C0+C5↑p
.text:0040C160
.text:0040C160 var_1C          = dword ptr -1Ch
.text:0040C160 var_18          = dword ptr -18h
.text:0040C160 var_14          = dword ptr -14h
.text:0040C160 var_10          = dword ptr -10h
.text:0040C160 var_C           = dword ptr -0Ch
.text:0040C160 var_8           = dword ptr -8
.text:0040C160 var_4           = dword ptr -4
.text:0040C160 arg_0           = dword ptr  4
.text:0040C160 arg_4           = dword ptr  8
.text:0040C160 arg_8           = dword ptr  0Ch
.text:0040C160 arg_C           = dword ptr  10h
.text:0040C160 arg_10          = dword ptr  14h
.text:0040C160
.text:0040C160                 sub     esp, 1Ch
.text:0040C163                 mov     edx, [esp+1Ch+arg_C]
.text:0040C167                 mov     [esp+1Ch+var_4], 0
.text:0040C16F                 mov     ecx, [esp+1Ch+arg_10]
.text:0040C173                 mov     [esp+1Ch+var_8], 0
.text:0040C17B                 mov     [esp+1Ch+var_10], edx
.text:0040C17F                 mov     edx, [esp+1Ch+arg_4]
.text:0040C183                 mov     [esp+1Ch+var_C], ecx
.text:0040C187                 mov     ecx, [esp+1Ch+arg_8]
.text:0040C18B                 mov     [esp+1Ch+var_18], edx
.text:0040C18F                 mov     edx, [esp+1Ch+arg_0]
.text:0040C193                 mov     [esp+1Ch+var_14], ecx
.text:0040C197                 mov     [esp+1Ch+var_1C], edx
.text:0040C19A                 call    sub_40B9C0
.text:0040C19F                 add     esp, 1Ch
.text:0040C1A2                 retn
.text:0040C1A2 sub_40C160      endp
.text:0040C1A2
.text:0040C1A2 ; ---------------------------------------------------------------------------
.text:0040C1A3                 align 10h
.text:0040C1B0                 sub     esp, 2Ch
.text:0040C1B3                 mov     edx, [esp+44h]
.text:0040C1B7                 mov     dword ptr [esp+18h], 0
.text:0040C1BF                 mov     ecx, [esp+40h]
.text:0040C1C3                 mov     dword ptr [esp+14h], 0
.text:0040C1CB                 mov     [esp+1Ch], edx
.text:0040C1CF                 mov     edx, [esp+3Ch]
.text:0040C1D3                 mov     [esp+10h], ecx
.text:0040C1D7                 mov     ecx, [esp+38h]
.text:0040C1DB                 mov     [esp+0Ch], edx
.text:0040C1DF                 mov     edx, [esp+34h]
.text:0040C1E3                 mov     [esp+8], ecx
.text:0040C1E7                 mov     [esp+4], edx
.text:0040C1EB                 mov     edx, [esp+30h]
.text:0040C1EF                 mov     [esp], edx
.text:0040C1F2                 call    loc_40AE30
.text:0040C1F7                 add     esp, 2Ch
.text:0040C1FA                 retn
.text:0040C1FA ; ---------------------------------------------------------------------------
.text:0040C1FB                 align 10h
.text:0040C200                 sub     esp, 1Ch
.text:0040C203                 mov     edx, [esp+2Ch]
.text:0040C207                 mov     dword ptr [esp+18h], 0
.text:0040C20F                 mov     ecx, [esp+30h]
.text:0040C213                 mov     dword ptr [esp+14h], 1
.text:0040C21B                 mov     [esp+0Ch], edx
.text:0040C21F                 mov     edx, [esp+24h]
.text:0040C223                 mov     [esp+10h], ecx
.text:0040C227                 mov     ecx, [esp+28h]
.text:0040C22B                 mov     [esp+4], edx
.text:0040C22F                 mov     edx, [esp+20h]
.text:0040C233                 mov     [esp+8], ecx
.text:0040C237                 mov     [esp], edx
.text:0040C23A                 call    sub_40B9C0
.text:0040C23F                 add     esp, 1Ch
.text:0040C242                 retn
.text:0040C242 ; ---------------------------------------------------------------------------
.text:0040C243                 align 10h
.text:0040C250                 sub     esp, 2Ch
.text:0040C253                 mov     edx, [esp+44h]
.text:0040C257                 mov     dword ptr [esp+18h], 0
.text:0040C25F                 mov     ecx, [esp+40h]
.text:0040C263                 mov     dword ptr [esp+14h], 1
.text:0040C26B                 mov     [esp+1Ch], edx
.text:0040C26F                 mov     edx, [esp+3Ch]
.text:0040C273                 mov     [esp+10h], ecx
.text:0040C277                 mov     ecx, [esp+38h]
.text:0040C27B                 mov     [esp+0Ch], edx
.text:0040C27F                 mov     edx, [esp+34h]
.text:0040C283                 mov     [esp+8], ecx
.text:0040C287                 mov     [esp+4], edx
.text:0040C28B                 mov     edx, [esp+30h]
.text:0040C28F                 mov     [esp], edx
.text:0040C292                 call    loc_40AE30
.text:0040C297                 add     esp, 2Ch
.text:0040C29A                 retn
.text:0040C29A ; ---------------------------------------------------------------------------
.text:0040C29B                 align 10h
.text:0040C2A0                 mov     edx, [esp+4]
.text:0040C2A4                 mov     ds:dword_4132D0, edx
.text:0040C2AA                 retn
.text:0040C2AA ; ---------------------------------------------------------------------------
.text:0040C2AB aWriteError     db 'write error',0      ; DATA XREF: sub_40C2D0:loc_40C319↓o
.text:0040C2B7 ; const char aSS_0[]
.text:0040C2B7 aSS_0           db '%s: %s',0           ; DATA XREF: sub_40C2D0+77↓o
.text:0040C2BE ; const char aS_2[]
.text:0040C2BE aS_2            db '%s',0               ; DATA XREF: sub_40C2D0+A0↓o
.text:0040C2C1 ; ---------------------------------------------------------------------------
.text:0040C2C1                 jmp     short sub_40C2D0
.text:0040C2C1 ; ---------------------------------------------------------------------------
.text:0040C2C3                 align 10h
.text:0040C2D0
.text:0040C2D0 ; =============== S U B R O U T I N E =======================================
.text:0040C2D0
.text:0040C2D0
.text:0040C2D0 ; void __cdecl sub_40C2D0()
.text:0040C2D0 sub_40C2D0      proc near               ; CODE XREF: .text:0040C2C1↑j
.text:0040C2D0                                         ; DATA XREF: sub_4018C0+5C↑o
.text:0040C2D0
.text:0040C2D0 Stream          = dword ptr -2Ch
.text:0040C2D0 ErrorMessage    = dword ptr -28h
.text:0040C2D0 var_24          = dword ptr -24h
.text:0040C2D0 var_20          = byte ptr -20h
.text:0040C2D0 var_1C          = dword ptr -1Ch
.text:0040C2D0 var_9           = byte ptr -9
.text:0040C2D0
.text:0040C2D0                 push    esi
.text:0040C2D1                 push    ebx
.text:0040C2D2                 sub     esp, 24h
.text:0040C2D5                 mov     edx, ds:_iob
.text:0040C2DB                 mov     ecx, [edx+2Ch]
.text:0040C2DE                 lea     esi, [edx+20h]
.text:0040C2E1                 shr     ecx, 5
.text:0040C2E4                 mov     bl, cl
.text:0040C2E6                 mov     ecx, [edx+20h]
.text:0040C2E9                 and     bl, 1
.text:0040C2EC                 cmp     ecx, [esi+8]
.text:0040C2EF                 mov     [esp+2Ch+Stream], esi ; Stream
.text:0040C2F2                 setz    [esp+2Ch+var_9]
.text:0040C2F7                 call    fclose
.text:0040C2FC                 test    eax, eax
.text:0040C2FE                 setnz   al
.text:0040C301                 test    bl, bl
.text:0040C303                 jnz     loc_40C393
.text:0040C309                 test    al, al
.text:0040C30B                 jz      short loc_40C360
.text:0040C30D
.text:0040C30D loc_40C30D:                             ; CODE XREF: sub_40C2D0+CD↓j
.text:0040C30D                 call    _errno
.text:0040C312                 mov     esi, [eax]
.text:0040C314
.text:0040C314 loc_40C314:                             ; CODE XREF: sub_40C2D0+C7↓j
.text:0040C314                 cmp     esi, 9
.text:0040C317                 jz      short loc_40C386
.text:0040C319
.text:0040C319 loc_40C319:                             ; CODE XREF: sub_40C2D0+B8↓j
.text:0040C319                                         ; sub_40C2D0+C1↓j
.text:0040C319                 mov     [esp+2Ch+Stream], offset aWriteError ; "write error"
.text:0040C320                 call    ds:__imp_libintl_gettext
.text:0040C326                 mov     ebx, eax
.text:0040C328                 mov     eax, ds:dword_4132D0
.text:0040C32D                 test    eax, eax
.text:0040C32F                 jz      short loc_40C366
.text:0040C331                 mov     [esp+2Ch+Stream], eax ; char *
.text:0040C334                 call    sub_40FAB0
.text:0040C339                 mov     dword ptr [esp+2Ch+var_20], eax ; char
.text:0040C33D                 mov     edx, Code
.text:0040C343                 mov     [esp+2Ch+var_1C], ebx
.text:0040C347                 mov     [esp+2Ch+var_24], offset aSS_0 ; "%s: %s"
.text:0040C34F                 mov     [esp+2Ch+ErrorMessage], esi ; ErrorMessage
.text:0040C353                 mov     [esp+2Ch+Stream], edx ; Code
.text:0040C356                 call    sub_40FD70
.text:0040C35B                 nop
.text:0040C35C                 lea     esi, [esi+0]
.text:0040C360
.text:0040C360 loc_40C360:                             ; CODE XREF: sub_40C2D0+3B↑j
.text:0040C360                                         ; sub_40C2D0+B4↓j ...
.text:0040C360                 add     esp, 24h
.text:0040C363                 pop     ebx
.text:0040C364                 pop     esi
.text:0040C365                 retn
.text:0040C366 ; ---------------------------------------------------------------------------
.text:0040C366
.text:0040C366 loc_40C366:                             ; CODE XREF: sub_40C2D0+5F↑j
.text:0040C366                 mov     dword ptr [esp+2Ch+var_20], ebx ; char
.text:0040C36A                 mov     ebx, Code
.text:0040C370                 mov     [esp+2Ch+var_24], offset aS_2 ; "%s"
.text:0040C378                 mov     [esp+2Ch+ErrorMessage], esi ; ErrorMessage
.text:0040C37C                 mov     [esp+2Ch+Stream], ebx ; Code
.text:0040C37F                 call    sub_40FD70
.text:0040C384                 jmp     short loc_40C360
.text:0040C386 ; ---------------------------------------------------------------------------
.text:0040C386
.text:0040C386 loc_40C386:                             ; CODE XREF: sub_40C2D0+47↑j
.text:0040C386                 test    bl, bl
.text:0040C388                 jnz     short loc_40C319
.text:0040C38A                 cmp     [esp+2Ch+var_9], 0
.text:0040C38F                 jnz     short loc_40C360
.text:0040C391                 jmp     short loc_40C319
.text:0040C393 ; ---------------------------------------------------------------------------
.text:0040C393
.text:0040C393 loc_40C393:                             ; CODE XREF: sub_40C2D0+33↑j
.text:0040C393                 xor     esi, esi
.text:0040C395                 test    al, al
.text:0040C397                 jz      loc_40C314
.text:0040C39D                 jmp     loc_40C30D
.text:0040C39D sub_40C2D0      endp
.text:0040C39D
.text:0040C39D ; ---------------------------------------------------------------------------
.text:0040C3A2                 align 10h
.text:0040C3B0 aCoreutils530Sr db '../../coreutils-5.3.0-src/lib/xstrtol.c',0
.text:0040C3B0                                         ; DATA XREF: sub_40C420+544↓o
.text:0040C3D8                 db 18h dup(90h)
.text:0040C3F0 a0StrtolBaseStr db '0 <= strtol_base && strtol_base <= 36',0
.text:0040C3F0                                         ; DATA XREF: sub_40C420+54C↓o
.text:0040C416                 align 10h
.text:0040C420
.text:0040C420 ; =============== S U B R O U T I N E =======================================
.text:0040C420
.text:0040C420
.text:0040C420 ; int __cdecl sub_40C420(int, int, int, int, char *Str)
.text:0040C420 sub_40C420      proc near               ; CODE XREF: sub_4018C0+1D4↑p
.text:0040C420                                         ; sub_403750+23F↑p ...
.text:0040C420
.text:0040C420 C               = dword ptr -3Ch
.text:0040C420 Type            = dword ptr -38h
.text:0040C420 Radix           = dword ptr -34h
.text:0040C420 var_28          = dword ptr -28h
.text:0040C420 var_24          = dword ptr -24h
.text:0040C420 var_1D          = byte ptr -1Dh
.text:0040C420 var_1C          = dword ptr -1Ch
.text:0040C420 var_18          = dword ptr -18h
.text:0040C420 var_14          = byte ptr -14h
.text:0040C420 arg_0           = dword ptr  4
.text:0040C420 arg_4           = dword ptr  8
.text:0040C420 arg_8           = dword ptr  0Ch
.text:0040C420 arg_C           = dword ptr  10h
.text:0040C420 Str             = dword ptr  14h
.text:0040C420
.text:0040C420                 push    ebp
.text:0040C421                 push    edi
.text:0040C422                 push    esi
.text:0040C423                 push    ebx
.text:0040C424                 sub     esp, 2Ch
.text:0040C427                 mov     ebp, [esp+3Ch+arg_8]
.text:0040C42B                 mov     [esp+3Ch+var_1C], 0
.text:0040C433                 mov     esi, [esp+3Ch+arg_0]
.text:0040C437                 cmp     ebp, 24h ; '$'
.text:0040C43A                 ja      loc_40C95C
.text:0040C440                 mov     edi, [esp+3Ch+arg_4]
.text:0040C444                 test    edi, edi
.text:0040C446                 jz      loc_40C953
.text:0040C44C
.text:0040C44C loc_40C44C:                             ; CODE XREF: sub_40C420+537↓j
.text:0040C44C                 movzx   edx, byte ptr [esi]
.text:0040C44F                 mov     ebx, esi
.text:0040C451                 mov     [esp+3Ch+var_1D], dl
.text:0040C455                 lea     esi, [esi+0]
.text:0040C459                 lea     edi, [edi+0]
.text:0040C460
.text:0040C460 loc_40C460:                             ; CODE XREF: sub_40C420+70↓j
.text:0040C460                 movzx   edx, [esp+3Ch+var_1D]
.text:0040C465                 mov     ecx, ds:__mb_cur_max
.text:0040C46B                 cmp     dword ptr [ecx], 1
.text:0040C46E                 jz      loc_40C940
.text:0040C474                 mov     [esp+3Ch+Type], 8 ; Type
.text:0040C47C                 mov     [esp+3Ch+C], edx ; C
.text:0040C47F                 call    _isctype
.text:0040C484
.text:0040C484 loc_40C484:                             ; CODE XREF: sub_40C420+52E↓j
.text:0040C484                 test    eax, eax
.text:0040C486                 jz      short loc_40C492
.text:0040C488                 inc     ebx
.text:0040C489                 movzx   eax, byte ptr [ebx]
.text:0040C48C                 mov     [esp+3Ch+var_1D], al
.text:0040C490                 jmp     short loc_40C460
.text:0040C492 ; ---------------------------------------------------------------------------
.text:0040C492
.text:0040C492 loc_40C492:                             ; CODE XREF: sub_40C420+66↑j
.text:0040C492                 cmp     [esp+3Ch+var_1D], 2Dh ; '-'
.text:0040C497                 mov     eax, 4
.text:0040C49C                 jz      short loc_40C4F5
.text:0040C49E                 call    _errno
.text:0040C4A3                 mov     dword ptr [eax], 0
.text:0040C4A9                 mov     [esp+3Ch+Radix], ebp ; Radix
.text:0040C4AD                 mov     [esp+3Ch+Type], edi ; EndPtr
.text:0040C4B1                 mov     [esp+3Ch+C], esi ; String
.text:0040C4B4                 call    strtoul
.text:0040C4B9                 mov     [esp+3Ch+var_18], eax
.text:0040C4BD                 mov     eax, [edi]
.text:0040C4BF                 cmp     eax, esi
.text:0040C4C1                 jz      loc_40C90C
.text:0040C4C7                 call    _errno
.text:0040C4CC                 mov     ebp, [eax]
.text:0040C4CE                 test    ebp, ebp
.text:0040C4D0                 jnz     loc_40C8EB
.text:0040C4D6
.text:0040C4D6 loc_40C4D6:                             ; CODE XREF: sub_40C420+4DD↓j
.text:0040C4D6                                         ; sub_40C420+51A↓j
.text:0040C4D6                 mov     eax, [esp+3Ch+Str]
.text:0040C4DA                 test    eax, eax
.text:0040C4DC                 jz      short loc_40C4E7
.text:0040C4DE                 mov     ecx, [edi]
.text:0040C4E0                 movzx   eax, byte ptr [ecx]
.text:0040C4E3                 test    al, al
.text:0040C4E5                 jnz     short loc_40C4FD
.text:0040C4E7
.text:0040C4E7 loc_40C4E7:                             ; CODE XREF: sub_40C420+BC↑j
.text:0040C4E7                                         ; sub_40C420+26C↓j ...
.text:0040C4E7                 mov     edx, [esp+3Ch+var_18]
.text:0040C4EB                 mov     esi, [esp+3Ch+arg_C]
.text:0040C4EF                 mov     eax, [esp+3Ch+var_1C]
.text:0040C4F3                 mov     [esi], edx
.text:0040C4F5
.text:0040C4F5 loc_40C4F5:                             ; CODE XREF: sub_40C420+7C↑j
.text:0040C4F5                                         ; sub_40C420+112↓j ...
.text:0040C4F5                 add     esp, 2Ch
.text:0040C4F8                 pop     ebx
.text:0040C4F9                 pop     esi
.text:0040C4FA                 pop     edi
.text:0040C4FB                 pop     ebp
.text:0040C4FC                 retn
.text:0040C4FD ; ---------------------------------------------------------------------------
.text:0040C4FD
.text:0040C4FD loc_40C4FD:                             ; CODE XREF: sub_40C420+C5↑j
.text:0040C4FD                 mov     [esp+3Ch+var_24], 1
.text:0040C505                 mov     edx, [esp+3Ch+Str]
.text:0040C509                 movsx   esi, al
.text:0040C50C                 mov     [esp+3Ch+Type], esi ; Val
.text:0040C510                 mov     ebx, 400h
.text:0040C515                 mov     [esp+3Ch+C], edx ; Str
.text:0040C518                 call    strchr
.text:0040C51D                 test    eax, eax
.text:0040C51F                 jnz     short loc_40C534
.text:0040C521
.text:0040C521 def_40C584:                             ; CODE XREF: sub_40C420+162↓j
.text:0040C521                                         ; sub_40C420+164↓j
.text:0040C521                                         ; DATA XREF: ...
.text:0040C521                 mov     eax, [esp+3Ch+var_1C] ; jumptable 0040C584 default case, cases 67,68,70,72-74,76,78,79,81-83,85-88,91-97,100-102,104-106,108,110-115,117,118
.text:0040C525                 mov     ebx, [esp+3Ch+var_18]
.text:0040C529                 mov     edi, [esp+3Ch+arg_C]
.text:0040C52D                 or      eax, 2
.text:0040C530                 mov     [edi], ebx
.text:0040C532                 jmp     short loc_40C4F5
.text:0040C534 ; ---------------------------------------------------------------------------
.text:0040C534
.text:0040C534 loc_40C534:                             ; CODE XREF: sub_40C420+FF↑j
.text:0040C534                 mov     [esp+3Ch+Type], 30h ; '0' ; Val
.text:0040C53C                 mov     ebp, [esp+3Ch+Str]
.text:0040C540                 mov     [esp+3Ch+C], ebp ; Str
.text:0040C543                 call    strchr
.text:0040C548                 test    eax, eax
.text:0040C54A                 jz      loc_40C8E0
.text:0040C550                 mov     ecx, [edi]
.text:0040C552                 mov     [esp+3Ch+var_28], ecx
.text:0040C556                 movsx   eax, byte ptr [ecx+1]
.text:0040C55A                 cmp     eax, 44h ; 'D'
.text:0040C55D                 jz      loc_40C8A9
.text:0040C563                 cmp     eax, 44h ; 'D'
.text:0040C566                 jg      loc_40C8BB
.text:0040C56C                 cmp     eax, 42h ; 'B'
.text:0040C56F                 jz      loc_40C8A9
.text:0040C575
.text:0040C575 loc_40C575:                             ; CODE XREF: sub_40C420+496↓j
.text:0040C575                                         ; sub_40C420+49E↓j ...
.text:0040C575                 mov     esi, [esp+3Ch+var_28]
.text:0040C579                 movsx   eax, byte ptr [esi]
.text:0040C57C                 sub     eax, 42h ; 'B'  ; switch 54 cases
.text:0040C57F                 cmp     eax, 35h
.text:0040C582                 ja      short def_40C584 ; jumptable 0040C584 default case, cases 67,68,70,72-74,76,78,79,81-83,85-88,91-97,100-102,104-106,108,110-115,117,118
.text:0040C584                 jmp     ds:jpt_40C584[eax*4] ; switch jump
.text:0040C584 ; ---------------------------------------------------------------------------
.text:0040C58B                 align 4
.text:0040C58C jpt_40C584      dd offset loc_40C6AB, offset def_40C584, offset def_40C584
.text:0040C58C                                         ; DATA XREF: sub_40C420+164↑r
.text:0040C58C                 dd offset loc_40C6BB, offset def_40C584, offset loc_40C7AC ; jump table for switch statement
.text:0040C58C                 dd offset def_40C584, offset def_40C584, offset def_40C584
.text:0040C58C                 dd offset loc_40C7E9, offset def_40C584, offset loc_40C81B
.text:0040C58C                 dd offset def_40C584, offset def_40C584, offset loc_40C6F5
.text:0040C58C                 dd offset def_40C584, offset def_40C584, offset def_40C584
.text:0040C58C                 dd offset loc_40C859, offset def_40C584, offset def_40C584
.text:0040C58C                 dd offset def_40C584, offset def_40C584, offset loc_40C732
.text:0040C58C                 dd offset loc_40C76F, offset def_40C584, offset def_40C584
.text:0040C58C                 dd offset def_40C584, offset def_40C584, offset def_40C584
.text:0040C58C                 dd offset def_40C584, offset def_40C584, offset loc_40C664
.text:0040C58C                 dd offset loc_40C676, offset def_40C584, offset def_40C584
.text:0040C58C                 dd offset def_40C584, offset loc_40C7AC, offset def_40C584
.text:0040C58C                 dd offset def_40C584, offset def_40C584, offset loc_40C7E9
.text:0040C58C                 dd offset def_40C584, offset loc_40C81B, offset def_40C584
.text:0040C58C                 dd offset def_40C584, offset def_40C584, offset def_40C584
.text:0040C58C                 dd offset def_40C584, offset def_40C584, offset loc_40C859
.text:0040C58C                 dd offset def_40C584, offset def_40C584, offset loc_40C896
.text:0040C664 ; ---------------------------------------------------------------------------
.text:0040C664
.text:0040C664 loc_40C664:                             ; CODE XREF: sub_40C420+164↑j
.text:0040C664                                         ; DATA XREF: sub_40C420:jpt_40C584↑o
.text:0040C664                 mov     eax, [esp+3Ch+var_18] ; jumptable 0040C584 case 98
.text:0040C668                 cmp     eax, 7FFFFFh
.text:0040C66D                 ja      short loc_40C69C
.text:0040C66F                 shl     eax, 9
.text:0040C672
.text:0040C672 loc_40C672:                             ; CODE XREF: sub_40C420+299↓j
.text:0040C672                                         ; sub_40C420+484↓j
.text:0040C672                 mov     [esp+3Ch+var_18], eax
.text:0040C676
.text:0040C676 loc_40C676:                             ; CODE XREF: sub_40C420+164↑j
.text:0040C676                                         ; DATA XREF: sub_40C420:jpt_40C584↑o
.text:0040C676                 xor     eax, eax        ; jumptable 0040C584 case 99
.text:0040C678
.text:0040C678 loc_40C678:                             ; CODE XREF: sub_40C420+289↓j
.text:0040C678                                         ; sub_40C420+2CA↓j ...
.text:0040C678                 or      [esp+3Ch+var_1C], eax
.text:0040C67C                 mov     ebp, [esp+3Ch+var_28]
.text:0040C680                 mov     ecx, [esp+3Ch+var_24]
.text:0040C684                 add     ebp, ecx
.text:0040C686                 mov     [edi], ebp
.text:0040C688                 cmp     byte ptr [ebp+0], 0
.text:0040C68C                 jz      loc_40C4E7
.text:0040C692                 or      [esp+3Ch+var_1C], 2
.text:0040C697                 jmp     loc_40C4E7
.text:0040C69C ; ---------------------------------------------------------------------------
.text:0040C69C
.text:0040C69C loc_40C69C:                             ; CODE XREF: sub_40C420+24D↑j
.text:0040C69C                                         ; sub_40C420+294↓j ...
.text:0040C69C                 mov     [esp+3Ch+var_18], 0FFFFFFFFh
.text:0040C6A4                 mov     eax, 1
.text:0040C6A9                 jmp     short loc_40C678
.text:0040C6AB ; ---------------------------------------------------------------------------
.text:0040C6AB
.text:0040C6AB loc_40C6AB:                             ; CODE XREF: sub_40C420+164↑j
.text:0040C6AB                                         ; DATA XREF: sub_40C420:jpt_40C584↑o
.text:0040C6AB                 mov     eax, [esp+3Ch+var_18] ; jumptable 0040C584 case 66
.text:0040C6AF                 cmp     eax, 3FFFFFh
.text:0040C6B4                 ja      short loc_40C69C
.text:0040C6B6                 shl     eax, 0Ah
.text:0040C6B9                 jmp     short loc_40C672
.text:0040C6BB ; ---------------------------------------------------------------------------
.text:0040C6BB
.text:0040C6BB loc_40C6BB:                             ; CODE XREF: sub_40C420+164↑j
.text:0040C6BB                                         ; DATA XREF: sub_40C420:jpt_40C584↑o
.text:0040C6BB                 lea     ecx, [esp+3Ch+var_18] ; jumptable 0040C584 case 69
.text:0040C6BF                 xor     ebp, ebp
.text:0040C6C1                 mov     esi, 5
.text:0040C6C6
.text:0040C6C6 loc_40C6C6:                             ; CODE XREF: sub_40C420+2C8↓j
.text:0040C6C6                 xor     edx, edx
.text:0040C6C8                 mov     eax, 0FFFFFFFFh
.text:0040C6CD                 div     ebx
.text:0040C6CF                 mov     edx, [ecx]
.text:0040C6D1                 cmp     eax, edx
.text:0040C6D3                 jnb     short loc_40C6EC
.text:0040C6D5                 mov     dword ptr [ecx], 0FFFFFFFFh
.text:0040C6DB                 mov     eax, 1
.text:0040C6E0
.text:0040C6E0 loc_40C6E0:                             ; CODE XREF: sub_40C420+2D3↓j
.text:0040C6E0                 dec     esi
.text:0040C6E1                 or      ebp, eax
.text:0040C6E3                 cmp     esi, 0FFFFFFFFh
.text:0040C6E6                 mov     eax, ebp
.text:0040C6E8                 jnz     short loc_40C6C6
.text:0040C6EA                 jmp     short loc_40C678
.text:0040C6EC ; ---------------------------------------------------------------------------
.text:0040C6EC
.text:0040C6EC loc_40C6EC:                             ; CODE XREF: sub_40C420+2B3↑j
.text:0040C6EC                 imul    edx, ebx
.text:0040C6EF                 xor     eax, eax
.text:0040C6F1                 mov     [ecx], edx
.text:0040C6F3                 jmp     short loc_40C6E0
.text:0040C6F5 ; ---------------------------------------------------------------------------
.text:0040C6F5
.text:0040C6F5 loc_40C6F5:                             ; CODE XREF: sub_40C420+164↑j
.text:0040C6F5                                         ; DATA XREF: sub_40C420:jpt_40C584↑o
.text:0040C6F5                 lea     ecx, [esp+3Ch+var_18] ; jumptable 0040C584 case 80
.text:0040C6F9                 xor     ebp, ebp
.text:0040C6FB                 mov     esi, 4
.text:0040C700
.text:0040C700 loc_40C700:                             ; CODE XREF: sub_40C420+302↓j
.text:0040C700                 xor     edx, edx
.text:0040C702                 mov     eax, 0FFFFFFFFh
.text:0040C707                 div     ebx
.text:0040C709                 mov     edx, [ecx]
.text:0040C70B                 cmp     eax, edx
.text:0040C70D                 jnb     short loc_40C729
.text:0040C70F                 mov     dword ptr [ecx], 0FFFFFFFFh
.text:0040C715                 mov     eax, 1
.text:0040C71A
.text:0040C71A loc_40C71A:                             ; CODE XREF: sub_40C420+310↓j
.text:0040C71A                 dec     esi
.text:0040C71B                 or      ebp, eax
.text:0040C71D                 cmp     esi, 0FFFFFFFFh
.text:0040C720                 mov     eax, ebp
.text:0040C722                 jnz     short loc_40C700
.text:0040C724                 jmp     loc_40C678
.text:0040C729 ; ---------------------------------------------------------------------------
.text:0040C729
.text:0040C729 loc_40C729:                             ; CODE XREF: sub_40C420+2ED↑j
.text:0040C729                 imul    edx, ebx
.text:0040C72C                 xor     eax, eax
.text:0040C72E                 mov     [ecx], edx
.text:0040C730                 jmp     short loc_40C71A
.text:0040C732 ; ---------------------------------------------------------------------------
.text:0040C732
.text:0040C732 loc_40C732:                             ; CODE XREF: sub_40C420+164↑j
.text:0040C732                                         ; DATA XREF: sub_40C420:jpt_40C584↑o
.text:0040C732                 lea     ecx, [esp+3Ch+var_18] ; jumptable 0040C584 case 89
.text:0040C736                 xor     ebp, ebp
.text:0040C738                 mov     esi, 7
.text:0040C73D
.text:0040C73D loc_40C73D:                             ; CODE XREF: sub_40C420+33F↓j
.text:0040C73D                 xor     edx, edx
.text:0040C73F                 mov     eax, 0FFFFFFFFh
.text:0040C744                 div     ebx
.text:0040C746                 mov     edx, [ecx]
.text:0040C748                 cmp     eax, edx
.text:0040C74A                 jnb     short loc_40C766
.text:0040C74C                 mov     dword ptr [ecx], 0FFFFFFFFh
.text:0040C752                 mov     eax, 1
.text:0040C757
.text:0040C757 loc_40C757:                             ; CODE XREF: sub_40C420+34D↓j
.text:0040C757                 dec     esi
.text:0040C758                 or      ebp, eax
.text:0040C75A                 cmp     esi, 0FFFFFFFFh
.text:0040C75D                 mov     eax, ebp
.text:0040C75F                 jnz     short loc_40C73D
.text:0040C761                 jmp     loc_40C678
.text:0040C766 ; ---------------------------------------------------------------------------
.text:0040C766
.text:0040C766 loc_40C766:                             ; CODE XREF: sub_40C420+32A↑j
.text:0040C766                 imul    edx, ebx
.text:0040C769                 xor     eax, eax
.text:0040C76B                 mov     [ecx], edx
.text:0040C76D                 jmp     short loc_40C757
.text:0040C76F ; ---------------------------------------------------------------------------
.text:0040C76F
.text:0040C76F loc_40C76F:                             ; CODE XREF: sub_40C420+164↑j
.text:0040C76F                                         ; DATA XREF: sub_40C420:jpt_40C584↑o
.text:0040C76F                 lea     ecx, [esp+3Ch+var_18] ; jumptable 0040C584 case 90
.text:0040C773                 xor     ebp, ebp
.text:0040C775                 mov     esi, 6
.text:0040C77A
.text:0040C77A loc_40C77A:                             ; CODE XREF: sub_40C420+37C↓j
.text:0040C77A                 xor     edx, edx
.text:0040C77C                 mov     eax, 0FFFFFFFFh
.text:0040C781                 div     ebx
.text:0040C783                 mov     edx, [ecx]
.text:0040C785                 cmp     eax, edx
.text:0040C787                 jnb     short loc_40C7A3
.text:0040C789                 mov     dword ptr [ecx], 0FFFFFFFFh
.text:0040C78F                 mov     eax, 1
.text:0040C794
.text:0040C794 loc_40C794:                             ; CODE XREF: sub_40C420+38A↓j
.text:0040C794                 dec     esi
.text:0040C795                 or      ebp, eax
.text:0040C797                 cmp     esi, 0FFFFFFFFh
.text:0040C79A                 mov     eax, ebp
.text:0040C79C                 jnz     short loc_40C77A
.text:0040C79E                 jmp     loc_40C678
.text:0040C7A3 ; ---------------------------------------------------------------------------
.text:0040C7A3
.text:0040C7A3 loc_40C7A3:                             ; CODE XREF: sub_40C420+367↑j
.text:0040C7A3                 imul    edx, ebx
.text:0040C7A6                 xor     eax, eax
.text:0040C7A8                 mov     [ecx], edx
.text:0040C7AA                 jmp     short loc_40C794
.text:0040C7AC ; ---------------------------------------------------------------------------
.text:0040C7AC
.text:0040C7AC loc_40C7AC:                             ; CODE XREF: sub_40C420+164↑j
.text:0040C7AC                                         ; DATA XREF: sub_40C420:jpt_40C584↑o
.text:0040C7AC                 lea     ecx, [esp+3Ch+var_18] ; jumptable 0040C584 cases 71,103
.text:0040C7B0                 xor     ebp, ebp
.text:0040C7B2                 mov     esi, 2
.text:0040C7B7
.text:0040C7B7 loc_40C7B7:                             ; CODE XREF: sub_40C420+3B9↓j
.text:0040C7B7                 xor     edx, edx
.text:0040C7B9                 mov     eax, 0FFFFFFFFh
.text:0040C7BE                 div     ebx
.text:0040C7C0                 mov     edx, [ecx]
.text:0040C7C2                 cmp     eax, edx
.text:0040C7C4                 jnb     short loc_40C7E0
.text:0040C7C6                 mov     dword ptr [ecx], 0FFFFFFFFh
.text:0040C7CC                 mov     eax, 1
.text:0040C7D1
.text:0040C7D1 loc_40C7D1:                             ; CODE XREF: sub_40C420+3C7↓j
.text:0040C7D1                 dec     esi
.text:0040C7D2                 or      ebp, eax
.text:0040C7D4                 cmp     esi, 0FFFFFFFFh
.text:0040C7D7                 mov     eax, ebp
.text:0040C7D9                 jnz     short loc_40C7B7
.text:0040C7DB                 jmp     loc_40C678
.text:0040C7E0 ; ---------------------------------------------------------------------------
.text:0040C7E0
.text:0040C7E0 loc_40C7E0:                             ; CODE XREF: sub_40C420+3A4↑j
.text:0040C7E0                 imul    edx, ebx
.text:0040C7E3                 xor     eax, eax
.text:0040C7E5                 mov     [ecx], edx
.text:0040C7E7                 jmp     short loc_40C7D1
.text:0040C7E9 ; ---------------------------------------------------------------------------
.text:0040C7E9
.text:0040C7E9 loc_40C7E9:                             ; CODE XREF: sub_40C420+164↑j
.text:0040C7E9                                         ; DATA XREF: sub_40C420:jpt_40C584↑o
.text:0040C7E9                 xor     edx, edx        ; jumptable 0040C584 cases 75,107
.text:0040C7EB                 mov     eax, 0FFFFFFFFh
.text:0040C7F0                 div     ebx
.text:0040C7F2                 mov     edx, [esp+3Ch+var_18]
.text:0040C7F6                 cmp     eax, edx
.text:0040C7F8                 jnb     short loc_40C810
.text:0040C7FA                 mov     [esp+3Ch+var_18], 0FFFFFFFFh
.text:0040C802                 mov     edx, 1
.text:0040C807
.text:0040C807 loc_40C807:                             ; CODE XREF: sub_40C420+3F9↓j
.text:0040C807                 xor     eax, eax
.text:0040C809                 or      eax, edx
.text:0040C80B                 jmp     loc_40C678
.text:0040C810 ; ---------------------------------------------------------------------------
.text:0040C810
.text:0040C810 loc_40C810:                             ; CODE XREF: sub_40C420+3D8↑j
.text:0040C810                 imul    edx, ebx
.text:0040C813                 mov     [esp+3Ch+var_18], edx
.text:0040C817                 xor     edx, edx
.text:0040C819                 jmp     short loc_40C807
.text:0040C81B ; ---------------------------------------------------------------------------
.text:0040C81B
.text:0040C81B loc_40C81B:                             ; CODE XREF: sub_40C420+164↑j
.text:0040C81B                                         ; DATA XREF: sub_40C420:jpt_40C584↑o
.text:0040C81B                 lea     ecx, [esp+3Ch+var_18] ; jumptable 0040C584 cases 77,109
.text:0040C81F                 xor     ebp, ebp
.text:0040C821                 mov     esi, 1
.text:0040C826
.text:0040C826 loc_40C826:                             ; CODE XREF: sub_40C420+42E↓j
.text:0040C826                 xor     edx, edx
.text:0040C828                 mov     eax, 0FFFFFFFFh
.text:0040C82D                 div     ebx
.text:0040C82F                 mov     edx, [ecx]
.text:0040C831                 cmp     eax, edx
.text:0040C833                 jnb     short loc_40C850
.text:0040C835                 mov     dword ptr [ecx], 0FFFFFFFFh
.text:0040C83B                 mov     eax, 1
.text:0040C840
.text:0040C840 loc_40C840:                             ; CODE XREF: sub_40C420+437↓j
.text:0040C840                 dec     esi
.text:0040C841                 or      ebp, eax
.text:0040C843                 cmp     esi, 0FFFFFFFFh
.text:0040C846                 mov     eax, ebp
.text:0040C848                 jz      loc_40C678
.text:0040C84E                 jmp     short loc_40C826
.text:0040C850 ; ---------------------------------------------------------------------------
.text:0040C850
.text:0040C850 loc_40C850:                             ; CODE XREF: sub_40C420+413↑j
.text:0040C850                 imul    edx, ebx
.text:0040C853                 xor     eax, eax
.text:0040C855                 mov     [ecx], edx
.text:0040C857                 jmp     short loc_40C840
.text:0040C859 ; ---------------------------------------------------------------------------
.text:0040C859
.text:0040C859 loc_40C859:                             ; CODE XREF: sub_40C420+164↑j
.text:0040C859                                         ; DATA XREF: sub_40C420:jpt_40C584↑o
.text:0040C859                 lea     ecx, [esp+3Ch+var_18] ; jumptable 0040C584 cases 84,116
.text:0040C85D                 xor     ebp, ebp
.text:0040C85F                 mov     esi, 3
.text:0040C864
.text:0040C864 loc_40C864:                             ; CODE XREF: sub_40C420+466↓j
.text:0040C864                 xor     edx, edx
.text:0040C866                 mov     eax, 0FFFFFFFFh
.text:0040C86B                 div     ebx
.text:0040C86D                 mov     edx, [ecx]
.text:0040C86F                 cmp     eax, edx
.text:0040C871                 jnb     short loc_40C88D
.text:0040C873                 mov     dword ptr [ecx], 0FFFFFFFFh
.text:0040C879                 mov     eax, 1
.text:0040C87E
.text:0040C87E loc_40C87E:                             ; CODE XREF: sub_40C420+474↓j
.text:0040C87E                 dec     esi
.text:0040C87F                 or      ebp, eax
.text:0040C881                 cmp     esi, 0FFFFFFFFh
.text:0040C884                 mov     eax, ebp
.text:0040C886                 jnz     short loc_40C864
.text:0040C888                 jmp     loc_40C678
.text:0040C88D ; ---------------------------------------------------------------------------
.text:0040C88D
.text:0040C88D loc_40C88D:                             ; CODE XREF: sub_40C420+451↑j
.text:0040C88D                 imul    edx, ebx
.text:0040C890                 xor     eax, eax
.text:0040C892                 mov     [ecx], edx
.text:0040C894                 jmp     short loc_40C87E
.text:0040C896 ; ---------------------------------------------------------------------------
.text:0040C896
.text:0040C896 loc_40C896:                             ; CODE XREF: sub_40C420+164↑j
.text:0040C896                                         ; DATA XREF: sub_40C420:jpt_40C584↑o
.text:0040C896                 mov     eax, [esp+3Ch+var_18] ; jumptable 0040C584 case 119
.text:0040C89A                 test    eax, eax
.text:0040C89C                 js      loc_40C69C
.text:0040C8A2                 add     eax, eax
.text:0040C8A4                 jmp     loc_40C672
.text:0040C8A9 ; ---------------------------------------------------------------------------
.text:0040C8A9
.text:0040C8A9 loc_40C8A9:                             ; CODE XREF: sub_40C420+13D↑j
.text:0040C8A9                                         ; sub_40C420+14F↑j
.text:0040C8A9                 mov     [esp+3Ch+var_24], 2
.text:0040C8B1                 mov     ebx, 3E8h
.text:0040C8B6                 jmp     loc_40C575
.text:0040C8BB ; ---------------------------------------------------------------------------
.text:0040C8BB
.text:0040C8BB loc_40C8BB:                             ; CODE XREF: sub_40C420+146↑j
.text:0040C8BB                 cmp     eax, 69h ; 'i'
.text:0040C8BE                 jnz     loc_40C575
.text:0040C8C4                 mov     edx, [esp+3Ch+var_28]
.text:0040C8C8                 cmp     byte ptr [edx+2], 42h ; 'B'
.text:0040C8CC                 jnz     loc_40C575
.text:0040C8D2                 mov     [esp+3Ch+var_24], 3
.text:0040C8DA                 jmp     loc_40C575
.text:0040C8DA ; ---------------------------------------------------------------------------
.text:0040C8DF                 align 10h
.text:0040C8E0
.text:0040C8E0 loc_40C8E0:                             ; CODE XREF: sub_40C420+12A↑j
.text:0040C8E0                 mov     eax, [edi]
.text:0040C8E2                 mov     [esp+3Ch+var_28], eax
.text:0040C8E6                 jmp     loc_40C575
.text:0040C8EB ; ---------------------------------------------------------------------------
.text:0040C8EB
.text:0040C8EB loc_40C8EB:                             ; CODE XREF: sub_40C420+B0↑j
.text:0040C8EB                 call    _errno
.text:0040C8F0                 cmp     dword ptr [eax], 22h ; '"'
.text:0040C8F3                 jnz     short loc_40C902
.text:0040C8F5                 mov     [esp+3Ch+var_1C], 1
.text:0040C8FD                 jmp     loc_40C4D6
.text:0040C902 ; ---------------------------------------------------------------------------
.text:0040C902
.text:0040C902 loc_40C902:                             ; CODE XREF: sub_40C420+4D3↑j
.text:0040C902                                         ; sub_40C420+4F2↓j ...
.text:0040C902                 mov     eax, 4
.text:0040C907                 jmp     loc_40C4F5
.text:0040C90C ; ---------------------------------------------------------------------------
.text:0040C90C
.text:0040C90C loc_40C90C:                             ; CODE XREF: sub_40C420+A1↑j
.text:0040C90C                 mov     edx, [esp+3Ch+Str]
.text:0040C910                 test    edx, edx
.text:0040C912                 jz      short loc_40C902
.text:0040C914                 movzx   eax, byte ptr [eax]
.text:0040C917                 test    al, al
.text:0040C919                 jz      short loc_40C902
.text:0040C91B                 mov     ebx, [esp+3Ch+Str]
.text:0040C91F                 movsx   esi, al
.text:0040C922                 mov     [esp+3Ch+Type], esi ; Val
.text:0040C926                 mov     [esp+3Ch+C], ebx ; Str
.text:0040C929                 call    strchr
.text:0040C92E                 test    eax, eax
.text:0040C930                 jz      short loc_40C902
.text:0040C932                 mov     [esp+3Ch+var_18], 1
.text:0040C93A                 jmp     loc_40C4D6
.text:0040C93A ; ---------------------------------------------------------------------------
.text:0040C93F                 align 10h
.text:0040C940
.text:0040C940 loc_40C940:                             ; CODE XREF: sub_40C420+4E↑j
.text:0040C940                 mov     eax, ds:_pctype
.text:0040C945                 mov     ecx, [eax]
.text:0040C947                 movzx   eax, word ptr [ecx+edx*2]
.text:0040C94B                 and     eax, 8
.text:0040C94E                 jmp     loc_40C484
.text:0040C953 ; ---------------------------------------------------------------------------
.text:0040C953
.text:0040C953 loc_40C953:                             ; CODE XREF: sub_40C420+26↑j
.text:0040C953                 lea     edi, [esp+3Ch+var_14]
.text:0040C957                 jmp     loc_40C44C
.text:0040C95C ; ---------------------------------------------------------------------------
.text:0040C95C
.text:0040C95C loc_40C95C:                             ; CODE XREF: sub_40C420+1A↑j
.text:0040C95C                 mov     [esp+3Ch+Radix], 70h ; 'p'
.text:0040C964                 mov     [esp+3Ch+Type], offset aCoreutils530Sr ; "../../coreutils-5.3.0-src/lib/xstrtol.c"
.text:0040C96C                 mov     [esp+3Ch+C], offset a0StrtolBaseStr ; "0 <= strtol_base && strtol_base <= 36"
.text:0040C973                 call    _assert
.text:0040C973 sub_40C420      endp
.text:0040C973
.text:0040C973 ; ---------------------------------------------------------------------------
.text:0040C978                 db 18h dup(90h)
.text:0040C990 ; ---------------------------------------------------------------------------
.text:0040C990
.text:0040C990 loc_40C990:                             ; DATA XREF: sub_40CA00+C79↓o
.text:0040C990                 db      2Eh, 2Eh
.text:0040C990                 das
.text:0040C993                 db      2Eh, 2Eh
.text:0040C993                 das
.text:0040C996                 arpl    [edi+72h], bp
.text:0040C999                 db      65h
.text:0040C999                 jnz     short near ptr loc_40CA0C+4
.text:0040C99C                 imul    ebp, [ebx+esi*2+2Dh], 2E332E35h
.text:0040C9A4                 xor     ds:2F637273h, ch
.text:0040C9AA                 insb
.text:0040C9AB                 imul    esp, [edx+2Fh], 72747378h
.text:0040C9B2                 jz      short near ptr loc_40CA21+2
.text:0040C9B4                 insb
.text:0040C9B5                 arpl    cs:[eax], ax
.text:0040C9B8                 nop
.text:0040C9B9                 nop
.text:0040C9BA                 nop
.text:0040C9BB                 nop
.text:0040C9BC                 nop
.text:0040C9BD                 nop
.text:0040C9BE                 nop
.text:0040C9BF                 nop
.text:0040C9C0                 nop
.text:0040C9C1                 nop
.text:0040C9C2                 nop
.text:0040C9C3                 nop
.text:0040C9C4                 nop
.text:0040C9C5                 nop
.text:0040C9C6                 nop
.text:0040C9C7                 nop
.text:0040C9C8                 nop
.text:0040C9C9                 nop
.text:0040C9CA                 nop
.text:0040C9CB                 nop
.text:0040C9CC                 nop
.text:0040C9CD                 nop
.text:0040C9CE                 nop
.text:0040C9CF                 nop
.text:0040C9D0
.text:0040C9D0 loc_40C9D0:                             ; DATA XREF: sub_40CA00+C81↓o
.text:0040C9D0                 xor     [eax], ah
.text:0040C9D2                 cmp     al, 3Dh ; '='
.text:0040C9D4                 and     [ebx+74h], dh
.text:0040C9D7                 jb      short near ptr loc_40CA49+4
.text:0040C9D9                 outsd
.text:0040C9DA                 insb
.text:0040C9DB                 pop     edi
.text:0040C9DC                 bound   esp, [ecx+73h]
.text:0040C9DF                 and     gs:[esi], ah
.text:0040C9E2                 and     es:[ebx+74h], dh
.text:0040C9E6                 jb      short near ptr loc_40CA58+4
.text:0040C9E8                 outsd
.text:0040C9E9                 insb
.text:0040C9EA                 pop     edi
.text:0040C9EB                 bound   esp, [ecx+73h]
.text:0040C9EE                 and     gs:363320h[edi], bh
.text:0040C9F6                 lea     esi, [esi+0]
.text:0040C9F9                 lea     edi, [edi+0]
.text:0040CA00
.text:0040CA00 ; =============== S U B R O U T I N E =======================================
.text:0040CA00
.text:0040CA00
.text:0040CA00 ; int __cdecl sub_40CA00(int, int, int, int, char *Str)
.text:0040CA00 sub_40CA00      proc near               ; CODE XREF: sub_403200+E9↑p
.text:0040CA00                                         ; sub_403200+263↑p
.text:0040CA00
.text:0040CA00 C               = dword ptr -13Ch
.text:0040CA00 Type            = dword ptr -138h
.text:0040CA00 Radix           = dword ptr -134h
.text:0040CA00 var_130         = dword ptr -130h
.text:0040CA00 var_124         = dword ptr -124h
.text:0040CA00 var_120         = dword ptr -120h
.text:0040CA00 var_11C         = dword ptr -11Ch
.text:0040CA00 var_118         = dword ptr -118h
.text:0040CA00 var_114         = dword ptr -114h
.text:0040CA00 var_110         = dword ptr -110h
.text:0040CA00 var_10C         = dword ptr -10Ch
.text:0040CA00 var_108         = dword ptr -108h
.text:0040CA00 var_104         = dword ptr -104h
.text:0040CA00 var_100         = dword ptr -100h
.text:0040CA00 var_F8          = dword ptr -0F8h
.text:0040CA00 var_F4          = dword ptr -0F4h
.text:0040CA00 var_F0          = dword ptr -0F0h
.text:0040CA00 var_EC          = dword ptr -0ECh
.text:0040CA00 var_E8          = dword ptr -0E8h
.text:0040CA00 var_E4          = dword ptr -0E4h
.text:0040CA00 var_E0          = dword ptr -0E0h
.text:0040CA00 var_D8          = dword ptr -0D8h
.text:0040CA00 var_D4          = dword ptr -0D4h
.text:0040CA00 var_D0          = dword ptr -0D0h
.text:0040CA00 var_CC          = dword ptr -0CCh
.text:0040CA00 var_C8          = dword ptr -0C8h
.text:0040CA00 var_C4          = dword ptr -0C4h
.text:0040CA00 var_C0          = dword ptr -0C0h
.text:0040CA00 var_B8          = dword ptr -0B8h
.text:0040CA00 var_B4          = dword ptr -0B4h
.text:0040CA00 var_B0          = dword ptr -0B0h
.text:0040CA00 var_AC          = dword ptr -0ACh
.text:0040CA00 var_A8          = dword ptr -0A8h
.text:0040CA00 var_A4          = dword ptr -0A4h
.text:0040CA00 var_A0          = dword ptr -0A0h
.text:0040CA00 var_98          = dword ptr -98h
.text:0040CA00 var_94          = dword ptr -94h
.text:0040CA00 var_90          = dword ptr -90h
.text:0040CA00 var_8C          = dword ptr -8Ch
.text:0040CA00 var_88          = dword ptr -88h
.text:0040CA00 var_84          = dword ptr -84h
.text:0040CA00 var_80          = dword ptr -80h
.text:0040CA00 var_78          = dword ptr -78h
.text:0040CA00 var_74          = dword ptr -74h
.text:0040CA00 var_70          = dword ptr -70h
.text:0040CA00 var_6C          = dword ptr -6Ch
.text:0040CA00 var_68          = dword ptr -68h
.text:0040CA00 var_64          = dword ptr -64h
.text:0040CA00 var_60          = dword ptr -60h
.text:0040CA00 var_5C          = dword ptr -5Ch
.text:0040CA00 var_58          = dword ptr -58h
.text:0040CA00 var_50          = dword ptr -50h
.text:0040CA00 var_4C          = dword ptr -4Ch
.text:0040CA00 var_48          = dword ptr -48h
.text:0040CA00 var_44          = dword ptr -44h
.text:0040CA00 var_40          = dword ptr -40h
.text:0040CA00 var_3C          = dword ptr -3Ch
.text:0040CA00 var_38          = dword ptr -38h
.text:0040CA00 var_34          = dword ptr -34h
.text:0040CA00 var_30          = dword ptr -30h
.text:0040CA00 var_29          = byte ptr -29h
.text:0040CA00 var_28          = dword ptr -28h
.text:0040CA00 var_24          = dword ptr -24h
.text:0040CA00 var_20          = dword ptr -20h
.text:0040CA00 var_18          = byte ptr -18h
.text:0040CA00 arg_0           = dword ptr  4
.text:0040CA00 arg_4           = dword ptr  8
.text:0040CA00 arg_8           = dword ptr  0Ch
.text:0040CA00 arg_C           = dword ptr  10h
.text:0040CA00 Str             = dword ptr  14h
.text:0040CA00
.text:0040CA00                 push    ebp
.text:0040CA01                 xor     eax, eax
.text:0040CA03                 push    edi
.text:0040CA04                 push    esi
.text:0040CA05                 push    ebx
.text:0040CA06                 sub     esp, 12Ch
.text:0040CA0C
.text:0040CA0C loc_40CA0C:                             ; CODE XREF: .text:0040C999↑j
.text:0040CA0C                 mov     ebp, [esp+13Ch+arg_8]
.text:0040CA13                 mov     [esp+13Ch+var_28], eax
.text:0040CA1A                 mov     esi, [esp+13Ch+arg_0]
.text:0040CA21
.text:0040CA21 loc_40CA21:                             ; CODE XREF: .text:0040C9B2↑j
.text:0040CA21                 cmp     ebp, 24h ; '$'
.text:0040CA24                 ja      loc_40D671
.text:0040CA2A                 mov     edi, [esp+13Ch+arg_4]
.text:0040CA31                 test    edi, edi
.text:0040CA33                 jz      loc_40D665
.text:0040CA39
.text:0040CA39 loc_40CA39:                             ; CODE XREF: sub_40CA00+C6C↓j
.text:0040CA39                 movzx   edx, byte ptr [esi]
.text:0040CA3C                 mov     ebx, esi
.text:0040CA3E                 mov     [esp+13Ch+var_29], dl
.text:0040CA45                 lea     esi, [esi+0]
.text:0040CA49
.text:0040CA49 loc_40CA49:                             ; CODE XREF: .text:0040C9D7↑j
.text:0040CA49                 lea     edi, [edi+0]
.text:0040CA50
.text:0040CA50 loc_40CA50:                             ; CODE XREF: sub_40CA00+86↓j
.text:0040CA50                 movzx   edx, [esp+13Ch+var_29]
.text:0040CA58
.text:0040CA58 loc_40CA58:                             ; CODE XREF: .text:0040C9E6↑j
.text:0040CA58                 mov     ecx, ds:__mb_cur_max
.text:0040CA5E                 cmp     dword ptr [ecx], 1
.text:0040CA61                 jz      loc_40D652
.text:0040CA67                 mov     [esp+13Ch+Type], 8 ; Type
.text:0040CA6F                 mov     [esp+13Ch+C], edx ; C
.text:0040CA72                 call    _isctype
.text:0040CA77
.text:0040CA77 loc_40CA77:                             ; CODE XREF: sub_40CA00+C60↓j
.text:0040CA77                 test    eax, eax
.text:0040CA79                 jz      short loc_40CA88
.text:0040CA7B                 inc     ebx
.text:0040CA7C                 movzx   eax, byte ptr [ebx]
.text:0040CA7F                 mov     [esp+13Ch+var_29], al
.text:0040CA86                 jmp     short loc_40CA50
.text:0040CA88 ; ---------------------------------------------------------------------------
.text:0040CA88
.text:0040CA88 loc_40CA88:                             ; CODE XREF: sub_40CA00+79↑j
.text:0040CA88                 cmp     [esp+13Ch+var_29], 2Dh ; '-'
.text:0040CA90                 mov     eax, 4
.text:0040CA95                 jz      short loc_40CB12
.text:0040CA97                 call    _errno
.text:0040CA9C                 mov     dword ptr [eax], 0
.text:0040CAA2                 mov     [esp+13Ch+Radix], ebp ; Radix
.text:0040CAA6                 mov     [esp+13Ch+Type], edi ; EndPtr
.text:0040CAAA                 mov     [esp+13Ch+C], esi ; String
.text:0040CAAD                 call    _strtoull
.text:0040CAB2                 mov     [esp+13Ch+var_24], eax
.text:0040CAB9                 mov     eax, [edi]
.text:0040CABB                 mov     [esp+13Ch+var_20], edx
.text:0040CAC2                 cmp     eax, esi
.text:0040CAC4                 jz      loc_40D60C
.text:0040CACA                 call    _errno
.text:0040CACF                 mov     ebx, [eax]
.text:0040CAD1                 test    ebx, ebx
.text:0040CAD3                 jnz     loc_40D5E7
.text:0040CAD9
.text:0040CAD9 loc_40CAD9:                             ; CODE XREF: sub_40CA00+BFD↓j
.text:0040CAD9                                         ; sub_40CA00+C4D↓j
.text:0040CAD9                 mov     ebp, [esp+13Ch+Str]
.text:0040CAE0                 test    ebp, ebp
.text:0040CAE2                 jz      loc_40D5C8
.text:0040CAE8                 mov     ebx, [edi]
.text:0040CAEA                 movzx   eax, byte ptr [ebx]
.text:0040CAED                 test    al, al
.text:0040CAEF                 jnz     short loc_40CB1D
.text:0040CAF1
.text:0040CAF1 loc_40CAF1:                             ; CODE XREF: sub_40CA00+312↓j
.text:0040CAF1                                         ; sub_40CA00+320↓j
.text:0040CAF1                 mov     edx, [esp+13Ch+var_24]
.text:0040CAF8                 mov     edi, [esp+13Ch+var_20]
.text:0040CAFF                 mov     ebx, [esp+13Ch+arg_C]
.text:0040CB06                 mov     [ebx], edx
.text:0040CB08                 mov     [ebx+4], edi
.text:0040CB0B
.text:0040CB0B loc_40CB0B:                             ; CODE XREF: sub_40CA00+BE2↓j
.text:0040CB0B                 mov     eax, [esp+13Ch+var_28]
.text:0040CB12
.text:0040CB12 loc_40CB12:                             ; CODE XREF: sub_40CA00+95↑j
.text:0040CB12                                         ; sub_40CA00+16C↓j ...
.text:0040CB12                 add     esp, 12Ch
.text:0040CB18                 pop     ebx
.text:0040CB19                 pop     esi
.text:0040CB1A                 pop     edi
.text:0040CB1B                 pop     ebp
.text:0040CB1C                 retn
.text:0040CB1D ; ---------------------------------------------------------------------------
.text:0040CB1D
.text:0040CB1D loc_40CB1D:                             ; CODE XREF: sub_40CA00+EF↑j
.text:0040CB1D                 mov     esi, [esp+13Ch+Str]
.text:0040CB24                 mov     ecx, 1
.text:0040CB29                 movsx   ebp, al
.text:0040CB2C                 mov     [esp+13Ch+var_30], ecx
.text:0040CB33                 mov     ebx, 400h
.text:0040CB38                 mov     [esp+13Ch+Type], ebp ; Val
.text:0040CB3C                 mov     [esp+13Ch+C], esi ; Str
.text:0040CB3F                 call    strchr
.text:0040CB44                 test    eax, eax
.text:0040CB46                 jnz     short loc_40CB6E
.text:0040CB48
.text:0040CB48 def_40CBB9:                             ; CODE XREF: sub_40CA00+1B7↓j
.text:0040CB48                                         ; sub_40CA00+1B9↓j
.text:0040CB48                                         ; DATA XREF: ...
.text:0040CB48                 mov     eax, [esp+13Ch+var_28] ; jumptable 0040CBB9 default case, cases 67,68,70,72-74,76,78,79,81-83,85-88,91-97,100-102,104-106,108,110-115,117,118
.text:0040CB4F                 mov     esi, [esp+13Ch+var_24]
.text:0040CB56                 mov     ebp, [esp+13Ch+var_20]
.text:0040CB5D                 mov     edi, [esp+13Ch+arg_C]
.text:0040CB64                 or      eax, 2
.text:0040CB67                 mov     [edi], esi
.text:0040CB69                 mov     [edi+4], ebp
.text:0040CB6C                 jmp     short loc_40CB12
.text:0040CB6E ; ---------------------------------------------------------------------------
.text:0040CB6E
.text:0040CB6E loc_40CB6E:                             ; CODE XREF: sub_40CA00+146↑j
.text:0040CB6E                 mov     [esp+13Ch+Type], 30h ; '0' ; Val
.text:0040CB76                 mov     edx, [esp+13Ch+Str]
.text:0040CB7D                 mov     [esp+13Ch+C], edx ; Str
.text:0040CB80                 call    strchr
.text:0040CB85                 test    eax, eax
.text:0040CB87                 jz      loc_40D5C1
.text:0040CB8D                 mov     edx, [edi]
.text:0040CB8F                 movsx   eax, byte ptr [edx+1]
.text:0040CB93                 cmp     eax, 44h ; 'D'
.text:0040CB96                 jz      loc_40D587
.text:0040CB9C                 cmp     eax, 44h ; 'D'
.text:0040CB9F                 jg      loc_40D59D
.text:0040CBA5                 cmp     eax, 42h ; 'B'
.text:0040CBA8                 jz      loc_40D587
.text:0040CBAE
.text:0040CBAE loc_40CBAE:                             ; CODE XREF: sub_40CA00+B98↓j
.text:0040CBAE                                         ; sub_40CA00+BA0↓j ...
.text:0040CBAE                 movsx   eax, byte ptr [edx]
.text:0040CBB1                 sub     eax, 42h ; 'B'  ; switch 54 cases
.text:0040CBB4                 cmp     eax, 35h
.text:0040CBB7                 ja      short def_40CBB9 ; jumptable 0040CBB9 default case, cases 67,68,70,72-74,76,78,79,81-83,85-88,91-97,100-102,104-106,108,110-115,117,118
.text:0040CBB9                 jmp     ds:jpt_40CBB9[eax*4] ; switch jump
.text:0040CBB9 ; ---------------------------------------------------------------------------
.text:0040CBC0 jpt_40CBB9      dd offset loc_40CD44, offset def_40CBB9, offset def_40CBB9
.text:0040CBC0                                         ; DATA XREF: sub_40CA00+1B9↑r
.text:0040CBC0                 dd offset loc_40CD9E, offset def_40CBB9, offset loc_40D167 ; jump table for switch statement
.text:0040CBC0                 dd offset def_40CBB9, offset def_40CBB9, offset def_40CBB9
.text:0040CBC0                 dd offset loc_40D276, offset def_40CBB9, offset loc_40D33F
.text:0040CBC0                 dd offset def_40CBB9, offset def_40CBB9, offset loc_40CEAD
.text:0040CBC0                 dd offset def_40CBB9, offset def_40CBB9, offset def_40CBB9
.text:0040CBC0                 dd offset loc_40D44E, offset def_40CBB9, offset def_40CBB9
.text:0040CBC0                 dd offset def_40CBB9, offset def_40CBB9, offset loc_40CFBC
.text:0040CBC0                 dd offset loc_40D08E, offset def_40CBB9, offset def_40CBB9
.text:0040CBC0                 dd offset def_40CBB9, offset def_40CBB9, offset def_40CBB9
.text:0040CBC0                 dd offset def_40CBB9, offset def_40CBB9, offset loc_40CC98
.text:0040CBC0                 dd offset loc_40D160, offset def_40CBB9, offset def_40CBB9
.text:0040CBC0                 dd offset def_40CBB9, offset loc_40D167, offset def_40CBB9
.text:0040CBC0                 dd offset def_40CBB9, offset def_40CBB9, offset loc_40D276
.text:0040CBC0                 dd offset def_40CBB9, offset loc_40D33F, offset def_40CBB9
.text:0040CBC0                 dd offset def_40CBB9, offset def_40CBB9, offset def_40CBB9
.text:0040CBC0                 dd offset def_40CBB9, offset def_40CBB9, offset loc_40D44E
.text:0040CBC0                 dd offset def_40CBB9, offset def_40CBB9, offset loc_40D527
.text:0040CC98 ; ---------------------------------------------------------------------------
.text:0040CC98
.text:0040CC98 loc_40CC98:                             ; CODE XREF: sub_40CA00+1B9↑j
.text:0040CC98                                         ; DATA XREF: sub_40CA00:jpt_40CBB9↑o
.text:0040CC98                 mov     [esp+13Ch+Radix], 200h ; jumptable 0040CBB9 case 98
.text:0040CCA0                 lea     ebp, [esp+13Ch+var_24]
.text:0040CCA7                 mov     [esp+13Ch+var_130], 0
.text:0040CCAF                 mov     [esp+13Ch+C], 0FFFFFFFFh
.text:0040CCB6                 mov     [esp+13Ch+Type], 0FFFFFFFFh
.text:0040CCBE                 call    sub_410B10
.text:0040CCC3                 mov     esi, [esp+13Ch+var_20]
.text:0040CCCA                 mov     ecx, [esp+13Ch+var_24]
.text:0040CCD1                 cmp     edx, esi
.text:0040CCD3                 ja      short loc_40CCDB
.text:0040CCD5                 jb      short loc_40CD25
.text:0040CCD7                 cmp     eax, ecx
.text:0040CCD9                 jb      short loc_40CD25
.text:0040CCDB
.text:0040CCDB loc_40CCDB:                             ; CODE XREF: sub_40CA00+2D3↑j
.text:0040CCDB                 mov     esi, [ebp+0]
.text:0040CCDE                 mov     eax, 200h
.text:0040CCE3                 mov     ebx, [ebp+4]
.text:0040CCE6                 mul     esi
.text:0040CCE8                 mov     ecx, ebx
.text:0040CCEA                 shl     ecx, 9
.text:0040CCED
.text:0040CCED loc_40CCED:                             ; CODE XREF: sub_40CA00+399↓j
.text:0040CCED                 mov     esi, edx
.text:0040CCEF                 lea     edx, [ecx+esi]
.text:0040CCF2
.text:0040CCF2 loc_40CCF2:                             ; CODE XREF: sub_40CA00+B82↓j
.text:0040CCF2                 mov     [ebp+0], eax
.text:0040CCF5                 xor     eax, eax
.text:0040CCF7                 mov     [ebp+4], edx
.text:0040CCFA
.text:0040CCFA loc_40CCFA:                             ; CODE XREF: sub_40CA00+342↓j
.text:0040CCFA                                         ; sub_40CA00+459↓j ...
.text:0040CCFA                 mov     edx, [edi]
.text:0040CCFC
.text:0040CCFC loc_40CCFC:                             ; CODE XREF: sub_40CA00+762↓j
.text:0040CCFC                 or      [esp+13Ch+var_28], eax
.text:0040CD03                 mov     eax, [esp+13Ch+var_30]
.text:0040CD0A                 lea     ecx, [eax+edx]
.text:0040CD0D                 mov     [edi], ecx
.text:0040CD0F                 cmp     byte ptr [ecx], 0
.text:0040CD12                 jz      loc_40CAF1
.text:0040CD18                 or      [esp+13Ch+var_28], 2
.text:0040CD20                 jmp     loc_40CAF1
.text:0040CD25 ; ---------------------------------------------------------------------------
.text:0040CD25
.text:0040CD25 loc_40CD25:                             ; CODE XREF: sub_40CA00+2D5↑j
.text:0040CD25                                         ; sub_40CA00+2D9↑j ...
.text:0040CD25                 mov     edx, 0FFFFFFFFh
.text:0040CD2A                 mov     ebp, 0FFFFFFFFh
.text:0040CD2F                 mov     eax, 1
.text:0040CD34                 mov     [esp+13Ch+var_24], edx
.text:0040CD3B                 mov     [esp+13Ch+var_20], ebp
.text:0040CD42                 jmp     short loc_40CCFA
.text:0040CD44 ; ---------------------------------------------------------------------------
.text:0040CD44
.text:0040CD44 loc_40CD44:                             ; CODE XREF: sub_40CA00+1B9↑j
.text:0040CD44                                         ; DATA XREF: sub_40CA00:jpt_40CBB9↑o
.text:0040CD44                 mov     [esp+13Ch+Radix], 400h ; jumptable 0040CBB9 case 66
.text:0040CD4C                 lea     ebp, [esp+13Ch+var_24]
.text:0040CD53                 mov     [esp+13Ch+var_130], 0
.text:0040CD5B                 mov     [esp+13Ch+C], 0FFFFFFFFh
.text:0040CD62                 mov     [esp+13Ch+Type], 0FFFFFFFFh
.text:0040CD6A                 call    sub_410B10
.text:0040CD6F                 mov     esi, [esp+13Ch+var_20]
.text:0040CD76                 mov     ecx, [esp+13Ch+var_24]
.text:0040CD7D                 cmp     edx, esi
.text:0040CD7F                 ja      short loc_40CD87
.text:0040CD81                 jb      short loc_40CD25
.text:0040CD83                 cmp     eax, ecx
.text:0040CD85                 jb      short loc_40CD25
.text:0040CD87
.text:0040CD87 loc_40CD87:                             ; CODE XREF: sub_40CA00+37F↑j
.text:0040CD87                 mov     esi, [ebp+0]
.text:0040CD8A                 mov     eax, 400h
.text:0040CD8F                 mov     ebx, [ebp+4]
.text:0040CD92                 mul     esi
.text:0040CD94                 mov     ecx, ebx
.text:0040CD96                 shl     ecx, 0Ah
.text:0040CD99                 jmp     loc_40CCED
.text:0040CD9E ; ---------------------------------------------------------------------------
.text:0040CD9E
.text:0040CD9E loc_40CD9E:                             ; CODE XREF: sub_40CA00+1B9↑j
.text:0040CD9E                                         ; DATA XREF: sub_40CA00:jpt_40CBB9↑o
.text:0040CD9E                 mov     [esp+13Ch+var_3C], ebx ; jumptable 0040CBB9 case 69
.text:0040CDA5                 mov     ecx, ebx
.text:0040CDA7                 xor     ebp, ebp
.text:0040CDA9                 mov     [esp+13Ch+var_34], ebp
.text:0040CDB0                 sar     ecx, 1Fh
.text:0040CDB3                 mov     ebx, [esp+13Ch+var_3C]
.text:0040CDBA                 mov     [esp+13Ch+var_38], ecx
.text:0040CDC1                 lea     esi, [esp+13Ch+var_24]
.text:0040CDC8                 mov     ebp, 5
.text:0040CDCD                 mov     [esp+13Ch+C], 0FFFFFFFFh
.text:0040CDD4                 mov     edx, [esp+13Ch+var_38]
.text:0040CDDB                 mov     [esp+13Ch+Radix], ebx
.text:0040CDDF                 mov     [esp+13Ch+Type], 0FFFFFFFFh
.text:0040CDE7                 mov     [esp+13Ch+var_130], edx
.text:0040CDEB                 call    sub_410B10
.text:0040CDF0                 mov     [esp+13Ch+var_44], eax
.text:0040CDF7                 mov     [esp+13Ch+var_40], edx
.text:0040CDFE
.text:0040CDFE loc_40CDFE:                             ; CODE XREF: sub_40CA00+450↓j
.text:0040CDFE                 mov     ebx, [esi+4]
.text:0040CE01                 mov     eax, [esi]
.text:0040CE03                 cmp     [esp+13Ch+var_40], ebx
.text:0040CE0A                 mov     [esp+13Ch+var_48], ebx
.text:0040CE11                 mov     [esp+13Ch+var_4C], eax
.text:0040CE18                 ja      short loc_40CE5E
.text:0040CE1A                 mov     ecx, [esp+13Ch+var_48]
.text:0040CE21                 cmp     [esp+13Ch+var_40], ecx
.text:0040CE28                 jb      short loc_40CE33
.text:0040CE2A                 cmp     [esp+13Ch+var_44], eax
.text:0040CE31                 jnb     short loc_40CE5E
.text:0040CE33
.text:0040CE33 loc_40CE33:                             ; CODE XREF: sub_40CA00+428↑j
.text:0040CE33                 mov     dword ptr [esi], 0FFFFFFFFh
.text:0040CE39                 mov     eax, 1
.text:0040CE3E                 mov     dword ptr [esi+4], 0FFFFFFFFh
.text:0040CE45
.text:0040CE45 loc_40CE45:                             ; CODE XREF: sub_40CA00+4AB↓j
.text:0040CE45                 or      [esp+13Ch+var_34], eax
.text:0040CE4C                 dec     ebp
.text:0040CE4D                 cmp     ebp, 0FFFFFFFFh
.text:0040CE50                 jnz     short loc_40CDFE
.text:0040CE52                 mov     eax, [esp+13Ch+var_34]
.text:0040CE59                 jmp     loc_40CCFA
.text:0040CE5E ; ---------------------------------------------------------------------------
.text:0040CE5E
.text:0040CE5E loc_40CE5E:                             ; CODE XREF: sub_40CA00+418↑j
.text:0040CE5E                                         ; sub_40CA00+431↑j
.text:0040CE5E                 mov     ecx, [esp+13Ch+var_38]
.text:0040CE65                 mov     eax, [esp+13Ch+var_4C]
.text:0040CE6C                 mov     ebx, [esp+13Ch+var_4C]
.text:0040CE73                 mul     [esp+13Ch+var_3C]
.text:0040CE7A                 imul    ebx, ecx
.text:0040CE7D                 mov     ecx, edx
.text:0040CE7F                 mov     [esp+13Ch+var_124], eax
.text:0040CE83                 add     ecx, ebx
.text:0040CE85                 mov     edx, [esp+13Ch+var_3C]
.text:0040CE8C                 mov     ebx, [esp+13Ch+var_48]
.text:0040CE93                 imul    edx, ebx
.text:0040CE96                 mov     ebx, [esp+13Ch+var_124]
.text:0040CE9A                 mov     [esi], ebx
.text:0040CE9C                 add     ecx, edx
.text:0040CE9E                 mov     [esp+13Ch+var_120], ecx
.text:0040CEA2                 mov     eax, [esp+13Ch+var_120]
.text:0040CEA6                 mov     [esi+4], eax
.text:0040CEA9                 xor     eax, eax
.text:0040CEAB                 jmp     short loc_40CE45
.text:0040CEAD ; ---------------------------------------------------------------------------
.text:0040CEAD
.text:0040CEAD loc_40CEAD:                             ; CODE XREF: sub_40CA00+1B9↑j
.text:0040CEAD                                         ; DATA XREF: sub_40CA00:jpt_40CBB9↑o
.text:0040CEAD                 mov     [esp+13Ch+var_A4], ebx ; jumptable 0040CBB9 case 80
.text:0040CEB4                 mov     eax, ebx
.text:0040CEB6                 xor     ebp, ebp
.text:0040CEB8                 mov     [esp+13Ch+var_98], ebp
.text:0040CEBF                 sar     eax, 1Fh
.text:0040CEC2                 mov     edx, [esp+13Ch+var_A4]
.text:0040CEC9                 mov     [esp+13Ch+var_A0], eax
.text:0040CED0                 lea     esi, [esp+13Ch+var_24]
.text:0040CED7                 mov     ebp, 4
.text:0040CEDC                 mov     [esp+13Ch+C], 0FFFFFFFFh
.text:0040CEE3                 mov     ebx, [esp+13Ch+var_A0]
.text:0040CEEA                 mov     [esp+13Ch+Radix], edx
.text:0040CEEE                 mov     [esp+13Ch+Type], 0FFFFFFFFh
.text:0040CEF6                 mov     [esp+13Ch+var_130], ebx
.text:0040CEFA                 call    sub_410B10
.text:0040CEFF                 mov     [esp+13Ch+var_AC], eax
.text:0040CF06                 mov     [esp+13Ch+var_A8], edx
.text:0040CF0D
.text:0040CF0D loc_40CF0D:                             ; CODE XREF: sub_40CA00+55F↓j
.text:0040CF0D                 mov     ebx, [esi+4]
.text:0040CF10                 mov     edx, [esi]
.text:0040CF12                 cmp     [esp+13Ch+var_A8], ebx
.text:0040CF19                 mov     [esp+13Ch+var_B0], ebx
.text:0040CF20                 mov     [esp+13Ch+var_B4], edx
.text:0040CF27                 ja      short loc_40CF6D
.text:0040CF29                 mov     eax, [esp+13Ch+var_B0]
.text:0040CF30                 cmp     [esp+13Ch+var_A8], eax
.text:0040CF37                 jb      short loc_40CF42
.text:0040CF39                 cmp     [esp+13Ch+var_AC], edx
.text:0040CF40                 jnb     short loc_40CF6D
.text:0040CF42
.text:0040CF42 loc_40CF42:                             ; CODE XREF: sub_40CA00+537↑j
.text:0040CF42                 mov     dword ptr [esi], 0FFFFFFFFh
.text:0040CF48                 mov     eax, 1
.text:0040CF4D                 mov     dword ptr [esi+4], 0FFFFFFFFh
.text:0040CF54
.text:0040CF54 loc_40CF54:                             ; CODE XREF: sub_40CA00+5BA↓j
.text:0040CF54                 or      [esp+13Ch+var_98], eax
.text:0040CF5B                 dec     ebp
.text:0040CF5C                 cmp     ebp, 0FFFFFFFFh
.text:0040CF5F                 jnz     short loc_40CF0D
.text:0040CF61                 mov     eax, [esp+13Ch+var_98]
.text:0040CF68                 jmp     loc_40CCFA
.text:0040CF6D ; ---------------------------------------------------------------------------
.text:0040CF6D
.text:0040CF6D loc_40CF6D:                             ; CODE XREF: sub_40CA00+527↑j
.text:0040CF6D                                         ; sub_40CA00+540↑j
.text:0040CF6D                 mov     ecx, [esp+13Ch+var_A0]
.text:0040CF74                 mov     eax, [esp+13Ch+var_B4]
.text:0040CF7B                 mov     ebx, [esp+13Ch+var_B4]
.text:0040CF82                 mul     [esp+13Ch+var_A4]
.text:0040CF89                 imul    ebx, ecx
.text:0040CF8C                 mov     ecx, edx
.text:0040CF8E                 mov     [esp+13Ch+var_124], eax
.text:0040CF92                 add     ecx, ebx
.text:0040CF94                 mov     edx, [esp+13Ch+var_A4]
.text:0040CF9B                 mov     ebx, [esp+13Ch+var_B0]
.text:0040CFA2                 xor     eax, eax
.text:0040CFA4                 imul    edx, ebx
.text:0040CFA7                 add     ecx, edx
.text:0040CFA9                 mov     [esp+13Ch+var_120], ecx
.text:0040CFAD                 mov     ebx, [esp+13Ch+var_120]
.text:0040CFB1                 mov     ecx, [esp+13Ch+var_124]
.text:0040CFB5                 mov     [esi+4], ebx
.text:0040CFB8                 mov     [esi], ecx
.text:0040CFBA                 jmp     short loc_40CF54
.text:0040CFBC ; ---------------------------------------------------------------------------
.text:0040CFBC
.text:0040CFBC loc_40CFBC:                             ; CODE XREF: sub_40CA00+1B9↑j
.text:0040CFBC                                         ; DATA XREF: sub_40CA00:jpt_40CBB9↑o
.text:0040CFBC                 mov     [esp+13Ch+var_E4], ebx ; jumptable 0040CBB9 case 89
.text:0040CFC0                 mov     eax, ebx
.text:0040CFC2                 lea     esi, [esp+13Ch+var_24]
.text:0040CFC9                 mov     [esp+13Ch+var_D8], 0
.text:0040CFD1                 sar     eax, 1Fh
.text:0040CFD4                 mov     edx, [esp+13Ch+var_E4]
.text:0040CFD8                 mov     [esp+13Ch+var_E0], eax
.text:0040CFDC                 mov     ebp, 7
.text:0040CFE1                 mov     ebx, [esp+13Ch+var_E0]
.text:0040CFE5                 mov     [esp+13Ch+Radix], edx
.text:0040CFE9                 mov     [esp+13Ch+C], 0FFFFFFFFh
.text:0040CFF0                 mov     [esp+13Ch+var_130], ebx
.text:0040CFF4                 mov     [esp+13Ch+Type], 0FFFFFFFFh
.text:0040CFFC                 call    sub_410B10
.text:0040D001                 mov     [esp+13Ch+var_EC], eax
.text:0040D005                 mov     [esp+13Ch+var_E8], edx
.text:0040D009
.text:0040D009 loc_40D009:                             ; CODE XREF: sub_40CA00+646↓j
.text:0040D009                 mov     ebx, [esi+4]
.text:0040D00C                 mov     edx, [esi]
.text:0040D00E                 cmp     [esp+13Ch+var_E8], ebx
.text:0040D012                 mov     [esp+13Ch+var_F0], ebx
.text:0040D016                 mov     [esp+13Ch+var_F4], edx
.text:0040D01A                 ja      short loc_40D051
.text:0040D01C                 mov     eax, [esp+13Ch+var_F0]
.text:0040D020                 cmp     [esp+13Ch+var_E8], eax
.text:0040D024                 jb      short loc_40D02C
.text:0040D026                 cmp     [esp+13Ch+var_EC], edx
.text:0040D02A                 jnb     short loc_40D051
.text:0040D02C
.text:0040D02C loc_40D02C:                             ; CODE XREF: sub_40CA00+624↑j
.text:0040D02C                 mov     dword ptr [esi], 0FFFFFFFFh
.text:0040D032                 mov     eax, 1
.text:0040D037                 mov     dword ptr [esi+4], 0FFFFFFFFh
.text:0040D03E
.text:0040D03E loc_40D03E:                             ; CODE XREF: sub_40CA00+68C↓j
.text:0040D03E                 or      [esp+13Ch+var_D8], eax
.text:0040D042                 dec     ebp
.text:0040D043                 cmp     ebp, 0FFFFFFFFh
.text:0040D046                 jnz     short loc_40D009
.text:0040D048                 mov     eax, [esp+13Ch+var_D8]
.text:0040D04C                 jmp     loc_40CCFA
.text:0040D051 ; ---------------------------------------------------------------------------
.text:0040D051
.text:0040D051 loc_40D051:                             ; CODE XREF: sub_40CA00+61A↑j
.text:0040D051                                         ; sub_40CA00+62A↑j
.text:0040D051                 mov     ecx, [esp+13Ch+var_E0]
.text:0040D055                 mov     eax, [esp+13Ch+var_F4]
.text:0040D059                 mov     ebx, [esp+13Ch+var_F4]
.text:0040D05D                 mul     [esp+13Ch+var_E4]
.text:0040D061                 imul    ebx, ecx
.text:0040D064                 mov     ecx, edx
.text:0040D066                 mov     [esp+13Ch+var_124], eax
.text:0040D06A                 add     ecx, ebx
.text:0040D06C                 mov     edx, [esp+13Ch+var_E4]
.text:0040D070                 mov     ebx, [esp+13Ch+var_F0]
.text:0040D074                 xor     eax, eax
.text:0040D076                 imul    edx, ebx
.text:0040D079                 add     ecx, edx
.text:0040D07B                 mov     [esp+13Ch+var_120], ecx
.text:0040D07F                 mov     ebx, [esp+13Ch+var_120]
.text:0040D083                 mov     ecx, [esp+13Ch+var_124]
.text:0040D087                 mov     [esi+4], ebx
.text:0040D08A                 mov     [esi], ecx
.text:0040D08C                 jmp     short loc_40D03E
.text:0040D08E ; ---------------------------------------------------------------------------
.text:0040D08E
.text:0040D08E loc_40D08E:                             ; CODE XREF: sub_40CA00+1B9↑j
.text:0040D08E                                         ; DATA XREF: sub_40CA00:jpt_40CBB9↑o
.text:0040D08E                 mov     [esp+13Ch+var_104], ebx ; jumptable 0040CBB9 case 90
.text:0040D092                 mov     eax, ebx
.text:0040D094                 lea     esi, [esp+13Ch+var_24]
.text:0040D09B                 mov     [esp+13Ch+var_F8], 0
.text:0040D0A3                 sar     eax, 1Fh
.text:0040D0A6                 mov     edx, [esp+13Ch+var_104]
.text:0040D0AA                 mov     [esp+13Ch+var_100], eax
.text:0040D0AE                 mov     ebp, 6
.text:0040D0B3                 mov     ebx, [esp+13Ch+var_100]
.text:0040D0B7                 mov     [esp+13Ch+Radix], edx
.text:0040D0BB                 mov     [esp+13Ch+C], 0FFFFFFFFh
.text:0040D0C2                 mov     [esp+13Ch+var_130], ebx
.text:0040D0C6                 mov     [esp+13Ch+Type], 0FFFFFFFFh
.text:0040D0CE                 call    sub_410B10
.text:0040D0D3                 mov     [esp+13Ch+var_10C], eax
.text:0040D0D7                 mov     [esp+13Ch+var_108], edx
.text:0040D0DB
.text:0040D0DB loc_40D0DB:                             ; CODE XREF: sub_40CA00+718↓j
.text:0040D0DB                 mov     ebx, [esi+4]
.text:0040D0DE                 mov     edx, [esi]
.text:0040D0E0                 cmp     [esp+13Ch+var_108], ebx
.text:0040D0E4                 mov     [esp+13Ch+var_110], ebx
.text:0040D0E8                 mov     [esp+13Ch+var_114], edx
.text:0040D0EC                 ja      short loc_40D123
.text:0040D0EE                 mov     eax, [esp+13Ch+var_110]
.text:0040D0F2                 cmp     [esp+13Ch+var_108], eax
.text:0040D0F6                 jb      short loc_40D0FE
.text:0040D0F8                 cmp     [esp+13Ch+var_10C], edx
.text:0040D0FC                 jnb     short loc_40D123
.text:0040D0FE
.text:0040D0FE loc_40D0FE:                             ; CODE XREF: sub_40CA00+6F6↑j
.text:0040D0FE                 mov     dword ptr [esi], 0FFFFFFFFh
.text:0040D104                 mov     eax, 1
.text:0040D109                 mov     dword ptr [esi+4], 0FFFFFFFFh
.text:0040D110
.text:0040D110 loc_40D110:                             ; CODE XREF: sub_40CA00+75E↓j
.text:0040D110                 or      [esp+13Ch+var_F8], eax
.text:0040D114                 dec     ebp
.text:0040D115                 cmp     ebp, 0FFFFFFFFh
.text:0040D118                 jnz     short loc_40D0DB
.text:0040D11A                 mov     eax, [esp+13Ch+var_F8]
.text:0040D11E                 jmp     loc_40CCFA
.text:0040D123 ; ---------------------------------------------------------------------------
.text:0040D123
.text:0040D123 loc_40D123:                             ; CODE XREF: sub_40CA00+6EC↑j
.text:0040D123                                         ; sub_40CA00+6FC↑j
.text:0040D123                 mov     eax, [esp+13Ch+var_114]
.text:0040D127                 mov     ebx, [esp+13Ch+var_100]
.text:0040D12B                 mul     [esp+13Ch+var_104]
.text:0040D12F                 mov     ecx, edx
.text:0040D131                 mov     edx, [esp+13Ch+var_104]
.text:0040D135                 mov     [esp+13Ch+var_124], eax
.text:0040D139                 mov     eax, [esp+13Ch+var_114]
.text:0040D13D                 imul    eax, ebx
.text:0040D140                 mov     ebx, [esp+13Ch+var_110]
.text:0040D144                 imul    edx, ebx
.text:0040D147                 add     ecx, eax
.text:0040D149                 xor     eax, eax
.text:0040D14B                 add     ecx, edx
.text:0040D14D                 mov     [esp+13Ch+var_120], ecx
.text:0040D151                 mov     ebx, [esp+13Ch+var_120]
.text:0040D155                 mov     ecx, [esp+13Ch+var_124]
.text:0040D159                 mov     [esi+4], ebx
.text:0040D15C                 mov     [esi], ecx
.text:0040D15E                 jmp     short loc_40D110
.text:0040D160 ; ---------------------------------------------------------------------------
.text:0040D160
.text:0040D160 loc_40D160:                             ; CODE XREF: sub_40CA00+1B9↑j
.text:0040D160                                         ; DATA XREF: sub_40CA00:jpt_40CBB9↑o
.text:0040D160                 xor     eax, eax        ; jumptable 0040CBB9 case 99
.text:0040D162                 jmp     loc_40CCFC
.text:0040D167 ; ---------------------------------------------------------------------------
.text:0040D167
.text:0040D167 loc_40D167:                             ; CODE XREF: sub_40CA00+1B9↑j
.text:0040D167                                         ; DATA XREF: sub_40CA00:jpt_40CBB9↑o
.text:0040D167                 mov     [esp+13Ch+var_5C], ebx ; jumptable 0040CBB9 cases 71,103
.text:0040D16E                 mov     eax, ebx
.text:0040D170                 xor     ebp, ebp
.text:0040D172                 mov     [esp+13Ch+var_50], ebp
.text:0040D179                 sar     eax, 1Fh
.text:0040D17C                 mov     edx, [esp+13Ch+var_5C]
.text:0040D183                 mov     [esp+13Ch+var_58], eax
.text:0040D18A                 lea     esi, [esp+13Ch+var_24]
.text:0040D191                 mov     ebp, 2
.text:0040D196                 mov     [esp+13Ch+C], 0FFFFFFFFh
.text:0040D19D                 mov     ebx, [esp+13Ch+var_58]
.text:0040D1A4                 mov     [esp+13Ch+Radix], edx
.text:0040D1A8                 mov     [esp+13Ch+Type], 0FFFFFFFFh
.text:0040D1B0                 mov     [esp+13Ch+var_130], ebx
.text:0040D1B4                 call    sub_410B10
.text:0040D1B9                 mov     [esp+13Ch+var_64], eax
.text:0040D1C0                 mov     [esp+13Ch+var_60], edx
.text:0040D1C7
.text:0040D1C7 loc_40D1C7:                             ; CODE XREF: sub_40CA00+819↓j
.text:0040D1C7                 mov     ebx, [esi+4]
.text:0040D1CA                 mov     edx, [esi]
.text:0040D1CC                 cmp     [esp+13Ch+var_60], ebx
.text:0040D1D3                 mov     [esp+13Ch+var_68], ebx
.text:0040D1DA                 mov     [esp+13Ch+var_6C], edx
.text:0040D1E1                 ja      short loc_40D227
.text:0040D1E3                 mov     eax, [esp+13Ch+var_68]
.text:0040D1EA                 cmp     [esp+13Ch+var_60], eax
.text:0040D1F1                 jb      short loc_40D1FC
.text:0040D1F3                 cmp     [esp+13Ch+var_64], edx
.text:0040D1FA                 jnb     short loc_40D227
.text:0040D1FC
.text:0040D1FC loc_40D1FC:                             ; CODE XREF: sub_40CA00+7F1↑j
.text:0040D1FC                 mov     dword ptr [esi], 0FFFFFFFFh
.text:0040D202                 mov     eax, 1
.text:0040D207                 mov     dword ptr [esi+4], 0FFFFFFFFh
.text:0040D20E
.text:0040D20E loc_40D20E:                             ; CODE XREF: sub_40CA00+874↓j
.text:0040D20E                 or      [esp+13Ch+var_50], eax
.text:0040D215                 dec     ebp
.text:0040D216                 cmp     ebp, 0FFFFFFFFh
.text:0040D219                 jnz     short loc_40D1C7
.text:0040D21B                 mov     eax, [esp+13Ch+var_50]
.text:0040D222                 jmp     loc_40CCFA
.text:0040D227 ; ---------------------------------------------------------------------------
.text:0040D227
.text:0040D227 loc_40D227:                             ; CODE XREF: sub_40CA00+7E1↑j
.text:0040D227                                         ; sub_40CA00+7FA↑j
.text:0040D227                 mov     ecx, [esp+13Ch+var_58]
.text:0040D22E                 mov     eax, [esp+13Ch+var_6C]
.text:0040D235                 mov     ebx, [esp+13Ch+var_6C]
.text:0040D23C                 mul     [esp+13Ch+var_5C]
.text:0040D243                 imul    ebx, ecx
.text:0040D246                 mov     ecx, edx
.text:0040D248                 mov     [esp+13Ch+var_124], eax
.text:0040D24C                 add     ecx, ebx
.text:0040D24E                 mov     edx, [esp+13Ch+var_5C]
.text:0040D255                 mov     ebx, [esp+13Ch+var_68]
.text:0040D25C                 xor     eax, eax
.text:0040D25E                 imul    edx, ebx
.text:0040D261                 add     ecx, edx
.text:0040D263                 mov     [esp+13Ch+var_120], ecx
.text:0040D267                 mov     ebx, [esp+13Ch+var_120]
.text:0040D26B                 mov     ecx, [esp+13Ch+var_124]
.text:0040D26F                 mov     [esi+4], ebx
.text:0040D272                 mov     [esi], ecx
.text:0040D274                 jmp     short loc_40D20E
.text:0040D276 ; ---------------------------------------------------------------------------
.text:0040D276
.text:0040D276 loc_40D276:                             ; CODE XREF: sub_40CA00+1B9↑j
.text:0040D276                                         ; DATA XREF: sub_40CA00:jpt_40CBB9↑o
.text:0040D276                 mov     [esp+13Ch+var_74], ebx ; jumptable 0040CBB9 cases 75,107
.text:0040D27D                 mov     eax, ebx
.text:0040D27F                 lea     esi, [esp+13Ch+var_24]
.text:0040D286                 mov     [esp+13Ch+C], 0FFFFFFFFh
.text:0040D28D                 sar     eax, 1Fh
.text:0040D290                 mov     edx, [esp+13Ch+var_74]
.text:0040D297                 mov     [esp+13Ch+var_70], eax
.text:0040D29E                 mov     ebx, [esp+13Ch+var_70]
.text:0040D2A5                 mov     [esp+13Ch+Radix], edx
.text:0040D2A9                 mov     [esp+13Ch+Type], 0FFFFFFFFh
.text:0040D2B1                 mov     [esp+13Ch+var_130], ebx
.text:0040D2B5                 call    sub_410B10
.text:0040D2BA                 mov     ebp, [esp+13Ch+var_20]
.text:0040D2C1                 mov     ecx, [esp+13Ch+var_24]
.text:0040D2C8                 cmp     edx, ebp
.text:0040D2CA                 mov     [esp+13Ch+var_11C], ecx
.text:0040D2CE                 mov     [esp+13Ch+var_118], ebp
.text:0040D2D2                 ja      short loc_40D2F9
.text:0040D2D4                 cmp     edx, [esp+13Ch+var_118]
.text:0040D2D8                 jb      short loc_40D2DE
.text:0040D2DA                 cmp     eax, ecx
.text:0040D2DC                 jnb     short loc_40D2F9
.text:0040D2DE
.text:0040D2DE loc_40D2DE:                             ; CODE XREF: sub_40CA00+8D8↑j
.text:0040D2DE                 mov     dword ptr [esi], 0FFFFFFFFh
.text:0040D2E4                 mov     edx, 1
.text:0040D2E9                 mov     dword ptr [esi+4], 0FFFFFFFFh
.text:0040D2F0
.text:0040D2F0 loc_40D2F0:                             ; CODE XREF: sub_40CA00+93D↓j
.text:0040D2F0                 xor     eax, eax
.text:0040D2F2                 or      eax, edx
.text:0040D2F4                 jmp     loc_40CCFA
.text:0040D2F9 ; ---------------------------------------------------------------------------
.text:0040D2F9
.text:0040D2F9 loc_40D2F9:                             ; CODE XREF: sub_40CA00+8D2↑j
.text:0040D2F9                                         ; sub_40CA00+8DC↑j
.text:0040D2F9                 mov     eax, [esp+13Ch+var_11C]
.text:0040D2FD                 mov     ebp, [esp+13Ch+var_11C]
.text:0040D301                 mov     ebx, [esp+13Ch+var_118]
.text:0040D305                 mul     [esp+13Ch+var_74]
.text:0040D30C                 mov     [esp+13Ch+var_124], eax
.text:0040D310                 mov     eax, [esp+13Ch+var_70]
.text:0040D317                 mov     ecx, [esp+13Ch+var_124]
.text:0040D31B                 imul    ebp, eax
.text:0040D31E                 mov     eax, edx
.text:0040D320                 xor     edx, edx
.text:0040D322                 mov     [esi], ecx
.text:0040D324                 add     eax, ebp
.text:0040D326                 mov     ebp, [esp+13Ch+var_74]
.text:0040D32D                 imul    ebp, ebx
.text:0040D330                 add     eax, ebp
.text:0040D332                 mov     [esp+13Ch+var_120], eax
.text:0040D336                 mov     ebp, [esp+13Ch+var_120]
.text:0040D33A                 mov     [esi+4], ebp
.text:0040D33D                 jmp     short loc_40D2F0
.text:0040D33F ; ---------------------------------------------------------------------------
.text:0040D33F
.text:0040D33F loc_40D33F:                             ; CODE XREF: sub_40CA00+1B9↑j
.text:0040D33F                                         ; DATA XREF: sub_40CA00:jpt_40CBB9↑o
.text:0040D33F                 mov     [esp+13Ch+var_84], ebx ; jumptable 0040CBB9 cases 77,109
.text:0040D346                 mov     eax, ebx
.text:0040D348                 xor     ebp, ebp
.text:0040D34A                 mov     [esp+13Ch+var_78], ebp
.text:0040D351                 sar     eax, 1Fh
.text:0040D354                 mov     edx, [esp+13Ch+var_84]
.text:0040D35B                 mov     [esp+13Ch+var_80], eax
.text:0040D362                 lea     esi, [esp+13Ch+var_24]
.text:0040D369                 mov     ebp, 1
.text:0040D36E                 mov     [esp+13Ch+C], 0FFFFFFFFh
.text:0040D375                 mov     ecx, [esp+13Ch+var_80]
.text:0040D37C                 mov     [esp+13Ch+Radix], edx
.text:0040D380                 mov     [esp+13Ch+Type], 0FFFFFFFFh
.text:0040D388                 mov     [esp+13Ch+var_130], ecx
.text:0040D38C                 call    sub_410B10
.text:0040D391                 mov     [esp+13Ch+var_8C], eax
.text:0040D398                 mov     [esp+13Ch+var_88], edx
.text:0040D39F
.text:0040D39F loc_40D39F:                             ; CODE XREF: sub_40CA00+9F1↓j
.text:0040D39F                 mov     ebx, [esi+4]
.text:0040D3A2                 mov     edx, [esi]
.text:0040D3A4                 cmp     [esp+13Ch+var_88], ebx
.text:0040D3AB                 mov     [esp+13Ch+var_90], ebx
.text:0040D3B2                 mov     [esp+13Ch+var_94], edx
.text:0040D3B9                 ja      short loc_40D3FF
.text:0040D3BB                 mov     eax, [esp+13Ch+var_90]
.text:0040D3C2                 cmp     [esp+13Ch+var_88], eax
.text:0040D3C9                 jb      short loc_40D3D4
.text:0040D3CB                 cmp     [esp+13Ch+var_8C], edx
.text:0040D3D2                 jnb     short loc_40D3FF
.text:0040D3D4
.text:0040D3D4 loc_40D3D4:                             ; CODE XREF: sub_40CA00+9C9↑j
.text:0040D3D4                 mov     dword ptr [esi], 0FFFFFFFFh
.text:0040D3DA                 mov     eax, 1
.text:0040D3DF                 mov     dword ptr [esi+4], 0FFFFFFFFh
.text:0040D3E6
.text:0040D3E6 loc_40D3E6:                             ; CODE XREF: sub_40CA00+A4C↓j
.text:0040D3E6                 or      [esp+13Ch+var_78], eax
.text:0040D3ED                 dec     ebp
.text:0040D3EE                 cmp     ebp, 0FFFFFFFFh
.text:0040D3F1                 jnz     short loc_40D39F
.text:0040D3F3                 mov     eax, [esp+13Ch+var_78]
.text:0040D3FA                 jmp     loc_40CCFA
.text:0040D3FF ; ---------------------------------------------------------------------------
.text:0040D3FF
.text:0040D3FF loc_40D3FF:                             ; CODE XREF: sub_40CA00+9B9↑j
.text:0040D3FF                                         ; sub_40CA00+9D2↑j
.text:0040D3FF                 mov     ecx, [esp+13Ch+var_80]
.text:0040D406                 mov     eax, [esp+13Ch+var_94]
.text:0040D40D                 mov     ebx, [esp+13Ch+var_94]
.text:0040D414                 mul     [esp+13Ch+var_84]
.text:0040D41B                 imul    ebx, ecx
.text:0040D41E                 mov     ecx, edx
.text:0040D420                 mov     [esp+13Ch+var_124], eax
.text:0040D424                 add     ecx, ebx
.text:0040D426                 mov     edx, [esp+13Ch+var_84]
.text:0040D42D                 mov     ebx, [esp+13Ch+var_90]
.text:0040D434                 xor     eax, eax
.text:0040D436                 imul    edx, ebx
.text:0040D439                 add     ecx, edx
.text:0040D43B                 mov     [esp+13Ch+var_120], ecx
.text:0040D43F                 mov     ebx, [esp+13Ch+var_120]
.text:0040D443                 mov     ecx, [esp+13Ch+var_124]
.text:0040D447                 mov     [esi+4], ebx
.text:0040D44A                 mov     [esi], ecx
.text:0040D44C                 jmp     short loc_40D3E6
.text:0040D44E ; ---------------------------------------------------------------------------
.text:0040D44E
.text:0040D44E loc_40D44E:                             ; CODE XREF: sub_40CA00+1B9↑j
.text:0040D44E                                         ; DATA XREF: sub_40CA00:jpt_40CBB9↑o
.text:0040D44E                 mov     [esp+13Ch+var_C4], ebx ; jumptable 0040CBB9 cases 84,116
.text:0040D452                 mov     eax, ebx
.text:0040D454                 xor     ebp, ebp
.text:0040D456                 mov     [esp+13Ch+var_B8], ebp
.text:0040D45D                 sar     eax, 1Fh
.text:0040D460                 mov     edx, [esp+13Ch+var_C4]
.text:0040D464                 mov     [esp+13Ch+var_C0], eax
.text:0040D468                 lea     esi, [esp+13Ch+var_24]
.text:0040D46F                 mov     ebp, 3
.text:0040D474                 mov     [esp+13Ch+C], 0FFFFFFFFh
.text:0040D47B                 mov     ebx, [esp+13Ch+var_C0]
.text:0040D47F                 mov     [esp+13Ch+Radix], edx
.text:0040D483                 mov     [esp+13Ch+Type], 0FFFFFFFFh
.text:0040D48B                 mov     [esp+13Ch+var_130], ebx
.text:0040D48F                 call    sub_410B10
.text:0040D494                 mov     [esp+13Ch+var_CC], eax
.text:0040D498                 mov     [esp+13Ch+var_C8], edx
.text:0040D49C
.text:0040D49C loc_40D49C:                             ; CODE XREF: sub_40CA00+ADC↓j
.text:0040D49C                 mov     ebx, [esi+4]
.text:0040D49F                 mov     edx, [esi]
.text:0040D4A1                 cmp     [esp+13Ch+var_C8], ebx
.text:0040D4A5                 mov     [esp+13Ch+var_D0], ebx
.text:0040D4A9                 mov     [esp+13Ch+var_D4], edx
.text:0040D4AD                 ja      short loc_40D4EA
.text:0040D4AF                 mov     eax, [esp+13Ch+var_D0]
.text:0040D4B3                 cmp     [esp+13Ch+var_C8], eax
.text:0040D4B7                 jb      short loc_40D4BF
.text:0040D4B9                 cmp     [esp+13Ch+var_CC], edx
.text:0040D4BD                 jnb     short loc_40D4EA
.text:0040D4BF
.text:0040D4BF loc_40D4BF:                             ; CODE XREF: sub_40CA00+AB7↑j
.text:0040D4BF                 mov     dword ptr [esi], 0FFFFFFFFh
.text:0040D4C5                 mov     eax, 1
.text:0040D4CA                 mov     dword ptr [esi+4], 0FFFFFFFFh
.text:0040D4D1
.text:0040D4D1 loc_40D4D1:                             ; CODE XREF: sub_40CA00+B25↓j
.text:0040D4D1                 or      [esp+13Ch+var_B8], eax
.text:0040D4D8                 dec     ebp
.text:0040D4D9                 cmp     ebp, 0FFFFFFFFh
.text:0040D4DC                 jnz     short loc_40D49C
.text:0040D4DE                 mov     eax, [esp+13Ch+var_B8]
.text:0040D4E5                 jmp     loc_40CCFA
.text:0040D4EA ; ---------------------------------------------------------------------------
.text:0040D4EA
.text:0040D4EA loc_40D4EA:                             ; CODE XREF: sub_40CA00+AAD↑j
.text:0040D4EA                                         ; sub_40CA00+ABD↑j
.text:0040D4EA                 mov     ecx, [esp+13Ch+var_C0]
.text:0040D4EE                 mov     eax, [esp+13Ch+var_D4]
.text:0040D4F2                 mov     ebx, [esp+13Ch+var_D4]
.text:0040D4F6                 mul     [esp+13Ch+var_C4]
.text:0040D4FA                 imul    ebx, ecx
.text:0040D4FD                 mov     ecx, edx
.text:0040D4FF                 mov     [esp+13Ch+var_124], eax
.text:0040D503                 add     ecx, ebx
.text:0040D505                 mov     edx, [esp+13Ch+var_C4]
.text:0040D509                 mov     ebx, [esp+13Ch+var_D0]
.text:0040D50D                 xor     eax, eax
.text:0040D50F                 imul    edx, ebx
.text:0040D512                 add     ecx, edx
.text:0040D514                 mov     [esp+13Ch+var_120], ecx
.text:0040D518                 mov     ebx, [esp+13Ch+var_120]
.text:0040D51C                 mov     ecx, [esp+13Ch+var_124]
.text:0040D520                 mov     [esi+4], ebx
.text:0040D523                 mov     [esi], ecx
.text:0040D525                 jmp     short loc_40D4D1
.text:0040D527 ; ---------------------------------------------------------------------------
.text:0040D527
.text:0040D527 loc_40D527:                             ; CODE XREF: sub_40CA00+1B9↑j
.text:0040D527                                         ; DATA XREF: sub_40CA00:jpt_40CBB9↑o
.text:0040D527                 mov     [esp+13Ch+Radix], 2 ; jumptable 0040CBB9 case 119
.text:0040D52F                 lea     ebp, [esp+13Ch+var_24]
.text:0040D536                 mov     [esp+13Ch+var_130], 0
.text:0040D53E                 mov     [esp+13Ch+C], 0FFFFFFFFh
.text:0040D545                 mov     [esp+13Ch+Type], 0FFFFFFFFh
.text:0040D54D                 call    sub_410B10
.text:0040D552                 mov     esi, [esp+13Ch+var_20]
.text:0040D559                 mov     ecx, [esp+13Ch+var_24]
.text:0040D560                 cmp     edx, esi
.text:0040D562                 ja      short loc_40D572
.text:0040D564                 jb      loc_40CD25
.text:0040D56A                 cmp     eax, ecx
.text:0040D56C                 jb      loc_40CD25
.text:0040D572
.text:0040D572 loc_40D572:                             ; CODE XREF: sub_40CA00+B62↑j
.text:0040D572                 mov     esi, [ebp+0]
.text:0040D575                 mov     eax, 2
.text:0040D57A                 mov     ecx, [ebp+4]
.text:0040D57D                 mul     esi
.text:0040D57F                 lea     edx, [edx+ecx*2]
.text:0040D582                 jmp     loc_40CCF2
.text:0040D587 ; ---------------------------------------------------------------------------
.text:0040D587
.text:0040D587 loc_40D587:                             ; CODE XREF: sub_40CA00+196↑j
.text:0040D587                                         ; sub_40CA00+1A8↑j
.text:0040D587                 mov     esi, 2
.text:0040D58C                 mov     ebx, 3E8h
.text:0040D591                 mov     [esp+13Ch+var_30], esi
.text:0040D598                 jmp     loc_40CBAE
.text:0040D59D ; ---------------------------------------------------------------------------
.text:0040D59D
.text:0040D59D loc_40D59D:                             ; CODE XREF: sub_40CA00+19F↑j
.text:0040D59D                 cmp     eax, 69h ; 'i'
.text:0040D5A0                 jnz     loc_40CBAE
.text:0040D5A6                 cmp     byte ptr [edx+2], 42h ; 'B'
.text:0040D5AA                 jnz     loc_40CBAE
.text:0040D5B0                 mov     eax, 3
.text:0040D5B5                 mov     [esp+13Ch+var_30], eax
.text:0040D5BC                 jmp     loc_40CBAE
.text:0040D5C1 ; ---------------------------------------------------------------------------
.text:0040D5C1
.text:0040D5C1 loc_40D5C1:                             ; CODE XREF: sub_40CA00+187↑j
.text:0040D5C1                 mov     edx, [edi]
.text:0040D5C3                 jmp     loc_40CBAE
.text:0040D5C8 ; ---------------------------------------------------------------------------
.text:0040D5C8
.text:0040D5C8 loc_40D5C8:                             ; CODE XREF: sub_40CA00+E2↑j
.text:0040D5C8                 mov     edx, [esp+13Ch+var_24]
.text:0040D5CF                 mov     ecx, [esp+13Ch+var_20]
.text:0040D5D6                 mov     edi, [esp+13Ch+arg_C]
.text:0040D5DD                 mov     [edi], edx
.text:0040D5DF                 mov     [edi+4], ecx
.text:0040D5E2                 jmp     loc_40CB0B
.text:0040D5E7 ; ---------------------------------------------------------------------------
.text:0040D5E7
.text:0040D5E7 loc_40D5E7:                             ; CODE XREF: sub_40CA00+D3↑j
.text:0040D5E7                 call    _errno
.text:0040D5EC                 cmp     dword ptr [eax], 22h ; '"'
.text:0040D5EF                 jnz     short loc_40D602
.text:0040D5F1                 mov     esi, 1
.text:0040D5F6                 mov     [esp+13Ch+var_28], esi
.text:0040D5FD                 jmp     loc_40CAD9
.text:0040D602 ; ---------------------------------------------------------------------------
.text:0040D602
.text:0040D602 loc_40D602:                             ; CODE XREF: sub_40CA00+BEF↑j
.text:0040D602                                         ; sub_40CA00+C15↓j ...
.text:0040D602                 mov     eax, 4
.text:0040D607                 jmp     loc_40CB12
.text:0040D60C ; ---------------------------------------------------------------------------
.text:0040D60C
.text:0040D60C loc_40D60C:                             ; CODE XREF: sub_40CA00+C4↑j
.text:0040D60C                 mov     ebx, [esp+13Ch+Str]
.text:0040D613                 test    ebx, ebx
.text:0040D615                 jz      short loc_40D602
.text:0040D617                 movzx   eax, byte ptr [eax]
.text:0040D61A                 test    al, al
.text:0040D61C                 jz      short loc_40D602
.text:0040D61E                 mov     esi, [esp+13Ch+Str]
.text:0040D625                 movsx   ebp, al
.text:0040D628                 mov     [esp+13Ch+Type], ebp ; Val
.text:0040D62C                 mov     [esp+13Ch+C], esi ; Str
.text:0040D62F                 call    strchr
.text:0040D634                 test    eax, eax
.text:0040D636                 jz      short loc_40D602
.text:0040D638                 mov     ecx, 1
.text:0040D63D                 xor     edx, edx
.text:0040D63F                 mov     [esp+13Ch+var_24], ecx
.text:0040D646                 mov     [esp+13Ch+var_20], edx
.text:0040D64D                 jmp     loc_40CAD9
.text:0040D652 ; ---------------------------------------------------------------------------
.text:0040D652
.text:0040D652 loc_40D652:                             ; CODE XREF: sub_40CA00+61↑j
.text:0040D652                 mov     eax, ds:_pctype
.text:0040D657                 mov     ecx, [eax]
.text:0040D659                 movzx   eax, word ptr [ecx+edx*2]
.text:0040D65D                 and     eax, 8
.text:0040D660                 jmp     loc_40CA77
.text:0040D665 ; ---------------------------------------------------------------------------
.text:0040D665
.text:0040D665 loc_40D665:                             ; CODE XREF: sub_40CA00+33↑j
.text:0040D665                 lea     edi, [esp+13Ch+var_18]
.text:0040D66C                 jmp     loc_40CA39
.text:0040D671 ; ---------------------------------------------------------------------------
.text:0040D671
.text:0040D671 loc_40D671:                             ; CODE XREF: sub_40CA00+24↑j
.text:0040D671                 mov     [esp+13Ch+Radix], 70h ; 'p'
.text:0040D679                 mov     [esp+13Ch+Type], offset loc_40C990
.text:0040D681                 mov     [esp+13Ch+C], offset loc_40C9D0
.text:0040D688                 call    _assert
.text:0040D688 sub_40CA00      endp
.text:0040D688
.text:0040D688 ; ---------------------------------------------------------------------------
.text:0040D68D                 align 10h
.text:0040D690
.text:0040D690 loc_40D690:                             ; DATA XREF: sub_40D700+EBC↓o
.text:0040D690                 db      2Eh, 2Eh
.text:0040D690                 das
.text:0040D693                 db      2Eh, 2Eh
.text:0040D693                 das
.text:0040D696                 arpl    [edi+72h], bp
.text:0040D699                 db      65h
.text:0040D699                 jnz     short near ptr loc_40D70C+4
.text:0040D69C                 imul    ebp, [ebx+esi*2+2Dh], 2E332E35h
.text:0040D6A4                 xor     ds:2F637273h, ch
.text:0040D6AA                 insb
.text:0040D6AB                 imul    esp, [edx+2Fh], 72747378h
.text:0040D6B2                 jz      short near ptr loc_40D721+2
.text:0040D6B4                 insb
.text:0040D6B5                 arpl    cs:[eax], ax
.text:0040D6B8                 nop
.text:0040D6B9                 nop
.text:0040D6BA                 nop
.text:0040D6BB                 nop
.text:0040D6BC                 nop
.text:0040D6BD                 nop
.text:0040D6BE                 nop
.text:0040D6BF                 nop
.text:0040D6C0                 nop
.text:0040D6C1                 nop
.text:0040D6C2                 nop
.text:0040D6C3                 nop
.text:0040D6C4                 nop
.text:0040D6C5                 nop
.text:0040D6C6                 nop
.text:0040D6C7                 nop
.text:0040D6C8                 nop
.text:0040D6C9                 nop
.text:0040D6CA                 nop
.text:0040D6CB                 nop
.text:0040D6CC                 nop
.text:0040D6CD                 nop
.text:0040D6CE                 nop
.text:0040D6CF                 nop
.text:0040D6D0
.text:0040D6D0 loc_40D6D0:                             ; DATA XREF: sub_40D700+EC4↓o
.text:0040D6D0                 xor     [eax], ah
.text:0040D6D2                 cmp     al, 3Dh ; '='
.text:0040D6D4                 and     [ebx+74h], dh
.text:0040D6D7                 jb      short near ptr loc_40D74B+2
.text:0040D6D9                 outsd
.text:0040D6DA                 insb
.text:0040D6DB                 pop     edi
.text:0040D6DC                 bound   esp, [ecx+73h]
.text:0040D6DF                 and     gs:[esi], ah
.text:0040D6E2                 and     es:[ebx+74h], dh
.text:0040D6E6                 jb      short near ptr loc_40D75B+1
.text:0040D6E8                 outsd
.text:0040D6E9                 insb
.text:0040D6EA                 pop     edi
.text:0040D6EB                 bound   esp, [ecx+73h]
.text:0040D6EE                 and     gs:363320h[edi], bh
.text:0040D6F6                 lea     esi, [esi+0]
.text:0040D6F9                 lea     edi, [edi+0]
.text:0040D700
.text:0040D700 ; =============== S U B R O U T I N E =======================================
.text:0040D700
.text:0040D700
.text:0040D700 ; int __cdecl sub_40D700(int, int, int, int, char *)
.text:0040D700 sub_40D700      proc near               ; CODE XREF: sub_403D90+145↑p
.text:0040D700
.text:0040D700 Str             = dword ptr -0FCh
.text:0040D700 Val             = dword ptr -0F8h
.text:0040D700 Radix           = dword ptr -0F4h
.text:0040D700 var_F0          = dword ptr -0F0h
.text:0040D700 var_E4          = dword ptr -0E4h
.text:0040D700 var_E0          = dword ptr -0E0h
.text:0040D700 var_DC          = dword ptr -0DCh
.text:0040D700 var_D8          = dword ptr -0D8h
.text:0040D700 var_D4          = dword ptr -0D4h
.text:0040D700 var_D0          = dword ptr -0D0h
.text:0040D700 var_CC          = dword ptr -0CCh
.text:0040D700 var_C8          = dword ptr -0C8h
.text:0040D700 var_C4          = dword ptr -0C4h
.text:0040D700 var_C0          = dword ptr -0C0h
.text:0040D700 var_BC          = dword ptr -0BCh
.text:0040D700 var_B8          = dword ptr -0B8h
.text:0040D700 var_B4          = dword ptr -0B4h
.text:0040D700 var_B0          = dword ptr -0B0h
.text:0040D700 var_AC          = dword ptr -0ACh
.text:0040D700 var_A8          = dword ptr -0A8h
.text:0040D700 var_A4          = dword ptr -0A4h
.text:0040D700 var_A0          = dword ptr -0A0h
.text:0040D700 var_9C          = dword ptr -9Ch
.text:0040D700 var_98          = dword ptr -98h
.text:0040D700 var_94          = dword ptr -94h
.text:0040D700 var_90          = dword ptr -90h
.text:0040D700 var_8C          = dword ptr -8Ch
.text:0040D700 var_88          = dword ptr -88h
.text:0040D700 var_84          = dword ptr -84h
.text:0040D700 var_80          = dword ptr -80h
.text:0040D700 var_7C          = dword ptr -7Ch
.text:0040D700 var_78          = dword ptr -78h
.text:0040D700 var_74          = dword ptr -74h
.text:0040D700 var_70          = dword ptr -70h
.text:0040D700 var_6C          = dword ptr -6Ch
.text:0040D700 var_68          = dword ptr -68h
.text:0040D700 var_64          = dword ptr -64h
.text:0040D700 var_60          = dword ptr -60h
.text:0040D700 var_5C          = dword ptr -5Ch
.text:0040D700 var_58          = dword ptr -58h
.text:0040D700 var_54          = dword ptr -54h
.text:0040D700 var_50          = dword ptr -50h
.text:0040D700 var_4C          = dword ptr -4Ch
.text:0040D700 var_48          = dword ptr -48h
.text:0040D700 var_44          = dword ptr -44h
.text:0040D700 var_40          = dword ptr -40h
.text:0040D700 var_3C          = dword ptr -3Ch
.text:0040D700 var_38          = dword ptr -38h
.text:0040D700 var_34          = dword ptr -34h
.text:0040D700 var_30          = dword ptr -30h
.text:0040D700 var_2C          = dword ptr -2Ch
.text:0040D700 var_28          = dword ptr -28h
.text:0040D700 var_24          = dword ptr -24h
.text:0040D700 var_20          = dword ptr -20h
.text:0040D700 var_18          = byte ptr -18h
.text:0040D700 String          = dword ptr  4
.text:0040D700 EndPtr          = dword ptr  8
.text:0040D700 arg_8           = dword ptr  0Ch
.text:0040D700 arg_C           = dword ptr  10h
.text:0040D700 arg_10          = dword ptr  14h
.text:0040D700
.text:0040D700                 push    ebp
.text:0040D701                 xor     edx, edx
.text:0040D703                 push    edi
.text:0040D704                 push    esi
.text:0040D705                 push    ebx
.text:0040D706                 sub     esp, 0ECh
.text:0040D70C
.text:0040D70C loc_40D70C:                             ; CODE XREF: .text:0040D699↑j
.text:0040D70C                 mov     ebx, [esp+0FCh+arg_8]
.text:0040D713                 mov     [esp+0FCh+var_28], edx
.text:0040D71A                 mov     esi, [esp+0FCh+String]
.text:0040D721
.text:0040D721 loc_40D721:                             ; CODE XREF: .text:0040D6B2↑j
.text:0040D721                 mov     edi, [esp+0FCh+arg_10]
.text:0040D728                 cmp     ebx, 24h ; '$'
.text:0040D72B                 ja      loc_40E5B4
.text:0040D731                 mov     ebp, [esp+0FCh+EndPtr]
.text:0040D738                 test    ebp, ebp
.text:0040D73A                 jz      loc_40E5A8
.text:0040D740
.text:0040D740 loc_40D740:                             ; CODE XREF: sub_40D700+EAF↓j
.text:0040D740                 call    _errno
.text:0040D745                 mov     dword ptr [eax], 0
.text:0040D74B
.text:0040D74B loc_40D74B:                             ; CODE XREF: .text:0040D6D7↑j
.text:0040D74B                 mov     [esp+0FCh+Radix], ebx ; Radix
.text:0040D74F                 mov     [esp+0FCh+Val], ebp ; EndPtr
.text:0040D753                 mov     [esp+0FCh+Str], esi ; String
.text:0040D756                 call    _strtoll
.text:0040D75B
.text:0040D75B loc_40D75B:                             ; CODE XREF: .text:0040D6E6↑j
.text:0040D75B                 mov     [esp+0FCh+var_24], eax
.text:0040D762                 mov     eax, [ebp+0]
.text:0040D765                 mov     [esp+0FCh+var_20], edx
.text:0040D76C                 cmp     eax, esi
.text:0040D76E                 jz      loc_40E570
.text:0040D774                 call    _errno
.text:0040D779                 mov     esi, [eax]
.text:0040D77B                 test    esi, esi
.text:0040D77D                 jnz     loc_40E540
.text:0040D783
.text:0040D783 loc_40D783:                             ; CODE XREF: sub_40D700+E56↓j
.text:0040D783                                         ; sub_40D700+EA3↓j
.text:0040D783                 test    edi, edi
.text:0040D785                 jz      short loc_40D791
.text:0040D787                 mov     edx, [ebp+0]
.text:0040D78A                 movzx   eax, byte ptr [edx]
.text:0040D78D                 test    al, al
.text:0040D78F                 jnz     short loc_40D7C0
.text:0040D791
.text:0040D791 loc_40D791:                             ; CODE XREF: sub_40D700+85↑j
.text:0040D791                                         ; sub_40D700+2EB↓j ...
.text:0040D791                 mov     edx, [esp+0FCh+var_24]
.text:0040D798                 mov     ecx, [esp+0FCh+var_20]
.text:0040D79F                 mov     ebp, [esp+0FCh+arg_C]
.text:0040D7A6                 mov     eax, [esp+0FCh+var_28]
.text:0040D7AD                 mov     [ebp+0], edx
.text:0040D7B0                 mov     [ebp+4], ecx
.text:0040D7B3
.text:0040D7B3 loc_40D7B3:                             ; CODE XREF: sub_40D700+109↓j
.text:0040D7B3                                         ; sub_40D700+E65↓j
.text:0040D7B3                 add     esp, 0ECh
.text:0040D7B9                 pop     ebx
.text:0040D7BA                 pop     esi
.text:0040D7BB                 pop     edi
.text:0040D7BC                 pop     ebp
.text:0040D7BD                 retn
.text:0040D7BD ; ---------------------------------------------------------------------------
.text:0040D7BE                 align 10h
.text:0040D7C0
.text:0040D7C0 loc_40D7C0:                             ; CODE XREF: sub_40D700+8F↑j
.text:0040D7C0                 mov     [esp+0FCh+Str], edi ; Str
.text:0040D7C3                 movsx   ecx, al
.text:0040D7C6                 mov     esi, 1
.text:0040D7CB                 mov     [esp+0FCh+var_2C], esi
.text:0040D7D2                 mov     ebx, 400h
.text:0040D7D7                 mov     [esp+0FCh+Val], ecx ; Val
.text:0040D7DB                 call    strchr
.text:0040D7E0                 test    eax, eax
.text:0040D7E2                 jnz     short loc_40D80B
.text:0040D7E4
.text:0040D7E4 def_40D850:                             ; CODE XREF: sub_40D700+14E↓j
.text:0040D7E4                                         ; sub_40D700+150↓j
.text:0040D7E4                                         ; DATA XREF: ...
.text:0040D7E4                 mov     eax, [esp+0FCh+var_28] ; jumptable 0040D850 default case, cases 67,68,70,72-74,76,78,79,81-83,85-88,91-97,100-102,104-106,108,110-115,117,118
.text:0040D7EB                 mov     ebx, [esp+0FCh+var_24]
.text:0040D7F2                 mov     edi, [esp+0FCh+var_20]
.text:0040D7F9                 mov     ebp, [esp+0FCh+arg_C]
.text:0040D800                 or      eax, 2
.text:0040D803                 mov     [ebp+0], ebx
.text:0040D806                 mov     [ebp+4], edi
.text:0040D809                 jmp     short loc_40D7B3
.text:0040D80B ; ---------------------------------------------------------------------------
.text:0040D80B
.text:0040D80B loc_40D80B:                             ; CODE XREF: sub_40D700+E2↑j
.text:0040D80B                 mov     [esp+0FCh+Val], 30h ; '0' ; Val
.text:0040D813                 mov     [esp+0FCh+Str], edi ; Str
.text:0040D816                 call    strchr
.text:0040D81B                 test    eax, eax
.text:0040D81D                 jz      loc_40E531
.text:0040D823                 mov     edx, [ebp+0]
.text:0040D826                 movsx   eax, byte ptr [edx+1]
.text:0040D82A                 cmp     eax, 44h ; 'D'
.text:0040D82D                 jz      loc_40E4F7
.text:0040D833                 cmp     eax, 44h ; 'D'
.text:0040D836                 jg      loc_40E50D
.text:0040D83C                 cmp     eax, 42h ; 'B'
.text:0040D83F                 jz      loc_40E4F7
.text:0040D845
.text:0040D845 loc_40D845:                             ; CODE XREF: sub_40D700+E08↓j
.text:0040D845                                         ; sub_40D700+E10↓j ...
.text:0040D845                 movsx   eax, byte ptr [edx]
.text:0040D848                 sub     eax, 42h ; 'B'  ; switch 54 cases
.text:0040D84B                 cmp     eax, 35h
.text:0040D84E                 ja      short def_40D850 ; jumptable 0040D850 default case, cases 67,68,70,72-74,76,78,79,81-83,85-88,91-97,100-102,104-106,108,110-115,117,118
.text:0040D850                 jmp     ds:jpt_40D850[eax*4] ; switch jump
.text:0040D850 ; ---------------------------------------------------------------------------
.text:0040D857                 align 4
.text:0040D858 jpt_40D850      dd offset loc_40DA2D, offset def_40D850, offset def_40D850
.text:0040D858                                         ; DATA XREF: sub_40D700+150↑r
.text:0040D858                 dd offset loc_40DABC, offset def_40D850, offset loc_40DF77 ; jump table for switch statement
.text:0040D858                 dd offset def_40D850, offset def_40D850, offset def_40D850
.text:0040D858                 dd offset loc_40E0CE, offset def_40D850, offset loc_40E1DD
.text:0040D858                 dd offset def_40D850, offset def_40D850, offset loc_40DC13
.text:0040D858                 dd offset def_40D850, offset def_40D850, offset def_40D850
.text:0040D858                 dd offset loc_40E334, offset def_40D850, offset def_40D850
.text:0040D858                 dd offset def_40D850, offset def_40D850, offset loc_40DD32
.text:0040D858                 dd offset loc_40DE51, offset def_40D850, offset def_40D850
.text:0040D858                 dd offset def_40D850, offset def_40D850, offset def_40D850
.text:0040D858                 dd offset def_40D850, offset def_40D850, offset loc_40D930
.text:0040D858                 dd offset loc_40DF70, offset def_40D850, offset def_40D850
.text:0040D858                 dd offset def_40D850, offset loc_40DF77, offset def_40D850
.text:0040D858                 dd offset def_40D850, offset def_40D850, offset loc_40E0CE
.text:0040D858                 dd offset def_40D850, offset loc_40E1DD, offset def_40D850
.text:0040D858                 dd offset def_40D850, offset def_40D850, offset def_40D850
.text:0040D858                 dd offset def_40D850, offset def_40D850, offset loc_40E334
.text:0040D858                 dd offset def_40D850, offset def_40D850, offset loc_40E453
.text:0040D930 ; ---------------------------------------------------------------------------
.text:0040D930
.text:0040D930 loc_40D930:                             ; CODE XREF: sub_40D700+150↑j
.text:0040D930                                         ; DATA XREF: sub_40D700:jpt_40D850↑o
.text:0040D930                 mov     [esp+0FCh+Radix], 200h ; jumptable 0040D850 case 98
.text:0040D938                 mov     [esp+0FCh+var_F0], 0
.text:0040D940                 mov     [esp+0FCh+Str], 0
.text:0040D947                 mov     [esp+0FCh+Val], 80000000h
.text:0040D94F                 call    sub_410C30
.text:0040D954                 mov     esi, [esp+0FCh+var_20]
.text:0040D95B                 mov     ecx, [esp+0FCh+var_24]
.text:0040D962                 cmp     esi, edx
.text:0040D964                 jg      short loc_40D974
.text:0040D966                 jl      loc_40DA1D
.text:0040D96C                 cmp     ecx, eax
.text:0040D96E                 jb      loc_40DA1D
.text:0040D974
.text:0040D974 loc_40D974:                             ; CODE XREF: sub_40D700+264↑j
.text:0040D974                 mov     [esp+0FCh+Radix], 200h
.text:0040D97C                 mov     [esp+0FCh+var_F0], 0
.text:0040D984                 mov     [esp+0FCh+Str], 0FFFFFFFFh
.text:0040D98B                 mov     [esp+0FCh+Val], 7FFFFFFFh
.text:0040D993                 call    sub_410C30
.text:0040D998                 mov     edi, [esp+0FCh+var_20]
.text:0040D99F                 mov     esi, [esp+0FCh+var_24]
.text:0040D9A6                 cmp     edx, edi
.text:0040D9A8                 jg      short loc_40D9B0
.text:0040D9AA                 jl      short loc_40D9FE
.text:0040D9AC                 cmp     eax, esi
.text:0040D9AE                 jb      short loc_40D9FE
.text:0040D9B0
.text:0040D9B0 loc_40D9B0:                             ; CODE XREF: sub_40D700+2A8↑j
.text:0040D9B0                 mov     eax, 200h
.text:0040D9B5                 mov     ecx, edi
.text:0040D9B7                 shl     ecx, 9
.text:0040D9BA
.text:0040D9BA loc_40D9BA:                             ; CODE XREF: sub_40D700+3B7↓j
.text:0040D9BA                 mul     esi
.text:0040D9BC                 mov     ebx, edx
.text:0040D9BE                 mov     [esp+0FCh+var_24], eax
.text:0040D9C5                 lea     esi, [ecx+ebx]
.text:0040D9C8                 mov     [esp+0FCh+var_20], esi
.text:0040D9CF
.text:0040D9CF loc_40D9CF:                             ; CODE XREF: sub_40D700+DF2↓j
.text:0040D9CF                 xor     eax, eax
.text:0040D9D1
.text:0040D9D1 loc_40D9D1:                             ; CODE XREF: sub_40D700+31B↓j
.text:0040D9D1                                         ; sub_40D700+477↓j ...
.text:0040D9D1                 mov     edx, [ebp+0]
.text:0040D9D4
.text:0040D9D4 loc_40D9D4:                             ; CODE XREF: sub_40D700+872↓j
.text:0040D9D4                 or      [esp+0FCh+var_28], eax
.text:0040D9DB                 mov     eax, [esp+0FCh+var_2C]
.text:0040D9E2                 lea     esi, [eax+edx]
.text:0040D9E5                 mov     [ebp+0], esi
.text:0040D9E8                 cmp     byte ptr [esi], 0
.text:0040D9EB                 jz      loc_40D791
.text:0040D9F1                 or      [esp+0FCh+var_28], 2
.text:0040D9F9                 jmp     loc_40D791
.text:0040D9FE ; ---------------------------------------------------------------------------
.text:0040D9FE
.text:0040D9FE loc_40D9FE:                             ; CODE XREF: sub_40D700+2AA↑j
.text:0040D9FE                                         ; sub_40D700+2AE↑j ...
.text:0040D9FE                 mov     edx, 0FFFFFFFFh
.text:0040DA03                 mov     ebx, 7FFFFFFFh
.text:0040DA08                 mov     [esp+0FCh+var_24], edx
.text:0040DA0F
.text:0040DA0F loc_40DA0F:                             ; CODE XREF: sub_40D700+32B↓j
.text:0040DA0F                 mov     [esp+0FCh+var_20], ebx
.text:0040DA16
.text:0040DA16 loc_40DA16:                             ; CODE XREF: sub_40D700+DDE↓j
.text:0040DA16                 mov     eax, 1
.text:0040DA1B                 jmp     short loc_40D9D1
.text:0040DA1D ; ---------------------------------------------------------------------------
.text:0040DA1D
.text:0040DA1D loc_40DA1D:                             ; CODE XREF: sub_40D700+266↑j
.text:0040DA1D                                         ; sub_40D700+26E↑j ...
.text:0040DA1D                 xor     edi, edi
.text:0040DA1F                 mov     ebx, 80000000h
.text:0040DA24                 mov     [esp+0FCh+var_24], edi
.text:0040DA2B                 jmp     short loc_40DA0F
.text:0040DA2D ; ---------------------------------------------------------------------------
.text:0040DA2D
.text:0040DA2D loc_40DA2D:                             ; CODE XREF: sub_40D700+150↑j
.text:0040DA2D                                         ; DATA XREF: sub_40D700:jpt_40D850↑o
.text:0040DA2D                 mov     [esp+0FCh+Radix], 400h ; jumptable 0040D850 case 66
.text:0040DA35                 mov     [esp+0FCh+var_F0], 0
.text:0040DA3D                 mov     [esp+0FCh+Str], 0
.text:0040DA44                 mov     [esp+0FCh+Val], 80000000h
.text:0040DA4C                 call    sub_410C30
.text:0040DA51                 mov     edi, [esp+0FCh+var_20]
.text:0040DA58                 mov     ecx, [esp+0FCh+var_24]
.text:0040DA5F                 cmp     edi, edx
.text:0040DA61                 jg      short loc_40DA69
.text:0040DA63                 jl      short loc_40DA1D
.text:0040DA65                 cmp     ecx, eax
.text:0040DA67                 jb      short loc_40DA1D
.text:0040DA69
.text:0040DA69 loc_40DA69:                             ; CODE XREF: sub_40D700+361↑j
.text:0040DA69                 mov     [esp+0FCh+Radix], 400h
.text:0040DA71                 mov     [esp+0FCh+var_F0], 0
.text:0040DA79                 mov     [esp+0FCh+Str], 0FFFFFFFFh
.text:0040DA80                 mov     [esp+0FCh+Val], 7FFFFFFFh
.text:0040DA88                 call    sub_410C30
.text:0040DA8D                 mov     edi, [esp+0FCh+var_20]
.text:0040DA94                 mov     esi, [esp+0FCh+var_24]
.text:0040DA9B                 cmp     edx, edi
.text:0040DA9D                 jg      short loc_40DAAD
.text:0040DA9F                 jl      loc_40D9FE
.text:0040DAA5                 cmp     eax, esi
.text:0040DAA7                 jb      loc_40D9FE
.text:0040DAAD
.text:0040DAAD loc_40DAAD:                             ; CODE XREF: sub_40D700+39D↑j
.text:0040DAAD                 mov     eax, 400h
.text:0040DAB2                 mov     ecx, edi
.text:0040DAB4                 shl     ecx, 0Ah
.text:0040DAB7                 jmp     loc_40D9BA
.text:0040DABC ; ---------------------------------------------------------------------------
.text:0040DABC
.text:0040DABC loc_40DABC:                             ; CODE XREF: sub_40D700+150↑j
.text:0040DABC                                         ; DATA XREF: sub_40D700:jpt_40D850↑o
.text:0040DABC                 mov     [esp+0FCh+var_3C], ebx ; jumptable 0040D850 case 69
.text:0040DAC3                 mov     edi, ebx
.text:0040DAC5                 mov     edx, 5
.text:0040DACA                 mov     [esp+0FCh+var_30], edx
.text:0040DAD1                 sar     edi, 1Fh
.text:0040DAD4                 mov     ecx, [esp+0FCh+var_3C]
.text:0040DADB                 mov     [esp+0FCh+var_38], edi
.text:0040DAE2                 xor     esi, esi
.text:0040DAE4                 mov     eax, [esp+0FCh+var_38]
.text:0040DAEB                 mov     [esp+0FCh+var_34], esi
.text:0040DAF2                 mov     [esp+0FCh+Radix], ecx
.text:0040DAF6                 mov     [esp+0FCh+var_F0], eax
.text:0040DAFA                 mov     [esp+0FCh+Str], 0
.text:0040DB01                 mov     [esp+0FCh+Val], 80000000h
.text:0040DB09                 call    sub_410C30
.text:0040DB0E                 mov     [esp+0FCh+var_44], eax
.text:0040DB15                 mov     [esp+0FCh+var_40], edx
.text:0040DB1C
.text:0040DB1C loc_40DB1C:                             ; CODE XREF: sub_40D700+46E↓j
.text:0040DB1C                 mov     edi, [esp+0FCh+var_20]
.text:0040DB23                 mov     esi, [esp+0FCh+var_24]
.text:0040DB2A                 cmp     edi, [esp+0FCh+var_40]
.text:0040DB31                 jg      short loc_40DB7C
.text:0040DB33                 jl      short loc_40DB3E
.text:0040DB35                 cmp     esi, [esp+0FCh+var_44]
.text:0040DB3C                 jnb     short loc_40DB7C
.text:0040DB3E
.text:0040DB3E loc_40DB3E:                             ; CODE XREF: sub_40D700+433↑j
.text:0040DB3E                 xor     ebx, ebx
.text:0040DB40                 mov     eax, 80000000h
.text:0040DB45                 mov     [esp+0FCh+var_24], ebx
.text:0040DB4C                 mov     [esp+0FCh+var_20], eax
.text:0040DB53
.text:0040DB53 loc_40DB53:                             ; CODE XREF: sub_40D700+4C8↓j
.text:0040DB53                 mov     eax, 1
.text:0040DB58
.text:0040DB58 loc_40DB58:                             ; CODE XREF: sub_40D700+50E↓j
.text:0040DB58                 dec     [esp+0FCh+var_30]
.text:0040DB5F                 or      [esp+0FCh+var_34], eax
.text:0040DB66                 cmp     [esp+0FCh+var_30], 0FFFFFFFFh
.text:0040DB6E                 jnz     short loc_40DB1C
.text:0040DB70                 mov     eax, [esp+0FCh+var_34]
.text:0040DB77                 jmp     loc_40D9D1
.text:0040DB7C ; ---------------------------------------------------------------------------
.text:0040DB7C
.text:0040DB7C loc_40DB7C:                             ; CODE XREF: sub_40D700+431↑j
.text:0040DB7C                                         ; sub_40D700+43C↑j
.text:0040DB7C                 mov     [esp+0FCh+Str], 0FFFFFFFFh
.text:0040DB83                 mov     edx, [esp+0FCh+var_3C]
.text:0040DB8A                 mov     ecx, [esp+0FCh+var_38]
.text:0040DB91                 mov     [esp+0FCh+Val], 7FFFFFFFh
.text:0040DB99                 mov     [esp+0FCh+Radix], edx
.text:0040DB9D                 mov     [esp+0FCh+var_F0], ecx
.text:0040DBA1                 call    sub_410C30
.text:0040DBA6                 cmp     edx, edi
.text:0040DBA8                 jg      short loc_40DBCA
.text:0040DBAA                 jl      short loc_40DBB0
.text:0040DBAC                 cmp     eax, esi
.text:0040DBAE                 jnb     short loc_40DBCA
.text:0040DBB0
.text:0040DBB0 loc_40DBB0:                             ; CODE XREF: sub_40D700+4AA↑j
.text:0040DBB0                 mov     esi, 0FFFFFFFFh
.text:0040DBB5                 mov     edi, 7FFFFFFFh
.text:0040DBBA                 mov     [esp+0FCh+var_24], esi
.text:0040DBC1                 mov     [esp+0FCh+var_20], edi
.text:0040DBC8                 jmp     short loc_40DB53
.text:0040DBCA ; ---------------------------------------------------------------------------
.text:0040DBCA
.text:0040DBCA loc_40DBCA:                             ; CODE XREF: sub_40D700+4A8↑j
.text:0040DBCA                                         ; sub_40D700+4AE↑j
.text:0040DBCA                 mov     eax, [esp+0FCh+var_3C]
.text:0040DBD1                 mov     ecx, [esp+0FCh+var_38]
.text:0040DBD8                 mul     esi
.text:0040DBDA                 imul    ecx, esi
.text:0040DBDD                 mov     esi, [esp+0FCh+var_3C]
.text:0040DBE4                 mov     [esp+0FCh+var_E4], eax
.text:0040DBE8                 imul    esi, edi
.text:0040DBEB                 mov     eax, edx
.text:0040DBED                 add     eax, ecx
.text:0040DBEF                 mov     ebx, [esp+0FCh+var_E4]
.text:0040DBF3                 lea     edx, [esi+eax]
.text:0040DBF6                 mov     [esp+0FCh+var_E0], edx
.text:0040DBFA                 mov     eax, [esp+0FCh+var_E0]
.text:0040DBFE                 mov     [esp+0FCh+var_24], ebx
.text:0040DC05                 mov     [esp+0FCh+var_20], eax
.text:0040DC0C                 xor     eax, eax
.text:0040DC0E                 jmp     loc_40DB58
.text:0040DC13 ; ---------------------------------------------------------------------------
.text:0040DC13
.text:0040DC13 loc_40DC13:                             ; CODE XREF: sub_40D700+150↑j
.text:0040DC13                                         ; DATA XREF: sub_40D700:jpt_40D850↑o
.text:0040DC13                 mov     [esp+0FCh+var_8C], ebx ; jumptable 0040D850 case 80
.text:0040DC17                 mov     eax, ebx
.text:0040DC19                 sar     eax, 1Fh
.text:0040DC1C                 mov     [esp+0FCh+var_88], eax
.text:0040DC20                 mov     edi, [esp+0FCh+var_8C]
.text:0040DC24                 mov     ebx, [esp+0FCh+var_88]
.text:0040DC28                 mov     [esp+0FCh+var_84], 0
.text:0040DC30                 mov     [esp+0FCh+var_80], 4
.text:0040DC38                 mov     [esp+0FCh+Radix], edi
.text:0040DC3C                 mov     [esp+0FCh+var_F0], ebx
.text:0040DC40                 mov     [esp+0FCh+Str], 0
.text:0040DC47                 mov     [esp+0FCh+Val], 80000000h
.text:0040DC4F                 call    sub_410C30
.text:0040DC54                 mov     [esp+0FCh+var_94], eax
.text:0040DC58                 mov     [esp+0FCh+var_90], edx
.text:0040DC5C
.text:0040DC5C loc_40DC5C:                             ; CODE XREF: sub_40D700+59F↓j
.text:0040DC5C                 mov     edi, [esp+0FCh+var_20]
.text:0040DC63                 mov     esi, [esp+0FCh+var_24]
.text:0040DC6A                 cmp     edi, [esp+0FCh+var_90]
.text:0040DC6E                 jg      short loc_40DCAA
.text:0040DC70                 jl      short loc_40DC78
.text:0040DC72                 cmp     esi, [esp+0FCh+var_94]
.text:0040DC76                 jnb     short loc_40DCAA
.text:0040DC78
.text:0040DC78 loc_40DC78:                             ; CODE XREF: sub_40D700+570↑j
.text:0040DC78                 xor     esi, esi
.text:0040DC7A                 mov     edx, 80000000h
.text:0040DC7F                 mov     [esp+0FCh+var_24], esi
.text:0040DC86                 mov     [esp+0FCh+var_20], edx
.text:0040DC8D
.text:0040DC8D loc_40DC8D:                             ; CODE XREF: sub_40D700+5F0↓j
.text:0040DC8D                 mov     eax, 1
.text:0040DC92
.text:0040DC92 loc_40DC92:                             ; CODE XREF: sub_40D700+62D↓j
.text:0040DC92                 dec     [esp+0FCh+var_80]
.text:0040DC96                 or      [esp+0FCh+var_84], eax
.text:0040DC9A                 cmp     [esp+0FCh+var_80], 0FFFFFFFFh
.text:0040DC9F                 jnz     short loc_40DC5C
.text:0040DCA1                 mov     eax, [esp+0FCh+var_84]
.text:0040DCA5                 jmp     loc_40D9D1
.text:0040DCAA ; ---------------------------------------------------------------------------
.text:0040DCAA
.text:0040DCAA loc_40DCAA:                             ; CODE XREF: sub_40D700+56E↑j
.text:0040DCAA                                         ; sub_40D700+576↑j
.text:0040DCAA                 mov     [esp+0FCh+Str], 0FFFFFFFFh
.text:0040DCB1                 mov     ecx, [esp+0FCh+var_8C]
.text:0040DCB5                 mov     ebx, [esp+0FCh+var_88]
.text:0040DCB9                 mov     [esp+0FCh+Val], 7FFFFFFFh
.text:0040DCC1                 mov     [esp+0FCh+Radix], ecx
.text:0040DCC5                 mov     [esp+0FCh+var_F0], ebx
.text:0040DCC9                 call    sub_410C30
.text:0040DCCE                 cmp     edx, edi
.text:0040DCD0                 jg      short loc_40DCF2
.text:0040DCD2                 jl      short loc_40DCD8
.text:0040DCD4                 cmp     eax, esi
.text:0040DCD6                 jnb     short loc_40DCF2
.text:0040DCD8
.text:0040DCD8 loc_40DCD8:                             ; CODE XREF: sub_40D700+5D2↑j
.text:0040DCD8                 mov     eax, 0FFFFFFFFh
.text:0040DCDD                 mov     edi, 7FFFFFFFh
.text:0040DCE2                 mov     [esp+0FCh+var_24], eax
.text:0040DCE9                 mov     [esp+0FCh+var_20], edi
.text:0040DCF0                 jmp     short loc_40DC8D
.text:0040DCF2 ; ---------------------------------------------------------------------------
.text:0040DCF2
.text:0040DCF2 loc_40DCF2:                             ; CODE XREF: sub_40D700+5D0↑j
.text:0040DCF2                                         ; sub_40D700+5D6↑j
.text:0040DCF2                 mov     eax, [esp+0FCh+var_8C]
.text:0040DCF6                 mov     ecx, [esp+0FCh+var_88]
.text:0040DCFA                 mul     esi
.text:0040DCFC                 imul    ecx, esi
.text:0040DCFF                 mov     esi, edx
.text:0040DD01                 mov     [esp+0FCh+var_E4], eax
.text:0040DD05                 add     esi, ecx
.text:0040DD07                 mov     eax, [esp+0FCh+var_8C]
.text:0040DD0B                 mov     ebx, [esp+0FCh+var_E4]
.text:0040DD0F                 imul    eax, edi
.text:0040DD12                 mov     [esp+0FCh+var_24], ebx
.text:0040DD19                 lea     edx, [eax+esi]
.text:0040DD1C                 xor     eax, eax
.text:0040DD1E                 mov     [esp+0FCh+var_E0], edx
.text:0040DD22                 mov     esi, [esp+0FCh+var_E0]
.text:0040DD26                 mov     [esp+0FCh+var_20], esi
.text:0040DD2D                 jmp     loc_40DC92
.text:0040DD32 ; ---------------------------------------------------------------------------
.text:0040DD32
.text:0040DD32 loc_40DD32:                             ; CODE XREF: sub_40D700+150↑j
.text:0040DD32                                         ; DATA XREF: sub_40D700:jpt_40D850↑o
.text:0040DD32                 mov     [esp+0FCh+var_BC], ebx ; jumptable 0040D850 case 89
.text:0040DD36                 mov     eax, ebx
.text:0040DD38                 sar     eax, 1Fh
.text:0040DD3B                 mov     [esp+0FCh+var_B8], eax
.text:0040DD3F                 mov     edx, [esp+0FCh+var_BC]
.text:0040DD43                 mov     ecx, [esp+0FCh+var_B8]
.text:0040DD47                 mov     [esp+0FCh+var_B4], 0
.text:0040DD4F                 mov     [esp+0FCh+var_B0], 7
.text:0040DD57                 mov     [esp+0FCh+Radix], edx
.text:0040DD5B                 mov     [esp+0FCh+var_F0], ecx
.text:0040DD5F                 mov     [esp+0FCh+Str], 0
.text:0040DD66                 mov     [esp+0FCh+Val], 80000000h
.text:0040DD6E                 call    sub_410C30
.text:0040DD73                 mov     [esp+0FCh+var_C4], eax
.text:0040DD77                 mov     [esp+0FCh+var_C0], edx
.text:0040DD7B
.text:0040DD7B loc_40DD7B:                             ; CODE XREF: sub_40D700+6BE↓j
.text:0040DD7B                 mov     edi, [esp+0FCh+var_20]
.text:0040DD82                 mov     esi, [esp+0FCh+var_24]
.text:0040DD89                 cmp     edi, [esp+0FCh+var_C0]
.text:0040DD8D                 jg      short loc_40DDC9
.text:0040DD8F                 jl      short loc_40DD97
.text:0040DD91                 cmp     esi, [esp+0FCh+var_C4]
.text:0040DD95                 jnb     short loc_40DDC9
.text:0040DD97
.text:0040DD97 loc_40DD97:                             ; CODE XREF: sub_40D700+68F↑j
.text:0040DD97                 xor     edi, edi
.text:0040DD99                 mov     esi, 80000000h
.text:0040DD9E                 mov     [esp+0FCh+var_24], edi
.text:0040DDA5                 mov     [esp+0FCh+var_20], esi
.text:0040DDAC
.text:0040DDAC loc_40DDAC:                             ; CODE XREF: sub_40D700+70F↓j
.text:0040DDAC                 mov     eax, 1
.text:0040DDB1
.text:0040DDB1 loc_40DDB1:                             ; CODE XREF: sub_40D700+74C↓j
.text:0040DDB1                 dec     [esp+0FCh+var_B0]
.text:0040DDB5                 or      [esp+0FCh+var_B4], eax
.text:0040DDB9                 cmp     [esp+0FCh+var_B0], 0FFFFFFFFh
.text:0040DDBE                 jnz     short loc_40DD7B
.text:0040DDC0                 mov     eax, [esp+0FCh+var_B4]
.text:0040DDC4                 jmp     loc_40D9D1
.text:0040DDC9 ; ---------------------------------------------------------------------------
.text:0040DDC9
.text:0040DDC9 loc_40DDC9:                             ; CODE XREF: sub_40D700+68D↑j
.text:0040DDC9                                         ; sub_40D700+695↑j
.text:0040DDC9                 mov     [esp+0FCh+Str], 0FFFFFFFFh
.text:0040DDD0                 mov     ecx, [esp+0FCh+var_BC]
.text:0040DDD4                 mov     ebx, [esp+0FCh+var_B8]
.text:0040DDD8                 mov     [esp+0FCh+Val], 7FFFFFFFh
.text:0040DDE0                 mov     [esp+0FCh+Radix], ecx
.text:0040DDE4                 mov     [esp+0FCh+var_F0], ebx
.text:0040DDE8                 call    sub_410C30
.text:0040DDED                 cmp     edx, edi
.text:0040DDEF                 jg      short loc_40DE11
.text:0040DDF1                 jl      short loc_40DDF7
.text:0040DDF3                 cmp     eax, esi
.text:0040DDF5                 jnb     short loc_40DE11
.text:0040DDF7
.text:0040DDF7 loc_40DDF7:                             ; CODE XREF: sub_40D700+6F1↑j
.text:0040DDF7                 mov     eax, 0FFFFFFFFh
.text:0040DDFC                 mov     edx, 7FFFFFFFh
.text:0040DE01                 mov     [esp+0FCh+var_24], eax
.text:0040DE08                 mov     [esp+0FCh+var_20], edx
.text:0040DE0F                 jmp     short loc_40DDAC
.text:0040DE11 ; ---------------------------------------------------------------------------
.text:0040DE11
.text:0040DE11 loc_40DE11:                             ; CODE XREF: sub_40D700+6EF↑j
.text:0040DE11                                         ; sub_40D700+6F5↑j
.text:0040DE11                 mov     eax, [esp+0FCh+var_BC]
.text:0040DE15                 mov     ecx, [esp+0FCh+var_B8]
.text:0040DE19                 mul     esi
.text:0040DE1B                 imul    ecx, esi
.text:0040DE1E                 mov     esi, edx
.text:0040DE20                 mov     [esp+0FCh+var_E4], eax
.text:0040DE24                 add     esi, ecx
.text:0040DE26                 mov     eax, [esp+0FCh+var_BC]
.text:0040DE2A                 imul    eax, edi
.text:0040DE2D                 mov     edi, [esp+0FCh+var_E4]
.text:0040DE31                 lea     edx, [eax+esi]
.text:0040DE34                 mov     [esp+0FCh+var_E0], edx
.text:0040DE38                 xor     eax, eax
.text:0040DE3A                 mov     esi, [esp+0FCh+var_E0]
.text:0040DE3E                 mov     [esp+0FCh+var_24], edi
.text:0040DE45                 mov     [esp+0FCh+var_20], esi
.text:0040DE4C                 jmp     loc_40DDB1
.text:0040DE51 ; ---------------------------------------------------------------------------
.text:0040DE51
.text:0040DE51 loc_40DE51:                             ; CODE XREF: sub_40D700+150↑j
.text:0040DE51                                         ; DATA XREF: sub_40D700:jpt_40D850↑o
.text:0040DE51                 mov     [esp+0FCh+var_D4], ebx ; jumptable 0040D850 case 90
.text:0040DE55                 mov     edx, ebx
.text:0040DE57                 sar     edx, 1Fh
.text:0040DE5A                 mov     [esp+0FCh+var_D0], edx
.text:0040DE5E                 mov     edi, [esp+0FCh+var_D4]
.text:0040DE62                 mov     ebx, [esp+0FCh+var_D0]
.text:0040DE66                 mov     [esp+0FCh+var_CC], 0
.text:0040DE6E                 mov     [esp+0FCh+var_C8], 6
.text:0040DE76                 mov     [esp+0FCh+Radix], edi
.text:0040DE7A                 mov     [esp+0FCh+var_F0], ebx
.text:0040DE7E                 mov     [esp+0FCh+Str], 0
.text:0040DE85                 mov     [esp+0FCh+Val], 80000000h
.text:0040DE8D                 call    sub_410C30
.text:0040DE92                 mov     [esp+0FCh+var_DC], eax
.text:0040DE96                 mov     [esp+0FCh+var_D8], edx
.text:0040DE9A
.text:0040DE9A loc_40DE9A:                             ; CODE XREF: sub_40D700+7DD↓j
.text:0040DE9A                 mov     edi, [esp+0FCh+var_20]
.text:0040DEA1                 mov     esi, [esp+0FCh+var_24]
.text:0040DEA8                 cmp     edi, [esp+0FCh+var_D8]
.text:0040DEAC                 jg      short loc_40DEE8
.text:0040DEAE                 jl      short loc_40DEB6
.text:0040DEB0                 cmp     esi, [esp+0FCh+var_DC]
.text:0040DEB4                 jnb     short loc_40DEE8
.text:0040DEB6
.text:0040DEB6 loc_40DEB6:                             ; CODE XREF: sub_40D700+7AE↑j
.text:0040DEB6                 xor     esi, esi
.text:0040DEB8                 mov     eax, 80000000h
.text:0040DEBD                 mov     [esp+0FCh+var_24], esi
.text:0040DEC4                 mov     [esp+0FCh+var_20], eax
.text:0040DECB
.text:0040DECB loc_40DECB:                             ; CODE XREF: sub_40D700+82E↓j
.text:0040DECB                 mov     eax, 1
.text:0040DED0
.text:0040DED0 loc_40DED0:                             ; CODE XREF: sub_40D700+86B↓j
.text:0040DED0                 dec     [esp+0FCh+var_C8]
.text:0040DED4                 or      [esp+0FCh+var_CC], eax
.text:0040DED8                 cmp     [esp+0FCh+var_C8], 0FFFFFFFFh
.text:0040DEDD                 jnz     short loc_40DE9A
.text:0040DEDF                 mov     eax, [esp+0FCh+var_CC]
.text:0040DEE3                 jmp     loc_40D9D1
.text:0040DEE8 ; ---------------------------------------------------------------------------
.text:0040DEE8
.text:0040DEE8 loc_40DEE8:                             ; CODE XREF: sub_40D700+7AC↑j
.text:0040DEE8                                         ; sub_40D700+7B4↑j
.text:0040DEE8                 mov     [esp+0FCh+Str], 0FFFFFFFFh
.text:0040DEEF                 mov     ecx, [esp+0FCh+var_D4]
.text:0040DEF3                 mov     ebx, [esp+0FCh+var_D0]
.text:0040DEF7                 mov     [esp+0FCh+Val], 7FFFFFFFh
.text:0040DEFF                 mov     [esp+0FCh+Radix], ecx
.text:0040DF03                 mov     [esp+0FCh+var_F0], ebx
.text:0040DF07                 call    sub_410C30
.text:0040DF0C                 cmp     edx, edi
.text:0040DF0E                 jg      short loc_40DF30
.text:0040DF10                 jl      short loc_40DF16
.text:0040DF12                 cmp     eax, esi
.text:0040DF14                 jnb     short loc_40DF30
.text:0040DF16
.text:0040DF16 loc_40DF16:                             ; CODE XREF: sub_40D700+810↑j
.text:0040DF16                 mov     eax, 0FFFFFFFFh
.text:0040DF1B                 mov     edi, 7FFFFFFFh
.text:0040DF20                 mov     [esp+0FCh+var_24], eax
.text:0040DF27                 mov     [esp+0FCh+var_20], edi
.text:0040DF2E                 jmp     short loc_40DECB
.text:0040DF30 ; ---------------------------------------------------------------------------
.text:0040DF30
.text:0040DF30 loc_40DF30:                             ; CODE XREF: sub_40D700+80E↑j
.text:0040DF30                                         ; sub_40D700+814↑j
.text:0040DF30                 mov     eax, [esp+0FCh+var_D4]
.text:0040DF34                 mov     ecx, [esp+0FCh+var_D0]
.text:0040DF38                 mul     esi
.text:0040DF3A                 imul    ecx, esi
.text:0040DF3D                 mov     esi, edx
.text:0040DF3F                 mov     [esp+0FCh+var_E4], eax
.text:0040DF43                 add     esi, ecx
.text:0040DF45                 mov     eax, [esp+0FCh+var_D4]
.text:0040DF49                 mov     ebx, [esp+0FCh+var_E4]
.text:0040DF4D                 imul    eax, edi
.text:0040DF50                 mov     [esp+0FCh+var_24], ebx
.text:0040DF57                 lea     edx, [eax+esi]
.text:0040DF5A                 xor     eax, eax
.text:0040DF5C                 mov     [esp+0FCh+var_E0], edx
.text:0040DF60                 mov     esi, [esp+0FCh+var_E0]
.text:0040DF64                 mov     [esp+0FCh+var_20], esi
.text:0040DF6B                 jmp     loc_40DED0
.text:0040DF70 ; ---------------------------------------------------------------------------
.text:0040DF70
.text:0040DF70 loc_40DF70:                             ; CODE XREF: sub_40D700+150↑j
.text:0040DF70                                         ; DATA XREF: sub_40D700:jpt_40D850↑o
.text:0040DF70                 xor     eax, eax        ; jumptable 0040D850 case 99
.text:0040DF72                 jmp     loc_40D9D4
.text:0040DF77 ; ---------------------------------------------------------------------------
.text:0040DF77
.text:0040DF77 loc_40DF77:                             ; CODE XREF: sub_40D700+150↑j
.text:0040DF77                                         ; DATA XREF: sub_40D700:jpt_40D850↑o
.text:0040DF77                 mov     [esp+0FCh+var_54], ebx ; jumptable 0040D850 cases 71,103
.text:0040DF7E                 mov     edx, ebx
.text:0040DF80                 xor     ecx, ecx
.text:0040DF82                 mov     [esp+0FCh+var_4C], ecx
.text:0040DF89                 sar     edx, 1Fh
.text:0040DF8C                 mov     ebx, [esp+0FCh+var_54]
.text:0040DF93                 mov     [esp+0FCh+var_50], edx
.text:0040DF9A                 mov     esi, 2
.text:0040DF9F                 mov     edi, [esp+0FCh+var_50]
.text:0040DFA6                 mov     [esp+0FCh+var_48], esi
.text:0040DFAD                 mov     [esp+0FCh+Radix], ebx
.text:0040DFB1                 mov     [esp+0FCh+var_F0], edi
.text:0040DFB5                 mov     [esp+0FCh+Str], 0
.text:0040DFBC                 mov     [esp+0FCh+Val], 80000000h
.text:0040DFC4                 call    sub_410C30
.text:0040DFC9                 mov     [esp+0FCh+var_5C], eax
.text:0040DFD0                 mov     [esp+0FCh+var_58], edx
.text:0040DFD7
.text:0040DFD7 loc_40DFD7:                             ; CODE XREF: sub_40D700+929↓j
.text:0040DFD7                 mov     edi, [esp+0FCh+var_20]
.text:0040DFDE                 mov     esi, [esp+0FCh+var_24]
.text:0040DFE5                 cmp     edi, [esp+0FCh+var_58]
.text:0040DFEC                 jg      short loc_40E037
.text:0040DFEE                 jl      short loc_40DFF9
.text:0040DFF0                 cmp     esi, [esp+0FCh+var_5C]
.text:0040DFF7                 jnb     short loc_40E037
.text:0040DFF9
.text:0040DFF9 loc_40DFF9:                             ; CODE XREF: sub_40D700+8EE↑j
.text:0040DFF9                 xor     ebx, ebx
.text:0040DFFB                 mov     edi, 80000000h
.text:0040E000                 mov     [esp+0FCh+var_24], ebx
.text:0040E007                 mov     [esp+0FCh+var_20], edi
.text:0040E00E
.text:0040E00E loc_40E00E:                             ; CODE XREF: sub_40D700+983↓j
.text:0040E00E                 mov     eax, 1
.text:0040E013
.text:0040E013 loc_40E013:                             ; CODE XREF: sub_40D700+9C9↓j
.text:0040E013                 dec     [esp+0FCh+var_48]
.text:0040E01A                 or      [esp+0FCh+var_4C], eax
.text:0040E021                 cmp     [esp+0FCh+var_48], 0FFFFFFFFh
.text:0040E029                 jnz     short loc_40DFD7
.text:0040E02B                 mov     eax, [esp+0FCh+var_4C]
.text:0040E032                 jmp     loc_40D9D1
.text:0040E037 ; ---------------------------------------------------------------------------
.text:0040E037
.text:0040E037 loc_40E037:                             ; CODE XREF: sub_40D700+8EC↑j
.text:0040E037                                         ; sub_40D700+8F7↑j
.text:0040E037                 mov     [esp+0FCh+Str], 0FFFFFFFFh
.text:0040E03E                 mov     ecx, [esp+0FCh+var_54]
.text:0040E045                 mov     eax, [esp+0FCh+var_50]
.text:0040E04C                 mov     [esp+0FCh+Val], 7FFFFFFFh
.text:0040E054                 mov     [esp+0FCh+Radix], ecx
.text:0040E058                 mov     [esp+0FCh+var_F0], eax
.text:0040E05C                 call    sub_410C30
.text:0040E061                 cmp     edx, edi
.text:0040E063                 jg      short loc_40E085
.text:0040E065                 jl      short loc_40E06B
.text:0040E067                 cmp     eax, esi
.text:0040E069                 jnb     short loc_40E085
.text:0040E06B
.text:0040E06B loc_40E06B:                             ; CODE XREF: sub_40D700+965↑j
.text:0040E06B                 mov     esi, 0FFFFFFFFh
.text:0040E070                 mov     edx, 7FFFFFFFh
.text:0040E075                 mov     [esp+0FCh+var_24], esi
.text:0040E07C                 mov     [esp+0FCh+var_20], edx
.text:0040E083                 jmp     short loc_40E00E
.text:0040E085 ; ---------------------------------------------------------------------------
.text:0040E085
.text:0040E085 loc_40E085:                             ; CODE XREF: sub_40D700+963↑j
.text:0040E085                                         ; sub_40D700+969↑j
.text:0040E085                 mov     eax, [esp+0FCh+var_54]
.text:0040E08C                 mov     ecx, [esp+0FCh+var_50]
.text:0040E093                 mul     esi
.text:0040E095                 imul    ecx, esi
.text:0040E098                 mov     esi, edx
.text:0040E09A                 mov     [esp+0FCh+var_E4], eax
.text:0040E09E                 mov     edx, [esp+0FCh+var_54]
.text:0040E0A5                 add     esi, ecx
.text:0040E0A7                 mov     ebx, [esp+0FCh+var_E4]
.text:0040E0AB                 imul    edx, edi
.text:0040E0AE                 mov     [esp+0FCh+var_24], ebx
.text:0040E0B5                 lea     eax, [edx+esi]
.text:0040E0B8                 mov     [esp+0FCh+var_E0], eax
.text:0040E0BC                 mov     edi, [esp+0FCh+var_E0]
.text:0040E0C0                 xor     eax, eax
.text:0040E0C2                 mov     [esp+0FCh+var_20], edi
.text:0040E0C9                 jmp     loc_40E013
.text:0040E0CE ; ---------------------------------------------------------------------------
.text:0040E0CE
.text:0040E0CE loc_40E0CE:                             ; CODE XREF: sub_40D700+150↑j
.text:0040E0CE                                         ; DATA XREF: sub_40D700:jpt_40D850↑o
.text:0040E0CE                 mov     [esp+0FCh+var_64], ebx ; jumptable 0040D850 cases 75,107
.text:0040E0D5                 mov     eax, ebx
.text:0040E0D7                 sar     eax, 1Fh
.text:0040E0DA                 mov     [esp+0FCh+var_60], eax
.text:0040E0E1                 mov     ebx, [esp+0FCh+var_64]
.text:0040E0E8                 mov     edi, [esp+0FCh+var_60]
.text:0040E0EF                 mov     [esp+0FCh+Str], 0
.text:0040E0F6                 mov     [esp+0FCh+Radix], ebx
.text:0040E0FA                 mov     [esp+0FCh+var_F0], edi
.text:0040E0FE                 mov     [esp+0FCh+Val], 80000000h
.text:0040E106                 call    sub_410C30
.text:0040E10B                 mov     edi, [esp+0FCh+var_20]
.text:0040E112                 mov     esi, [esp+0FCh+var_24]
.text:0040E119                 cmp     edi, edx
.text:0040E11B                 jg      short loc_40E146
.text:0040E11D                 jl      short loc_40E123
.text:0040E11F                 cmp     esi, eax
.text:0040E121                 jnb     short loc_40E146
.text:0040E123
.text:0040E123 loc_40E123:                             ; CODE XREF: sub_40D700+A1D↑j
.text:0040E123                 xor     esi, esi
.text:0040E125                 mov     edx, 80000000h
.text:0040E12A                 mov     [esp+0FCh+var_24], esi
.text:0040E131                 mov     [esp+0FCh+var_20], edx
.text:0040E138
.text:0040E138 loc_40E138:                             ; CODE XREF: sub_40D700+A92↓j
.text:0040E138                 mov     edx, 1
.text:0040E13D
.text:0040E13D loc_40E13D:                             ; CODE XREF: sub_40D700+AD8↓j
.text:0040E13D                 xor     eax, eax
.text:0040E13F                 or      eax, edx
.text:0040E141                 jmp     loc_40D9D1
.text:0040E146 ; ---------------------------------------------------------------------------
.text:0040E146
.text:0040E146 loc_40E146:                             ; CODE XREF: sub_40D700+A1B↑j
.text:0040E146                                         ; sub_40D700+A21↑j
.text:0040E146                 mov     [esp+0FCh+Str], 0FFFFFFFFh
.text:0040E14D                 mov     ecx, [esp+0FCh+var_64]
.text:0040E154                 mov     ebx, [esp+0FCh+var_60]
.text:0040E15B                 mov     [esp+0FCh+Val], 7FFFFFFFh
.text:0040E163                 mov     [esp+0FCh+Radix], ecx
.text:0040E167                 mov     [esp+0FCh+var_F0], ebx
.text:0040E16B                 call    sub_410C30
.text:0040E170                 cmp     edx, edi
.text:0040E172                 jg      short loc_40E194
.text:0040E174                 jl      short loc_40E17A
.text:0040E176                 cmp     eax, esi
.text:0040E178                 jnb     short loc_40E194
.text:0040E17A
.text:0040E17A loc_40E17A:                             ; CODE XREF: sub_40D700+A74↑j
.text:0040E17A                 mov     eax, 0FFFFFFFFh
.text:0040E17F                 mov     edi, 7FFFFFFFh
.text:0040E184                 mov     [esp+0FCh+var_24], eax
.text:0040E18B                 mov     [esp+0FCh+var_20], edi
.text:0040E192                 jmp     short loc_40E138
.text:0040E194 ; ---------------------------------------------------------------------------
.text:0040E194
.text:0040E194 loc_40E194:                             ; CODE XREF: sub_40D700+A72↑j
.text:0040E194                                         ; sub_40D700+A78↑j
.text:0040E194                 mov     eax, [esp+0FCh+var_64]
.text:0040E19B                 mov     ecx, [esp+0FCh+var_60]
.text:0040E1A2                 mul     esi
.text:0040E1A4                 imul    ecx, esi
.text:0040E1A7                 mov     esi, edx
.text:0040E1A9                 mov     [esp+0FCh+var_E4], eax
.text:0040E1AD                 add     esi, ecx
.text:0040E1AF                 mov     eax, [esp+0FCh+var_64]
.text:0040E1B6                 mov     ebx, [esp+0FCh+var_E4]
.text:0040E1BA                 imul    eax, edi
.text:0040E1BD                 mov     [esp+0FCh+var_24], ebx
.text:0040E1C4                 lea     edx, [eax+esi]
.text:0040E1C7                 mov     [esp+0FCh+var_E0], edx
.text:0040E1CB                 mov     esi, [esp+0FCh+var_E0]
.text:0040E1CF                 xor     edx, edx
.text:0040E1D1                 mov     [esp+0FCh+var_20], esi
.text:0040E1D8                 jmp     loc_40E13D
.text:0040E1DD ; ---------------------------------------------------------------------------
.text:0040E1DD
.text:0040E1DD loc_40E1DD:                             ; CODE XREF: sub_40D700+150↑j
.text:0040E1DD                                         ; DATA XREF: sub_40D700:jpt_40D850↑o
.text:0040E1DD                 mov     [esp+0FCh+var_74], ebx ; jumptable 0040D850 cases 77,109
.text:0040E1E4                 mov     edx, ebx
.text:0040E1E6                 xor     eax, eax
.text:0040E1E8                 mov     [esp+0FCh+var_6C], eax
.text:0040E1EF                 sar     edx, 1Fh
.text:0040E1F2                 mov     ebx, [esp+0FCh+var_74]
.text:0040E1F9                 mov     [esp+0FCh+var_70], edx
.text:0040E200                 mov     esi, 1
.text:0040E205                 mov     edi, [esp+0FCh+var_70]
.text:0040E20C                 mov     [esp+0FCh+var_68], esi
.text:0040E213                 mov     [esp+0FCh+Radix], ebx
.text:0040E217                 mov     [esp+0FCh+var_F0], edi
.text:0040E21B                 mov     [esp+0FCh+Str], 0
.text:0040E222                 mov     [esp+0FCh+Val], 80000000h
.text:0040E22A                 call    sub_410C30
.text:0040E22F                 mov     [esp+0FCh+var_7C], eax
.text:0040E236                 mov     [esp+0FCh+var_78], edx
.text:0040E23D
.text:0040E23D loc_40E23D:                             ; CODE XREF: sub_40D700+B8F↓j
.text:0040E23D                 mov     edi, [esp+0FCh+var_20]
.text:0040E244                 mov     esi, [esp+0FCh+var_24]
.text:0040E24B                 cmp     edi, [esp+0FCh+var_78]
.text:0040E252                 jg      short loc_40E29D
.text:0040E254                 jl      short loc_40E25F
.text:0040E256                 cmp     esi, [esp+0FCh+var_7C]
.text:0040E25D                 jnb     short loc_40E29D
.text:0040E25F
.text:0040E25F loc_40E25F:                             ; CODE XREF: sub_40D700+B54↑j
.text:0040E25F                 xor     edi, edi
.text:0040E261                 mov     ecx, 80000000h
.text:0040E266                 mov     [esp+0FCh+var_24], edi
.text:0040E26D                 mov     [esp+0FCh+var_20], ecx
.text:0040E274
.text:0040E274 loc_40E274:                             ; CODE XREF: sub_40D700+BE9↓j
.text:0040E274                 mov     eax, 1
.text:0040E279
.text:0040E279 loc_40E279:                             ; CODE XREF: sub_40D700+C2F↓j
.text:0040E279                 dec     [esp+0FCh+var_68]
.text:0040E280                 or      [esp+0FCh+var_6C], eax
.text:0040E287                 cmp     [esp+0FCh+var_68], 0FFFFFFFFh
.text:0040E28F                 jnz     short loc_40E23D
.text:0040E291                 mov     eax, [esp+0FCh+var_6C]
.text:0040E298                 jmp     loc_40D9D1
.text:0040E29D ; ---------------------------------------------------------------------------
.text:0040E29D
.text:0040E29D loc_40E29D:                             ; CODE XREF: sub_40D700+B52↑j
.text:0040E29D                                         ; sub_40D700+B5D↑j
.text:0040E29D                 mov     [esp+0FCh+Str], 0FFFFFFFFh
.text:0040E2A4                 mov     eax, [esp+0FCh+var_74]
.text:0040E2AB                 mov     ebx, [esp+0FCh+var_70]
.text:0040E2B2                 mov     [esp+0FCh+Val], 7FFFFFFFh
.text:0040E2BA                 mov     [esp+0FCh+Radix], eax
.text:0040E2BE                 mov     [esp+0FCh+var_F0], ebx
.text:0040E2C2                 call    sub_410C30
.text:0040E2C7                 cmp     edx, edi
.text:0040E2C9                 jg      short loc_40E2EB
.text:0040E2CB                 jl      short loc_40E2D1
.text:0040E2CD                 cmp     eax, esi
.text:0040E2CF                 jnb     short loc_40E2EB
.text:0040E2D1
.text:0040E2D1 loc_40E2D1:                             ; CODE XREF: sub_40D700+BCB↑j
.text:0040E2D1                 mov     esi, 0FFFFFFFFh
.text:0040E2D6                 mov     edx, 7FFFFFFFh
.text:0040E2DB                 mov     [esp+0FCh+var_24], esi
.text:0040E2E2                 mov     [esp+0FCh+var_20], edx
.text:0040E2E9                 jmp     short loc_40E274
.text:0040E2EB ; ---------------------------------------------------------------------------
.text:0040E2EB
.text:0040E2EB loc_40E2EB:                             ; CODE XREF: sub_40D700+BC9↑j
.text:0040E2EB                                         ; sub_40D700+BCF↑j
.text:0040E2EB                 mov     eax, [esp+0FCh+var_74]
.text:0040E2F2                 mov     ecx, [esp+0FCh+var_70]
.text:0040E2F9                 mul     esi
.text:0040E2FB                 imul    ecx, esi
.text:0040E2FE                 mov     esi, edx
.text:0040E300                 mov     [esp+0FCh+var_E4], eax
.text:0040E304                 mov     edx, [esp+0FCh+var_74]
.text:0040E30B                 add     esi, ecx
.text:0040E30D                 mov     ecx, [esp+0FCh+var_E4]
.text:0040E311                 imul    edx, edi
.text:0040E314                 mov     [esp+0FCh+var_24], ecx
.text:0040E31B                 lea     eax, [edx+esi]
.text:0040E31E                 mov     [esp+0FCh+var_E0], eax
.text:0040E322                 mov     edi, [esp+0FCh+var_E0]
.text:0040E326                 xor     eax, eax
.text:0040E328                 mov     [esp+0FCh+var_20], edi
.text:0040E32F                 jmp     loc_40E279
.text:0040E334 ; ---------------------------------------------------------------------------
.text:0040E334
.text:0040E334 loc_40E334:                             ; CODE XREF: sub_40D700+150↑j
.text:0040E334                                         ; DATA XREF: sub_40D700:jpt_40D850↑o
.text:0040E334                 mov     [esp+0FCh+var_A4], ebx ; jumptable 0040D850 cases 84,116
.text:0040E338                 mov     edx, ebx
.text:0040E33A                 sar     edx, 1Fh
.text:0040E33D                 mov     [esp+0FCh+var_A0], edx
.text:0040E341                 mov     ebx, [esp+0FCh+var_A4]
.text:0040E345                 mov     edi, [esp+0FCh+var_A0]
.text:0040E349                 mov     [esp+0FCh+var_9C], 0
.text:0040E351                 mov     [esp+0FCh+var_98], 3
.text:0040E359                 mov     [esp+0FCh+Radix], ebx
.text:0040E35D                 mov     [esp+0FCh+var_F0], edi
.text:0040E361                 mov     [esp+0FCh+Str], 0
.text:0040E368                 mov     [esp+0FCh+Val], 80000000h
.text:0040E370                 call    sub_410C30
.text:0040E375                 mov     [esp+0FCh+var_AC], eax
.text:0040E379                 mov     [esp+0FCh+var_A8], edx
.text:0040E37D
.text:0040E37D loc_40E37D:                             ; CODE XREF: sub_40D700+CC0↓j
.text:0040E37D                 mov     edi, [esp+0FCh+var_20]
.text:0040E384                 mov     esi, [esp+0FCh+var_24]
.text:0040E38B                 cmp     edi, [esp+0FCh+var_A8]
.text:0040E38F                 jg      short loc_40E3CB
.text:0040E391                 jl      short loc_40E399
.text:0040E393                 cmp     esi, [esp+0FCh+var_AC]
.text:0040E397                 jnb     short loc_40E3CB
.text:0040E399
.text:0040E399 loc_40E399:                             ; CODE XREF: sub_40D700+C91↑j
.text:0040E399                 xor     esi, esi
.text:0040E39B                 mov     eax, 80000000h
.text:0040E3A0                 mov     [esp+0FCh+var_24], esi
.text:0040E3A7                 mov     [esp+0FCh+var_20], eax
.text:0040E3AE
.text:0040E3AE loc_40E3AE:                             ; CODE XREF: sub_40D700+D11↓j
.text:0040E3AE                 mov     eax, 1
.text:0040E3B3
.text:0040E3B3 loc_40E3B3:                             ; CODE XREF: sub_40D700+D4E↓j
.text:0040E3B3                 dec     [esp+0FCh+var_98]
.text:0040E3B7                 or      [esp+0FCh+var_9C], eax
.text:0040E3BB                 cmp     [esp+0FCh+var_98], 0FFFFFFFFh
.text:0040E3C0                 jnz     short loc_40E37D
.text:0040E3C2                 mov     eax, [esp+0FCh+var_9C]
.text:0040E3C6                 jmp     loc_40D9D1
.text:0040E3CB ; ---------------------------------------------------------------------------
.text:0040E3CB
.text:0040E3CB loc_40E3CB:                             ; CODE XREF: sub_40D700+C8F↑j
.text:0040E3CB                                         ; sub_40D700+C97↑j
.text:0040E3CB                 mov     [esp+0FCh+Str], 0FFFFFFFFh
.text:0040E3D2                 mov     ecx, [esp+0FCh+var_A4]
.text:0040E3D6                 mov     ebx, [esp+0FCh+var_A0]
.text:0040E3DA                 mov     [esp+0FCh+Val], 7FFFFFFFh
.text:0040E3E2                 mov     [esp+0FCh+Radix], ecx
.text:0040E3E6                 mov     [esp+0FCh+var_F0], ebx
.text:0040E3EA                 call    sub_410C30
.text:0040E3EF                 cmp     edx, edi
.text:0040E3F1                 jg      short loc_40E413
.text:0040E3F3                 jl      short loc_40E3F9
.text:0040E3F5                 cmp     eax, esi
.text:0040E3F7                 jnb     short loc_40E413
.text:0040E3F9
.text:0040E3F9 loc_40E3F9:                             ; CODE XREF: sub_40D700+CF3↑j
.text:0040E3F9                 mov     edx, 0FFFFFFFFh
.text:0040E3FE                 mov     edi, 7FFFFFFFh
.text:0040E403                 mov     [esp+0FCh+var_24], edx
.text:0040E40A                 mov     [esp+0FCh+var_20], edi
.text:0040E411                 jmp     short loc_40E3AE
.text:0040E413 ; ---------------------------------------------------------------------------
.text:0040E413
.text:0040E413 loc_40E413:                             ; CODE XREF: sub_40D700+CF1↑j
.text:0040E413                                         ; sub_40D700+CF7↑j
.text:0040E413                 mov     eax, [esp+0FCh+var_A4]
.text:0040E417                 mov     ecx, [esp+0FCh+var_A0]
.text:0040E41B                 mul     esi
.text:0040E41D                 imul    ecx, esi
.text:0040E420                 mov     [esp+0FCh+var_E4], eax
.text:0040E424                 mov     eax, edx
.text:0040E426                 mov     esi, [esp+0FCh+var_E4]
.text:0040E42A                 mov     edx, [esp+0FCh+var_A4]
.text:0040E42E                 add     eax, ecx
.text:0040E430                 mov     [esp+0FCh+var_24], esi
.text:0040E437                 imul    edx, edi
.text:0040E43A                 lea     edi, [edx+eax]
.text:0040E43D                 mov     [esp+0FCh+var_E0], edi
.text:0040E441                 mov     eax, [esp+0FCh+var_E0]
.text:0040E445                 mov     [esp+0FCh+var_20], eax
.text:0040E44C                 xor     eax, eax
.text:0040E44E                 jmp     loc_40E3B3
.text:0040E453 ; ---------------------------------------------------------------------------
.text:0040E453
.text:0040E453 loc_40E453:                             ; CODE XREF: sub_40D700+150↑j
.text:0040E453                                         ; DATA XREF: sub_40D700:jpt_40D850↑o
.text:0040E453                 mov     [esp+0FCh+Radix], 2 ; jumptable 0040D850 case 119
.text:0040E45B                 lea     edi, [esp+0FCh+var_24]
.text:0040E462                 mov     [esp+0FCh+var_F0], 0
.text:0040E46A                 mov     [esp+0FCh+Str], 0
.text:0040E471                 mov     [esp+0FCh+Val], 80000000h
.text:0040E479                 call    sub_410C30
.text:0040E47E                 mov     esi, [esp+0FCh+var_20]
.text:0040E485                 mov     ecx, [esp+0FCh+var_24]
.text:0040E48C                 cmp     esi, edx
.text:0040E48E                 jg      short loc_40E49E
.text:0040E490                 jl      loc_40DA1D
.text:0040E496                 cmp     ecx, eax
.text:0040E498                 jb      loc_40DA1D
.text:0040E49E
.text:0040E49E loc_40E49E:                             ; CODE XREF: sub_40D700+D8E↑j
.text:0040E49E                 mov     [esp+0FCh+Radix], 2
.text:0040E4A6                 mov     [esp+0FCh+var_F0], 0
.text:0040E4AE                 mov     [esp+0FCh+Str], 0FFFFFFFFh
.text:0040E4B5                 mov     [esp+0FCh+Val], 7FFFFFFFh
.text:0040E4BD                 call    sub_410C30
.text:0040E4C2                 mov     esi, [edi+4]
.text:0040E4C5                 mov     ebx, [edi]
.text:0040E4C7                 cmp     edx, esi
.text:0040E4C9                 jg      short loc_40E4E3
.text:0040E4CB                 jl      short loc_40E4D1
.text:0040E4CD                 cmp     eax, ebx
.text:0040E4CF                 jnb     short loc_40E4E3
.text:0040E4D1
.text:0040E4D1 loc_40E4D1:                             ; CODE XREF: sub_40D700+DCB↑j
.text:0040E4D1                 mov     dword ptr [edi], 0FFFFFFFFh
.text:0040E4D7                 mov     dword ptr [edi+4], 7FFFFFFFh
.text:0040E4DE                 jmp     loc_40DA16
.text:0040E4E3 ; ---------------------------------------------------------------------------
.text:0040E4E3
.text:0040E4E3 loc_40E4E3:                             ; CODE XREF: sub_40D700+DC9↑j
.text:0040E4E3                                         ; sub_40D700+DCF↑j
.text:0040E4E3                 mov     eax, 2
.text:0040E4E8                 mul     ebx
.text:0040E4EA                 lea     ebx, [edx+esi*2]
.text:0040E4ED                 mov     [edi], eax
.text:0040E4EF                 mov     [edi+4], ebx
.text:0040E4F2                 jmp     loc_40D9CF
.text:0040E4F7 ; ---------------------------------------------------------------------------
.text:0040E4F7
.text:0040E4F7 loc_40E4F7:                             ; CODE XREF: sub_40D700+12D↑j
.text:0040E4F7                                         ; sub_40D700+13F↑j
.text:0040E4F7                 mov     ecx, 2
.text:0040E4FC                 mov     ebx, 3E8h
.text:0040E501                 mov     [esp+0FCh+var_2C], ecx
.text:0040E508                 jmp     loc_40D845
.text:0040E50D ; ---------------------------------------------------------------------------
.text:0040E50D
.text:0040E50D loc_40E50D:                             ; CODE XREF: sub_40D700+136↑j
.text:0040E50D                 cmp     eax, 69h ; 'i'
.text:0040E510                 jnz     loc_40D845
.text:0040E516                 cmp     byte ptr [edx+2], 42h ; 'B'
.text:0040E51A                 jnz     loc_40D845
.text:0040E520                 mov     edi, 3
.text:0040E525                 mov     [esp+0FCh+var_2C], edi
.text:0040E52C                 jmp     loc_40D845
.text:0040E531 ; ---------------------------------------------------------------------------
.text:0040E531
.text:0040E531 loc_40E531:                             ; CODE XREF: sub_40D700+11D↑j
.text:0040E531                 mov     edx, [ebp+0]
.text:0040E534                 jmp     loc_40D845
.text:0040E534 ; ---------------------------------------------------------------------------
.text:0040E539                 align 10h
.text:0040E540
.text:0040E540 loc_40E540:                             ; CODE XREF: sub_40D700+7D↑j
.text:0040E540                 call    _errno
.text:0040E545                 cmp     dword ptr [eax], 22h ; '"'
.text:0040E548                 jnz     short loc_40E560
.text:0040E54A                 mov     ebx, 1
.text:0040E54F                 mov     [esp+0FCh+var_28], ebx
.text:0040E556                 jmp     loc_40D783
.text:0040E556 ; ---------------------------------------------------------------------------
.text:0040E55B                 align 10h
.text:0040E560
.text:0040E560 loc_40E560:                             ; CODE XREF: sub_40D700+E48↑j
.text:0040E560                                         ; sub_40D700+E72↓j ...
.text:0040E560                 mov     eax, 4
.text:0040E565                 jmp     loc_40D7B3
.text:0040E565 ; ---------------------------------------------------------------------------
.text:0040E56A                 align 10h
.text:0040E570
.text:0040E570 loc_40E570:                             ; CODE XREF: sub_40D700+6E↑j
.text:0040E570                 test    edi, edi
.text:0040E572                 jz      short loc_40E560
.text:0040E574                 movzx   eax, byte ptr [eax]
.text:0040E577                 test    al, al
.text:0040E579                 jz      short loc_40E560
.text:0040E57B                 mov     [esp+0FCh+Str], edi ; Str
.text:0040E57E                 movsx   edx, al
.text:0040E581                 mov     [esp+0FCh+Val], edx ; Val
.text:0040E585                 call    strchr
.text:0040E58A                 test    eax, eax
.text:0040E58C                 jz      short loc_40E560
.text:0040E58E                 mov     ecx, 1
.text:0040E593                 xor     eax, eax
.text:0040E595                 mov     [esp+0FCh+var_24], ecx
.text:0040E59C                 mov     [esp+0FCh+var_20], eax
.text:0040E5A3                 jmp     loc_40D783
.text:0040E5A8 ; ---------------------------------------------------------------------------
.text:0040E5A8
.text:0040E5A8 loc_40E5A8:                             ; CODE XREF: sub_40D700+3A↑j
.text:0040E5A8                 lea     ebp, [esp+0FCh+var_18]
.text:0040E5AF                 jmp     loc_40D740
.text:0040E5B4 ; ---------------------------------------------------------------------------
.text:0040E5B4
.text:0040E5B4 loc_40E5B4:                             ; CODE XREF: sub_40D700+2B↑j
.text:0040E5B4                 mov     [esp+0FCh+Radix], 70h ; 'p'
.text:0040E5BC                 mov     [esp+0FCh+Val], offset loc_40D690
.text:0040E5C4                 mov     [esp+0FCh+Str], offset loc_40D6D0
.text:0040E5CB                 call    _assert
.text:0040E5CB sub_40D700      endp
.text:0040E5CB
.text:0040E5D0 ; ---------------------------------------------------------------------------
.text:0040E5D0                 sub     esp, 0Ch
.text:0040E5D3                 xor     edx, edx
.text:0040E5D5                 mov     ecx, [esp+14h]
.text:0040E5D9                 mov     [esp+8], ebx
.text:0040E5DD                 mov     eax, 0FFFFFFFFh
.text:0040E5E2                 mov     ebx, [esp+10h]
.text:0040E5E6                 div     ecx
.text:0040E5E8                 cmp     eax, ebx
.text:0040E5EA                 jb      short loc_40E609
.text:0040E5EC                 mov     edx, ebx
.text:0040E5EE                 imul    edx, ecx
.text:0040E5F1                 mov     [esp], edx
.text:0040E5F4                 call    malloc
.text:0040E5F9                 test    eax, eax
.text:0040E5FB                 jz      short loc_40E605
.text:0040E5FD
.text:0040E5FD loc_40E5FD:                             ; CODE XREF: .text:0040E607↓j
.text:0040E5FD                 mov     ebx, [esp+8]
.text:0040E601                 add     esp, 0Ch
.text:0040E604                 retn
.text:0040E605 ; ---------------------------------------------------------------------------
.text:0040E605
.text:0040E605 loc_40E605:                             ; CODE XREF: .text:0040E5FB↑j
.text:0040E605                 test    ebx, ebx
.text:0040E607                 jz      short loc_40E5FD
.text:0040E609
.text:0040E609 loc_40E609:                             ; CODE XREF: .text:0040E5EA↑j
.text:0040E609                 call    sub_402790
.text:0040E609 ; ---------------------------------------------------------------------------
.text:0040E60E                 align 10h
.text:0040E610
.text:0040E610 ; =============== S U B R O U T I N E =======================================
.text:0040E610
.text:0040E610
.text:0040E610 ; int __cdecl sub_40E610(size_t)
.text:0040E610 sub_40E610      proc near               ; CODE XREF: sub_4018C0+299↑p
.text:0040E610                                         ; sub_402820+52↑p ...
.text:0040E610
.text:0040E610 Size            = dword ptr -0Ch
.text:0040E610 var_4           = dword ptr -4
.text:0040E610 arg_0           = dword ptr  4
.text:0040E610
.text:0040E610                 sub     esp, 0Ch
.text:0040E613                 mov     [esp+0Ch+var_4], ebx
.text:0040E617                 mov     ebx, [esp+0Ch+arg_0]
.text:0040E61B                 mov     [esp+0Ch+Size], ebx ; Size
.text:0040E61E                 call    malloc
.text:0040E623                 test    eax, eax
.text:0040E625                 jz      short loc_40E630
.text:0040E627
.text:0040E627 loc_40E627:                             ; CODE XREF: sub_40E610+22↓j
.text:0040E627                 mov     ebx, [esp+0Ch+var_4]
.text:0040E62B                 add     esp, 0Ch
.text:0040E62E                 retn
.text:0040E62E ; ---------------------------------------------------------------------------
.text:0040E62F                 align 10h
.text:0040E630
.text:0040E630 loc_40E630:                             ; CODE XREF: sub_40E610+15↑j
.text:0040E630                 test    ebx, ebx
.text:0040E632                 jz      short loc_40E627
.text:0040E634                 call    sub_402790
.text:0040E634 sub_40E610      endp
.text:0040E634
.text:0040E634 ; ---------------------------------------------------------------------------
.text:0040E639                 align 10h
.text:0040E640                 sub     esp, 1Ch
.text:0040E643                 xor     edx, edx
.text:0040E645                 mov     eax, 0FFFFFFFFh
.text:0040E64A                 mov     [esp+14h], ebx
.text:0040E64E                 mov     ecx, [esp+20h]
.text:0040E652                 mov     ebx, [esp+28h]
.text:0040E656                 mov     [esp+18h], esi
.text:0040E65A                 mov     esi, [esp+24h]
.text:0040E65E                 div     ebx
.text:0040E660                 cmp     eax, esi
.text:0040E662                 jb      short loc_40E694
.text:0040E664                 mov     [esp], ecx
.text:0040E667                 mov     edx, esi
.text:0040E669                 imul    edx, ebx
.text:0040E66C                 mov     [esp+4], edx
.text:0040E670                 call    realloc
.text:0040E675                 test    eax, eax
.text:0040E677                 mov     ecx, eax
.text:0040E679                 jz      short loc_40E690
.text:0040E67B
.text:0040E67B loc_40E67B:                             ; CODE XREF: .text:0040E692↓j
.text:0040E67B                 mov     ebx, [esp+14h]
.text:0040E67F                 mov     eax, ecx
.text:0040E681                 mov     esi, [esp+18h]
.text:0040E685                 add     esp, 1Ch
.text:0040E688                 retn
.text:0040E688 ; ---------------------------------------------------------------------------
.text:0040E689                 align 10h
.text:0040E690
.text:0040E690 loc_40E690:                             ; CODE XREF: .text:0040E679↑j
.text:0040E690                 test    esi, esi
.text:0040E692                 jz      short loc_40E67B
.text:0040E694
.text:0040E694 loc_40E694:                             ; CODE XREF: .text:0040E662↑j
.text:0040E694                 call    sub_402790
.text:0040E694 ; ---------------------------------------------------------------------------
.text:0040E699                 align 10h
.text:0040E6A0
.text:0040E6A0 ; =============== S U B R O U T I N E =======================================
.text:0040E6A0
.text:0040E6A0
.text:0040E6A0 ; int __cdecl sub_40E6A0(void *, size_t)
.text:0040E6A0 sub_40E6A0      proc near               ; CODE XREF: sub_40FB50+5B↓p
.text:0040E6A0
.text:0040E6A0 Block           = dword ptr -0Ch
.text:0040E6A0 Size            = dword ptr -8
.text:0040E6A0 var_4           = dword ptr -4
.text:0040E6A0 arg_0           = dword ptr  4
.text:0040E6A0 arg_4           = dword ptr  8
.text:0040E6A0
.text:0040E6A0                 sub     esp, 0Ch
.text:0040E6A3                 mov     edx, [esp+0Ch+arg_0]
.text:0040E6A7                 mov     [esp+0Ch+var_4], ebx
.text:0040E6AB                 mov     ebx, [esp+0Ch+arg_4]
.text:0040E6AF                 mov     [esp+0Ch+Block], edx ; Block
.text:0040E6B2                 mov     [esp+0Ch+Size], ebx ; Size
.text:0040E6B6                 call    realloc
.text:0040E6BB                 test    eax, eax
.text:0040E6BD                 jz      short loc_40E6C7
.text:0040E6BF
.text:0040E6BF loc_40E6BF:                             ; CODE XREF: sub_40E6A0+29↓j
.text:0040E6BF                 mov     ebx, [esp+0Ch+var_4]
.text:0040E6C3                 add     esp, 0Ch
.text:0040E6C6                 retn
.text:0040E6C7 ; ---------------------------------------------------------------------------
.text:0040E6C7
.text:0040E6C7 loc_40E6C7:                             ; CODE XREF: sub_40E6A0+1D↑j
.text:0040E6C7                 test    ebx, ebx
.text:0040E6C9                 jz      short loc_40E6BF
.text:0040E6CB                 call    sub_402790
.text:0040E6CB sub_40E6A0      endp
.text:0040E6CB
.text:0040E6D0
.text:0040E6D0 ; =============== S U B R O U T I N E =======================================
.text:0040E6D0
.text:0040E6D0 ; Attributes: thunk
.text:0040E6D0
.text:0040E6D0 ; int __cdecl sub_40E6D0(void *, int, int)
.text:0040E6D0 sub_40E6D0      proc near               ; CODE XREF: sub_403200+3B5↑p
.text:0040E6D0                                         ; sub_403D90+199↑p
.text:0040E6D0                 jmp     sub_40E820
.text:0040E6D0 sub_40E6D0      endp
.text:0040E6D0
.text:0040E6D0 ; ---------------------------------------------------------------------------
.text:0040E6D5                 align 10h
.text:0040E6E0                 sub     esp, 0Ch
.text:0040E6E3                 mov     edx, [esp+14h]
.text:0040E6E7                 mov     dword ptr [esp+8], 1
.text:0040E6EF                 mov     [esp+4], edx
.text:0040E6F3                 mov     edx, [esp+10h]
.text:0040E6F7                 mov     [esp], edx
.text:0040E6FA                 call    sub_40E820
.text:0040E6FF                 add     esp, 0Ch
.text:0040E702                 retn
.text:0040E702 ; ---------------------------------------------------------------------------
.text:0040E703                 align 10h
.text:0040E710                 sub     esp, 1Ch
.text:0040E713                 mov     [esp+18h], ebx
.text:0040E717                 mov     ebx, [esp+20h]
.text:0040E71B                 mov     [esp], ebx
.text:0040E71E                 call    malloc
.text:0040E723                 test    eax, eax
.text:0040E725                 jz      short loc_40E743
.text:0040E727
.text:0040E727 loc_40E727:                             ; CODE XREF: .text:0040E745↓j
.text:0040E727                 mov     [esp+8], ebx
.text:0040E72B                 mov     dword ptr [esp+4], 0
.text:0040E733                 mov     [esp], eax
.text:0040E736                 call    memset
.text:0040E73B                 mov     ebx, [esp+18h]
.text:0040E73F                 add     esp, 1Ch
.text:0040E742                 retn
.text:0040E743 ; ---------------------------------------------------------------------------
.text:0040E743
.text:0040E743 loc_40E743:                             ; CODE XREF: .text:0040E725↑j
.text:0040E743                 test    ebx, ebx
.text:0040E745                 jz      short loc_40E727
.text:0040E747                 call    sub_402790
.text:0040E747 ; ---------------------------------------------------------------------------
.text:0040E74C                 align 10h
.text:0040E750                 sub     esp, 0Ch
.text:0040E753                 xor     edx, edx
.text:0040E755                 mov     ecx, [esp+14h]
.text:0040E759                 mov     [esp+8], ebx
.text:0040E75D                 mov     eax, 0FFFFFFFFh
.text:0040E762                 mov     ebx, [esp+10h]
.text:0040E766                 div     ecx
.text:0040E768                 cmp     eax, ebx
.text:0040E76A                 jb      short loc_40E788
.text:0040E76C                 mov     [esp+4], ecx
.text:0040E770                 mov     [esp], ebx
.text:0040E773                 call    calloc
.text:0040E778                 test    eax, eax
.text:0040E77A                 jz      short loc_40E784
.text:0040E77C
.text:0040E77C loc_40E77C:                             ; CODE XREF: .text:0040E786↓j
.text:0040E77C                 mov     ebx, [esp+8]
.text:0040E780                 add     esp, 0Ch
.text:0040E783                 retn
.text:0040E784 ; ---------------------------------------------------------------------------
.text:0040E784
.text:0040E784 loc_40E784:                             ; CODE XREF: .text:0040E77A↑j
.text:0040E784                 test    ebx, ebx
.text:0040E786                 jz      short loc_40E77C
.text:0040E788
.text:0040E788 loc_40E788:                             ; CODE XREF: .text:0040E76A↑j
.text:0040E788                 call    sub_402790
.text:0040E788 ; ---------------------------------------------------------------------------
.text:0040E78D                 align 10h
.text:0040E790                 sub     esp, 1Ch
.text:0040E793                 mov     [esp+18h], ebx
.text:0040E797                 mov     ebx, [esp+24h]
.text:0040E79B                 mov     [esp], ebx
.text:0040E79E                 call    malloc
.text:0040E7A3                 test    eax, eax
.text:0040E7A5                 mov     edx, eax
.text:0040E7A7                 jz      short loc_40E7C5
.text:0040E7A9
.text:0040E7A9 loc_40E7A9:                             ; CODE XREF: .text:0040E7C7↓j
.text:0040E7A9                 mov     [esp+8], ebx
.text:0040E7AD                 mov     ecx, [esp+20h]
.text:0040E7B1                 mov     [esp], edx
.text:0040E7B4                 mov     [esp+4], ecx
.text:0040E7B8                 call    memcpy
.text:0040E7BD                 mov     ebx, [esp+18h]
.text:0040E7C1                 add     esp, 1Ch
.text:0040E7C4                 retn
.text:0040E7C5 ; ---------------------------------------------------------------------------
.text:0040E7C5
.text:0040E7C5 loc_40E7C5:                             ; CODE XREF: .text:0040E7A7↑j
.text:0040E7C5                 test    ebx, ebx
.text:0040E7C7                 jz      short loc_40E7A9
.text:0040E7C9                 call    sub_402790
.text:0040E7C9 ; ---------------------------------------------------------------------------
.text:0040E7CE                 align 10h
.text:0040E7D0                 sub     esp, 1Ch
.text:0040E7D3                 mov     [esp+18h], esi
.text:0040E7D7                 mov     esi, [esp+20h]
.text:0040E7DB                 mov     [esp+14h], ebx
.text:0040E7DF                 mov     [esp], esi
.text:0040E7E2                 call    strlen
.text:0040E7E7                 lea     ebx, [eax+1]
.text:0040E7EA                 mov     [esp], ebx
.text:0040E7ED                 call    malloc
.text:0040E7F2                 test    eax, eax
.text:0040E7F4                 jz      short loc_40E812
.text:0040E7F6
.text:0040E7F6 loc_40E7F6:                             ; CODE XREF: .text:0040E814↓j
.text:0040E7F6                 mov     [esp+8], ebx
.text:0040E7FA                 mov     [esp+4], esi
.text:0040E7FE                 mov     [esp], eax
.text:0040E801                 call    memcpy
.text:0040E806                 mov     ebx, [esp+14h]
.text:0040E80A                 mov     esi, [esp+18h]
.text:0040E80E                 add     esp, 1Ch
.text:0040E811                 retn
.text:0040E812 ; ---------------------------------------------------------------------------
.text:0040E812
.text:0040E812 loc_40E812:                             ; CODE XREF: .text:0040E7F4↑j
.text:0040E812                 test    ebx, ebx
.text:0040E814                 jz      short loc_40E7F6
.text:0040E816                 call    sub_402790
.text:0040E816 ; ---------------------------------------------------------------------------
.text:0040E81B                 align 10h
.text:0040E820
.text:0040E820 ; =============== S U B R O U T I N E =======================================
.text:0040E820
.text:0040E820
.text:0040E820 ; int __cdecl sub_40E820(void *, int, int)
.text:0040E820 sub_40E820      proc near               ; CODE XREF: sub_40E6D0↑j
.text:0040E820                                         ; .text:0040E6FA↑p
.text:0040E820
.text:0040E820 Block           = dword ptr -1Ch
.text:0040E820 Size            = dword ptr -18h
.text:0040E820 var_C           = dword ptr -0Ch
.text:0040E820 var_8           = dword ptr -8
.text:0040E820 var_4           = dword ptr -4
.text:0040E820 arg_0           = dword ptr  4
.text:0040E820 arg_4           = dword ptr  8
.text:0040E820 arg_8           = dword ptr  0Ch
.text:0040E820
.text:0040E820                 sub     esp, 1Ch
.text:0040E823                 mov     [esp+1Ch+var_8], esi
.text:0040E827                 mov     esi, [esp+1Ch+arg_0]
.text:0040E82B                 mov     [esp+1Ch+var_4], edi
.text:0040E82F                 mov     edi, [esp+1Ch+arg_4]
.text:0040E833                 test    esi, esi
.text:0040E835                 mov     [esp+1Ch+var_C], ebx
.text:0040E839                 mov     ecx, [edi]
.text:0040E83B                 mov     ebx, [esp+1Ch+arg_8]
.text:0040E83F                 jz      short loc_40E880
.text:0040E841                 xor     edx, edx
.text:0040E843                 mov     eax, 7FFFFFFFh
.text:0040E848                 div     ebx
.text:0040E84A                 cmp     eax, ecx
.text:0040E84C                 jb      short loc_40E879
.text:0040E84E                 add     ecx, ecx
.text:0040E850
.text:0040E850 loc_40E850:                             ; CODE XREF: sub_40E820+62↓j
.text:0040E850                                         ; sub_40E820+71↓j ...
.text:0040E850                 mov     [edi], ecx
.text:0040E852                 imul    ebx, ecx
.text:0040E855                 mov     [esp+1Ch+Block], esi ; Block
.text:0040E858                 mov     [esp+1Ch+Size], ebx ; Size
.text:0040E85C                 call    realloc
.text:0040E861                 test    eax, eax
.text:0040E863                 jz      short loc_40E875
.text:0040E865
.text:0040E865 loc_40E865:                             ; CODE XREF: sub_40E820+57↓j
.text:0040E865                 mov     ebx, [esp+1Ch+var_C]
.text:0040E869                 mov     esi, [esp+1Ch+var_8]
.text:0040E86D                 mov     edi, [esp+1Ch+var_4]
.text:0040E871                 add     esp, 1Ch
.text:0040E874                 retn
.text:0040E875 ; ---------------------------------------------------------------------------
.text:0040E875
.text:0040E875 loc_40E875:                             ; CODE XREF: sub_40E820+43↑j
.text:0040E875                 test    ebx, ebx
.text:0040E877                 jz      short loc_40E865
.text:0040E879
.text:0040E879 loc_40E879:                             ; CODE XREF: sub_40E820+2C↑j
.text:0040E879                 call    sub_402790
.text:0040E879 ; ---------------------------------------------------------------------------
.text:0040E87E                 align 10h
.text:0040E880
.text:0040E880 loc_40E880:                             ; CODE XREF: sub_40E820+1F↑j
.text:0040E880                 test    ecx, ecx
.text:0040E882                 jnz     short loc_40E850
.text:0040E884                 xor     edx, edx
.text:0040E886                 mov     eax, 40h ; '@'
.text:0040E88B                 div     ebx
.text:0040E88D                 test    eax, eax
.text:0040E88F                 mov     ecx, eax
.text:0040E891                 jnz     short loc_40E850
.text:0040E893                 mov     ecx, 1
.text:0040E898                 jmp     short loc_40E850
.text:0040E898 sub_40E820      endp
.text:0040E898
.text:0040E898 ; ---------------------------------------------------------------------------
.text:0040E89A                 align 10h
.text:0040E8A0
.text:0040E8A0 ; =============== S U B R O U T I N E =======================================
.text:0040E8A0
.text:0040E8A0
.text:0040E8A0 sub_40E8A0      proc near               ; CODE XREF: sub_4015E0+6F↑p
.text:0040E8A0                                         ; sub_4018C0+56C↑p ...
.text:0040E8A0
.text:0040E8A0 var_1C          = dword ptr -1Ch
.text:0040E8A0 var_18          = dword ptr -18h
.text:0040E8A0 var_14          = dword ptr -14h
.text:0040E8A0 var_10          = dword ptr -10h
.text:0040E8A0 arg_0           = dword ptr  4
.text:0040E8A0 arg_4           = dword ptr  8
.text:0040E8A0 arg_8           = dword ptr  0Ch
.text:0040E8A0
.text:0040E8A0                 push    edi
.text:0040E8A1                 push    esi
.text:0040E8A2                 push    ebx
.text:0040E8A3                 sub     esp, 10h
.text:0040E8A6                 mov     edx, [esp+1Ch+arg_8]
.text:0040E8AA                 mov     ebx, [esp+1Ch+arg_0]
.text:0040E8AE                 mov     esi, [esp+1Ch+arg_4]
.text:0040E8B2                 lea     edi, [edx+15h]
.text:0040E8B5                 mov     byte ptr [edx+15h], 0
.text:0040E8B9                 lea     esi, [esi+0]
.text:0040E8C0
.text:0040E8C0 loc_40E8C0:                             ; CODE XREF: sub_40E8A0+63↓j
.text:0040E8C0                 mov     [esp+1Ch+var_1C], ebx
.text:0040E8C3                 dec     edi
.text:0040E8C4                 mov     [esp+1Ch+var_18], esi
.text:0040E8C8                 mov     [esp+1Ch+var_14], 0Ah
.text:0040E8D0                 mov     [esp+1Ch+var_10], 0
.text:0040E8D8                 call    sub_410D90
.text:0040E8DD                 add     al, 30h ; '0'
.text:0040E8DF                 mov     [edi], al
.text:0040E8E1                 mov     [esp+1Ch+var_1C], ebx
.text:0040E8E4                 mov     [esp+1Ch+var_18], esi
.text:0040E8E8                 mov     [esp+1Ch+var_14], 0Ah
.text:0040E8F0                 mov     [esp+1Ch+var_10], 0
.text:0040E8F8                 call    sub_410B10
.text:0040E8FD                 mov     ebx, eax
.text:0040E8FF                 mov     esi, edx
.text:0040E901                 or      edx, ebx
.text:0040E903                 jnz     short loc_40E8C0
.text:0040E905                 add     esp, 10h
.text:0040E908                 mov     eax, edi
.text:0040E90A                 pop     ebx
.text:0040E90B                 pop     esi
.text:0040E90C                 pop     edi
.text:0040E90D                 retn
.text:0040E90D sub_40E8A0      endp
.text:0040E90D
.text:0040E90D ; ---------------------------------------------------------------------------
.text:0040E90E                 align 10h
.text:0040E910
.text:0040E910 ; =============== S U B R O U T I N E =======================================
.text:0040E910
.text:0040E910
.text:0040E910 sub_40E910      proc near               ; CODE XREF: sub_402820+171↑p
.text:0040E910
.text:0040E910 FileHandle      = dword ptr -1Ch
.text:0040E910 DstBuf          = dword ptr -18h
.text:0040E910 MaxCharCount    = dword ptr -14h
.text:0040E910 arg_0           = dword ptr  4
.text:0040E910 arg_4           = dword ptr  8
.text:0040E910 arg_8           = dword ptr  0Ch
.text:0040E910
.text:0040E910                 push    ebp
.text:0040E911                 push    edi
.text:0040E912                 push    esi
.text:0040E913                 push    ebx
.text:0040E914                 sub     esp, 0Ch
.text:0040E917                 mov     ebp, [esp+1Ch+arg_0]
.text:0040E91B                 mov     edi, [esp+1Ch+arg_4]
.text:0040E91F                 mov     ebx, [esp+1Ch+arg_8]
.text:0040E923                 lea     esi, [esi+0]
.text:0040E929                 lea     edi, [edi+0]
.text:0040E930
.text:0040E930 loc_40E930:                             ; CODE XREF: sub_40E910+3E↓j
.text:0040E930                                         ; sub_40E910+57↓j
.text:0040E930                 mov     [esp+1Ch+MaxCharCount], ebx ; MaxCharCount
.text:0040E934                 mov     [esp+1Ch+DstBuf], edi ; DstBuf
.text:0040E938                 mov     [esp+1Ch+FileHandle], ebp ; FileHandle
.text:0040E93B                 call    _read
.text:0040E940                 test    eax, eax
.text:0040E942                 mov     esi, eax
.text:0040E944                 jns     short loc_40E969
.text:0040E946                 call    _errno
.text:0040E94B                 cmp     dword ptr [eax], 4
.text:0040E94E                 jz      short loc_40E930
.text:0040E950                 call    _errno
.text:0040E955                 cmp     dword ptr [eax], 16h
.text:0040E958                 jnz     short loc_40E969
.text:0040E95A                 cmp     ebx, 7FFFE000h
.text:0040E960                 jbe     short loc_40E969
.text:0040E962                 mov     ebx, 7FFFE000h
.text:0040E967                 jmp     short loc_40E930
.text:0040E969 ; ---------------------------------------------------------------------------
.text:0040E969
.text:0040E969 loc_40E969:                             ; CODE XREF: sub_40E910+34↑j
.text:0040E969                                         ; sub_40E910+48↑j ...
.text:0040E969                 add     esp, 0Ch
.text:0040E96C                 mov     eax, esi
.text:0040E96E                 pop     ebx
.text:0040E96F                 pop     esi
.text:0040E970                 pop     edi
.text:0040E971                 pop     ebp
.text:0040E972                 retn
.text:0040E972 sub_40E910      endp
.text:0040E972
.text:0040E972 ; ---------------------------------------------------------------------------
.text:0040E973                 align 10h
.text:0040E980 aLiteral        db 'literal',0          ; DATA XREF: .text:0040E9C0↓o
.text:0040E988 aShell          db 'shell',0            ; DATA XREF: .text:0040E9C4↓o
.text:0040E98E aShellAlways    db 'shell-always',0     ; DATA XREF: .text:0040E9C8↓o
.text:0040E99B aC              db 'c',0                ; DATA XREF: .text:0040E9CC↓o
.text:0040E99D aEscape         db 'escape',0           ; DATA XREF: .text:0040E9D0↓o
.text:0040E9A4 aLocale         db 'locale',0           ; DATA XREF: .text:0040E9D4↓o
.text:0040E9AB aClocale        db 'clocale',0          ; DATA XREF: .text:0040E9D8↓o
.text:0040E9B3                 align 10h
.text:0040E9C0                 dd offset aLiteral      ; "literal"
.text:0040E9C4                 dd offset aShell        ; "shell"
.text:0040E9C8                 dd offset aShellAlways  ; "shell-always"
.text:0040E9CC                 dd offset aC            ; "c"
.text:0040E9D0                 dd offset aEscape       ; "escape"
.text:0040E9D4                 dd offset aLocale       ; "locale"
.text:0040E9D8                 dd offset aClocale      ; "clocale"
.text:0040E9DC                 dd 2 dup(0)
.text:0040E9E4                 dd 1, 2, 3, 4, 5, 6
.text:0040E9FC asc_40E9FC:                             ; DATA XREF: sub_40EA10+7E↓o
.text:0040E9FC                                         ; sub_40EA10+A39↓o ...
.text:0040E9FC                 text "UTF-16LE", '"',27h,'`'
.text:0040EA02                 align 10h
.text:0040EA10
.text:0040EA10 ; =============== S U B R O U T I N E =======================================
.text:0040EA10
.text:0040EA10
.text:0040EA10 ; int __cdecl sub_40EA10(int, int, char *Str, int, int, int)
.text:0040EA10 sub_40EA10      proc near               ; CODE XREF: sub_40EA10+43A↓p
.text:0040EA10                                         ; .text:0040F5D3↓p ...
.text:0040EA10
.text:0040EA10 C               = dword ptr -4Ch
.text:0040EA10 Type            = dword ptr -48h
.text:0040EA10 SizeInBytes     = dword ptr -44h
.text:0040EA10 State           = dword ptr -40h
.text:0040EA10 var_3C          = dword ptr -3Ch
.text:0040EA10 var_38          = dword ptr -38h
.text:0040EA10 var_34          = dword ptr -34h
.text:0040EA10 var_30          = dword ptr -30h
.text:0040EA10 var_29          = byte ptr -29h
.text:0040EA10 var_28          = dword ptr -28h
.text:0040EA10 var_22          = byte ptr -22h
.text:0040EA10 var_21          = byte ptr -21h
.text:0040EA10 var_20          = dword ptr -20h
.text:0040EA10 var_1C          = dword ptr -1Ch
.text:0040EA10 var_18          = mbstate_t ptr -18h
.text:0040EA10 arg_0           = dword ptr  4
.text:0040EA10 arg_4           = dword ptr  8
.text:0040EA10 Str             = dword ptr  0Ch
.text:0040EA10 arg_C           = dword ptr  10h
.text:0040EA10 arg_10          = dword ptr  14h
.text:0040EA10 arg_14          = dword ptr  18h
.text:0040EA10
.text:0040EA10                 push    ebp
.text:0040EA11                 push    edi
.text:0040EA12                 push    esi
.text:0040EA13                 push    ebx
.text:0040EA14                 sub     esp, 3Ch
.text:0040EA17                 mov     edx, ds:__mb_cur_max
.text:0040EA1D                 mov     [esp+4Ch+var_34], 0
.text:0040EA25                 mov     [esp+4Ch+var_1C], 0
.text:0040EA2D                 cmp     dword ptr [edx], 1
.text:0040EA30                 mov     [esp+4Ch+var_20], 0
.text:0040EA38                 mov     [esp+4Ch+var_21], 0
.text:0040EA3D                 setz    [esp+4Ch+var_22]
.text:0040EA42                 cmp     [esp+4Ch+arg_10], 6 ; switch 7 cases
.text:0040EA47                 ja      short def_40EA4D ; jumptable 0040EA4D default case, cases 0,1
.text:0040EA49                 mov     edx, [esp+4Ch+arg_10]
.text:0040EA4D                 jmp     ds:jpt_40EA4D[edx*4] ; switch jump
.text:0040EA4D ; ---------------------------------------------------------------------------
.text:0040EA54 jpt_40EA4D      dd offset def_40EA4D    ; DATA XREF: sub_40EA10+3D↑r
.text:0040EA54                 dd offset def_40EA4D    ; jump table for switch statement
.text:0040EA54                 dd offset loc_40F395
.text:0040EA54                 dd offset loc_40EA70
.text:0040EA54                 dd offset loc_40F3BB
.text:0040EA54                 dd offset loc_40F3C5
.text:0040EA54                 dd offset loc_40F3C5
.text:0040EA70 ; ---------------------------------------------------------------------------
.text:0040EA70
.text:0040EA70 loc_40EA70:                             ; CODE XREF: sub_40EA10+3D↑j
.text:0040EA70                                         ; DATA XREF: sub_40EA10:jpt_40EA4D↑o
.text:0040EA70                 mov     eax, [esp+4Ch+arg_4] ; jumptable 0040EA4D case 3
.text:0040EA74                 cmp     [esp+4Ch+var_34], eax
.text:0040EA78                 jnb     short loc_40EA81
.text:0040EA7A                 mov     ebx, [esp+4Ch+arg_0]
.text:0040EA7E                 mov     byte ptr [ebx], 22h ; '"'
.text:0040EA81
.text:0040EA81 loc_40EA81:                             ; CODE XREF: sub_40EA10+68↑j
.text:0040EA81                 mov     [esp+4Ch+var_34], 1
.text:0040EA89                 mov     [esp+4Ch+var_21], 1
.text:0040EA8E                 mov     [esp+4Ch+var_1C], offset asc_40E9FC ; "\"'`"
.text:0040EA96
.text:0040EA96 loc_40EA96:                             ; CODE XREF: sub_40EA10+9A6↓j
.text:0040EA96                 mov     [esp+4Ch+var_20], 1
.text:0040EA9E
.text:0040EA9E def_40EA4D:                             ; CODE XREF: sub_40EA10+37↑j
.text:0040EA9E                                         ; sub_40EA10+3D↑j ...
.text:0040EA9E                 xor     ebp, ebp        ; jumptable 0040EA4D default case, cases 0,1
.text:0040EAA0
.text:0040EAA0 loc_40EAA0:                             ; CODE XREF: sub_40EA10+3DB↓j
.text:0040EAA0                 cmp     [esp+4Ch+arg_C], 0FFFFFFFFh
.text:0040EAA5                 jz      loc_40F387
.text:0040EAAB                 cmp     ebp, [esp+4Ch+arg_C]
.text:0040EAAF
.text:0040EAAF loc_40EAAF:                             ; CODE XREF: sub_40EA10+980↓j
.text:0040EAAF                 jz      loc_40F31E
.text:0040EAB5                 cmp     [esp+4Ch+var_21], 0
.text:0040EABA                 jz      short loc_40EB00
.text:0040EABC                 mov     esi, [esp+4Ch+var_20]
.text:0040EAC0                 test    esi, esi
.text:0040EAC2                 jz      short loc_40EB00
.text:0040EAC4                 mov     ecx, [esp+4Ch+var_20]
.text:0040EAC8                 lea     edi, [ecx+ebp]
.text:0040EACB                 cmp     edi, [esp+4Ch+arg_C]
.text:0040EACF                 ja      short loc_40EB00
.text:0040EAD1                 cld
.text:0040EAD2                 mov     ebx, [esp+4Ch+Str]
.text:0040EAD6                 mov     edi, [esp+4Ch+var_1C]
.text:0040EADA                 add     ebx, ebp
.text:0040EADC                 mov     esi, ebx
.text:0040EADE                 cmp     ecx, ecx
.text:0040EAE0                 repe cmpsb
.text:0040EAE2                 jnz     short loc_40EB00
.text:0040EAE4                 mov     edx, [esp+4Ch+arg_4]
.text:0040EAE8                 cmp     [esp+4Ch+var_34], edx
.text:0040EAEC                 jnb     short loc_40EAFA
.text:0040EAEE                 mov     ecx, [esp+4Ch+arg_0]
.text:0040EAF2                 mov     eax, [esp+4Ch+var_34]
.text:0040EAF6                 mov     byte ptr [eax+ecx], 5Ch ; '\'
.text:0040EAFA
.text:0040EAFA loc_40EAFA:                             ; CODE XREF: sub_40EA10+DC↑j
.text:0040EAFA                 inc     [esp+4Ch+var_34]
.text:0040EAFE                 mov     esi, esi
.text:0040EB00
.text:0040EB00 loc_40EB00:                             ; CODE XREF: sub_40EA10+AA↑j
.text:0040EB00                                         ; sub_40EA10+B2↑j ...
.text:0040EB00                 mov     edi, [esp+4Ch+Str]
.text:0040EB04                 movzx   ebx, byte ptr [ebp+edi+0]
.text:0040EB09                 movzx   eax, bl
.text:0040EB0C                 cmp     eax, 7Eh        ; switch 127 cases
.text:0040EB0F                 ja      def_40EB15      ; jumptable 0040EB15 default case, cases 1-6,14-31,64
.text:0040EB15                 jmp     ds:jpt_40EB15[eax*4] ; switch jump
.text:0040EB15 ; ---------------------------------------------------------------------------
.text:0040EB1C jpt_40EB15      dd offset loc_40ED18, offset def_40EB15, offset def_40EB15
.text:0040EB1C                                         ; DATA XREF: sub_40EA10+105↑r
.text:0040EB1C                 dd offset def_40EB15, offset def_40EB15, offset def_40EB15 ; jump table for switch statement
.text:0040EB1C                 dd offset def_40EB15, offset loc_40EDF0, offset loc_40EE0E
.text:0040EB1C                 dd offset loc_40EE12, offset loc_40EE57, offset loc_40EE5B
.text:0040EB1C                 dd offset loc_40EE5F, offset loc_40EE63, offset def_40EB15
.text:0040EB1C                 dd offset def_40EB15, offset def_40EB15, offset def_40EB15
.text:0040EB1C                 dd offset def_40EB15, offset def_40EB15, offset def_40EB15
.text:0040EB1C                 dd offset def_40EB15, offset def_40EB15, offset def_40EB15
.text:0040EB1C                 dd offset def_40EB15, offset def_40EB15, offset def_40EB15
.text:0040EB1C                 dd offset def_40EB15, offset def_40EB15, offset def_40EB15
.text:0040EB1C                 dd offset def_40EB15, offset def_40EB15, offset loc_40F2E8
.text:0040EB1C                 dd offset loc_40F2E8, offset loc_40F2E8, offset loc_40F30A
.text:0040EB1C                 dd offset loc_40F2E8, offset def_40EF12, offset loc_40F2E8
.text:0040EB1C                 dd offset loc_40EE67, offset loc_40F2E8, offset loc_40F2E8
.text:0040EB1C                 dd offset loc_40F2E8, offset def_40EF12, offset def_40EF12
.text:0040EB1C                 dd offset def_40EF12, offset def_40EF12, offset def_40EF12
.text:0040EB1C                 dd offset def_40EF12, offset def_40EF12, offset def_40EF12
.text:0040EB1C                 dd offset def_40EF12, offset def_40EF12, offset def_40EF12
.text:0040EB1C                 dd offset def_40EF12, offset def_40EF12, offset def_40EF12
.text:0040EB1C                 dd offset def_40EF12, offset def_40EF12, offset loc_40F2E8
.text:0040EB1C                 dd offset loc_40F2E8, offset loc_40F2E8, offset loc_40F2E8
.text:0040EB1C                 dd offset loc_40EECC, offset def_40EB15, offset def_40EF12
.text:0040EB1C                 dd offset def_40EF12, offset def_40EF12, offset def_40EF12
.text:0040EB1C                 dd offset def_40EF12, offset def_40EF12, offset def_40EF12
.text:0040EB1C                 dd offset def_40EF12, offset def_40EF12, offset def_40EF12
.text:0040EB1C                 dd offset def_40EF12, offset def_40EF12, offset def_40EF12
.text:0040EB1C                 dd offset def_40EF12, offset def_40EF12, offset def_40EF12
.text:0040EB1C                 dd offset def_40EF12, offset def_40EF12, offset def_40EF12
.text:0040EB1C                 dd offset def_40EF12, offset def_40EF12, offset def_40EF12
.text:0040EB1C                 dd offset def_40EF12, offset def_40EF12, offset def_40EF12
.text:0040EB1C                 dd offset def_40EF12, offset loc_40F2E8, offset loc_40F2E1
.text:0040EB1C                 dd offset def_40EF12, offset loc_40F2E8, offset def_40EF12
.text:0040EB1C                 dd offset loc_40F2E8, offset def_40EF12, offset def_40EF12
.text:0040EB1C                 dd offset def_40EF12, offset def_40EF12, offset def_40EF12
.text:0040EB1C                 dd offset def_40EF12, offset def_40EF12, offset def_40EF12
.text:0040EB1C                 dd offset def_40EF12, offset def_40EF12, offset def_40EF12
.text:0040EB1C                 dd offset def_40EF12, offset def_40EF12, offset def_40EF12
.text:0040EB1C                 dd offset def_40EF12, offset def_40EF12, offset def_40EF12
.text:0040EB1C                 dd offset def_40EF12, offset def_40EF12, offset def_40EF12
.text:0040EB1C                 dd offset def_40EF12, offset def_40EF12, offset def_40EF12
.text:0040EB1C                 dd offset def_40EF12, offset def_40EF12, offset def_40EF12
.text:0040EB1C                 dd offset loc_40F2F8, offset loc_40F2E8, offset loc_40F2F8
.text:0040EB1C                 dd offset loc_40F30A
.text:0040ED18 ; ---------------------------------------------------------------------------
.text:0040ED18
.text:0040ED18 loc_40ED18:                             ; CODE XREF: sub_40EA10+105↑j
.text:0040ED18                                         ; DATA XREF: sub_40EA10:jpt_40EB15↑o
.text:0040ED18                 cmp     [esp+4Ch+var_21], 0 ; jumptable 0040EB15 case 0
.text:0040ED1D                 lea     eax, [ebp+1]
.text:0040ED20                 jz      loc_40EDD0
.text:0040ED26                 mov     esi, [esp+4Ch+arg_4]
.text:0040ED2A                 cmp     [esp+4Ch+var_34], esi
.text:0040ED2E                 jnb     short loc_40ED3C
.text:0040ED30                 mov     eax, [esp+4Ch+arg_0]
.text:0040ED34                 mov     ebx, [esp+4Ch+var_34]
.text:0040ED38                 mov     byte ptr [ebx+eax], 5Ch ; '\'
.text:0040ED3C
.text:0040ED3C loc_40ED3C:                             ; CODE XREF: sub_40EA10+31E↑j
.text:0040ED3C                 inc     [esp+4Ch+var_34]
.text:0040ED40                 mov     edx, [esp+4Ch+arg_4]
.text:0040ED44                 cmp     [esp+4Ch+var_34], edx
.text:0040ED48                 jnb     short loc_40ED56
.text:0040ED4A                 mov     edi, [esp+4Ch+arg_0]
.text:0040ED4E                 mov     ecx, [esp+4Ch+var_34]
.text:0040ED52                 mov     byte ptr [ecx+edi], 30h ; '0'
.text:0040ED56
.text:0040ED56 loc_40ED56:                             ; CODE XREF: sub_40EA10+338↑j
.text:0040ED56                 inc     [esp+4Ch+var_34]
.text:0040ED5A                 mov     esi, [esp+4Ch+arg_4]
.text:0040ED5E                 cmp     [esp+4Ch+var_34], esi
.text:0040ED62                 jnb     short loc_40ED70
.text:0040ED64                 mov     ebx, [esp+4Ch+arg_0]
.text:0040ED68                 mov     eax, [esp+4Ch+var_34]
.text:0040ED6C                 mov     byte ptr [eax+ebx], 30h ; '0'
.text:0040ED70
.text:0040ED70 loc_40ED70:                             ; CODE XREF: sub_40EA10+352↑j
.text:0040ED70                 inc     [esp+4Ch+var_34]
.text:0040ED74                 mov     bl, 30h ; '0'
.text:0040ED76                 lea     esi, [esi+0]
.text:0040ED79                 lea     edi, [edi+0]
.text:0040ED80
.text:0040ED80 def_40EF12:                             ; CODE XREF: sub_40EA10+105↑j
.text:0040ED80                                         ; sub_40EA10+463↓j ...
.text:0040ED80                 cmp     [esp+4Ch+var_21], 0 ; jumptable 0040EB15 cases 37,43-58,65-90,93,95,97-122
.text:0040ED80                                         ; jumptable 0040EF12 default case, cases 34-38,42-44,46,48-59
.text:0040ED85                 lea     eax, [ebp+1]
.text:0040ED88                 jz      short loc_40EDD0
.text:0040ED8A                 mov     cl, bl
.text:0040ED8C                 mov     edi, [esp+4Ch+arg_14]
.text:0040ED90                 mov     esi, 1
.text:0040ED95                 shr     cl, 5
.text:0040ED98                 movzx   edx, cl
.text:0040ED9B                 mov     ecx, ebx
.text:0040ED9D                 and     ecx, 1Fh
.text:0040EDA0                 shl     esi, cl
.text:0040EDA2                 test    [edi+edx*4+4], esi
.text:0040EDA6                 jz      short loc_40EDC2
.text:0040EDA8
.text:0040EDA8 loc_40EDA8:                             ; CODE XREF: sub_40EA10+3FC↓j
.text:0040EDA8                 mov     edx, [esp+4Ch+arg_4]
.text:0040EDAC                 cmp     [esp+4Ch+var_34], edx
.text:0040EDB0                 jnb     short loc_40EDBE
.text:0040EDB2                 mov     edi, [esp+4Ch+arg_0]
.text:0040EDB6                 mov     esi, [esp+4Ch+var_34]
.text:0040EDBA                 mov     byte ptr [esi+edi], 5Ch ; '\'
.text:0040EDBE
.text:0040EDBE loc_40EDBE:                             ; CODE XREF: sub_40EA10+3A0↑j
.text:0040EDBE                 inc     [esp+4Ch+var_34]
.text:0040EDC2
.text:0040EDC2 loc_40EDC2:                             ; CODE XREF: sub_40EA10+396↑j
.text:0040EDC2                 lea     eax, [ebp+1]
.text:0040EDC5                 lea     esi, [esi+0]
.text:0040EDC9                 lea     edi, [edi+0]
.text:0040EDD0
.text:0040EDD0 loc_40EDD0:                             ; CODE XREF: sub_40EA10+310↑j
.text:0040EDD0                                         ; sub_40EA10+378↑j ...
.text:0040EDD0                 mov     ebp, [esp+4Ch+arg_4]
.text:0040EDD4                 cmp     [esp+4Ch+var_34], ebp
.text:0040EDD8                 jnb     short loc_40EDE5
.text:0040EDDA                 mov     edx, [esp+4Ch+arg_0]
.text:0040EDDE                 mov     ecx, [esp+4Ch+var_34]
.text:0040EDE2                 mov     [ecx+edx], bl
.text:0040EDE5
.text:0040EDE5 loc_40EDE5:                             ; CODE XREF: sub_40EA10+3C8↑j
.text:0040EDE5                 inc     [esp+4Ch+var_34]
.text:0040EDE9                 mov     ebp, eax
.text:0040EDEB                 jmp     loc_40EAA0
.text:0040EDF0 ; ---------------------------------------------------------------------------
.text:0040EDF0
.text:0040EDF0 loc_40EDF0:                             ; CODE XREF: sub_40EA10+105↑j
.text:0040EDF0                                         ; DATA XREF: sub_40EA10:jpt_40EB15↑o
.text:0040EDF0                 mov     dl, 61h ; 'a'   ; jumptable 0040EB15 case 7
.text:0040EDF2                 lea     esi, [esi+0]
.text:0040EDF9                 lea     edi, [edi+0]
.text:0040EE00
.text:0040EE00 loc_40EE00:                             ; CODE XREF: sub_40EA10+400↓j
.text:0040EE00                                         ; sub_40EA10+409↓j ...
.text:0040EE00                 cmp     [esp+4Ch+var_21], 0
.text:0040EE05                 lea     eax, [ebp+1]
.text:0040EE08                 jz      short loc_40EDD0
.text:0040EE0A                 mov     bl, dl
.text:0040EE0C                 jmp     short loc_40EDA8
.text:0040EE0E ; ---------------------------------------------------------------------------
.text:0040EE0E
.text:0040EE0E loc_40EE0E:                             ; CODE XREF: sub_40EA10+105↑j
.text:0040EE0E                                         ; DATA XREF: sub_40EA10:jpt_40EB15↑o
.text:0040EE0E                 mov     dl, 62h ; 'b'   ; jumptable 0040EB15 case 8
.text:0040EE10                 jmp     short loc_40EE00
.text:0040EE12 ; ---------------------------------------------------------------------------
.text:0040EE12
.text:0040EE12 loc_40EE12:                             ; CODE XREF: sub_40EA10+105↑j
.text:0040EE12                                         ; DATA XREF: sub_40EA10:jpt_40EB15↑o
.text:0040EE12                 mov     dl, 74h ; 't'   ; jumptable 0040EB15 case 9
.text:0040EE14
.text:0040EE14 loc_40EE14:                             ; CODE XREF: sub_40EA10+449↓j
.text:0040EE14                                         ; sub_40EA10+455↓j ...
.text:0040EE14                 cmp     [esp+4Ch+arg_10], 1
.text:0040EE19                 jnz     short loc_40EE00
.text:0040EE1B
.text:0040EE1B loc_40EE1B:                             ; CODE XREF: sub_40EA10+45C↓j
.text:0040EE1B                                         ; sub_40EA10+4C1↓j ...
.text:0040EE1B                 mov     [esp+4Ch+var_3C], 2 ; jumptable 0040F1E2 cases 91,92,94,96,124
.text:0040EE23                 mov     eax, [esp+4Ch+arg_14]
.text:0040EE27                 mov     edx, [esp+4Ch+arg_C]
.text:0040EE2B                 mov     ecx, [esp+4Ch+Str]
.text:0040EE2F                 mov     ebx, [esp+4Ch+arg_4]
.text:0040EE33                 mov     [esp+4Ch+var_38], eax ; int
.text:0040EE37                 mov     ebp, [esp+4Ch+arg_0]
.text:0040EE3B                 mov     [esp+4Ch+State], edx ; int
.text:0040EE3F                 mov     [esp+4Ch+SizeInBytes], ecx ; Str
.text:0040EE43                 mov     [esp+4Ch+Type], ebx ; int
.text:0040EE47                 mov     [esp+4Ch+C], ebp ; int
.text:0040EE4A                 call    sub_40EA10
.text:0040EE4F
.text:0040EE4F loc_40EE4F:                             ; CODE XREF: sub_40EA10+972↓j
.text:0040EE4F                 add     esp, 3Ch
.text:0040EE52                 pop     ebx
.text:0040EE53                 pop     esi
.text:0040EE54                 pop     edi
.text:0040EE55                 pop     ebp
.text:0040EE56                 retn
.text:0040EE57 ; ---------------------------------------------------------------------------
.text:0040EE57
.text:0040EE57 loc_40EE57:                             ; CODE XREF: sub_40EA10+105↑j
.text:0040EE57                                         ; DATA XREF: sub_40EA10:jpt_40EB15↑o
.text:0040EE57                 mov     dl, 6Eh ; 'n'   ; jumptable 0040EB15 case 10
.text:0040EE59                 jmp     short loc_40EE14
.text:0040EE5B ; ---------------------------------------------------------------------------
.text:0040EE5B
.text:0040EE5B loc_40EE5B:                             ; CODE XREF: sub_40EA10+105↑j
.text:0040EE5B                                         ; DATA XREF: sub_40EA10:jpt_40EB15↑o
.text:0040EE5B                 mov     dl, 76h ; 'v'   ; jumptable 0040EB15 case 11
.text:0040EE5D                 jmp     short loc_40EE00
.text:0040EE5F ; ---------------------------------------------------------------------------
.text:0040EE5F
.text:0040EE5F loc_40EE5F:                             ; CODE XREF: sub_40EA10+105↑j
.text:0040EE5F                                         ; DATA XREF: sub_40EA10:jpt_40EB15↑o
.text:0040EE5F                 mov     dl, 66h ; 'f'   ; jumptable 0040EB15 case 12
.text:0040EE61                 jmp     short loc_40EE00
.text:0040EE63 ; ---------------------------------------------------------------------------
.text:0040EE63
.text:0040EE63 loc_40EE63:                             ; CODE XREF: sub_40EA10+105↑j
.text:0040EE63                                         ; DATA XREF: sub_40EA10:jpt_40EB15↑o
.text:0040EE63                 mov     dl, 72h ; 'r'   ; jumptable 0040EB15 case 13
.text:0040EE65                 jmp     short loc_40EE14
.text:0040EE67 ; ---------------------------------------------------------------------------
.text:0040EE67
.text:0040EE67 loc_40EE67:                             ; CODE XREF: sub_40EA10+105↑j
.text:0040EE67                                         ; DATA XREF: sub_40EA10:jpt_40EB15↑o
.text:0040EE67                 cmp     [esp+4Ch+arg_10], 1 ; jumptable 0040EB15 case 39
.text:0040EE6C                 jz      short loc_40EE1B ; jumptable 0040F1E2 cases 91,92,94,96,124
.text:0040EE6E                 cmp     [esp+4Ch+arg_10], 2
.text:0040EE73                 jnz     def_40EF12      ; jumptable 0040EB15 cases 37,43-58,65-90,93,95,97-122
.text:0040EE73                                         ; jumptable 0040EF12 default case, cases 34-38,42-44,46,48-59
.text:0040EE79                 mov     edx, [esp+4Ch+arg_4]
.text:0040EE7D                 cmp     [esp+4Ch+var_34], edx
.text:0040EE81                 jnb     short loc_40EE8F
.text:0040EE83                 mov     ecx, [esp+4Ch+arg_0]
.text:0040EE87                 mov     edi, [esp+4Ch+var_34]
.text:0040EE8B                 mov     byte ptr [edi+ecx], 27h ; '''
.text:0040EE8F
.text:0040EE8F loc_40EE8F:                             ; CODE XREF: sub_40EA10+471↑j
.text:0040EE8F                 inc     [esp+4Ch+var_34]
.text:0040EE93                 mov     eax, [esp+4Ch+arg_4]
.text:0040EE97                 cmp     [esp+4Ch+var_34], eax
.text:0040EE9B                 jnb     short loc_40EEA9
.text:0040EE9D                 mov     esi, [esp+4Ch+arg_0]
.text:0040EEA1                 mov     edx, [esp+4Ch+var_34]
.text:0040EEA5                 mov     byte ptr [edx+esi], 5Ch ; '\'
.text:0040EEA9
.text:0040EEA9 loc_40EEA9:                             ; CODE XREF: sub_40EA10+48B↑j
.text:0040EEA9                 inc     [esp+4Ch+var_34]
.text:0040EEAD                 mov     edi, [esp+4Ch+arg_4]
.text:0040EEB1                 cmp     [esp+4Ch+var_34], edi
.text:0040EEB5                 jnb     short loc_40EEC3
.text:0040EEB7                 mov     ecx, [esp+4Ch+arg_0]
.text:0040EEBB                 mov     eax, [esp+4Ch+var_34]
.text:0040EEBF                 mov     byte ptr [eax+ecx], 27h ; '''
.text:0040EEC3
.text:0040EEC3 loc_40EEC3:                             ; CODE XREF: sub_40EA10+4A5↑j
.text:0040EEC3                                         ; sub_40EA10+5C4↓j ...
.text:0040EEC3                 inc     [esp+4Ch+var_34]
.text:0040EEC7                 jmp     def_40EF12      ; jumptable 0040EB15 cases 37,43-58,65-90,93,95,97-122
.text:0040EEC7                                         ; jumptable 0040EF12 default case, cases 34-38,42-44,46,48-59
.text:0040EECC ; ---------------------------------------------------------------------------
.text:0040EECC
.text:0040EECC loc_40EECC:                             ; CODE XREF: sub_40EA10+105↑j
.text:0040EECC                                         ; DATA XREF: sub_40EA10:jpt_40EB15↑o
.text:0040EECC                 cmp     [esp+4Ch+arg_10], 1 ; jumptable 0040EB15 case 63
.text:0040EED1                 jz      loc_40EE1B      ; jumptable 0040F1E2 cases 91,92,94,96,124
.text:0040EED7                 cmp     [esp+4Ch+arg_10], 3
.text:0040EEDC                 jnz     def_40EF12      ; jumptable 0040EB15 cases 37,43-58,65-90,93,95,97-122
.text:0040EEDC                                         ; jumptable 0040EF12 default case, cases 34-38,42-44,46,48-59
.text:0040EEE2                 lea     edx, [ebp+2]
.text:0040EEE5                 cmp     edx, [esp+4Ch+arg_C]
.text:0040EEE9                 jnb     def_40EF12      ; jumptable 0040EB15 cases 37,43-58,65-90,93,95,97-122
.text:0040EEE9                                         ; jumptable 0040EF12 default case, cases 34-38,42-44,46,48-59
.text:0040EEEF                 mov     esi, [esp+4Ch+Str]
.text:0040EEF3                 cmp     byte ptr [ebp+esi+1], 3Fh ; '?'
.text:0040EEF8                 jnz     def_40EF12      ; jumptable 0040EB15 cases 37,43-58,65-90,93,95,97-122
.text:0040EEF8                                         ; jumptable 0040EF12 default case, cases 34-38,42-44,46,48-59
.text:0040EEFE                 movzx   ecx, byte ptr [ebp+esi+2]
.text:0040EF03                 movsx   eax, cl
.text:0040EF06                 sub     eax, 21h ; '!'  ; switch 30 cases
.text:0040EF09                 cmp     eax, 1Dh
.text:0040EF0C                 ja      def_40EF12      ; jumptable 0040EB15 cases 37,43-58,65-90,93,95,97-122
.text:0040EF0C                                         ; jumptable 0040EF12 default case, cases 34-38,42-44,46,48-59
.text:0040EF12                 jmp     ds:jpt_40EF12[eax*4] ; switch jump
.text:0040EF12 ; ---------------------------------------------------------------------------
.text:0040EF19                 align 4
.text:0040EF1C jpt_40EF12      dd offset loc_40EF94    ; DATA XREF: sub_40EA10+502↑r
.text:0040EF1C                 dd offset def_40EF12    ; jump table for switch statement
.text:0040EF1C                 dd offset def_40EF12
.text:0040EF1C                 dd offset def_40EF12
.text:0040EF1C                 dd offset def_40EF12
.text:0040EF1C                 dd offset def_40EF12
.text:0040EF1C                 dd offset loc_40EF94
.text:0040EF1C                 dd offset loc_40EF94
.text:0040EF1C                 dd offset loc_40EF94
.text:0040EF1C                 dd offset def_40EF12
.text:0040EF1C                 dd offset def_40EF12
.text:0040EF1C                 dd offset def_40EF12
.text:0040EF1C                 dd offset loc_40EF94
.text:0040EF1C                 dd offset def_40EF12
.text:0040EF1C                 dd offset loc_40EF94
.text:0040EF1C                 dd offset def_40EF12
.text:0040EF1C                 dd offset def_40EF12
.text:0040EF1C                 dd offset def_40EF12
.text:0040EF1C                 dd offset def_40EF12
.text:0040EF1C                 dd offset def_40EF12
.text:0040EF1C                 dd offset def_40EF12
.text:0040EF1C                 dd offset def_40EF12
.text:0040EF1C                 dd offset def_40EF12
.text:0040EF1C                 dd offset def_40EF12
.text:0040EF1C                 dd offset def_40EF12
.text:0040EF1C                 dd offset def_40EF12
.text:0040EF1C                 dd offset def_40EF12
.text:0040EF1C                 dd offset loc_40EF94
.text:0040EF1C                 dd offset loc_40EF94
.text:0040EF1C                 dd offset loc_40EF94
.text:0040EF94 ; ---------------------------------------------------------------------------
.text:0040EF94
.text:0040EF94 loc_40EF94:                             ; CODE XREF: sub_40EA10+502↑j
.text:0040EF94                                         ; DATA XREF: sub_40EA10:jpt_40EF12↑o
.text:0040EF94                 mov     ebp, edx        ; jumptable 0040EF12 cases 33,39-41,45,47,60-62
.text:0040EF96                 mov     bl, cl
.text:0040EF98                 mov     edx, [esp+4Ch+arg_4]
.text:0040EF9C                 cmp     [esp+4Ch+var_34], edx
.text:0040EFA0                 jnb     short loc_40EFAE
.text:0040EFA2                 mov     ecx, [esp+4Ch+arg_0]
.text:0040EFA6                 mov     edi, [esp+4Ch+var_34]
.text:0040EFAA                 mov     byte ptr [edi+ecx], 3Fh ; '?'
.text:0040EFAE
.text:0040EFAE loc_40EFAE:                             ; CODE XREF: sub_40EA10+590↑j
.text:0040EFAE                 inc     [esp+4Ch+var_34]
.text:0040EFB2                 mov     eax, [esp+4Ch+arg_4]
.text:0040EFB6                 cmp     [esp+4Ch+var_34], eax
.text:0040EFBA                 jnb     short loc_40EFC8
.text:0040EFBC                 mov     edx, [esp+4Ch+arg_0]
.text:0040EFC0                 mov     esi, [esp+4Ch+var_34]
.text:0040EFC4                 mov     byte ptr [esi+edx], 5Ch ; '\'
.text:0040EFC8
.text:0040EFC8 loc_40EFC8:                             ; CODE XREF: sub_40EA10+5AA↑j
.text:0040EFC8                 inc     [esp+4Ch+var_34]
.text:0040EFCC                 mov     edi, [esp+4Ch+arg_4]
.text:0040EFD0                 cmp     [esp+4Ch+var_34], edi
.text:0040EFD4                 jnb     loc_40EEC3
.text:0040EFDA                 mov     eax, [esp+4Ch+arg_0]
.text:0040EFDE                 mov     ecx, [esp+4Ch+var_34]
.text:0040EFE2                 mov     byte ptr [ecx+eax], 3Fh ; '?'
.text:0040EFE6                 jmp     loc_40EEC3
.text:0040EFE6 ; ---------------------------------------------------------------------------
.text:0040EFEB                 align 10h
.text:0040EFF0
.text:0040EFF0 def_40EB15:                             ; CODE XREF: sub_40EA10+FF↑j
.text:0040EFF0                                         ; sub_40EA10+105↑j
.text:0040EFF0                                         ; DATA XREF: ...
.text:0040EFF0                 cmp     [esp+4Ch+var_22], 0 ; jumptable 0040EB15 default case, cases 1-6,14-31,64
.text:0040EFF5                 jz      loc_40F120
.text:0040EFFB                 mov     [esp+4Ch+var_28], 1
.text:0040F003                 mov     esi, ds:__mb_cur_max
.text:0040F009                 movzx   edx, bl
.text:0040F00C                 cmp     dword ptr [esi], 1
.text:0040F00F                 jz      loc_40F104
.text:0040F015                 mov     [esp+4Ch+Type], 157h ; Type
.text:0040F01D                 mov     [esp+4Ch+C], edx ; C
.text:0040F020                 call    _isctype
.text:0040F025
.text:0040F025 loc_40F025:                             ; CODE XREF: sub_40EA10+705↓j
.text:0040F025                 test    eax, eax
.text:0040F027                 setnz   [esp+4Ch+var_29]
.text:0040F02C
.text:0040F02C loc_40F02C:                             ; CODE XREF: sub_40EA10+7A5↓j
.text:0040F02C                 cmp     [esp+4Ch+var_21], 0
.text:0040F031                 lea     eax, [ebp+1]
.text:0040F034                 jz      loc_40EDD0
.text:0040F03A                 cmp     [esp+4Ch+var_29], 0
.text:0040F03F                 jnz     def_40EF12      ; jumptable 0040EB15 cases 37,43-58,65-90,93,95,97-122
.text:0040F03F                                         ; jumptable 0040EF12 default case, cases 34-38,42-44,46,48-59
.text:0040F045
.text:0040F045 loc_40F045:                             ; CODE XREF: sub_40EA10+7AB↓j
.text:0040F045                 mov     eax, [esp+4Ch+var_28]
.text:0040F049                 lea     edx, [eax+ebp]
.text:0040F04C                 lea     esi, [esi+0]
.text:0040F050
.text:0040F050 loc_40F050:                             ; CODE XREF: sub_40EA10+6EF↓j
.text:0040F050                 cmp     [esp+4Ch+var_21], 0
.text:0040F055                 jz      short loc_40F0D0
.text:0040F057                 cmp     [esp+4Ch+var_29], 0
.text:0040F05C                 jnz     short loc_40F0D0
.text:0040F05E                 mov     edi, [esp+4Ch+arg_4]
.text:0040F062                 cmp     [esp+4Ch+var_34], edi
.text:0040F066                 jnb     short loc_40F074
.text:0040F068                 mov     esi, [esp+4Ch+arg_0]
.text:0040F06C                 mov     eax, [esp+4Ch+var_34]
.text:0040F070                 mov     byte ptr [eax+esi], 5Ch ; '\'
.text:0040F074
.text:0040F074 loc_40F074:                             ; CODE XREF: sub_40EA10+656↑j
.text:0040F074                 inc     [esp+4Ch+var_34]
.text:0040F078                 mov     ecx, [esp+4Ch+arg_4]
.text:0040F07C                 cmp     [esp+4Ch+var_34], ecx
.text:0040F080                 jnb     short loc_40F095
.text:0040F082                 mov     cl, bl
.text:0040F084                 mov     esi, [esp+4Ch+arg_0]
.text:0040F088                 mov     edi, [esp+4Ch+var_34]
.text:0040F08C                 shr     cl, 6
.text:0040F08F                 add     cl, 30h ; '0'
.text:0040F092                 mov     [edi+esi], cl
.text:0040F095
.text:0040F095 loc_40F095:                             ; CODE XREF: sub_40EA10+670↑j
.text:0040F095                 inc     [esp+4Ch+var_34]
.text:0040F099                 mov     edi, [esp+4Ch+arg_4]
.text:0040F09D                 cmp     [esp+4Ch+var_34], edi
.text:0040F0A1                 jnb     short loc_40F0B9
.text:0040F0A3                 mov     cl, bl
.text:0040F0A5                 mov     esi, [esp+4Ch+arg_0]
.text:0040F0A9                 shr     cl, 3
.text:0040F0AC                 mov     edi, [esp+4Ch+var_34]
.text:0040F0B0                 and     cl, 7
.text:0040F0B3                 add     cl, 30h ; '0'
.text:0040F0B6                 mov     [edi+esi], cl
.text:0040F0B9
.text:0040F0B9 loc_40F0B9:                             ; CODE XREF: sub_40EA10+691↑j
.text:0040F0B9                 inc     [esp+4Ch+var_34]
.text:0040F0BD                 and     bl, 7
.text:0040F0C0                 add     bl, 30h ; '0'
.text:0040F0C3                 lea     esi, [esi+0]
.text:0040F0C9                 lea     edi, [edi+0]
.text:0040F0D0
.text:0040F0D0 loc_40F0D0:                             ; CODE XREF: sub_40EA10+645↑j
.text:0040F0D0                                         ; sub_40EA10+64C↑j
.text:0040F0D0                 lea     eax, [ebp+1]
.text:0040F0D3                 cmp     edx, eax
.text:0040F0D5                 jbe     loc_40EDD0
.text:0040F0DB                 mov     ebp, [esp+4Ch+arg_4]
.text:0040F0DF                 cmp     [esp+4Ch+var_34], ebp
.text:0040F0E3                 jnb     short loc_40F0F0
.text:0040F0E5                 mov     ecx, [esp+4Ch+arg_0]
.text:0040F0E9                 mov     edi, [esp+4Ch+var_34]
.text:0040F0ED                 mov     [edi+ecx], bl
.text:0040F0F0
.text:0040F0F0 loc_40F0F0:                             ; CODE XREF: sub_40EA10+6D3↑j
.text:0040F0F0                 inc     [esp+4Ch+var_34]
.text:0040F0F4                 mov     ebp, eax
.text:0040F0F6                 mov     eax, [esp+4Ch+Str]
.text:0040F0FA                 movzx   ebx, byte ptr [ebp+eax+0]
.text:0040F0FF                 jmp     loc_40F050
.text:0040F104 ; ---------------------------------------------------------------------------
.text:0040F104
.text:0040F104 loc_40F104:                             ; CODE XREF: sub_40EA10+5FF↑j
.text:0040F104                 mov     ecx, ds:_pctype
.text:0040F10A                 mov     edi, [ecx]
.text:0040F10C                 movzx   eax, word ptr [edi+edx*2]
.text:0040F110                 and     eax, 157h
.text:0040F115                 jmp     loc_40F025
.text:0040F115 ; ---------------------------------------------------------------------------
.text:0040F11A                 align 10h
.text:0040F120
.text:0040F120 loc_40F120:                             ; CODE XREF: sub_40EA10+5E5↑j
.text:0040F120                 cmp     [esp+4Ch+arg_C], 0FFFFFFFFh
.text:0040F125                 mov     [esp+4Ch+var_18._Wchar], 0
.text:0040F12D                 mov     [esp+4Ch+var_28], 0
.text:0040F135                 mov     [esp+4Ch+var_29], 1
.text:0040F13A                 jz      loc_40F2CC
.text:0040F140
.text:0040F140 loc_40F140:                             ; CODE XREF: sub_40EA10+8CC↓j
.text:0040F140                 mov     ecx, [esp+4Ch+arg_C]
.text:0040F144                 lea     edx, [esp+4Ch+var_18]
.text:0040F148                 mov     edi, [esp+4Ch+Str]
.text:0040F14C                 mov     [esp+4Ch+State], edx ; State
.text:0040F150                 lea     esi, [esp+4Ch+var_18._State]
.text:0040F154                 sub     ecx, ebp
.text:0040F156                 mov     [esp+4Ch+SizeInBytes], ecx ; SizeInBytes
.text:0040F15A                 add     edi, ebp
.text:0040F15C                 mov     [esp+4Ch+var_30], edi
.text:0040F160                 mov     [esp+4Ch+Type], edi ; SrcCh
.text:0040F164                 mov     [esp+4Ch+C], esi ; DstCh
.text:0040F167                 call    mbrtowc
.text:0040F16C                 test    eax, eax
.text:0040F16E                 mov     edi, eax
.text:0040F170                 jz      short loc_40F1B0
.text:0040F172                 cmp     eax, 0FFFFFFFFh
.text:0040F175                 jz      loc_40F2C2
.text:0040F17B                 cmp     eax, 0FFFFFFFEh
.text:0040F17E                 jz      loc_40F282
.text:0040F184                 cmp     [esp+4Ch+arg_10], 1
.text:0040F189                 jz      short loc_40F1C0
.text:0040F18B
.text:0040F18B loc_40F18B:                             ; CODE XREF: sub_40EA10+7B9↓j
.text:0040F18B                                         ; sub_40EA10+86D↓j
.text:0040F18B                 movzx   ecx, [esp+4Ch+var_18._State]
.text:0040F190                 mov     [esp+4Ch+Type], 157h ; Type
.text:0040F198                 mov     [esp+4Ch+C], ecx ; C
.text:0040F19B                 call    iswctype
.text:0040F1A0                 test    eax, eax
.text:0040F1A2                 jnz     short loc_40F1A9
.text:0040F1A4                 mov     [esp+4Ch+var_29], 0
.text:0040F1A9
.text:0040F1A9 loc_40F1A9:                             ; CODE XREF: sub_40EA10+792↑j
.text:0040F1A9                 mov     [esp+4Ch+var_28], edi
.text:0040F1AD                 lea     esi, [esi+0]
.text:0040F1B0
.text:0040F1B0 loc_40F1B0:                             ; CODE XREF: sub_40EA10+760↑j
.text:0040F1B0                                         ; sub_40EA10+87B↓j ...
.text:0040F1B0                 cmp     [esp+4Ch+var_28], 1
.text:0040F1B5                 jbe     loc_40F02C
.text:0040F1BB                 jmp     loc_40F045
.text:0040F1C0 ; ---------------------------------------------------------------------------
.text:0040F1C0
.text:0040F1C0 loc_40F1C0:                             ; CODE XREF: sub_40EA10+779↑j
.text:0040F1C0                 cmp     [esp+4Ch+arg_10], eax
.text:0040F1C4                 mov     edx, 1
.text:0040F1C9                 jnb     short loc_40F18B
.text:0040F1CB
.text:0040F1CB loc_40F1CB:                             ; CODE XREF: sub_40EA10+867↓j
.text:0040F1CB                 mov     ecx, [esp+4Ch+Str]
.text:0040F1CF                 lea     esi, [edx+ebp]
.text:0040F1D2                 movsx   eax, byte ptr [esi+ecx]
.text:0040F1D6                 sub     eax, 5Bh ; '['  ; switch 34 cases
.text:0040F1D9                 cmp     eax, 21h
.text:0040F1DC                 ja      def_40F1E2      ; jumptable 0040F1E2 default case, cases 93,95,97-123
.text:0040F1E2                 jmp     ds:jpt_40F1E2[eax*4] ; switch jump
.text:0040F1E2 ; ---------------------------------------------------------------------------
.text:0040F1E9                 align 4
.text:0040F1EC jpt_40F1E2      dd offset loc_40EE1B    ; DATA XREF: sub_40EA10+7D2↑r
.text:0040F1EC                 dd offset loc_40EE1B    ; jump table for switch statement
.text:0040F1EC                 dd offset def_40F1E2
.text:0040F1EC                 dd offset loc_40EE1B
.text:0040F1EC                 dd offset def_40F1E2
.text:0040F1EC                 dd offset loc_40EE1B
.text:0040F1EC                 dd offset def_40F1E2
.text:0040F1EC                 dd offset def_40F1E2
.text:0040F1EC                 dd offset def_40F1E2
.text:0040F1EC                 dd offset def_40F1E2
.text:0040F1EC                 dd offset def_40F1E2
.text:0040F1EC                 dd offset def_40F1E2
.text:0040F1EC                 dd offset def_40F1E2
.text:0040F1EC                 dd offset def_40F1E2
.text:0040F1EC                 dd offset def_40F1E2
.text:0040F1EC                 dd offset def_40F1E2
.text:0040F1EC                 dd offset def_40F1E2
.text:0040F1EC                 dd offset def_40F1E2
.text:0040F1EC                 dd offset def_40F1E2
.text:0040F1EC                 dd offset def_40F1E2
.text:0040F1EC                 dd offset def_40F1E2
.text:0040F1EC                 dd offset def_40F1E2
.text:0040F1EC                 dd offset def_40F1E2
.text:0040F1EC                 dd offset def_40F1E2
.text:0040F1EC                 dd offset def_40F1E2
.text:0040F1EC                 dd offset def_40F1E2
.text:0040F1EC                 dd offset def_40F1E2
.text:0040F1EC                 dd offset def_40F1E2
.text:0040F1EC                 dd offset def_40F1E2
.text:0040F1EC                 dd offset def_40F1E2
.text:0040F1EC                 dd offset def_40F1E2
.text:0040F1EC                 dd offset def_40F1E2
.text:0040F1EC                 dd offset def_40F1E2
.text:0040F1EC                 dd offset loc_40EE1B
.text:0040F274 ; ---------------------------------------------------------------------------
.text:0040F274
.text:0040F274 def_40F1E2:                             ; CODE XREF: sub_40EA10+7CC↑j
.text:0040F274                                         ; sub_40EA10+7D2↑j
.text:0040F274                                         ; DATA XREF: ...
.text:0040F274                 inc     edx             ; jumptable 0040F1E2 default case, cases 93,95,97-123
.text:0040F275                 cmp     edx, edi
.text:0040F277                 jb      loc_40F1CB
.text:0040F27D                 jmp     loc_40F18B
.text:0040F282 ; ---------------------------------------------------------------------------
.text:0040F282
.text:0040F282 loc_40F282:                             ; CODE XREF: sub_40EA10+76E↑j
.text:0040F282                 cmp     ebp, [esp+4Ch+arg_C]
.text:0040F286                 mov     [esp+4Ch+var_29], 0
.text:0040F28B                 jnb     loc_40F1B0
.text:0040F291                 mov     eax, [esp+4Ch+var_30]
.text:0040F295                 cmp     byte ptr [eax], 0
.text:0040F298                 jz      loc_40F1B0
.text:0040F29E
.text:0040F29E loc_40F29E:                             ; CODE XREF: sub_40EA10+8AB↓j
.text:0040F29E                 inc     [esp+4Ch+var_28]
.text:0040F2A2                 mov     esi, [esp+4Ch+var_28]
.text:0040F2A6                 lea     eax, [esi+ebp]
.text:0040F2A9                 cmp     eax, [esp+4Ch+arg_C]
.text:0040F2AD                 jnb     loc_40F1B0
.text:0040F2B3                 mov     edi, [esp+4Ch+Str]
.text:0040F2B7                 cmp     byte ptr [eax+edi], 0
.text:0040F2BB                 jnz     short loc_40F29E
.text:0040F2BD                 jmp     loc_40F1B0
.text:0040F2C2 ; ---------------------------------------------------------------------------
.text:0040F2C2
.text:0040F2C2 loc_40F2C2:                             ; CODE XREF: sub_40EA10+765↑j
.text:0040F2C2                 mov     [esp+4Ch+var_29], 0
.text:0040F2C7                 jmp     loc_40F1B0
.text:0040F2CC ; ---------------------------------------------------------------------------
.text:0040F2CC
.text:0040F2CC loc_40F2CC:                             ; CODE XREF: sub_40EA10+72A↑j
.text:0040F2CC                 mov     edx, [esp+4Ch+Str]
.text:0040F2D0                 mov     [esp+4Ch+C], edx ; Str
.text:0040F2D3                 call    strlen
.text:0040F2D8                 mov     [esp+4Ch+arg_C], eax
.text:0040F2DC                 jmp     loc_40F140
.text:0040F2E1 ; ---------------------------------------------------------------------------
.text:0040F2E1
.text:0040F2E1 loc_40F2E1:                             ; CODE XREF: sub_40EA10+105↑j
.text:0040F2E1                                         ; DATA XREF: sub_40EA10:jpt_40EB15↑o
.text:0040F2E1                 mov     dl, bl          ; jumptable 0040EB15 case 92
.text:0040F2E3                 jmp     loc_40EE14
.text:0040F2E8 ; ---------------------------------------------------------------------------
.text:0040F2E8
.text:0040F2E8 loc_40F2E8:                             ; CODE XREF: sub_40EA10+105↑j
.text:0040F2E8                                         ; sub_40EA10+902↓j
.text:0040F2E8                                         ; DATA XREF: ...
.text:0040F2E8                 cmp     [esp+4Ch+arg_10], 1 ; jumptable 0040EB15 cases 32-34,36,38,40-42,59-62,91,94,96,124
.text:0040F2ED                 jnz     def_40EF12      ; jumptable 0040EB15 cases 37,43-58,65-90,93,95,97-122
.text:0040F2ED                                         ; jumptable 0040EF12 default case, cases 34-38,42-44,46,48-59
.text:0040F2F3                 jmp     loc_40EE1B      ; jumptable 0040F1E2 cases 91,92,94,96,124
.text:0040F2F8 ; ---------------------------------------------------------------------------
.text:0040F2F8
.text:0040F2F8 loc_40F2F8:                             ; CODE XREF: sub_40EA10+105↑j
.text:0040F2F8                                         ; DATA XREF: sub_40EA10:jpt_40EB15↑o
.text:0040F2F8                 cmp     [esp+4Ch+arg_C], 0FFFFFFFFh ; jumptable 0040EB15 cases 123,125
.text:0040F2FD                 jz      short loc_40F314
.text:0040F2FF                 cmp     [esp+4Ch+arg_C], 1
.text:0040F304
.text:0040F304 loc_40F304:                             ; CODE XREF: sub_40EA10+90C↓j
.text:0040F304                 jnz     def_40EF12      ; jumptable 0040EB15 cases 37,43-58,65-90,93,95,97-122
.text:0040F304                                         ; jumptable 0040EF12 default case, cases 34-38,42-44,46,48-59
.text:0040F30A
.text:0040F30A loc_40F30A:                             ; CODE XREF: sub_40EA10+105↑j
.text:0040F30A                                         ; DATA XREF: sub_40EA10:jpt_40EB15↑o
.text:0040F30A                 test    ebp, ebp        ; jumptable 0040EB15 cases 35,126
.text:0040F30C                 jnz     def_40EF12      ; jumptable 0040EB15 cases 37,43-58,65-90,93,95,97-122
.text:0040F30C                                         ; jumptable 0040EF12 default case, cases 34-38,42-44,46,48-59
.text:0040F312                 jmp     short loc_40F2E8 ; jumptable 0040EB15 cases 32-34,36,38,40-42,59-62,91,94,96,124
.text:0040F314 ; ---------------------------------------------------------------------------
.text:0040F314
.text:0040F314 loc_40F314:                             ; CODE XREF: sub_40EA10+8ED↑j
.text:0040F314                 mov     esi, [esp+4Ch+Str]
.text:0040F318                 cmp     byte ptr [esi+1], 0
.text:0040F31C                 jmp     short loc_40F304
.text:0040F31E ; ---------------------------------------------------------------------------
.text:0040F31E
.text:0040F31E loc_40F31E:                             ; CODE XREF: sub_40EA10:loc_40EAAF↑j
.text:0040F31E                 test    ebp, ebp
.text:0040F320                 jnz     short loc_40F32D
.text:0040F322                 cmp     [esp+4Ch+arg_10], 1
.text:0040F327                 jz      loc_40EE1B      ; jumptable 0040F1E2 cases 91,92,94,96,124
.text:0040F32D
.text:0040F32D loc_40F32D:                             ; CODE XREF: sub_40EA10+910↑j
.text:0040F32D                 mov     esi, [esp+4Ch+var_1C]
.text:0040F331                 test    esi, esi
.text:0040F333                 jz      short loc_40F368
.text:0040F335                 mov     edi, [esp+4Ch+var_1C]
.text:0040F339                 movzx   eax, byte ptr [edi]
.text:0040F33C                 test    al, al
.text:0040F33E                 jz      short loc_40F368
.text:0040F340
.text:0040F340 loc_40F340:                             ; CODE XREF: sub_40EA10+956↓j
.text:0040F340                 mov     ebp, [esp+4Ch+arg_4]
.text:0040F344                 cmp     [esp+4Ch+var_34], ebp
.text:0040F348                 jnb     short loc_40F355
.text:0040F34A                 mov     ecx, [esp+4Ch+arg_0]
.text:0040F34E                 mov     ebx, [esp+4Ch+var_34]
.text:0040F352                 mov     [ebx+ecx], al
.text:0040F355
.text:0040F355 loc_40F355:                             ; CODE XREF: sub_40EA10+938↑j
.text:0040F355                 inc     [esp+4Ch+var_1C]
.text:0040F359                 inc     [esp+4Ch+var_34]
.text:0040F35D                 mov     edx, [esp+4Ch+var_1C]
.text:0040F361                 movzx   eax, byte ptr [edx]
.text:0040F364                 test    al, al
.text:0040F366                 jnz     short loc_40F340
.text:0040F368
.text:0040F368 loc_40F368:                             ; CODE XREF: sub_40EA10+923↑j
.text:0040F368                                         ; sub_40EA10+92E↑j
.text:0040F368                 mov     eax, [esp+4Ch+arg_4]
.text:0040F36C                 cmp     [esp+4Ch+var_34], eax
.text:0040F370                 jnb     short loc_40F37E
.text:0040F372                 mov     edi, [esp+4Ch+arg_0]
.text:0040F376                 mov     esi, [esp+4Ch+var_34]
.text:0040F37A                 mov     byte ptr [esi+edi], 0
.text:0040F37E
.text:0040F37E loc_40F37E:                             ; CODE XREF: sub_40EA10+960↑j
.text:0040F37E                 mov     eax, [esp+4Ch+var_34]
.text:0040F382                 jmp     loc_40EE4F
.text:0040F387 ; ---------------------------------------------------------------------------
.text:0040F387
.text:0040F387 loc_40F387:                             ; CODE XREF: sub_40EA10+95↑j
.text:0040F387                 mov     ebx, [esp+4Ch+Str]
.text:0040F38B                 cmp     byte ptr [ebp+ebx+0], 0
.text:0040F390                 jmp     loc_40EAAF
.text:0040F395 ; ---------------------------------------------------------------------------
.text:0040F395
.text:0040F395 loc_40F395:                             ; CODE XREF: sub_40EA10+3D↑j
.text:0040F395                                         ; DATA XREF: sub_40EA10:jpt_40EA4D↑o
.text:0040F395                 mov     edx, [esp+4Ch+arg_4] ; jumptable 0040EA4D case 2
.text:0040F399                 cmp     [esp+4Ch+var_34], edx
.text:0040F39D                 jnb     short loc_40F3A6
.text:0040F39F                 mov     ecx, [esp+4Ch+arg_0]
.text:0040F3A3                 mov     byte ptr [ecx], 27h ; '''
.text:0040F3A6
.text:0040F3A6 loc_40F3A6:                             ; CODE XREF: sub_40EA10+98D↑j
.text:0040F3A6                 mov     [esp+4Ch+var_34], 1
.text:0040F3AE                 mov     [esp+4Ch+var_1C], 40E9FEh
.text:0040F3B6                 jmp     loc_40EA96
.text:0040F3BB ; ---------------------------------------------------------------------------
.text:0040F3BB
.text:0040F3BB loc_40F3BB:                             ; CODE XREF: sub_40EA10+3D↑j
.text:0040F3BB                                         ; DATA XREF: sub_40EA10:jpt_40EA4D↑o
.text:0040F3BB                 mov     [esp+4Ch+var_21], 1 ; jumptable 0040EA4D case 4
.text:0040F3C0                 jmp     def_40EA4D      ; jumptable 0040EA4D default case, cases 0,1
.text:0040F3C5 ; ---------------------------------------------------------------------------
.text:0040F3C5
.text:0040F3C5 loc_40F3C5:                             ; CODE XREF: sub_40EA10+3D↑j
.text:0040F3C5                                         ; DATA XREF: sub_40EA10:jpt_40EA4D↑o
.text:0040F3C5                 mov     [esp+4Ch+C], 40EA00h ; jumptable 0040EA4D cases 5,6
.text:0040F3CC                 call    ds:__imp_libintl_gettext
.text:0040F3D2                 cmp     eax, 40EA00h
.text:0040F3D7                 mov     edi, eax
.text:0040F3D9                 jz      short loc_40F450
.text:0040F3DB
.text:0040F3DB loc_40F3DB:                             ; CODE XREF: sub_40EA10+A45↓j
.text:0040F3DB                                         ; sub_40EA10+A4C↓j
.text:0040F3DB                 mov     [esp+4Ch+C], 40E9FEh
.text:0040F3E2                 call    ds:__imp_libintl_gettext
.text:0040F3E8                 cmp     eax, 40E9FEh
.text:0040F3ED                 mov     edx, eax
.text:0040F3EF                 jz      short loc_40F442
.text:0040F3F1
.text:0040F3F1 loc_40F3F1:                             ; CODE XREF: sub_40EA10+A37↓j
.text:0040F3F1                                         ; sub_40EA10+A3E↓j
.text:0040F3F1                 mov     [esp+4Ch+var_1C], edi
.text:0040F3F5                 cmp     byte ptr [edi], 0
.text:0040F3F8                 jz      short loc_40F428
.text:0040F3FA
.text:0040F3FA loc_40F3FA:                             ; CODE XREF: sub_40EA10+A16↓j
.text:0040F3FA                 mov     ecx, [esp+4Ch+arg_4]
.text:0040F3FE                 cmp     [esp+4Ch+var_34], ecx
.text:0040F402                 jnb     short loc_40F417
.text:0040F404                 mov     ebp, [esp+4Ch+var_1C]
.text:0040F408                 mov     edi, [esp+4Ch+arg_0]
.text:0040F40C                 mov     esi, [esp+4Ch+var_34]
.text:0040F410                 movzx   ebx, byte ptr [ebp+0]
.text:0040F414                 mov     [esi+edi], bl
.text:0040F417
.text:0040F417 loc_40F417:                             ; CODE XREF: sub_40EA10+9F2↑j
.text:0040F417                 inc     [esp+4Ch+var_1C]
.text:0040F41B                 inc     [esp+4Ch+var_34]
.text:0040F41F                 mov     eax, [esp+4Ch+var_1C]
.text:0040F423                 cmp     byte ptr [eax], 0
.text:0040F426                 jnz     short loc_40F3FA
.text:0040F428
.text:0040F428 loc_40F428:                             ; CODE XREF: sub_40EA10+9E8↑j
.text:0040F428                 mov     [esp+4Ch+var_21], 1
.text:0040F42D                 mov     [esp+4Ch+var_1C], edx
.text:0040F431                 mov     [esp+4Ch+C], edx ; Str
.text:0040F434                 call    strlen
.text:0040F439                 mov     [esp+4Ch+var_20], eax
.text:0040F43D                 jmp     def_40EA4D      ; jumptable 0040EA4D default case, cases 0,1
.text:0040F442 ; ---------------------------------------------------------------------------
.text:0040F442
.text:0040F442 loc_40F442:                             ; CODE XREF: sub_40EA10+9DF↑j
.text:0040F442                 cmp     [esp+4Ch+arg_10], 6
.text:0040F447                 jnz     short loc_40F3F1
.text:0040F449                 mov     edx, offset asc_40E9FC ; "\"'`"
.text:0040F44E                 jmp     short loc_40F3F1
.text:0040F450 ; ---------------------------------------------------------------------------
.text:0040F450
.text:0040F450 loc_40F450:                             ; CODE XREF: sub_40EA10+9C9↑j
.text:0040F450                 cmp     [esp+4Ch+arg_10], 6
.text:0040F455                 jnz     short loc_40F3DB
.text:0040F457                 mov     edi, offset asc_40E9FC ; "\"'`"
.text:0040F45C                 jmp     loc_40F3DB
.text:0040F45C sub_40EA10      endp
.text:0040F45C
.text:0040F461 ; ---------------------------------------------------------------------------
.text:0040F461                 jmp     short loc_40F470
.text:0040F461 ; ---------------------------------------------------------------------------
.text:0040F463                 align 10h
.text:0040F470
.text:0040F470 loc_40F470:                             ; CODE XREF: .text:0040F461↑j
.text:0040F470                 sub     esp, 0Ch
.text:0040F473                 mov     [esp+4], ebx
.text:0040F477                 mov     [esp+8], esi
.text:0040F47B                 call    _errno
.text:0040F480                 mov     esi, [eax]
.text:0040F482                 mov     dword ptr [esp], 24h ; '$'
.text:0040F489                 call    sub_40E610
.text:0040F48E                 mov     edx, [esp+10h]
.text:0040F492                 mov     ebx, eax
.text:0040F494                 test    edx, edx
.text:0040F496                 jz      short loc_40F4E1
.text:0040F498
.text:0040F498 loc_40F498:                             ; CODE XREF: .text:0040F4E6↓j
.text:0040F498                 mov     ecx, [edx]
.text:0040F49A                 mov     [ebx], ecx
.text:0040F49C                 mov     ecx, [edx+4]
.text:0040F49F                 mov     [ebx+4], ecx
.text:0040F4A2                 mov     ecx, [edx+8]
.text:0040F4A5                 mov     [ebx+8], ecx
.text:0040F4A8                 mov     ecx, [edx+0Ch]
.text:0040F4AB                 mov     [ebx+0Ch], ecx
.text:0040F4AE                 mov     ecx, [edx+10h]
.text:0040F4B1                 mov     [ebx+10h], ecx
.text:0040F4B4                 mov     ecx, [edx+14h]
.text:0040F4B7                 mov     [ebx+14h], ecx
.text:0040F4BA                 mov     ecx, [edx+18h]
.text:0040F4BD                 mov     [ebx+18h], ecx
.text:0040F4C0                 mov     ecx, [edx+1Ch]
.text:0040F4C3                 mov     [ebx+1Ch], ecx
.text:0040F4C6                 mov     ecx, [edx+20h]
.text:0040F4C9                 mov     [ebx+20h], ecx
.text:0040F4CC                 call    _errno
.text:0040F4D1                 mov     [eax], esi
.text:0040F4D3                 mov     esi, [esp+8]
.text:0040F4D7                 mov     eax, ebx
.text:0040F4D9                 mov     ebx, [esp+4]
.text:0040F4DD                 add     esp, 0Ch
.text:0040F4E0                 retn
.text:0040F4E1 ; ---------------------------------------------------------------------------
.text:0040F4E1
.text:0040F4E1 loc_40F4E1:                             ; CODE XREF: .text:0040F496↑j
.text:0040F4E1                 mov     edx, offset dword_4133E0
.text:0040F4E6                 jmp     short loc_40F498
.text:0040F4E6 ; ---------------------------------------------------------------------------
.text:0040F4E8                 align 10h
.text:0040F4F0                 mov     eax, [esp+4]
.text:0040F4F4                 test    eax, eax
.text:0040F4F6                 jz      short loc_40F500
.text:0040F4F8
.text:0040F4F8 loc_40F4F8:                             ; CODE XREF: .text:0040F505↓j
.text:0040F4F8                 mov     eax, [eax]
.text:0040F4FA                 retn
.text:0040F4FA ; ---------------------------------------------------------------------------
.text:0040F4FB                 align 10h
.text:0040F500
.text:0040F500 loc_40F500:                             ; CODE XREF: .text:0040F4F6↑j
.text:0040F500                 mov     eax, offset dword_4133E0
.text:0040F505                 jmp     short loc_40F4F8
.text:0040F505 ; ---------------------------------------------------------------------------
.text:0040F507                 align 10h
.text:0040F510                 mov     edx, [esp+4]
.text:0040F514                 test    edx, edx
.text:0040F516                 jz      short loc_40F520
.text:0040F518
.text:0040F518 loc_40F518:                             ; CODE XREF: .text:0040F525↓j
.text:0040F518                 mov     ecx, [esp+8]
.text:0040F51C                 mov     [edx], ecx
.text:0040F51E                 retn
.text:0040F51E ; ---------------------------------------------------------------------------
.text:0040F51F                 align 10h
.text:0040F520
.text:0040F520 loc_40F520:                             ; CODE XREF: .text:0040F516↑j
.text:0040F520                 mov     edx, offset dword_4133E0
.text:0040F525                 jmp     short loc_40F518
.text:0040F525 ; ---------------------------------------------------------------------------
.text:0040F527                 align 10h
.text:0040F530                 sub     esp, 8
.text:0040F533                 mov     eax, [esp+0Ch]
.text:0040F537                 movzx   ecx, byte ptr [esp+10h]
.text:0040F53C                 mov     [esp], ebx
.text:0040F53F                 mov     ebx, [esp+14h]
.text:0040F543                 mov     [esp+4], esi
.text:0040F547                 mov     dl, cl
.text:0040F549                 shr     dl, 5
.text:0040F54C                 movzx   edx, dl
.text:0040F54F                 shl     edx, 2
.text:0040F552                 test    eax, eax
.text:0040F554                 lea     esi, [edx+eax+4]
.text:0040F558                 jz      short loc_40F580
.text:0040F55A
.text:0040F55A loc_40F55A:                             ; CODE XREF: .text:0040F586↓j
.text:0040F55A                 mov     edx, [esi]
.text:0040F55C                 and     ecx, 1Fh
.text:0040F55F                 and     ebx, 1
.text:0040F562                 mov     eax, edx
.text:0040F564                 shr     eax, cl
.text:0040F566                 and     eax, 1
.text:0040F569                 xor     ebx, eax
.text:0040F56B                 shl     ebx, cl
.text:0040F56D                 xor     edx, ebx
.text:0040F56F                 mov     [esi], edx
.text:0040F571                 mov     ebx, [esp]
.text:0040F574                 mov     esi, [esp+4]
.text:0040F578                 add     esp, 8
.text:0040F57B                 retn
.text:0040F57B ; ---------------------------------------------------------------------------
.text:0040F57C                 align 10h
.text:0040F580
.text:0040F580 loc_40F580:                             ; CODE XREF: .text:0040F558↑j
.text:0040F580                 lea     esi, dword_4133E4[edx]
.text:0040F586                 jmp     short loc_40F55A
.text:0040F586 ; ---------------------------------------------------------------------------
.text:0040F588                 align 10h
.text:0040F590                 sub     esp, 2Ch
.text:0040F593                 mov     [esp+24h], ebx
.text:0040F597                 mov     ebx, [esp+40h]
.text:0040F59B                 mov     [esp+28h], esi
.text:0040F59F                 test    ebx, ebx
.text:0040F5A1                 jz      short loc_40F5F0
.text:0040F5A3
.text:0040F5A3 loc_40F5A3:                             ; CODE XREF: .text:0040F5F5↓j
.text:0040F5A3                 call    _errno
.text:0040F5A8                 mov     esi, [eax]
.text:0040F5AA                 mov     [esp+14h], ebx
.text:0040F5AE                 mov     edx, [ebx]
.text:0040F5B0                 mov     ecx, [esp+38h]
.text:0040F5B4                 mov     ebx, [esp+3Ch]
.text:0040F5B8                 mov     [esp+10h], edx
.text:0040F5BC                 mov     edx, [esp+34h]
.text:0040F5C0                 mov     [esp+0Ch], ebx
.text:0040F5C4                 mov     [esp+8], ecx
.text:0040F5C8                 mov     [esp+4], edx
.text:0040F5CC                 mov     edx, [esp+30h]
.text:0040F5D0                 mov     [esp], edx
.text:0040F5D3                 call    sub_40EA10
.text:0040F5D8                 mov     ebx, eax
.text:0040F5DA                 call    _errno
.text:0040F5DF                 mov     [eax], esi
.text:0040F5E1                 mov     esi, [esp+28h]
.text:0040F5E5                 mov     eax, ebx
.text:0040F5E7                 mov     ebx, [esp+24h]
.text:0040F5EB                 add     esp, 2Ch
.text:0040F5EE                 retn
.text:0040F5EE ; ---------------------------------------------------------------------------
.text:0040F5EF                 align 10h
.text:0040F5F0
.text:0040F5F0 loc_40F5F0:                             ; CODE XREF: .text:0040F5A1↑j
.text:0040F5F0                 mov     ebx, offset dword_4133E0
.text:0040F5F5                 jmp     short loc_40F5A3
.text:0040F5F5 ; ---------------------------------------------------------------------------
.text:0040F5F7                 align 10h
.text:0040F600                 push    ebp
.text:0040F601                 push    edi
.text:0040F602                 push    esi
.text:0040F603                 push    ebx
.text:0040F604                 sub     esp, 2Ch
.text:0040F607                 mov     ebp, [esp+48h]
.text:0040F60B                 call    _errno
.text:0040F610                 mov     edx, [eax]
.text:0040F612                 test    ebp, ebp
.text:0040F614                 mov     ebx, ebp
.text:0040F616                 mov     [esp+28h], edx
.text:0040F61A                 jz      loc_40F6D0
.text:0040F620
.text:0040F620 loc_40F620:                             ; CODE XREF: .text:0040F6D5↓j
.text:0040F620                 call    _errno
.text:0040F625                 mov     edi, [eax]
.text:0040F627                 mov     esi, ebp
.text:0040F629                 mov     [esp+14h], ebx
.text:0040F62D                 mov     ecx, [ebx]
.text:0040F62F                 mov     dword ptr [esp], 0
.text:0040F636                 mov     edx, [esp+44h]
.text:0040F63A                 mov     dword ptr [esp+4], 0
.text:0040F642                 mov     eax, [esp+40h]
.text:0040F646                 mov     [esp+10h], ecx
.text:0040F64A                 mov     [esp+0Ch], edx
.text:0040F64E                 mov     [esp+8], eax
.text:0040F652                 call    sub_40EA10
.text:0040F657                 mov     ebx, eax
.text:0040F659                 call    _errno
.text:0040F65E                 mov     [eax], edi
.text:0040F660                 lea     edi, [ebx+1]
.text:0040F663                 mov     [esp], edi
.text:0040F666                 call    sub_40E610
.text:0040F66B                 mov     [esp+24h], eax
.text:0040F66F                 test    ebp, ebp
.text:0040F671                 jz      short loc_40F6C2
.text:0040F673
.text:0040F673 loc_40F673:                             ; CODE XREF: .text:0040F6C7↓j
.text:0040F673                 call    _errno
.text:0040F678                 mov     ebp, [eax]
.text:0040F67A                 mov     [esp+14h], esi
.text:0040F67E                 mov     ecx, [esi]
.text:0040F680                 mov     [esp+4], edi
.text:0040F684                 mov     edx, [esp+44h]
.text:0040F688                 mov     esi, [esp+24h]
.text:0040F68C                 mov     [esp+10h], ecx
.text:0040F690                 mov     eax, [esp+40h]
.text:0040F694                 mov     [esp+0Ch], edx
.text:0040F698                 mov     [esp], esi
.text:0040F69B                 mov     [esp+8], eax
.text:0040F69F                 call    sub_40EA10
.text:0040F6A4                 call    _errno
.text:0040F6A9                 mov     [eax], ebp
.text:0040F6AB                 call    _errno
.text:0040F6B0                 mov     ebx, [esp+28h]
.text:0040F6B4                 mov     [eax], ebx
.text:0040F6B6                 mov     eax, [esp+24h]
.text:0040F6BA                 add     esp, 2Ch
.text:0040F6BD                 pop     ebx
.text:0040F6BE                 pop     esi
.text:0040F6BF                 pop     edi
.text:0040F6C0                 pop     ebp
.text:0040F6C1                 retn
.text:0040F6C2 ; ---------------------------------------------------------------------------
.text:0040F6C2
.text:0040F6C2 loc_40F6C2:                             ; CODE XREF: .text:0040F671↑j
.text:0040F6C2                 mov     esi, offset dword_4133E0
.text:0040F6C7                 jmp     short loc_40F673
.text:0040F6C7 ; ---------------------------------------------------------------------------
.text:0040F6C9                 align 10h
.text:0040F6D0
.text:0040F6D0 loc_40F6D0:                             ; CODE XREF: .text:0040F61A↑j
.text:0040F6D0                 mov     ebx, offset dword_4133E0
.text:0040F6D5                 jmp     loc_40F620
.text:0040F6D5 ; ---------------------------------------------------------------------------
.text:0040F6DA                 align 10h
.text:0040F6E0                 sub     esp, 1Ch
.text:0040F6E3                 mov     edx, [esp+24h]
.text:0040F6E7                 mov     dword ptr [esp+0Ch], offset dword_4133E0
.text:0040F6EF                 mov     dword ptr [esp+8], 0FFFFFFFFh
.text:0040F6F7                 mov     [esp+4], edx
.text:0040F6FB                 mov     edx, [esp+20h]
.text:0040F6FF                 mov     [esp], edx
.text:0040F702                 call    sub_40FB50
.text:0040F707                 add     esp, 1Ch
.text:0040F70A                 retn
.text:0040F70A ; ---------------------------------------------------------------------------
.text:0040F70B                 align 10h
.text:0040F710                 sub     esp, 1Ch
.text:0040F713                 mov     edx, [esp+20h]
.text:0040F717                 mov     dword ptr [esp+0Ch], offset dword_4133E0
.text:0040F71F                 mov     dword ptr [esp+8], 0FFFFFFFFh
.text:0040F727                 mov     [esp+4], edx
.text:0040F72B                 mov     dword ptr [esp], 0
.text:0040F732                 call    sub_40FB50
.text:0040F737                 add     esp, 1Ch
.text:0040F73A                 retn
.text:0040F73A ; ---------------------------------------------------------------------------
.text:0040F73B                 align 10h
.text:0040F740
.text:0040F740 ; =============== S U B R O U T I N E =======================================
.text:0040F740
.text:0040F740
.text:0040F740 ; int __cdecl sub_40F740(int, int, char *)
.text:0040F740 sub_40F740      proc near               ; CODE XREF: .text:0040BC1A↑p
.text:0040F740                                         ; sub_40BC30+1A↑p
.text:0040F740
.text:0040F740 var_BC          = dword ptr -0BCh
.text:0040F740 var_B8          = dword ptr -0B8h
.text:0040F740 var_B4          = dword ptr -0B4h
.text:0040F740 var_B0          = dword ptr -0B0h
.text:0040F740 var_AC          = dword ptr -0ACh
.text:0040F740 var_A8          = dword ptr -0A8h
.text:0040F740 var_A4          = dword ptr -0A4h
.text:0040F740 var_A0          = dword ptr -0A0h
.text:0040F740 var_9C          = dword ptr -9Ch
.text:0040F740 var_98          = dword ptr -98h
.text:0040F740 var_94          = dword ptr -94h
.text:0040F740 var_90          = dword ptr -90h
.text:0040F740 var_8C          = dword ptr -8Ch
.text:0040F740 var_7C          = dword ptr -7Ch
.text:0040F740 var_78          = dword ptr -78h
.text:0040F740 var_74          = dword ptr -74h
.text:0040F740 var_70          = dword ptr -70h
.text:0040F740 var_6C          = dword ptr -6Ch
.text:0040F740 var_68          = dword ptr -68h
.text:0040F740 var_64          = dword ptr -64h
.text:0040F740 var_60          = dword ptr -60h
.text:0040F740 var_5C          = dword ptr -5Ch
.text:0040F740 var_4C          = dword ptr -4Ch
.text:0040F740 var_48          = dword ptr -48h
.text:0040F740 var_44          = dword ptr -44h
.text:0040F740 var_40          = dword ptr -40h
.text:0040F740 var_3C          = dword ptr -3Ch
.text:0040F740 var_38          = dword ptr -38h
.text:0040F740 var_34          = dword ptr -34h
.text:0040F740 var_30          = dword ptr -30h
.text:0040F740 var_2C          = dword ptr -2Ch
.text:0040F740 arg_0           = dword ptr  4
.text:0040F740 arg_4           = dword ptr  8
.text:0040F740 arg_8           = dword ptr  0Ch
.text:0040F740
.text:0040F740                 push    ebp
.text:0040F741                 xor     eax, eax
.text:0040F743                 mov     ecx, 8
.text:0040F748                 push    edi
.text:0040F749                 push    esi
.text:0040F74A                 push    ebx
.text:0040F74B                 sub     esp, 0ACh
.text:0040F751                 mov     ebp, [esp+0BCh+arg_4]
.text:0040F758                 cld
.text:0040F759                 lea     edi, [esp+0BCh+var_A8]
.text:0040F75D                 mov     [esp+0BCh+var_AC], ebp
.text:0040F761                 rep stosd
.text:0040F763                 mov     eax, [esp+0BCh+var_8C]
.text:0040F767                 mov     edi, [esp+0BCh+var_AC]
.text:0040F76B                 mov     esi, [esp+0BCh+var_A8]
.text:0040F76F                 mov     [esp+0BCh+var_5C], eax
.text:0040F773                 mov     ebp, [esp+0BCh+var_A4]
.text:0040F777                 mov     eax, [esp+0BCh+var_AC]
.text:0040F77B                 mov     [esp+0BCh+var_7C], edi
.text:0040F77F                 mov     ecx, [esp+0BCh+var_94]
.text:0040F783                 mov     edi, [esp+0BCh+var_A0]
.text:0040F787                 mov     [esp+0BCh+var_78], esi
.text:0040F78B                 mov     edx, [esp+0BCh+var_90]
.text:0040F78F                 mov     esi, [esp+0BCh+var_9C]
.text:0040F793                 mov     [esp+0BCh+var_4C], eax
.text:0040F797                 mov     ebx, [esp+0BCh+var_98]
.text:0040F79B                 mov     eax, [esp+0BCh+var_A8]
.text:0040F79F                 mov     [esp+0BCh+var_74], ebp
.text:0040F7A3                 mov     [esp+0BCh+var_70], edi
.text:0040F7A7                 mov     [esp+0BCh+var_6C], esi
.text:0040F7AB                 mov     [esp+0BCh+var_68], ebx
.text:0040F7AF                 mov     [esp+0BCh+var_64], ecx
.text:0040F7B3                 mov     [esp+0BCh+var_60], edx
.text:0040F7B7                 mov     [esp+0BCh+var_48], eax
.text:0040F7BB                 mov     [esp+0BCh+var_44], ebp
.text:0040F7BF                 mov     [esp+0BCh+var_40], edi
.text:0040F7C3                 mov     [esp+0BCh+var_3C], esi
.text:0040F7CA                 mov     [esp+0BCh+var_38], ebx
.text:0040F7D1                 mov     ebx, [esp+0BCh+var_8C]
.text:0040F7D5                 mov     [esp+0BCh+var_30], edx
.text:0040F7DC                 mov     edx, [esp+0BCh+arg_8]
.text:0040F7E3                 mov     [esp+0BCh+var_34], ecx
.text:0040F7EA                 lea     ecx, [esp+0BCh+var_4C]
.text:0040F7EE                 mov     [esp+0BCh+var_B8], edx ; char *
.text:0040F7F2                 mov     edx, [esp+0BCh+arg_0]
.text:0040F7F9                 mov     [esp+0BCh+var_2C], ebx
.text:0040F800                 mov     [esp+0BCh+var_B0], ecx ; int
.text:0040F804                 mov     [esp+0BCh+var_B4], 0FFFFFFFFh ; int
.text:0040F80C                 mov     [esp+0BCh+var_BC], edx ; int
.text:0040F80F                 call    sub_40FB50
.text:0040F814                 add     esp, 0ACh
.text:0040F81A                 pop     ebx
.text:0040F81B                 pop     esi
.text:0040F81C                 pop     edi
.text:0040F81D                 pop     ebp
.text:0040F81E                 retn
.text:0040F81E sub_40F740      endp
.text:0040F81E
.text:0040F81E ; ---------------------------------------------------------------------------
.text:0040F81F                 align 10h
.text:0040F820                 push    ebp
.text:0040F821                 xor     eax, eax
.text:0040F823                 mov     ecx, 8
.text:0040F828                 push    edi
.text:0040F829                 push    esi
.text:0040F82A                 push    ebx
.text:0040F82B                 sub     esp, 0ACh
.text:0040F831                 mov     edx, [esp+0C4h]
.text:0040F838                 cld
.text:0040F839                 lea     edi, [esp+14h]
.text:0040F83D                 mov     [esp+10h], edx
.text:0040F841                 rep stosd
.text:0040F843                 mov     eax, [esp+30h]
.text:0040F847                 mov     ebp, [esp+10h]
.text:0040F84B                 mov     edi, [esp+14h]
.text:0040F84F                 mov     [esp+60h], eax
.text:0040F853                 mov     esi, [esp+20h]
.text:0040F857                 mov     eax, [esp+10h]
.text:0040F85B                 mov     [esp+40h], ebp
.text:0040F85F                 mov     ecx, [esp+28h]
.text:0040F863                 mov     ebp, [esp+18h]
.text:0040F867                 mov     [esp+44h], edi
.text:0040F86B                 mov     edx, [esp+2Ch]
.text:0040F86F                 mov     edi, [esp+1Ch]
.text:0040F873                 mov     [esp+70h], eax
.text:0040F877                 mov     ebx, [esp+24h]
.text:0040F87B                 mov     eax, [esp+14h]
.text:0040F87F                 mov     [esp+48h], ebp
.text:0040F883                 mov     [esp+4Ch], edi
.text:0040F887                 mov     [esp+50h], esi
.text:0040F88B                 mov     [esp+54h], ebx
.text:0040F88F                 mov     [esp+58h], ecx
.text:0040F893                 mov     [esp+5Ch], edx
.text:0040F897                 mov     [esp+74h], eax
.text:0040F89B                 mov     [esp+78h], ebp
.text:0040F89F                 mov     [esp+7Ch], edi
.text:0040F8A3                 mov     [esp+80h], esi
.text:0040F8AA                 mov     [esp+84h], ebx
.text:0040F8B1                 mov     esi, [esp+30h]
.text:0040F8B5                 lea     ebx, [esp+70h]
.text:0040F8B9                 mov     [esp+8Ch], edx
.text:0040F8C0                 mov     edx, [esp+0C8h]
.text:0040F8C7                 mov     [esp+88h], ecx
.text:0040F8CE                 mov     ecx, [esp+0CCh]
.text:0040F8D5                 mov     [esp+4], edx
.text:0040F8D9                 mov     edx, [esp+0C0h]
.text:0040F8E0                 mov     [esp+90h], esi
.text:0040F8E7                 mov     [esp+0Ch], ebx
.text:0040F8EB                 mov     [esp+8], ecx
.text:0040F8EF                 mov     [esp], edx
.text:0040F8F2                 call    sub_40FB50
.text:0040F8F7                 add     esp, 0ACh
.text:0040F8FD                 pop     ebx
.text:0040F8FE                 pop     esi
.text:0040F8FF                 pop     edi
.text:0040F900                 pop     ebp
.text:0040F901                 retn
.text:0040F901 ; ---------------------------------------------------------------------------
.text:0040F902                 align 10h
.text:0040F910                 push    ebp
.text:0040F911                 xor     eax, eax
.text:0040F913                 mov     ecx, 8
.text:0040F918                 push    edi
.text:0040F919                 push    esi
.text:0040F91A                 push    ebx
.text:0040F91B                 sub     esp, 0ACh
.text:0040F921                 mov     edi, [esp+0C0h]
.text:0040F928                 cld
.text:0040F929                 mov     [esp+10h], edi
.text:0040F92D                 lea     edi, [esp+14h]
.text:0040F931                 rep stosd
.text:0040F933                 mov     eax, [esp+30h]
.text:0040F937                 mov     esi, [esp+10h]
.text:0040F93B                 mov     ebx, [esp+14h]
.text:0040F93F                 mov     [esp+60h], eax
.text:0040F943                 mov     ebp, [esp+18h]
.text:0040F947                 mov     eax, [esp+10h]
.text:0040F94B                 mov     [esp+40h], esi
.text:0040F94F                 mov     edi, [esp+1Ch]
.text:0040F953                 mov     esi, [esp+20h]
.text:0040F957                 mov     [esp+44h], ebx
.text:0040F95B                 mov     ecx, [esp+28h]
.text:0040F95F                 mov     edx, [esp+2Ch]
.text:0040F963                 mov     [esp+70h], eax
.text:0040F967                 mov     ebx, [esp+24h]
.text:0040F96B                 mov     eax, [esp+14h]
.text:0040F96F                 mov     [esp+48h], ebp
.text:0040F973                 mov     [esp+4Ch], edi
.text:0040F977                 mov     [esp+50h], esi
.text:0040F97B                 mov     [esp+54h], ebx
.text:0040F97F                 mov     [esp+58h], ecx
.text:0040F983                 mov     [esp+5Ch], edx
.text:0040F987                 mov     [esp+74h], eax
.text:0040F98B                 mov     [esp+78h], ebp
.text:0040F98F                 mov     [esp+7Ch], edi
.text:0040F993                 mov     [esp+80h], esi
.text:0040F99A                 mov     [esp+84h], ebx
.text:0040F9A1                 mov     [esp+8Ch], edx
.text:0040F9A8                 lea     edx, [esp+70h]
.text:0040F9AC                 mov     [esp+88h], ecx
.text:0040F9B3                 mov     ecx, [esp+30h]
.text:0040F9B7                 mov     [esp+0Ch], edx
.text:0040F9BB                 mov     edx, [esp+0C4h]
.text:0040F9C2                 mov     [esp+90h], ecx
.text:0040F9C9                 mov     dword ptr [esp+8], 0FFFFFFFFh
.text:0040F9D1                 mov     [esp+4], edx
.text:0040F9D5                 mov     dword ptr [esp], 0
.text:0040F9DC                 call    sub_40FB50
.text:0040F9E1                 add     esp, 0ACh
.text:0040F9E7                 pop     ebx
.text:0040F9E8                 pop     esi
.text:0040F9E9                 pop     edi
.text:0040F9EA                 pop     ebp
.text:0040F9EB                 retn
.text:0040F9EB ; ---------------------------------------------------------------------------
.text:0040F9EC                 align 10h
.text:0040F9F0                 push    edi
.text:0040F9F1                 push    esi
.text:0040F9F2                 push    ebx
.text:0040F9F3                 sub     esp, 40h
.text:0040F9F6                 mov     edx, ds:dword_4133EC
.text:0040F9FC                 mov     ebx, ds:dword_4133E0
.text:0040FA02                 mov     esi, ds:dword_4133E8
.text:0040FA08                 mov     edi, ds:dword_4133E4
.text:0040FA0E                 mov     [esp+1Ch], edx
.text:0040FA12                 mov     ecx, ds:dword_4133F0
.text:0040FA18                 mov     edx, ds:dword_413400
.text:0040FA1E                 mov     [esp+10h], ebx
.text:0040FA22                 mov     ebx, ds:dword_4133F4
.text:0040FA28                 mov     [esp+30h], edx
.text:0040FA2C                 movzx   edx, byte ptr [esp+54h]
.text:0040FA31                 mov     [esp+18h], esi
.text:0040FA35                 mov     esi, ds:dword_4133FC
.text:0040FA3B                 mov     [esp+14h], edi
.text:0040FA3F                 mov     edi, ds:dword_4133F8
.text:0040FA45                 mov     [esp+20h], ecx
.text:0040FA49                 mov     cl, dl
.text:0040FA4B                 shr     cl, 5
.text:0040FA4E                 mov     [esp+24h], ebx
.text:0040FA52                 movzx   ebx, cl
.text:0040FA55                 mov     [esp+2Ch], esi
.text:0040FA59                 lea     esi, [esp+10h]
.text:0040FA5D                 mov     [esp+28h], edi
.text:0040FA61                 lea     edi, [esi+ebx*4]
.text:0040FA64                 mov     ebx, edx
.text:0040FA66                 mov     edx, [edi+4]
.text:0040FA69                 and     ebx, 1Fh
.text:0040FA6C                 mov     cl, bl
.text:0040FA6E                 mov     eax, edx
.text:0040FA70                 shr     eax, cl
.text:0040FA72                 and     eax, 1
.text:0040FA75                 xor     eax, 1
.text:0040FA78                 shl     eax, cl
.text:0040FA7A                 xor     edx, eax
.text:0040FA7C                 mov     [edi+4], edx
.text:0040FA7F                 mov     edx, [esp+50h]
.text:0040FA83                 mov     [esp+0Ch], esi
.text:0040FA87                 mov     dword ptr [esp+8], 0FFFFFFFFh
.text:0040FA8F                 mov     [esp+4], edx
.text:0040FA93                 mov     dword ptr [esp], 0
.text:0040FA9A                 call    sub_40FB50
.text:0040FA9F                 add     esp, 40h
.text:0040FAA2                 pop     ebx
.text:0040FAA3                 pop     esi
.text:0040FAA4                 pop     edi
.text:0040FAA5                 retn
.text:0040FAA5 ; ---------------------------------------------------------------------------
.text:0040FAA6                 align 10h
.text:0040FAB0
.text:0040FAB0 ; =============== S U B R O U T I N E =======================================
.text:0040FAB0
.text:0040FAB0
.text:0040FAB0 ; int __cdecl sub_40FAB0(char *)
.text:0040FAB0 sub_40FAB0      proc near               ; CODE XREF: sub_40C2D0+64↑p
.text:0040FAB0
.text:0040FAB0 var_4C          = dword ptr -4Ch
.text:0040FAB0 var_48          = dword ptr -48h
.text:0040FAB0 var_44          = dword ptr -44h
.text:0040FAB0 var_40          = dword ptr -40h
.text:0040FAB0 var_3C          = dword ptr -3Ch
.text:0040FAB0 var_38          = dword ptr -38h
.text:0040FAB0 var_34          = dword ptr -34h
.text:0040FAB0 var_30          = dword ptr -30h
.text:0040FAB0 var_2C          = dword ptr -2Ch
.text:0040FAB0 var_28          = dword ptr -28h
.text:0040FAB0 var_24          = dword ptr -24h
.text:0040FAB0 var_20          = dword ptr -20h
.text:0040FAB0 var_1C          = dword ptr -1Ch
.text:0040FAB0 arg_0           = dword ptr  4
.text:0040FAB0
.text:0040FAB0                 sub     esp, 4Ch
.text:0040FAB3                 mov     ecx, ds:dword_4133E0
.text:0040FAB9                 mov     [esp+4Ch+var_44], 0FFFFFFFFh ; int
.text:0040FAC1                 mov     edx, ds:dword_4133E4
.text:0040FAC7                 mov     [esp+4Ch+var_4C], 0 ; int
.text:0040FACE                 mov     [esp+4Ch+var_3C], ecx
.text:0040FAD2                 mov     ecx, ds:dword_4133EC
.text:0040FAD8                 mov     [esp+4Ch+var_38], edx
.text:0040FADC                 mov     edx, ds:dword_4133E8
.text:0040FAE2                 mov     [esp+4Ch+var_30], ecx
.text:0040FAE6                 mov     ecx, ds:dword_4133F0
.text:0040FAEC                 mov     eax, edx
.text:0040FAEE                 shr     eax, 1Ah
.text:0040FAF1                 and     eax, 1
.text:0040FAF4                 xor     eax, 1
.text:0040FAF7                 mov     [esp+4Ch+var_2C], ecx
.text:0040FAFB                 shl     eax, 1Ah
.text:0040FAFE                 mov     ecx, ds:dword_4133F4
.text:0040FB04                 xor     edx, eax
.text:0040FB06                 mov     [esp+4Ch+var_34], edx
.text:0040FB0A                 mov     edx, [esp+4Ch+arg_0]
.text:0040FB0E                 mov     [esp+4Ch+var_28], ecx
.text:0040FB12                 mov     ecx, ds:dword_4133F8
.text:0040FB18                 mov     [esp+4Ch+var_48], edx ; char *
.text:0040FB1C                 mov     [esp+4Ch+var_24], ecx
.text:0040FB20                 mov     ecx, ds:dword_4133FC
.text:0040FB26                 mov     [esp+4Ch+var_20], ecx
.text:0040FB2A                 mov     ecx, ds:dword_413400
.text:0040FB30                 mov     [esp+4Ch+var_1C], ecx
.text:0040FB34                 lea     ecx, [esp+4Ch+var_3C]
.text:0040FB38                 mov     [esp+4Ch+var_40], ecx ; int
.text:0040FB3C                 call    sub_40FB50
.text:0040FB41                 add     esp, 4Ch
.text:0040FB44                 retn
.text:0040FB44 sub_40FAB0      endp
.text:0040FB44
.text:0040FB44 ; ---------------------------------------------------------------------------
.text:0040FB45                 align 10h
.text:0040FB50
.text:0040FB50 ; =============== S U B R O U T I N E =======================================
.text:0040FB50
.text:0040FB50
.text:0040FB50 ; int __cdecl sub_40FB50(int, char *, int, int)
.text:0040FB50 sub_40FB50      proc near               ; CODE XREF: .text:0040F702↑p
.text:0040FB50                                         ; .text:0040F732↑p ...
.text:0040FB50
.text:0040FB50 Block           = dword ptr -2Ch
.text:0040FB50 var_28          = dword ptr -28h
.text:0040FB50 Str             = dword ptr -24h
.text:0040FB50 var_20          = dword ptr -20h
.text:0040FB50 var_1C          = dword ptr -1Ch
.text:0040FB50 var_18          = dword ptr -18h
.text:0040FB50 var_14          = dword ptr -14h
.text:0040FB50 arg_0           = dword ptr  4
.text:0040FB50 arg_4           = dword ptr  8
.text:0040FB50 arg_8           = dword ptr  0Ch
.text:0040FB50 arg_C           = dword ptr  10h
.text:0040FB50
.text:0040FB50                 push    ebp
.text:0040FB51                 push    edi
.text:0040FB52                 push    esi
.text:0040FB53                 push    ebx
.text:0040FB54                 sub     esp, 1Ch
.text:0040FB57                 call    _errno
.text:0040FB5C                 mov     edx, [eax]
.text:0040FB5E                 mov     eax, [esp+2Ch+arg_0]
.text:0040FB62                 mov     [esp+2Ch+var_14], edx
.text:0040FB66                 test    eax, eax
.text:0040FB68                 js      loc_40FD0A
.text:0040FB6E                 mov     eax, [esp+2Ch+arg_0]
.text:0040FB72                 cmp     dword_412050, eax
.text:0040FB78                 ja      short loc_40FBF0
.text:0040FB7A                 mov     esi, eax
.text:0040FB7C                 inc     esi
.text:0040FB7D                 cmp     esi, 1FFFFFFFh
.text:0040FB83                 ja      loc_40FD0F
.text:0040FB89                 mov     ebx, off_41205C
.text:0040FB8F                 cmp     ebx, offset dword_412054
.text:0040FB95                 jz      loc_40FCE1
.text:0040FB9B
.text:0040FB9B loc_40FB9B:                             ; CODE XREF: sub_40FB50+1B5↓j
.text:0040FB9B                 mov     [esp+2Ch+Block], ebx ; void *
.text:0040FB9E                 lea     ecx, ds:0[esi*8]
.text:0040FBA5                 mov     ebp, esi
.text:0040FBA7                 mov     [esp+2Ch+var_28], ecx ; size_t
.text:0040FBAB                 call    sub_40E6A0
.text:0040FBB0                 mov     off_41205C, eax
.text:0040FBB5                 mov     ebx, dword_412050
.text:0040FBBB                 sub     ebp, ebx
.text:0040FBBD                 lea     edi, [eax+ebx*8]
.text:0040FBC0                 lea     eax, ds:0[ebp*8]
.text:0040FBC7                 cmp     eax, 7
.text:0040FBCA                 jbe     short loc_40FBE0
.text:0040FBCC                 test    edi, 4
.text:0040FBD2                 jz      short loc_40FBE0
.text:0040FBD4                 mov     dword ptr [edi], 0
.text:0040FBDA                 sub     eax, 4
.text:0040FBDD                 add     edi, 4
.text:0040FBE0
.text:0040FBE0 loc_40FBE0:                             ; CODE XREF: sub_40FB50+7A↑j
.text:0040FBE0                                         ; sub_40FB50+82↑j
.text:0040FBE0                 cld
.text:0040FBE1                 mov     ecx, eax
.text:0040FBE3                 shr     ecx, 2
.text:0040FBE6                 xor     eax, eax
.text:0040FBE8                 rep stosd
.text:0040FBEA                 mov     dword_412050, esi
.text:0040FBF0
.text:0040FBF0 loc_40FBF0:                             ; CODE XREF: sub_40FB50+28↑j
.text:0040FBF0                 mov     esi, off_41205C
.text:0040FBF6                 mov     eax, [esp+2Ch+arg_0]
.text:0040FBFA                 mov     ebp, [esi+eax*8]
.text:0040FBFD                 mov     edi, [esi+eax*8+4]
.text:0040FC01                 mov     esi, [esp+2Ch+arg_C]
.text:0040FC05                 test    esi, esi
.text:0040FC07                 jz      loc_40FCD7
.text:0040FC0D
.text:0040FC0D loc_40FC0D:                             ; CODE XREF: sub_40FB50+18C↓j
.text:0040FC0D                 call    _errno
.text:0040FC12                 mov     ebx, [eax]
.text:0040FC14                 mov     [esp+2Ch+var_18], esi ; int
.text:0040FC18                 mov     ecx, [esi]
.text:0040FC1A                 mov     [esp+2Ch+Block], edi ; int
.text:0040FC1D                 mov     edx, [esp+2Ch+arg_8]
.text:0040FC21                 mov     [esp+2Ch+var_28], ebp ; int
.text:0040FC25                 mov     [esp+2Ch+var_1C], ecx ; int
.text:0040FC29                 mov     ecx, [esp+2Ch+arg_4]
.text:0040FC2D                 mov     [esp+2Ch+var_20], edx ; int
.text:0040FC31                 mov     [esp+2Ch+Str], ecx ; Str
.text:0040FC35                 call    sub_40EA10
.text:0040FC3A                 mov     esi, eax
.text:0040FC3C                 call    _errno
.text:0040FC41                 mov     [eax], ebx
.text:0040FC43                 cmp     ebp, esi
.text:0040FC45                 ja      short loc_40FCBB
.text:0040FC47                 lea     ebp, [esi+1]
.text:0040FC4A                 mov     ebx, off_41205C
.text:0040FC50                 cmp     edi, offset unk_4132E0
.text:0040FC56                 mov     esi, [esp+2Ch+arg_0]
.text:0040FC5A                 mov     [ebx+esi*8], ebp
.text:0040FC5D                 jz      short loc_40FC6D
.text:0040FC5F                 mov     [esp+2Ch+Block], edi ; Block
.text:0040FC62                 call    free
.text:0040FC67                 mov     ebx, off_41205C
.text:0040FC6D
.text:0040FC6D loc_40FC6D:                             ; CODE XREF: sub_40FB50+10D↑j
.text:0040FC6D                 mov     [esp+2Ch+Block], ebp ; size_t
.text:0040FC70                 call    sub_40E610
.text:0040FC75                 mov     esi, [esp+2Ch+arg_C]
.text:0040FC79                 mov     edi, eax
.text:0040FC7B                 mov     eax, [esp+2Ch+arg_0]
.text:0040FC7F                 test    esi, esi
.text:0040FC81                 mov     [ebx+eax*8+4], edi
.text:0040FC85                 jz      short loc_40FCD0
.text:0040FC87
.text:0040FC87 loc_40FC87:                             ; CODE XREF: sub_40FB50+185↓j
.text:0040FC87                 call    _errno
.text:0040FC8C                 mov     ebx, [eax]
.text:0040FC8E                 mov     [esp+2Ch+var_18], esi ; int
.text:0040FC92                 mov     ecx, [esi]
.text:0040FC94                 mov     [esp+2Ch+Block], edi ; int
.text:0040FC97                 mov     edx, [esp+2Ch+arg_8]
.text:0040FC9B                 mov     [esp+2Ch+var_28], ebp ; int
.text:0040FC9F                 mov     [esp+2Ch+var_1C], ecx ; int
.text:0040FCA3                 mov     ecx, [esp+2Ch+arg_4]
.text:0040FCA7                 mov     [esp+2Ch+var_20], edx ; int
.text:0040FCAB                 mov     [esp+2Ch+Str], ecx ; Str
.text:0040FCAF                 call    sub_40EA10
.text:0040FCB4                 call    _errno
.text:0040FCB9                 mov     [eax], ebx
.text:0040FCBB
.text:0040FCBB loc_40FCBB:                             ; CODE XREF: sub_40FB50+F5↑j
.text:0040FCBB                 call    _errno
.text:0040FCC0                 mov     ebp, [esp+2Ch+var_14]
.text:0040FCC4                 mov     [eax], ebp
.text:0040FCC6                 add     esp, 1Ch
.text:0040FCC9                 mov     eax, edi
.text:0040FCCB                 pop     ebx
.text:0040FCCC                 pop     esi
.text:0040FCCD                 pop     edi
.text:0040FCCE                 pop     ebp
.text:0040FCCF                 retn
.text:0040FCD0 ; ---------------------------------------------------------------------------
.text:0040FCD0
.text:0040FCD0 loc_40FCD0:                             ; CODE XREF: sub_40FB50+135↑j
.text:0040FCD0                 mov     esi, offset dword_4133E0
.text:0040FCD5                 jmp     short loc_40FC87
.text:0040FCD7 ; ---------------------------------------------------------------------------
.text:0040FCD7
.text:0040FCD7 loc_40FCD7:                             ; CODE XREF: sub_40FB50+B7↑j
.text:0040FCD7                 mov     esi, offset dword_4133E0
.text:0040FCDC                 jmp     loc_40FC0D
.text:0040FCE1 ; ---------------------------------------------------------------------------
.text:0040FCE1
.text:0040FCE1 loc_40FCE1:                             ; CODE XREF: sub_40FB50+45↑j
.text:0040FCE1                 mov     [esp+2Ch+Block], 8 ; size_t
.text:0040FCE8                 call    sub_40E610
.text:0040FCED                 mov     off_41205C, eax
.text:0040FCF2                 mov     edi, dword_412054
.text:0040FCF8                 mov     ebx, eax
.text:0040FCFA                 mov     ecx, off_412058
.text:0040FD00                 mov     [eax], edi
.text:0040FD02                 mov     [eax+4], ecx
.text:0040FD05                 jmp     loc_40FB9B
.text:0040FD0A ; ---------------------------------------------------------------------------
.text:0040FD0A
.text:0040FD0A loc_40FD0A:                             ; CODE XREF: sub_40FB50+18↑j
.text:0040FD0A                 call    abort
.text:0040FD0F ; ---------------------------------------------------------------------------
.text:0040FD0F
.text:0040FD0F loc_40FD0F:                             ; CODE XREF: sub_40FB50+33↑j
.text:0040FD0F                 call    sub_402790
.text:0040FD0F sub_40FB50      endp
.text:0040FD0F
.text:0040FD0F ; ---------------------------------------------------------------------------
.text:0040FD14                 align 10h
.text:0040FD20
.text:0040FD20 ; =============== S U B R O U T I N E =======================================
.text:0040FD20
.text:0040FD20 ; Attributes: thunk
.text:0040FD20
.text:0040FD20 libintl_gettext proc near
.text:0040FD20                 jmp     ds:__imp_libintl_gettext
.text:0040FD20 libintl_gettext endp
.text:0040FD20
.text:0040FD20 ; ---------------------------------------------------------------------------
.text:0040FD26                 align 10h
.text:0040FD30                 jmp     ds:libintl_bindtextdomain
.text:0040FD30 ; ---------------------------------------------------------------------------
.text:0040FD36                 align 10h
.text:0040FD40                 jmp     ds:libintl_textdomain
.text:0040FD40 ; ---------------------------------------------------------------------------
.text:0040FD46                 align 10h
.text:0040FD50 ; const char aS_0[]
.text:0040FD50 aS_0            db ': %s',0             ; DATA XREF: sub_40FD70+B8↓o
.text:0040FD50                                         ; sub_40FE74+122↓o
.text:0040FD55 aUnknownSystemE db 'Unknown system error',0
.text:0040FD55                                         ; DATA XREF: sub_40FD70:loc_40FE3D↓o
.text:0040FD55                                         ; sub_40FE74:loc_40FFAE↓o
.text:0040FD6A ; const char aS_1[]
.text:0040FD6A aS_1            db '%s: ',0             ; DATA XREF: sub_40FD70:loc_40FE44↓o
.text:0040FD6F                 align 10h
.text:0040FD70
.text:0040FD70 ; =============== S U B R O U T I N E =======================================
.text:0040FD70
.text:0040FD70
.text:0040FD70 ; int __cdecl sub_40FD70(int Code, int ErrorMessage, char *, char)
.text:0040FD70 sub_40FD70      proc near               ; CODE XREF: sub_401390+106↑p
.text:0040FD70                                         ; sub_4014C0+BE↑p ...
.text:0040FD70
.text:0040FD70 Stream          = dword ptr -1Ch
.text:0040FD70 Format          = dword ptr -18h
.text:0040FD70 ArgList         = dword ptr -14h
.text:0040FD70 Code            = dword ptr  4
.text:0040FD70 ErrorMessage    = dword ptr  8
.text:0040FD70 arg_8           = dword ptr  0Ch
.text:0040FD70 arg_C           = byte ptr  10h
.text:0040FD70
.text:0040FD70                 push    esi
.text:0040FD71                 push    ebx
.text:0040FD72                 sub     esp, 14h
.text:0040FD75                 mov     edx, ds:_iob
.text:0040FD7B                 mov     esi, [esp+1Ch+Code]
.text:0040FD7F                 mov     ebx, [esp+1Ch+ErrorMessage]
.text:0040FD83                 add     edx, 20h ; ' '
.text:0040FD86                 mov     [esp+1Ch+Stream], edx ; Stream
.text:0040FD89                 call    fflush
.text:0040FD8E                 mov     eax, ds:dword_413470
.text:0040FD93                 test    eax, eax
.text:0040FD95                 jz      loc_40FE44
.text:0040FD9B                 call    eax ; dword_413470
.text:0040FD9D
.text:0040FD9D loc_40FD9D:                             ; CODE XREF: sub_40FD70+F7↓j
.text:0040FD9D                 lea     edx, [esp+1Ch+arg_C]
.text:0040FDA1                 mov     ecx, [esp+1Ch+arg_8]
.text:0040FDA5                 mov     [esp+1Ch+ArgList], edx ; ArgList
.text:0040FDA9                 mov     edx, ds:_iob
.text:0040FDAF                 mov     [esp+1Ch+Format], ecx ; Format
.text:0040FDB3                 add     edx, 40h ; '@'
.text:0040FDB6                 mov     [esp+1Ch+Stream], edx ; Stream
.text:0040FDB9                 call    vfprintf
.text:0040FDBE                 inc     ds:dword_413480
.text:0040FDC4                 test    ebx, ebx
.text:0040FDC6                 jnz     short loc_40FE12
.text:0040FDC8
.text:0040FDC8 loc_40FDC8:                             ; CODE XREF: sub_40FD70+CB↓j
.text:0040FDC8                 mov     edx, ds:_iob
.text:0040FDCE                 lea     ecx, [edx+40h]
.text:0040FDD1                 mov     ebx, [ecx+4]
.text:0040FDD4                 dec     ebx
.text:0040FDD5                 test    ebx, ebx
.text:0040FDD7                 mov     [ecx+4], ebx
.text:0040FDDA                 js      short loc_40FE00
.text:0040FDDC                 mov     ecx, [edx+40h]
.text:0040FDDF                 mov     byte ptr [ecx], 0Ah
.text:0040FDE2                 inc     dword ptr [edx+40h]
.text:0040FDE5
.text:0040FDE5 loc_40FDE5:                             ; CODE XREF: sub_40FD70+A0↓j
.text:0040FDE5                 mov     edx, ds:_iob
.text:0040FDEB                 add     edx, 40h ; '@'
.text:0040FDEE                 mov     [esp+1Ch+Stream], edx ; Stream
.text:0040FDF1                 call    fflush
.text:0040FDF6                 test    esi, esi
.text:0040FDF8                 jnz     short loc_40FE6C
.text:0040FDFA                 add     esp, 14h
.text:0040FDFD                 pop     ebx
.text:0040FDFE                 pop     esi
.text:0040FDFF                 retn
.text:0040FE00 ; ---------------------------------------------------------------------------
.text:0040FE00
.text:0040FE00 loc_40FE00:                             ; CODE XREF: sub_40FD70+6A↑j
.text:0040FE00                 mov     [esp+1Ch+Format], ecx ; File
.text:0040FE04                 mov     [esp+1Ch+Stream], 0Ah ; Ch
.text:0040FE0B                 call    _flsbuf
.text:0040FE10                 jmp     short loc_40FDE5
.text:0040FE12 ; ---------------------------------------------------------------------------
.text:0040FE12
.text:0040FE12 loc_40FE12:                             ; CODE XREF: sub_40FD70+56↑j
.text:0040FE12                 mov     [esp+1Ch+Stream], ebx ; ErrorMessage
.text:0040FE15                 call    strerror
.text:0040FE1A                 test    eax, eax
.text:0040FE1C                 jz      short loc_40FE3D
.text:0040FE1E
.text:0040FE1E loc_40FE1E:                             ; CODE XREF: sub_40FD70+D2↓j
.text:0040FE1E                 mov     [esp+1Ch+ArgList], eax
.text:0040FE22                 mov     ebx, ds:_iob
.text:0040FE28                 mov     [esp+1Ch+Format], offset aS_0 ; ": %s"
.text:0040FE30                 add     ebx, 40h ; '@'
.text:0040FE33                 mov     [esp+1Ch+Stream], ebx ; Stream
.text:0040FE36                 call    fprintf
.text:0040FE3B                 jmp     short loc_40FDC8
.text:0040FE3D ; ---------------------------------------------------------------------------
.text:0040FE3D
.text:0040FE3D loc_40FE3D:                             ; CODE XREF: sub_40FD70+AC↑j
.text:0040FE3D                 mov     eax, offset aUnknownSystemE ; "Unknown system error"
.text:0040FE42                 jmp     short loc_40FE1E
.text:0040FE44 ; ---------------------------------------------------------------------------
.text:0040FE44
.text:0040FE44 loc_40FE44:                             ; CODE XREF: sub_40FD70+25↑j
.text:0040FE44                 mov     [esp+1Ch+Format], offset aS_1 ; "%s: "
.text:0040FE4C                 mov     edx, ds:_iob
.text:0040FE52                 mov     ecx, ds:dword_413430
.text:0040FE58                 add     edx, 40h ; '@'
.text:0040FE5B                 mov     [esp+1Ch+ArgList], ecx
.text:0040FE5F                 mov     [esp+1Ch+Stream], edx ; Stream
.text:0040FE62                 call    fprintf
.text:0040FE67                 jmp     loc_40FD9D
.text:0040FE6C ; ---------------------------------------------------------------------------
.text:0040FE6C
.text:0040FE6C loc_40FE6C:                             ; CODE XREF: sub_40FD70+88↑j
.text:0040FE6C                 mov     [esp+1Ch+Stream], esi ; Code
.text:0040FE6F                 call    exit
.text:0040FE6F sub_40FD70      endp
.text:0040FE6F
.text:0040FE74
.text:0040FE74 ; =============== S U B R O U T I N E =======================================
.text:0040FE74
.text:0040FE74
.text:0040FE74 ; int __cdecl sub_40FE74(int, int Code, int ErrorMessage, char *Str2, int, char *, char)
.text:0040FE74 sub_40FE74      proc near               ; DATA XREF: sub_40FE74+77↓o
.text:0040FE74
.text:0040FE74 Stream          = dword ptr -28h
.text:0040FE74 Format          = dword ptr -24h
.text:0040FE74 ArgList         = dword ptr -20h
.text:0040FE74 var_1C          = dword ptr -1Ch
.text:0040FE74 Code            = dword ptr  8
.text:0040FE74 ErrorMessage    = dword ptr  0Ch
.text:0040FE74 Str2            = dword ptr  10h
.text:0040FE74 arg_10          = dword ptr  14h
.text:0040FE74 arg_14          = dword ptr  18h
.text:0040FE74 arg_18          = byte ptr  1Ch
.text:0040FE74
.text:0040FE74                 and     eax, 64253A73h
.text:0040FE79                 cmp     ah, [eax]
.text:0040FE7B
.text:0040FE7B loc_40FE7B:                             ; DATA XREF: sub_40FE74:loc_40FFB5↓o
.text:0040FE7B                 add     ds:55003A73h, ah
.text:0040FE81                 push    edi
.text:0040FE82                 push    esi
.text:0040FE83                 push    ebx
.text:0040FE84                 sub     esp, 1Ch
.text:0040FE87                 mov     edx, ds:dword_4134B0
.text:0040FE8D                 mov     ebp, [esp+28h+Code]
.text:0040FE91                 mov     edi, [esp+28h+ErrorMessage]
.text:0040FE95                 test    edx, edx
.text:0040FE97                 mov     ebx, [esp+28h+Str2]
.text:0040FE9B                 mov     esi, [esp+28h+arg_10]
.text:0040FE9F                 jz      short loc_40FEB9
.text:0040FEA1                 cmp     ds:dword_413420, esi
.text:0040FEA7                 jz      loc_40FFE0
.text:0040FEAD
.text:0040FEAD loc_40FEAD:                             ; CODE XREF: sub_40FE74+18D↓j
.text:0040FEAD                 mov     ds:Str1, ebx
.text:0040FEB3                 mov     ds:dword_413420, esi
.text:0040FEB9
.text:0040FEB9 loc_40FEB9:                             ; CODE XREF: sub_40FE74+2B↑j
.text:0040FEB9                 mov     edx, ds:_iob
.text:0040FEBF                 add     edx, 20h ; ' '
.text:0040FEC2                 mov     [esp+28h+Stream], edx ; Stream
.text:0040FEC5                 call    fflush
.text:0040FECA                 mov     eax, ds:dword_413470
.text:0040FECF                 test    eax, eax
.text:0040FED1                 jz      loc_40FFB5
.text:0040FED7                 call    eax ; dword_413470
.text:0040FED9
.text:0040FED9 loc_40FED9:                             ; CODE XREF: sub_40FE74+164↓j
.text:0040FED9                 test    ebx, ebx
.text:0040FEDB                 jz      short loc_40FEFE
.text:0040FEDD                 mov     [esp+28h+ArgList], ebx
.text:0040FEE1                 mov     ebx, ds:_iob
.text:0040FEE7                 mov     [esp+28h+var_1C], esi
.text:0040FEEB                 mov     [esp+28h+Format], offset sub_40FE74 ; Format
.text:0040FEF3                 add     ebx, 40h ; '@'
.text:0040FEF6                 mov     [esp+28h+Stream], ebx ; Stream
.text:0040FEF9                 call    fprintf
.text:0040FEFE
.text:0040FEFE loc_40FEFE:                             ; CODE XREF: sub_40FE74+67↑j
.text:0040FEFE                 mov     esi, ds:_iob
.text:0040FF04                 lea     edx, [esp+28h+arg_18]
.text:0040FF08                 mov     ecx, [esp+28h+arg_14]
.text:0040FF0C                 mov     [esp+28h+ArgList], edx ; ArgList
.text:0040FF10                 add     esi, 40h ; '@'
.text:0040FF13                 mov     [esp+28h+Format], ecx ; Format
.text:0040FF17                 mov     [esp+28h+Stream], esi ; Stream
.text:0040FF1A                 call    vfprintf
.text:0040FF1F                 inc     ds:dword_413480
.text:0040FF25                 test    edi, edi
.text:0040FF27                 jnz     short loc_40FF80
.text:0040FF29
.text:0040FF29 loc_40FF29:                             ; CODE XREF: sub_40FE74+135↓j
.text:0040FF29                 mov     edx, ds:_iob
.text:0040FF2F                 lea     ecx, [edx+40h]
.text:0040FF32                 mov     ebx, [ecx+4]
.text:0040FF35                 dec     ebx
.text:0040FF36                 test    ebx, ebx
.text:0040FF38                 mov     [ecx+4], ebx
.text:0040FF3B                 js      short loc_40FF67
.text:0040FF3D                 mov     esi, [edx+40h]
.text:0040FF40                 mov     byte ptr [esi], 0Ah
.text:0040FF43                 inc     dword ptr [edx+40h]
.text:0040FF46
.text:0040FF46 loc_40FF46:                             ; CODE XREF: sub_40FE74+103↓j
.text:0040FF46                 mov     ecx, ds:_iob
.text:0040FF4C                 add     ecx, 40h ; '@'
.text:0040FF4F                 mov     [esp+28h+Stream], ecx ; Stream
.text:0040FF52                 call    fflush
.text:0040FF57                 test    ebp, ebp
.text:0040FF59                 jnz     loc_410006
.text:0040FF5F
.text:0040FF5F loc_40FF5F:                             ; CODE XREF: sub_40FE74+173↓j
.text:0040FF5F                                         ; sub_40FE74+187↓j
.text:0040FF5F                 add     esp, 1Ch
.text:0040FF62                 pop     ebx
.text:0040FF63                 pop     esi
.text:0040FF64                 pop     edi
.text:0040FF65                 pop     ebp
.text:0040FF66                 retn
.text:0040FF67 ; ---------------------------------------------------------------------------
.text:0040FF67
.text:0040FF67 loc_40FF67:                             ; CODE XREF: sub_40FE74+C7↑j
.text:0040FF67                 mov     [esp+28h+Format], ecx ; File
.text:0040FF6B                 mov     [esp+28h+Stream], 0Ah ; Ch
.text:0040FF72                 call    _flsbuf
.text:0040FF77                 jmp     short loc_40FF46
.text:0040FF77 ; ---------------------------------------------------------------------------
.text:0040FF79                 align 10h
.text:0040FF80
.text:0040FF80 loc_40FF80:                             ; CODE XREF: sub_40FE74+B3↑j
.text:0040FF80                 mov     [esp+28h+Stream], edi ; ErrorMessage
.text:0040FF83                 call    strerror
.text:0040FF88                 test    eax, eax
.text:0040FF8A                 jz      short loc_40FFAE
.text:0040FF8C
.text:0040FF8C loc_40FF8C:                             ; CODE XREF: sub_40FE74+13F↓j
.text:0040FF8C                 mov     [esp+28h+ArgList], eax
.text:0040FF90                 mov     edi, ds:_iob
.text:0040FF96                 mov     [esp+28h+Format], offset aS_0 ; ": %s"
.text:0040FF9E                 add     edi, 40h ; '@'
.text:0040FFA1                 mov     [esp+28h+Stream], edi ; Stream
.text:0040FFA4                 call    fprintf
.text:0040FFA9                 jmp     loc_40FF29
.text:0040FFAE ; ---------------------------------------------------------------------------
.text:0040FFAE
.text:0040FFAE loc_40FFAE:                             ; CODE XREF: sub_40FE74+116↑j
.text:0040FFAE                 mov     eax, offset aUnknownSystemE ; "Unknown system error"
.text:0040FFB3                 jmp     short loc_40FF8C
.text:0040FFB5 ; ---------------------------------------------------------------------------
.text:0040FFB5
.text:0040FFB5 loc_40FFB5:                             ; CODE XREF: sub_40FE74+5D↑j
.text:0040FFB5                 mov     [esp+28h+Format], (offset loc_40FE7B+1) ; Format
.text:0040FFBD                 mov     ecx, ds:_iob
.text:0040FFC3                 mov     edx, ds:dword_413430
.text:0040FFC9                 add     ecx, 40h ; '@'
.text:0040FFCC                 mov     [esp+28h+ArgList], edx
.text:0040FFD0                 mov     [esp+28h+Stream], ecx ; Stream
.text:0040FFD3                 call    fprintf
.text:0040FFD8                 jmp     loc_40FED9
.text:0040FFD8 ; ---------------------------------------------------------------------------
.text:0040FFDD                 align 10h
.text:0040FFE0
.text:0040FFE0 loc_40FFE0:                             ; CODE XREF: sub_40FE74+33↑j
.text:0040FFE0                 mov     eax, ds:Str1
.text:0040FFE5                 cmp     ebx, eax
.text:0040FFE7                 jz      loc_40FF5F
.text:0040FFED                 mov     [esp+28h+Format], ebx ; Str2
.text:0040FFF1                 mov     [esp+28h+Stream], eax ; Str1
.text:0040FFF4                 call    strcmp
.text:0040FFF9                 test    eax, eax
.text:0040FFFB                 jz      loc_40FF5F
.text:00410001                 jmp     loc_40FEAD
.text:00410006 ; ---------------------------------------------------------------------------
.text:00410006
.text:00410006 loc_410006:                             ; CODE XREF: sub_40FE74+E5↑j
.text:00410006                 mov     [esp+28h+Stream], ebp ; Code
.text:00410009                 call    exit
.text:00410009 sub_40FE74      endp ; sp-analysis failed
.text:00410009
.text:00410009 ; ---------------------------------------------------------------------------
.text:0041000E                 align 10h
.text:00410010
.text:00410010 ; =============== S U B R O U T I N E =======================================
.text:00410010
.text:00410010
.text:00410010 ; int __cdecl sub_410010(LPCSTR)
.text:00410010 sub_410010      proc near               ; CODE XREF: sub_4014C0+87↑p
.text:00410010                                         ; sub_4015E0+9C↑p
.text:00410010
.text:00410010 lpFileName      = dword ptr -1Ch
.text:00410010 AccessMode      = dword ptr -18h
.text:00410010 var_8           = dword ptr -8
.text:00410010 var_4           = dword ptr -4
.text:00410010 arg_0           = dword ptr  4
.text:00410010
.text:00410010                 sub     esp, 1Ch
.text:00410013                 mov     [esp+1Ch+var_8], ebx
.text:00410017                 mov     ebx, [esp+1Ch+arg_0]
.text:0041001B                 mov     [esp+1Ch+var_4], esi
.text:0041001F                 test    ebx, ebx
.text:00410021                 jz      loc_4100B2
.text:00410027                 call    _errno
.text:0041002C                 mov     esi, [eax]
.text:0041002E                 mov     [esp+1Ch+AccessMode], 2 ; int
.text:00410036                 mov     [esp+1Ch+lpFileName], ebx ; lpFileName
.text:00410039                 call    sub_410410
.text:0041003E                 test    eax, eax
.text:00410040                 jnz     short loc_4100A0
.text:00410042
.text:00410042 loc_410042:                             ; CODE XREF: sub_410010+A0↓j
.text:00410042                 mov     [esp+1Ch+AccessMode], 10h ; int
.text:0041004A                 mov     [esp+1Ch+lpFileName], ebx ; lpFileName
.text:0041004D                 call    sub_410410
.text:00410052                 test    eax, eax
.text:00410054                 jz      short loc_410091
.text:00410056                 call    _errno
.text:0041005B                 mov     [eax], esi
.text:0041005D                 mov     [esp+1Ch+lpFileName], ebx ; lpFileName
.text:00410060                 call    DeleteFileA
.text:00410065                 sub     esp, 4
.text:00410068                 xor     edx, edx
.text:0041006A                 test    eax, eax
.text:0041006C                 jz      short loc_41007C
.text:0041006E
.text:0041006E loc_41006E:                             ; CODE XREF: sub_410010+7F↓j
.text:0041006E                 mov     ebx, [esp+1Ch+var_8]
.text:00410072                 mov     eax, edx
.text:00410074                 mov     esi, [esp+1Ch+var_4]
.text:00410078                 add     esp, 1Ch
.text:0041007B                 retn
.text:0041007C ; ---------------------------------------------------------------------------
.text:0041007C
.text:0041007C loc_41007C:                             ; CODE XREF: sub_410010+5C↑j
.text:0041007C                 call    sub_4103F0
.text:00410081                 mov     esi, eax
.text:00410083                 call    _errno
.text:00410088                 mov     [eax], esi
.text:0041008A
.text:0041008A loc_41008A:                             ; CODE XREF: sub_410010+8C↓j
.text:0041008A                                         ; sub_410010+AD↓j
.text:0041008A                 mov     edx, 0FFFFFFFFh
.text:0041008F                 jmp     short loc_41006E
.text:00410091 ; ---------------------------------------------------------------------------
.text:00410091
.text:00410091 loc_410091:                             ; CODE XREF: sub_410010+44↑j
.text:00410091                 call    _errno
.text:00410096                 mov     dword ptr [eax], 15h
.text:0041009C                 jmp     short loc_41008A
.text:0041009C ; ---------------------------------------------------------------------------
.text:0041009E                 align 10h
.text:004100A0
.text:004100A0 loc_4100A0:                             ; CODE XREF: sub_410010+30↑j
.text:004100A0                 mov     [esp+1Ch+AccessMode], 180h ; AccessMode
.text:004100A8                 mov     [esp+1Ch+lpFileName], ebx ; FileName
.text:004100AB                 call    _chmod
.text:004100B0                 jmp     short loc_410042
.text:004100B2 ; ---------------------------------------------------------------------------
.text:004100B2
.text:004100B2 loc_4100B2:                             ; CODE XREF: sub_410010+11↑j
.text:004100B2                 call    _errno
.text:004100B7                 mov     dword ptr [eax], 16h
.text:004100BD                 jmp     short loc_41008A
.text:004100BD sub_410010      endp
.text:004100BD
.text:004100BD ; ---------------------------------------------------------------------------
.text:004100BF                 align 10h
.text:004100C0
.text:004100C0 ; =============== S U B R O U T I N E =======================================
.text:004100C0
.text:004100C0
.text:004100C0 sub_4100C0      proc near               ; CODE XREF: .text:0040711D↑p
.text:004100C0
.text:004100C0 var_1C          = dword ptr -1Ch
.text:004100C0 var_18          = dword ptr -18h
.text:004100C0 var_14          = dword ptr -14h
.text:004100C0 arg_0           = dword ptr  4
.text:004100C0 arg_4           = dword ptr  8
.text:004100C0 arg_8           = dword ptr  0Ch
.text:004100C0
.text:004100C0                 push    edi
.text:004100C1                 push    esi
.text:004100C2                 push    ebx
.text:004100C3                 sub     esp, 10h
.text:004100C6                 mov     edi, [esp+1Ch+arg_8]
.text:004100CA                 mov     esi, [esp+1Ch+arg_0]
.text:004100CE                 mov     ebx, [esp+1Ch+arg_4]
.text:004100D2                 cmp     edi, 0Fh
.text:004100D5                 jbe     short loc_410120
.text:004100D7                 mov     ecx, esi
.text:004100D9                 neg     ecx
.text:004100DB                 and     ecx, 3
.text:004100DE                 sub     edi, ecx
.text:004100E0                 mov     edx, ecx
.text:004100E2                 test    ecx, ecx
.text:004100E4                 jz      short loc_4100FA
.text:004100E6                 lea     esi, [esi+0]
.text:004100E9                 lea     edi, [edi+0]
.text:004100F0
.text:004100F0 loc_4100F0:                             ; CODE XREF: sub_4100C0+38↓j
.text:004100F0                 movzx   ecx, byte ptr [ebx]
.text:004100F3                 inc     ebx
.text:004100F4                 mov     [esi], cl
.text:004100F6                 inc     esi
.text:004100F7                 dec     edx
.text:004100F8                 jnz     short loc_4100F0
.text:004100FA
.text:004100FA loc_4100FA:                             ; CODE XREF: sub_4100C0+24↑j
.text:004100FA                 test    bl, 3
.text:004100FD                 jnz     short loc_410143
.text:004100FF                 mov     [esp+1Ch+var_18], ebx
.text:00410103                 mov     edx, edi
.text:00410105                 shr     edx, 2
.text:00410108                 mov     [esp+1Ch+var_14], edx
.text:0041010C                 mov     [esp+1Ch+var_1C], esi
.text:0041010F                 call    sub_4104E0
.text:00410114
.text:00410114 loc_410114:                             ; CODE XREF: sub_4100C0+98↓j
.text:00410114                 mov     edx, edi
.text:00410116                 and     edx, 0FFFFFFFCh
.text:00410119                 and     edi, 3
.text:0041011C                 add     ebx, edx
.text:0041011E                 add     esi, edx
.text:00410120
.text:00410120 loc_410120:                             ; CODE XREF: sub_4100C0+15↑j
.text:00410120                 test    edi, edi
.text:00410122                 mov     edx, edi
.text:00410124                 jz      short loc_41013A
.text:00410126                 lea     esi, [esi+0]
.text:00410129                 lea     edi, [edi+0]
.text:00410130
.text:00410130 loc_410130:                             ; CODE XREF: sub_4100C0+78↓j
.text:00410130                 movzx   ecx, byte ptr [ebx]
.text:00410133                 inc     ebx
.text:00410134                 mov     [esi], cl
.text:00410136                 inc     esi
.text:00410137                 dec     edx
.text:00410138                 jnz     short loc_410130
.text:0041013A
.text:0041013A loc_41013A:                             ; CODE XREF: sub_4100C0+64↑j
.text:0041013A                 add     esp, 10h
.text:0041013D                 mov     eax, esi
.text:0041013F                 pop     ebx
.text:00410140                 pop     esi
.text:00410141                 pop     edi
.text:00410142                 retn
.text:00410143 ; ---------------------------------------------------------------------------
.text:00410143
.text:00410143 loc_410143:                             ; CODE XREF: sub_4100C0+3D↑j
.text:00410143                 mov     [esp+1Ch+var_18], ebx
.text:00410147                 mov     ecx, edi
.text:00410149                 shr     ecx, 2
.text:0041014C                 mov     [esp+1Ch+var_14], ecx
.text:00410150                 mov     [esp+1Ch+var_1C], esi
.text:00410153                 call    sub_4105E0
.text:00410158                 jmp     short loc_410114
.text:00410158 sub_4100C0      endp
.text:00410158
.text:00410158 ; ---------------------------------------------------------------------------
.text:0041015A                 align 10h
.text:00410160
.text:00410160 ; =============== S U B R O U T I N E =======================================
.text:00410160
.text:00410160 ; Attributes: info_from_lumina
.text:00410160
.text:00410160 ___get_errno    proc near               ; CODE XREF: sub_4103F0+B↓p
.text:00410160
.text:00410160 arg_0           = dword ptr  4
.text:00410160
.text:00410160                 mov     eax, [esp+arg_0]
.text:00410164                 cmp     eax, 53h ; 'S'
.text:00410167                 jg      loc_410260
.text:0041016D                 cmp     eax, 52h ; 'R'
.text:00410170                 jge     short loc_4101C2
.text:00410172                 cmp     eax, 0Fh
.text:00410175                 jz      short loc_410190
.text:00410177                 cmp     eax, 0Fh
.text:0041017A                 jg      short loc_4101F0
.text:0041017C                 cmp     eax, 9
.text:0041017F                 jg      short loc_4101D0
.text:00410181                 cmp     eax, 7
.text:00410184                 jge     short loc_4101C9
.text:00410186                 cmp     eax, 3
.text:00410189                 jg      short loc_4101AA
.text:0041018B                 cmp     eax, 2
.text:0041018E                 jl      short loc_4101A3
.text:00410190
.text:00410190 loc_410190:                             ; CODE XREF: ___get_errno+15↑j
.text:00410190                                         ; ___get_errno+9D↓j ...
.text:00410190                 mov     edx, 2
.text:00410195                 lea     esi, [esi+0]
.text:00410199                 lea     edi, [edi+0]
.text:004101A0
.text:004101A0 loc_4101A0:                             ; CODE XREF: ___get_errno+48↓j
.text:004101A0                                         ; ___get_errno+59↓j ...
.text:004101A0                 mov     eax, edx
.text:004101A2                 retn
.text:004101A3 ; ---------------------------------------------------------------------------
.text:004101A3
.text:004101A3 loc_4101A3:                             ; CODE XREF: ___get_errno+2E↑j
.text:004101A3                                         ; ___get_errno+78↓j ...
.text:004101A3                 mov     edx, 16h
.text:004101A8                 jmp     short loc_4101A0
.text:004101AA ; ---------------------------------------------------------------------------
.text:004101AA
.text:004101AA loc_4101AA:                             ; CODE XREF: ___get_errno+29↑j
.text:004101AA                 cmp     eax, 5
.text:004101AD                 jz      short loc_4101C2
.text:004101AF                 cmp     eax, 5
.text:004101B2                 jg      short loc_4101BB
.text:004101B4                 mov     edx, 18h
.text:004101B9                 jmp     short loc_4101A0
.text:004101BB ; ---------------------------------------------------------------------------
.text:004101BB
.text:004101BB loc_4101BB:                             ; CODE XREF: ___get_errno+52↑j
.text:004101BB                                         ; ___get_errno+180↓j
.text:004101BB                 mov     edx, 9
.text:004101C0                 jmp     short loc_4101A0
.text:004101C2 ; ---------------------------------------------------------------------------
.text:004101C2
.text:004101C2 loc_4101C2:                             ; CODE XREF: ___get_errno+10↑j
.text:004101C2                                         ; ___get_errno+4D↑j ...
.text:004101C2                 mov     edx, 0Dh
.text:004101C7                 jmp     short loc_4101A0
.text:004101C9 ; ---------------------------------------------------------------------------
.text:004101C9
.text:004101C9 loc_4101C9:                             ; CODE XREF: ___get_errno+24↑j
.text:004101C9                                         ; ___get_errno+73↓j ...
.text:004101C9                 mov     edx, 0Ch
.text:004101CE                 jmp     short loc_4101A0
.text:004101D0 ; ---------------------------------------------------------------------------
.text:004101D0
.text:004101D0 loc_4101D0:                             ; CODE XREF: ___get_errno+1F↑j
.text:004101D0                 cmp     eax, 0Dh
.text:004101D3                 jg      short loc_4101C9
.text:004101D5                 cmp     eax, 0Ch
.text:004101D8                 jge     short loc_4101A3
.text:004101DA                 cmp     eax, 0Ah
.text:004101DD                 mov     edx, 7
.text:004101E2                 jz      short loc_4101A0
.text:004101E4                 cmp     eax, 0Bh
.text:004101E7                 jnz     short loc_4101A3
.text:004101E9
.text:004101E9 loc_4101E9:                             ; CODE XREF: ___get_errno+21A↓j
.text:004101E9                 mov     edx, 8
.text:004101EE                 jmp     short loc_4101A0
.text:004101F0 ; ---------------------------------------------------------------------------
.text:004101F0
.text:004101F0 loc_4101F0:                             ; CODE XREF: ___get_errno+1A↑j
.text:004101F0                 cmp     eax, 22h ; '"'
.text:004101F3                 jg      short loc_410224
.text:004101F5                 cmp     eax, 16h
.text:004101F8                 jge     short loc_4101C2
.text:004101FA                 cmp     eax, 12h
.text:004101FD                 jz      short loc_410190
.text:004101FF                 cmp     eax, 12h
.text:00410202                 jg      short loc_410215
.text:00410204                 cmp     eax, 10h
.text:00410207                 jz      short loc_4101C2
.text:00410209                 mov     edx, 12h
.text:0041020E                 cmp     eax, 11h
.text:00410211
.text:00410211 loc_410211:                             ; CODE XREF: ___get_errno+172↓j
.text:00410211                                         ; ___get_errno+24C↓j ...
.text:00410211                 jnz     short loc_4101A3
.text:00410213                 jmp     short loc_4101A0
.text:00410215 ; ---------------------------------------------------------------------------
.text:00410215
.text:00410215 loc_410215:                             ; CODE XREF: ___get_errno+A2↑j
.text:00410215                 cmp     eax, 14h
.text:00410218                 jle     short loc_4101C2
.text:0041021A
.text:0041021A loc_41021A:                             ; CODE XREF: ___get_errno+1D7↓j
.text:0041021A                 mov     edx, 10h
.text:0041021F                 jmp     loc_4101A0
.text:00410224 ; ---------------------------------------------------------------------------
.text:00410224
.text:00410224 loc_410224:                             ; CODE XREF: ___get_errno+93↑j
.text:00410224                 cmp     eax, 41h ; 'A'
.text:00410227                 jz      short loc_4101C2
.text:00410229                 cmp     eax, 41h ; 'A'
.text:0041022C                 jg      short loc_410241
.text:0041022E                 cmp     eax, 24h ; '$'
.text:00410231                 jz      short loc_4101C2
.text:00410233                 cmp     eax, 35h ; '5'
.text:00410236                 jnz     loc_4101A3
.text:0041023C                 jmp     loc_410190
.text:00410241 ; ---------------------------------------------------------------------------
.text:00410241
.text:00410241 loc_410241:                             ; CODE XREF: ___get_errno+CC↑j
.text:00410241                 cmp     eax, 43h ; 'C'
.text:00410244                 jz      loc_410190
.text:0041024A                 cmp     eax, 50h ; 'P'
.text:0041024D                 jnz     loc_4101A3
.text:00410253
.text:00410253 loc_410253:                             ; CODE XREF: ___get_errno+1FB↓j
.text:00410253                 mov     edx, 11h
.text:00410258                 jmp     loc_4101A0
.text:00410258 ; ---------------------------------------------------------------------------
.text:0041025D                 align 10h
.text:00410260
.text:00410260 loc_410260:                             ; CODE XREF: ___get_errno+7↑j
.text:00410260                 cmp     eax, 0A1h ; '¡'
.text:00410265                 jz      loc_410190
.text:0041026B                 cmp     eax, 0A1h ; '¡'
.text:00410270                 jg      loc_410320
.text:00410276                 cmp     eax, 81h
.text:0041027B                 jg      short loc_4102E5
.text:0041027D                 cmp     eax, 80h ; '€'
.text:00410282                 mov     edx, 0Ah
.text:00410287                 jge     loc_4101A0
.text:0041028D                 cmp     eax, 6Ch ; 'l'
.text:00410290                 jz      loc_4101C2
.text:00410296                 cmp     eax, 6Ch ; 'l'
.text:00410299                 jg      short loc_4102B7
.text:0041029B                 cmp     eax, 57h ; 'W'
.text:0041029E                 jz      loc_4101A3
.text:004102A4                 cmp     eax, 59h ; 'Y'
.text:004102A7                 jnz     loc_4101A3
.text:004102AD
.text:004102AD loc_4102AD:                             ; CODE XREF: ___get_errno+1E9↓j
.text:004102AD                                         ; ___get_errno+23C↓j
.text:004102AD                 mov     edx, 0Bh
.text:004102B2                 jmp     loc_4101A0
.text:004102B7 ; ---------------------------------------------------------------------------
.text:004102B7
.text:004102B7 loc_4102B7:                             ; CODE XREF: ___get_errno+139↑j
.text:004102B7                 cmp     eax, 70h ; 'p'
.text:004102BA                 mov     edx, 1Ch
.text:004102BF                 jz      loc_4101A0
.text:004102C5                 cmp     eax, 70h ; 'p'
.text:004102C8                 jg      short loc_4102D7
.text:004102CA                 mov     edx, 20h ; ' '
.text:004102CF                 cmp     eax, 6Dh ; 'm'
.text:004102D2                 jmp     loc_410211
.text:004102D7 ; ---------------------------------------------------------------------------
.text:004102D7
.text:004102D7 loc_4102D7:                             ; CODE XREF: ___get_errno+168↑j
.text:004102D7                 cmp     eax, 72h ; 'r'
.text:004102DA
.text:004102DA loc_4102DA:                             ; CODE XREF: ___get_errno+19C↓j
.text:004102DA                 jnz     loc_4101A3
.text:004102E0                 jmp     loc_4101BB
.text:004102E5 ; ---------------------------------------------------------------------------
.text:004102E5
.text:004102E5 loc_4102E5:                             ; CODE XREF: ___get_errno+11B↑j
.text:004102E5                 cmp     eax, 84h ; '„'
.text:004102EA                 jz      loc_4101C2
.text:004102F0                 cmp     eax, 84h ; '„'
.text:004102F5                 jg      short loc_4102FE
.text:004102F7                 cmp     eax, 82h ; '‚'
.text:004102FC                 jmp     short loc_4102DA
.text:004102FE ; ---------------------------------------------------------------------------
.text:004102FE
.text:004102FE loc_4102FE:                             ; CODE XREF: ___get_errno+195↑j
.text:004102FE                 cmp     eax, 91h ; '‘'
.text:00410303                 mov     edx, 29h ; ')'
.text:00410308                 jz      loc_4101A0
.text:0041030E                 cmp     eax, 9Eh ; 'ž'
.text:00410313
.text:00410313 loc_410313:                             ; CODE XREF: ___get_errno+1F4↓j
.text:00410313                 jnz     loc_4101A3
.text:00410319                 jmp     loc_4101C2
.text:00410319 ; ---------------------------------------------------------------------------
.text:0041031E                 align 10h
.text:00410320
.text:00410320 loc_410320:                             ; CODE XREF: ___get_errno+110↑j
.text:00410320                 cmp     eax, 0CEh ; 'Î'
.text:00410325                 jz      loc_410190
.text:0041032B                 cmp     eax, 0CEh ; 'Î'
.text:00410330                 jg      short loc_410380
.text:00410332                 cmp     eax, 0AAh ; 'ª'
.text:00410337                 jz      loc_41021A
.text:0041033D                 cmp     eax, 0AAh ; 'ª'
.text:00410342                 jg      short loc_410356
.text:00410344                 cmp     eax, 0A4h ; '¤'
.text:00410349                 jz      loc_4102AD
.text:0041034F                 cmp     eax, 0A7h ; '§'
.text:00410354                 jmp     short loc_410313
.text:00410356 ; ---------------------------------------------------------------------------
.text:00410356
.text:00410356 loc_410356:                             ; CODE XREF: ___get_errno+1E2↑j
.text:00410356                 cmp     eax, 0B7h ; '·'
.text:0041035B                 jz      loc_410253
.text:00410361                 cmp     eax, 0B7h ; '·'
.text:00410366                 jl      loc_4101A3
.text:0041036C                 sub     eax, 0BCh ; '¼'
.text:00410371                 cmp     eax, 0Eh
.text:00410374                 ja      loc_4101A3
.text:0041037A                 jmp     loc_4101E9
.text:0041037A ; ---------------------------------------------------------------------------
.text:0041037F                 align 10h
.text:00410380
.text:00410380 loc_410380:                             ; CODE XREF: ___get_errno+1D0↑j
.text:00410380                 cmp     eax, 46Bh
.text:00410385                 mov     edx, 24h ; '$'
.text:0041038A                 jz      loc_4101A0
.text:00410390                 cmp     eax, 46Bh
.text:00410395                 jg      short loc_4103B1
.text:00410397                 cmp     eax, 0D7h ; '×'
.text:0041039C                 jz      loc_4102AD
.text:004103A2                 mov     edx, 5
.text:004103A7                 cmp     eax, 45Dh
.text:004103AC                 jmp     loc_410211
.text:004103B1 ; ---------------------------------------------------------------------------
.text:004103B1
.text:004103B1 loc_4103B1:                             ; CODE XREF: ___get_errno+235↑j
.text:004103B1                 cmp     eax, 4D5h
.text:004103B6                 mov     edx, 4
.text:004103BB                 jz      loc_4101A0
.text:004103C1                 cmp     eax, 4D5h
.text:004103C6                 jg      short loc_4103D7
.text:004103C8                 mov     edx, 13h
.text:004103CD                 cmp     eax, 4B0h
.text:004103D2                 jmp     loc_410211
.text:004103D7 ; ---------------------------------------------------------------------------
.text:004103D7
.text:004103D7 loc_4103D7:                             ; CODE XREF: ___get_errno+266↑j
.text:004103D7                 cmp     eax, 718h
.text:004103DC                 jnz     loc_4101A3
.text:004103E2                 jmp     loc_4101C9
.text:004103E2 ___get_errno    endp
.text:004103E2
.text:004103E2 ; ---------------------------------------------------------------------------
.text:004103E7                 align 10h
.text:004103F0
.text:004103F0 ; =============== S U B R O U T I N E =======================================
.text:004103F0
.text:004103F0
.text:004103F0 sub_4103F0      proc near               ; CODE XREF: sub_410010:loc_41007C↑p
.text:004103F0                                         ; sub_410410:loc_4104C3↓p
.text:004103F0
.text:004103F0 var_C           = dword ptr -0Ch
.text:004103F0
.text:004103F0                 sub     esp, 0Ch
.text:004103F3                 call    GetLastError
.text:004103F8                 mov     [esp+0Ch+var_C], eax
.text:004103FB                 call    ___get_errno
.text:00410400                 add     esp, 0Ch
.text:00410403                 retn
.text:00410403 sub_4103F0      endp
.text:00410403
.text:00410403 ; ---------------------------------------------------------------------------
.text:00410404                 align 10h
.text:00410410
.text:00410410 ; =============== S U B R O U T I N E =======================================
.text:00410410
.text:00410410
.text:00410410 ; int __cdecl sub_410410(LPCSTR lpFileName, int)
.text:00410410 sub_410410      proc near               ; CODE XREF: sub_410010+29↑p
.text:00410410                                         ; sub_410010+3D↑p
.text:00410410
.text:00410410 uMode           = dword ptr -1Ch
.text:00410410 var_10          = dword ptr -10h
.text:00410410 var_C           = dword ptr -0Ch
.text:00410410 var_8           = dword ptr -8
.text:00410410 var_4           = dword ptr -4
.text:00410410 lpFileName      = dword ptr  4
.text:00410410 arg_4           = dword ptr  8
.text:00410410
.text:00410410                 sub     esp, 1Ch
.text:00410413                 mov     [esp+1Ch+var_10], ebx
.text:00410417                 mov     ebx, [esp+1Ch+lpFileName]
.text:0041041B                 mov     [esp+1Ch+var_4], ebp
.text:0041041F                 xor     ebp, ebp
.text:00410421                 test    ebx, ebx
.text:00410423                 mov     [esp+1Ch+var_C], esi
.text:00410427                 mov     esi, [esp+1Ch+arg_4]
.text:0041042B                 mov     [esp+1Ch+var_8], edi
.text:0041042F                 jz      short loc_410439
.text:00410431                 test    esi, 0FFFFFFE8h
.text:00410437                 jz      short loc_410460
.text:00410439
.text:00410439 loc_410439:                             ; CODE XREF: sub_410410+1F↑j
.text:00410439                 call    _errno
.text:0041043E                 mov     dword ptr [eax], 16h
.text:00410444
.text:00410444 loc_410444:                             ; CODE XREF: sub_410410+B1↓j
.text:00410444                 mov     eax, 0FFFFFFFFh
.text:00410449
.text:00410449 loc_410449:                             ; CODE XREF: sub_410410+86↓j
.text:00410449                                         ; sub_410410+A4↓j
.text:00410449                 mov     ebx, [esp+1Ch+var_10]
.text:0041044D                 mov     esi, [esp+1Ch+var_C]
.text:00410451                 mov     edi, [esp+1Ch+var_8]
.text:00410455                 mov     ebp, [esp+1Ch+var_4]
.text:00410459                 add     esp, 1Ch
.text:0041045C                 retn
.text:0041045C ; ---------------------------------------------------------------------------
.text:0041045D                 align 10h
.text:00410460
.text:00410460 loc_410460:                             ; CODE XREF: sub_410410+27↑j
.text:00410460                 mov     [esp+1Ch+uMode], 8001h ; uMode
.text:00410467                 call    SetErrorMode
.text:0041046C                 sub     esp, 4
.text:0041046F                 mov     [esp+1Ch+uMode], ebx ; lpFileName
.text:00410472                 call    GetFileAttributesA
.text:00410477                 sub     esp, 4
.text:0041047A                 mov     edi, eax
.text:0041047C                 cmp     eax, 0FFFFFFFFh
.text:0041047F                 jz      short loc_4104C3
.text:00410481
.text:00410481 loc_410481:                             ; CODE XREF: sub_410410+C6↓j
.text:00410481                 mov     [esp+1Ch+uMode], 0 ; uMode
.text:00410488                 call    SetErrorMode
.text:0041048D                 sub     esp, 4
.text:00410490                 mov     eax, 0FFFFFFFFh
.text:00410495                 inc     ebp
.text:00410496                 jz      short loc_410449
.text:00410498                 test    esi, 10h
.text:0041049E                 jz      short loc_4104A8
.text:004104A0                 test    edi, 10h
.text:004104A6                 jz      short loc_4104B6
.text:004104A8
.text:004104A8 loc_4104A8:                             ; CODE XREF: sub_410410+8E↑j
.text:004104A8                 and     esi, 2
.text:004104AB                 jz      short loc_4104B2
.text:004104AD                 and     edi, 1
.text:004104B0                 jnz     short loc_4104B6
.text:004104B2
.text:004104B2 loc_4104B2:                             ; CODE XREF: sub_410410+9B↑j
.text:004104B2                 xor     eax, eax
.text:004104B4                 jmp     short loc_410449
.text:004104B6 ; ---------------------------------------------------------------------------
.text:004104B6
.text:004104B6 loc_4104B6:                             ; CODE XREF: sub_410410+96↑j
.text:004104B6                                         ; sub_410410+A0↑j
.text:004104B6                 call    _errno
.text:004104BB                 mov     dword ptr [eax], 0Dh
.text:004104C1                 jmp     short loc_410444
.text:004104C3 ; ---------------------------------------------------------------------------
.text:004104C3
.text:004104C3 loc_4104C3:                             ; CODE XREF: sub_410410+6F↑j
.text:004104C3                 call    sub_4103F0
.text:004104C8                 mov     ebp, eax
.text:004104CA                 call    _errno
.text:004104CF                 mov     [eax], ebp
.text:004104D1                 mov     ebp, 0FFFFFFFFh
.text:004104D6                 jmp     short loc_410481
.text:004104D6 sub_410410      endp
.text:004104D6
.text:004104D6 ; ---------------------------------------------------------------------------
.text:004104D8                 align 10h
.text:004104E0
.text:004104E0 ; =============== S U B R O U T I N E =======================================
.text:004104E0
.text:004104E0
.text:004104E0 sub_4104E0      proc near               ; CODE XREF: sub_4100C0+4F↑p
.text:004104E0
.text:004104E0 var_8           = dword ptr -8
.text:004104E0 var_4           = dword ptr -4
.text:004104E0 arg_0           = dword ptr  4
.text:004104E0 arg_4           = dword ptr  8
.text:004104E0 arg_8           = dword ptr  0Ch
.text:004104E0
.text:004104E0                 sub     esp, 8
.text:004104E3                 mov     ecx, [esp+8+arg_0]
.text:004104E7                 mov     [esp+8+var_8], ebx
.text:004104EA                 mov     ebx, [esp+8+arg_8]
.text:004104EE                 mov     [esp+8+var_4], esi
.text:004104F2                 mov     edx, [esp+8+arg_4]
.text:004104F6                 mov     eax, ebx
.text:004104F8                 and     eax, 7
.text:004104FB                 cmp     eax, 7          ; switch 8 cases
.text:004104FE                 ja      short def_410500 ; jumptable 00410500 default case
.text:00410500                 jmp     ds:jpt_410500[eax*4] ; switch jump
.text:00410500 ; ---------------------------------------------------------------------------
.text:00410507                 align 4
.text:00410508 jpt_410500      dd offset loc_41058A    ; DATA XREF: sub_4104E0+20↑r
.text:00410508                 dd offset loc_410591    ; jump table for switch statement
.text:00410508                 dd offset loc_410528
.text:00410508                 dd offset loc_410599
.text:00410508                 dd offset loc_4105A6
.text:00410508                 dd offset loc_4105B3
.text:00410508                 dd offset loc_4105C0
.text:00410508                 dd offset loc_4105CD
.text:00410528 ; ---------------------------------------------------------------------------
.text:00410528
.text:00410528 loc_410528:                             ; CODE XREF: sub_4104E0+20↑j
.text:00410528                                         ; DATA XREF: sub_4104E0:jpt_410500↑o
.text:00410528                 mov     eax, [edx]      ; jumptable 00410500 case 2
.text:0041052A                 sub     ecx, 1Ch
.text:0041052D                 add     ebx, 6
.text:00410530                 sub     edx, 18h
.text:00410533                 lea     esi, [esi+0]
.text:00410539                 lea     edi, [edi+0]
.text:00410540
.text:00410540 loc_410540:                             ; CODE XREF: sub_4104E0+A8↓j
.text:00410540                 mov     esi, [edx+1Ch]
.text:00410543                 add     edx, 20h ; ' '
.text:00410546                 mov     [ecx+1Ch], eax
.text:00410549                 add     ecx, 20h ; ' '
.text:0041054C                 sub     ebx, 8
.text:0041054F                 jnz     short def_410500 ; jumptable 00410500 default case
.text:00410551                 mov     [ecx], esi
.text:00410553                 mov     ebx, [esp+8+var_8]
.text:00410556                 mov     esi, [esp+8+var_4]
.text:0041055A                 add     esp, 8
.text:0041055D                 retn
.text:0041055D ; ---------------------------------------------------------------------------
.text:0041055E                 align 10h
.text:00410560
.text:00410560 def_410500:                             ; CODE XREF: sub_4104E0+1E↑j
.text:00410560                                         ; sub_4104E0+6F↑j ...
.text:00410560                 mov     eax, [edx]      ; jumptable 00410500 default case
.text:00410562                 mov     [ecx], esi
.text:00410564
.text:00410564 loc_410564:                             ; CODE XREF: sub_4104E0+AF↓j
.text:00410564                 mov     esi, [edx+4]
.text:00410567                 mov     [ecx+4], eax
.text:0041056A
.text:0041056A loc_41056A:                             ; CODE XREF: sub_4104E0+F6↓j
.text:0041056A                 mov     eax, [edx+8]
.text:0041056D                 mov     [ecx+8], esi
.text:00410570
.text:00410570 loc_410570:                             ; CODE XREF: sub_4104E0+EB↓j
.text:00410570                 mov     esi, [edx+0Ch]
.text:00410573                 mov     [ecx+0Ch], eax
.text:00410576
.text:00410576 loc_410576:                             ; CODE XREF: sub_4104E0+DE↓j
.text:00410576                 mov     eax, [edx+10h]
.text:00410579                 mov     [ecx+10h], esi
.text:0041057C
.text:0041057C loc_41057C:                             ; CODE XREF: sub_4104E0+D1↓j
.text:0041057C                 mov     esi, [edx+14h]
.text:0041057F                 mov     [ecx+14h], eax
.text:00410582
.text:00410582 loc_410582:                             ; CODE XREF: sub_4104E0+C4↓j
.text:00410582                 mov     eax, [edx+18h]
.text:00410585                 mov     [ecx+18h], esi
.text:00410588                 jmp     short loc_410540
.text:0041058A ; ---------------------------------------------------------------------------
.text:0041058A
.text:0041058A loc_41058A:                             ; CODE XREF: sub_4104E0+20↑j
.text:0041058A                                         ; DATA XREF: sub_4104E0:jpt_410500↑o
.text:0041058A                 mov     eax, [edx]      ; jumptable 00410500 case 0
.text:0041058C                 sub     ecx, 4
.text:0041058F                 jmp     short loc_410564
.text:00410591 ; ---------------------------------------------------------------------------
.text:00410591
.text:00410591 loc_410591:                             ; CODE XREF: sub_4104E0+20↑j
.text:00410591                                         ; DATA XREF: sub_4104E0:jpt_410500↑o
.text:00410591                 mov     esi, [edx]      ; jumptable 00410500 case 1
.text:00410593                 dec     ebx
.text:00410594                 add     edx, 4
.text:00410597                 jmp     short def_410500 ; jumptable 00410500 default case
.text:00410599 ; ---------------------------------------------------------------------------
.text:00410599
.text:00410599 loc_410599:                             ; CODE XREF: sub_4104E0+20↑j
.text:00410599                                         ; DATA XREF: sub_4104E0:jpt_410500↑o
.text:00410599                 mov     esi, [edx]      ; jumptable 00410500 case 3
.text:0041059B                 sub     ecx, 18h
.text:0041059E                 add     ebx, 5
.text:004105A1                 sub     edx, 14h
.text:004105A4                 jmp     short loc_410582
.text:004105A6 ; ---------------------------------------------------------------------------
.text:004105A6
.text:004105A6 loc_4105A6:                             ; CODE XREF: sub_4104E0+20↑j
.text:004105A6                                         ; DATA XREF: sub_4104E0:jpt_410500↑o
.text:004105A6                 mov     eax, [edx]      ; jumptable 00410500 case 4
.text:004105A8                 sub     ecx, 14h
.text:004105AB                 add     ebx, 4
.text:004105AE                 sub     edx, 10h
.text:004105B1                 jmp     short loc_41057C
.text:004105B3 ; ---------------------------------------------------------------------------
.text:004105B3
.text:004105B3 loc_4105B3:                             ; CODE XREF: sub_4104E0+20↑j
.text:004105B3                                         ; DATA XREF: sub_4104E0:jpt_410500↑o
.text:004105B3                 mov     esi, [edx]      ; jumptable 00410500 case 5
.text:004105B5                 sub     ecx, 10h
.text:004105B8                 add     ebx, 3
.text:004105BB                 sub     edx, 0Ch
.text:004105BE                 jmp     short loc_410576
.text:004105C0 ; ---------------------------------------------------------------------------
.text:004105C0
.text:004105C0 loc_4105C0:                             ; CODE XREF: sub_4104E0+20↑j
.text:004105C0                                         ; DATA XREF: sub_4104E0:jpt_410500↑o
.text:004105C0                 mov     eax, [edx]      ; jumptable 00410500 case 6
.text:004105C2                 sub     ecx, 0Ch
.text:004105C5                 add     ebx, 2
.text:004105C8                 sub     edx, 8
.text:004105CB                 jmp     short loc_410570
.text:004105CD ; ---------------------------------------------------------------------------
.text:004105CD
.text:004105CD loc_4105CD:                             ; CODE XREF: sub_4104E0+20↑j
.text:004105CD                                         ; DATA XREF: sub_4104E0:jpt_410500↑o
.text:004105CD                 mov     esi, [edx]      ; jumptable 00410500 case 7
.text:004105CF                 sub     ecx, 8
.text:004105D2                 inc     ebx
.text:004105D3                 sub     edx, 4
.text:004105D6                 jmp     short loc_41056A
.text:004105D6 sub_4104E0      endp
.text:004105D6
.text:004105D6 ; ---------------------------------------------------------------------------
.text:004105D8                 align 10h
.text:004105E0
.text:004105E0 ; =============== S U B R O U T I N E =======================================
.text:004105E0
.text:004105E0
.text:004105E0 sub_4105E0      proc near               ; CODE XREF: sub_4100C0+93↑p
.text:004105E0
.text:004105E0 var_1C          = dword ptr -1Ch
.text:004105E0 var_18          = dword ptr -18h
.text:004105E0 var_14          = dword ptr -14h
.text:004105E0 arg_0           = dword ptr  4
.text:004105E0 arg_4           = dword ptr  8
.text:004105E0 arg_8           = dword ptr  0Ch
.text:004105E0
.text:004105E0                 push    ebp
.text:004105E1                 push    edi
.text:004105E2                 push    esi
.text:004105E3                 push    ebx
.text:004105E4                 sub     esp, 0Ch
.text:004105E7                 mov     edx, [esp+1Ch+arg_4]
.text:004105EB                 mov     [esp+1Ch+var_14], 20h ; ' '
.text:004105F3                 mov     eax, [esp+1Ch+arg_8]
.text:004105F7                 mov     esi, [esp+1Ch+arg_0]
.text:004105FB                 mov     ecx, edx
.text:004105FD                 and     ecx, 3
.text:00410600                 and     eax, 3
.text:00410603                 shl     ecx, 3
.text:00410606                 and     edx, 0FFFFFFFCh
.text:00410609                 sub     [esp+1Ch+var_14], ecx
.text:0041060D                 cmp     eax, 1
.text:00410610                 mov     [esp+1Ch+var_18], ecx
.text:00410614                 jz      loc_410700
.text:0041061A                 cmp     eax, 1
.text:0041061D                 jb      loc_4106F0
.text:00410623                 cmp     eax, 2
.text:00410626                 jz      loc_4106D4
.text:0041062C                 cmp     eax, 3
.text:0041062F                 jz      loc_4106C3
.text:00410635
.text:00410635 loc_410635:                             ; CODE XREF: sub_4105E0+C7↓j
.text:00410635                                         ; sub_4105E0+12C↓j
.text:00410635                 movzx   ecx, byte ptr [esp+1Ch+var_18]
.text:0041063A                 mov     eax, edi
.text:0041063C                 mov     ebx, [edx]
.text:0041063E                 shr     ebp, cl
.text:00410640                 movzx   ecx, byte ptr [esp+1Ch+var_14]
.text:00410645                 shl     eax, cl
.text:00410647                 or      ebp, eax
.text:00410649                 mov     [esi], ebp
.text:0041064B
.text:0041064B loc_41064B:                             ; CODE XREF: sub_4105E0+11B↓j
.text:0041064B                 mov     ecx, [edx+4]
.text:0041064E                 mov     ebp, ebx
.text:00410650                 mov     [esp+1Ch+var_1C], ecx
.text:00410653                 movzx   ecx, byte ptr [esp+1Ch+var_18]
.text:00410658                 shr     edi, cl
.text:0041065A                 movzx   ecx, byte ptr [esp+1Ch+var_14]
.text:0041065F                 shl     ebp, cl
.text:00410661                 or      edi, ebp
.text:00410663                 mov     [esi+4], edi
.text:00410666
.text:00410666 loc_410666:                             ; CODE XREF: sub_4105E0+F2↓j
.text:00410666                 movzx   ecx, byte ptr [esp+1Ch+var_18]
.text:0041066B                 mov     edi, [esp+1Ch+var_1C]
.text:0041066E                 mov     ebp, [edx+8]
.text:00410671                 shr     ebx, cl
.text:00410673                 movzx   ecx, byte ptr [esp+1Ch+var_14]
.text:00410678                 shl     edi, cl
.text:0041067A                 or      ebx, edi
.text:0041067C                 mov     [esi+8], ebx
.text:0041067F
.text:0041067F loc_41067F:                             ; CODE XREF: sub_4105E0+107↓j
.text:0041067F                 movzx   ecx, byte ptr [esp+1Ch+var_18]
.text:00410684                 mov     ebx, ebp
.text:00410686                 mov     edi, [edx+0Ch]
.text:00410689                 add     edx, 10h
.text:0041068C                 shr     [esp+1Ch+var_1C], cl
.text:0041068F                 movzx   ecx, byte ptr [esp+1Ch+var_14]
.text:00410694                 shl     ebx, cl
.text:00410696                 or      [esp+1Ch+var_1C], ebx
.text:00410699                 mov     ebx, [esp+1Ch+var_1C]
.text:0041069C                 mov     [esi+0Ch], ebx
.text:0041069F                 add     esi, 10h
.text:004106A2                 sub     [esp+1Ch+arg_8], 4
.text:004106A7                 jnz     short loc_410635
.text:004106A9                 movzx   ecx, byte ptr [esp+1Ch+var_18]
.text:004106AE                 shr     ebp, cl
.text:004106B0                 movzx   ecx, byte ptr [esp+1Ch+var_14]
.text:004106B5                 shl     edi, cl
.text:004106B7                 or      ebp, edi
.text:004106B9                 mov     [esi], ebp
.text:004106BB                 add     esp, 0Ch
.text:004106BE                 pop     ebx
.text:004106BF                 pop     esi
.text:004106C0                 pop     edi
.text:004106C1                 pop     ebp
.text:004106C2                 retn
.text:004106C3 ; ---------------------------------------------------------------------------
.text:004106C3
.text:004106C3 loc_4106C3:                             ; CODE XREF: sub_4105E0+4F↑j
.text:004106C3                 inc     [esp+1Ch+arg_8]
.text:004106C7                 sub     esi, 8
.text:004106CA                 mov     eax, [edx+4]
.text:004106CD                 mov     ebx, [edx]
.text:004106CF                 mov     [esp+1Ch+var_1C], eax
.text:004106D2                 jmp     short loc_410666
.text:004106D4 ; ---------------------------------------------------------------------------
.text:004106D4
.text:004106D4 loc_4106D4:                             ; CODE XREF: sub_4105E0+46↑j
.text:004106D4                 add     [esp+1Ch+arg_8], 2
.text:004106D9                 sub     esi, 0Ch
.text:004106DC                 mov     ecx, [edx]
.text:004106DE                 mov     ebp, [edx+4]
.text:004106E1                 sub     edx, 4
.text:004106E4                 mov     [esp+1Ch+var_1C], ecx
.text:004106E7                 jmp     short loc_41067F
.text:004106E7 ; ---------------------------------------------------------------------------
.text:004106E9                 align 10h
.text:004106F0
.text:004106F0 loc_4106F0:                             ; CODE XREF: sub_4105E0+3D↑j
.text:004106F0                 mov     edi, [edx]
.text:004106F2                 sub     esi, 4
.text:004106F5                 mov     ebx, [edx+4]
.text:004106F8                 add     edx, 4
.text:004106FB                 jmp     loc_41064B
.text:00410700 ; ---------------------------------------------------------------------------
.text:00410700
.text:00410700 loc_410700:                             ; CODE XREF: sub_4105E0+34↑j
.text:00410700                 dec     [esp+1Ch+arg_8]
.text:00410704                 mov     ebp, [edx]
.text:00410706                 mov     edi, [edx+4]
.text:00410709                 add     edx, 8
.text:0041070C                 jmp     loc_410635
.text:0041070C sub_4105E0      endp
.text:0041070C
.text:00410711 ; ---------------------------------------------------------------------------
.text:00410711                 jmp     short loc_410720
.text:00410711 ; ---------------------------------------------------------------------------
.text:00410713                 align 10h
.text:00410720
.text:00410720 loc_410720:                             ; CODE XREF: .text:00410711↑j
.text:00410720                 sub     esp, 8
.text:00410723                 mov     ecx, [esp+0Ch]
.text:00410727                 mov     [esp+4], esi
.text:0041072B                 mov     esi, [esp+14h]
.text:0041072F                 mov     [esp], ebx
.text:00410732                 mov     edx, [esp+10h]
.text:00410736                 mov     eax, esi
.text:00410738                 and     eax, 7
.text:0041073B                 cmp     eax, 7          ; switch 8 cases
.text:0041073E                 ja      short def_410740 ; jumptable 00410740 default case
.text:00410740                 jmp     ds:jpt_410740[eax*4] ; switch jump
.text:00410740 ; ---------------------------------------------------------------------------
.text:00410747                 align 4
.text:00410748 jpt_410740      dd offset loc_4107CC    ; DATA XREF: .text:00410740↑r
.text:00410748                 dd offset loc_4107D7    ; jump table for switch statement
.text:00410748                 dd offset loc_410768
.text:00410748                 dd offset loc_4107E3
.text:00410748                 dd offset loc_4107F1
.text:00410748                 dd offset loc_4107FF
.text:00410748                 dd offset loc_41080D
.text:00410748                 dd offset loc_41081B
.text:00410768 ; ---------------------------------------------------------------------------
.text:00410768
.text:00410768 loc_410768:                             ; CODE XREF: .text:00410740↑j
.text:00410768                                         ; DATA XREF: .text:jpt_410740↑o
.text:00410768                 sub     edx, 8          ; jumptable 00410740 case 2
.text:0041076B                 sub     ecx, 4
.text:0041076E                 mov     eax, [edx+4]
.text:00410771                 add     esi, 6
.text:00410774                 lea     esi, [esi+0]
.text:0041077A                 lea     edi, [edi+0]
.text:00410780
.text:00410780 loc_410780:                             ; CODE XREF: .text:004107CA↓j
.text:00410780                 mov     ebx, [edx]
.text:00410782                 sub     edx, 20h ; ' '
.text:00410785                 mov     [ecx], eax
.text:00410787                 sub     ecx, 20h ; ' '
.text:0041078A                 sub     esi, 8
.text:0041078D                 jnz     short def_410740 ; jumptable 00410740 default case
.text:0041078F                 mov     [ecx+1Ch], ebx
.text:00410792                 mov     ebx, [esp]
.text:00410795                 mov     esi, [esp+4]
.text:00410799                 add     esp, 8
.text:0041079C                 retn
.text:0041079C ; ---------------------------------------------------------------------------
.text:0041079D                 align 10h
.text:004107A0
.text:004107A0 def_410740:                             ; CODE XREF: .text:0041073E↑j
.text:004107A0                                         ; .text:0041078D↑j ...
.text:004107A0                 mov     eax, [edx+1Ch]  ; jumptable 00410740 default case
.text:004107A3                 mov     [ecx+1Ch], ebx
.text:004107A6
.text:004107A6 loc_4107A6:                             ; CODE XREF: .text:004107D5↓j
.text:004107A6                 mov     ebx, [edx+18h]
.text:004107A9                 mov     [ecx+18h], eax
.text:004107AC
.text:004107AC loc_4107AC:                             ; CODE XREF: .text:00410825↓j
.text:004107AC                 mov     eax, [edx+14h]
.text:004107AF                 mov     [ecx+14h], ebx
.text:004107B2
.text:004107B2 loc_4107B2:                             ; CODE XREF: .text:00410819↓j
.text:004107B2                 mov     ebx, [edx+10h]
.text:004107B5                 mov     [ecx+10h], eax
.text:004107B8
.text:004107B8 loc_4107B8:                             ; CODE XREF: .text:0041080B↓j
.text:004107B8                 mov     eax, [edx+0Ch]
.text:004107BB                 mov     [ecx+0Ch], ebx
.text:004107BE
.text:004107BE loc_4107BE:                             ; CODE XREF: .text:004107FD↓j
.text:004107BE                 mov     ebx, [edx+8]
.text:004107C1                 mov     [ecx+8], eax
.text:004107C4
.text:004107C4 loc_4107C4:                             ; CODE XREF: .text:004107EF↓j
.text:004107C4                 mov     eax, [edx+4]
.text:004107C7                 mov     [ecx+4], ebx
.text:004107CA                 jmp     short loc_410780
.text:004107CC ; ---------------------------------------------------------------------------
.text:004107CC
.text:004107CC loc_4107CC:                             ; CODE XREF: .text:00410740↑j
.text:004107CC                                         ; DATA XREF: .text:jpt_410740↑o
.text:004107CC                 sub     edx, 20h ; ' '  ; jumptable 00410740 case 0
.text:004107CF                 sub     ecx, 1Ch
.text:004107D2                 mov     eax, [edx+1Ch]
.text:004107D5                 jmp     short loc_4107A6
.text:004107D7 ; ---------------------------------------------------------------------------
.text:004107D7
.text:004107D7 loc_4107D7:                             ; CODE XREF: .text:00410740↑j
.text:004107D7                                         ; DATA XREF: .text:jpt_410740↑o
.text:004107D7                 sub     edx, 24h ; '$'  ; jumptable 00410740 case 1
.text:004107DA                 sub     ecx, 20h ; ' '
.text:004107DD                 mov     ebx, [edx+20h]
.text:004107E0                 dec     esi
.text:004107E1                 jmp     short def_410740 ; jumptable 00410740 default case
.text:004107E3 ; ---------------------------------------------------------------------------
.text:004107E3
.text:004107E3 loc_4107E3:                             ; CODE XREF: .text:00410740↑j
.text:004107E3                                         ; DATA XREF: .text:jpt_410740↑o
.text:004107E3                 sub     edx, 0Ch        ; jumptable 00410740 case 3
.text:004107E6                 sub     ecx, 8
.text:004107E9                 mov     ebx, [edx+8]
.text:004107EC                 add     esi, 5
.text:004107EF                 jmp     short loc_4107C4
.text:004107F1 ; ---------------------------------------------------------------------------
.text:004107F1
.text:004107F1 loc_4107F1:                             ; CODE XREF: .text:00410740↑j
.text:004107F1                                         ; DATA XREF: .text:jpt_410740↑o
.text:004107F1                 sub     edx, 10h        ; jumptable 00410740 case 4
.text:004107F4                 sub     ecx, 0Ch
.text:004107F7                 mov     eax, [edx+0Ch]
.text:004107FA                 add     esi, 4
.text:004107FD                 jmp     short loc_4107BE
.text:004107FF ; ---------------------------------------------------------------------------
.text:004107FF
.text:004107FF loc_4107FF:                             ; CODE XREF: .text:00410740↑j
.text:004107FF                                         ; DATA XREF: .text:jpt_410740↑o
.text:004107FF                 sub     edx, 14h        ; jumptable 00410740 case 5
.text:00410802                 sub     ecx, 10h
.text:00410805                 mov     ebx, [edx+10h]
.text:00410808                 add     esi, 3
.text:0041080B                 jmp     short loc_4107B8
.text:0041080D ; ---------------------------------------------------------------------------
.text:0041080D
.text:0041080D loc_41080D:                             ; CODE XREF: .text:00410740↑j
.text:0041080D                                         ; DATA XREF: .text:jpt_410740↑o
.text:0041080D                 sub     edx, 18h        ; jumptable 00410740 case 6
.text:00410810                 sub     ecx, 14h
.text:00410813                 mov     eax, [edx+14h]
.text:00410816                 add     esi, 2
.text:00410819                 jmp     short loc_4107B2
.text:0041081B ; ---------------------------------------------------------------------------
.text:0041081B
.text:0041081B loc_41081B:                             ; CODE XREF: .text:00410740↑j
.text:0041081B                                         ; DATA XREF: .text:jpt_410740↑o
.text:0041081B                 sub     edx, 1Ch        ; jumptable 00410740 case 7
.text:0041081E                 sub     ecx, 18h
.text:00410821                 mov     ebx, [edx+18h]
.text:00410824                 inc     esi
.text:00410825                 jmp     short loc_4107AC
.text:00410825 ; ---------------------------------------------------------------------------
.text:00410827                 align 10h
.text:00410830                 push    ebp
.text:00410831                 push    edi
.text:00410832                 push    esi
.text:00410833                 push    ebx
.text:00410834                 sub     esp, 8
.text:00410837                 mov     edx, [esp+20h]
.text:0041083B                 mov     dword ptr [esp+4], 20h ; ' '
.text:00410843                 mov     eax, [esp+24h]
.text:00410847                 mov     ecx, edx
.text:00410849                 and     ecx, 3
.text:0041084C                 and     eax, 3
.text:0041084F                 shl     ecx, 3
.text:00410852                 sub     [esp+4], ecx
.text:00410856                 and     edx, 0FFFFFFFCh
.text:00410859                 add     edx, 4
.text:0041085C                 mov     [esp], ecx
.text:0041085F                 cmp     eax, 1
.text:00410862                 jz      loc_410958
.text:00410868                 cmp     eax, 1
.text:0041086B                 jb      loc_410945
.text:00410871                 cmp     eax, 2
.text:00410874                 jz      loc_410930
.text:0041087A                 cmp     eax, 3
.text:0041087D                 jz      loc_41091C
.text:00410883
.text:00410883 loc_410883:                             ; CODE XREF: .text:004108FC↓j
.text:00410883                                         ; .text:0041096A↓j
.text:00410883                 movzx   ecx, byte ptr [esp]
.text:00410887                 mov     eax, edi
.text:00410889                 mov     ebx, [esp+1Ch]
.text:0041088D                 mov     esi, [edx+0Ch]
.text:00410890                 shr     eax, cl
.text:00410892                 movzx   ecx, byte ptr [esp+4]
.text:00410897                 shl     ebp, cl
.text:00410899                 or      eax, ebp
.text:0041089B                 mov     [ebx+0Ch], eax
.text:0041089E
.text:0041089E loc_41089E:                             ; CODE XREF: .text:00410953↓j
.text:0041089E                 movzx   ecx, byte ptr [esp]
.text:004108A2                 mov     ebp, esi
.text:004108A4                 mov     ebx, [edx+8]
.text:004108A7                 shr     ebp, cl
.text:004108A9                 movzx   ecx, byte ptr [esp+4]
.text:004108AE                 shl     edi, cl
.text:004108B0                 or      ebp, edi
.text:004108B2                 mov     edi, [esp+1Ch]
.text:004108B6                 mov     [edi+8], ebp
.text:004108B9
.text:004108B9 loc_4108B9:                             ; CODE XREF: .text:0041092E↓j
.text:004108B9                 movzx   ecx, byte ptr [esp]
.text:004108BD                 mov     edi, ebx
.text:004108BF                 mov     ebp, [edx+4]
.text:004108C2                 shr     edi, cl
.text:004108C4                 movzx   ecx, byte ptr [esp+4]
.text:004108C9                 shl     esi, cl
.text:004108CB                 or      edi, esi
.text:004108CD                 mov     esi, [esp+1Ch]
.text:004108D1                 mov     [esi+4], edi
.text:004108D4
.text:004108D4 loc_4108D4:                             ; CODE XREF: .text:00410943↓j
.text:004108D4                 movzx   ecx, byte ptr [esp]
.text:004108D8                 mov     esi, ebp
.text:004108DA                 mov     edi, [edx]
.text:004108DC                 sub     edx, 10h
.text:004108DF                 shr     esi, cl
.text:004108E1                 movzx   ecx, byte ptr [esp+4]
.text:004108E6                 shl     ebx, cl
.text:004108E8                 or      esi, ebx
.text:004108EA                 mov     ebx, [esp+1Ch]
.text:004108EE                 mov     [ebx], esi
.text:004108F0                 sub     ebx, 10h
.text:004108F3                 sub     dword ptr [esp+24h], 4
.text:004108F8                 mov     [esp+1Ch], ebx
.text:004108FC                 jnz     short loc_410883
.text:004108FE                 movzx   ecx, byte ptr [esp]
.text:00410902                 mov     edx, [esp+1Ch]
.text:00410906                 shr     edi, cl
.text:00410908                 movzx   ecx, byte ptr [esp+4]
.text:0041090D                 shl     ebp, cl
.text:0041090F                 or      edi, ebp
.text:00410911                 mov     [edx+0Ch], edi
.text:00410914                 add     esp, 8
.text:00410917                 pop     ebx
.text:00410918                 pop     esi
.text:00410919                 pop     edi
.text:0041091A                 pop     ebp
.text:0041091B                 retn
.text:0041091C ; ---------------------------------------------------------------------------
.text:0041091C
.text:0041091C loc_41091C:                             ; CODE XREF: .text:0041087D↑j
.text:0041091C                 sub     dword ptr [esp+1Ch], 8
.text:00410921                 sub     edx, 10h
.text:00410924                 inc     dword ptr [esp+24h]
.text:00410928                 mov     esi, [edx+0Ch]
.text:0041092B                 mov     ebx, [edx+8]
.text:0041092E                 jmp     short loc_4108B9
.text:00410930 ; ---------------------------------------------------------------------------
.text:00410930
.text:00410930 loc_410930:                             ; CODE XREF: .text:00410874↑j
.text:00410930                 sub     dword ptr [esp+1Ch], 4
.text:00410935                 sub     edx, 0Ch
.text:00410938                 add     dword ptr [esp+24h], 2
.text:0041093D                 mov     ebx, [edx+8]
.text:00410940                 mov     ebp, [edx+4]
.text:00410943                 jmp     short loc_4108D4
.text:00410945 ; ---------------------------------------------------------------------------
.text:00410945
.text:00410945 loc_410945:                             ; CODE XREF: .text:0041086B↑j
.text:00410945                 sub     dword ptr [esp+1Ch], 0Ch
.text:0041094A                 sub     edx, 14h
.text:0041094D                 mov     edi, [edx+10h]
.text:00410950                 mov     esi, [edx+0Ch]
.text:00410953                 jmp     loc_41089E
.text:00410958 ; ---------------------------------------------------------------------------
.text:00410958
.text:00410958 loc_410958:                             ; CODE XREF: .text:00410862↑j
.text:00410958                 sub     dword ptr [esp+1Ch], 10h
.text:0041095D                 sub     edx, 18h
.text:00410960                 dec     dword ptr [esp+24h]
.text:00410964                 mov     ebp, [edx+14h]
.text:00410967                 mov     edi, [edx+10h]
.text:0041096A                 jmp     loc_410883
.text:0041096A ; ---------------------------------------------------------------------------
.text:0041096F                 align 10h
.text:00410970
.text:00410970 ; =============== S U B R O U T I N E =======================================
.text:00410970
.text:00410970 ; Attributes: thunk
.text:00410970
.text:00410970 ; wint_t __cdecl btowc(int Ch)
.text:00410970 btowc           proc near               ; CODE XREF: sub_4071F0+1F73↑p
.text:00410970                 jmp     ds:__imp_btowc
.text:00410970 btowc           endp
.text:00410970
.text:00410970 ; ---------------------------------------------------------------------------
.text:00410976                 align 10h
.text:00410980
.text:00410980 ; =============== S U B R O U T I N E =======================================
.text:00410980
.text:00410980 ; Attributes: thunk
.text:00410980
.text:00410980 ; wctype_t __cdecl wctype(const char *name)
.text:00410980 wctype          proc near               ; CODE XREF: sub_4071F0+1F29↑p
.text:00410980
.text:00410980 name            = dword ptr  4
.text:00410980
.text:00410980                 jmp     ds:__imp_wctype
.text:00410980 wctype          endp
.text:00410980
.text:00410980 ; ---------------------------------------------------------------------------
.text:00410986                 align 10h
.text:00410990
.text:00410990 ; =============== S U B R O U T I N E =======================================
.text:00410990
.text:00410990 ; Attributes: thunk
.text:00410990
.text:00410990 ; size_t __cdecl mbrtowc(wchar_t *DstCh, const char *SrcCh, size_t SizeInBytes, mbstate_t *State)
.text:00410990 mbrtowc         proc near               ; CODE XREF: sub_40EA10+757↑p
.text:00410990
.text:00410990 DstCh           = dword ptr  4
.text:00410990 SrcCh           = dword ptr  8
.text:00410990 SizeInBytes     = dword ptr  0Ch
.text:00410990 State           = dword ptr  10h
.text:00410990
.text:00410990                 jmp     ds:__imp_mbrtowc
.text:00410990 mbrtowc         endp
.text:00410990
.text:00410990 ; ---------------------------------------------------------------------------
.text:00410996                 align 10h
.text:004109A0
.text:004109A0 ; =============== S U B R O U T I N E =======================================
.text:004109A0
.text:004109A0 ; Attributes: bp-based frame
.text:004109A0
.text:004109A0 sub_4109A0      proc near               ; CODE XREF: sub_401080+C2↑p
.text:004109A0                 push    ebp
.text:004109A1                 mov     ecx, offset FileHandle
.text:004109A6                 cmp     ecx, offset FileHandle
.text:004109AC                 mov     ebp, esp
.text:004109AE                 jnb     short loc_4109C6
.text:004109B0
.text:004109B0 loc_4109B0:                             ; CODE XREF: sub_4109A0+24↓j
.text:004109B0                 mov     edx, [ecx+4]
.text:004109B3                 mov     eax, [ecx]
.text:004109B5                 add     ecx, 8
.text:004109B8                 add     [edx+400000h], eax
.text:004109BE                 cmp     ecx, offset FileHandle
.text:004109C4                 jb      short loc_4109B0
.text:004109C6
.text:004109C6 loc_4109C6:                             ; CODE XREF: sub_4109A0+E↑j
.text:004109C6                 pop     ebp
.text:004109C7                 retn
.text:004109C7 sub_4109A0      endp
.text:004109C7
.text:004109C7 ; ---------------------------------------------------------------------------
.text:004109C8                 align 10h
.text:004109D0
.text:004109D0 ; =============== S U B R O U T I N E =======================================
.text:004109D0
.text:004109D0 ; Attributes: bp-based frame
.text:004109D0
.text:004109D0 sub_4109D0      proc near               ; CODE XREF: sub_401080+16↑p
.text:004109D0                                         ; TopLevelExceptionFilter+D7↑p
.text:004109D0                 push    ebp
.text:004109D1                 mov     ebp, esp
.text:004109D3                 fninit
.text:004109D5                 pop     ebp
.text:004109D6                 retn
.text:004109D6 sub_4109D0      endp
.text:004109D6
.text:004109D6 ; ---------------------------------------------------------------------------
.text:004109D7                 align 10h
.text:004109E0
.text:004109E0 ; =============== S U B R O U T I N E =======================================
.text:004109E0
.text:004109E0 ; Attributes: bp-based frame
.text:004109E0
.text:004109E0 ; void __cdecl sub_4109E0()
.text:004109E0 sub_4109E0      proc near               ; DATA XREF: .text:loc_410A29↓o
.text:004109E0                                         ; sub_410A70:loc_410A9E↓o
.text:004109E0                 push    ebp
.text:004109E1                 mov     ebp, esp
.text:004109E3                 sub     esp, 8
.text:004109E6                 mov     eax, off_4120A4
.text:004109EB                 mov     edx, [eax]
.text:004109ED                 test    edx, edx
.text:004109EF                 jnz     short loc_4109F5
.text:004109F1
.text:004109F1 loc_4109F1:                             ; CODE XREF: sub_4109E0+2C↓j
.text:004109F1                 mov     esp, ebp
.text:004109F3                 pop     ebp
.text:004109F4                 retn
.text:004109F5 ; ---------------------------------------------------------------------------
.text:004109F5
.text:004109F5 loc_4109F5:                             ; CODE XREF: sub_4109E0+F↑j
.text:004109F5                                         ; sub_4109E0+2A↓j
.text:004109F5                 call    dword ptr [eax]
.text:004109F7                 mov     edx, off_4120A4
.text:004109FD                 mov     ecx, [edx+4]
.text:00410A00                 lea     eax, [edx+4]
.text:00410A03                 mov     off_4120A4, eax
.text:00410A08                 test    ecx, ecx
.text:00410A0A                 jnz     short loc_4109F5
.text:00410A0C                 jmp     short loc_4109F1
.text:00410A0C sub_4109E0      endp
.text:00410A0C
.text:00410A0C ; ---------------------------------------------------------------------------
.text:00410A0E                 align 10h
.text:00410A10                 push    ebp
.text:00410A11                 mov     ebp, esp
.text:00410A13                 sub     esp, 8
.text:00410A16                 mov     [ebp-4], ebx
.text:00410A19                 mov     eax, ds:dword_411B40
.text:00410A1E                 cmp     eax, 0FFFFFFFFh
.text:00410A21                 jz      short loc_410A4C
.text:00410A23
.text:00410A23 loc_410A23:                             ; CODE XREF: .text:00410A56↓j
.text:00410A23                                         ; .text:00410A69↓j
.text:00410A23                 test    eax, eax
.text:00410A25                 mov     ebx, eax
.text:00410A27                 jnz     short loc_410A40
.text:00410A29
.text:00410A29 loc_410A29:                             ; CODE XREF: .text:00410A4A↓j
.text:00410A29                 mov     dword ptr [esp], offset sub_4109E0
.text:00410A30                 call    sub_401040
.text:00410A35                 mov     ebx, [ebp-4]
.text:00410A38                 mov     esp, ebp
.text:00410A3A                 pop     ebp
.text:00410A3B                 retn
.text:00410A3B ; ---------------------------------------------------------------------------
.text:00410A3C                 align 10h
.text:00410A40
.text:00410A40 loc_410A40:                             ; CODE XREF: .text:00410A27↑j
.text:00410A40                                         ; .text:00410A48↓j
.text:00410A40                 call    ds:dword_411B40[ebx*4]
.text:00410A47                 dec     ebx
.text:00410A48                 jnz     short loc_410A40
.text:00410A4A                 jmp     short loc_410A29
.text:00410A4C ; ---------------------------------------------------------------------------
.text:00410A4C
.text:00410A4C loc_410A4C:                             ; CODE XREF: .text:00410A21↑j
.text:00410A4C                 mov     ecx, ds:dword_411B44
.text:00410A52                 xor     eax, eax
.text:00410A54                 test    ecx, ecx
.text:00410A56                 jz      short loc_410A23
.text:00410A58                 mov     edx, offset dword_411B40
.text:00410A5D                 lea     esi, [esi+0]
.text:00410A60
.text:00410A60 loc_410A60:                             ; CODE XREF: .text:00410A67↓j
.text:00410A60                 inc     eax
.text:00410A61                 mov     ecx, [edx+eax*4+4]
.text:00410A65                 test    ecx, ecx
.text:00410A67                 jnz     short loc_410A60
.text:00410A69                 jmp     short loc_410A23
.text:00410A69 ; ---------------------------------------------------------------------------
.text:00410A6B                 align 10h
.text:00410A70
.text:00410A70 ; =============== S U B R O U T I N E =======================================
.text:00410A70
.text:00410A70 ; Attributes: bp-based frame
.text:00410A70
.text:00410A70 sub_410A70      proc near               ; CODE XREF: sub_4018C0+16↑p
.text:00410A70
.text:00410A70 var_8           = dword ptr -8
.text:00410A70 var_4           = dword ptr -4
.text:00410A70
.text:00410A70                 push    ebp
.text:00410A71                 mov     ebp, esp
.text:00410A73                 sub     esp, 8
.text:00410A76                 mov     [ebp+var_4], ebx
.text:00410A79                 mov     edx, dword_4120A0
.text:00410A7F                 test    edx, edx
.text:00410A81                 jnz     short loc_410AAA
.text:00410A83                 mov     eax, ds:dword_411B40
.text:00410A88                 mov     edx, 1
.text:00410A8D                 mov     dword_4120A0, edx
.text:00410A93                 cmp     eax, 0FFFFFFFFh
.text:00410A96                 jz      short loc_410ABD
.text:00410A98
.text:00410A98 loc_410A98:                             ; CODE XREF: sub_410A70+57↓j
.text:00410A98                                         ; sub_410A70+69↓j
.text:00410A98                 test    eax, eax
.text:00410A9A                 mov     ebx, eax
.text:00410A9C                 jnz     short loc_410AB1
.text:00410A9E
.text:00410A9E loc_410A9E:                             ; CODE XREF: sub_410A70+4B↓j
.text:00410A9E                 mov     [esp+8+var_8], offset sub_4109E0 ; void (__cdecl *)()
.text:00410AA5                 call    sub_401040
.text:00410AAA
.text:00410AAA loc_410AAA:                             ; CODE XREF: sub_410A70+11↑j
.text:00410AAA                 mov     ebx, [ebp+var_4]
.text:00410AAD                 mov     esp, ebp
.text:00410AAF                 pop     ebp
.text:00410AB0                 retn
.text:00410AB1 ; ---------------------------------------------------------------------------
.text:00410AB1
.text:00410AB1 loc_410AB1:                             ; CODE XREF: sub_410A70+2C↑j
.text:00410AB1                                         ; sub_410A70+49↓j
.text:00410AB1                 call    ds:dword_411B40[ebx*4]
.text:00410AB8                 dec     ebx
.text:00410AB9                 jnz     short loc_410AB1
.text:00410ABB                 jmp     short loc_410A9E
.text:00410ABD ; ---------------------------------------------------------------------------
.text:00410ABD
.text:00410ABD loc_410ABD:                             ; CODE XREF: sub_410A70+26↑j
.text:00410ABD                 mov     ecx, ds:dword_411B44
.text:00410AC3                 xor     eax, eax
.text:00410AC5                 test    ecx, ecx
.text:00410AC7                 jz      short loc_410A98
.text:00410AC9                 mov     edx, offset dword_411B40
.text:00410ACE                 mov     esi, esi
.text:00410AD0
.text:00410AD0 loc_410AD0:                             ; CODE XREF: sub_410A70+67↓j
.text:00410AD0                 inc     eax
.text:00410AD1                 mov     ebx, [edx+eax*4+4]
.text:00410AD5                 test    ebx, ebx
.text:00410AD7                 jnz     short loc_410AD0
.text:00410AD9                 jmp     short loc_410A98
.text:00410AD9 sub_410A70      endp
.text:00410AD9
.text:00410AD9 ; ---------------------------------------------------------------------------
.text:00410ADB                 align 10h
.text:00410AE0
.text:00410AE0 ; =============== S U B R O U T I N E =======================================
.text:00410AE0
.text:00410AE0 ; Attributes: info_from_lumina
.text:00410AE0
.text:00410AE0 ; void *__cdecl _alloca(size_t Size)
.text:00410AE0 __alloca        proc near               ; CODE XREF: sub_4018C0+11↑p
.text:00410AE0                 push    ecx
.text:00410AE1                 mov     ecx, esp
.text:00410AE3                 add     ecx, 8
.text:00410AE6
.text:00410AE6 loc_410AE6:                             ; CODE XREF: __alloca+1B↓j
.text:00410AE6                 cmp     eax, 1000h
.text:00410AEB                 jb      short loc_410AFD
.text:00410AED                 sub     ecx, 1000h
.text:00410AF3                 or      dword ptr [ecx], 0
.text:00410AF6                 sub     eax, 1000h
.text:00410AFB                 jmp     short loc_410AE6
.text:00410AFD ; ---------------------------------------------------------------------------
.text:00410AFD
.text:00410AFD loc_410AFD:                             ; CODE XREF: __alloca+B↑j
.text:00410AFD                 sub     ecx, eax
.text:00410AFF                 or      dword ptr [ecx], 0
.text:00410B02                 mov     eax, esp
.text:00410B04                 mov     esp, ecx
.text:00410B06                 mov     ecx, [eax]
.text:00410B08                 mov     eax, [eax+4]
.text:00410B0B                 jmp     eax
.text:00410B0B __alloca        endp
.text:00410B0B
.text:00410B0B ; ---------------------------------------------------------------------------
.text:00410B0D                 align 10h
.text:00410B10
.text:00410B10 ; =============== S U B R O U T I N E =======================================
.text:00410B10
.text:00410B10 ; Attributes: bp-based frame
.text:00410B10
.text:00410B10 sub_410B10      proc near               ; CODE XREF: sub_40CA00+2BE↑p
.text:00410B10                                         ; sub_40CA00+36A↑p ...
.text:00410B10
.text:00410B10 var_24          = dword ptr -24h
.text:00410B10 var_20          = dword ptr -20h
.text:00410B10 var_1C          = dword ptr -1Ch
.text:00410B10 var_18          = dword ptr -18h
.text:00410B10 var_14          = dword ptr -14h
.text:00410B10 var_C           = dword ptr -0Ch
.text:00410B10 var_8           = dword ptr -8
.text:00410B10 var_4           = dword ptr -4
.text:00410B10 arg_0           = dword ptr  8
.text:00410B10 arg_4           = dword ptr  0Ch
.text:00410B10 arg_8           = dword ptr  10h
.text:00410B10 arg_C           = dword ptr  14h
.text:00410B10
.text:00410B10                 push    ebp
.text:00410B11                 mov     ebp, esp
.text:00410B13                 sub     esp, 28h
.text:00410B16                 mov     [ebp+var_C], ebx
.text:00410B19                 mov     edx, [ebp+arg_C]
.text:00410B1C                 mov     ecx, [ebp+arg_0]
.text:00410B1F                 mov     [ebp+var_8], esi
.text:00410B22                 mov     eax, [ebp+arg_8]
.text:00410B25                 test    edx, edx
.text:00410B27                 mov     [ebp+var_4], edi
.text:00410B2A                 mov     ebx, [ebp+arg_4]
.text:00410B2D                 mov     esi, eax
.text:00410B2F                 mov     [ebp+var_18], 0
.text:00410B36                 mov     [ebp+var_14], 0
.text:00410B3D                 mov     [ebp+var_1C], ecx
.text:00410B40                 jnz     short loc_410B92
.text:00410B42                 cmp     eax, ebx
.text:00410B44                 jbe     short loc_410B70
.text:00410B46                 mov     eax, ecx
.text:00410B48                 mov     edx, ebx
.text:00410B4A                 div     esi
.text:00410B4C                 mov     edi, eax
.text:00410B4E                 mov     esi, esi
.text:00410B50
.text:00410B50 loc_410B50:                             ; CODE XREF: sub_410B10+88↓j
.text:00410B50                                         ; sub_410B10+A4↓j ...
.text:00410B50                 xor     ecx, ecx
.text:00410B52
.text:00410B52 loc_410B52:                             ; CODE XREF: sub_410B10+80↓j
.text:00410B52                 mov     [ebp+var_18], edi
.text:00410B55                 mov     ebx, [ebp+var_C]
.text:00410B58                 mov     eax, [ebp+var_18]
.text:00410B5B                 mov     [ebp+var_14], ecx
.text:00410B5E                 mov     esi, [ebp+var_8]
.text:00410B61                 mov     edx, [ebp+var_14]
.text:00410B64                 mov     edi, [ebp+var_4]
.text:00410B67                 mov     esp, ebp
.text:00410B69                 pop     ebp
.text:00410B6A                 retn
.text:00410B6A ; ---------------------------------------------------------------------------
.text:00410B6B                 align 10h
.text:00410B70
.text:00410B70 loc_410B70:                             ; CODE XREF: sub_410B10+34↑j
.text:00410B70                 test    eax, eax
.text:00410B72                 jnz     short loc_410B81
.text:00410B74                 mov     eax, 1
.text:00410B79                 xor     ecx, ecx
.text:00410B7B                 xor     edx, edx
.text:00410B7D                 div     ecx
.text:00410B7F                 mov     esi, eax
.text:00410B81
.text:00410B81 loc_410B81:                             ; CODE XREF: sub_410B10+62↑j
.text:00410B81                 mov     eax, ebx
.text:00410B83                 xor     edx, edx
.text:00410B85                 div     esi
.text:00410B87                 mov     ecx, eax
.text:00410B89                 mov     eax, [ebp+var_1C]
.text:00410B8C                 div     esi
.text:00410B8E                 mov     edi, eax
.text:00410B90                 jmp     short loc_410B52
.text:00410B92 ; ---------------------------------------------------------------------------
.text:00410B92
.text:00410B92 loc_410B92:                             ; CODE XREF: sub_410B10+30↑j
.text:00410B92                 cmp     edx, ebx
.text:00410B94                 jbe     short loc_410BA0
.text:00410B96                 xor     edi, edi
.text:00410B98                 jmp     short loc_410B50
.text:00410B98 ; ---------------------------------------------------------------------------
.text:00410B9A                 align 10h
.text:00410BA0
.text:00410BA0 loc_410BA0:                             ; CODE XREF: sub_410B10+84↑j
.text:00410BA0                 bsr     eax, edx
.text:00410BA3                 xor     eax, 1Fh
.text:00410BA6                 mov     [ebp+var_20], eax
.text:00410BA9                 jnz     short loc_410BC0
.text:00410BAB                 cmp     ebx, edx
.text:00410BAD                 ja      short loc_410BB6
.text:00410BAF                 xor     edi, edi
.text:00410BB1                 cmp     [ebp+var_1C], esi
.text:00410BB4                 jb      short loc_410B50
.text:00410BB6
.text:00410BB6 loc_410BB6:                             ; CODE XREF: sub_410B10+9D↑j
.text:00410BB6                 mov     edi, 1
.text:00410BBB                 jmp     short loc_410B50
.text:00410BBB ; ---------------------------------------------------------------------------
.text:00410BBD                 align 10h
.text:00410BC0
.text:00410BC0 loc_410BC0:                             ; CODE XREF: sub_410B10+99↑j
.text:00410BC0                 mov     eax, [ebp+var_20]
.text:00410BC3                 mov     ecx, 20h ; ' '
.text:00410BC8                 sub     ecx, eax
.text:00410BCA                 mov     [ebp+var_24], ecx
.text:00410BCD                 mov     eax, esi
.text:00410BCF                 movzx   ecx, byte ptr [ebp+var_20]
.text:00410BD3                 shl     edx, cl
.text:00410BD5                 mov     edi, edx
.text:00410BD7                 movzx   ecx, byte ptr [ebp+var_24]
.text:00410BDB                 mov     edx, ebx
.text:00410BDD                 shr     eax, cl
.text:00410BDF                 movzx   ecx, byte ptr [ebp+var_20]
.text:00410BE3                 or      edi, eax
.text:00410BE5                 mov     eax, [ebp+var_1C]
.text:00410BE8                 shl     esi, cl
.text:00410BEA                 movzx   ecx, byte ptr [ebp+var_24]
.text:00410BEE                 shr     edx, cl
.text:00410BF0                 movzx   ecx, byte ptr [ebp+var_20]
.text:00410BF4                 shl     ebx, cl
.text:00410BF6                 movzx   ecx, byte ptr [ebp+var_24]
.text:00410BFA                 shr     eax, cl
.text:00410BFC                 or      ebx, eax
.text:00410BFE                 movzx   ecx, byte ptr [ebp+var_20]
.text:00410C02                 mov     eax, ebx
.text:00410C04                 div     edi
.text:00410C06                 mov     ebx, edx
.text:00410C08                 mov     edi, eax
.text:00410C0A                 shl     [ebp+var_1C], cl
.text:00410C0D                 mul     esi
.text:00410C0F                 cmp     edx, ebx
.text:00410C11                 ja      short loc_410C24
.text:00410C13                 cmp     edx, ebx
.text:00410C15                 jnz     loc_410B50
.text:00410C1B                 cmp     eax, [ebp+var_1C]
.text:00410C1E                 jbe     loc_410B50
.text:00410C24
.text:00410C24 loc_410C24:                             ; CODE XREF: sub_410B10+101↑j
.text:00410C24                 dec     edi
.text:00410C25                 jmp     loc_410B50
.text:00410C25 sub_410B10      endp
.text:00410C25
.text:00410C25 ; ---------------------------------------------------------------------------
.text:00410C2A                 align 10h
.text:00410C30
.text:00410C30 ; =============== S U B R O U T I N E =======================================
.text:00410C30
.text:00410C30 ; Attributes: bp-based frame
.text:00410C30
.text:00410C30 sub_410C30      proc near               ; CODE XREF: sub_40D700+24F↑p
.text:00410C30                                         ; sub_40D700+293↑p ...
.text:00410C30
.text:00410C30 var_2C          = dword ptr -2Ch
.text:00410C30 var_28          = dword ptr -28h
.text:00410C30 var_24          = dword ptr -24h
.text:00410C30 var_20          = dword ptr -20h
.text:00410C30 var_1C          = dword ptr -1Ch
.text:00410C30 var_14          = dword ptr -14h
.text:00410C30 arg_0           = dword ptr  8
.text:00410C30 arg_4           = dword ptr  0Ch
.text:00410C30 arg_8           = dword ptr  10h
.text:00410C30 arg_C           = dword ptr  14h
.text:00410C30
.text:00410C30                 push    ebp
.text:00410C31                 mov     ebp, esp
.text:00410C33                 push    edi
.text:00410C34                 push    esi
.text:00410C35                 push    ebx
.text:00410C36                 sub     esp, 24h
.text:00410C39                 mov     ebx, [ebp+arg_4]
.text:00410C3C                 mov     [ebp+var_20], 0
.text:00410C43                 mov     ecx, [ebp+arg_0]
.text:00410C46                 mov     eax, [ebp+arg_8]
.text:00410C49                 mov     [ebp+var_1C], 0
.text:00410C50                 test    ebx, ebx
.text:00410C52                 mov     edx, [ebp+arg_C]
.text:00410C55                 mov     [ebp+var_14], 0
.text:00410C5C                 js      loc_410D70
.text:00410C62
.text:00410C62 loc_410C62:                             ; CODE XREF: sub_410C30+14E↓j
.text:00410C62                 test    edx, edx
.text:00410C64                 js      loc_410D60
.text:00410C6A
.text:00410C6A loc_410C6A:                             ; CODE XREF: sub_410C30+13A↓j
.text:00410C6A                 mov     [ebp+var_24], ecx
.text:00410C6D                 test    edx, edx
.text:00410C6F                 mov     esi, eax
.text:00410C71                 jnz     short loc_410CC6
.text:00410C73                 cmp     eax, ebx
.text:00410C75                 jbe     short loc_410CA4
.text:00410C77                 mov     eax, ecx
.text:00410C79                 mov     edx, ebx
.text:00410C7B                 div     esi
.text:00410C7D                 mov     edi, eax
.text:00410C7F                 nop
.text:00410C80
.text:00410C80 loc_410C80:                             ; CODE XREF: sub_410C30+9C↓j
.text:00410C80                                         ; sub_410C30+B4↓j ...
.text:00410C80                 xor     ecx, ecx
.text:00410C82
.text:00410C82 loc_410C82:                             ; CODE XREF: sub_410C30+94↓j
.text:00410C82                 mov     [ebp+var_1C], ecx
.text:00410C85                 mov     ecx, [ebp+var_14]
.text:00410C88                 mov     [ebp+var_20], edi
.text:00410C8B                 mov     eax, [ebp+var_20]
.text:00410C8E                 mov     edx, [ebp+var_1C]
.text:00410C91                 test    ecx, ecx
.text:00410C93                 jz      short loc_410C9C
.text:00410C95                 neg     eax
.text:00410C97                 adc     edx, 0
.text:00410C9A                 neg     edx
.text:00410C9C
.text:00410C9C loc_410C9C:                             ; CODE XREF: sub_410C30+63↑j
.text:00410C9C                 add     esp, 24h
.text:00410C9F                 pop     ebx
.text:00410CA0                 pop     esi
.text:00410CA1                 pop     edi
.text:00410CA2                 pop     ebp
.text:00410CA3                 retn
.text:00410CA4 ; ---------------------------------------------------------------------------
.text:00410CA4
.text:00410CA4 loc_410CA4:                             ; CODE XREF: sub_410C30+45↑j
.text:00410CA4                 test    eax, eax
.text:00410CA6                 jnz     short loc_410CB5
.text:00410CA8                 mov     eax, 1
.text:00410CAD                 xor     ecx, ecx
.text:00410CAF                 xor     edx, edx
.text:00410CB1                 div     ecx
.text:00410CB3                 mov     esi, eax
.text:00410CB5
.text:00410CB5 loc_410CB5:                             ; CODE XREF: sub_410C30+76↑j
.text:00410CB5                 mov     eax, ebx
.text:00410CB7                 xor     edx, edx
.text:00410CB9                 div     esi
.text:00410CBB                 mov     ecx, eax
.text:00410CBD                 mov     eax, [ebp+var_24]
.text:00410CC0                 div     esi
.text:00410CC2                 mov     edi, eax
.text:00410CC4                 jmp     short loc_410C82
.text:00410CC6 ; ---------------------------------------------------------------------------
.text:00410CC6
.text:00410CC6 loc_410CC6:                             ; CODE XREF: sub_410C30+41↑j
.text:00410CC6                 cmp     edx, ebx
.text:00410CC8                 jbe     short loc_410CD0
.text:00410CCA                 xor     edi, edi
.text:00410CCC                 jmp     short loc_410C80
.text:00410CCC ; ---------------------------------------------------------------------------
.text:00410CCE                 align 10h
.text:00410CD0
.text:00410CD0 loc_410CD0:                             ; CODE XREF: sub_410C30+98↑j
.text:00410CD0                 bsr     eax, edx
.text:00410CD3                 xor     eax, 1Fh
.text:00410CD6                 mov     [ebp+var_28], eax
.text:00410CD9                 jnz     short loc_410CF0
.text:00410CDB                 cmp     ebx, edx
.text:00410CDD                 ja      short loc_410CE6
.text:00410CDF                 xor     edi, edi
.text:00410CE1                 cmp     [ebp+var_24], esi
.text:00410CE4                 jb      short loc_410C80
.text:00410CE6
.text:00410CE6 loc_410CE6:                             ; CODE XREF: sub_410C30+AD↑j
.text:00410CE6                 mov     edi, 1
.text:00410CEB                 jmp     short loc_410C80
.text:00410CEB ; ---------------------------------------------------------------------------
.text:00410CED                 align 10h
.text:00410CF0
.text:00410CF0 loc_410CF0:                             ; CODE XREF: sub_410C30+A9↑j
.text:00410CF0                 mov     eax, [ebp+var_28]
.text:00410CF3                 mov     ecx, 20h ; ' '
.text:00410CF8                 sub     ecx, eax
.text:00410CFA                 mov     [ebp+var_2C], ecx
.text:00410CFD                 mov     eax, esi
.text:00410CFF                 movzx   ecx, byte ptr [ebp+var_28]
.text:00410D03                 shl     edx, cl
.text:00410D05                 mov     edi, edx
.text:00410D07                 movzx   ecx, byte ptr [ebp+var_2C]
.text:00410D0B                 mov     edx, ebx
.text:00410D0D                 shr     eax, cl
.text:00410D0F                 movzx   ecx, byte ptr [ebp+var_28]
.text:00410D13                 or      edi, eax
.text:00410D15                 mov     eax, [ebp+var_24]
.text:00410D18                 shl     esi, cl
.text:00410D1A                 movzx   ecx, byte ptr [ebp+var_2C]
.text:00410D1E                 shr     edx, cl
.text:00410D20                 movzx   ecx, byte ptr [ebp+var_28]
.text:00410D24                 shl     ebx, cl
.text:00410D26                 movzx   ecx, byte ptr [ebp+var_2C]
.text:00410D2A                 shr     eax, cl
.text:00410D2C                 or      ebx, eax
.text:00410D2E                 movzx   ecx, byte ptr [ebp+var_28]
.text:00410D32                 mov     eax, ebx
.text:00410D34                 div     edi
.text:00410D36                 mov     ebx, edx
.text:00410D38                 mov     edi, eax
.text:00410D3A                 shl     [ebp+var_24], cl
.text:00410D3D                 mul     esi
.text:00410D3F                 cmp     edx, ebx
.text:00410D41                 ja      short loc_410D54
.text:00410D43                 cmp     edx, ebx
.text:00410D45                 jnz     loc_410C80
.text:00410D4B                 cmp     eax, [ebp+var_24]
.text:00410D4E                 jbe     loc_410C80
.text:00410D54
.text:00410D54 loc_410D54:                             ; CODE XREF: sub_410C30+111↑j
.text:00410D54                 dec     edi
.text:00410D55                 jmp     loc_410C80
.text:00410D55 ; ---------------------------------------------------------------------------
.text:00410D5A                 align 10h
.text:00410D60
.text:00410D60 loc_410D60:                             ; CODE XREF: sub_410C30+34↑j
.text:00410D60                 not     [ebp+var_14]
.text:00410D63                 neg     eax
.text:00410D65                 adc     edx, 0
.text:00410D68                 neg     edx
.text:00410D6A                 jmp     loc_410C6A
.text:00410D6A ; ---------------------------------------------------------------------------
.text:00410D6F                 align 10h
.text:00410D70
.text:00410D70 loc_410D70:                             ; CODE XREF: sub_410C30+2C↑j
.text:00410D70                 mov     [ebp+var_14], 0FFFFFFFFh
.text:00410D77                 neg     ecx
.text:00410D79                 adc     ebx, 0
.text:00410D7C                 neg     ebx
.text:00410D7E                 jmp     loc_410C62
.text:00410D7E sub_410C30      endp
.text:00410D7E
.text:00410D7E ; ---------------------------------------------------------------------------
.text:00410D83                 align 10h
.text:00410D90
.text:00410D90 ; =============== S U B R O U T I N E =======================================
.text:00410D90
.text:00410D90 ; Attributes: bp-based frame
.text:00410D90
.text:00410D90 sub_410D90      proc near               ; CODE XREF: sub_40E8A0+38↑p
.text:00410D90
.text:00410D90 var_34          = dword ptr -34h
.text:00410D90 var_2C          = dword ptr -2Ch
.text:00410D90 var_28          = dword ptr -28h
.text:00410D90 var_24          = dword ptr -24h
.text:00410D90 var_20          = dword ptr -20h
.text:00410D90 var_1C          = dword ptr -1Ch
.text:00410D90 var_18          = dword ptr -18h
.text:00410D90 var_14          = dword ptr -14h
.text:00410D90 arg_0           = dword ptr  8
.text:00410D90 arg_4           = dword ptr  0Ch
.text:00410D90 arg_8           = dword ptr  10h
.text:00410D90 arg_C           = dword ptr  14h
.text:00410D90
.text:00410D90                 push    ebp
.text:00410D91                 mov     ebp, esp
.text:00410D93                 push    edi
.text:00410D94                 push    esi
.text:00410D95                 push    ebx
.text:00410D96                 sub     esp, 2Ch
.text:00410D99                 mov     edx, [ebp+arg_C]
.text:00410D9C                 mov     [ebp+var_20], 0
.text:00410DA3                 mov     ecx, [ebp+arg_0]
.text:00410DA6                 mov     ebx, [ebp+arg_4]
.text:00410DA9                 mov     [ebp+var_1C], 0
.text:00410DB0                 mov     eax, [ebp+arg_8]
.text:00410DB3                 test    edx, edx
.text:00410DB5                 mov     [ebp+var_24], edx
.text:00410DB8                 mov     edi, ebx
.text:00410DBA                 mov     esi, eax
.text:00410DBC                 mov     [ebp+var_28], ecx
.text:00410DBF                 jnz     short loc_410E20
.text:00410DC1                 cmp     eax, ebx
.text:00410DC3                 jbe     short loc_410E00
.text:00410DC5                 mov     eax, ecx
.text:00410DC7                 mov     edx, ebx
.text:00410DC9                 div     esi
.text:00410DCB
.text:00410DCB loc_410DCB:                             ; CODE XREF: sub_410D90+8B↓j
.text:00410DCB                 mov     [ebp+var_28], edx
.text:00410DCE                 lea     ecx, [ebp+var_18]
.text:00410DD1                 test    ecx, ecx
.text:00410DD3                 jz      short loc_410DEE
.text:00410DD5                 mov     [ebp+var_1C], 0
.text:00410DDC
.text:00410DDC loc_410DDC:                             ; CODE XREF: sub_410D90+DA↓j
.text:00410DDC                 mov     eax, [ebp+var_28]
.text:00410DDF                 mov     [ebp+var_20], eax
.text:00410DE2                 mov     edx, [ebp+var_20]
.text:00410DE5                 mov     ecx, [ebp+var_1C]
.text:00410DE8                 mov     [ebp+var_18], edx
.text:00410DEB                 mov     [ebp+var_14], ecx
.text:00410DEE
.text:00410DEE loc_410DEE:                             ; CODE XREF: sub_410D90+43↑j
.text:00410DEE                                         ; sub_410D90+A7↓j ...
.text:00410DEE                 mov     eax, [ebp+var_18]
.text:00410DF1                 mov     edx, [ebp+var_14]
.text:00410DF4                 add     esp, 2Ch
.text:00410DF7                 pop     ebx
.text:00410DF8                 pop     esi
.text:00410DF9                 pop     edi
.text:00410DFA                 pop     ebp
.text:00410DFB                 retn
.text:00410DFB ; ---------------------------------------------------------------------------
.text:00410DFC                 align 10h
.text:00410E00
.text:00410E00 loc_410E00:                             ; CODE XREF: sub_410D90+33↑j
.text:00410E00                 test    eax, eax
.text:00410E02                 jnz     short loc_410E0F
.text:00410E04                 mov     eax, 1
.text:00410E09                 xor     edx, edx
.text:00410E0B                 div     esi
.text:00410E0D                 mov     esi, eax
.text:00410E0F
.text:00410E0F loc_410E0F:                             ; CODE XREF: sub_410D90+72↑j
.text:00410E0F                 mov     eax, edi
.text:00410E11                 mov     edx, [ebp+var_24]
.text:00410E14                 div     esi
.text:00410E16                 mov     eax, [ebp+var_28]
.text:00410E19                 div     esi
.text:00410E1B                 jmp     short loc_410DCB
.text:00410E1B ; ---------------------------------------------------------------------------
.text:00410E1D                 align 10h
.text:00410E20
.text:00410E20 loc_410E20:                             ; CODE XREF: sub_410D90+2F↑j
.text:00410E20                 cmp     [ebp+var_24], ebx
.text:00410E23                 jbe     short loc_410E40
.text:00410E25                 mov     [ebp+var_20], ecx
.text:00410E28
.text:00410E28 loc_410E28:                             ; CODE XREF: sub_410D90+15B↓j
.text:00410E28                 mov     [ebp+var_1C], edi
.text:00410E2B                 mov     eax, [ebp+var_20]
.text:00410E2E                 mov     edx, [ebp+var_1C]
.text:00410E31                 mov     [ebp+var_18], eax
.text:00410E34                 mov     [ebp+var_14], edx
.text:00410E37                 jmp     short loc_410DEE
.text:00410E37 ; ---------------------------------------------------------------------------
.text:00410E39                 align 10h
.text:00410E40
.text:00410E40 loc_410E40:                             ; CODE XREF: sub_410D90+93↑j
.text:00410E40                 bsr     eax, [ebp+var_24]
.text:00410E44                 mov     ebx, eax
.text:00410E46                 xor     ebx, 1Fh
.text:00410E49                 jnz     short loc_410E70
.text:00410E4B                 cmp     edi, [ebp+var_24]
.text:00410E4E                 ja      short loc_410E55
.text:00410E50                 cmp     [ebp+var_28], esi
.text:00410E53                 jb      short loc_410E60
.text:00410E55
.text:00410E55 loc_410E55:                             ; CODE XREF: sub_410D90+BE↑j
.text:00410E55                 mov     edx, [ebp+var_28]
.text:00410E58                 sub     edx, esi
.text:00410E5A                 sbb     edi, [ebp+var_24]
.text:00410E5D                 mov     [ebp+var_28], edx
.text:00410E60
.text:00410E60 loc_410E60:                             ; CODE XREF: sub_410D90+C3↑j
.text:00410E60                 lea     ecx, [ebp+var_18]
.text:00410E63                 test    ecx, ecx
.text:00410E65                 jz      short loc_410DEE
.text:00410E67                 mov     [ebp+var_1C], edi
.text:00410E6A                 jmp     loc_410DDC
.text:00410E6A ; ---------------------------------------------------------------------------
.text:00410E6F                 align 10h
.text:00410E70
.text:00410E70 loc_410E70:                             ; CODE XREF: sub_410D90+B9↑j
.text:00410E70                 mov     edx, [ebp+var_24]
.text:00410E73                 mov     eax, 20h ; ' '
.text:00410E78                 mov     cl, bl
.text:00410E7A                 sub     eax, ebx
.text:00410E7C                 mov     [ebp+var_2C], eax
.text:00410E7F                 shl     edx, cl
.text:00410E81                 mov     eax, esi
.text:00410E83                 movzx   ecx, byte ptr [ebp+var_2C]
.text:00410E87                 shr     eax, cl
.text:00410E89                 mov     cl, bl
.text:00410E8B                 shl     esi, cl
.text:00410E8D                 or      edx, eax
.text:00410E8F                 mov     eax, [ebp+var_28]
.text:00410E92                 movzx   ecx, byte ptr [ebp+var_2C]
.text:00410E96                 mov     [ebp+var_24], edx
.text:00410E99                 mov     edx, edi
.text:00410E9B                 shr     edx, cl
.text:00410E9D                 mov     cl, bl
.text:00410E9F                 shl     edi, cl
.text:00410EA1                 movzx   ecx, byte ptr [ebp+var_2C]
.text:00410EA5                 shr     eax, cl
.text:00410EA7                 or      edi, eax
.text:00410EA9                 mov     eax, edi
.text:00410EAB                 mov     cl, bl
.text:00410EAD                 div     [ebp+var_24]
.text:00410EB0                 shl     [ebp+var_28], cl
.text:00410EB3                 mov     edi, edx
.text:00410EB5                 mul     esi
.text:00410EB7                 mov     [ebp+var_34], eax
.text:00410EBA                 cmp     edx, edi
.text:00410EBC                 ja      short loc_410EF8
.text:00410EBE                 cmp     edx, edi
.text:00410EC0                 jz      short loc_410EF0
.text:00410EC2
.text:00410EC2 loc_410EC2:                             ; CODE XREF: sub_410D90+166↓j
.text:00410EC2                                         ; sub_410D90+173↓j
.text:00410EC2                 lea     eax, [ebp+var_18]
.text:00410EC5                 test    eax, eax
.text:00410EC7                 jz      loc_410DEE
.text:00410ECD                 movzx   ecx, byte ptr [ebp+var_2C]
.text:00410ED1                 mov     eax, [ebp+var_28]
.text:00410ED4                 sub     eax, [ebp+var_34]
.text:00410ED7                 sbb     edi, edx
.text:00410ED9                 mov     [ebp+var_28], eax
.text:00410EDC                 mov     edx, edi
.text:00410EDE                 shl     edx, cl
.text:00410EE0                 mov     cl, bl
.text:00410EE2                 shr     eax, cl
.text:00410EE4                 or      edx, eax
.text:00410EE6                 mov     [ebp+var_20], edx
.text:00410EE9                 shr     edi, cl
.text:00410EEB                 jmp     loc_410E28
.text:00410EF0 ; ---------------------------------------------------------------------------
.text:00410EF0
.text:00410EF0 loc_410EF0:                             ; CODE XREF: sub_410D90+130↑j
.text:00410EF0                 mov     eax, [ebp+var_28]
.text:00410EF3                 cmp     [ebp+var_34], eax
.text:00410EF6                 jbe     short loc_410EC2
.text:00410EF8
.text:00410EF8 loc_410EF8:                             ; CODE XREF: sub_410D90+12C↑j
.text:00410EF8                 mov     ecx, [ebp+var_34]
.text:00410EFB                 sub     ecx, esi
.text:00410EFD                 sbb     edx, [ebp+var_24]
.text:00410F00                 mov     [ebp+var_34], ecx
.text:00410F03                 jmp     short loc_410EC2
.text:00410F03 sub_410D90      endp
.text:00410F03
.text:00410F03 ; ---------------------------------------------------------------------------
.text:00410F05                 align 10h
.text:00410F10
.text:00410F10 ; =============== S U B R O U T I N E =======================================
.text:00410F10
.text:00410F10 ; Attributes: thunk
.text:00410F10
.text:00410F10 ; int __cdecl close(int FileHandle)
.text:00410F10 _close          proc near               ; CODE XREF: sub_4018C0+3E8↑p
.text:00410F10
.text:00410F10 FileHandle      = dword ptr  4
.text:00410F10
.text:00410F10                 jmp     ds:__imp__close
.text:00410F10 _close          endp
.text:00410F10
.text:00410F10 ; ---------------------------------------------------------------------------
.text:00410F16                 align 10h
.text:00410F20
.text:00410F20 ; =============== S U B R O U T I N E =======================================
.text:00410F20
.text:00410F20 ; Attributes: thunk
.text:00410F20
.text:00410F20 ; int open(const char *FileName, int OpenFlag, ...)
.text:00410F20 _open           proc near               ; CODE XREF: sub_4018C0+65E↑p
.text:00410F20
.text:00410F20 FileName        = dword ptr  4
.text:00410F20 OpenFlag        = dword ptr  8
.text:00410F20
.text:00410F20                 jmp     ds:__imp__open
.text:00410F20 _open           endp
.text:00410F20
.text:00410F20 ; ---------------------------------------------------------------------------
.text:00410F26                 align 10h
.text:00410F30
.text:00410F30 ; =============== S U B R O U T I N E =======================================
.text:00410F30
.text:00410F30 ; Attributes: thunk
.text:00410F30
.text:00410F30 ; int __cdecl read(int FileHandle, void *DstBuf, unsigned int MaxCharCount)
.text:00410F30 _read           proc near               ; CODE XREF: sub_40E910+2B↑p
.text:00410F30
.text:00410F30 FileHandle      = dword ptr  4
.text:00410F30 DstBuf          = dword ptr  8
.text:00410F30 MaxCharCount    = dword ptr  0Ch
.text:00410F30
.text:00410F30                 jmp     ds:__imp__read
.text:00410F30 _read           endp
.text:00410F30
.text:00410F30 ; ---------------------------------------------------------------------------
.text:00410F36                 align 10h
.text:00410F40
.text:00410F40 ; =============== S U B R O U T I N E =======================================
.text:00410F40
.text:00410F40 ; Attributes: info_from_lumina
.text:00410F40
.text:00410F40 ; unsigned __int64 __cdecl strtoull(const char *String, char **EndPtr, int Radix)
.text:00410F40 _strtoull       proc near               ; CODE XREF: sub_40CA00+AD↑p
.text:00410F40
.text:00410F40 C               = dword ptr -3Ch
.text:00410F40 Type            = dword ptr -38h
.text:00410F40 var_34          = dword ptr -34h
.text:00410F40 var_30          = dword ptr -30h
.text:00410F40 var_2C          = dword ptr -2Ch
.text:00410F40 var_28          = dword ptr -28h
.text:00410F40 var_24          = dword ptr -24h
.text:00410F40 var_20          = dword ptr -20h
.text:00410F40 var_1C          = dword ptr -1Ch
.text:00410F40 var_18          = dword ptr -18h
.text:00410F40 String          = dword ptr  4
.text:00410F40 EndPtr          = dword ptr  8
.text:00410F40 Radix           = dword ptr  0Ch
.text:00410F40
.text:00410F40                 push    ebp
.text:00410F41                 push    edi
.text:00410F42                 push    esi
.text:00410F43                 push    ebx
.text:00410F44                 sub     esp, 2Ch
.text:00410F47                 mov     edx, [esp+3Ch+EndPtr]
.text:00410F4B                 test    edx, edx
.text:00410F4D                 jz      short loc_410F59
.text:00410F4F                 mov     eax, [esp+3Ch+String]
.text:00410F53                 mov     ecx, [esp+3Ch+EndPtr]
.text:00410F57                 mov     [ecx], eax
.text:00410F59
.text:00410F59 loc_410F59:                             ; CODE XREF: _strtoull+D↑j
.text:00410F59                 mov     edx, [esp+3Ch+Radix]
.text:00410F5D                 test    edx, edx
.text:00410F5F                 js      short loc_410F6F
.text:00410F61                 cmp     [esp+3Ch+Radix], 1
.text:00410F66                 jz      short loc_410F6F
.text:00410F68                 cmp     [esp+3Ch+Radix], 24h ; '$'
.text:00410F6D                 jle     short loc_410F86
.text:00410F6F
.text:00410F6F loc_410F6F:                             ; CODE XREF: _strtoull+1F↑j
.text:00410F6F                                         ; _strtoull+26↑j
.text:00410F6F                 call    _errno
.text:00410F74                 mov     dword ptr [eax], 21h ; '!'
.text:00410F7A
.text:00410F7A loc_410F7A:                             ; CODE XREF: _strtoull+FF↓j
.text:00410F7A                                         ; _strtoull+109↓j
.text:00410F7A                 xor     eax, eax
.text:00410F7C                 xor     edx, edx
.text:00410F7E
.text:00410F7E loc_410F7E:                             ; CODE XREF: _strtoull+244↓j
.text:00410F7E                                         ; _strtoull+251↓j ...
.text:00410F7E                 add     esp, 2Ch
.text:00410F81                 pop     ebx
.text:00410F82                 pop     esi
.text:00410F83                 pop     edi
.text:00410F84                 pop     ebp
.text:00410F85                 retn
.text:00410F86 ; ---------------------------------------------------------------------------
.text:00410F86
.text:00410F86 loc_410F86:                             ; CODE XREF: _strtoull+2D↑j
.text:00410F86                 mov     ecx, ds:__mb_cur_max
.text:00410F8C                 lea     esi, [esi+0]
.text:00410F90
.text:00410F90 loc_410F90:                             ; CODE XREF: _strtoull+7E↓j
.text:00410F90                 cmp     dword ptr [ecx], 1
.text:00410F93                 mov     esi, [esp+3Ch+String]
.text:00410F97                 movsx   edx, byte ptr [esi]
.text:00410F9A                 jz      loc_411372
.text:00410FA0                 mov     [esp+3Ch+Type], 8 ; Type
.text:00410FA8                 mov     [esp+3Ch+C], edx ; C
.text:00410FAB                 call    _isctype
.text:00410FB0                 mov     ecx, ds:__mb_cur_max
.text:00410FB6
.text:00410FB6 loc_410FB6:                             ; CODE XREF: _strtoull+445↓j
.text:00410FB6                 test    eax, eax
.text:00410FB8                 jz      short loc_410FC0
.text:00410FBA                 inc     [esp+3Ch+String]
.text:00410FBE                 jmp     short loc_410F90
.text:00410FC0 ; ---------------------------------------------------------------------------
.text:00410FC0
.text:00410FC0 loc_410FC0:                             ; CODE XREF: _strtoull+78↑j
.text:00410FC0                 mov     esi, [esp+3Ch+String]
.text:00410FC4                 xor     ebx, ebx
.text:00410FC6                 movzx   edx, byte ptr [esi]
.text:00410FC9                 cmp     dl, 2Dh ; '-'
.text:00410FCC                 setz    bl
.text:00410FCF                 test    ebx, ebx
.text:00410FD1                 mov     [esp+3Ch+var_20], ebx
.text:00410FD5                 jnz     loc_411362
.text:00410FDB                 cmp     dl, 2Bh ; '+'
.text:00410FDE                 jz      loc_411362
.text:00410FE4
.text:00410FE4 loc_410FE4:                             ; CODE XREF: _strtoull+42D↓j
.text:00410FE4                 mov     ebp, [esp+3Ch+Radix]
.text:00410FE8                 test    ebp, ebp
.text:00410FEA                 jnz     short loc_410FFD
.text:00410FEC                 cmp     dl, 30h ; '0'
.text:00410FEF                 jz      loc_411339
.text:00410FF5                 mov     [esp+3Ch+Radix], 0Ah
.text:00410FFD
.text:00410FFD loc_410FFD:                             ; CODE XREF: _strtoull+AA↑j
.text:00410FFD                                         ; _strtoull+40F↓j ...
.text:00410FFD                 cmp     [esp+3Ch+Radix], 10h
.text:00411002                 jz      loc_41130B
.text:00411008
.text:00411008 loc_411008:                             ; CODE XREF: _strtoull+3CE↓j
.text:00411008                                         ; _strtoull+3E2↓j ...
.text:00411008                 cmp     dword ptr [ecx], 1
.text:0041100B                 movsx   ebx, dl
.text:0041100E                 jz      loc_4112F3
.text:00411014                 mov     [esp+3Ch+Type], 4 ; Type
.text:0041101C                 mov     [esp+3Ch+C], ebx ; C
.text:0041101F                 call    _isctype
.text:00411024                 mov     esi, [esp+3Ch+String]
.text:00411028                 movzx   edx, byte ptr [esi]
.text:0041102B
.text:0041102B loc_41102B:                             ; CODE XREF: _strtoull+3C6↓j
.text:0041102B                 test    eax, eax
.text:0041102D                 jz      loc_41125C
.text:00411033                 movsx   eax, dl
.text:00411036                 sub     eax, 30h ; '0'
.text:00411039
.text:00411039 loc_411039:                             ; CODE XREF: _strtoull+34B↓j
.text:00411039                                         ; _strtoull+37C↓j ...
.text:00411039                 inc     [esp+3Ch+String]
.text:0041103D                 test    eax, eax
.text:0041103F                 js      loc_410F7A
.text:00411045                 cmp     eax, [esp+3Ch+Radix]
.text:00411049                 jge     loc_410F7A
.text:0041104F                 mov     [esp+3Ch+var_1C], eax
.text:00411053                 mov     edx, eax
.text:00411055                 sar     edx, 1Fh
.text:00411058                 mov     [esp+3Ch+var_18], edx
.text:0041105C                 mov     [esp+3Ch+var_24], 0
.text:00411064                 lea     esi, [esi+0]
.text:0041106A                 lea     edi, [edi+0]
.text:00411070
.text:00411070 loc_411070:                             ; CODE XREF: _strtoull+20C↓j
.text:00411070                 mov     ebp, [esp+3Ch+String]
.text:00411074                 mov     ebx, ds:__mb_cur_max
.text:0041107A                 movzx   edx, byte ptr [ebp+0]
.text:0041107E                 cmp     dword ptr [ebx], 1
.text:00411081                 movsx   ecx, dl
.text:00411084                 jz      loc_411245
.text:0041108A                 mov     [esp+3Ch+C], ecx ; C
.text:0041108D                 mov     [esp+3Ch+Type], 4 ; Type
.text:00411095                 call    _isctype
.text:0041109A                 mov     ecx, [esp+3Ch+String]
.text:0041109E                 movzx   edx, byte ptr [ecx]
.text:004110A1
.text:004110A1 loc_4110A1:                             ; CODE XREF: _strtoull+317↓j
.text:004110A1                 test    eax, eax
.text:004110A3                 jz      loc_4111B0
.text:004110A9                 movsx   edi, dl
.text:004110AC                 lea     ebp, [edi-30h]
.text:004110AF
.text:004110AF loc_4110AF:                             ; CODE XREF: _strtoull+2A3↓j
.text:004110AF                 test    ebp, ebp
.text:004110B1                 js      loc_41115B
.text:004110B7                 cmp     ebp, [esp+3Ch+Radix]
.text:004110BB                 jge     loc_41115B
.text:004110C1                 mov     [esp+3Ch+C], 0FFFFFFFFh
.text:004110C8                 mov     eax, [esp+3Ch+Radix]
.text:004110CC                 mov     [esp+3Ch+Type], 0FFFFFFFFh
.text:004110D4                 cdq
.text:004110D5                 mov     esi, eax
.text:004110D7                 mov     [esp+3Ch+var_34], eax
.text:004110DB                 mov     edi, edx
.text:004110DD                 mov     [esp+3Ch+var_30], edx
.text:004110E1                 call    sub_410B10
.text:004110E6                 add     eax, 1
.text:004110E9                 adc     edx, 0
.text:004110EC                 cmp     [esp+3Ch+var_18], edx
.text:004110F0                 ja      short loc_411140
.text:004110F2                 jb      short loc_4110FA
.text:004110F4                 cmp     [esp+3Ch+var_1C], eax
.text:004110F8                 ja      short loc_411140
.text:004110FA
.text:004110FA loc_4110FA:                             ; CODE XREF: _strtoull+1B2↑j
.text:004110FA                 mov     eax, [esp+3Ch+var_1C]
.text:004110FE                 mov     ebx, ebp
.text:00411100                 mul     esi
.text:00411102                 mov     ecx, edx
.text:00411104                 mov     [esp+3Ch+var_2C], eax
.text:00411108                 mov     eax, [esp+3Ch+var_18]
.text:0041110C                 mov     [esp+3Ch+var_28], edx
.text:00411110                 imul    eax, esi
.text:00411113                 mov     esi, [esp+3Ch+var_1C]
.text:00411117                 imul    esi, edi
.text:0041111A                 add     ecx, eax
.text:0041111C                 lea     edi, [esi+ecx]
.text:0041111F                 mov     esi, ebp
.text:00411121                 sar     esi, 1Fh
.text:00411124                 add     ebx, [esp+3Ch+var_2C]
.text:00411128                 mov     [esp+3Ch+var_28], edi
.text:0041112C                 adc     esi, [esp+3Ch+var_28]
.text:00411130                 cmp     esi, [esp+3Ch+var_18]
.text:00411134                 jb      short loc_411140
.text:00411136                 ja      short loc_411151
.text:00411138                 cmp     ebx, [esp+3Ch+var_1C]
.text:0041113C                 jnb     short loc_411151
.text:0041113E                 mov     esi, esi
.text:00411140
.text:00411140 loc_411140:                             ; CODE XREF: _strtoull+1B0↑j
.text:00411140                                         ; _strtoull+1B8↑j ...
.text:00411140                 mov     [esp+3Ch+var_24], 1
.text:00411148
.text:00411148 loc_411148:                             ; CODE XREF: _strtoull+219↓j
.text:00411148                 inc     [esp+3Ch+String]
.text:0041114C                 jmp     loc_411070
.text:00411151 ; ---------------------------------------------------------------------------
.text:00411151
.text:00411151 loc_411151:                             ; CODE XREF: _strtoull+1F6↑j
.text:00411151                                         ; _strtoull+1FC↑j
.text:00411151                 mov     [esp+3Ch+var_1C], ebx
.text:00411155                 mov     [esp+3Ch+var_18], esi
.text:00411159                 jmp     short loc_411148
.text:0041115B ; ---------------------------------------------------------------------------
.text:0041115B
.text:0041115B loc_41115B:                             ; CODE XREF: _strtoull+171↑j
.text:0041115B                                         ; _strtoull+17B↑j
.text:0041115B                 mov     eax, [esp+3Ch+EndPtr]
.text:0041115F                 test    eax, eax
.text:00411161                 jz      short loc_41116E
.text:00411163                 mov     ecx, [esp+3Ch+String]
.text:00411167                 mov     ebp, [esp+3Ch+EndPtr]
.text:0041116B                 mov     [ebp+0], ecx
.text:0041116E
.text:0041116E loc_41116E:                             ; CODE XREF: _strtoull+221↑j
.text:0041116E                 mov     esi, [esp+3Ch+var_24]
.text:00411172                 test    esi, esi
.text:00411174                 jnz     short loc_411196
.text:00411176                 mov     ebx, [esp+3Ch+var_20]
.text:0041117A                 mov     eax, [esp+3Ch+var_1C]
.text:0041117E                 mov     edx, [esp+3Ch+var_18]
.text:00411182                 test    ebx, ebx
.text:00411184                 jz      loc_410F7E
.text:0041118A                 neg     eax
.text:0041118C                 adc     edx, 0
.text:0041118F                 neg     edx
.text:00411191                 jmp     loc_410F7E
.text:00411196 ; ---------------------------------------------------------------------------
.text:00411196
.text:00411196 loc_411196:                             ; CODE XREF: _strtoull+234↑j
.text:00411196                 call    _errno
.text:0041119B                 mov     edx, 0FFFFFFFFh
.text:004111A0                 mov     dword ptr [eax], 22h ; '"'
.text:004111A6                 mov     eax, 0FFFFFFFFh
.text:004111AB                 jmp     loc_410F7E
.text:004111B0 ; ---------------------------------------------------------------------------
.text:004111B0
.text:004111B0 loc_4111B0:                             ; CODE XREF: _strtoull+163↑j
.text:004111B0                 mov     ebp, ds:__mb_cur_max
.text:004111B6                 movsx   ecx, dl
.text:004111B9                 cmp     dword ptr [ebp+0], 1
.text:004111BD                 jz      short loc_411231
.text:004111BF                 mov     [esp+3Ch+Type], 1 ; Type
.text:004111C7                 mov     [esp+3Ch+C], ecx ; C
.text:004111CA                 call    _isctype
.text:004111CF                 mov     ebp, [esp+3Ch+String]
.text:004111D3                 movzx   edx, byte ptr [ebp+0]
.text:004111D7
.text:004111D7 loc_4111D7:                             ; CODE XREF: _strtoull+303↓j
.text:004111D7                 test    eax, eax
.text:004111D9                 jz      short loc_4111E8
.text:004111DB                 movsx   eax, dl
.text:004111DE                 sub     eax, 37h ; '7'
.text:004111E1
.text:004111E1 loc_4111E1:                             ; CODE XREF: _strtoull+2D4↓j
.text:004111E1                                         ; _strtoull+2DB↓j
.text:004111E1                 mov     ebp, eax
.text:004111E3                 jmp     loc_4110AF
.text:004111E8 ; ---------------------------------------------------------------------------
.text:004111E8
.text:004111E8 loc_4111E8:                             ; CODE XREF: _strtoull+299↑j
.text:004111E8                 mov     ecx, ds:__mb_cur_max
.text:004111EE                 movsx   edx, dl
.text:004111F1                 cmp     dword ptr [ecx], 1
.text:004111F4                 jz      short loc_41121D
.text:004111F6                 mov     [esp+3Ch+Type], 2 ; Type
.text:004111FE                 mov     [esp+3Ch+C], edx ; C
.text:00411201                 call    _isctype
.text:00411206
.text:00411206 loc_411206:                             ; CODE XREF: _strtoull+2EF↓j
.text:00411206                 test    eax, eax
.text:00411208                 jz      short loc_411216
.text:0041120A                 mov     edx, [esp+3Ch+String]
.text:0041120E                 movsx   eax, byte ptr [edx]
.text:00411211                 sub     eax, 57h ; 'W'
.text:00411214                 jmp     short loc_4111E1
.text:00411216 ; ---------------------------------------------------------------------------
.text:00411216
.text:00411216 loc_411216:                             ; CODE XREF: _strtoull+2C8↑j
.text:00411216                 mov     eax, 0FFFFFFFFh
.text:0041121B                 jmp     short loc_4111E1
.text:0041121D ; ---------------------------------------------------------------------------
.text:0041121D
.text:0041121D loc_41121D:                             ; CODE XREF: _strtoull+2B4↑j
.text:0041121D                 mov     edi, ds:_pctype
.text:00411223                 mov     ebx, [edi]
.text:00411225                 movzx   esi, word ptr [ebx+edx*2]
.text:00411229                 and     esi, 2
.text:0041122C                 movzx   eax, si
.text:0041122F                 jmp     short loc_411206
.text:00411231 ; ---------------------------------------------------------------------------
.text:00411231
.text:00411231 loc_411231:                             ; CODE XREF: _strtoull+27D↑j
.text:00411231                 mov     edi, ds:_pctype
.text:00411237                 mov     ebx, [edi]
.text:00411239                 movzx   esi, word ptr [ebx+ecx*2]
.text:0041123D                 and     esi, 1
.text:00411240                 movzx   eax, si
.text:00411243                 jmp     short loc_4111D7
.text:00411245 ; ---------------------------------------------------------------------------
.text:00411245
.text:00411245 loc_411245:                             ; CODE XREF: _strtoull+144↑j
.text:00411245                 mov     ebx, ds:_pctype
.text:0041124B                 mov     esi, [ebx]
.text:0041124D                 movzx   edi, word ptr [esi+ecx*2]
.text:00411251                 and     edi, 4
.text:00411254                 movzx   eax, di
.text:00411257                 jmp     loc_4110A1
.text:0041125C ; ---------------------------------------------------------------------------
.text:0041125C
.text:0041125C loc_41125C:                             ; CODE XREF: _strtoull+ED↑j
.text:0041125C                 mov     ebx, ds:__mb_cur_max
.text:00411262                 movsx   ecx, dl
.text:00411265                 cmp     dword ptr [ebx], 1
.text:00411268                 jz      short loc_4112DF
.text:0041126A                 mov     [esp+3Ch+C], ecx ; C
.text:0041126D                 mov     [esp+3Ch+Type], 1 ; Type
.text:00411275                 call    _isctype
.text:0041127A                 mov     ecx, [esp+3Ch+String]
.text:0041127E                 movzx   edx, byte ptr [ecx]
.text:00411281
.text:00411281 loc_411281:                             ; CODE XREF: _strtoull+3B1↓j
.text:00411281                 test    eax, eax
.text:00411283                 jz      short loc_411290
.text:00411285                 movsx   eax, dl
.text:00411288                 sub     eax, 37h ; '7'
.text:0041128B                 jmp     loc_411039
.text:00411290 ; ---------------------------------------------------------------------------
.text:00411290
.text:00411290 loc_411290:                             ; CODE XREF: _strtoull+343↑j
.text:00411290                 mov     ebx, ds:__mb_cur_max
.text:00411296                 movsx   edx, dl
.text:00411299                 cmp     dword ptr [ebx], 1
.text:0041129C                 jz      short loc_4112CB
.text:0041129E                 mov     [esp+3Ch+Type], 2 ; Type
.text:004112A6                 mov     [esp+3Ch+C], edx ; C
.text:004112A9                 call    _isctype
.text:004112AE
.text:004112AE loc_4112AE:                             ; CODE XREF: _strtoull+39D↓j
.text:004112AE                 test    eax, eax
.text:004112B0                 jz      short loc_4112C1
.text:004112B2                 mov     ecx, [esp+3Ch+String]
.text:004112B6                 movsx   eax, byte ptr [ecx]
.text:004112B9                 sub     eax, 57h ; 'W'
.text:004112BC                 jmp     loc_411039
.text:004112C1 ; ---------------------------------------------------------------------------
.text:004112C1
.text:004112C1 loc_4112C1:                             ; CODE XREF: _strtoull+370↑j
.text:004112C1                 mov     eax, 0FFFFFFFFh
.text:004112C6                 jmp     loc_411039
.text:004112CB ; ---------------------------------------------------------------------------
.text:004112CB
.text:004112CB loc_4112CB:                             ; CODE XREF: _strtoull+35C↑j
.text:004112CB                 mov     esi, ds:_pctype
.text:004112D1                 mov     edi, [esi]
.text:004112D3                 movzx   ebp, word ptr [edi+edx*2]
.text:004112D7                 and     ebp, 2
.text:004112DA                 movzx   eax, bp
.text:004112DD                 jmp     short loc_4112AE
.text:004112DF ; ---------------------------------------------------------------------------
.text:004112DF
.text:004112DF loc_4112DF:                             ; CODE XREF: _strtoull+328↑j
.text:004112DF                 mov     esi, ds:_pctype
.text:004112E5                 mov     edi, [esi]
.text:004112E7                 movzx   ebp, word ptr [edi+ecx*2]
.text:004112EB                 and     ebp, 1
.text:004112EE                 movzx   eax, bp
.text:004112F1                 jmp     short loc_411281
.text:004112F3 ; ---------------------------------------------------------------------------
.text:004112F3
.text:004112F3 loc_4112F3:                             ; CODE XREF: _strtoull+CE↑j
.text:004112F3                 mov     edi, ds:_pctype
.text:004112F9                 mov     ebp, [edi]
.text:004112FB                 movzx   ecx, word ptr [ebp+ebx*2+0]
.text:00411300                 and     ecx, 4
.text:00411303                 movzx   eax, cx
.text:00411306                 jmp     loc_41102B
.text:0041130B ; ---------------------------------------------------------------------------
.text:0041130B
.text:0041130B loc_41130B:                             ; CODE XREF: _strtoull+C2↑j
.text:0041130B                 cmp     dl, 30h ; '0'
.text:0041130E                 jnz     loc_411008
.text:00411314                 mov     esi, [esp+3Ch+String]
.text:00411318                 movzx   eax, byte ptr [esi+1]
.text:0041131C                 cmp     al, 58h ; 'X'
.text:0041131E                 jz      short loc_411328
.text:00411320                 cmp     al, 78h ; 'x'
.text:00411322                 jnz     loc_411008
.text:00411328
.text:00411328 loc_411328:                             ; CODE XREF: _strtoull+3DE↑j
.text:00411328                 add     [esp+3Ch+String], 2
.text:0041132D                 mov     ebx, [esp+3Ch+String]
.text:00411331                 movzx   edx, byte ptr [ebx]
.text:00411334                 jmp     loc_411008
.text:00411339 ; ---------------------------------------------------------------------------
.text:00411339
.text:00411339 loc_411339:                             ; CODE XREF: _strtoull+AF↑j
.text:00411339                 mov     edi, [esp+3Ch+String]
.text:0041133D                 movzx   eax, byte ptr [edi+1]
.text:00411341                 cmp     al, 58h ; 'X'
.text:00411343                 jz      short loc_411355
.text:00411345                 mov     [esp+3Ch+Radix], 8
.text:0041134D                 cmp     al, 78h ; 'x'
.text:0041134F                 jnz     loc_410FFD
.text:00411355
.text:00411355 loc_411355:                             ; CODE XREF: _strtoull+403↑j
.text:00411355                 mov     [esp+3Ch+Radix], 10h
.text:0041135D                 jmp     loc_410FFD
.text:00411362 ; ---------------------------------------------------------------------------
.text:00411362
.text:00411362 loc_411362:                             ; CODE XREF: _strtoull+95↑j
.text:00411362                                         ; _strtoull+9E↑j
.text:00411362                 inc     [esp+3Ch+String]
.text:00411366                 mov     eax, [esp+3Ch+String]
.text:0041136A                 movzx   edx, byte ptr [eax]
.text:0041136D                 jmp     loc_410FE4
.text:00411372 ; ---------------------------------------------------------------------------
.text:00411372
.text:00411372 loc_411372:                             ; CODE XREF: _strtoull+5A↑j
.text:00411372                 mov     ebp, ds:_pctype
.text:00411378                 mov     edi, [ebp+0]
.text:0041137B                 movzx   ebx, word ptr [edi+edx*2]
.text:0041137F                 and     ebx, 8
.text:00411382                 movzx   eax, bx
.text:00411385                 jmp     loc_410FB6
.text:00411385 _strtoull       endp
.text:00411385
.text:00411385 ; ---------------------------------------------------------------------------
.text:0041138A                 align 10h
.text:00411390
.text:00411390 ; =============== S U B R O U T I N E =======================================
.text:00411390
.text:00411390 ; Attributes: info_from_lumina
.text:00411390
.text:00411390 ; __int64 __cdecl strtoll(const char *String, char **EndPtr, int Radix)
.text:00411390 _strtoll        proc near               ; CODE XREF: sub_40D700+56↑p
.text:00411390
.text:00411390 C               = dword ptr -3Ch
.text:00411390 Type            = dword ptr -38h
.text:00411390 var_34          = dword ptr -34h
.text:00411390 var_30          = dword ptr -30h
.text:00411390 var_2C          = dword ptr -2Ch
.text:00411390 var_28          = dword ptr -28h
.text:00411390 var_24          = dword ptr -24h
.text:00411390 var_20          = dword ptr -20h
.text:00411390 var_1C          = dword ptr -1Ch
.text:00411390 var_18          = dword ptr -18h
.text:00411390 String          = dword ptr  4
.text:00411390 EndPtr          = dword ptr  8
.text:00411390 Radix           = dword ptr  0Ch
.text:00411390
.text:00411390                 push    ebp
.text:00411391                 push    edi
.text:00411392                 push    esi
.text:00411393                 push    ebx
.text:00411394                 sub     esp, 2Ch
.text:00411397                 mov     edx, [esp+3Ch+EndPtr]
.text:0041139B                 test    edx, edx
.text:0041139D                 jz      short loc_4113A9
.text:0041139F                 mov     eax, [esp+3Ch+String]
.text:004113A3                 mov     ecx, [esp+3Ch+EndPtr]
.text:004113A7                 mov     [ecx], eax
.text:004113A9
.text:004113A9 loc_4113A9:                             ; CODE XREF: _strtoll+D↑j
.text:004113A9                 mov     edx, [esp+3Ch+Radix]
.text:004113AD                 test    edx, edx
.text:004113AF                 js      short loc_4113BF
.text:004113B1                 cmp     [esp+3Ch+Radix], 1
.text:004113B6                 jz      short loc_4113BF
.text:004113B8                 cmp     [esp+3Ch+Radix], 24h ; '$'
.text:004113BD                 jle     short loc_4113D6
.text:004113BF
.text:004113BF loc_4113BF:                             ; CODE XREF: _strtoll+1F↑j
.text:004113BF                                         ; _strtoll+26↑j
.text:004113BF                 call    _errno
.text:004113C4                 mov     dword ptr [eax], 21h ; '!'
.text:004113CA
.text:004113CA loc_4113CA:                             ; CODE XREF: _strtoll+FF↓j
.text:004113CA                                         ; _strtoll+109↓j
.text:004113CA                 xor     eax, eax
.text:004113CC                 xor     edx, edx
.text:004113CE
.text:004113CE loc_4113CE:                             ; CODE XREF: _strtoll+24B↓j
.text:004113CE                                         ; _strtoll+258↓j ...
.text:004113CE                 add     esp, 2Ch
.text:004113D1                 pop     ebx
.text:004113D2                 pop     esi
.text:004113D3                 pop     edi
.text:004113D4                 pop     ebp
.text:004113D5                 retn
.text:004113D6 ; ---------------------------------------------------------------------------
.text:004113D6
.text:004113D6 loc_4113D6:                             ; CODE XREF: _strtoll+2D↑j
.text:004113D6                 mov     ecx, ds:__mb_cur_max
.text:004113DC                 lea     esi, [esi+0]
.text:004113E0
.text:004113E0 loc_4113E0:                             ; CODE XREF: _strtoll+7E↓j
.text:004113E0                 cmp     dword ptr [ecx], 1
.text:004113E3                 mov     esi, [esp+3Ch+String]
.text:004113E7                 movsx   edx, byte ptr [esi]
.text:004113EA                 jz      loc_4117F0
.text:004113F0                 mov     [esp+3Ch+Type], 8 ; Type
.text:004113F8                 mov     [esp+3Ch+C], edx ; C
.text:004113FB                 call    _isctype
.text:00411400                 mov     ecx, ds:__mb_cur_max
.text:00411406
.text:00411406 loc_411406:                             ; CODE XREF: _strtoll+473↓j
.text:00411406                 test    eax, eax
.text:00411408                 jz      short loc_411410
.text:0041140A                 inc     [esp+3Ch+String]
.text:0041140E                 jmp     short loc_4113E0
.text:00411410 ; ---------------------------------------------------------------------------
.text:00411410
.text:00411410 loc_411410:                             ; CODE XREF: _strtoll+78↑j
.text:00411410                 mov     eax, [esp+3Ch+String]
.text:00411414                 xor     ebx, ebx
.text:00411416                 movzx   edx, byte ptr [eax]
.text:00411419                 cmp     dl, 2Dh ; '-'
.text:0041141C                 setz    bl
.text:0041141F                 test    ebx, ebx
.text:00411421                 mov     [esp+3Ch+var_20], ebx
.text:00411425                 jnz     loc_4117E0
.text:0041142B                 cmp     dl, 2Bh ; '+'
.text:0041142E                 jz      loc_4117E0
.text:00411434
.text:00411434 loc_411434:                             ; CODE XREF: _strtoll+45B↓j
.text:00411434                 mov     edi, [esp+3Ch+Radix]
.text:00411438                 test    edi, edi
.text:0041143A                 jnz     short loc_41144D
.text:0041143C                 cmp     dl, 30h ; '0'
.text:0041143F                 jz      loc_4117B7
.text:00411445                 mov     [esp+3Ch+Radix], 0Ah
.text:0041144D
.text:0041144D loc_41144D:                             ; CODE XREF: _strtoll+AA↑j
.text:0041144D                                         ; _strtoll+43D↓j ...
.text:0041144D                 cmp     [esp+3Ch+Radix], 10h
.text:00411452                 jz      loc_411789
.text:00411458
.text:00411458 loc_411458:                             ; CODE XREF: _strtoll+3FC↓j
.text:00411458                                         ; _strtoll+410↓j ...
.text:00411458                 cmp     dword ptr [ecx], 1
.text:0041145B                 movsx   ebx, dl
.text:0041145E                 jz      loc_411771
.text:00411464                 mov     [esp+3Ch+C], ebx ; C
.text:00411467                 mov     [esp+3Ch+Type], 4 ; Type
.text:0041146F                 call    _isctype
.text:00411474                 mov     ebx, [esp+3Ch+String]
.text:00411478                 movzx   edx, byte ptr [ebx]
.text:0041147B
.text:0041147B loc_41147B:                             ; CODE XREF: _strtoll+3F4↓j
.text:0041147B                 test    eax, eax
.text:0041147D                 jz      loc_4116D8
.text:00411483                 movsx   eax, dl
.text:00411486                 sub     eax, 30h ; '0'
.text:00411489
.text:00411489 loc_411489:                             ; CODE XREF: _strtoll+377↓j
.text:00411489                                         ; _strtoll+3A8↓j ...
.text:00411489                 inc     [esp+3Ch+String]
.text:0041148D                 test    eax, eax
.text:0041148F                 js      loc_4113CA
.text:00411495                 cmp     eax, [esp+3Ch+Radix]
.text:00411499                 jge     loc_4113CA
.text:0041149F                 mov     [esp+3Ch+var_1C], eax
.text:004114A3                 cdq
.text:004114A4                 mov     [esp+3Ch+var_18], edx
.text:004114A8                 mov     [esp+3Ch+var_24], 0
.text:004114B0
.text:004114B0 loc_4114B0:                             ; CODE XREF: _strtoll+1B2↓j
.text:004114B0                 mov     ebx, [esp+3Ch+String]
.text:004114B4                 mov     ebp, ds:__mb_cur_max
.text:004114BA                 movzx   edx, byte ptr [ebx]
.text:004114BD                 cmp     dword ptr [ebp+0], 1
.text:004114C1                 movsx   ecx, dl
.text:004114C4                 jz      loc_4116C0
.text:004114CA                 mov     [esp+3Ch+C], ecx ; C
.text:004114CD                 mov     [esp+3Ch+Type], 4 ; Type
.text:004114D5                 call    _isctype
.text:004114DA                 mov     ecx, [esp+3Ch+String]
.text:004114DE                 movzx   edx, byte ptr [ecx]
.text:004114E1
.text:004114E1 loc_4114E1:                             ; CODE XREF: _strtoll+343↓j
.text:004114E1                 test    eax, eax
.text:004114E3                 jz      loc_411626
.text:004114E9                 movsx   ebx, dl
.text:004114EC                 lea     ebp, [ebx-30h]
.text:004114EF
.text:004114EF loc_4114EF:                             ; CODE XREF: _strtoll+2C7↓j
.text:004114EF                 test    ebp, ebp
.text:004114F1                 js      loc_411590
.text:004114F7                 cmp     ebp, [esp+3Ch+Radix]
.text:004114FB                 jge     loc_411590
.text:00411501                 mov     [esp+3Ch+C], 0FFFFFFFFh
.text:00411508                 mov     eax, [esp+3Ch+Radix]
.text:0041150C                 mov     [esp+3Ch+Type], 7FFFFFFFh
.text:00411514                 cdq
.text:00411515                 mov     [esp+3Ch+var_34], eax
.text:00411519                 mov     [esp+3Ch+var_30], edx
.text:0041151D                 call    sub_410C30
.text:00411522                 add     eax, 2
.text:00411525                 adc     edx, 0
.text:00411528                 cmp     [esp+3Ch+var_18], edx
.text:0041152C                 jb      short loc_411547
.text:0041152E                 ja      short loc_411536
.text:00411530                 cmp     [esp+3Ch+var_1C], eax
.text:00411534                 jbe     short loc_411547
.text:00411536
.text:00411536 loc_411536:                             ; CODE XREF: _strtoll+19E↑j
.text:00411536                 mov     [esp+3Ch+var_24], 1
.text:0041153E
.text:0041153E loc_41153E:                             ; CODE XREF: _strtoll+1FE↓j
.text:0041153E                 inc     [esp+3Ch+String]
.text:00411542                 jmp     loc_4114B0
.text:00411547 ; ---------------------------------------------------------------------------
.text:00411547
.text:00411547 loc_411547:                             ; CODE XREF: _strtoll+19C↑j
.text:00411547                                         ; _strtoll+1A4↑j
.text:00411547                 mov     eax, [esp+3Ch+Radix]
.text:0041154B                 mov     ecx, [esp+3Ch+var_18]
.text:0041154F                 cdq
.text:00411550                 mov     [esp+3Ch+var_2C], eax
.text:00411554                 mov     esi, [esp+3Ch+var_2C]
.text:00411558                 mov     [esp+3Ch+var_28], edx
.text:0041155C                 mov     eax, [esp+3Ch+var_1C]
.text:00411560                 mov     edi, [esp+3Ch+var_28]
.text:00411564                 mul     [esp+3Ch+var_2C]
.text:00411568                 imul    ecx, esi
.text:0041156B                 mov     esi, [esp+3Ch+var_1C]
.text:0041156F                 mov     [esp+3Ch+var_1C], ebp
.text:00411573                 imul    esi, edi
.text:00411576                 mov     ebx, eax
.text:00411578                 mov     eax, ebp
.text:0041157A                 add     edx, ecx
.text:0041157C                 sar     eax, 1Fh
.text:0041157F                 add     [esp+3Ch+var_1C], ebx
.text:00411583                 lea     ecx, [esi+edx]
.text:00411586                 mov     [esp+3Ch+var_18], eax
.text:0041158A                 adc     [esp+3Ch+var_18], ecx
.text:0041158E                 jmp     short loc_41153E
.text:00411590 ; ---------------------------------------------------------------------------
.text:00411590
.text:00411590 loc_411590:                             ; CODE XREF: _strtoll+161↑j
.text:00411590                                         ; _strtoll+16B↑j
.text:00411590                 mov     eax, [esp+3Ch+EndPtr]
.text:00411594                 test    eax, eax
.text:00411596                 jz      short loc_4115A2
.text:00411598                 mov     edi, [esp+3Ch+String]
.text:0041159C                 mov     edx, [esp+3Ch+EndPtr]
.text:004115A0                 mov     [edx], edi
.text:004115A2
.text:004115A2 loc_4115A2:                             ; CODE XREF: _strtoll+206↑j
.text:004115A2                 mov     esi, [esp+3Ch+var_20]
.text:004115A6                 test    esi, esi
.text:004115A8                 jz      short loc_41161A
.text:004115AA                 cmp     [esp+3Ch+var_18], 80000000h
.text:004115B2                 jb      short loc_4115C5
.text:004115B4                 ja      short loc_4115BD
.text:004115B6                 cmp     [esp+3Ch+var_1C], 0
.text:004115BB
.text:004115BB loc_4115BB:                             ; CODE XREF: _strtoll+294↓j
.text:004115BB                 jbe     short loc_4115C5
.text:004115BD
.text:004115BD loc_4115BD:                             ; CODE XREF: _strtoll+224↑j
.text:004115BD                 mov     [esp+3Ch+var_24], 1
.text:004115C5
.text:004115C5 loc_4115C5:                             ; CODE XREF: _strtoll+222↑j
.text:004115C5                                         ; _strtoll:loc_4115BB↑j ...
.text:004115C5                 mov     ebp, [esp+3Ch+var_24]
.text:004115C9                 test    ebp, ebp
.text:004115CB                 jnz     short loc_4115ED
.text:004115CD                 mov     ebx, [esp+3Ch+var_20]
.text:004115D1                 mov     eax, [esp+3Ch+var_1C]
.text:004115D5                 mov     edx, [esp+3Ch+var_18]
.text:004115D9                 test    ebx, ebx
.text:004115DB                 jz      loc_4113CE
.text:004115E1                 neg     eax
.text:004115E3                 adc     edx, 0
.text:004115E6                 neg     edx
.text:004115E8                 jmp     loc_4113CE
.text:004115ED ; ---------------------------------------------------------------------------
.text:004115ED
.text:004115ED loc_4115ED:                             ; CODE XREF: _strtoll+23B↑j
.text:004115ED                 call    _errno
.text:004115F2                 mov     ecx, [esp+3Ch+var_20]
.text:004115F6                 mov     edx, 80000000h
.text:004115FB                 mov     dword ptr [eax], 22h ; '"'
.text:00411601                 xor     eax, eax
.text:00411603                 test    ecx, ecx
.text:00411605                 jnz     loc_4113CE
.text:0041160B                 mov     eax, 0FFFFFFFFh
.text:00411610                 mov     edx, 7FFFFFFFh
.text:00411615                 jmp     loc_4113CE
.text:0041161A ; ---------------------------------------------------------------------------
.text:0041161A
.text:0041161A loc_41161A:                             ; CODE XREF: _strtoll+218↑j
.text:0041161A                 cmp     [esp+3Ch+var_18], 7FFFFFFFh
.text:00411622                 jb      short loc_4115C5
.text:00411624                 jmp     short loc_4115BB
.text:00411626 ; ---------------------------------------------------------------------------
.text:00411626
.text:00411626 loc_411626:                             ; CODE XREF: _strtoll+153↑j
.text:00411626                 mov     edi, ds:__mb_cur_max
.text:0041162C                 movsx   ecx, dl
.text:0041162F                 cmp     dword ptr [edi], 1
.text:00411632                 jz      short loc_4116AA
.text:00411634                 mov     [esp+3Ch+C], ecx ; C
.text:00411637                 mov     [esp+3Ch+Type], 1 ; Type
.text:0041163F                 call    _isctype
.text:00411644                 mov     ecx, [esp+3Ch+String]
.text:00411648                 movzx   edx, byte ptr [ecx]
.text:0041164B
.text:0041164B loc_41164B:                             ; CODE XREF: _strtoll+32D↓j
.text:0041164B                 test    eax, eax
.text:0041164D                 jz      short loc_411660
.text:0041164F                 movsx   eax, dl
.text:00411652                 sub     eax, 37h ; '7'
.text:00411655
.text:00411655 loc_411655:                             ; CODE XREF: _strtoll+2FC↓j
.text:00411655                                         ; _strtoll+303↓j
.text:00411655                 mov     ebp, eax
.text:00411657                 jmp     loc_4114EF
.text:00411657 ; ---------------------------------------------------------------------------
.text:0041165C                 align 10h
.text:00411660
.text:00411660 loc_411660:                             ; CODE XREF: _strtoll+2BD↑j
.text:00411660                 mov     edi, ds:__mb_cur_max
.text:00411666                 movsx   edx, dl
.text:00411669                 cmp     dword ptr [edi], 1
.text:0041166C                 jz      short loc_411695
.text:0041166E                 mov     [esp+3Ch+Type], 2 ; Type
.text:00411676                 mov     [esp+3Ch+C], edx ; C
.text:00411679                 call    _isctype
.text:0041167E
.text:0041167E loc_41167E:                             ; CODE XREF: _strtoll+318↓j
.text:0041167E                 test    eax, eax
.text:00411680                 jz      short loc_41168E
.text:00411682                 mov     ecx, [esp+3Ch+String]
.text:00411686                 movsx   eax, byte ptr [ecx]
.text:00411689                 sub     eax, 57h ; 'W'
.text:0041168C                 jmp     short loc_411655
.text:0041168E ; ---------------------------------------------------------------------------
.text:0041168E
.text:0041168E loc_41168E:                             ; CODE XREF: _strtoll+2F0↑j
.text:0041168E                 mov     eax, 0FFFFFFFFh
.text:00411693                 jmp     short loc_411655
.text:00411695 ; ---------------------------------------------------------------------------
.text:00411695
.text:00411695 loc_411695:                             ; CODE XREF: _strtoll+2DC↑j
.text:00411695                 mov     ebx, ds:_pctype
.text:0041169B                 mov     ebp, [ebx]
.text:0041169D                 movzx   esi, word ptr [ebp+edx*2+0]
.text:004116A2                 and     esi, 2
.text:004116A5                 movzx   eax, si
.text:004116A8                 jmp     short loc_41167E
.text:004116AA ; ---------------------------------------------------------------------------
.text:004116AA
.text:004116AA loc_4116AA:                             ; CODE XREF: _strtoll+2A2↑j
.text:004116AA                 mov     ebx, ds:_pctype
.text:004116B0                 mov     ebp, [ebx]
.text:004116B2                 movzx   esi, word ptr [ebp+ecx*2+0]
.text:004116B7                 and     esi, 1
.text:004116BA                 movzx   eax, si
.text:004116BD                 jmp     short loc_41164B
.text:004116BD ; ---------------------------------------------------------------------------
.text:004116BF                 align 10h
.text:004116C0
.text:004116C0 loc_4116C0:                             ; CODE XREF: _strtoll+134↑j
.text:004116C0                 mov     ebp, ds:_pctype
.text:004116C6                 mov     esi, [ebp+0]
.text:004116C9                 movzx   edi, word ptr [esi+ecx*2]
.text:004116CD                 and     edi, 4
.text:004116D0                 movzx   eax, di
.text:004116D3                 jmp     loc_4114E1
.text:004116D8 ; ---------------------------------------------------------------------------
.text:004116D8
.text:004116D8 loc_4116D8:                             ; CODE XREF: _strtoll+ED↑j
.text:004116D8                 mov     esi, ds:__mb_cur_max
.text:004116DE                 movsx   ecx, dl
.text:004116E1                 cmp     dword ptr [esi], 1
.text:004116E4                 jz      short loc_41175C
.text:004116E6                 mov     [esp+3Ch+C], ecx ; C
.text:004116E9                 mov     [esp+3Ch+Type], 1 ; Type
.text:004116F1                 call    _isctype
.text:004116F6                 mov     ecx, [esp+3Ch+String]
.text:004116FA                 movzx   edx, byte ptr [ecx]
.text:004116FD
.text:004116FD loc_4116FD:                             ; CODE XREF: _strtoll+3DF↓j
.text:004116FD                 test    eax, eax
.text:004116FF                 jz      short loc_41170C
.text:00411701                 movsx   eax, dl
.text:00411704                 sub     eax, 37h ; '7'
.text:00411707                 jmp     loc_411489
.text:0041170C ; ---------------------------------------------------------------------------
.text:0041170C
.text:0041170C loc_41170C:                             ; CODE XREF: _strtoll+36F↑j
.text:0041170C                 mov     esi, ds:__mb_cur_max
.text:00411712                 movsx   edx, dl
.text:00411715                 cmp     dword ptr [esi], 1
.text:00411718                 jz      short loc_411747
.text:0041171A                 mov     [esp+3Ch+Type], 2 ; Type
.text:00411722                 mov     [esp+3Ch+C], edx ; C
.text:00411725                 call    _isctype
.text:0041172A
.text:0041172A loc_41172A:                             ; CODE XREF: _strtoll+3CA↓j
.text:0041172A                 test    eax, eax
.text:0041172C                 jz      short loc_41173D
.text:0041172E                 mov     edx, [esp+3Ch+String]
.text:00411732                 movsx   eax, byte ptr [edx]
.text:00411735                 sub     eax, 57h ; 'W'
.text:00411738                 jmp     loc_411489
.text:0041173D ; ---------------------------------------------------------------------------
.text:0041173D
.text:0041173D loc_41173D:                             ; CODE XREF: _strtoll+39C↑j
.text:0041173D                 mov     eax, 0FFFFFFFFh
.text:00411742                 jmp     loc_411489
.text:00411747 ; ---------------------------------------------------------------------------
.text:00411747
.text:00411747 loc_411747:                             ; CODE XREF: _strtoll+388↑j
.text:00411747                 mov     ebx, ds:_pctype
.text:0041174D                 mov     ebp, [ebx]
.text:0041174F                 movzx   edi, word ptr [ebp+edx*2+0]
.text:00411754                 and     edi, 2
.text:00411757                 movzx   eax, di
.text:0041175A                 jmp     short loc_41172A
.text:0041175C ; ---------------------------------------------------------------------------
.text:0041175C
.text:0041175C loc_41175C:                             ; CODE XREF: _strtoll+354↑j
.text:0041175C                 mov     ebx, ds:_pctype
.text:00411762                 mov     ebp, [ebx]
.text:00411764                 movzx   edi, word ptr [ebp+ecx*2+0]
.text:00411769                 and     edi, 1
.text:0041176C                 movzx   eax, di
.text:0041176F                 jmp     short loc_4116FD
.text:00411771 ; ---------------------------------------------------------------------------
.text:00411771
.text:00411771 loc_411771:                             ; CODE XREF: _strtoll+CE↑j
.text:00411771                 mov     ebp, ds:_pctype
.text:00411777                 mov     edi, [ebp+0]
.text:0041177A                 movzx   ecx, word ptr [edi+ebx*2]
.text:0041177E                 and     ecx, 4
.text:00411781                 movzx   eax, cx
.text:00411784                 jmp     loc_41147B
.text:00411789 ; ---------------------------------------------------------------------------
.text:00411789
.text:00411789 loc_411789:                             ; CODE XREF: _strtoll+C2↑j
.text:00411789                 cmp     dl, 30h ; '0'
.text:0041178C                 jnz     loc_411458
.text:00411792                 mov     ebx, [esp+3Ch+String]
.text:00411796                 movzx   eax, byte ptr [ebx+1]
.text:0041179A                 cmp     al, 58h ; 'X'
.text:0041179C                 jz      short loc_4117A6
.text:0041179E                 cmp     al, 78h ; 'x'
.text:004117A0                 jnz     loc_411458
.text:004117A6
.text:004117A6 loc_4117A6:                             ; CODE XREF: _strtoll+40C↑j
.text:004117A6                 add     [esp+3Ch+String], 2
.text:004117AB                 mov     esi, [esp+3Ch+String]
.text:004117AF                 movzx   edx, byte ptr [esi]
.text:004117B2                 jmp     loc_411458
.text:004117B7 ; ---------------------------------------------------------------------------
.text:004117B7
.text:004117B7 loc_4117B7:                             ; CODE XREF: _strtoll+AF↑j
.text:004117B7                 mov     ebp, [esp+3Ch+String]
.text:004117BB                 movzx   eax, byte ptr [ebp+1]
.text:004117BF                 cmp     al, 58h ; 'X'
.text:004117C1                 jz      short loc_4117D3
.text:004117C3                 mov     [esp+3Ch+Radix], 8
.text:004117CB                 cmp     al, 78h ; 'x'
.text:004117CD                 jnz     loc_41144D
.text:004117D3
.text:004117D3 loc_4117D3:                             ; CODE XREF: _strtoll+431↑j
.text:004117D3                 mov     [esp+3Ch+Radix], 10h
.text:004117DB                 jmp     loc_41144D
.text:004117E0 ; ---------------------------------------------------------------------------
.text:004117E0
.text:004117E0 loc_4117E0:                             ; CODE XREF: _strtoll+95↑j
.text:004117E0                                         ; _strtoll+9E↑j
.text:004117E0                 inc     [esp+3Ch+String]
.text:004117E4                 mov     esi, [esp+3Ch+String]
.text:004117E8                 movzx   edx, byte ptr [esi]
.text:004117EB                 jmp     loc_411434
.text:004117F0 ; ---------------------------------------------------------------------------
.text:004117F0
.text:004117F0 loc_4117F0:                             ; CODE XREF: _strtoll+5A↑j
.text:004117F0                 mov     ebp, ds:_pctype
.text:004117F6                 mov     edi, [ebp+0]
.text:004117F9                 movzx   ebx, word ptr [edi+edx*2]
.text:004117FD                 and     ebx, 8
.text:00411800                 movzx   eax, bx
.text:00411803                 jmp     loc_411406
.text:00411803 _strtoll        endp
.text:00411803
.text:00411803 ; ---------------------------------------------------------------------------
.text:00411808                 align 10h
.text:00411810                 jmp     ds:__set_app_type
.text:00411810 ; ---------------------------------------------------------------------------
.text:00411816                 align 10h
.text:00411820
.text:00411820 ; =============== S U B R O U T I N E =======================================
.text:00411820
.text:00411820 ; Attributes: thunk
.text:00411820
.text:00411820 ; void __cdecl cexit()
.text:00411820 _cexit          proc near               ; CODE XREF: .text:0040116C↑p
.text:00411820                 jmp     ds:__imp__cexit
.text:00411820 _cexit          endp
.text:00411820
.text:00411820 ; ---------------------------------------------------------------------------
.text:00411826                 align 10h
.text:00411830
.text:00411830 ; =============== S U B R O U T I N E =======================================
.text:00411830
.text:00411830 ; Attributes: thunk
.text:00411830
.text:00411830 ; char ***__cdecl _p__environ()
.text:00411830 __p__environ    proc near               ; CODE XREF: sub_401080+C7↑p
.text:00411830                 jmp     ds:__imp___p__environ
.text:00411830 __p__environ    endp
.text:00411830
.text:00411830 ; ---------------------------------------------------------------------------
.text:00411836                 align 10h
.text:00411840
.text:00411840 ; =============== S U B R O U T I N E =======================================
.text:00411840
.text:00411840 ; Attributes: thunk
.text:00411840
.text:00411840 ; _crt_signal_t __cdecl signal(int Signal, _crt_signal_t Function)
.text:00411840 signal          proc near               ; CODE XREF: TopLevelExceptionFilter+4D↑p
.text:00411840                                         ; TopLevelExceptionFilter+88↑p ...
.text:00411840
.text:00411840 Signal          = dword ptr  4
.text:00411840 Function        = dword ptr  8
.text:00411840
.text:00411840                 jmp     ds:__imp_signal
.text:00411840 signal          endp
.text:00411840
.text:00411840 ; ---------------------------------------------------------------------------
.text:00411846                 align 10h
.text:00411850
.text:00411850 ; =============== S U B R O U T I N E =======================================
.text:00411850
.text:00411850 ; Attributes: thunk
.text:00411850
.text:00411850 ; int *__cdecl _p__fmode()
.text:00411850 __p__fmode      proc near               ; CODE XREF: sub_401080:loc_401135↑p
.text:00411850                 jmp     ds:__imp___p__fmode
.text:00411850 __p__fmode      endp
.text:00411850
.text:00411850 ; ---------------------------------------------------------------------------
.text:00411856                 align 10h
.text:00411860
.text:00411860 ; =============== S U B R O U T I N E =======================================
.text:00411860
.text:00411860 ; Attributes: thunk
.text:00411860
.text:00411860 ; int __cdecl setmode(int FileHandle, int Mode)
.text:00411860 _setmode        proc near               ; CODE XREF: sub_401080+70↑p
.text:00411860                                         ; sub_401080+90↑p ...
.text:00411860
.text:00411860 FileHandle      = dword ptr  4
.text:00411860 Mode            = dword ptr  8
.text:00411860
.text:00411860                 jmp     ds:__imp__setmode
.text:00411860 _setmode        endp
.text:00411860
.text:00411860 ; ---------------------------------------------------------------------------
.text:00411866                 align 10h
.text:00411870
.text:00411870 ; =============== S U B R O U T I N E =======================================
.text:00411870
.text:00411870 ; Attributes: thunk
.text:00411870
.text:00411870 __getmainargs   proc near               ; CODE XREF: sub_401080+49↑p
.text:00411870                 jmp     ds:__imp___getmainargs
.text:00411870 __getmainargs   endp
.text:00411870
.text:00411870 ; ---------------------------------------------------------------------------
.text:00411876                 align 10h
.text:00411880
.text:00411880 ; =============== S U B R O U T I N E =======================================
.text:00411880
.text:00411880 ; Attributes: thunk
.text:00411880
.text:00411880 ; int __cdecl fputs(const char *Buffer, FILE *Stream)
.text:00411880 fputs           proc near               ; CODE XREF: sub_4025E0+7C↑p
.text:00411880                                         ; sub_4025E0+9E↑p ...
.text:00411880
.text:00411880 Buffer          = dword ptr  4
.text:00411880 Stream          = dword ptr  8
.text:00411880
.text:00411880                 jmp     ds:__imp_fputs
.text:00411880 fputs           endp
.text:00411880
.text:00411880 ; ---------------------------------------------------------------------------
.text:00411886                 align 10h
.text:00411890
.text:00411890 ; =============== S U B R O U T I N E =======================================
.text:00411890
.text:00411890 ; Attributes: thunk
.text:00411890
.text:00411890 ; int printf(const char *const Format, ...)
.text:00411890 printf          proc near               ; CODE XREF: sub_4025E0+5A↑p
.text:00411890                                         ; sub_4025E0+187↑p
.text:00411890
.text:00411890 Format          = dword ptr  4
.text:00411890
.text:00411890                 jmp     ds:__imp_printf
.text:00411890 printf          endp
.text:00411890
.text:00411890 ; ---------------------------------------------------------------------------
.text:00411896                 align 10h
.text:004118A0
.text:004118A0 ; =============== S U B R O U T I N E =======================================
.text:004118A0
.text:004118A0 ; Attributes: thunk
.text:004118A0
.text:004118A0 ; char *__cdecl setlocale(int Category, const char *Locale)
.text:004118A0 setlocale       proc near               ; CODE XREF: sub_4018C0+35↑p
.text:004118A0
.text:004118A0 Category        = dword ptr  4
.text:004118A0 Locale          = dword ptr  8
.text:004118A0
.text:004118A0                 jmp     ds:__imp_setlocale
.text:004118A0 setlocale       endp
.text:004118A0
.text:004118A0 ; ---------------------------------------------------------------------------
.text:004118A6                 align 10h
.text:004118B0
.text:004118B0 ; =============== S U B R O U T I N E =======================================
.text:004118B0
.text:004118B0 ; Attributes: thunk
.text:004118B0
.text:004118B0 ; char *__cdecl strncpy(char *Destination, const char *Source, size_t Count)
.text:004118B0 strncpy         proc near               ; CODE XREF: sub_403D90+C3↑p
.text:004118B0
.text:004118B0 Destination     = dword ptr  4
.text:004118B0 Source          = dword ptr  8
.text:004118B0 Count           = dword ptr  0Ch
.text:004118B0
.text:004118B0                 jmp     ds:__imp_strncpy
.text:004118B0 strncpy         endp
.text:004118B0
.text:004118B0 ; ---------------------------------------------------------------------------
.text:004118B6                 align 10h
.text:004118C0
.text:004118C0 ; =============== S U B R O U T I N E =======================================
.text:004118C0
.text:004118C0 ; Attributes: thunk
.text:004118C0
.text:004118C0 ; size_t __cdecl fwrite(const void *Buffer, size_t ElementSize, size_t ElementCount, FILE *Stream)
.text:004118C0 fwrite          proc near               ; CODE XREF: sub_401740+29↑p
.text:004118C0
.text:004118C0 Buffer          = dword ptr  4
.text:004118C0 ElementSize     = dword ptr  8
.text:004118C0 ElementCount    = dword ptr  0Ch
.text:004118C0 Stream          = dword ptr  10h
.text:004118C0
.text:004118C0                 jmp     ds:__imp_fwrite
.text:004118C0 fwrite          endp
.text:004118C0
.text:004118C0 ; ---------------------------------------------------------------------------
.text:004118C6                 align 10h
.text:004118D0
.text:004118D0 ; =============== S U B R O U T I N E =======================================
.text:004118D0
.text:004118D0 ; Attributes: thunk
.text:004118D0
.text:004118D0 ; int __cdecl fclose(FILE *Stream)
.text:004118D0 fclose          proc near               ; CODE XREF: sub_4015E0+1D↑p
.text:004118D0                                         ; sub_40C2D0+27↑p
.text:004118D0
.text:004118D0 Stream          = dword ptr  4
.text:004118D0
.text:004118D0                 jmp     ds:__imp_fclose
.text:004118D0 fclose          endp
.text:004118D0
.text:004118D0 ; ---------------------------------------------------------------------------
.text:004118D6                 align 10h
.text:004118E0
.text:004118E0 ; =============== S U B R O U T I N E =======================================
.text:004118E0
.text:004118E0 ; Attributes: thunk
.text:004118E0
.text:004118E0 ; size_t __cdecl strlen(const char *Str)
.text:004118E0 strlen          proc near               ; CODE XREF: sub_401390+39↑p
.text:004118E0                                         ; sub_401390+B9↑p ...
.text:004118E0
.text:004118E0 Str             = dword ptr  4
.text:004118E0
.text:004118E0                 jmp     ds:__imp_strlen
.text:004118E0 strlen          endp
.text:004118E0
.text:004118E0 ; ---------------------------------------------------------------------------
.text:004118E6                 align 10h
.text:004118F0
.text:004118F0 ; =============== S U B R O U T I N E =======================================
.text:004118F0
.text:004118F0 ; Attributes: thunk
.text:004118F0
.text:004118F0 ; int sprintf(char *const Buffer, const char *const Format, ...)
.text:004118F0 sprintf         proc near               ; CODE XREF: sub_401390+57↑p
.text:004118F0                                         ; sub_401390+DF↑p ...
.text:004118F0
.text:004118F0 Buffer          = dword ptr  4
.text:004118F0 Format          = dword ptr  8
.text:004118F0
.text:004118F0                 jmp     ds:__imp_sprintf
.text:004118F0 sprintf         endp
.text:004118F0
.text:004118F0 ; ---------------------------------------------------------------------------
.text:004118F6                 align 10h
.text:00411900
.text:00411900 ; =============== S U B R O U T I N E =======================================
.text:00411900
.text:00411900 ; Attributes: thunk
.text:00411900
.text:00411900 ; char *__cdecl strcpy(char *Destination, const char *Source)
.text:00411900 strcpy          proc near               ; CODE XREF: sub_401390+1D↑p
.text:00411900                                         ; sub_4014C0+43↑p
.text:00411900
.text:00411900 Destination     = dword ptr  4
.text:00411900 Source          = dword ptr  8
.text:00411900
.text:00411900                 jmp     ds:__imp_strcpy
.text:00411900 strcpy          endp
.text:00411900
.text:00411900 ; ---------------------------------------------------------------------------
.text:00411906                 align 10h
.text:00411910
.text:00411910 ; =============== S U B R O U T I N E =======================================
.text:00411910
.text:00411910 ; Attributes: thunk
.text:00411910
.text:00411910 ; int __cdecl fputc(int Character, FILE *Stream)
.text:00411910 fputc           proc near               ; CODE XREF: sub_4018C0+602↑p
.text:00411910                                         ; sub_402BC0+379↑p ...
.text:00411910
.text:00411910 Character       = dword ptr  4
.text:00411910 Stream          = dword ptr  8
.text:00411910
.text:00411910                 jmp     ds:__imp_fputc
.text:00411910 fputc           endp
.text:00411910
.text:00411910 ; ---------------------------------------------------------------------------
.text:00411916                 align 10h
.text:00411920
.text:00411920 ; =============== S U B R O U T I N E =======================================
.text:00411920
.text:00411920 ; Attributes: thunk
.text:00411920
.text:00411920 ; int fprintf(FILE *const Stream, const char *const Format, ...)
.text:00411920 fprintf         proc near               ; CODE XREF: sub_4015E0+8C↑p
.text:00411920                                         ; sub_4018C0+59E↑p ...
.text:00411920
.text:00411920 Stream          = dword ptr  4
.text:00411920 Format          = dword ptr  8
.text:00411920
.text:00411920                 jmp     ds:__imp_fprintf
.text:00411920 fprintf         endp
.text:00411920
.text:00411920 ; ---------------------------------------------------------------------------
.text:00411926                 align 10h
.text:00411930
.text:00411930 ; =============== S U B R O U T I N E =======================================
.text:00411930
.text:00411930 ; Attributes: thunk
.text:00411930
.text:00411930 ; void *__cdecl memcpy(void *, const void *Src, size_t Size)
.text:00411930 memcpy          proc near               ; CODE XREF: sub_402820+CA↑p
.text:00411930                                         ; sub_4042E0+10BA↑p ...
.text:00411930
.text:00411930 Src             = dword ptr  8
.text:00411930 Size            = dword ptr  0Ch
.text:00411930
.text:00411930                 jmp     ds:__imp_memcpy
.text:00411930 memcpy          endp
.text:00411930
.text:00411930 ; ---------------------------------------------------------------------------
.text:00411936                 align 10h
.text:00411940
.text:00411940 ; =============== S U B R O U T I N E =======================================
.text:00411940
.text:00411940 ; Attributes: thunk
.text:00411940
.text:00411940 ; void __cdecl free(void *Block)
.text:00411940 free            proc near               ; CODE XREF: sub_402820+105↑p
.text:00411940                                         ; sub_4029F0+BD↑p ...
.text:00411940
.text:00411940 Block           = dword ptr  4
.text:00411940
.text:00411940                 jmp     ds:__imp_free
.text:00411940 free            endp
.text:00411940
.text:00411940 ; ---------------------------------------------------------------------------
.text:00411946                 align 10h
.text:00411950
.text:00411950 ; =============== S U B R O U T I N E =======================================
.text:00411950
.text:00411950 ; Attributes: thunk
.text:00411950
.text:00411950 ; void *__cdecl memchr(const void *Buf, int Val, size_t MaxCount)
.text:00411950 memchr          proc near               ; CODE XREF: sub_403A90+43↑p
.text:00411950
.text:00411950 Buf             = dword ptr  4
.text:00411950 Val             = dword ptr  8
.text:00411950 MaxCount        = dword ptr  0Ch
.text:00411950
.text:00411950                 jmp     ds:__imp_memchr
.text:00411950 memchr          endp
.text:00411950
.text:00411950 ; ---------------------------------------------------------------------------
.text:00411956                 align 10h
.text:00411960
.text:00411960 ; =============== S U B R O U T I N E =======================================
.text:00411960
.text:00411960 ; Attributes: thunk
.text:00411960
.text:00411960 ; int *__cdecl errno()
.text:00411960 _errno          proc near               ; CODE XREF: sub_401390+82↑p
.text:00411960                                         ; sub_4014C0:loc_401560↑p ...
.text:00411960                 jmp     ds:__imp__errno
.text:00411960 _errno          endp
.text:00411960
.text:00411960 ; ---------------------------------------------------------------------------
.text:00411966                 align 10h
.text:00411970
.text:00411970 ; =============== S U B R O U T I N E =======================================
.text:00411970
.text:00411970 ; Attributes: thunk
.text:00411970
.text:00411970 ; int __cdecl raise(int Signal)
.text:00411970 raise           proc near               ; CODE XREF: Function+3B↑j
.text:00411970
.text:00411970 Signal          = dword ptr  4
.text:00411970
.text:00411970                 jmp     ds:__imp_raise
.text:00411970 raise           endp
.text:00411970
.text:00411970 ; ---------------------------------------------------------------------------
.text:00411976                 align 10h
.text:00411980
.text:00411980 ; =============== S U B R O U T I N E =======================================
.text:00411980
.text:00411980 ; Attributes: noreturn thunk
.text:00411980
.text:00411980 ; void __cdecl __noreturn exit(int Code)
.text:00411980 exit            proc near               ; CODE XREF: sub_401390+11C↑p
.text:00411980                                         ; sub_4015E0+129↑p ...
.text:00411980
.text:00411980 Code            = dword ptr  4
.text:00411980
.text:00411980                 jmp     ds:__imp_exit
.text:00411980 exit            endp
.text:00411980
.text:00411980 ; ---------------------------------------------------------------------------
.text:00411986                 align 10h
.text:00411990
.text:00411990 ; =============== S U B R O U T I N E =======================================
.text:00411990
.text:00411990 ; Attributes: thunk
.text:00411990
.text:00411990 ; int __cdecl isctype(int C, int Type)
.text:00411990 _isctype        proc near               ; CODE XREF: sub_403750+15E↑p
.text:00411990                                         ; .text:00406D59↑p ...
.text:00411990
.text:00411990 C               = dword ptr  4
.text:00411990 Type            = dword ptr  8
.text:00411990
.text:00411990                 jmp     ds:__imp__isctype
.text:00411990 _isctype        endp
.text:00411990
.text:00411990 ; ---------------------------------------------------------------------------
.text:00411996                 align 10h
.text:004119A0
.text:004119A0 ; =============== S U B R O U T I N E =======================================
.text:004119A0
.text:004119A0 ; Attributes: thunk
.text:004119A0
.text:004119A0 ; char *__cdecl strrchr(const char *Str, int Ch)
.text:004119A0 strrchr         proc near               ; CODE XREF: sub_403D90+22↑p
.text:004119A0
.text:004119A0 Str             = dword ptr  4
.text:004119A0
.text:004119A0                 jmp     ds:__imp_strrchr
.text:004119A0 strrchr         endp
.text:004119A0
.text:004119A0 ; ---------------------------------------------------------------------------
.text:004119A6                 align 10h
.text:004119B0
.text:004119B0 ; =============== S U B R O U T I N E =======================================
.text:004119B0
.text:004119B0 ; Attributes: thunk
.text:004119B0
.text:004119B0 ; FILE *__cdecl fopen(const char *FileName, const char *Mode)
.text:004119B0 fopen           proc near               ; CODE XREF: sub_401390+73↑p
.text:004119B0
.text:004119B0 FileName        = dword ptr  4
.text:004119B0 Mode            = dword ptr  8
.text:004119B0
.text:004119B0                 jmp     ds:__imp_fopen
.text:004119B0 fopen           endp
.text:004119B0
.text:004119B0 ; ---------------------------------------------------------------------------
.text:004119B6                 align 10h
.text:004119C0
.text:004119C0 ; =============== S U B R O U T I N E =======================================
.text:004119C0
.text:004119C0 ; Attributes: thunk
.text:004119C0
.text:004119C0 ; int __cdecl tolower(int C)
.text:004119C0 tolower         proc near               ; CODE XREF: .text:00406D78↑p
.text:004119C0
.text:004119C0 C               = dword ptr  4
.text:004119C0
.text:004119C0                 jmp     ds:__imp_tolower
.text:004119C0 tolower         endp
.text:004119C0
.text:004119C0 ; ---------------------------------------------------------------------------
.text:004119C6                 align 10h
.text:004119D0
.text:004119D0 ; =============== S U B R O U T I N E =======================================
.text:004119D0
.text:004119D0 ; Attributes: noreturn thunk
.text:004119D0
.text:004119D0 ; void __cdecl __noreturn abort()
.text:004119D0 abort           proc near               ; CODE XREF: .text:loc_407158↑p
.text:004119D0                                         ; sub_40A800:def_40A89A↑p ...
.text:004119D0                 jmp     ds:__imp_abort
.text:004119D0 abort           endp
.text:004119D0
.text:004119D0 ; ---------------------------------------------------------------------------
.text:004119D6                 align 10h
.text:004119E0
.text:004119E0 ; =============== S U B R O U T I N E =======================================
.text:004119E0
.text:004119E0 ; Attributes: thunk
.text:004119E0
.text:004119E0 ; void *__cdecl memset(void *, int Val, size_t Size)
.text:004119E0 memset          proc near               ; CODE XREF: sub_4071F0+330A↑p
.text:004119E0                                         ; sub_40A800+66↑p ...
.text:004119E0
.text:004119E0 Val             = dword ptr  8
.text:004119E0 Size            = dword ptr  0Ch
.text:004119E0
.text:004119E0                 jmp     ds:__imp_memset
.text:004119E0 memset          endp
.text:004119E0
.text:004119E0 ; ---------------------------------------------------------------------------
.text:004119E6                 align 10h
.text:004119F0
.text:004119F0 ; =============== S U B R O U T I N E =======================================
.text:004119F0
.text:004119F0 ; Attributes: thunk
.text:004119F0
.text:004119F0 ; void *__cdecl realloc(void *Block, size_t Size)
.text:004119F0 realloc         proc near               ; CODE XREF: sub_4042E0+7BE↑p
.text:004119F0                                         ; sub_4042E0+7DC↑p ...
.text:004119F0
.text:004119F0 Block           = dword ptr  4
.text:004119F0 Size            = dword ptr  8
.text:004119F0
.text:004119F0                 jmp     ds:__imp_realloc
.text:004119F0 realloc         endp
.text:004119F0
.text:004119F0 ; ---------------------------------------------------------------------------
.text:004119F6                 align 10h
.text:00411A00
.text:00411A00 ; =============== S U B R O U T I N E =======================================
.text:00411A00
.text:00411A00 ; Attributes: thunk
.text:00411A00
.text:00411A00 ; void *__cdecl malloc(size_t Size)
.text:00411A00 malloc          proc near               ; CODE XREF: sub_4042E0+74↑p
.text:00411A00                                         ; sub_4042E0+555↑p ...
.text:00411A00
.text:00411A00 Size            = dword ptr  4
.text:00411A00
.text:00411A00                 jmp     ds:__imp_malloc
.text:00411A00 malloc          endp
.text:00411A00
.text:00411A00 ; ---------------------------------------------------------------------------
.text:00411A06                 align 10h
.text:00411A10
.text:00411A10 ; =============== S U B R O U T I N E =======================================
.text:00411A10
.text:00411A10 ; Attributes: thunk
.text:00411A10
.text:00411A10 ; int __cdecl iswctype(wint_t C, wctype_t Type)
.text:00411A10 iswctype        proc near               ; CODE XREF: sub_4071F0+1F86↑p
.text:00411A10                                         ; sub_40EA10+78B↑p
.text:00411A10
.text:00411A10 C               = word ptr  4
.text:00411A10 Type            = word ptr  8
.text:00411A10
.text:00411A10                 jmp     ds:__imp_iswctype
.text:00411A10 iswctype        endp
.text:00411A10
.text:00411A10 ; ---------------------------------------------------------------------------
.text:00411A16                 align 10h
.text:00411A20
.text:00411A20 ; =============== S U B R O U T I N E =======================================
.text:00411A20
.text:00411A20 ; Attributes: thunk
.text:00411A20
.text:00411A20 ; int __cdecl strncmp(const char *Str1, const char *Str2, size_t MaxCount)
.text:00411A20 strncmp         proc near               ; CODE XREF: sub_40AD60+30F↑p
.text:00411A20                                         ; sub_40AD60+769↑p
.text:00411A20
.text:00411A20 Str1            = dword ptr  4
.text:00411A20 Str2            = dword ptr  8
.text:00411A20 MaxCount        = dword ptr  0Ch
.text:00411A20
.text:00411A20                 jmp     ds:__imp_strncmp
.text:00411A20 strncmp         endp
.text:00411A20
.text:00411A20 ; ---------------------------------------------------------------------------
.text:00411A26                 align 10h
.text:00411A30
.text:00411A30 ; =============== S U B R O U T I N E =======================================
.text:00411A30
.text:00411A30 ; Attributes: thunk
.text:00411A30
.text:00411A30 ; char *__cdecl getenv(const char *VarName)
.text:00411A30 getenv          proc near               ; CODE XREF: sub_40AD60+C27↑p
.text:00411A30
.text:00411A30 VarName         = dword ptr  4
.text:00411A30
.text:00411A30                 jmp     ds:__imp_getenv
.text:00411A30 getenv          endp
.text:00411A30
.text:00411A30 ; ---------------------------------------------------------------------------
.text:00411A36                 align 10h
.text:00411A40
.text:00411A40 ; =============== S U B R O U T I N E =======================================
.text:00411A40
.text:00411A40 ; Attributes: thunk
.text:00411A40
.text:00411A40 ; char *__cdecl strchr(const char *Str, int Val)
.text:00411A40 strchr          proc near               ; CODE XREF: sub_40AD60+539↑p
.text:00411A40                                         ; sub_40AD60+60A↑p ...
.text:00411A40
.text:00411A40 Str             = dword ptr  4
.text:00411A40 Val             = dword ptr  8
.text:00411A40
.text:00411A40                 jmp     ds:__imp_strchr
.text:00411A40 strchr          endp
.text:00411A40
.text:00411A40 ; ---------------------------------------------------------------------------
.text:00411A46                 align 10h
.text:00411A50
.text:00411A50 ; =============== S U B R O U T I N E =======================================
.text:00411A50
.text:00411A50 ; Attributes: thunk
.text:00411A50
.text:00411A50 ; int __cdecl vfprintf(FILE *const Stream, const char *const Format, va_list ArgList)
.text:00411A50 vfprintf        proc near               ; CODE XREF: sub_40BF50+C1↑p
.text:00411A50                                         ; sub_40FD70+49↑p ...
.text:00411A50
.text:00411A50 Stream          = dword ptr  4
.text:00411A50 Format          = dword ptr  8
.text:00411A50 ArgList         = dword ptr  0Ch
.text:00411A50
.text:00411A50                 jmp     ds:__imp_vfprintf
.text:00411A50 vfprintf        endp
.text:00411A50
.text:00411A50 ; ---------------------------------------------------------------------------
.text:00411A56                 align 10h
.text:00411A60
.text:00411A60 ; =============== S U B R O U T I N E =======================================
.text:00411A60
.text:00411A60 ; Attributes: thunk
.text:00411A60
.text:00411A60 ; int __cdecl flsbuf(int Ch, FILE *File)
.text:00411A60 _flsbuf         proc near               ; CODE XREF: sub_40BF50+128↑p
.text:00411A60                                         ; sub_40BF50+13A↑p ...
.text:00411A60
.text:00411A60 File            = dword ptr  8
.text:00411A60
.text:00411A60                 jmp     ds:__imp__flsbuf
.text:00411A60 _flsbuf         endp
.text:00411A60
.text:00411A60 ; ---------------------------------------------------------------------------
.text:00411A66                 align 10h
.text:00411A70
.text:00411A70 ; =============== S U B R O U T I N E =======================================
.text:00411A70
.text:00411A70 ; Attributes: thunk
.text:00411A70
.text:00411A70 ; unsigned int __cdecl strtoul(const char *String, char **EndPtr, int Radix)
.text:00411A70 strtoul         proc near               ; CODE XREF: sub_40C420+94↑p
.text:00411A70
.text:00411A70 String          = dword ptr  4
.text:00411A70 EndPtr          = dword ptr  8
.text:00411A70 Radix           = dword ptr  0Ch
.text:00411A70
.text:00411A70                 jmp     ds:__imp_strtoul
.text:00411A70 strtoul         endp
.text:00411A70
.text:00411A70 ; ---------------------------------------------------------------------------
.text:00411A76                 align 10h
.text:00411A80
.text:00411A80 ; =============== S U B R O U T I N E =======================================
.text:00411A80
.text:00411A80 ; Attributes: noreturn thunk
.text:00411A80
.text:00411A80 _assert         proc near               ; CODE XREF: sub_40C420+553↑p
.text:00411A80                                         ; sub_40CA00+C88↑p ...
.text:00411A80                 jmp     ds:__imp__assert
.text:00411A80 _assert         endp
.text:00411A80
.text:00411A80 ; ---------------------------------------------------------------------------
.text:00411A86                 align 10h
.text:00411A90
.text:00411A90 ; =============== S U B R O U T I N E =======================================
.text:00411A90
.text:00411A90 ; Attributes: thunk
.text:00411A90
.text:00411A90 ; void *__cdecl calloc(size_t Count, size_t Size)
.text:00411A90 calloc          proc near               ; CODE XREF: .text:0040E773↑p
.text:00411A90
.text:00411A90 Count           = dword ptr  4
.text:00411A90 Size            = dword ptr  8
.text:00411A90
.text:00411A90                 jmp     ds:__imp_calloc
.text:00411A90 calloc          endp
.text:00411A90
.text:00411A90 ; ---------------------------------------------------------------------------
.text:00411A96                 align 10h
.text:00411AA0
.text:00411AA0 ; =============== S U B R O U T I N E =======================================
.text:00411AA0
.text:00411AA0 ; Attributes: thunk
.text:00411AA0
.text:00411AA0 ; int __cdecl strcmp(const char *Str1, const char *Str2)
.text:00411AA0 strcmp          proc near               ; CODE XREF: sub_40FE74+180↑p
.text:00411AA0
.text:00411AA0 Str1            = dword ptr  4
.text:00411AA0 Str2            = dword ptr  8
.text:00411AA0
.text:00411AA0                 jmp     ds:__imp_strcmp
.text:00411AA0 strcmp          endp
.text:00411AA0
.text:00411AA0 ; ---------------------------------------------------------------------------
.text:00411AA6                 align 10h
.text:00411AB0
.text:00411AB0 ; =============== S U B R O U T I N E =======================================
.text:00411AB0
.text:00411AB0 ; Attributes: thunk
.text:00411AB0
.text:00411AB0 ; int __cdecl fflush(FILE *Stream)
.text:00411AB0 fflush          proc near               ; CODE XREF: sub_40FD70+19↑p
.text:00411AB0                                         ; sub_40FD70+81↑p ...
.text:00411AB0
.text:00411AB0 Stream          = dword ptr  4
.text:00411AB0
.text:00411AB0                 jmp     ds:__imp_fflush
.text:00411AB0 fflush          endp
.text:00411AB0
.text:00411AB0 ; ---------------------------------------------------------------------------
.text:00411AB6                 align 10h
.text:00411AC0
.text:00411AC0 ; =============== S U B R O U T I N E =======================================
.text:00411AC0
.text:00411AC0 ; Attributes: thunk
.text:00411AC0
.text:00411AC0 ; char *__cdecl strerror(int ErrorMessage)
.text:00411AC0 strerror        proc near               ; CODE XREF: sub_40FD70+A5↑p
.text:00411AC0                                         ; sub_40FE74+10F↑p
.text:00411AC0
.text:00411AC0 ErrorMessage    = dword ptr  4
.text:00411AC0
.text:00411AC0                 jmp     ds:__imp_strerror
.text:00411AC0 strerror        endp
.text:00411AC0
.text:00411AC0 ; ---------------------------------------------------------------------------
.text:00411AC6                 align 10h
.text:00411AD0
.text:00411AD0 ; =============== S U B R O U T I N E =======================================
.text:00411AD0
.text:00411AD0 ; Attributes: thunk
.text:00411AD0
.text:00411AD0 ; int __cdecl chmod(const char *FileName, int AccessMode)
.text:00411AD0 _chmod          proc near               ; CODE XREF: sub_410010+9B↑p
.text:00411AD0
.text:00411AD0 FileName        = dword ptr  4
.text:00411AD0 AccessMode      = dword ptr  8
.text:00411AD0
.text:00411AD0                 jmp     ds:__imp__chmod
.text:00411AD0 _chmod          endp
.text:00411AD0
.text:00411AD0 ; ---------------------------------------------------------------------------
.text:00411AD6                 align 10h
.text:00411AE0
.text:00411AE0 ; =============== S U B R O U T I N E =======================================
.text:00411AE0
.text:00411AE0 ; Attributes: thunk
.text:00411AE0
.text:00411AE0 ; LPTOP_LEVEL_EXCEPTION_FILTER __stdcall SetUnhandledExceptionFilter(LPTOP_LEVEL_EXCEPTION_FILTER lpTopLevelExceptionFilter)
.text:00411AE0 SetUnhandledExceptionFilter proc near   ; CODE XREF: sub_401080+E↑p
.text:00411AE0
.text:00411AE0 lpTopLevelExceptionFilter= dword ptr  4
.text:00411AE0
.text:00411AE0                 jmp     ds:__imp_SetUnhandledExceptionFilter
.text:00411AE0 SetUnhandledExceptionFilter endp
.text:00411AE0
.text:00411AE0 ; ---------------------------------------------------------------------------
.text:00411AE6                 align 10h
.text:00411AF0
.text:00411AF0 ; =============== S U B R O U T I N E =======================================
.text:00411AF0
.text:00411AF0 ; Attributes: noreturn thunk
.text:00411AF0
.text:00411AF0 ; void __stdcall __noreturn ExitProcess(UINT uExitCode)
.text:00411AF0 ExitProcess     proc near               ; CODE XREF: .text:00401174↑p
.text:00411AF0
.text:00411AF0 uExitCode       = dword ptr  4
.text:00411AF0
.text:00411AF0                 jmp     ds:__imp_ExitProcess
.text:00411AF0 ExitProcess     endp
.text:00411AF0
.text:00411AF0 ; ---------------------------------------------------------------------------
.text:00411AF6                 align 10h
.text:00411B00
.text:00411B00 ; =============== S U B R O U T I N E =======================================
.text:00411B00
.text:00411B00 ; Attributes: thunk
.text:00411B00
.text:00411B00 ; BOOL __stdcall DeleteFileA(LPCSTR lpFileName)
.text:00411B00 DeleteFileA     proc near               ; CODE XREF: sub_410010+50↑p
.text:00411B00
.text:00411B00 lpFileName      = dword ptr  4
.text:00411B00
.text:00411B00                 jmp     ds:__imp_DeleteFileA
.text:00411B00 DeleteFileA     endp
.text:00411B00
.text:00411B00 ; ---------------------------------------------------------------------------
.text:00411B06                 align 10h
.text:00411B10
.text:00411B10 ; =============== S U B R O U T I N E =======================================
.text:00411B10
.text:00411B10 ; Attributes: thunk
.text:00411B10
.text:00411B10 ; DWORD __stdcall GetLastError()
.text:00411B10 GetLastError    proc near               ; CODE XREF: sub_4103F0+3↑p
.text:00411B10                 jmp     ds:__imp_GetLastError
.text:00411B10 GetLastError    endp
.text:00411B10
.text:00411B10 ; ---------------------------------------------------------------------------
.text:00411B16                 align 10h
.text:00411B20
.text:00411B20 ; =============== S U B R O U T I N E =======================================
.text:00411B20
.text:00411B20 ; Attributes: thunk
.text:00411B20
.text:00411B20 ; UINT __stdcall SetErrorMode(UINT uMode)
.text:00411B20 SetErrorMode    proc near               ; CODE XREF: sub_410410+57↑p
.text:00411B20                                         ; sub_410410+78↑p
.text:00411B20
.text:00411B20 uMode           = dword ptr  4
.text:00411B20
.text:00411B20                 jmp     ds:__imp_SetErrorMode
.text:00411B20 SetErrorMode    endp
.text:00411B20
.text:00411B20 ; ---------------------------------------------------------------------------
.text:00411B26                 align 10h
.text:00411B30
.text:00411B30 ; =============== S U B R O U T I N E =======================================
.text:00411B30
.text:00411B30 ; Attributes: thunk
.text:00411B30
.text:00411B30 ; DWORD __stdcall GetFileAttributesA(LPCSTR lpFileName)
.text:00411B30 GetFileAttributesA proc near            ; CODE XREF: sub_410410+62↑p
.text:00411B30
.text:00411B30 lpFileName      = dword ptr  4
.text:00411B30
.text:00411B30                 jmp     ds:__imp_GetFileAttributesA
.text:00411B30 GetFileAttributesA endp
.text:00411B30
.text:00411B30 ; ---------------------------------------------------------------------------
.text:00411B36                 align 10h
.text:00411B40 dword_411B40    dd 0FFFFFFFFh           ; DATA XREF: .text:00410A19↑r
.text:00411B40                                         ; .text:loc_410A40↑r ...
.text:00411B44 dword_411B44    dd 0                    ; DATA XREF: .text:loc_410A4C↑r
.text:00411B44                                         ; sub_410A70:loc_410ABD↑r
.text:00411B48                 dd 0FFFFFFFFh
.text:00411B4C dword_411B4C    dd 2Dh dup(0)           ; DATA XREF: .data:off_4120A4↓o
.text:00411C00                 dd 100h dup(?)
.text:00411C00 _text           ends
.text:00411C00
.data:00412000 ; Section 2. (virtual address 00012000)
.data:00412000 ; Virtual size                  : 000000C0 (    192.)
.data:00412000 ; Section size in file          : 00000200 (    512.)
.data:00412000 ; Offset to raw data for section: 00011000
.data:00412000 ; Flags C0000040: Data Readable Writable
.data:00412000 ; Alignment     : default
.data:00412000 ; ===========================================================================
.data:00412000
.data:00412000 ; Segment type: Pure data
.data:00412000 ; Segment permissions: Read/Write
.data:00412000 _data           segment para public 'DATA' use32
.data:00412000                 assume cs:_data
.data:00412000                 ;org 412000h
.data:00412000 dword_412000    dd 0                    ; DATA XREF: sub_401080+1B↑o
.data:00412000                                         ; sub_401080+CC↑r
.data:00412004 dword_412004    dd 0                    ; DATA XREF: sub_401080+41↑o
.data:00412004                                         ; sub_401080+D4↑r
.data:00412008                 align 10h
.data:00412010 dword_412010    dd 2                    ; DATA XREF: sub_401390+C8↑r
.data:00412010                                         ; sub_4014C0+DD↑r ...
.data:00412014                 align 10h
.data:00412020 dword_412020    dd 0FA0h                ; DATA XREF: sub_4042E0:loc_40535B↑r
.data:00412020                                         ; sub_4042E0:loc_405509↑r ...
.data:00412024                 align 10h
.data:00412030 dword_412030    dd 1                    ; DATA XREF: sub_4018C0:loc_401B14↑r
.data:00412030                                         ; sub_4018C0+2A3↑r ...
.data:00412034 dword_412034    dd 1                    ; DATA XREF: sub_40B9C0+11↑r
.data:00412034                                         ; .text:0040BA61↑r
.data:00412038 dword_412038    dd 3Fh                  ; DATA XREF: sub_40B9C0+7D↑w
.data:00412038                                         ; .text:0040BACD↑w
.data:0041203C                 align 10h
.data:00412040 ; char *Buffer
.data:00412040 Buffer          dd offset aCopyrightC2005
.data:00412040                                         ; DATA XREF: sub_40BF50+DC↑r
.data:00412040                                         ; "Copyright (C) 2005 Free Software Founda"...
.data:00412044                 align 10h
.data:00412050 dword_412050    dd 1                    ; DATA XREF: sub_40FB50+22↑r
.data:00412050                                         ; sub_40FB50+65↑r ...
.data:00412054 dword_412054    dd 100h                 ; DATA XREF: sub_40FB50+3F↑o
.data:00412054                                         ; sub_40FB50+1A2↑r ...
.data:00412058 off_412058      dd offset unk_4132E0    ; DATA XREF: sub_40FB50+1AA↑r
.data:0041205C ; void *off_41205C
.data:0041205C off_41205C      dd offset dword_412054  ; DATA XREF: sub_40FB50+39↑r
.data:0041205C                                         ; sub_40FB50+60↑w ...
.data:00412060 ; int Code
.data:00412060 Code            dd 1                    ; DATA XREF: sub_40C2D0+6D↑r
.data:00412060                                         ; sub_40C2D0+9A↑r
.data:00412064                 align 10h
.data:00412070 dword_412070    dd 0FFFFFFFFh           ; DATA XREF: sub_401080+22↑r
.data:00412074                 align 10h
.data:00412080 ; int Mode
.data:00412080 Mode            dd 0                    ; DATA XREF: sub_401080+4E↑r
.data:00412080                                         ; sub_401080+80↑r ...
.data:00412084                 align 10h
.data:00412090 dword_412090    dd 4000h                ; DATA XREF: sub_401080+57↑w
.data:00412090                                         ; sub_401080+BA↑r
.data:00412094                 align 10h
.data:004120A0 dword_4120A0    dd 0                    ; DATA XREF: sub_410A70+9↑r
.data:004120A0                                         ; sub_410A70+1D↑w
.data:004120A4 off_4120A4      dd offset dword_411B4C  ; DATA XREF: sub_4109E0+6↑r
.data:004120A4                                         ; sub_4109E0+17↑r ...
.data:004120A8                 align 1000h
.data:004120A8 _data           ends
.data:004120A8
.bss:00413000 ; Section 3. (virtual address 00013000)
.bss:00413000 ; Virtual size                  : 000004E0 (   1248.)
.bss:00413000 ; Section size in file          : 00000000 (      0.)
.bss:00413000 ; Offset to raw data for section: 00000000
.bss:00413000 ; Flags C0000080: Bss Readable Writable
.bss:00413000 ; Alignment     : default
.bss:00413000 ; ===========================================================================
.bss:00413000
.bss:00413000 ; Segment type: Uninitialized
.bss:00413000 ; Segment permissions: Read/Write
.bss:00413000 _bss            segment para public 'BSS' use32
.bss:00413000                 assume cs:_bss
.bss:00413000                 ;org 413000h
.bss:00413000                 assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
.bss:00413000 ; int FileHandle
.bss:00413000 FileHandle      dd ?                    ; DATA XREF: sub_4018C0+2D7↑w
.bss:00413000                                         ; sub_4018C0+3DF↑r ...
.bss:00413004                 align 10h
.bss:00413010 dword_413010    dd ?                    ; DATA XREF: sub_4018C0+497↑r
.bss:00413010                                         ; sub_4018C0:loc_401EDD↑r ...
.bss:00413014                 align 10h
.bss:00413020 ; void *Src
.bss:00413020 Src             dd ?                    ; DATA XREF: sub_402820+B5↑r
.bss:00413020                                         ; sub_403A90:loc_403CAC↑w
.bss:00413024                 align 10h
.bss:00413030 ; size_t Size
.bss:00413030 Size            dd ?                    ; DATA XREF: sub_402820:loc_402840↑r
.bss:00413030                                         ; sub_402820+83↑r ...
.bss:00413034                 align 10h
.bss:00413040 dword_413040    dd ?                    ; DATA XREF: sub_402820+67↑r
.bss:00413040                                         ; sub_403A90+159↑r ...
.bss:00413044 dword_413044    dd ?                    ; DATA XREF: sub_402820+6D↑r
.bss:00413044                                         ; sub_403A90+16F↑r ...
.bss:00413048                 align 10h
.bss:00413050 dword_413050    dd ?                    ; DATA XREF: sub_4018C0+4F0↑r
.bss:00413050                                         ; sub_4029F0+2F↑r ...
.bss:00413054 dword_413054    dd ?                    ; DATA XREF: sub_4018C0+4F6↑r
.bss:00413054                                         ; sub_4029F0:loc_402A16↑r ...
.bss:00413058                 align 10h
.bss:00413060 byte_413060     db ?                    ; DATA XREF: sub_402820+B↑r
.bss:00413060                                         ; sub_402820+10A↑r ...
.bss:00413061                 align 10h
.bss:00413070 ; LPCSTR FileName
.bss:00413070 FileName        dd ?                    ; DATA XREF: sub_401390+10↑r
.bss:00413070                                         ; sub_401390+42↑r ...
.bss:00413074                 align 10h
.bss:00413080 ; char *Source
.bss:00413080 Source          dd ?                    ; DATA XREF: sub_401390+A↑r
.bss:00413080                                         ; sub_401390+30↑r ...
.bss:00413084                 align 10h
.bss:00413090 ; char *Format
.bss:00413090 Format          dd ?                    ; DATA XREF: sub_401390+22↑r
.bss:00413090                                         ; sub_401390+48↑r ...
.bss:00413094                 align 10h
.bss:004130A0 dword_4130A0    dd ?                    ; DATA XREF: sub_401390+4↑r
.bss:004130A0                                         ; sub_401390+89↑r ...
.bss:004130A4                 align 10h
.bss:004130B0 ; FILE *Stream
.bss:004130B0 Stream          dd ?                    ; DATA XREF: sub_401390+78↑w
.bss:004130B0                                         ; sub_4015E0+3↑r ...
.bss:004130B4                 align 10h
.bss:004130C0 ; LPCSTR dword_4130C0
.bss:004130C0 dword_4130C0    dd ?                    ; DATA XREF: sub_401390+6A↑w
.bss:004130C0                                         ; sub_401390+ED↑r ...
.bss:004130C4                 align 10h
.bss:004130D0 dword_4130D0    dd ?                    ; DATA XREF: sub_4029F0+3↑r
.bss:004130D0                                         ; sub_4029F0:loc_402A80↑w ...
.bss:004130D4                 align 10h
.bss:004130E0 dword_4130E0    dd ?                    ; DATA XREF: sub_403200+57↑r
.bss:004130E0                                         ; sub_403200+3AA↑o ...
.bss:004130E4                 align 10h
.bss:004130F0 dword_4130F0    dd ?                    ; DATA XREF: sub_403200+10E↑r
.bss:004130F0                                         ; sub_403200+177↑r ...
.bss:004130F4 dword_4130F4    dd ?                    ; DATA XREF: sub_403200:loc_403308↑r
.bss:004130F4                                         ; sub_403200+17D↑r ...
.bss:004130F8                 align 10h
.bss:00413100 dword_413100    dd ?                    ; DATA XREF: sub_401390+A0↑w
.bss:00413100                                         ; sub_4015E0+30↑r ...
.bss:00413104 dword_413104    dd ?                    ; DATA XREF: sub_401390+A5↑w
.bss:00413104                                         ; sub_4015E0+2A↑r ...
.bss:00413108                 align 10h
.bss:00413110 dword_413110    dd ?                    ; DATA XREF: sub_4018C0+80↑w
.bss:00413110                                         ; sub_402BC0+13A↑r ...
.bss:00413114                 align 10h
.bss:00413120 byte_413120     db ?                    ; DATA XREF: sub_4015E0:loc_401625↑r
.bss:00413120                                         ; sub_4018C0+8C↑w ...
.bss:00413121                 align 10h
.bss:00413130 byte_413130     db ?                    ; DATA XREF: sub_4014C0+5↑r
.bss:00413130                                         ; sub_4018C0+68↑w ...
.bss:00413131                 align 10h
.bss:00413140 byte_413140     db ?                    ; DATA XREF: sub_4015E0+3C↑r
.bss:00413140                                         ; sub_4018C0+230↑w
.bss:00413141                 align 10h
.bss:00413150 ; void *dword_413150
.bss:00413150 dword_413150    dd ?                    ; DATA XREF: sub_4018C0+86↑w
.bss:00413150                                         ; sub_4018C0+347↑r ...
.bss:00413154                 align 10h
.bss:00413160 dword_413160    dd ?                    ; DATA XREF: sub_4018C0+74↑w
.bss:00413160                                         ; sub_4018C0+334↑r ...
.bss:00413164                 align 20h
.bss:00413180 dword_413180    dd ?                    ; DATA XREF: sub_4071F0+AB↑r
.bss:00413180                                         ; sub_4071F0+334B↑w
.bss:00413184                 align 10h
.bss:00413190 byte_413190     db ?                    ; DATA XREF: sub_4042E0:loc_404D4C↑r
.bss:00413190                                         ; sub_4042E0:loc_404D78↑r ...
.bss:00413191                 db    ? ;
.bss:00413192                 db    ? ;
.bss:00413193                 db    ? ;
.bss:00413194                 db    ? ;
.bss:00413195                 db    ? ;
.bss:00413196                 db    ? ;
.bss:00413197                 db    ? ;
.bss:00413198                 db    ? ;
.bss:00413199                 db    ? ;
.bss:0041319A                 db    ? ;
.bss:0041319B                 db    ? ;
.bss:0041319C                 db    ? ;
.bss:0041319D                 db    ? ;
.bss:0041319E                 db    ? ;
.bss:0041319F                 db    ? ;
.bss:004131A0                 db    ? ;
.bss:004131A1                 db    ? ;
.bss:004131A2                 db    ? ;
.bss:004131A3                 db    ? ;
.bss:004131A4                 db    ? ;
.bss:004131A5                 db    ? ;
.bss:004131A6                 db    ? ;
.bss:004131A7                 db    ? ;
.bss:004131A8                 db    ? ;
.bss:004131A9                 db    ? ;
.bss:004131AA                 db    ? ;
.bss:004131AB                 db    ? ;
.bss:004131AC                 db    ? ;
.bss:004131AD                 db    ? ;
.bss:004131AE                 db    ? ;
.bss:004131AF                 db    ? ;
.bss:004131B0                 db    ? ;
.bss:004131B1                 db    ? ;
.bss:004131B2                 db    ? ;
.bss:004131B3                 db    ? ;
.bss:004131B4                 db    ? ;
.bss:004131B5                 db    ? ;
.bss:004131B6                 db    ? ;
.bss:004131B7                 db    ? ;
.bss:004131B8                 db    ? ;
.bss:004131B9                 db    ? ;
.bss:004131BA                 db    ? ;
.bss:004131BB                 db    ? ;
.bss:004131BC                 db    ? ;
.bss:004131BD                 db    ? ;
.bss:004131BE                 db    ? ;
.bss:004131BF                 db    ? ;
.bss:004131C0                 db    ? ;
.bss:004131C1                 db    ? ;
.bss:004131C2                 db    ? ;
.bss:004131C3                 db    ? ;
.bss:004131C4                 db    ? ;
.bss:004131C5                 db    ? ;
.bss:004131C6                 db    ? ;
.bss:004131C7                 db    ? ;
.bss:004131C8                 db    ? ;
.bss:004131C9                 db    ? ;
.bss:004131CA                 db    ? ;
.bss:004131CB                 db    ? ;
.bss:004131CC                 db    ? ;
.bss:004131CD                 db    ? ;
.bss:004131CE                 db    ? ;
.bss:004131CF                 db    ? ;
.bss:004131D0                 db    ? ;
.bss:004131D1                 db    ? ;
.bss:004131D2                 db    ? ;
.bss:004131D3                 db    ? ;
.bss:004131D4                 db    ? ;
.bss:004131D5                 db    ? ;
.bss:004131D6                 db    ? ;
.bss:004131D7                 db    ? ;
.bss:004131D8                 db    ? ;
.bss:004131D9                 db    ? ;
.bss:004131DA                 db    ? ;
.bss:004131DB                 db    ? ;
.bss:004131DC                 db    ? ;
.bss:004131DD                 db    ? ;
.bss:004131DE                 db    ? ;
.bss:004131DF                 db    ? ;
.bss:004131E0                 db    ? ;
.bss:004131E1                 db    ? ;
.bss:004131E2                 db    ? ;
.bss:004131E3                 db    ? ;
.bss:004131E4                 db    ? ;
.bss:004131E5                 db    ? ;
.bss:004131E6                 db    ? ;
.bss:004131E7                 db    ? ;
.bss:004131E8                 db    ? ;
.bss:004131E9                 db    ? ;
.bss:004131EA                 db    ? ;
.bss:004131EB                 db    ? ;
.bss:004131EC                 db    ? ;
.bss:004131ED                 db    ? ;
.bss:004131EE                 db    ? ;
.bss:004131EF byte_4131EF     db ?                    ; DATA XREF: sub_4071F0+333F↑w
.bss:004131F0                 db    ? ;
.bss:004131F1                 db    ? ;
.bss:004131F2                 db    ? ;
.bss:004131F3                 db    ? ;
.bss:004131F4                 db    ? ;
.bss:004131F5                 db    ? ;
.bss:004131F6                 db    ? ;
.bss:004131F7                 db    ? ;
.bss:004131F8                 db    ? ;
.bss:004131F9                 db    ? ;
.bss:004131FA                 db    ? ;
.bss:004131FB                 db    ? ;
.bss:004131FC                 db    ? ;
.bss:004131FD                 db    ? ;
.bss:004131FE                 db    ? ;
.bss:004131FF                 db    ? ;
.bss:00413200                 db    ? ;
.bss:00413201                 db    ? ;
.bss:00413202                 db    ? ;
.bss:00413203                 db    ? ;
.bss:00413204                 db    ? ;
.bss:00413205                 db    ? ;
.bss:00413206                 db    ? ;
.bss:00413207                 db    ? ;
.bss:00413208                 db    ? ;
.bss:00413209                 db    ? ;
.bss:0041320A                 db    ? ;
.bss:0041320B                 db    ? ;
.bss:0041320C                 db    ? ;
.bss:0041320D                 db    ? ;
.bss:0041320E                 db    ? ;
.bss:0041320F                 db    ? ;
.bss:00413210                 db    ? ;
.bss:00413211                 db    ? ;
.bss:00413212                 db    ? ;
.bss:00413213                 db    ? ;
.bss:00413214                 db    ? ;
.bss:00413215                 db    ? ;
.bss:00413216                 db    ? ;
.bss:00413217                 db    ? ;
.bss:00413218                 db    ? ;
.bss:00413219                 db    ? ;
.bss:0041321A                 db    ? ;
.bss:0041321B                 db    ? ;
.bss:0041321C                 db    ? ;
.bss:0041321D                 db    ? ;
.bss:0041321E                 db    ? ;
.bss:0041321F                 db    ? ;
.bss:00413220                 db    ? ;
.bss:00413221                 db    ? ;
.bss:00413222                 db    ? ;
.bss:00413223                 db    ? ;
.bss:00413224                 db    ? ;
.bss:00413225                 db    ? ;
.bss:00413226                 db    ? ;
.bss:00413227                 db    ? ;
.bss:00413228                 db    ? ;
.bss:00413229                 db    ? ;
.bss:0041322A                 db    ? ;
.bss:0041322B                 db    ? ;
.bss:0041322C                 db    ? ;
.bss:0041322D                 db    ? ;
.bss:0041322E                 db    ? ;
.bss:0041322F                 db    ? ;
.bss:00413230                 db    ? ;
.bss:00413231                 db    ? ;
.bss:00413232                 db    ? ;
.bss:00413233                 db    ? ;
.bss:00413234                 db    ? ;
.bss:00413235                 db    ? ;
.bss:00413236                 db    ? ;
.bss:00413237                 db    ? ;
.bss:00413238                 db    ? ;
.bss:00413239                 db    ? ;
.bss:0041323A                 db    ? ;
.bss:0041323B                 db    ? ;
.bss:0041323C                 db    ? ;
.bss:0041323D                 db    ? ;
.bss:0041323E                 db    ? ;
.bss:0041323F                 db    ? ;
.bss:00413240                 db    ? ;
.bss:00413241                 db    ? ;
.bss:00413242                 db    ? ;
.bss:00413243                 db    ? ;
.bss:00413244                 db    ? ;
.bss:00413245                 db    ? ;
.bss:00413246                 db    ? ;
.bss:00413247                 db    ? ;
.bss:00413248                 db    ? ;
.bss:00413249                 db    ? ;
.bss:0041324A                 db    ? ;
.bss:0041324B                 db    ? ;
.bss:0041324C                 db    ? ;
.bss:0041324D                 db    ? ;
.bss:0041324E                 db    ? ;
.bss:0041324F                 db    ? ;
.bss:00413250                 db    ? ;
.bss:00413251                 db    ? ;
.bss:00413252                 db    ? ;
.bss:00413253                 db    ? ;
.bss:00413254                 db    ? ;
.bss:00413255                 db    ? ;
.bss:00413256                 db    ? ;
.bss:00413257                 db    ? ;
.bss:00413258                 db    ? ;
.bss:00413259                 db    ? ;
.bss:0041325A                 db    ? ;
.bss:0041325B                 db    ? ;
.bss:0041325C                 db    ? ;
.bss:0041325D                 db    ? ;
.bss:0041325E                 db    ? ;
.bss:0041325F                 db    ? ;
.bss:00413260                 db    ? ;
.bss:00413261                 db    ? ;
.bss:00413262                 db    ? ;
.bss:00413263                 db    ? ;
.bss:00413264                 db    ? ;
.bss:00413265                 db    ? ;
.bss:00413266                 db    ? ;
.bss:00413267                 db    ? ;
.bss:00413268                 db    ? ;
.bss:00413269                 db    ? ;
.bss:0041326A                 db    ? ;
.bss:0041326B                 db    ? ;
.bss:0041326C                 db    ? ;
.bss:0041326D                 db    ? ;
.bss:0041326E                 db    ? ;
.bss:0041326F                 db    ? ;
.bss:00413270                 db    ? ;
.bss:00413271                 db    ? ;
.bss:00413272                 db    ? ;
.bss:00413273                 db    ? ;
.bss:00413274                 db    ? ;
.bss:00413275                 db    ? ;
.bss:00413276                 db    ? ;
.bss:00413277                 db    ? ;
.bss:00413278                 db    ? ;
.bss:00413279                 db    ? ;
.bss:0041327A                 db    ? ;
.bss:0041327B                 db    ? ;
.bss:0041327C                 db    ? ;
.bss:0041327D                 db    ? ;
.bss:0041327E                 db    ? ;
.bss:0041327F                 db    ? ;
.bss:00413280                 db    ? ;
.bss:00413281                 db    ? ;
.bss:00413282                 db    ? ;
.bss:00413283                 db    ? ;
.bss:00413284                 db    ? ;
.bss:00413285                 db    ? ;
.bss:00413286                 db    ? ;
.bss:00413287                 db    ? ;
.bss:00413288                 db    ? ;
.bss:00413289                 db    ? ;
.bss:0041328A                 db    ? ;
.bss:0041328B                 db    ? ;
.bss:0041328C                 db    ? ;
.bss:0041328D                 db    ? ;
.bss:0041328E                 db    ? ;
.bss:0041328F                 db    ? ;
.bss:00413290 unk_413290      db    ? ;               ; DATA XREF: sub_4042E0+148↑o
.bss:00413290                                         ; sub_4042E0+153↑o ...
.bss:00413291                 db    ? ;
.bss:00413292                 db    ? ;
.bss:00413293                 db    ? ;
.bss:00413294                 db    ? ;
.bss:00413295                 db    ? ;
.bss:00413296                 db    ? ;
.bss:00413297                 db    ? ;
.bss:00413298                 db    ? ;
.bss:00413299                 db    ? ;
.bss:0041329A                 db    ? ;
.bss:0041329B                 db    ? ;
.bss:0041329C                 db    ? ;
.bss:0041329D                 db    ? ;
.bss:0041329E                 db    ? ;
.bss:0041329F                 db    ? ;
.bss:004132A0 dword_4132A0    dd ?                    ; DATA XREF: sub_40B9C0+9↑o
.bss:004132A0                                         ; sub_40B9C0+17↑w ...
.bss:004132A4 dword_4132A4    dd ?                    ; DATA XREF: sub_40B9C0+21↑w
.bss:004132A4                                         ; .text:0040BA79↑w
.bss:004132A8 dword_4132A8    dd ?                    ; DATA XREF: sub_40B9C0+77↑r
.bss:004132A8                                         ; .text:0040BAC7↑r
.bss:004132AC dword_4132AC    dd ?                    ; DATA XREF: sub_40B9C0+6B↑r
.bss:004132AC                                         ; .text:0040BABB↑r
.bss:004132B0                 db    ? ;
.bss:004132B1                 db    ? ;
.bss:004132B2                 db    ? ;
.bss:004132B3                 db    ? ;
.bss:004132B4                 db    ? ;
.bss:004132B5                 db    ? ;
.bss:004132B6                 db    ? ;
.bss:004132B7                 db    ? ;
.bss:004132B8                 db    ? ;
.bss:004132B9                 db    ? ;
.bss:004132BA                 db    ? ;
.bss:004132BB                 db    ? ;
.bss:004132BC                 db    ? ;
.bss:004132BD                 db    ? ;
.bss:004132BE                 db    ? ;
.bss:004132BF                 db    ? ;
.bss:004132C0                 db    ? ;
.bss:004132C1                 db    ? ;
.bss:004132C2                 db    ? ;
.bss:004132C3                 db    ? ;
.bss:004132C4                 db    ? ;
.bss:004132C5                 db    ? ;
.bss:004132C6                 db    ? ;
.bss:004132C7                 db    ? ;
.bss:004132C8                 db    ? ;
.bss:004132C9                 db    ? ;
.bss:004132CA                 db    ? ;
.bss:004132CB                 db    ? ;
.bss:004132CC                 db    ? ;
.bss:004132CD                 db    ? ;
.bss:004132CE                 db    ? ;
.bss:004132CF                 db    ? ;
.bss:004132D0 ; char *dword_4132D0
.bss:004132D0 dword_4132D0    dd ?                    ; DATA XREF: .text:0040C2A4↑w
.bss:004132D0                                         ; sub_40C2D0+58↑r
.bss:004132D4                 align 10h
.bss:004132E0 unk_4132E0      db    ? ;               ; DATA XREF: sub_40FB50+100↑o
.bss:004132E0                                         ; .data:off_412058↑o
.bss:004132E1                 db    ? ;
.bss:004132E2                 db    ? ;
.bss:004132E3                 db    ? ;
.bss:004132E4                 db    ? ;
.bss:004132E5                 db    ? ;
.bss:004132E6                 db    ? ;
.bss:004132E7                 db    ? ;
.bss:004132E8                 db    ? ;
.bss:004132E9                 db    ? ;
.bss:004132EA                 db    ? ;
.bss:004132EB                 db    ? ;
.bss:004132EC                 db    ? ;
.bss:004132ED                 db    ? ;
.bss:004132EE                 db    ? ;
.bss:004132EF                 db    ? ;
.bss:004132F0                 db    ? ;
.bss:004132F1                 db    ? ;
.bss:004132F2                 db    ? ;
.bss:004132F3                 db    ? ;
.bss:004132F4                 db    ? ;
.bss:004132F5                 db    ? ;
.bss:004132F6                 db    ? ;
.bss:004132F7                 db    ? ;
.bss:004132F8                 db    ? ;
.bss:004132F9                 db    ? ;
.bss:004132FA                 db    ? ;
.bss:004132FB                 db    ? ;
.bss:004132FC                 db    ? ;
.bss:004132FD                 db    ? ;
.bss:004132FE                 db    ? ;
.bss:004132FF                 db    ? ;
.bss:00413300                 db    ? ;
.bss:00413301                 db    ? ;
.bss:00413302                 db    ? ;
.bss:00413303                 db    ? ;
.bss:00413304                 db    ? ;
.bss:00413305                 db    ? ;
.bss:00413306                 db    ? ;
.bss:00413307                 db    ? ;
.bss:00413308                 db    ? ;
.bss:00413309                 db    ? ;
.bss:0041330A                 db    ? ;
.bss:0041330B                 db    ? ;
.bss:0041330C                 db    ? ;
.bss:0041330D                 db    ? ;
.bss:0041330E                 db    ? ;
.bss:0041330F                 db    ? ;
.bss:00413310                 db    ? ;
.bss:00413311                 db    ? ;
.bss:00413312                 db    ? ;
.bss:00413313                 db    ? ;
.bss:00413314                 db    ? ;
.bss:00413315                 db    ? ;
.bss:00413316                 db    ? ;
.bss:00413317                 db    ? ;
.bss:00413318                 db    ? ;
.bss:00413319                 db    ? ;
.bss:0041331A                 db    ? ;
.bss:0041331B                 db    ? ;
.bss:0041331C                 db    ? ;
.bss:0041331D                 db    ? ;
.bss:0041331E                 db    ? ;
.bss:0041331F                 db    ? ;
.bss:00413320                 db    ? ;
.bss:00413321                 db    ? ;
.bss:00413322                 db    ? ;
.bss:00413323                 db    ? ;
.bss:00413324                 db    ? ;
.bss:00413325                 db    ? ;
.bss:00413326                 db    ? ;
.bss:00413327                 db    ? ;
.bss:00413328                 db    ? ;
.bss:00413329                 db    ? ;
.bss:0041332A                 db    ? ;
.bss:0041332B                 db    ? ;
.bss:0041332C                 db    ? ;
.bss:0041332D                 db    ? ;
.bss:0041332E                 db    ? ;
.bss:0041332F                 db    ? ;
.bss:00413330                 db    ? ;
.bss:00413331                 db    ? ;
.bss:00413332                 db    ? ;
.bss:00413333                 db    ? ;
.bss:00413334                 db    ? ;
.bss:00413335                 db    ? ;
.bss:00413336                 db    ? ;
.bss:00413337                 db    ? ;
.bss:00413338                 db    ? ;
.bss:00413339                 db    ? ;
.bss:0041333A                 db    ? ;
.bss:0041333B                 db    ? ;
.bss:0041333C                 db    ? ;
.bss:0041333D                 db    ? ;
.bss:0041333E                 db    ? ;
.bss:0041333F                 db    ? ;
.bss:00413340                 db    ? ;
.bss:00413341                 db    ? ;
.bss:00413342                 db    ? ;
.bss:00413343                 db    ? ;
.bss:00413344                 db    ? ;
.bss:00413345                 db    ? ;
.bss:00413346                 db    ? ;
.bss:00413347                 db    ? ;
.bss:00413348                 db    ? ;
.bss:00413349                 db    ? ;
.bss:0041334A                 db    ? ;
.bss:0041334B                 db    ? ;
.bss:0041334C                 db    ? ;
.bss:0041334D                 db    ? ;
.bss:0041334E                 db    ? ;
.bss:0041334F                 db    ? ;
.bss:00413350                 db    ? ;
.bss:00413351                 db    ? ;
.bss:00413352                 db    ? ;
.bss:00413353                 db    ? ;
.bss:00413354                 db    ? ;
.bss:00413355                 db    ? ;
.bss:00413356                 db    ? ;
.bss:00413357                 db    ? ;
.bss:00413358                 db    ? ;
.bss:00413359                 db    ? ;
.bss:0041335A                 db    ? ;
.bss:0041335B                 db    ? ;
.bss:0041335C                 db    ? ;
.bss:0041335D                 db    ? ;
.bss:0041335E                 db    ? ;
.bss:0041335F                 db    ? ;
.bss:00413360                 db    ? ;
.bss:00413361                 db    ? ;
.bss:00413362                 db    ? ;
.bss:00413363                 db    ? ;
.bss:00413364                 db    ? ;
.bss:00413365                 db    ? ;
.bss:00413366                 db    ? ;
.bss:00413367                 db    ? ;
.bss:00413368                 db    ? ;
.bss:00413369                 db    ? ;
.bss:0041336A                 db    ? ;
.bss:0041336B                 db    ? ;
.bss:0041336C                 db    ? ;
.bss:0041336D                 db    ? ;
.bss:0041336E                 db    ? ;
.bss:0041336F                 db    ? ;
.bss:00413370                 db    ? ;
.bss:00413371                 db    ? ;
.bss:00413372                 db    ? ;
.bss:00413373                 db    ? ;
.bss:00413374                 db    ? ;
.bss:00413375                 db    ? ;
.bss:00413376                 db    ? ;
.bss:00413377                 db    ? ;
.bss:00413378                 db    ? ;
.bss:00413379                 db    ? ;
.bss:0041337A                 db    ? ;
.bss:0041337B                 db    ? ;
.bss:0041337C                 db    ? ;
.bss:0041337D                 db    ? ;
.bss:0041337E                 db    ? ;
.bss:0041337F                 db    ? ;
.bss:00413380                 db    ? ;
.bss:00413381                 db    ? ;
.bss:00413382                 db    ? ;
.bss:00413383                 db    ? ;
.bss:00413384                 db    ? ;
.bss:00413385                 db    ? ;
.bss:00413386                 db    ? ;
.bss:00413387                 db    ? ;
.bss:00413388                 db    ? ;
.bss:00413389                 db    ? ;
.bss:0041338A                 db    ? ;
.bss:0041338B                 db    ? ;
.bss:0041338C                 db    ? ;
.bss:0041338D                 db    ? ;
.bss:0041338E                 db    ? ;
.bss:0041338F                 db    ? ;
.bss:00413390                 db    ? ;
.bss:00413391                 db    ? ;
.bss:00413392                 db    ? ;
.bss:00413393                 db    ? ;
.bss:00413394                 db    ? ;
.bss:00413395                 db    ? ;
.bss:00413396                 db    ? ;
.bss:00413397                 db    ? ;
.bss:00413398                 db    ? ;
.bss:00413399                 db    ? ;
.bss:0041339A                 db    ? ;
.bss:0041339B                 db    ? ;
.bss:0041339C                 db    ? ;
.bss:0041339D                 db    ? ;
.bss:0041339E                 db    ? ;
.bss:0041339F                 db    ? ;
.bss:004133A0                 db    ? ;
.bss:004133A1                 db    ? ;
.bss:004133A2                 db    ? ;
.bss:004133A3                 db    ? ;
.bss:004133A4                 db    ? ;
.bss:004133A5                 db    ? ;
.bss:004133A6                 db    ? ;
.bss:004133A7                 db    ? ;
.bss:004133A8                 db    ? ;
.bss:004133A9                 db    ? ;
.bss:004133AA                 db    ? ;
.bss:004133AB                 db    ? ;
.bss:004133AC                 db    ? ;
.bss:004133AD                 db    ? ;
.bss:004133AE                 db    ? ;
.bss:004133AF                 db    ? ;
.bss:004133B0                 db    ? ;
.bss:004133B1                 db    ? ;
.bss:004133B2                 db    ? ;
.bss:004133B3                 db    ? ;
.bss:004133B4                 db    ? ;
.bss:004133B5                 db    ? ;
.bss:004133B6                 db    ? ;
.bss:004133B7                 db    ? ;
.bss:004133B8                 db    ? ;
.bss:004133B9                 db    ? ;
.bss:004133BA                 db    ? ;
.bss:004133BB                 db    ? ;
.bss:004133BC                 db    ? ;
.bss:004133BD                 db    ? ;
.bss:004133BE                 db    ? ;
.bss:004133BF                 db    ? ;
.bss:004133C0                 db    ? ;
.bss:004133C1                 db    ? ;
.bss:004133C2                 db    ? ;
.bss:004133C3                 db    ? ;
.bss:004133C4                 db    ? ;
.bss:004133C5                 db    ? ;
.bss:004133C6                 db    ? ;
.bss:004133C7                 db    ? ;
.bss:004133C8                 db    ? ;
.bss:004133C9                 db    ? ;
.bss:004133CA                 db    ? ;
.bss:004133CB                 db    ? ;
.bss:004133CC                 db    ? ;
.bss:004133CD                 db    ? ;
.bss:004133CE                 db    ? ;
.bss:004133CF                 db    ? ;
.bss:004133D0                 db    ? ;
.bss:004133D1                 db    ? ;
.bss:004133D2                 db    ? ;
.bss:004133D3                 db    ? ;
.bss:004133D4                 db    ? ;
.bss:004133D5                 db    ? ;
.bss:004133D6                 db    ? ;
.bss:004133D7                 db    ? ;
.bss:004133D8                 db    ? ;
.bss:004133D9                 db    ? ;
.bss:004133DA                 db    ? ;
.bss:004133DB                 db    ? ;
.bss:004133DC                 db    ? ;
.bss:004133DD                 db    ? ;
.bss:004133DE                 db    ? ;
.bss:004133DF                 db    ? ;
.bss:004133E0 dword_4133E0    dd ?                    ; DATA XREF: .text:loc_40F4E1↑o
.bss:004133E0                                         ; .text:loc_40F500↑o ...
.bss:004133E4 dword_4133E4    dd ?                    ; DATA XREF: .text:loc_40F580↑o
.bss:004133E4                                         ; .text:0040FA08↑r ...
.bss:004133E8 dword_4133E8    dd ?                    ; DATA XREF: .text:0040FA02↑r
.bss:004133E8                                         ; sub_40FAB0+2C↑r
.bss:004133EC dword_4133EC    dd ?                    ; DATA XREF: .text:0040F9F6↑r
.bss:004133EC                                         ; sub_40FAB0+22↑r
.bss:004133F0 dword_4133F0    dd ?                    ; DATA XREF: .text:0040FA12↑r
.bss:004133F0                                         ; sub_40FAB0+36↑r
.bss:004133F4 dword_4133F4    dd ?                    ; DATA XREF: .text:0040FA22↑r
.bss:004133F4                                         ; sub_40FAB0+4E↑r
.bss:004133F8 dword_4133F8    dd ?                    ; DATA XREF: .text:0040FA3F↑r
.bss:004133F8                                         ; sub_40FAB0+62↑r
.bss:004133FC dword_4133FC    dd ?                    ; DATA XREF: .text:0040FA35↑r
.bss:004133FC                                         ; sub_40FAB0+70↑r
.bss:00413400 dword_413400    dd ?                    ; DATA XREF: .text:0040FA18↑r
.bss:00413400                                         ; sub_40FAB0+7A↑r
.bss:00413404                 align 10h
.bss:00413410 ; char *Str1
.bss:00413410 Str1            dd ?                    ; DATA XREF: sub_40FE74:loc_40FEAD↑w
.bss:00413410                                         ; sub_40FE74:loc_40FFE0↑r
.bss:00413414                 align 10h
.bss:00413420 dword_413420    dd ?                    ; DATA XREF: sub_40FE74+2D↑r
.bss:00413420                                         ; sub_40FE74+3F↑w
.bss:00413424                 align 10h
.bss:00413430 dword_413430    dd ?                    ; DATA XREF: sub_4018C0+2F↑w
.bss:00413430                                         ; sub_4018C0+58A↑r ...
.bss:00413434                 db    ? ;
.bss:00413435                 db    ? ;
.bss:00413436                 db    ? ;
.bss:00413437                 db    ? ;
.bss:00413438                 db    ? ;
.bss:00413439                 db    ? ;
.bss:0041343A                 db    ? ;
.bss:0041343B                 db    ? ;
.bss:0041343C                 db    ? ;
.bss:0041343D                 db    ? ;
.bss:0041343E                 db    ? ;
.bss:0041343F                 db    ? ;
.bss:00413440                 db    ? ;
.bss:00413441                 db    ? ;
.bss:00413442                 db    ? ;
.bss:00413443                 db    ? ;
.bss:00413444                 db    ? ;
.bss:00413445                 db    ? ;
.bss:00413446                 db    ? ;
.bss:00413447                 db    ? ;
.bss:00413448                 db    ? ;
.bss:00413449                 db    ? ;
.bss:0041344A                 db    ? ;
.bss:0041344B                 db    ? ;
.bss:0041344C                 db    ? ;
.bss:0041344D                 db    ? ;
.bss:0041344E                 db    ? ;
.bss:0041344F                 db    ? ;
.bss:00413450 dword_413450    dd ?                    ; DATA XREF: .text:00406F40↑r
.bss:00413450                                         ; .text:00406F49↑w ...
.bss:00413454                 align 10h
.bss:00413460 ; char dword_413460[]
.bss:00413460 dword_413460    dd ?                    ; DATA XREF: sub_4018C0+163↑r
.bss:00413460                                         ; sub_4018C0:loc_401A34↑r ...
.bss:00413464                 align 10h
.bss:00413470 dword_413470    dd ?                    ; CODE XREF: sub_40FE74+63↑p
.bss:00413470                                         ; DATA XREF: sub_40FD70+1E↑r ...
.bss:00413474                 align 10h
.bss:00413480 dword_413480    dd ?                    ; DATA XREF: sub_40FD70+4E↑w
.bss:00413480                                         ; sub_40FE74+AB↑w
.bss:00413484                 db    ? ;
.bss:00413485                 db    ? ;
.bss:00413486                 db    ? ;
.bss:00413487                 db    ? ;
.bss:00413488                 db    ? ;
.bss:00413489                 db    ? ;
.bss:0041348A                 db    ? ;
.bss:0041348B                 db    ? ;
.bss:0041348C                 db    ? ;
.bss:0041348D                 db    ? ;
.bss:0041348E                 db    ? ;
.bss:0041348F                 db    ? ;
.bss:00413490                 db    ? ;
.bss:00413491                 db    ? ;
.bss:00413492                 db    ? ;
.bss:00413493                 db    ? ;
.bss:00413494                 db    ? ;
.bss:00413495                 db    ? ;
.bss:00413496                 db    ? ;
.bss:00413497                 db    ? ;
.bss:00413498                 db    ? ;
.bss:00413499                 db    ? ;
.bss:0041349A                 db    ? ;
.bss:0041349B                 db    ? ;
.bss:0041349C                 db    ? ;
.bss:0041349D                 db    ? ;
.bss:0041349E                 db    ? ;
.bss:0041349F                 db    ? ;
.bss:004134A0                 db    ? ;
.bss:004134A1                 db    ? ;
.bss:004134A2                 db    ? ;
.bss:004134A3                 db    ? ;
.bss:004134A4                 db    ? ;
.bss:004134A5                 db    ? ;
.bss:004134A6                 db    ? ;
.bss:004134A7                 db    ? ;
.bss:004134A8                 db    ? ;
.bss:004134A9                 db    ? ;
.bss:004134AA                 db    ? ;
.bss:004134AB                 db    ? ;
.bss:004134AC                 db    ? ;
.bss:004134AD                 db    ? ;
.bss:004134AE                 db    ? ;
.bss:004134AF                 db    ? ;
.bss:004134B0 dword_4134B0    dd ?                    ; DATA XREF: sub_40FE74+13↑r
.bss:004134B4                 align 1000h
.bss:004134B4 _bss            ends
.bss:004134B4
.idata:00414000 ; Section 4. (virtual address 00014000)
.idata:00414000 ; Virtual size                  : 00000764 (   1892.)
.idata:00414000 ; Section size in file          : 00000800 (   2048.)
.idata:00414000 ; Offset to raw data for section: 00011200
.idata:00414000 ; Flags C0000040: Data Readable Writable
.idata:00414000 ; Alignment     : default
.idata:00414000 ; ===========================================================================
.idata:00414000
.idata:00414000 ; Segment type: Externs
.idata:00414000 ; _idata
.idata:00414000
.idata:00414001
.idata:004141A8 ;
.idata:004141A8 ; Imports from libintl3.dll
.idata:004141A8 ;
.idata:004141A8                 extrn libintl_bindtextdomain:dword
.idata:004141A8                                         ; CODE XREF: sub_4018C0+49↑p
.idata:004141A8                                         ; DATA XREF: sub_4018C0+49↑r ...
.idata:004141AC                 extrn __imp_libintl_gettext:dword
.idata:004141AC                                         ; CODE XREF: sub_4015E0+135↑p
.idata:004141AC                                         ; sub_4018C0+1F5↑p ...
.idata:004141B0                 extrn libintl_textdomain:dword
.idata:004141B0                                         ; CODE XREF: sub_4018C0+56↑p
.idata:004141B0                                         ; DATA XREF: sub_4018C0+56↑r ...
.idata:004141B4
.idata:004141BC ;
.idata:004141BC ; Imports from KERNEL32.dll
.idata:004141BC ;
.idata:004141BC ; BOOL (__stdcall *DeleteFileA)(LPCSTR lpFileName)
.idata:004141BC                 extrn __imp_DeleteFileA:dword
.idata:004141BC                                         ; DATA XREF: DeleteFileA↑r
.idata:004141C0 ; void (__stdcall __noreturn *ExitProcess)(UINT uExitCode)
.idata:004141C0                 extrn __imp_ExitProcess:dword
.idata:004141C0                                         ; DATA XREF: ExitProcess↑r
.idata:004141C4 ; DWORD (__stdcall *GetFileAttributesA)(LPCSTR lpFileName)
.idata:004141C4                 extrn __imp_GetFileAttributesA:dword
.idata:004141C4                                         ; DATA XREF: GetFileAttributesA↑r
.idata:004141C8 ; DWORD (__stdcall *GetLastError)()
.idata:004141C8                 extrn __imp_GetLastError:dword
.idata:004141C8                                         ; DATA XREF: GetLastError↑r
.idata:004141CC ; UINT (__stdcall *SetErrorMode)(UINT uMode)
.idata:004141CC                 extrn __imp_SetErrorMode:dword
.idata:004141CC                                         ; DATA XREF: SetErrorMode↑r
.idata:004141D0 ; LPTOP_LEVEL_EXCEPTION_FILTER (__stdcall *SetUnhandledExceptionFilter)(LPTOP_LEVEL_EXCEPTION_FILTER lpTopLevelExceptionFilter)
.idata:004141D0                 extrn __imp_SetUnhandledExceptionFilter:dword
.idata:004141D0                                         ; DATA XREF: SetUnhandledExceptionFilter↑r
.idata:004141D4
.idata:004141DC ;
.idata:004141DC ; Imports from msvcrt.dll
.idata:004141DC ;
.idata:004141DC ; int (__cdecl *_close)(int FileHandle)
.idata:004141DC                 extrn __imp__close:dword
.idata:004141DC                                         ; DATA XREF: _close↑r
.idata:004141E0 ; int (*_open)(const char *FileName, int OpenFlag, ...)
.idata:004141E0                 extrn __imp__open:dword ; DATA XREF: _open↑r
.idata:004141E4 ; int (__cdecl *_read)(int FileHandle, void *DstBuf, unsigned int MaxCharCount)
.idata:004141E4                 extrn __imp__read:dword ; DATA XREF: _read↑r
.idata:004141E8
.idata:004141F0 ;
.idata:004141F0 ; Imports from MSVCP60.DLL
.idata:004141F0 ;
.idata:004141F0 ; wint_t (__cdecl *btowc)(int Ch)
.idata:004141F0                 extrn __imp_btowc:dword ; DATA XREF: btowc↑r
.idata:004141F4 ; size_t (__cdecl *mbrtowc)(wchar_t *DstCh, const char *SrcCh, size_t SizeInBytes, mbstate_t *State)
.idata:004141F4                 extrn __imp_mbrtowc:dword
.idata:004141F4                                         ; DATA XREF: mbrtowc↑r
.idata:004141F8 ; wctype_t (__cdecl *wctype)(const char *name)
.idata:004141F8                 extrn __imp_wctype:dword
.idata:004141F8                                         ; DATA XREF: wctype↑r
.idata:004141FC
.idata:00414204 ;
.idata:00414204 ; Imports from msvcrt.dll
.idata:00414204 ;
.idata:00414204                 extrn __imp___getmainargs:dword
.idata:00414204                                         ; DATA XREF: __getmainargs↑r
.idata:00414208 ; int _mb_cur_max
.idata:00414208                 extrn __mb_cur_max:dword
.idata:00414208                                         ; DATA XREF: sub_403750:loc_403895↑r
.idata:00414208                                         ; .text:loc_406D40↑r ...
.idata:0041420C ; char ***(__cdecl *__p__environ)()
.idata:0041420C                 extrn __imp___p__environ:dword
.idata:0041420C                                         ; DATA XREF: __p__environ↑r
.idata:00414210 ; int *(__cdecl *__p__fmode)()
.idata:00414210                 extrn __imp___p__fmode:dword
.idata:00414210                                         ; DATA XREF: __p__fmode↑r
.idata:00414214 ; void (__cdecl *_set_app_type)(_crt_app_type Type)
.idata:00414214                 extrn __set_app_type:dword
.idata:00414214                                         ; CODE XREF: start+D↑p
.idata:00414214                                         ; .text:0040102D↑p
.idata:00414214                                         ; DATA XREF: ...
.idata:00414218                 extrn __imp__assert:dword
.idata:00414218                                         ; DATA XREF: _assert↑r
.idata:0041421C ; void (__cdecl *_cexit)()
.idata:0041421C                 extrn __imp__cexit:dword
.idata:0041421C                                         ; DATA XREF: _cexit↑r
.idata:00414220 ; int (__cdecl *_chmod)(const char *FileName, int AccessMode)
.idata:00414220                 extrn __imp__chmod:dword
.idata:00414220                                         ; DATA XREF: _chmod↑r
.idata:00414224 ; int *(__cdecl *_errno)()
.idata:00414224                 extrn __imp__errno:dword
.idata:00414224                                         ; DATA XREF: _errno↑r
.idata:00414228 ; int (__cdecl *_flsbuf)(int Ch, FILE *File)
.idata:00414228                 extrn __imp__flsbuf:dword
.idata:00414228                                         ; DATA XREF: _flsbuf↑r
.idata:0041422C ; FILE iob[]
.idata:0041422C                 extrn _iob:dword        ; DATA XREF: sub_401080+5C↑r
.idata:0041422C                                         ; sub_401080+75↑r ...
.idata:00414230 ; int (__cdecl *_isctype)(int C, int Type)
.idata:00414230                 extrn __imp__isctype:dword
.idata:00414230                                         ; DATA XREF: _isctype↑r
.idata:00414234 ; _onexit_t (__cdecl *onexit)(_onexit_t Func)
.idata:00414234                 extrn _onexit:dword     ; CODE XREF: .text:0040106C↑p
.idata:00414234                                         ; DATA XREF: .text:0040106C↑r
.idata:00414238 ; const unsigned __int16 *pctype
.idata:00414238                 extrn _pctype:dword     ; DATA XREF: sub_403750:loc_4038F1↑r
.idata:00414238                                         ; .text:loc_406D81↑r ...
.idata:0041423C ; int (__cdecl *_setmode)(int FileHandle, int Mode)
.idata:0041423C                 extrn __imp__setmode:dword
.idata:0041423C                                         ; DATA XREF: _setmode↑r
.idata:00414240 ; void (__cdecl __noreturn *abort)()
.idata:00414240                 extrn __imp_abort:dword ; DATA XREF: abort↑r
.idata:00414244 ; int (__cdecl *atexit)(void (__cdecl *)())
.idata:00414244                 extrn atexit:dword      ; CODE XREF: sub_401040+C↑p
.idata:00414244                                         ; DATA XREF: sub_401040+C↑r
.idata:00414248 ; void *(__cdecl *calloc)(size_t Count, size_t Size)
.idata:00414248                 extrn __imp_calloc:dword
.idata:00414248                                         ; DATA XREF: calloc↑r
.idata:0041424C ; void (__cdecl __noreturn *exit)(int Code)
.idata:0041424C                 extrn __imp_exit:dword  ; DATA XREF: exit↑r
.idata:00414250 ; int (__cdecl *fclose)(FILE *Stream)
.idata:00414250                 extrn __imp_fclose:dword
.idata:00414250                                         ; DATA XREF: fclose↑r
.idata:00414254 ; int (__cdecl *fflush)(FILE *Stream)
.idata:00414254                 extrn __imp_fflush:dword
.idata:00414254                                         ; DATA XREF: fflush↑r
.idata:00414258 ; FILE *(__cdecl *fopen)(const char *FileName, const char *Mode)
.idata:00414258                 extrn __imp_fopen:dword ; DATA XREF: fopen↑r
.idata:0041425C ; int (*fprintf)(FILE *const Stream, const char *const Format, ...)
.idata:0041425C                 extrn __imp_fprintf:dword
.idata:0041425C                                         ; DATA XREF: fprintf↑r
.idata:00414260 ; int (__cdecl *fputc)(int Character, FILE *Stream)
.idata:00414260                 extrn __imp_fputc:dword ; DATA XREF: fputc↑r
.idata:00414264 ; int (__cdecl *fputs)(const char *Buffer, FILE *Stream)
.idata:00414264                 extrn __imp_fputs:dword ; DATA XREF: fputs↑r
.idata:00414268 ; void (__cdecl *free)(void *Block)
.idata:00414268                 extrn __imp_free:dword  ; DATA XREF: free↑r
.idata:0041426C ; size_t (__cdecl *fwrite)(const void *Buffer, size_t ElementSize, size_t ElementCount, FILE *Stream)
.idata:0041426C                 extrn __imp_fwrite:dword
.idata:0041426C                                         ; DATA XREF: fwrite↑r
.idata:00414270 ; char *(__cdecl *getenv)(const char *VarName)
.idata:00414270                 extrn __imp_getenv:dword
.idata:00414270                                         ; DATA XREF: getenv↑r
.idata:00414274 ; int (__cdecl *iswctype)(wint_t C, wctype_t Type)
.idata:00414274                 extrn __imp_iswctype:dword
.idata:00414274                                         ; DATA XREF: iswctype↑r
.idata:00414278 ; void *(__cdecl *malloc)(size_t Size)
.idata:00414278                 extrn __imp_malloc:dword
.idata:00414278                                         ; DATA XREF: malloc↑r
.idata:0041427C ; void *(__cdecl *memchr)(const void *Buf, int Val, size_t MaxCount)
.idata:0041427C                 extrn __imp_memchr:dword
.idata:0041427C                                         ; DATA XREF: memchr↑r
.idata:00414280 ; void *(__cdecl *memcpy)(void *, const void *Src, size_t Size)
.idata:00414280                 extrn __imp_memcpy:dword
.idata:00414280                                         ; DATA XREF: memcpy↑r
.idata:00414284 ; void *(__cdecl *memset)(void *, int Val, size_t Size)
.idata:00414284                 extrn __imp_memset:dword
.idata:00414284                                         ; DATA XREF: memset↑r
.idata:00414288 ; int (*printf)(const char *const Format, ...)
.idata:00414288                 extrn __imp_printf:dword
.idata:00414288                                         ; DATA XREF: printf↑r
.idata:0041428C ; int (__cdecl *raise)(int Signal)
.idata:0041428C                 extrn __imp_raise:dword ; DATA XREF: raise↑r
.idata:00414290 ; void *(__cdecl *realloc)(void *Block, size_t Size)
.idata:00414290                 extrn __imp_realloc:dword
.idata:00414290                                         ; DATA XREF: realloc↑r
.idata:00414294 ; char *(__cdecl *setlocale)(int Category, const char *Locale)
.idata:00414294                 extrn __imp_setlocale:dword
.idata:00414294                                         ; DATA XREF: setlocale↑r
.idata:00414298 ; _crt_signal_t (__cdecl *signal)(int Signal, _crt_signal_t Function)
.idata:00414298                 extrn __imp_signal:dword
.idata:00414298                                         ; DATA XREF: signal↑r
.idata:0041429C ; int (*sprintf)(char *const Buffer, const char *const Format, ...)
.idata:0041429C                 extrn __imp_sprintf:dword
.idata:0041429C                                         ; DATA XREF: sprintf↑r
.idata:004142A0 ; char *(__cdecl *strchr)(const char *Str, int Val)
.idata:004142A0                 extrn __imp_strchr:dword
.idata:004142A0                                         ; DATA XREF: strchr↑r
.idata:004142A4 ; int (__cdecl *strcmp)(const char *Str1, const char *Str2)
.idata:004142A4                 extrn __imp_strcmp:dword
.idata:004142A4                                         ; DATA XREF: strcmp↑r
.idata:004142A8 ; char *(__cdecl *strcpy)(char *Destination, const char *Source)
.idata:004142A8                 extrn __imp_strcpy:dword
.idata:004142A8                                         ; DATA XREF: strcpy↑r
.idata:004142AC ; char *(__cdecl *strerror)(int ErrorMessage)
.idata:004142AC                 extrn __imp_strerror:dword
.idata:004142AC                                         ; DATA XREF: strerror↑r
.idata:004142B0 ; size_t (__cdecl *strlen)(const char *Str)
.idata:004142B0                 extrn __imp_strlen:dword
.idata:004142B0                                         ; DATA XREF: strlen↑r
.idata:004142B4 ; int (__cdecl *strncmp)(const char *Str1, const char *Str2, size_t MaxCount)
.idata:004142B4                 extrn __imp_strncmp:dword
.idata:004142B4                                         ; DATA XREF: strncmp↑r
.idata:004142B8 ; char *(__cdecl *strncpy)(char *Destination, const char *Source, size_t Count)
.idata:004142B8                 extrn __imp_strncpy:dword
.idata:004142B8                                         ; DATA XREF: strncpy↑r
.idata:004142BC ; char *(__cdecl *strrchr)(const char *Str, int Ch)
.idata:004142BC                 extrn __imp_strrchr:dword
.idata:004142BC                                         ; DATA XREF: strrchr↑r
.idata:004142C0 ; unsigned int (__cdecl *strtoul)(const char *String, char **EndPtr, int Radix)
.idata:004142C0                 extrn __imp_strtoul:dword
.idata:004142C0                                         ; DATA XREF: strtoul↑r
.idata:004142C4 ; int (__cdecl *tolower)(int C)
.idata:004142C4                 extrn __imp_tolower:dword
.idata:004142C4                                         ; DATA XREF: tolower↑r
.idata:004142C8 ; int (__cdecl *vfprintf)(FILE *const Stream, const char *const Format, va_list ArgList)
.idata:004142C8                 extrn __imp_vfprintf:dword
.idata:004142C8                                         ; DATA XREF: vfprintf↑r
.idata:004142CC
.idata:004142CC
.idata:004142CC
.idata:004142CC                 end start
