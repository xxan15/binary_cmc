.text:00401000 ;
.text:00401000 ; +-------------------------------------------------------------------------+
.text:00401000 ; |      This file was generated by The Interactive Disassembler (IDA)      |
.text:00401000 ; |           Copyright (c) 2021 Hex-Rays, <support@hex-rays.com>           |
.text:00401000 ; |                      License info: 48-357D-7BC4-C6                      |
.text:00401000 ; |                              Virginia Tech                              |
.text:00401000 ; +-------------------------------------------------------------------------+
.text:00401000 ;
.text:00401000 ; Input SHA256 : 5868287A2F06D687CD47E05ED9ABEF5F0FF82C33EE3C1D63700C3CA87AE28A73
.text:00401000 ; Input MD5    : C2061134381F3B1F0E34BFF4F5D108E0
.text:00401000 ; Input CRC32  : 8F593DE0
.text:00401000
.text:00401000 ; File Name   : /home/cindy/Documents/Projects/binary_cmc/benchmark/pe_benchmark/ndadmin.exe
.text:00401000 ; Format      : Portable executable for 80386 (PE)
.text:00401000 ; Imagebase   : 400000
.text:00401000 ; Hash        : 7881CD7E
.text:00401000 ; Section 1. (virtual address 00001000)
.text:00401000 ; Virtual size                  : 00001A74 (   6772.)
.text:00401000 ; Section size in file          : 00001C00 (   7168.)
.text:00401000 ; Offset to raw data for section: 00000400
.text:00401000 ; Flags 60000020: Text Executable Readable
.text:00401000 ; Alignment     : default
.text:00401000 ; PDB File Name : NDAdmin.pdb
.text:00401000
.text:00401000                 .686p
.text:00401000                 .mmx
.text:00401000                 .model flat
.text:00401000
.text:00401000 ; ===========================================================================
.text:00401000
.text:00401000 ; Segment type: Pure code
.text:00401000 ; Segment permissions: Read/Execute
.text:00401000 _text           segment para public 'CODE' use32
.text:00401000                 assume cs:_text
.text:00401000                 ;org 401000h
.text:00401000                 assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
.text:00401000 ; const struct _EXCEPTION_POINTERS ExceptionInfo
.text:00401000 ExceptionInfo   _EXCEPTION_POINTERS <offset dword_403040, offset dword_403090>
.text:00401000                                         ; DATA XREF: ___report_gsfailure+102↓o
.text:00401008 __load_config_used dd 98h               ; Size
.text:0040100C                 dd 0                    ; Time stamp
.text:00401010                 dw 2 dup(0)             ; Version: 0.0
.text:00401014                 dd 0                    ; GlobalFlagsClear
.text:00401018                 dd 0                    ; GlobalFlagsSet
.text:0040101C                 dd 0                    ; CriticalSectionDefaultTimeout
.text:00401020                 dd 0                    ; DeCommitFreeBlockThreshold
.text:00401024                 dd 0                    ; DeCommitTotalFreeThreshold
.text:00401028                 dd 0                    ; LockPrefixTable
.text:0040102C                 dd 0                    ; MaximumAllocationSize
.text:00401030                 dd 0                    ; VirtualMemoryThreshold
.text:00401034                 dd 0                    ; ProcessAffinityMask
.text:00401038                 dd 0                    ; ProcessHeapFlags
.text:0040103C                 dw 0                    ; CSDVersion
.text:0040103E                 dw 0                    ; Reserved1
.text:00401040                 dd 0                    ; EditList
.text:00401044                 dd offset ___security_cookie ; SecurityCookie
.text:00401048                 dd offset ___safe_se_handler_table ; SEHandlerTable
.text:0040104C                 dd 1                    ; SEHandlerCount
.text:00401050                 dd offset ___guard_check_icall_fptr ; GuardCFCheckFunctionPointer
.text:00401054                 dd 0                    ; GuardCFDispatchFunctionPointer
.text:00401058                 dd offset ___guard_fids_table ; GuardCFFunctionTable
.text:0040105C                 dd 9                    ; GuardCFFunctionCount
.text:00401060                 dd 17500h               ; GuardFlags
.text:00401064                 dd 0Fh dup(0)
.text:004010A0 ; const _PVFV First
.text:004010A0 First           dd 0                    ; DATA XREF: start+B2↓o
.text:004010A4                 dd offset pre_cpp_init
.text:004010A8 ; const _PVFV Last
.text:004010A8 Last            dd 0                    ; DATA XREF: start+AD↓o
.text:004010AC ; const _PIFV dword_4010AC
.text:004010AC dword_4010AC    dd 0                    ; DATA XREF: start+8A↓o
.text:004010B0                 dd offset pre_c_init
.text:004010B4                 dd offset sub_402500
.text:004010B8 ; const _PIFV dword_4010B8
.text:004010B8 dword_4010B8    dd 0                    ; DATA XREF: start+85↓o
.text:004010BC ___guard_fids_table dd rva pre_c_init   ; DATA XREF: .text:00401058↑o
.text:004010C0                 dd rva pre_cpp_init
.text:004010C4                 dd rva start
.text:004010C8                 dd rva __except_handler4
.text:004010CC                 dd rva @__security_check_cookie@4 ; __security_check_cookie(x)
.text:004010D0                 dd rva ?__CxxUnhandledExceptionFilter@@YGJPAU_EXCEPTION_POINTERS@@@Z ; __CxxUnhandledExceptionFilter(_EXCEPTION_POINTERS *)
.text:004010D4                 dd rva sub_402500
.text:004010D8                 dd rva UserMathErrorFunction
.text:004010DC                 dd rva @_guard_check_icall_nop@4 ; _guard_check_icall_nop(x)
.text:004010E0 ; const WCHAR LibFileName
.text:004010E0 LibFileName:                            ; DATA XREF: sub_401470+14↓o
.text:004010E0                                         ; sub_4014F4+13↓o
.text:004010E0                 text "UTF-16LE", 'newdev.dll',0
.text:004010F6                 align 4
.text:004010F8 ; const CHAR ProcName[]
.text:004010F8 ProcName        db 'pDiDoDeviceInstallAsAdmin',0
.text:004010F8                                         ; DATA XREF: sub_401470+38↓o
.text:00401112                 align 4
.text:00401114 ; const CHAR aPdidonulldrive[]
.text:00401114 aPdidonulldrive db 'pDiDoNullDriverInstall',0
.text:00401114                                         ; DATA XREF: sub_4014F4:loc_401524↓o
.text:0040112B                 align 4
.text:0040112C ; const wchar_t Format
.text:0040112C Format:                                 ; DATA XREF: sub_401567+68↓o
.text:0040112C                 text "UTF-16LE", '%lx',0
.text:00401134 aInf:                                   ; DATA XREF: sub_401705+4C↓o
.text:00401134                 text "UTF-16LE", 'INF',0
.text:0040113C aSetupapiAppLog:                        ; DATA XREF: sub_401C22+11↓o
.text:0040113C                 text "UTF-16LE", 'setupapi.app.log',0
.text:0040115E                 align 10h
.text:00401160 aSetupapiDevLog:                        ; DATA XREF: sub_401C22+16↓o
.text:00401160                 text "UTF-16LE", 'setupapi.dev.log',0
.text:00401182                 align 4
.text:00401184 aSetupapiOfflin:                        ; DATA XREF: sub_401C22:loc_401C3F↓o
.text:00401184                 text "UTF-16LE", 'setupapi.offline.log',0
.text:004011AE                 align 10h
.text:004011B0 aSetupapiEv1:                           ; DATA XREF: sub_401CEF+21↓o
.text:004011B0                 text "UTF-16LE", 'setupapi.ev1',0
.text:004011CA                 align 4
.text:004011CC aSetupapiEv2:                           ; DATA XREF: sub_401CEF+4E↓o
.text:004011CC                 text "UTF-16LE", 'setupapi.ev2',0
.text:004011E6                 align 4
.text:004011E8 aSetupapiEv3:                           ; DATA XREF: sub_401CEF+7B↓o
.text:004011E8                 text "UTF-16LE", 'setupapi.ev3',0
.text:00401202                 align 10h
.text:00401210 ; Debug Directory entries
.text:00401210                 dd 0                    ; Characteristics
.text:00401214                 dd 7881CD7Eh            ; TimeDateStamp: Wed Jan 25 03:31:10 2034
.text:00401218                 dw 0                    ; MajorVersion
.text:0040121A                 dw 0                    ; MinorVersion
.text:0040121C                 dd 2                    ; Type: IMAGE_DEBUG_TYPE_CODEVIEW
.text:00401220                 dd 24h                  ; SizeOfData
.text:00401224                 dd rva asc_401274       ; AddressOfRawData
.text:00401228                 dd 674h                 ; PointerToRawData
.text:0040122C                 dd 0                    ; Characteristics
.text:00401230                 dd 7881CD7Eh            ; TimeDateStamp: Wed Jan 25 03:31:10 2034
.text:00401234                 dw 0                    ; MajorVersion
.text:00401236                 dw 0                    ; MinorVersion
.text:00401238                 dd 0Dh                  ; Type: IMAGE_DEBUG_TYPE_POGO
.text:0040123C                 dd 1D8h                 ; SizeOfData
.text:00401240                 dd rva aGctl            ; AddressOfRawData
.text:00401244                 dd 698h                 ; PointerToRawData
.text:00401248                 dd 0                    ; Characteristics
.text:0040124C                 dd 7881CD7Eh            ; TimeDateStamp: Wed Jan 25 03:31:10 2034
.text:00401250                 dw 0                    ; MajorVersion
.text:00401252                 dw 0                    ; MinorVersion
.text:00401254                 dd 10h                  ; Type: IMAGE_DEBUG_TYPE_REPRO
.text:00401258                 dd 0                    ; SizeOfData
.text:0040125C                 dd 0                    ; AddressOfRawData
.text:00401260                 dd 0                    ; PointerToRawData
.text:00401264                 align 10h
.text:00401270 ___safe_se_handler_table dd rva __except_handler4
.text:00401270                                         ; DATA XREF: .text:00401048↑o
.text:00401274 ; Debug information (IMAGE_DEBUG_TYPE_CODEVIEW)
.text:00401274 asc_401274      db 'RSDS'               ; DATA XREF: .text:00401224↑o
.text:00401274                                         ; CV signature
.text:00401278                 dd 57DBCCF9h            ; Data1 ; GUID
.text:00401278                 dw 0E6A5h               ; Data2
.text:00401278                 dw 0AC7Ah               ; Data3
.text:00401278                 db 7Ch, 35h, 0A9h, 46h, 2Fh, 38h, 3Ah, 0E7h; Data4
.text:00401288                 dd 1                    ; Age
.text:0040128C                 text "UTF-8", 'NDAdmin.pdb',0 ; PdbFileName
.text:00401298 ; Debug information (IMAGE_DEBUG_TYPE_POGO)
.text:00401298 aGctl           db 'GCTL',0             ; DATA XREF: .text:00401240↑o
.text:0040129D                 db 10h, 2 dup(0)
.text:004012A0                 dd 0A0h, 6164722Eh, 62246174h, 6372h, 10A0h, 4, 5452432Eh
.text:004012A0                 dd 41435824h, 0
.text:004012C4                 dd 10A4h, 4, 5452432Eh, 41435824h, 41h, 10A8h, 4, 5452432Eh
.text:004012C4                 dd 5A435824h, 0
.text:004012EC                 dd 10ACh, 4, 5452432Eh, 41495824h, 0
.text:00401300                 dd 10B0h, 4, 5452432Eh, 41495824h, 41h, 10B4h, 4, 5452432Eh
.text:00401300                 dd 59495824h, 0
.text:00401328                 dd 10B8h, 4, 5452432Eh, 5A495824h, 0
.text:0040133C                 dd 10BCh, 24h, 6966672Eh, 7364h, 10E0h, 190h, 6164722Eh
.text:0040133C                 dd 6174h, 1270h, 4, 6164722Eh, 73246174h, 74616478h, 61h
.text:0040133C                 dd 1274h, 1FCh, 6164722Eh, 7A246174h, 62647A7Ah, 67h, 1470h
.text:0040133C                 dd 1560h, 7865742Eh, 6E6D2474h, 0
.text:004013A0                 dd 29D0h, 0A4h, 6164782Eh, 78246174h, 0
.text:004013B4                 dd 3000h, 10h, 7461642Eh, 61h, 3010h, 3DCh, 7373622Eh
.text:004013B4                 dd 0
.text:004013D4                 dd 4000h, 0F8h, 6164692Eh, 35246174h, 0
.text:004013E8                 dd 40F8h, 4, 6330302Eh, 6766h, 40FCh, 64h, 6164692Eh, 32246174h
.text:004013E8                 dd 0
.text:0040140C                 dd 4160h, 14h, 6164692Eh, 33246174h, 0
.text:00401420                 dd 4174h, 0F8h, 6164692Eh, 34246174h, 0
.text:00401434                 dd 426Ch, 422h, 6164692Eh, 36246174h, 0
.text:00401448                 dd 5000h, 2D0h, 7273722Eh, 31302463h, 0
.text:0040145C                 dd 52D0h, 0C908h, 7273722Eh, 32302463h, 0
.text:00401470
.text:00401470 ; =============== S U B R O U T I N E =======================================
.text:00401470
.text:00401470 ; Attributes: bp-based frame
.text:00401470
.text:00401470 sub_401470      proc near               ; CODE XREF: sub_401567+B4↓p
.text:00401470
.text:00401470 var_C           = dword ptr -0Ch
.text:00401470 var_8           = dword ptr -8
.text:00401470 var_4           = dword ptr -4
.text:00401470 arg_0           = dword ptr  8
.text:00401470
.text:00401470                 mov     edi, edi
.text:00401472                 push    ebp
.text:00401473                 mov     ebp, esp
.text:00401475                 sub     esp, 0Ch
.text:00401478                 mov     eax, ___security_cookie
.text:0040147D                 xor     eax, ebp
.text:0040147F                 mov     [ebp+var_4], eax
.text:00401482                 push    esi
.text:00401483                 push    edi
.text:00401484                 push    offset LibFileName ; "newdev.dll"
.text:00401489                 mov     [ebp+var_8], edx
.text:0040148C                 xor     esi, esi
.text:0040148E                 mov     [ebp+var_C], ecx
.text:00401491                 call    ds:LoadLibraryW
.text:00401497                 mov     edi, eax
.text:00401499                 test    edi, edi
.text:0040149B                 jnz     short loc_4014A7
.text:0040149D                 call    ds:GetLastError
.text:004014A3                 mov     esi, eax
.text:004014A5                 jmp     short loc_4014E0
.text:004014A7 ; ---------------------------------------------------------------------------
.text:004014A7
.text:004014A7 loc_4014A7:                             ; CODE XREF: sub_401470+2B↑j
.text:004014A7                 push    ebx
.text:004014A8                 push    offset ProcName ; "pDiDoDeviceInstallAsAdmin"
.text:004014AD                 push    edi             ; hModule
.text:004014AE                 call    ds:GetProcAddress
.text:004014B4                 mov     ebx, eax
.text:004014B6                 test    ebx, ebx
.text:004014B8                 jnz     short loc_4014C4
.text:004014BA                 call    ds:GetLastError
.text:004014C0                 mov     esi, eax
.text:004014C2                 jmp     short loc_4014D8
.text:004014C4 ; ---------------------------------------------------------------------------
.text:004014C4
.text:004014C4 loc_4014C4:                             ; CODE XREF: sub_401470+48↑j
.text:004014C4                 push    [ebp+arg_0]
.text:004014C7                 mov     ecx, ebx
.text:004014C9                 push    [ebp+var_8]
.text:004014CC                 push    [ebp+var_C]
.text:004014CF                 push    esi
.text:004014D0                 call    ds:___guard_check_icall_fptr ; _guard_check_icall_nop(x)
.text:004014D6                 call    ebx
.text:004014D8
.text:004014D8 loc_4014D8:                             ; CODE XREF: sub_401470+52↑j
.text:004014D8                 push    edi             ; hLibModule
.text:004014D9                 call    ds:FreeLibrary
.text:004014DF                 pop     ebx
.text:004014E0
.text:004014E0 loc_4014E0:                             ; CODE XREF: sub_401470+35↑j
.text:004014E0                 mov     ecx, [ebp+var_4]
.text:004014E3                 mov     eax, esi
.text:004014E5                 pop     edi
.text:004014E6                 xor     ecx, ebp        ; StackCookie
.text:004014E8                 pop     esi
.text:004014E9                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text:004014EE                 mov     esp, ebp
.text:004014F0                 pop     ebp
.text:004014F1                 retn    4
.text:004014F1 sub_401470      endp
.text:004014F1
.text:004014F4
.text:004014F4 ; =============== S U B R O U T I N E =======================================
.text:004014F4
.text:004014F4 ; Attributes: bp-based frame
.text:004014F4
.text:004014F4 sub_4014F4      proc near               ; CODE XREF: sub_401567+9E↓p
.text:004014F4
.text:004014F4 var_4           = dword ptr -4
.text:004014F4
.text:004014F4                 mov     edi, edi
.text:004014F6                 push    ebp
.text:004014F7                 mov     ebp, esp
.text:004014F9                 push    ecx
.text:004014FA                 mov     eax, ___security_cookie
.text:004014FF                 xor     eax, ebp
.text:00401501                 mov     [ebp+var_4], eax
.text:00401504                 push    ebx
.text:00401505                 push    esi
.text:00401506                 push    edi
.text:00401507                 push    offset LibFileName ; "newdev.dll"
.text:0040150C                 mov     ebx, ecx
.text:0040150E                 call    ds:LoadLibraryW
.text:00401514                 mov     edi, eax
.text:00401516                 test    edi, edi
.text:00401518                 jnz     short loc_401524
.text:0040151A                 call    ds:GetLastError
.text:00401520                 mov     esi, eax
.text:00401522                 jmp     short loc_401554
.text:00401524 ; ---------------------------------------------------------------------------
.text:00401524
.text:00401524 loc_401524:                             ; CODE XREF: sub_4014F4+24↑j
.text:00401524                 push    offset aPdidonulldrive ; "pDiDoNullDriverInstall"
.text:00401529                 push    edi             ; hModule
.text:0040152A                 call    ds:GetProcAddress
.text:00401530                 mov     esi, eax
.text:00401532                 test    esi, esi
.text:00401534                 jnz     short loc_40153E
.text:00401536                 call    ds:GetLastError
.text:0040153C                 jmp     short loc_40154B
.text:0040153E ; ---------------------------------------------------------------------------
.text:0040153E
.text:0040153E loc_40153E:                             ; CODE XREF: sub_4014F4+40↑j
.text:0040153E                 push    ebx
.text:0040153F                 push    0
.text:00401541                 mov     ecx, esi
.text:00401543                 call    ds:___guard_check_icall_fptr ; _guard_check_icall_nop(x)
.text:00401549                 call    esi
.text:0040154B
.text:0040154B loc_40154B:                             ; CODE XREF: sub_4014F4+48↑j
.text:0040154B                 mov     esi, eax
.text:0040154D                 push    edi             ; hLibModule
.text:0040154E                 call    ds:FreeLibrary
.text:00401554
.text:00401554 loc_401554:                             ; CODE XREF: sub_4014F4+2E↑j
.text:00401554                 mov     ecx, [ebp+var_4]
.text:00401557                 mov     eax, esi
.text:00401559                 pop     edi
.text:0040155A                 pop     esi
.text:0040155B                 xor     ecx, ebp        ; StackCookie
.text:0040155D                 pop     ebx
.text:0040155E                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text:00401563                 mov     esp, ebp
.text:00401565                 pop     ebp
.text:00401566                 retn
.text:00401566 sub_4014F4      endp
.text:00401566
.text:00401567
.text:00401567 ; =============== S U B R O U T I N E =======================================
.text:00401567
.text:00401567 ; Attributes: noreturn bp-based frame
.text:00401567
.text:00401567 sub_401567      proc near               ; CODE XREF: start+147↓p
.text:00401567
.text:00401567 Status          = dword ptr -28h
.text:00401567 var_24          = dword ptr -24h
.text:00401567 pNumArgs        = dword ptr -20h
.text:00401567 var_1C          = dword ptr -1Ch
.text:00401567 ms_exc          = CPPEH_RECORD ptr -18h
.text:00401567
.text:00401567 ; __unwind { // __SEH_prolog4
.text:00401567                 push    18h
.text:00401569                 push    offset stru_4029D0
.text:0040156E                 call    __SEH_prolog4
.text:00401573                 xor     edi, edi
.text:00401575                 mov     [ebp+var_24], edi
.text:00401578                 push    edi             ; HeapInformationLength
.text:00401579                 push    edi             ; HeapInformation
.text:0040157A                 push    1               ; HeapInformationClass
.text:0040157C                 push    edi             ; HeapHandle
.text:0040157D                 call    ds:HeapSetInformation
.text:00401583                 call    sub_4017AC
.text:00401588                 test    eax, eax
.text:0040158A                 jnz     short loc_401599
.text:0040158C                 call    ds:GetLastError
.text:00401592                 mov     esi, eax
.text:00401594                 jmp     loc_401648
.text:00401599 ; ---------------------------------------------------------------------------
.text:00401599
.text:00401599 loc_401599:                             ; CODE XREF: sub_401567+23↑j
.text:00401599                 call    _pSetupIsUserAdmin@0 ; pSetupIsUserAdmin()
.text:0040159E                 test    eax, eax
.text:004015A0                 jnz     short loc_4015AA
.text:004015A2                 push    5
.text:004015A4
.text:004015A4 loc_4015A4:                             ; CODE XREF: sub_401567+4F↓j
.text:004015A4                 pop     esi
.text:004015A5                 jmp     loc_401648
.text:004015AA ; ---------------------------------------------------------------------------
.text:004015AA
.text:004015AA loc_4015AA:                             ; CODE XREF: sub_401567+39↑j
.text:004015AA                 call    ds:GetCommandLineW
.text:004015B0                 test    eax, eax
.text:004015B2                 jnz     short loc_4015B8
.text:004015B4
.text:004015B4 loc_4015B4:                             ; CODE XREF: sub_401567+62↓j
.text:004015B4                                         ; sub_401567+7C↓j
.text:004015B4                 push    57h ; 'W'
.text:004015B6                 jmp     short loc_4015A4
.text:004015B8 ; ---------------------------------------------------------------------------
.text:004015B8
.text:004015B8 loc_4015B8:                             ; CODE XREF: sub_401567+4B↑j
.text:004015B8                 lea     ecx, [ebp+pNumArgs]
.text:004015BB                 push    ecx             ; pNumArgs
.text:004015BC                 push    eax             ; lpCmdLine
.text:004015BD                 call    ds:CommandLineToArgvW
.text:004015C3                 mov     esi, eax
.text:004015C5                 cmp     [ebp+pNumArgs], 2
.text:004015C9                 jl      short loc_4015B4
.text:004015CB                 lea     eax, [ebp+var_24]
.text:004015CE                 push    eax
.text:004015CF                 push    offset Format   ; "%lx"
.text:004015D4                 push    dword ptr [esi+4] ; Buffer
.text:004015D7                 call    ds:swscanf
.text:004015DD                 add     esp, 0Ch
.text:004015E0                 cmp     eax, 1
.text:004015E3                 jnz     short loc_4015B4
.text:004015E5 ;   __try { // __except at loc_401630
.text:004015E5                 mov     [ebp+ms_exc.registration.TryLevel], edi
.text:004015E8                 mov     eax, [ebp+var_24]
.text:004015EB                 dec     eax
.text:004015EC                 sub     eax, 1
.text:004015EF                 jz      short loc_40160C
.text:004015F1                 dec     eax
.text:004015F2                 sub     eax, 1
.text:004015F5                 jnz     short loc_4015FD
.text:004015F7                 cmp     [ebp+pNumArgs], 3
.text:004015FB                 jz      short loc_401602
.text:004015FD
.text:004015FD loc_4015FD:                             ; CODE XREF: sub_401567+8E↑j
.text:004015FD                                         ; sub_401567+A9↓j
.text:004015FD                 push    57h ; 'W'
.text:004015FF                 pop     esi
.text:00401600                 jmp     short loc_40163E
.text:00401602 ; ---------------------------------------------------------------------------
.text:00401602
.text:00401602 loc_401602:                             ; CODE XREF: sub_401567+94↑j
.text:00401602                 mov     ecx, [esi+8]
.text:00401605                 call    sub_4014F4
.text:0040160A                 jmp     short loc_40163C
.text:0040160C ; ---------------------------------------------------------------------------
.text:0040160C
.text:0040160C loc_40160C:                             ; CODE XREF: sub_401567+88↑j
.text:0040160C                 cmp     [ebp+pNumArgs], 5
.text:00401610                 jnz     short loc_4015FD
.text:00401612                 push    dword ptr [esi+10h]
.text:00401615                 mov     edx, [esi+0Ch]
.text:00401618                 mov     ecx, [esi+8]
.text:0040161B                 call    sub_401470
.text:00401620                 jmp     short loc_40163C
.text:00401622 ; ---------------------------------------------------------------------------
.text:00401622
.text:00401622 loc_401622:                             ; DATA XREF: .text:stru_4029D0↓o
.text:00401622 ;   __except filter // owned by 4015E5
.text:00401622                 mov     eax, [ebp+ms_exc.exc_ptr]
.text:00401625                 mov     eax, [eax]
.text:00401627                 mov     eax, [eax]
.text:00401629                 mov     [ebp+Status], eax
.text:0040162C                 xor     eax, eax
.text:0040162E                 inc     eax
.text:0040162F                 retn
.text:00401630 ; ---------------------------------------------------------------------------
.text:00401630
.text:00401630 loc_401630:                             ; DATA XREF: .text:stru_4029D0↓o
.text:00401630 ;   __except(loc_401622) // owned by 4015E5
.text:00401630                 mov     esp, [ebp+ms_exc.old_esp]
.text:00401633                 push    [ebp+Status]    ; Status
.text:00401636                 call    ds:RtlNtStatusToDosError
.text:0040163C
.text:0040163C loc_40163C:                             ; CODE XREF: sub_401567+A3↑j
.text:0040163C                                         ; sub_401567+B9↑j
.text:0040163C                 mov     esi, eax
.text:0040163E
.text:0040163E loc_40163E:                             ; CODE XREF: sub_401567+99↑j
.text:0040163E                 mov     [ebp+var_1C], esi
.text:0040163E ;   } // starts at 4015E5
.text:00401641                 mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
.text:00401648
.text:00401648 loc_401648:                             ; CODE XREF: sub_401567+2D↑j
.text:00401648                                         ; sub_401567+3E↑j
.text:00401648                 call    sub_401831
.text:0040164D                 push    esi             ; uExitCode
.text:0040164E                 call    ds:ExitProcess
.text:0040164E ; } // starts at 401567
.text:0040164E sub_401567      endp
.text:0040164E
.text:0040164E ; ---------------------------------------------------------------------------
.text:00401654                 db 0CCh
.text:00401655
.text:00401655 ; =============== S U B R O U T I N E =======================================
.text:00401655
.text:00401655
.text:00401655 sub_401655      proc near               ; CODE XREF: sub_4017AC+B↓p
.text:00401655                                         ; sub_401831+1B↓p
.text:00401655                 mov     edi, edi
.text:00401657                 push    ebx
.text:00401658                 push    esi
.text:00401659                 mov     esi, ecx
.text:0040165B                 xor     ebx, ebx
.text:0040165D                 push    edi
.text:0040165E                 mov     edx, esi
.text:00401660                 mov     edi, offset dword_40335C
.text:00401665                 xor     eax, eax
.text:00401667                 mov     [esi+8], ebx
.text:0040166A                 mov     [esi+4], ebx
.text:0040166D                 mov     [esi], ebx
.text:0040166F                 lock cmpxchg [edi], edx
.text:00401673                 test    eax, eax
.text:00401675                 jnz     short loc_40167A
.text:00401677                 inc     eax
.text:00401678                 jmp     short loc_4016C5
.text:0040167A ; ---------------------------------------------------------------------------
.text:0040167A
.text:0040167A loc_40167A:                             ; CODE XREF: sub_401655+20↑j
.text:0040167A                 push    ebx             ; lpName
.text:0040167B                 push    ebx             ; bInitialState
.text:0040167C                 push    ebx             ; bManualReset
.text:0040167D                 push    ebx             ; lpEventAttributes
.text:0040167E                 call    ds:CreateEventW
.text:00401684                 mov     [esi], eax
.text:00401686                 test    eax, eax
.text:00401688                 jz      short loc_4016C5
.text:0040168A
.text:0040168A loc_40168A:                             ; CODE XREF: sub_401655+48↓j
.text:0040168A                 mov     edx, dword_40335C
.text:00401690                 mov     ecx, esi
.text:00401692                 mov     [esi+4], edx
.text:00401695                 mov     eax, edx
.text:00401697                 lock cmpxchg [edi], ecx
.text:0040169B                 cmp     edx, eax
.text:0040169D                 jnz     short loc_40168A
.text:0040169F                 test    edx, edx
.text:004016A1                 jz      short loc_4016B2
.text:004016A3                 push    ebx             ; bAlertable
.text:004016A4                 push    0FFFFFFFFh      ; dwMilliseconds
.text:004016A6                 push    dword ptr [esi] ; hHandle
.text:004016A8                 call    ds:WaitForSingleObjectEx
.text:004016AE                 mov     edi, eax
.text:004016B0                 jmp     short loc_4016B4
.text:004016B2 ; ---------------------------------------------------------------------------
.text:004016B2
.text:004016B2 loc_4016B2:                             ; CODE XREF: sub_401655+4C↑j
.text:004016B2                 mov     edi, ebx
.text:004016B4
.text:004016B4 loc_4016B4:                             ; CODE XREF: sub_401655+5B↑j
.text:004016B4                 push    dword ptr [esi] ; hObject
.text:004016B6                 call    ds:CloseHandle
.text:004016BC                 xor     eax, eax
.text:004016BE                 mov     [esi], ebx
.text:004016C0                 test    edi, edi
.text:004016C2                 setz    al
.text:004016C5
.text:004016C5 loc_4016C5:                             ; CODE XREF: sub_401655+23↑j
.text:004016C5                                         ; sub_401655+33↑j
.text:004016C5                 pop     edi
.text:004016C6                 pop     esi
.text:004016C7                 pop     ebx
.text:004016C8                 retn
.text:004016C8 sub_401655      endp
.text:004016C8
.text:004016C9
.text:004016C9 ; =============== S U B R O U T I N E =======================================
.text:004016C9
.text:004016C9
.text:004016C9 sub_4016C9      proc near               ; CODE XREF: sub_4017AC+76↓p
.text:004016C9                                         ; sub_401831+92↓p
.text:004016C9                 mov     edi, edi
.text:004016CB                 push    esi
.text:004016CC                 mov     esi, ecx
.text:004016CE                 xor     edx, edx
.text:004016D0                 mov     ecx, offset dword_40335C
.text:004016D5                 mov     eax, esi
.text:004016D7                 lock cmpxchg [ecx], edx
.text:004016DB                 mov     edx, eax
.text:004016DD                 cmp     edx, esi
.text:004016DF                 jz      short loc_401703
.text:004016E1                 cmp     dword ptr [esi+8], 0
.text:004016E5                 jnz     short loc_4016F4
.text:004016E7
.text:004016E7 loc_4016E7:                             ; CODE XREF: sub_4016C9+29↓j
.text:004016E7                 mov     eax, [edx+4]
.text:004016EA                 mov     [eax+8], edx
.text:004016ED                 mov     edx, [edx+4]
.text:004016F0                 cmp     edx, esi
.text:004016F2                 jnz     short loc_4016E7
.text:004016F4
.text:004016F4 loc_4016F4:                             ; CODE XREF: sub_4016C9+1C↑j
.text:004016F4                 mov     eax, [esi+8]
.text:004016F7                 push    dword ptr [eax] ; hEvent
.text:004016F9                 and     dword ptr [eax+4], 0
.text:004016FD                 call    ds:SetEvent
.text:00401703
.text:00401703 loc_401703:                             ; CODE XREF: sub_4016C9+16↑j
.text:00401703                 pop     esi
.text:00401704                 retn
.text:00401704 sub_4016C9      endp
.text:00401704
.text:00401705
.text:00401705 ; =============== S U B R O U T I N E =======================================
.text:00401705
.text:00401705 ; Attributes: bp-based frame
.text:00401705
.text:00401705 sub_401705      proc near               ; CODE XREF: sub_4018CF+6F↓p
.text:00401705
.text:00401705 var_20C         = byte ptr -20Ch
.text:00401705 var_4           = dword ptr -4
.text:00401705
.text:00401705                 mov     edi, edi
.text:00401707                 push    ebp
.text:00401708                 mov     ebp, esp
.text:0040170A                 sub     esp, 210h
.text:00401710                 mov     eax, ___security_cookie
.text:00401715                 xor     eax, ebp
.text:00401717                 mov     [ebp+var_4], eax
.text:0040171A                 mov     eax, lpMem
.text:0040171F                 push    esi
.text:00401720                 xor     esi, esi
.text:00401722                 push    edi
.text:00401723                 mov     edi, dword_40300C
.text:00401729                 test    eax, eax
.text:0040172B                 jnz     short loc_401732
.text:0040172D                 push    57h ; 'W'
.text:0040172F                 pop     esi
.text:00401730                 jmp     short loc_40178E
.text:00401732 ; ---------------------------------------------------------------------------
.text:00401732
.text:00401732 loc_401732:                             ; CODE XREF: sub_401705+26↑j
.text:00401732                 push    ebx
.text:00401733                 mov     ebx, 104h
.text:00401738                 lea     ecx, [ebp+var_20C]
.text:0040173E                 push    eax
.text:0040173F                 mov     edx, ebx
.text:00401741                 call    ?StringCchCopyW@@YGJPAGIPBG@Z_0 ; StringCchCopyW(ushort *,uint,ushort const *)
.text:00401746                 test    eax, eax
.text:00401748                 jns     short loc_40174F
.text:0040174A                 push    57h ; 'W'
.text:0040174C                 pop     esi
.text:0040174D                 jmp     short loc_40178D
.text:0040174F ; ---------------------------------------------------------------------------
.text:0040174F
.text:0040174F loc_40174F:                             ; CODE XREF: sub_401705+43↑j
.text:0040174F                 push    ecx
.text:00401750                 push    ebx
.text:00401751                 mov     edx, offset aInf ; "INF"
.text:00401756                 lea     ecx, [ebp+var_20C]
.text:0040175C                 call    sub_401B3A
.text:00401761                 test    eax, eax
.text:00401763                 jz      short loc_401785
.text:00401765                 mov     edx, edi
.text:00401767                 lea     ecx, [ebp+var_20C]
.text:0040176D                 call    sub_401C22
.text:00401772                 test    eax, eax
.text:00401774                 jz      short loc_401785
.text:00401776                 lea     ecx, [ebp+var_20C]
.text:0040177C                 call    sub_401CEF
.text:00401781                 test    eax, eax
.text:00401783                 jnz     short loc_40178D
.text:00401785
.text:00401785 loc_401785:                             ; CODE XREF: sub_401705+5E↑j
.text:00401785                                         ; sub_401705+6F↑j
.text:00401785                 call    ds:GetLastError
.text:0040178B                 mov     esi, eax
.text:0040178D
.text:0040178D loc_40178D:                             ; CODE XREF: sub_401705+48↑j
.text:0040178D                                         ; sub_401705+7E↑j
.text:0040178D                 pop     ebx
.text:0040178E
.text:0040178E loc_40178E:                             ; CODE XREF: sub_401705+2B↑j
.text:0040178E                 push    esi             ; dwErrCode
.text:0040178F                 call    ds:SetLastError
.text:00401795                 mov     ecx, [ebp+var_4]
.text:00401798                 xor     eax, eax
.text:0040179A                 test    esi, esi
.text:0040179C                 pop     edi
.text:0040179D                 setz    al
.text:004017A0                 xor     ecx, ebp        ; StackCookie
.text:004017A2                 pop     esi
.text:004017A3                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text:004017A8                 mov     esp, ebp
.text:004017AA                 pop     ebp
.text:004017AB                 retn
.text:004017AB sub_401705      endp
.text:004017AB
.text:004017AC
.text:004017AC ; =============== S U B R O U T I N E =======================================
.text:004017AC
.text:004017AC ; Attributes: bp-based frame
.text:004017AC
.text:004017AC sub_4017AC      proc near               ; CODE XREF: sub_401567+1C↑p
.text:004017AC
.text:004017AC var_C           = byte ptr -0Ch
.text:004017AC
.text:004017AC                 mov     edi, edi
.text:004017AE                 push    ebp
.text:004017AF                 mov     ebp, esp
.text:004017B1                 sub     esp, 0Ch
.text:004017B4                 lea     ecx, [ebp+var_C]
.text:004017B7                 call    sub_401655
.text:004017BC                 test    eax, eax
.text:004017BE                 jz      short loc_40182D
.text:004017C0                 mov     eax, dword_40336C
.text:004017C5                 push    esi
.text:004017C6                 xor     esi, esi
.text:004017C8                 inc     eax
.text:004017C9                 inc     esi
.text:004017CA                 mov     dword_40336C, eax
.text:004017CF                 cmp     eax, esi
.text:004017D1                 jnz     short loc_40181F
.text:004017D3                 call    ds:GetProcessHeap
.text:004017D9                 mov     hHeap, eax
.text:004017DE                 test    eax, eax
.text:004017E0                 jz      short loc_4017F9
.text:004017E2                 mov     dword_4033D0, esi
.text:004017E8                 call    sub_4018CF
.text:004017ED                 test    eax, eax
.text:004017EF                 jz      short loc_4017F9
.text:004017F1                 mov     dword_403368, esi
.text:004017F7                 jmp     short loc_4017FF
.text:004017F9 ; ---------------------------------------------------------------------------
.text:004017F9
.text:004017F9 loc_4017F9:                             ; CODE XREF: sub_4017AC+34↑j
.text:004017F9                                         ; sub_4017AC+43↑j
.text:004017F9                 mov     esi, dword_403368
.text:004017FF
.text:004017FF loc_4017FF:                             ; CODE XREF: sub_4017AC+4B↑j
.text:004017FF                 test    esi, esi
.text:00401801                 jnz     short loc_40181F
.text:00401803                 mov     ecx, lpMem      ; lpMem
.text:00401809                 test    ecx, ecx
.text:0040180B                 jz      short loc_401818
.text:0040180D                 call    sub_401D98
.text:00401812                 and     lpMem, esi
.text:00401818
.text:00401818 loc_401818:                             ; CODE XREF: sub_4017AC+5F↑j
.text:00401818                 and     dword_4033D0, 0
.text:0040181F
.text:0040181F loc_40181F:                             ; CODE XREF: sub_4017AC+25↑j
.text:0040181F                                         ; sub_4017AC+55↑j
.text:0040181F                 lea     ecx, [ebp+var_C]
.text:00401822                 call    sub_4016C9
.text:00401827                 mov     eax, dword_403368
.text:0040182C                 pop     esi
.text:0040182D
.text:0040182D loc_40182D:                             ; CODE XREF: sub_4017AC+12↑j
.text:0040182D                 mov     esp, ebp
.text:0040182F                 pop     ebp
.text:00401830                 retn
.text:00401830 sub_4017AC      endp
.text:00401830
.text:00401831
.text:00401831 ; =============== S U B R O U T I N E =======================================
.text:00401831
.text:00401831 ; Attributes: bp-based frame
.text:00401831
.text:00401831 sub_401831      proc near               ; CODE XREF: sub_401567:loc_401648↑p
.text:00401831
.text:00401831 var_C           = byte ptr -0Ch
.text:00401831
.text:00401831                 mov     edi, edi
.text:00401833                 push    ebp
.text:00401834                 mov     ebp, esp
.text:00401836                 sub     esp, 0Ch
.text:00401839                 cmp     dword_403368, 0
.text:00401840                 jnz     short loc_401849
.text:00401842
.text:00401842 loc_401842:                             ; CODE XREF: sub_401831+22↓j
.text:00401842                 xor     eax, eax
.text:00401844                 jmp     loc_4018CB
.text:00401849 ; ---------------------------------------------------------------------------
.text:00401849
.text:00401849 loc_401849:                             ; CODE XREF: sub_401831+F↑j
.text:00401849                 lea     ecx, [ebp+var_C]
.text:0040184C                 call    sub_401655
.text:00401851                 test    eax, eax
.text:00401853                 jz      short loc_401842
.text:00401855                 sub     dword_40336C, 1
.text:0040185C                 jnz     short loc_4018C0
.text:0040185E                 push    esi
.text:0040185F                 xor     esi, esi
.text:00401861                 cmp     dword_403360, esi
.text:00401867                 jz      short loc_40189E
.text:00401869                 call    sub_401CA9
.text:0040186E                 mov     ecx, dword_4033A8 ; lpMem
.text:00401874                 test    ecx, ecx
.text:00401876                 jz      short loc_401883
.text:00401878                 call    sub_401D98
.text:0040187D                 mov     dword_4033A8, esi
.text:00401883
.text:00401883 loc_401883:                             ; CODE XREF: sub_401831+45↑j
.text:00401883                 mov     ecx, dword_403380 ; lpMem
.text:00401889                 test    ecx, ecx
.text:0040188B                 jz      short loc_401898
.text:0040188D                 call    sub_401D98
.text:00401892                 mov     dword_403380, esi
.text:00401898
.text:00401898 loc_401898:                             ; CODE XREF: sub_401831+5A↑j
.text:00401898                 mov     dword_403360, esi
.text:0040189E
.text:0040189E loc_40189E:                             ; CODE XREF: sub_401831+36↑j
.text:0040189E                 mov     ecx, lpMem      ; lpMem
.text:004018A4                 test    ecx, ecx
.text:004018A6                 jz      short loc_4018B3
.text:004018A8                 call    sub_401D98
.text:004018AD                 mov     lpMem, esi
.text:004018B3
.text:004018B3 loc_4018B3:                             ; CODE XREF: sub_401831+75↑j
.text:004018B3                 mov     dword_4033D0, esi
.text:004018B9                 mov     dword_403368, esi
.text:004018BF                 pop     esi
.text:004018C0
.text:004018C0 loc_4018C0:                             ; CODE XREF: sub_401831+2B↑j
.text:004018C0                 lea     ecx, [ebp+var_C]
.text:004018C3                 call    sub_4016C9
.text:004018C8                 xor     eax, eax
.text:004018CA                 inc     eax
.text:004018CB
.text:004018CB loc_4018CB:                             ; CODE XREF: sub_401831+13↑j
.text:004018CB                 mov     esp, ebp
.text:004018CD                 pop     ebp
.text:004018CE                 retn
.text:004018CE sub_401831      endp
.text:004018CE
.text:004018CF
.text:004018CF ; =============== S U B R O U T I N E =======================================
.text:004018CF
.text:004018CF ; Attributes: bp-based frame
.text:004018CF
.text:004018CF sub_4018CF      proc near               ; CODE XREF: sub_4017AC+3C↑p
.text:004018CF
.text:004018CF Buffer          = word ptr -24Ch
.text:004018CF var_4           = dword ptr -4
.text:004018CF
.text:004018CF                 mov     edi, edi
.text:004018D1                 push    ebp
.text:004018D2                 mov     ebp, esp
.text:004018D4                 sub     esp, 24Ch
.text:004018DA                 mov     eax, ___security_cookie
.text:004018DF                 xor     eax, ebp
.text:004018E1                 mov     [ebp+var_4], eax
.text:004018E4                 mov     ecx, lpMem      ; lpMem
.text:004018EA                 push    ebx
.text:004018EB                 push    esi
.text:004018EC                 xor     esi, esi
.text:004018EE                 test    ecx, ecx
.text:004018F0                 jz      short loc_4018FD
.text:004018F2                 call    sub_401D98
.text:004018F7                 mov     lpMem, esi
.text:004018FD
.text:004018FD loc_4018FD:                             ; CODE XREF: sub_4018CF+21↑j
.text:004018FD                 mov     ebx, 104h
.text:00401902                 mov     dword_40300C, 1
.text:0040190C                 push    ebx             ; uSize
.text:0040190D                 lea     eax, [ebp+Buffer]
.text:00401913                 push    eax             ; lpBuffer
.text:00401914                 call    ds:GetSystemWindowsDirectoryW
.text:0040191A                 test    eax, eax
.text:0040191C                 jz      short loc_40194A
.text:0040191E                 cmp     eax, ebx
.text:00401920                 ja      short loc_40194A
.text:00401922                 lea     ecx, [ebp+Buffer]
.text:00401928                 call    sub_401AD3
.text:0040192D                 mov     lpMem, eax
.text:00401932                 test    eax, eax
.text:00401934                 jz      short loc_40194A
.text:00401936                 cmp     dword_403360, esi
.text:0040193C                 jz      short loc_401947
.text:0040193E                 call    sub_401705
.text:00401943                 test    eax, eax
.text:00401945                 jz      short loc_40194A
.text:00401947
.text:00401947 loc_401947:                             ; CODE XREF: sub_4018CF+6D↑j
.text:00401947                 xor     esi, esi
.text:00401949                 inc     esi
.text:0040194A
.text:0040194A loc_40194A:                             ; CODE XREF: sub_4018CF+4D↑j
.text:0040194A                                         ; sub_4018CF+51↑j ...
.text:0040194A                 mov     ecx, [ebp+var_4]
.text:0040194D                 mov     eax, esi
.text:0040194F                 pop     esi
.text:00401950                 xor     ecx, ebp        ; StackCookie
.text:00401952                 pop     ebx
.text:00401953                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text:00401958                 mov     esp, ebp
.text:0040195A                 pop     ebp
.text:0040195B                 retn
.text:0040195B sub_4018CF      endp
.text:0040195B
.text:0040195C
.text:0040195C ; =============== S U B R O U T I N E =======================================
.text:0040195C
.text:0040195C
.text:0040195C sub_40195C      proc near               ; CODE XREF: sub_401DDF+DF↓p
.text:0040195C                 cmp     ecx, 0E0000300h
.text:00401962                 jz      short loc_401970
.text:00401964                 cmp     ecx, 0C0000194h
.text:0040196A                 jz      short loc_401970
.text:0040196C                 xor     eax, eax
.text:0040196E                 inc     eax
.text:0040196F                 retn
.text:00401970 ; ---------------------------------------------------------------------------
.text:00401970
.text:00401970 loc_401970:                             ; CODE XREF: sub_40195C+6↑j
.text:00401970                                         ; sub_40195C+E↑j
.text:00401970                 xor     eax, eax
.text:00401972                 retn
.text:00401972 sub_40195C      endp
.text:00401972
.text:00401973
.text:00401973 ; =============== S U B R O U T I N E =======================================
.text:00401973
.text:00401973 ; Attributes: bp-based frame
.text:00401973
.text:00401973 ; int __thiscall sub_401973(NTSTATUS Status, int)
.text:00401973 sub_401973      proc near               ; CODE XREF: sub_401DDF+EC↓p
.text:00401973                 mov     edi, edi
.text:00401975                 push    ebp
.text:00401976                 mov     ebp, esp
.text:00401978                 push    ecx
.text:00401979                 cmp     ecx, 0C00000FDh
.text:0040197F                 jnz     short loc_40199C
.text:00401981                 call    ds:_resetstkoflw
.text:00401987                 test    eax, eax
.text:00401989                 jnz     short loc_4019B3
.text:0040198B                 push    eax             ; lpArguments
.text:0040198C                 push    eax             ; nNumberOfArguments
.text:0040198D                 push    1               ; dwExceptionFlags
.text:0040198F                 push    0E0000300h      ; dwExceptionCode
.text:00401994                 call    ds:RaiseException
.text:0040199A                 jmp     short loc_4019B3
.text:0040199C ; ---------------------------------------------------------------------------
.text:0040199C
.text:0040199C loc_40199C:                             ; CODE XREF: sub_401973+C↑j
.text:0040199C                 cmp     ecx, 0C0000005h
.text:004019A2                 jz      short loc_4019B3
.text:004019A4                 cmp     ecx, 0C0000006h
.text:004019AA                 jz      short loc_4019B3
.text:004019AC                 push    ecx             ; Status
.text:004019AD                 call    ds:RtlNtStatusToDosError
.text:004019B3
.text:004019B3 loc_4019B3:                             ; CODE XREF: sub_401973+16↑j
.text:004019B3                                         ; sub_401973+27↑j ...
.text:004019B3                 mov     esp, ebp
.text:004019B5                 pop     ebp
.text:004019B6                 retn    4
.text:004019B6 sub_401973      endp
.text:004019B6
.text:004019B9
.text:004019B9 ; =============== S U B R O U T I N E =======================================
.text:004019B9
.text:004019B9 ; Attributes: bp-based frame info_from_lumina
.text:004019B9
.text:004019B9 ; HRESULT __stdcall StringCchCopyW(STRSAFE_LPWSTR pszDest, size_t cchDest, STRSAFE_LPCWSTR pszSrc)
.text:004019B9 ?StringCchCopyW@@YGJPAGIPBG@Z_0 proc near
.text:004019B9                                         ; CODE XREF: sub_401705+3C↑p
.text:004019B9                                         ; sub_401AD3+4C↓p ...
.text:004019B9
.text:004019B9 arg_0           = dword ptr  8
.text:004019B9 cchDest         = byte ptr  0Ch
.text:004019B9
.text:004019B9                 mov     edi, edi
.text:004019BB                 push    ebp
.text:004019BC                 mov     ebp, esp
.text:004019BE                 push    esi
.text:004019BF                 xor     esi, esi
.text:004019C1                 test    edx, edx
.text:004019C3                 jz      short loc_4019CD
.text:004019C5                 cmp     edx, 7FFFFFFFh
.text:004019CB                 jbe     short loc_4019D2
.text:004019CD
.text:004019CD loc_4019CD:                             ; CODE XREF: StringCchCopyW(ushort *,uint,ushort const *)+A↑j
.text:004019CD                 mov     esi, 80070057h
.text:004019D2
.text:004019D2 loc_4019D2:                             ; CODE XREF: StringCchCopyW(ushort *,uint,ushort const *)+12↑j
.text:004019D2                 test    esi, esi
.text:004019D4                 js      short loc_401A15
.text:004019D6                 xor     esi, esi
.text:004019D8                 test    edx, edx
.text:004019DA                 jz      short loc_401A0B
.text:004019DC                 push    ebx
.text:004019DD                 mov     ebx, [ebp+arg_0]
.text:004019E0                 push    edi
.text:004019E1                 mov     edi, 7FFFFFFEh
.text:004019E6                 sub     edi, edx
.text:004019E8                 sub     ebx, ecx
.text:004019EA
.text:004019EA loc_4019EA:                             ; CODE XREF: StringCchCopyW(ushort *,uint,ushort const *)+4A↓j
.text:004019EA                 lea     eax, [edi+edx]
.text:004019ED                 test    eax, eax
.text:004019EF                 jz      short loc_401A05
.text:004019F1                 movzx   eax, word ptr [ebx+ecx]
.text:004019F5                 test    ax, ax
.text:004019F8                 jz      short loc_401A05
.text:004019FA                 mov     [ecx], ax
.text:004019FD                 add     ecx, 2
.text:00401A00                 sub     edx, 1
.text:00401A03                 jnz     short loc_4019EA
.text:00401A05
.text:00401A05 loc_401A05:                             ; CODE XREF: StringCchCopyW(ushort *,uint,ushort const *)+36↑j
.text:00401A05                                         ; StringCchCopyW(ushort *,uint,ushort const *)+3F↑j
.text:00401A05                 pop     edi
.text:00401A06                 pop     ebx
.text:00401A07                 test    edx, edx
.text:00401A09                 jnz     short loc_401A19
.text:00401A0B
.text:00401A0B loc_401A0B:                             ; CODE XREF: StringCchCopyW(ushort *,uint,ushort const *)+21↑j
.text:00401A0B                 sub     ecx, 2
.text:00401A0E                 mov     esi, 8007007Ah
.text:00401A13                 jmp     short loc_401A19
.text:00401A15 ; ---------------------------------------------------------------------------
.text:00401A15
.text:00401A15 loc_401A15:                             ; CODE XREF: StringCchCopyW(ushort *,uint,ushort const *)+1B↑j
.text:00401A15                 test    edx, edx
.text:00401A17                 jz      short loc_401A1E
.text:00401A19
.text:00401A19 loc_401A19:                             ; CODE XREF: StringCchCopyW(ushort *,uint,ushort const *)+50↑j
.text:00401A19                                         ; StringCchCopyW(ushort *,uint,ushort const *)+5A↑j
.text:00401A19                 xor     eax, eax
.text:00401A1B                 mov     [ecx], ax
.text:00401A1E
.text:00401A1E loc_401A1E:                             ; CODE XREF: StringCchCopyW(ushort *,uint,ushort const *)+5E↑j
.text:00401A1E                 mov     eax, esi
.text:00401A20                 pop     esi
.text:00401A21                 pop     ebp
.text:00401A22                 retn    4
.text:00401A22 ?StringCchCopyW@@YGJPAGIPBG@Z_0 endp
.text:00401A22
.text:00401A25 ; Exported entry 241. IsUserAdmin
.text:00401A25 ; Exported entry 643. pSetupIsUserAdmin
.text:00401A25
.text:00401A25 ; =============== S U B R O U T I N E =======================================
.text:00401A25
.text:00401A25 ; Attributes: bp-based frame info_from_lumina
.text:00401A25
.text:00401A25 ; _DWORD __stdcall pSetupIsUserAdmin()
.text:00401A25 _pSetupIsUserAdmin@0 proc near          ; CODE XREF: sub_401567:loc_401599↑p
.text:00401A25
.text:00401A25 IsMember        = dword ptr -14h
.text:00401A25 pSid            = dword ptr -10h
.text:00401A25 pIdentifierAuthority= _SID_IDENTIFIER_AUTHORITY ptr -0Ch
.text:00401A25 var_4           = dword ptr -4
.text:00401A25
.text:00401A25                 mov     edi, edi        ; IsUserAdmin
.text:00401A27                 push    ebp
.text:00401A28                 mov     ebp, esp
.text:00401A2A                 sub     esp, 14h
.text:00401A2D                 mov     eax, ___security_cookie
.text:00401A32                 xor     eax, ebp
.text:00401A34                 mov     [ebp+var_4], eax
.text:00401A37                 push    ebx
.text:00401A38                 xor     ebx, ebx
.text:00401A3A                 mov     word ptr [ebp+pIdentifierAuthority.Value+4], 500h
.text:00401A40                 push    ebx             ; dwErrCode
.text:00401A41                 mov     [ebp+IsMember], ebx
.text:00401A44                 mov     dword ptr [ebp+pIdentifierAuthority.Value], ebx
.text:00401A47                 mov     [ebp+pSid], ebx
.text:00401A4A                 call    ds:SetLastError
.text:00401A50                 lea     eax, [ebp+pSid]
.text:00401A53                 push    eax             ; pSid
.text:00401A54                 push    ebx             ; nSubAuthority7
.text:00401A55                 push    ebx             ; nSubAuthority6
.text:00401A56                 push    ebx             ; nSubAuthority5
.text:00401A57                 push    ebx             ; nSubAuthority4
.text:00401A58                 push    ebx             ; nSubAuthority3
.text:00401A59                 push    ebx             ; nSubAuthority2
.text:00401A5A                 push    220h            ; nSubAuthority1
.text:00401A5F                 push    20h ; ' '       ; nSubAuthority0
.text:00401A61                 push    2               ; nSubAuthorityCount
.text:00401A63                 lea     eax, [ebp+pIdentifierAuthority]
.text:00401A66                 push    eax             ; pIdentifierAuthority
.text:00401A67                 call    ds:AllocateAndInitializeSid
.text:00401A6D                 test    eax, eax
.text:00401A6F                 jz      short loc_401A96
.text:00401A71                 push    ebx             ; dwErrCode
.text:00401A72                 call    ds:SetLastError
.text:00401A78                 lea     eax, [ebp+IsMember]
.text:00401A7B                 push    eax             ; IsMember
.text:00401A7C                 push    [ebp+pSid]      ; SidToCheck
.text:00401A7F                 push    ebx             ; TokenHandle
.text:00401A80                 call    ds:CheckTokenMembership
.text:00401A86                 test    eax, eax
.text:00401A88                 jz      short loc_401A96
.text:00401A8A                 cmp     [ebp+IsMember], ebx
.text:00401A8D                 jnz     short loc_401AA7
.text:00401A8F                 mov     ebx, 529h
.text:00401A94                 jmp     short loc_401AA7
.text:00401A96 ; ---------------------------------------------------------------------------
.text:00401A96
.text:00401A96 loc_401A96:                             ; CODE XREF: pSetupIsUserAdmin()+4A↑j
.text:00401A96                                         ; pSetupIsUserAdmin()+63↑j
.text:00401A96                 call    ds:GetLastError
.text:00401A9C                 mov     ebx, eax
.text:00401A9E                 test    ebx, ebx
.text:00401AA0                 jnz     short loc_401AA7
.text:00401AA2                 mov     ebx, 507h
.text:00401AA7
.text:00401AA7 loc_401AA7:                             ; CODE XREF: pSetupIsUserAdmin()+68↑j
.text:00401AA7                                         ; pSetupIsUserAdmin()+6F↑j ...
.text:00401AA7                 cmp     [ebp+pSid], 0
.text:00401AAB                 jz      short loc_401AB6
.text:00401AAD                 push    [ebp+pSid]      ; pSid
.text:00401AB0                 call    ds:FreeSid
.text:00401AB6
.text:00401AB6 loc_401AB6:                             ; CODE XREF: pSetupIsUserAdmin()+86↑j
.text:00401AB6                 push    ebx             ; dwErrCode
.text:00401AB7                 call    ds:SetLastError
.text:00401ABD                 mov     ecx, [ebp+var_4]
.text:00401AC0                 xor     eax, eax
.text:00401AC2                 test    ebx, ebx
.text:00401AC4                 pop     ebx
.text:00401AC5                 setz    al
.text:00401AC8                 xor     ecx, ebp        ; StackCookie
.text:00401ACA                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text:00401ACF                 mov     esp, ebp
.text:00401AD1                 pop     ebp
.text:00401AD2                 retn
.text:00401AD2 _pSetupIsUserAdmin@0 endp
.text:00401AD2
.text:00401AD3
.text:00401AD3 ; =============== S U B R O U T I N E =======================================
.text:00401AD3
.text:00401AD3 ; Attributes: bp-based frame
.text:00401AD3
.text:00401AD3 sub_401AD3      proc near               ; CODE XREF: sub_4018CF+59↑p
.text:00401AD3                                         ; sub_401DDF:loc_401E20↓p
.text:00401AD3
.text:00401AD3 dwBytes         = dword ptr -4
.text:00401AD3
.text:00401AD3                 mov     edi, edi
.text:00401AD5                 push    ebp
.text:00401AD6                 mov     ebp, esp
.text:00401AD8                 push    ecx
.text:00401AD9                 push    edi
.text:00401ADA                 mov     edi, ecx
.text:00401ADC                 test    edi, edi
.text:00401ADE                 jnz     short loc_401AE4
.text:00401AE0                 xor     eax, eax
.text:00401AE2                 jmp     short loc_401B35
.text:00401AE4 ; ---------------------------------------------------------------------------
.text:00401AE4
.text:00401AE4 loc_401AE4:                             ; CODE XREF: sub_401AD3+B↑j
.text:00401AE4                 push    ebx
.text:00401AE5                 push    esi
.text:00401AE6                 lea     edx, [ecx+2]
.text:00401AE9                 xor     esi, esi
.text:00401AEB
.text:00401AEB loc_401AEB:                             ; CODE XREF: sub_401AD3+21↓j
.text:00401AEB                 mov     ax, [ecx]
.text:00401AEE                 add     ecx, 2
.text:00401AF1                 cmp     ax, si
.text:00401AF4                 jnz     short loc_401AEB
.text:00401AF6                 sub     ecx, edx
.text:00401AF8                 lea     eax, [ebp+dwBytes]
.text:00401AFB                 sar     ecx, 1
.text:00401AFD                 push    eax
.text:00401AFE                 lea     ebx, [ecx+1]
.text:00401B01                 mov     ecx, ebx
.text:00401B03                 call    ?SizeTMult@@YGJIIPAI@Z ; SizeTMult(uint,uint,uint *)
.text:00401B08                 test    eax, eax
.text:00401B0A                 js      short loc_401B31
.text:00401B0C                 mov     ecx, [ebp+dwBytes] ; dwBytes
.text:00401B0F                 call    sub_401D86
.text:00401B14                 mov     esi, eax
.text:00401B16                 test    esi, esi
.text:00401B18                 jz      short loc_401B31
.text:00401B1A                 push    edi
.text:00401B1B                 mov     edx, ebx
.text:00401B1D                 mov     ecx, esi
.text:00401B1F                 call    ?StringCchCopyW@@YGJPAGIPBG@Z_0 ; StringCchCopyW(ushort *,uint,ushort const *)
.text:00401B24                 test    eax, eax
.text:00401B26                 jns     short loc_401B31
.text:00401B28                 mov     ecx, esi        ; lpMem
.text:00401B2A                 call    sub_401D98
.text:00401B2F                 xor     esi, esi
.text:00401B31
.text:00401B31 loc_401B31:                             ; CODE XREF: sub_401AD3+37↑j
.text:00401B31                                         ; sub_401AD3+45↑j ...
.text:00401B31                 mov     eax, esi
.text:00401B33                 pop     esi
.text:00401B34                 pop     ebx
.text:00401B35
.text:00401B35 loc_401B35:                             ; CODE XREF: sub_401AD3+F↑j
.text:00401B35                 pop     edi
.text:00401B36                 mov     esp, ebp
.text:00401B38                 pop     ebp
.text:00401B39                 retn
.text:00401B39 sub_401AD3      endp
.text:00401B39
.text:00401B3A
.text:00401B3A ; =============== S U B R O U T I N E =======================================
.text:00401B3A
.text:00401B3A ; Attributes: bp-based frame
.text:00401B3A
.text:00401B3A sub_401B3A      proc near               ; CODE XREF: sub_401705+57↑p
.text:00401B3A                                         ; sub_401DDF+C2↓p
.text:00401B3A
.text:00401B3A var_8           = dword ptr -8
.text:00401B3A var_4           = dword ptr -4
.text:00401B3A arg_0           = dword ptr  8
.text:00401B3A
.text:00401B3A                 mov     edi, edi
.text:00401B3C                 push    ebp
.text:00401B3D                 mov     ebp, esp
.text:00401B3F                 push    ecx
.text:00401B40                 push    ecx
.text:00401B41                 push    ebx
.text:00401B42                 mov     ebx, edx
.text:00401B44                 mov     edx, ecx
.text:00401B46                 push    esi
.text:00401B47                 mov     esi, edx
.text:00401B49                 mov     [ebp+var_8], ebx
.text:00401B4C                 push    edi
.text:00401B4D                 mov     [ebp+var_4], edx
.text:00401B50                 xor     edi, edi
.text:00401B52                 lea     ecx, [esi+2]
.text:00401B55
.text:00401B55 loc_401B55:                             ; CODE XREF: sub_401B3A+24↓j
.text:00401B55                 mov     ax, [esi]
.text:00401B58                 add     esi, 2
.text:00401B5B                 cmp     ax, di
.text:00401B5E                 jnz     short loc_401B55
.text:00401B60                 sub     esi, ecx
.text:00401B62                 mov     ecx, ebx
.text:00401B64                 sar     esi, 1
.text:00401B66                 lea     ebx, [ecx+2]
.text:00401B69
.text:00401B69 loc_401B69:                             ; CODE XREF: sub_401B3A+38↓j
.text:00401B69                 mov     ax, [ecx]
.text:00401B6C                 add     ecx, 2
.text:00401B6F                 cmp     ax, di
.text:00401B72                 jnz     short loc_401B69
.text:00401B74                 sub     ecx, ebx
.text:00401B76                 push    5Ch ; '\'
.text:00401B78                 sar     ecx, 1
.text:00401B7A                 pop     ebx
.text:00401B7B                 push    2Fh ; '/'
.text:00401B7D                 test    esi, esi
.text:00401B7F                 jz      short loc_401B94
.text:00401B81                 movzx   eax, word ptr [edx+esi*2-2]
.text:00401B86                 pop     edx
.text:00401B87                 cmp     ax, bx
.text:00401B8A                 jz      short loc_401B91
.text:00401B8C                 cmp     ax, dx
.text:00401B8F                 jnz     short loc_401B95
.text:00401B91
.text:00401B91 loc_401B91:                             ; CODE XREF: sub_401B3A+50↑j
.text:00401B91                 dec     esi
.text:00401B92                 jmp     short loc_401B95
.text:00401B94 ; ---------------------------------------------------------------------------
.text:00401B94
.text:00401B94 loc_401B94:                             ; CODE XREF: sub_401B3A+45↑j
.text:00401B94                 pop     edx
.text:00401B95
.text:00401B95 loc_401B95:                             ; CODE XREF: sub_401B3A+55↑j
.text:00401B95                                         ; sub_401B3A+58↑j
.text:00401B95                 mov     eax, [ebp+var_8]
.text:00401B98                 movzx   eax, word ptr [eax]
.text:00401B9B                 cmp     ax, bx
.text:00401B9E                 jz      short loc_401BA9
.text:00401BA0                 cmp     ax, dx
.text:00401BA3                 jz      short loc_401BA9
.text:00401BA5                 mov     edx, edi
.text:00401BA7                 jmp     short loc_401BAD
.text:00401BA9 ; ---------------------------------------------------------------------------
.text:00401BA9
.text:00401BA9 loc_401BA9:                             ; CODE XREF: sub_401B3A+64↑j
.text:00401BA9                                         ; sub_401B3A+69↑j
.text:00401BA9                 xor     edx, edx
.text:00401BAB                 inc     edx
.text:00401BAC                 dec     ecx
.text:00401BAD
.text:00401BAD loc_401BAD:                             ; CODE XREF: sub_401B3A+6D↑j
.text:00401BAD                 mov     ebx, [ebp+arg_0]
.text:00401BB0                 lea     eax, [esi+2]
.text:00401BB3                 add     eax, ecx
.text:00401BB5                 cmp     eax, ebx
.text:00401BB7                 ja      short loc_401C02
.text:00401BB9                 test    edx, edx
.text:00401BBB                 jnz     short loc_401BCE
.text:00401BBD                 cmp     esi, ebx
.text:00401BBF                 jnb     short loc_401BD5
.text:00401BC1                 mov     eax, [ebp+var_4]
.text:00401BC4                 push    5Ch ; '\'
.text:00401BC6                 pop     ecx
.text:00401BC7                 mov     [eax+esi*2], cx
.text:00401BCB                 inc     esi
.text:00401BCC                 jmp     short loc_401BD1
.text:00401BCE ; ---------------------------------------------------------------------------
.text:00401BCE
.text:00401BCE loc_401BCE:                             ; CODE XREF: sub_401B3A+81↑j
.text:00401BCE                 mov     eax, [ebp+var_4]
.text:00401BD1
.text:00401BD1 loc_401BD1:                             ; CODE XREF: sub_401B3A+92↑j
.text:00401BD1                 cmp     esi, ebx
.text:00401BD3                 jb      short loc_401BDC
.text:00401BD5
.text:00401BD5 loc_401BD5:                             ; CODE XREF: sub_401B3A+85↑j
.text:00401BD5                 mov     edi, 0CEh ; 'Î'
.text:00401BDA                 jmp     short loc_401BF2
.text:00401BDC ; ---------------------------------------------------------------------------
.text:00401BDC
.text:00401BDC loc_401BDC:                             ; CODE XREF: sub_401B3A+99↑j
.text:00401BDC                 push    [ebp+var_8]
.text:00401BDF                 mov     edx, ebx
.text:00401BE1                 lea     ecx, [eax+esi*2]
.text:00401BE4                 sub     edx, esi
.text:00401BE6                 call    ?StringCchCopyW@@YGJPAGIPBG@Z_0 ; StringCchCopyW(ushort *,uint,ushort const *)
.text:00401BEB                 test    eax, eax
.text:00401BED                 jns     short loc_401BF2
.text:00401BEF                 movzx   edi, ax
.text:00401BF2
.text:00401BF2 loc_401BF2:                             ; CODE XREF: sub_401B3A+A0↑j
.text:00401BF2                                         ; sub_401B3A+B3↑j
.text:00401BF2                 test    ebx, ebx
.text:00401BF4                 jz      short loc_401C07
.text:00401BF6                 mov     eax, [ebp+var_4]
.text:00401BF9                 xor     ecx, ecx
.text:00401BFB                 mov     [eax+ebx*2-2], cx
.text:00401C00                 jmp     short loc_401C07
.text:00401C02 ; ---------------------------------------------------------------------------
.text:00401C02
.text:00401C02 loc_401C02:                             ; CODE XREF: sub_401B3A+7D↑j
.text:00401C02                 mov     edi, 0CEh ; 'Î'
.text:00401C07
.text:00401C07 loc_401C07:                             ; CODE XREF: sub_401B3A+BA↑j
.text:00401C07                                         ; sub_401B3A+C6↑j
.text:00401C07                 test    edi, edi
.text:00401C09                 jz      short loc_401C12
.text:00401C0B                 push    edi             ; dwErrCode
.text:00401C0C                 call    ds:SetLastError
.text:00401C12
.text:00401C12 loc_401C12:                             ; CODE XREF: sub_401B3A+CF↑j
.text:00401C12                 xor     eax, eax
.text:00401C14                 test    edi, edi
.text:00401C16                 pop     edi
.text:00401C17                 pop     esi
.text:00401C18                 setz    al
.text:00401C1B                 pop     ebx
.text:00401C1C                 mov     esp, ebp
.text:00401C1E                 pop     ebp
.text:00401C1F                 retn    8
.text:00401C1F sub_401B3A      endp
.text:00401C1F
.text:00401C22
.text:00401C22 ; =============== S U B R O U T I N E =======================================
.text:00401C22
.text:00401C22 ; Attributes: bp-based frame
.text:00401C22
.text:00401C22 sub_401C22      proc near               ; CODE XREF: sub_401705+68↑p
.text:00401C22
.text:00401C22 var_4           = dword ptr -4
.text:00401C22
.text:00401C22                 mov     edi, edi
.text:00401C24                 push    ebp
.text:00401C25                 mov     ebp, esp
.text:00401C27                 push    ecx
.text:00401C28                 push    ebx
.text:00401C29                 push    esi
.text:00401C2A                 xor     esi, esi
.text:00401C2C                 mov     ebx, ecx
.text:00401C2E                 push    edi
.text:00401C2F                 test    edx, edx
.text:00401C31                 jz      short loc_401C3F
.text:00401C33                 mov     edx, offset aSetupapiAppLog ; "setupapi.app.log"
.text:00401C38                 mov     edi, offset aSetupapiDevLog ; "setupapi.dev.log"
.text:00401C3D                 jmp     short loc_401C46
.text:00401C3F ; ---------------------------------------------------------------------------
.text:00401C3F
.text:00401C3F loc_401C3F:                             ; CODE XREF: sub_401C22+F↑j
.text:00401C3F                 mov     edx, offset aSetupapiOfflin ; "setupapi.offline.log"
.text:00401C44                 mov     edi, edx
.text:00401C46
.text:00401C46 loc_401C46:                             ; CODE XREF: sub_401C22+1B↑j
.text:00401C46                 lea     eax, [ebp+var_4]
.text:00401C49                 push    eax
.text:00401C4A                 call    sub_401DDF
.text:00401C4F                 test    eax, eax
.text:00401C51                 jz      short loc_401C6B
.text:00401C53                 mov     ecx, dword_403380 ; lpMem
.text:00401C59                 mov     esi, [ebp+var_4]
.text:00401C5C                 test    ecx, ecx
.text:00401C5E                 jz      short loc_401C65
.text:00401C60                 call    sub_401D98
.text:00401C65
.text:00401C65 loc_401C65:                             ; CODE XREF: sub_401C22+3C↑j
.text:00401C65                 mov     dword_403380, esi
.text:00401C6B
.text:00401C6B loc_401C6B:                             ; CODE XREF: sub_401C22+2F↑j
.text:00401C6B                 lea     eax, [ebp+var_4]
.text:00401C6E                 mov     edx, edi
.text:00401C70                 push    eax
.text:00401C71                 mov     ecx, ebx
.text:00401C73                 call    sub_401DDF
.text:00401C78                 test    eax, eax
.text:00401C7A                 jz      short loc_401C94
.text:00401C7C                 mov     ecx, dword_4033A8 ; lpMem
.text:00401C82                 mov     esi, [ebp+var_4]
.text:00401C85                 test    ecx, ecx
.text:00401C87                 jz      short loc_401C8E
.text:00401C89                 call    sub_401D98
.text:00401C8E
.text:00401C8E loc_401C8E:                             ; CODE XREF: sub_401C22+65↑j
.text:00401C8E                 mov     dword_4033A8, esi
.text:00401C94
.text:00401C94 loc_401C94:                             ; CODE XREF: sub_401C22+58↑j
.text:00401C94                 test    esi, esi
.text:00401C96                 jz      short loc_401C9F
.text:00401C98                 mov     ecx, esi        ; lpFileName
.text:00401C9A                 call    _pSetupMakeSurePathExists@4 ; pSetupMakeSurePathExists(x)
.text:00401C9F
.text:00401C9F loc_401C9F:                             ; CODE XREF: sub_401C22+74↑j
.text:00401C9F                 pop     edi
.text:00401CA0                 xor     eax, eax
.text:00401CA2                 pop     esi
.text:00401CA3                 inc     eax
.text:00401CA4                 pop     ebx
.text:00401CA5                 mov     esp, ebp
.text:00401CA7                 pop     ebp
.text:00401CA8                 retn
.text:00401CA8 sub_401C22      endp
.text:00401CA8
.text:00401CA9
.text:00401CA9 ; =============== S U B R O U T I N E =======================================
.text:00401CA9
.text:00401CA9
.text:00401CA9 sub_401CA9      proc near               ; CODE XREF: sub_401831+38↑p
.text:00401CA9                                         ; sub_401CEF:loc_401D7C↓p
.text:00401CA9                 mov     ecx, dword_4033C8 ; lpMem
.text:00401CAF                 test    ecx, ecx
.text:00401CB1                 jz      short loc_401CBF
.text:00401CB3                 call    sub_401D98
.text:00401CB8                 and     dword_4033C8, 0
.text:00401CBF
.text:00401CBF loc_401CBF:                             ; CODE XREF: sub_401CA9+8↑j
.text:00401CBF                 mov     ecx, dword_4033C4 ; lpMem
.text:00401CC5                 test    ecx, ecx
.text:00401CC7                 jz      short loc_401CD5
.text:00401CC9                 call    sub_401D98
.text:00401CCE                 and     dword_4033C4, 0
.text:00401CD5
.text:00401CD5 loc_401CD5:                             ; CODE XREF: sub_401CA9+1E↑j
.text:00401CD5                 mov     ecx, dword_4033C0 ; lpMem
.text:00401CDB                 test    ecx, ecx
.text:00401CDD                 jz      short loc_401CEB
.text:00401CDF                 call    sub_401D98
.text:00401CE4                 and     dword_4033C0, 0
.text:00401CEB
.text:00401CEB loc_401CEB:                             ; CODE XREF: sub_401CA9+34↑j
.text:00401CEB                 xor     eax, eax
.text:00401CED                 inc     eax
.text:00401CEE                 retn
.text:00401CEE sub_401CA9      endp
.text:00401CEE
.text:00401CEF
.text:00401CEF ; =============== S U B R O U T I N E =======================================
.text:00401CEF
.text:00401CEF
.text:00401CEF sub_401CEF      proc near               ; CODE XREF: sub_401705+77↑p
.text:00401CEF                 mov     edi, edi
.text:00401CF1                 push    esi
.text:00401CF2                 push    edi
.text:00401CF3                 mov     edi, ecx
.text:00401CF5                 mov     ecx, dword_4033C8 ; lpMem
.text:00401CFB                 test    ecx, ecx
.text:00401CFD                 jz      short loc_401D0B
.text:00401CFF                 call    sub_401D98
.text:00401D04                 and     dword_4033C8, 0
.text:00401D0B
.text:00401D0B loc_401D0B:                             ; CODE XREF: sub_401CEF+E↑j
.text:00401D0B                 push    offset dword_4033C8
.text:00401D10                 mov     edx, offset aSetupapiEv1 ; "setupapi.ev1"
.text:00401D15                 mov     ecx, edi
.text:00401D17                 call    sub_401DDF
.text:00401D1C                 mov     esi, eax
.text:00401D1E                 test    esi, esi
.text:00401D20                 jz      short loc_401D7C
.text:00401D22                 mov     ecx, dword_4033C4 ; lpMem
.text:00401D28                 test    ecx, ecx
.text:00401D2A                 jz      short loc_401D38
.text:00401D2C                 call    sub_401D98
.text:00401D31                 and     dword_4033C4, 0
.text:00401D38
.text:00401D38 loc_401D38:                             ; CODE XREF: sub_401CEF+3B↑j
.text:00401D38                 push    offset dword_4033C4
.text:00401D3D                 mov     edx, offset aSetupapiEv2 ; "setupapi.ev2"
.text:00401D42                 mov     ecx, edi
.text:00401D44                 call    sub_401DDF
.text:00401D49                 mov     esi, eax
.text:00401D4B                 test    esi, esi
.text:00401D4D                 jz      short loc_401D7C
.text:00401D4F                 mov     ecx, dword_4033C0 ; lpMem
.text:00401D55                 test    ecx, ecx
.text:00401D57                 jz      short loc_401D65
.text:00401D59                 call    sub_401D98
.text:00401D5E                 and     dword_4033C0, 0
.text:00401D65
.text:00401D65 loc_401D65:                             ; CODE XREF: sub_401CEF+68↑j
.text:00401D65                 push    offset dword_4033C0
.text:00401D6A                 mov     edx, offset aSetupapiEv3 ; "setupapi.ev3"
.text:00401D6F                 mov     ecx, edi
.text:00401D71                 call    sub_401DDF
.text:00401D76                 mov     esi, eax
.text:00401D78                 test    esi, esi
.text:00401D7A                 jnz     short loc_401D81
.text:00401D7C
.text:00401D7C loc_401D7C:                             ; CODE XREF: sub_401CEF+31↑j
.text:00401D7C                                         ; sub_401CEF+5E↑j
.text:00401D7C                 call    sub_401CA9
.text:00401D81
.text:00401D81 loc_401D81:                             ; CODE XREF: sub_401CEF+8B↑j
.text:00401D81                 pop     edi
.text:00401D82                 mov     eax, esi
.text:00401D84                 pop     esi
.text:00401D85                 retn
.text:00401D85 sub_401CEF      endp
.text:00401D85
.text:00401D86
.text:00401D86 ; =============== S U B R O U T I N E =======================================
.text:00401D86
.text:00401D86
.text:00401D86 ; int __thiscall sub_401D86(SIZE_T dwBytes)
.text:00401D86 sub_401D86      proc near               ; CODE XREF: sub_401AD3+3C↑p
.text:00401D86                                         ; sub_401DDF+1C↓p ...
.text:00401D86                 mov     edi, edi
.text:00401D88                 push    ecx             ; dwBytes
.text:00401D89                 push    0               ; dwFlags
.text:00401D8B                 push    hHeap           ; hHeap
.text:00401D91                 call    ds:HeapAlloc
.text:00401D97                 retn
.text:00401D97 sub_401D86      endp
.text:00401D97
.text:00401D98
.text:00401D98 ; =============== S U B R O U T I N E =======================================
.text:00401D98
.text:00401D98
.text:00401D98 ; int __thiscall sub_401D98(LPVOID lpMem)
.text:00401D98 sub_401D98      proc near               ; CODE XREF: sub_4017AC+61↑p
.text:00401D98                                         ; sub_401831+47↑p ...
.text:00401D98                 mov     edi, edi
.text:00401D9A                 push    ecx             ; lpMem
.text:00401D9B                 push    0               ; dwFlags
.text:00401D9D                 push    hHeap           ; hHeap
.text:00401DA3                 call    ds:HeapFree
.text:00401DA9                 retn
.text:00401DA9 sub_401D98      endp
.text:00401DA9
.text:00401DAA
.text:00401DAA ; =============== S U B R O U T I N E =======================================
.text:00401DAA
.text:00401DAA ; Attributes: bp-based frame info_from_lumina
.text:00401DAA
.text:00401DAA ; int __stdcall SizeTMult(unsigned int, unsigned int, unsigned int *)
.text:00401DAA ?SizeTMult@@YGJIIPAI@Z proc near        ; CODE XREF: sub_401AD3+30↑p
.text:00401DAA                                         ; sub_401DDF+91↓p
.text:00401DAA
.text:00401DAA arg_0           = dword ptr  8
.text:00401DAA
.text:00401DAA                 mov     edi, edi
.text:00401DAC                 push    ebp
.text:00401DAD                 mov     ebp, esp
.text:00401DAF                 push    esi
.text:00401DB0                 mov     eax, ecx
.text:00401DB2                 push    2
.text:00401DB4                 pop     ecx
.text:00401DB5                 mul     ecx
.text:00401DB7                 xor     ecx, ecx
.text:00401DB9                 mov     esi, eax
.text:00401DBB                 cmp     edx, ecx
.text:00401DBD                 ja      short loc_401DCD
.text:00401DBF                 jb      short loc_401DC6
.text:00401DC1                 cmp     esi, 0FFFFFFFFh
.text:00401DC4                 ja      short loc_401DCD
.text:00401DC6
.text:00401DC6 loc_401DC6:                             ; CODE XREF: SizeTMult(uint,uint,uint *)+15↑j
.text:00401DC6                 mov     eax, [ebp+arg_0]
.text:00401DC9                 mov     [eax], esi
.text:00401DCB                 jmp     short loc_401DD8
.text:00401DCD ; ---------------------------------------------------------------------------
.text:00401DCD
.text:00401DCD loc_401DCD:                             ; CODE XREF: SizeTMult(uint,uint,uint *)+13↑j
.text:00401DCD                                         ; SizeTMult(uint,uint,uint *)+1A↑j
.text:00401DCD                 mov     eax, [ebp+arg_0]
.text:00401DD0                 mov     ecx, 80070216h
.text:00401DD5                 or      dword ptr [eax], 0FFFFFFFFh
.text:00401DD8
.text:00401DD8 loc_401DD8:                             ; CODE XREF: SizeTMult(uint,uint,uint *)+21↑j
.text:00401DD8                 mov     eax, ecx
.text:00401DDA                 pop     esi
.text:00401DDB                 pop     ebp
.text:00401DDC                 retn    4
.text:00401DDC ?SizeTMult@@YGJIIPAI@Z endp
.text:00401DDC
.text:00401DDF
.text:00401DDF ; =============== S U B R O U T I N E =======================================
.text:00401DDF
.text:00401DDF ; Attributes: bp-based frame
.text:00401DDF
.text:00401DDF sub_401DDF      proc near               ; CODE XREF: sub_401C22+28↑p
.text:00401DDF                                         ; sub_401C22+51↑p ...
.text:00401DDF
.text:00401DDF var_2C          = dword ptr -2Ch
.text:00401DDF Status          = dword ptr -28h
.text:00401DDF var_24          = dword ptr -24h
.text:00401DDF var_20          = dword ptr -20h
.text:00401DDF dwBytes         = dword ptr -1Ch
.text:00401DDF ms_exc          = CPPEH_RECORD ptr -18h
.text:00401DDF arg_0           = dword ptr  8
.text:00401DDF
.text:00401DDF ; __unwind { // __SEH_prolog4
.text:00401DDF                 push    1Ch
.text:00401DE1                 push    offset stru_4029F0
.text:00401DE6                 call    __SEH_prolog4
.text:00401DEB                 mov     [ebp+var_24], edx
.text:00401DEE                 mov     ebx, ecx
.text:00401DF0                 test    ebx, ebx
.text:00401DF2                 jnz     short loc_401E38
.text:00401DF4                 test    edx, edx
.text:00401DF6                 jnz     short loc_401E1A
.text:00401DF8                 push    2
.text:00401DFA                 pop     ecx             ; dwBytes
.text:00401DFB                 call    sub_401D86
.text:00401E00                 mov     ecx, [ebp+arg_0]
.text:00401E03                 mov     [ecx], eax
.text:00401E05                 test    eax, eax
.text:00401E07                 jz      loc_401EFC
.text:00401E0D                 xor     ecx, ecx
.text:00401E0F                 mov     [eax], cx
.text:00401E12                 xor     eax, eax
.text:00401E14                 inc     eax
.text:00401E15                 jmp     loc_401EFE
.text:00401E1A ; ---------------------------------------------------------------------------
.text:00401E1A
.text:00401E1A loc_401E1A:                             ; CODE XREF: sub_401DDF+17↑j
.text:00401E1A                 test    ebx, ebx
.text:00401E1C                 jnz     short loc_401E38
.text:00401E1E                 mov     ecx, edx
.text:00401E20
.text:00401E20 loc_401E20:                             ; CODE XREF: sub_401DDF+5B↓j
.text:00401E20                 call    sub_401AD3
.text:00401E25                 mov     edx, eax
.text:00401E27                 mov     ecx, [ebp+arg_0]
.text:00401E2A                 mov     [ecx], edx
.text:00401E2C                 xor     eax, eax
.text:00401E2E                 test    edx, edx
.text:00401E30                 setnz   al
.text:00401E33                 jmp     loc_401EFE
.text:00401E38 ; ---------------------------------------------------------------------------
.text:00401E38
.text:00401E38 loc_401E38:                             ; CODE XREF: sub_401DDF+13↑j
.text:00401E38                                         ; sub_401DDF+3D↑j
.text:00401E38                 test    edx, edx
.text:00401E3A                 jz      short loc_401E20
.text:00401E3C                 lea     esi, [ecx+2]
.text:00401E3F                 xor     edi, edi
.text:00401E41
.text:00401E41 loc_401E41:                             ; CODE XREF: sub_401DDF+6B↓j
.text:00401E41                 mov     ax, [ecx]
.text:00401E44                 add     ecx, 2
.text:00401E47                 cmp     ax, di
.text:00401E4A                 jnz     short loc_401E41
.text:00401E4C                 sub     ecx, esi
.text:00401E4E                 sar     ecx, 1
.text:00401E50                 lea     esi, [edx+2]
.text:00401E53
.text:00401E53 loc_401E53:                             ; CODE XREF: sub_401DDF+7D↓j
.text:00401E53                 mov     ax, [edx]
.text:00401E56                 add     edx, 2
.text:00401E59                 cmp     ax, di
.text:00401E5C                 jnz     short loc_401E53
.text:00401E5E                 sub     edx, esi
.text:00401E60                 sar     edx, 1
.text:00401E62                 lea     eax, [ecx+2]
.text:00401E65                 add     eax, edx
.text:00401E67                 mov     [ebp+var_20], eax
.text:00401E6A                 lea     ecx, [ebp+dwBytes]
.text:00401E6D                 push    ecx
.text:00401E6E                 mov     ecx, eax
.text:00401E70                 call    ?SizeTMult@@YGJIIPAI@Z ; SizeTMult(uint,uint,uint *)
.text:00401E75                 test    eax, eax
.text:00401E77                 js      short loc_401EF7
.text:00401E79                 mov     ecx, [ebp+dwBytes] ; dwBytes
.text:00401E7C                 call    sub_401D86
.text:00401E81                 mov     esi, eax
.text:00401E83                 mov     [ebp+dwBytes], esi
.text:00401E86                 test    esi, esi
.text:00401E88                 jz      short loc_401EF7
.text:00401E8A ;   __try { // __except at loc_401EC4
.text:00401E8A                 mov     [ebp+ms_exc.registration.TryLevel], edi
.text:00401E8D                 push    ebx
.text:00401E8E                 mov     ebx, [ebp+var_20]
.text:00401E91                 mov     edx, ebx
.text:00401E93                 mov     ecx, esi
.text:00401E95                 call    ?StringCchCopyW@@YGJPAGIPBG@Z_0 ; StringCchCopyW(ushort *,uint,ushort const *)
.text:00401E9A                 push    ecx
.text:00401E9B                 push    ebx
.text:00401E9C                 mov     edx, [ebp+var_24]
.text:00401E9F                 mov     ecx, esi
.text:00401EA1                 call    sub_401B3A
.text:00401EA6                 mov     ebx, eax
.text:00401EA8                 mov     [ebp+var_2C], ebx
.text:00401EA8 ;   } // starts at 401E8A
.text:00401EAB                 mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
.text:00401EB2                 jmp     short loc_401EE1
.text:00401EB4 ; ---------------------------------------------------------------------------
.text:00401EB4
.text:00401EB4 loc_401EB4:                             ; DATA XREF: .text:stru_4029F0↓o
.text:00401EB4 ;   __except filter // owned by 401E8A
.text:00401EB4                 mov     eax, [ebp+ms_exc.exc_ptr]
.text:00401EB7                 mov     eax, [eax]
.text:00401EB9                 mov     ecx, [eax]
.text:00401EBB                 mov     [ebp+Status], ecx
.text:00401EBE                 call    sub_40195C
.text:00401EC3                 retn
.text:00401EC4 ; ---------------------------------------------------------------------------
.text:00401EC4
.text:00401EC4 loc_401EC4:                             ; DATA XREF: .text:stru_4029F0↓o
.text:00401EC4 ;   __except(loc_401EB4) // owned by 401E8A
.text:00401EC4                 mov     esp, [ebp+ms_exc.old_esp]
.text:00401EC7                 push    ecx             ; int
.text:00401EC8                 mov     ecx, [ebp+Status] ; Status
.text:00401ECB                 call    sub_401973
.text:00401ED0                 xor     edi, edi
.text:00401ED2                 mov     ebx, edi
.text:00401ED4                 mov     [ebp+var_2C], ebx
.text:00401ED7                 mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
.text:00401EDE                 mov     esi, [ebp+dwBytes]
.text:00401EE1
.text:00401EE1 loc_401EE1:                             ; CODE XREF: sub_401DDF+D3↑j
.text:00401EE1                 test    ebx, ebx
.text:00401EE3                 jnz     short loc_401EEE
.text:00401EE5                 mov     ecx, esi        ; lpMem
.text:00401EE7                 call    sub_401D98
.text:00401EEC                 mov     esi, edi
.text:00401EEE
.text:00401EEE loc_401EEE:                             ; CODE XREF: sub_401DDF+104↑j
.text:00401EEE                 mov     eax, [ebp+arg_0]
.text:00401EF1                 mov     [eax], esi
.text:00401EF3                 mov     eax, ebx
.text:00401EF5                 jmp     short loc_401EFE
.text:00401EF7 ; ---------------------------------------------------------------------------
.text:00401EF7
.text:00401EF7 loc_401EF7:                             ; CODE XREF: sub_401DDF+98↑j
.text:00401EF7                                         ; sub_401DDF+A9↑j
.text:00401EF7                 mov     eax, [ebp+arg_0]
.text:00401EFA                 mov     [eax], edi
.text:00401EFC
.text:00401EFC loc_401EFC:                             ; CODE XREF: sub_401DDF+28↑j
.text:00401EFC                 xor     eax, eax
.text:00401EFE
.text:00401EFE loc_401EFE:                             ; CODE XREF: sub_401DDF+36↑j
.text:00401EFE                                         ; sub_401DDF+54↑j ...
.text:00401EFE                 call    __SEH_epilog4
.text:00401F03                 retn    4
.text:00401F03 ; } // starts at 401DDF
.text:00401F03 sub_401DDF      endp
.text:00401F03
.text:00401F06
.text:00401F06 ; =============== S U B R O U T I N E =======================================
.text:00401F06
.text:00401F06 ; Attributes: bp-based frame info_from_lumina
.text:00401F06
.text:00401F06 ; int __thiscall pSetupMakeSurePathExists(LPCWSTR lpFileName)
.text:00401F06 _pSetupMakeSurePathExists@4 proc near   ; CODE XREF: sub_401C22+78↑p
.text:00401F06
.text:00401F06 var_218         = dword ptr -218h
.text:00401F06 FilePart        = dword ptr -214h
.text:00401F06 Buffer          = word ptr -210h
.text:00401F06 Str             = word ptr -20Ch
.text:00401F06 var_4           = dword ptr -4
.text:00401F06
.text:00401F06                 mov     edi, edi
.text:00401F08                 push    ebp
.text:00401F09                 mov     ebp, esp
.text:00401F0B                 sub     esp, 218h
.text:00401F11                 mov     eax, ___security_cookie
.text:00401F16                 xor     eax, ebp
.text:00401F18                 mov     [ebp+var_4], eax
.text:00401F1B                 push    ebx
.text:00401F1C                 push    esi
.text:00401F1D                 push    edi
.text:00401F1E                 lea     eax, [ebp+FilePart]
.text:00401F24                 mov     esi, 104h
.text:00401F29                 push    eax             ; lpFilePart
.text:00401F2A                 lea     eax, [ebp+Buffer]
.text:00401F30                 xor     ebx, ebx
.text:00401F32                 push    eax             ; lpBuffer
.text:00401F33                 push    esi             ; nBufferLength
.text:00401F34                 push    ecx             ; lpFileName
.text:00401F35                 call    ds:GetFullPathNameW
.text:00401F3B                 cmp     eax, esi
.text:00401F3D                 jnb     loc_4020FF
.text:00401F43                 test    eax, eax
.text:00401F45                 jnz     short loc_401F52
.text:00401F47
.text:00401F47 loc_401F47:                             ; CODE XREF: pSetupMakeSurePathExists(x)+1A9↓j
.text:00401F47                                         ; pSetupMakeSurePathExists(x)+1E4↓j
.text:00401F47                 call    ds:GetLastError
.text:00401F4D                 jmp     loc_402102
.text:00401F52 ; ---------------------------------------------------------------------------
.text:00401F52
.text:00401F52 loc_401F52:                             ; CODE XREF: pSetupMakeSurePathExists(x)+3F↑j
.text:00401F52                 mov     eax, [ebp+FilePart]
.text:00401F58                 test    eax, eax
.text:00401F5A                 jz      loc_4020FF
.text:00401F60                 lea     ecx, [ebp+Buffer]
.text:00401F66                 cmp     eax, ecx
.text:00401F68                 jz      loc_4020FF
.text:00401F6E                 xor     ecx, ecx
.text:00401F70                 mov     [eax], cx
.text:00401F73                 mov     ecx, dword ptr [ebp+Buffer]
.text:00401F79                 push    5Ch ; '\'
.text:00401F7B                 pop     esi
.text:00401F7C                 cmp     cx, 41h ; 'A'
.text:00401F80                 jb      short loc_401F88
.text:00401F82                 cmp     cx, 5Ah ; 'Z'
.text:00401F86                 jbe     short loc_401F91
.text:00401F88
.text:00401F88 loc_401F88:                             ; CODE XREF: pSetupMakeSurePathExists(x)+7A↑j
.text:00401F88                 lea     eax, [ecx-61h]
.text:00401F8B                 cmp     ax, 19h
.text:00401F8F                 ja      short loc_401FAE
.text:00401F91
.text:00401F91 loc_401F91:                             ; CODE XREF: pSetupMakeSurePathExists(x)+80↑j
.text:00401F91                 cmp     [ebp+Buffer+2], 3Ah ; ':'
.text:00401F99                 jnz     short loc_401FAE
.text:00401F9B                 cmp     [ebp+Str], si
.text:00401FA2                 jnz     loc_4020FF
.text:00401FA8                 lea     ebx, [ebp+Str]
.text:00401FAE
.text:00401FAE loc_401FAE:                             ; CODE XREF: pSetupMakeSurePathExists(x)+89↑j
.text:00401FAE                                         ; pSetupMakeSurePathExists(x)+93↑j
.text:00401FAE                 cmp     cx, si
.text:00401FB1                 jnz     short loc_401FEB
.text:00401FB3                 cmp     [ebp+Buffer+2], si
.text:00401FBA                 jnz     short loc_401FEB
.text:00401FBC                 lea     eax, [ebp+Str]
.text:00401FC2                 push    esi             ; Ch
.text:00401FC3                 push    eax             ; Str
.text:00401FC4                 call    ds:wcschr
.text:00401FCA                 pop     ecx
.text:00401FCB                 pop     ecx
.text:00401FCC                 test    eax, eax
.text:00401FCE                 jz      loc_4020FF
.text:00401FD4                 add     eax, 2
.text:00401FD7                 push    esi             ; Ch
.text:00401FD8                 push    eax             ; Str
.text:00401FD9                 call    ds:wcschr
.text:00401FDF                 mov     ebx, eax
.text:00401FE1                 pop     ecx
.text:00401FE2                 pop     ecx
.text:00401FE3                 test    ebx, ebx
.text:00401FE5                 jz      loc_4020FF
.text:00401FEB
.text:00401FEB loc_401FEB:                             ; CODE XREF: pSetupMakeSurePathExists(x)+AB↑j
.text:00401FEB                                         ; pSetupMakeSurePathExists(x)+B4↑j
.text:00401FEB                 lea     eax, [ebp+Buffer]
.text:00401FF1                 push    eax             ; lpFileName
.text:00401FF2                 call    ds:GetFileAttributesW
.text:00401FF8                 cmp     eax, 0FFFFFFFFh
.text:00401FFB                 jz      short loc_402015
.text:00401FFD                 and     al, 10h
.text:00401FFF                 movzx   eax, al
.text:00402002                 neg     eax
.text:00402004                 sbb     eax, eax
.text:00402006                 and     eax, 0FFFFFEF5h
.text:0040200B                 add     eax, 10Bh
.text:00402010                 jmp     loc_402102
.text:00402015 ; ---------------------------------------------------------------------------
.text:00402015
.text:00402015 loc_402015:                             ; CODE XREF: pSetupMakeSurePathExists(x)+F5↑j
.text:00402015                 mov     edi, [ebp+FilePart]
.text:0040201B                 lea     eax, [ebp+Buffer]
.text:00402021                 cmp     edi, eax
.text:00402023                 jnz     short loc_402029
.text:00402025                 mov     edi, eax
.text:00402027                 jmp     short loc_40202C
.text:00402029 ; ---------------------------------------------------------------------------
.text:00402029
.text:00402029 loc_402029:                             ; CODE XREF: pSetupMakeSurePathExists(x)+11D↑j
.text:00402029                 add     edi, 0FFFFFFFEh
.text:0040202C
.text:0040202C loc_40202C:                             ; CODE XREF: pSetupMakeSurePathExists(x)+121↑j
.text:0040202C                 cmp     edi, ebx
.text:0040202E                 jz      loc_4020FF
.text:00402034                 cmp     [edi], si
.text:00402037                 jnz     loc_4020FF
.text:0040203D                 cmp     edi, ebx
.text:0040203F                 jbe     loc_4020FF
.text:00402045
.text:00402045 loc_402045:                             ; CODE XREF: pSetupMakeSurePathExists(x)+191↓j
.text:00402045                 xor     eax, eax
.text:00402047                 mov     [edi], ax
.text:0040204A                 lea     eax, [ebp+Buffer]
.text:00402050                 push    esi             ; Ch
.text:00402051                 push    eax             ; Str
.text:00402052                 call    ds:wcsrchr
.text:00402058                 mov     [ebp+var_218], eax
.text:0040205E                 pop     ecx
.text:0040205F                 pop     ecx
.text:00402060                 test    eax, eax
.text:00402062                 jz      loc_4020FF
.text:00402068                 movzx   esi, word ptr [eax+2]
.text:0040206C                 xor     ecx, ecx
.text:0040206E                 mov     [eax+2], cx
.text:00402072                 lea     eax, [ebp+Buffer]
.text:00402078                 push    eax             ; lpFileName
.text:00402079                 call    ds:GetFileAttributesW
.text:0040207F                 mov     ecx, eax
.text:00402081                 mov     eax, [ebp+var_218]
.text:00402087                 mov     [eax+2], si
.text:0040208B                 cmp     ecx, 0FFFFFFFFh
.text:0040208E                 jnz     short loc_4020EF
.text:00402090                 mov     edi, eax
.text:00402092                 push    5Ch ; '\'
.text:00402094                 pop     esi
.text:00402095                 cmp     eax, ebx
.text:00402097                 ja      short loc_402045
.text:00402099
.text:00402099 loc_402099:                             ; CODE XREF: pSetupMakeSurePathExists(x)+1EC↓j
.text:00402099                 cmp     edi, ebx
.text:0040209B                 jbe     short loc_4020FF
.text:0040209D                 xor     ebx, ebx
.text:0040209F                 lea     eax, [ebp+Buffer]
.text:004020A5                 push    ebx             ; lpSecurityAttributes
.text:004020A6                 push    eax             ; lpPathName
.text:004020A7                 call    ds:CreateDirectoryW
.text:004020AD                 test    eax, eax
.text:004020AF                 jz      loc_401F47
.text:004020B5                 push    5Ch ; '\'
.text:004020B7                 pop     esi
.text:004020B8
.text:004020B8 loc_4020B8:                             ; CODE XREF: pSetupMakeSurePathExists(x)+1E2↓j
.text:004020B8                 cmp     [edi+2], bx
.text:004020BC                 jz      short loc_4020FB
.text:004020BE                 mov     ecx, edi
.text:004020C0                 mov     [edi], si
.text:004020C3                 lea     edx, [ecx+2]
.text:004020C6
.text:004020C6 loc_4020C6:                             ; CODE XREF: pSetupMakeSurePathExists(x)+1C9↓j
.text:004020C6                 mov     ax, [ecx]
.text:004020C9                 add     ecx, 2
.text:004020CC                 cmp     ax, bx
.text:004020CF                 jnz     short loc_4020C6
.text:004020D1                 sub     ecx, edx
.text:004020D3                 lea     eax, [ebp+Buffer]
.text:004020D9                 sar     ecx, 1
.text:004020DB                 push    ebx             ; lpSecurityAttributes
.text:004020DC                 push    eax             ; lpPathName
.text:004020DD                 lea     edi, [edi+ecx*2]
.text:004020E0                 call    ds:CreateDirectoryW
.text:004020E6                 test    eax, eax
.text:004020E8                 jnz     short loc_4020B8
.text:004020EA                 jmp     loc_401F47
.text:004020EF ; ---------------------------------------------------------------------------
.text:004020EF
.text:004020EF loc_4020EF:                             ; CODE XREF: pSetupMakeSurePathExists(x)+188↑j
.text:004020EF                 test    cl, 10h
.text:004020F2                 jnz     short loc_402099
.text:004020F4                 mov     eax, 10Bh
.text:004020F9                 jmp     short loc_402102
.text:004020FB ; ---------------------------------------------------------------------------
.text:004020FB
.text:004020FB loc_4020FB:                             ; CODE XREF: pSetupMakeSurePathExists(x)+1B6↑j
.text:004020FB                 xor     eax, eax
.text:004020FD                 jmp     short loc_402102
.text:004020FF ; ---------------------------------------------------------------------------
.text:004020FF
.text:004020FF loc_4020FF:                             ; CODE XREF: pSetupMakeSurePathExists(x)+37↑j
.text:004020FF                                         ; pSetupMakeSurePathExists(x)+54↑j ...
.text:004020FF                 push    7Bh ; '{'
.text:00402101                 pop     eax
.text:00402102
.text:00402102 loc_402102:                             ; CODE XREF: pSetupMakeSurePathExists(x)+47↑j
.text:00402102                                         ; pSetupMakeSurePathExists(x)+10A↑j ...
.text:00402102                 mov     ecx, [ebp+var_4]
.text:00402105                 pop     edi
.text:00402106                 pop     esi
.text:00402107                 xor     ecx, ebp        ; StackCookie
.text:00402109                 pop     ebx
.text:0040210A                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text:0040210F                 mov     esp, ebp
.text:00402111                 pop     ebp
.text:00402112                 retn
.text:00402112 _pSetupMakeSurePathExists@4 endp
.text:00402112
.text:00402112 ; ---------------------------------------------------------------------------
.text:00402113                 align 10h
.text:00402120
.text:00402120 ; =============== S U B R O U T I N E =======================================
.text:00402120
.text:00402120 ; Attributes: info_from_lumina
.text:00402120
.text:00402120 pre_c_init      proc near               ; DATA XREF: .text:004010B0↑o
.text:00402120                                         ; .text:___guard_fids_table↑o
.text:00402120                 mov     eax, 5A4Dh
.text:00402125                 cmp     ds:400000h, ax
.text:0040212C                 jz      short loc_402132
.text:0040212E
.text:0040212E loc_40212E:                             ; CODE XREF: pre_c_init+22↓j
.text:0040212E                                         ; pre_c_init+37↓j
.text:0040212E                 xor     eax, eax
.text:00402130                 jmp     short loc_402180
.text:00402132 ; ---------------------------------------------------------------------------
.text:00402132
.text:00402132 loc_402132:                             ; CODE XREF: pre_c_init+C↑j
.text:00402132                 mov     ecx, ds:40003Ch
.text:00402138                 cmp     dword ptr [ecx+400000h], 4550h
.text:00402142                 jnz     short loc_40212E
.text:00402144                 movzx   eax, word ptr [ecx+400018h]
.text:0040214B                 cmp     eax, 10Bh
.text:00402150                 jz      short loc_40216C
.text:00402152                 cmp     eax, 20Bh
.text:00402157                 jnz     short loc_40212E
.text:00402159                 xor     eax, eax
.text:0040215B                 cmp     dword ptr [ecx+400084h], 0Eh
.text:00402162                 jbe     short loc_402180
.text:00402164                 cmp     [ecx+4000F8h], eax
.text:0040216A                 jmp     short loc_40217D
.text:0040216C ; ---------------------------------------------------------------------------
.text:0040216C
.text:0040216C loc_40216C:                             ; CODE XREF: pre_c_init+30↑j
.text:0040216C                 xor     eax, eax
.text:0040216E                 cmp     dword ptr [ecx+400074h], 0Eh
.text:00402175                 jbe     short loc_402180
.text:00402177                 cmp     [ecx+4000E8h], eax
.text:0040217D
.text:0040217D loc_40217D:                             ; CODE XREF: pre_c_init+4A↑j
.text:0040217D                 setnz   al
.text:00402180
.text:00402180 loc_402180:                             ; CODE XREF: pre_c_init+10↑j
.text:00402180                                         ; pre_c_init+42↑j ...
.text:00402180                 push    2
.text:00402182                 mov     dword_403028, eax
.text:00402187                 call    __get_image_app_type
.text:0040218C                 push    eax             ; Type
.text:0040218D                 call    ds:__set_app_type
.text:00402193                 or      dword_4033D4, 0FFFFFFFFh
.text:0040219A                 or      dword_4033D8, 0FFFFFFFFh
.text:004021A1                 pop     ecx
.text:004021A2                 pop     ecx
.text:004021A3                 call    ds:__p__fmode
.text:004021A9                 mov     ecx, dword_40303C
.text:004021AF                 mov     [eax], ecx
.text:004021B1                 call    ds:__p__commode
.text:004021B7                 mov     ecx, dword_403030
.text:004021BD                 mov     [eax], ecx
.text:004021BF                 call    UserMathErrorFunction
.text:004021C4                 cmp     dword_403000, 0
.text:004021CB                 jnz     short loc_4021D9
.text:004021CD                 push    offset UserMathErrorFunction ; UserMathErrorFunction
.text:004021D2                 call    ds:__setusermatherr
.text:004021D8                 pop     ecx
.text:004021D9
.text:004021D9 loc_4021D9:                             ; CODE XREF: pre_c_init+AB↑j
.text:004021D9                 call    sub_4027B5
.text:004021DE                 xor     eax, eax
.text:004021E0                 retn
.text:004021E0 pre_c_init      endp
.text:004021E0
.text:004021E0 ; ---------------------------------------------------------------------------
.text:004021E1                 align 10h
.text:004021F0
.text:004021F0 ; =============== S U B R O U T I N E =======================================
.text:004021F0
.text:004021F0 ; Attributes: info_from_lumina
.text:004021F0
.text:004021F0 ; int pre_cpp_init()
.text:004021F0 pre_cpp_init    proc near               ; DATA XREF: .text:004010A4↑o
.text:004021F0                                         ; .text:004010C0↑o
.text:004021F0                 mov     eax, dword_403038
.text:004021F5                 push    offset dword_40302C
.text:004021FA                 push    dword_403034
.text:00402200                 mov     dword_40302C, eax
.text:00402205                 push    offset unk_403020
.text:0040220A                 push    offset unk_40301C
.text:0040220F                 push    offset unk_403018
.text:00402214                 call    ds:__getmainargs
.text:0040221A                 add     esp, 14h
.text:0040221D                 mov     dword_403024, eax
.text:00402222                 retn
.text:00402222 pre_cpp_init    endp
.text:00402222
.text:00402222 ; ---------------------------------------------------------------------------
.text:00402223                 align 10h
.text:00402230
.text:00402230 ; =============== S U B R O U T I N E =======================================
.text:00402230
.text:00402230 ; Attributes: library function
.text:00402230
.text:00402230                 public start
.text:00402230 start           proc near               ; DATA XREF: .text:004010C4↑o
.text:00402230 ; __unwind { // __SEH_prolog4_GS
.text:00402230                 call    ___security_init_cookie
.text:00402235                 jmp     $+5
.text:0040223A ; ---------------------------------------------------------------------------
.text:0040223A
.text:0040223A loc_40223A:                             ; CODE XREF: start+5↑j
.text:0040223A                 push    5Ch ; '\'
.text:0040223C                 push    offset stru_402A10
.text:00402241                 call    __SEH_prolog4_GS
.text:00402246                 and     dword ptr [ebp-24h], 0
.text:0040224A ;   __try { // __except at loc_40240B
.text:0040224A                 and     dword ptr [ebp-4], 0
.text:0040224E                 lea     eax, [ebp-6Ch]
.text:00402251                 push    eax             ; lpStartupInfo
.text:00402252                 call    ds:GetStartupInfoA
.text:00402252 ;   } // starts at 40224A
.text:00402258                 mov     dword ptr [ebp-4], 0FFFFFFFEh
.text:0040225F                 xor     ebx, ebx
.text:00402261                 inc     ebx
.text:00402262 ;   __try { // __except at loc_4023CF
.text:00402262                 mov     [ebp-4], ebx
.text:00402265                 mov     eax, large fs:18h
.text:0040226B                 mov     edi, [eax+4]
.text:0040226E                 xor     esi, esi
.text:00402270
.text:00402270 loc_402270:                             ; CODE XREF: start+74↓j
.text:00402270                 mov     edx, offset unk_4033DC
.text:00402275                 mov     ecx, edi
.text:00402277                 xor     eax, eax
.text:00402279                 lock cmpxchg [edx], ecx
.text:0040227D                 test    eax, eax
.text:0040227F                 jz      short loc_402287
.text:00402281                 cmp     eax, edi
.text:00402283                 jnz     short loc_402299
.text:00402285                 mov     esi, ebx
.text:00402287
.text:00402287 loc_402287:                             ; CODE XREF: start+4F↑j
.text:00402287                 cmp     dword_4033E0, ebx
.text:0040228D                 jnz     short loc_4022A6
.text:0040228F                 push    1Fh
.text:00402291                 call    _amsg_exit
.text:00402296                 pop     ecx
.text:00402297                 jmp     short loc_4022D5
.text:00402299 ; ---------------------------------------------------------------------------
.text:00402299
.text:00402299 loc_402299:                             ; CODE XREF: start+53↑j
.text:00402299                 push    3E8h            ; dwMilliseconds
.text:0040229E                 call    ds:Sleep
.text:004022A4                 jmp     short loc_402270
.text:004022A6 ; ---------------------------------------------------------------------------
.text:004022A6
.text:004022A6 loc_4022A6:                             ; CODE XREF: start+5D↑j
.text:004022A6                 cmp     dword_4033E0, 0
.text:004022AD                 jnz     short loc_4022CF
.text:004022AF                 mov     dword_4033E0, ebx
.text:004022B5                 push    offset dword_4010B8 ; Last
.text:004022BA                 push    offset dword_4010AC ; First
.text:004022BF                 call    __initterm_e
.text:004022C4                 pop     ecx
.text:004022C5                 pop     ecx
.text:004022C6                 test    eax, eax
.text:004022C8                 jz      short loc_4022D5
.text:004022CA                 jmp     loc_40240E
.text:004022CF ; ---------------------------------------------------------------------------
.text:004022CF
.text:004022CF loc_4022CF:                             ; CODE XREF: start+7D↑j
.text:004022CF                 mov     dword_403014, ebx
.text:004022D5
.text:004022D5 loc_4022D5:                             ; CODE XREF: start+67↑j
.text:004022D5                                         ; start+98↑j
.text:004022D5                 cmp     dword_4033E0, ebx
.text:004022DB                 jnz     short loc_4022F8
.text:004022DD                 push    offset Last     ; Last
.text:004022E2                 push    offset First    ; First
.text:004022E7                 call    _initterm
.text:004022EC                 pop     ecx
.text:004022ED                 pop     ecx
.text:004022EE                 mov     dword_4033E0, 2
.text:004022F8
.text:004022F8 loc_4022F8:                             ; CODE XREF: start+AB↑j
.text:004022F8                 test    esi, esi
.text:004022FA                 jnz     short loc_402305
.text:004022FC                 xor     eax, eax
.text:004022FE                 mov     ecx, offset unk_4033DC
.text:00402303                 xchg    eax, [ecx]
.text:00402305
.text:00402305 loc_402305:                             ; CODE XREF: start+CA↑j
.text:00402305                 cmp     pTarget, 0
.text:0040230C                 jz      short loc_402333
.text:0040230E                 push    offset pTarget  ; pTarget
.text:00402313                 call    __IsNonwritableInCurrentImage
.text:00402318                 pop     ecx
.text:00402319                 test    eax, eax
.text:0040231B                 jz      short loc_402333
.text:0040231D                 push    0
.text:0040231F                 push    2
.text:00402321                 push    0
.text:00402323                 mov     esi, pTarget
.text:00402329                 mov     ecx, esi
.text:0040232B                 call    ds:___guard_check_icall_fptr ; _guard_check_icall_nop(x)
.text:00402331                 call    esi ; pTarget
.text:00402333
.text:00402333 loc_402333:                             ; CODE XREF: start+DC↑j
.text:00402333                                         ; start+EB↑j
.text:00402333                 mov     eax, ds:_acmdln
.text:00402338                 mov     esi, [eax]
.text:0040233A                 mov     [ebp-20h], esi
.text:0040233D                 mov     edi, [ebp-24h]
.text:00402340
.text:00402340 loc_402340:                             ; CODE XREF: start+189↓j
.text:00402340                 mov     cl, [esi]
.text:00402342                 cmp     cl, 20h ; ' '
.text:00402345                 ja      short loc_402391
.text:00402347                 test    cl, cl
.text:00402349                 jz      short loc_40234F
.text:0040234B                 test    edi, edi
.text:0040234D                 jnz     short loc_402391
.text:0040234F
.text:0040234F loc_40234F:                             ; CODE XREF: start+119↑j
.text:0040234F                                         ; start+12D↓j
.text:0040234F                 mov     al, [esi]
.text:00402351                 test    al, al
.text:00402353                 jz      short loc_40235F
.text:00402355                 cmp     al, 20h ; ' '
.text:00402357                 ja      short loc_40235F
.text:00402359                 inc     esi
.text:0040235A                 mov     [ebp-20h], esi
.text:0040235D                 jmp     short loc_40234F
.text:0040235F ; ---------------------------------------------------------------------------
.text:0040235F
.text:0040235F loc_40235F:                             ; CODE XREF: start+123↑j
.text:0040235F                                         ; start+127↑j
.text:0040235F                 test    byte ptr [ebp-40h], 1
.text:00402363                 jz      short loc_40236B
.text:00402365                 movzx   eax, word ptr [ebp-3Ch]
.text:00402369                 jmp     short loc_40236E
.text:0040236B ; ---------------------------------------------------------------------------
.text:0040236B
.text:0040236B loc_40236B:                             ; CODE XREF: start+133↑j
.text:0040236B                 push    0Ah
.text:0040236D                 pop     eax
.text:0040236E
.text:0040236E loc_40236E:                             ; CODE XREF: start+139↑j
.text:0040236E                 push    eax
.text:0040236F                 push    esi
.text:00402370                 push    0
.text:00402372                 push    400000h
.text:00402377                 call    sub_401567
.text:0040237C ; ---------------------------------------------------------------------------
.text:0040237C                 mov     dword_403010, eax
.text:00402381                 cmp     dword_403028, 0
.text:00402388                 jnz     short loc_4023EA
.text:0040238A                 push    eax             ; Code
.text:0040238B                 call    ds:exit
.text:00402391 ; ---------------------------------------------------------------------------
.text:00402391
.text:00402391 loc_402391:                             ; CODE XREF: start+115↑j
.text:00402391                                         ; start+11D↑j
.text:00402391                 cmp     cl, 22h ; '"'
.text:00402394                 jnz     short loc_4023A2
.text:00402396                 xor     eax, eax
.text:00402398                 test    edi, edi
.text:0040239A                 setz    al
.text:0040239D                 mov     edi, eax
.text:0040239F                 mov     [ebp-24h], edi
.text:004023A2
.text:004023A2 loc_4023A2:                             ; CODE XREF: start+164↑j
.text:004023A2                 movzx   eax, cl
.text:004023A5                 push    eax             ; Ch
.text:004023A6                 call    ds:_ismbblead
.text:004023AC                 pop     ecx
.text:004023AD                 test    eax, eax
.text:004023AF                 jz      short loc_4023B5
.text:004023B1                 inc     esi
.text:004023B2                 mov     [ebp-20h], esi
.text:004023B5
.text:004023B5 loc_4023B5:                             ; CODE XREF: start+17F↑j
.text:004023B5                 inc     esi
.text:004023B6                 mov     [ebp-20h], esi
.text:004023B9                 jmp     short loc_402340
.text:004023BB ; ---------------------------------------------------------------------------
.text:004023BB
.text:004023BB loc_4023BB:                             ; DATA XREF: .text:00402A30↓o
.text:004023BB ;   __except filter // owned by 402262
.text:004023BB                 mov     ecx, [ebp-14h]
.text:004023BE                 mov     eax, [ecx]
.text:004023C0                 mov     eax, [eax]
.text:004023C2                 mov     [ebp-28h], eax
.text:004023C5                 push    ecx
.text:004023C6                 push    eax
.text:004023C7                 call    _XcptFilter
.text:004023CC                 pop     ecx
.text:004023CD                 pop     ecx
.text:004023CE                 retn
.text:004023CF ; ---------------------------------------------------------------------------
.text:004023CF
.text:004023CF loc_4023CF:                             ; DATA XREF: .text:00402A34↓o
.text:004023CF ;   __except(loc_4023BB) // owned by 402262
.text:004023CF                 mov     esp, [ebp-18h]
.text:004023D2                 mov     eax, [ebp-28h]
.text:004023D5                 mov     dword_403010, eax
.text:004023DA                 cmp     dword_403028, 0
.text:004023E1                 jnz     short loc_4023EA
.text:004023E3                 push    eax             ; Code
.text:004023E4                 call    ds:_exit
.text:004023EA ; ---------------------------------------------------------------------------
.text:004023EA
.text:004023EA loc_4023EA:                             ; CODE XREF: start+158↑j
.text:004023EA                                         ; start+1B1↑j
.text:004023EA                 cmp     dword_403014, 0
.text:004023F1                 jnz     short loc_4023FE
.text:004023F3                 call    ds:_cexit
.text:004023F9                 mov     eax, dword_403010
.text:004023F9 ;   } // starts at 402262
.text:004023FE
.text:004023FE loc_4023FE:                             ; CODE XREF: start+1C1↑j
.text:004023FE                 mov     dword ptr [ebp-4], 0FFFFFFFEh
.text:00402405                 jmp     short loc_40241A
.text:00402407 ; ---------------------------------------------------------------------------
.text:00402407
.text:00402407 loc_402407:                             ; DATA XREF: .text:00402A24↓o
.text:00402407 ;   __except filter // owned by 40224A
.text:00402407                 xor     eax, eax
.text:00402409                 inc     eax
.text:0040240A                 retn
.text:0040240B ; ---------------------------------------------------------------------------
.text:0040240B
.text:0040240B loc_40240B:                             ; DATA XREF: .text:00402A28↓o
.text:0040240B ;   __except(loc_402407) // owned by 40224A
.text:0040240B                 mov     esp, [ebp-18h]
.text:0040240E
.text:0040240E loc_40240E:                             ; CODE XREF: start+9A↑j
.text:0040240E                 mov     dword ptr [ebp-4], 0FFFFFFFEh
.text:00402415                 mov     eax, 0FFh
.text:0040241A
.text:0040241A loc_40241A:                             ; CODE XREF: start+1D5↑j
.text:0040241A                 call    __SEH_epilog4_GS
.text:0040241F                 retn
.text:0040241F ; } // starts at 402230
.text:0040241F start           endp
.text:0040241F
.text:00402420
.text:00402420 ; =============== S U B R O U T I N E =======================================
.text:00402420
.text:00402420 ; Attributes: bp-based frame info_from_lumina
.text:00402420
.text:00402420 ; int __cdecl _initterm_e(_PIFV *First, _PIFV *Last)
.text:00402420 __initterm_e    proc near               ; CODE XREF: start+8F↑p
.text:00402420
.text:00402420 var_4           = dword ptr -4
.text:00402420 First           = dword ptr  8
.text:00402420 Last            = dword ptr  0Ch
.text:00402420
.text:00402420                 mov     edi, edi
.text:00402422                 push    ebp
.text:00402423                 mov     ebp, esp
.text:00402425                 push    ecx
.text:00402426                 mov     eax, ___security_cookie
.text:0040242B                 xor     eax, ebp
.text:0040242D                 mov     [ebp+var_4], eax
.text:00402430                 push    esi
.text:00402431                 mov     esi, [ebp+First]
.text:00402434                 xor     eax, eax
.text:00402436                 cmp     esi, [ebp+Last]
.text:00402439                 jnb     short loc_402459
.text:0040243B                 push    edi
.text:0040243C
.text:0040243C loc_40243C:                             ; CODE XREF: __initterm_e+36↓j
.text:0040243C                 test    eax, eax
.text:0040243E                 jnz     short loc_402458
.text:00402440                 mov     edi, [esi]
.text:00402442                 test    edi, edi
.text:00402444                 jz      short loc_402450
.text:00402446                 mov     ecx, edi
.text:00402448                 call    ds:___guard_check_icall_fptr ; _guard_check_icall_nop(x)
.text:0040244E                 call    edi
.text:00402450
.text:00402450 loc_402450:                             ; CODE XREF: __initterm_e+24↑j
.text:00402450                 add     esi, 4
.text:00402453                 cmp     esi, [ebp+Last]
.text:00402456                 jb      short loc_40243C
.text:00402458
.text:00402458 loc_402458:                             ; CODE XREF: __initterm_e+1E↑j
.text:00402458                 pop     edi
.text:00402459
.text:00402459 loc_402459:                             ; CODE XREF: __initterm_e+19↑j
.text:00402459                 mov     ecx, [ebp+var_4]
.text:0040245C                 xor     ecx, ebp        ; StackCookie
.text:0040245E                 pop     esi
.text:0040245F                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text:00402464                 mov     esp, ebp
.text:00402466                 pop     ebp
.text:00402467                 retn
.text:00402467 __initterm_e    endp
.text:00402467
.text:00402467 ; ---------------------------------------------------------------------------
.text:00402468                 align 10h
.text:00402470
.text:00402470 ; =============== S U B R O U T I N E =======================================
.text:00402470
.text:00402470 ; Attributes: bp-based frame info_from_lumina
.text:00402470
.text:00402470 ; _EXCEPTION_DISPOSITION __cdecl _except_handler4(_EXCEPTION_RECORD *ExceptionRecord, _EXCEPTION_REGISTRATION_RECORD *EstablisherFrame, _CONTEXT *ContextRecord, void *DispatcherContext)
.text:00402470 __except_handler4 proc near             ; DATA XREF: .text:004010C8↑o
.text:00402470                                         ; .text:___safe_se_handler_table↑o ...
.text:00402470
.text:00402470 arg_0           = dword ptr  8
.text:00402470 arg_4           = dword ptr  0Ch
.text:00402470 arg_8           = dword ptr  10h
.text:00402470 arg_C           = dword ptr  14h
.text:00402470
.text:00402470                 mov     edi, edi
.text:00402472                 push    ebp
.text:00402473                 mov     ebp, esp
.text:00402475                 push    [ebp+arg_C]
.text:00402478                 push    [ebp+arg_8]
.text:0040247B                 push    [ebp+arg_4]
.text:0040247E                 push    [ebp+arg_0]
.text:00402481                 push    offset @__security_check_cookie@4 ; __security_check_cookie(x)
.text:00402486                 push    offset ___security_cookie
.text:0040248B                 call    _except_handler4_common
.text:00402490                 add     esp, 18h
.text:00402493                 pop     ebp
.text:00402494                 retn
.text:00402494 __except_handler4 endp
.text:00402494
.text:00402494 ; ---------------------------------------------------------------------------
.text:00402495                 align 10h
.text:004024A0
.text:004024A0 ; =============== S U B R O U T I N E =======================================
.text:004024A0
.text:004024A0 ; Attributes: library function
.text:004024A0
.text:004024A0 ; void __fastcall __security_check_cookie(uintptr_t StackCookie)
.text:004024A0 @__security_check_cookie@4 proc near    ; CODE XREF: sub_401470+79↑p
.text:004024A0                                         ; sub_4014F4+6A↑p ...
.text:004024A0                 cmp     ecx, ___security_cookie
.text:004024A6                 jnz     short loc_4024AB
.text:004024A8                 retn    0
.text:004024AB ; ---------------------------------------------------------------------------
.text:004024AB
.text:004024AB loc_4024AB:                             ; CODE XREF: __security_check_cookie(x)+6↑j
.text:004024AB                 jmp     ___report_gsfailure
.text:004024AB @__security_check_cookie@4 endp
.text:004024AB
.text:004024B0
.text:004024B0 ; =============== S U B R O U T I N E =======================================
.text:004024B0
.text:004024B0 ; Attributes: bp-based frame info_from_lumina
.text:004024B0
.text:004024B0 ; LONG __stdcall __CxxUnhandledExceptionFilter(struct _EXCEPTION_POINTERS *ExceptionInfo)
.text:004024B0 ?__CxxUnhandledExceptionFilter@@YGJPAU_EXCEPTION_POINTERS@@@Z proc near
.text:004024B0                                         ; DATA XREF: .text:004010D0↑o
.text:004024B0                                         ; sub_402500↓o
.text:004024B0
.text:004024B0 ExceptionInfo   = dword ptr  8
.text:004024B0
.text:004024B0                 mov     edi, edi
.text:004024B2                 push    ebp
.text:004024B3                 mov     ebp, esp
.text:004024B5                 mov     eax, [ebp+ExceptionInfo]
.text:004024B8                 mov     eax, [eax]
.text:004024BA                 cmp     dword ptr [eax], 0E06D7363h
.text:004024C0                 jnz     short loc_4024ED
.text:004024C2                 cmp     dword ptr [eax+10h], 3
.text:004024C6                 jnz     short loc_4024ED
.text:004024C8                 mov     eax, [eax+14h]
.text:004024CB                 cmp     eax, 19930520h
.text:004024D0                 jz      short loc_4024E7
.text:004024D2                 cmp     eax, 19930521h
.text:004024D7                 jz      short loc_4024E7
.text:004024D9                 cmp     eax, 19930522h
.text:004024DE                 jz      short loc_4024E7
.text:004024E0                 cmp     eax, 1994000h
.text:004024E5                 jnz     short loc_4024ED
.text:004024E7
.text:004024E7 loc_4024E7:                             ; CODE XREF: __CxxUnhandledExceptionFilter(_EXCEPTION_POINTERS *)+20↑j
.text:004024E7                                         ; __CxxUnhandledExceptionFilter(_EXCEPTION_POINTERS *)+27↑j ...
.text:004024E7                 call    ds:?terminate@@YAXXZ ; terminate(void)
.text:004024ED ; ---------------------------------------------------------------------------
.text:004024ED
.text:004024ED loc_4024ED:                             ; CODE XREF: __CxxUnhandledExceptionFilter(_EXCEPTION_POINTERS *)+10↑j
.text:004024ED                                         ; __CxxUnhandledExceptionFilter(_EXCEPTION_POINTERS *)+16↑j ...
.text:004024ED                 xor     eax, eax
.text:004024EF                 pop     ebp
.text:004024F0                 retn    4
.text:004024F0 ?__CxxUnhandledExceptionFilter@@YGJPAU_EXCEPTION_POINTERS@@@Z endp
.text:004024F0
.text:004024F0 ; ---------------------------------------------------------------------------
.text:004024F3                 align 10h
.text:00402500
.text:00402500 ; =============== S U B R O U T I N E =======================================
.text:00402500
.text:00402500
.text:00402500 sub_402500      proc near               ; DATA XREF: .text:004010B4↑o
.text:00402500                                         ; .text:004010D4↑o
.text:00402500                 push    offset ?__CxxUnhandledExceptionFilter@@YGJPAU_EXCEPTION_POINTERS@@@Z ; lpTopLevelExceptionFilter
.text:00402505                 call    ds:SetUnhandledExceptionFilter
.text:0040250B                 xor     eax, eax
.text:0040250D                 retn
.text:0040250D sub_402500      endp
.text:0040250D
.text:0040250E
.text:0040250E ; =============== S U B R O U T I N E =======================================
.text:0040250E
.text:0040250E ; Attributes: thunk
.text:0040250E
.text:0040250E _XcptFilter     proc near               ; CODE XREF: start+197↑p
.text:0040250E                 jmp     ds:__imp__XcptFilter
.text:0040250E _XcptFilter     endp
.text:0040250E
.text:00402514
.text:00402514 ; =============== S U B R O U T I N E =======================================
.text:00402514
.text:00402514 ; Attributes: bp-based frame info_from_lumina
.text:00402514
.text:00402514 ; __stdcall RtlpImageNtHeader(x)
.text:00402514 _RtlpImageNtHeader@4 proc near          ; CODE XREF: __get_image_app_type+12↓p
.text:00402514
.text:00402514 var_1C          = dword ptr -1Ch
.text:00402514 ms_exc          = CPPEH_RECORD ptr -18h
.text:00402514 arg_0           = dword ptr  8
.text:00402514
.text:00402514 ; __unwind { // __SEH_prolog4
.text:00402514                 push    0Ch
.text:00402516                 push    offset stru_402A38
.text:0040251B                 call    __SEH_prolog4
.text:00402520                 xor     ecx, ecx
.text:00402522                 mov     eax, [ebp+arg_0]
.text:00402525                 test    eax, eax
.text:00402527                 jz      short loc_402574
.text:00402529                 cmp     eax, 0FFFFFFFFh
.text:0040252C                 jz      short loc_402574
.text:0040252E ;   __try { // __except at loc_402565
.text:0040252E                 mov     [ebp+ms_exc.registration.TryLevel], ecx
.text:00402531                 mov     edx, 5A4Dh
.text:00402536                 cmp     [eax], dx
.text:00402539                 jnz     short loc_40256D
.text:0040253B                 mov     edx, [eax+3Ch]
.text:0040253E                 test    edx, edx
.text:00402540                 js      short loc_40256D
.text:00402542                 cmp     edx, 10000000h
.text:00402548                 jnb     short loc_40256D
.text:0040254A                 add     eax, edx
.text:0040254C                 mov     [ebp+var_1C], eax
.text:0040254F                 mov     ecx, [eax]
.text:00402551                 sub     ecx, 4550h
.text:00402557                 neg     ecx
.text:00402559                 sbb     ecx, ecx
.text:0040255B                 not     ecx
.text:0040255D                 and     ecx, eax
.text:0040255F                 jmp     short loc_40256A
.text:00402561 ; ---------------------------------------------------------------------------
.text:00402561
.text:00402561 loc_402561:                             ; DATA XREF: .text:stru_402A38↓o
.text:00402561 ;   __except filter // owned by 40252E
.text:00402561                 xor     eax, eax
.text:00402563                 inc     eax
.text:00402564                 retn
.text:00402565 ; ---------------------------------------------------------------------------
.text:00402565
.text:00402565 loc_402565:                             ; DATA XREF: .text:stru_402A38↓o
.text:00402565 ;   __except(loc_402561) // owned by 40252E
.text:00402565                 mov     esp, [ebp+ms_exc.old_esp]
.text:00402568                 xor     ecx, ecx
.text:0040256A
.text:0040256A loc_40256A:                             ; CODE XREF: RtlpImageNtHeader(x)+4B↑j
.text:0040256A                 mov     [ebp+var_1C], ecx
.text:0040256A ;   } // starts at 40252E
.text:0040256D
.text:0040256D loc_40256D:                             ; CODE XREF: RtlpImageNtHeader(x)+25↑j
.text:0040256D                                         ; RtlpImageNtHeader(x)+2C↑j ...
.text:0040256D                 mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
.text:00402574
.text:00402574 loc_402574:                             ; CODE XREF: RtlpImageNtHeader(x)+13↑j
.text:00402574                                         ; RtlpImageNtHeader(x)+18↑j
.text:00402574                 mov     eax, ecx
.text:00402576                 call    __SEH_epilog4
.text:0040257B                 retn    4
.text:0040257B ; } // starts at 402514
.text:0040257B _RtlpImageNtHeader@4 endp
.text:0040257B
.text:0040257E
.text:0040257E ; =============== S U B R O U T I N E =======================================
.text:0040257E
.text:0040257E ; Attributes: bp-based frame info_from_lumina
.text:0040257E
.text:0040257E ; int __cdecl _get_image_app_type(int)
.text:0040257E __get_image_app_type proc near          ; CODE XREF: pre_c_init+67↑p
.text:0040257E
.text:0040257E arg_0           = dword ptr  8
.text:0040257E
.text:0040257E                 mov     edi, edi
.text:00402580                 push    ebp
.text:00402581                 mov     ebp, esp
.text:00402583                 push    0               ; lpModuleName
.text:00402585                 call    ds:GetModuleHandleA
.text:0040258B                 test    eax, eax
.text:0040258D                 jz      short loc_4025AF
.text:0040258F                 push    eax
.text:00402590                 call    _RtlpImageNtHeader@4 ; RtlpImageNtHeader(x)
.text:00402595                 test    eax, eax
.text:00402597                 jz      short loc_4025AF
.text:00402599                 movzx   ecx, word ptr [eax+5Ch]
.text:0040259D                 push    2
.text:0040259F                 pop     eax
.text:004025A0                 cmp     cx, ax
.text:004025A3                 jz      short loc_4025B2
.text:004025A5                 cmp     ecx, 3
.text:004025A8                 jnz     short loc_4025AF
.text:004025AA                 xor     eax, eax
.text:004025AC                 inc     eax
.text:004025AD                 pop     ebp
.text:004025AE                 retn
.text:004025AF ; ---------------------------------------------------------------------------
.text:004025AF
.text:004025AF loc_4025AF:                             ; CODE XREF: __get_image_app_type+F↑j
.text:004025AF                                         ; __get_image_app_type+19↑j ...
.text:004025AF                 mov     eax, [ebp+arg_0]
.text:004025B2
.text:004025B2 loc_4025B2:                             ; CODE XREF: __get_image_app_type+25↑j
.text:004025B2                 pop     ebp
.text:004025B3                 retn
.text:004025B3 __get_image_app_type endp
.text:004025B3
.text:004025B4
.text:004025B4 ; =============== S U B R O U T I N E =======================================
.text:004025B4
.text:004025B4 ; Attributes: thunk
.text:004025B4
.text:004025B4 _amsg_exit      proc near               ; CODE XREF: start+61↑p
.text:004025B4                 jmp     ds:__imp__amsg_exit
.text:004025B4 _amsg_exit      endp
.text:004025B4
.text:004025B4 ; ---------------------------------------------------------------------------
.text:004025BA                 align 10h
.text:004025C0
.text:004025C0 ; =============== S U B R O U T I N E =======================================
.text:004025C0
.text:004025C0
.text:004025C0 ; int __cdecl UserMathErrorFunction(struct _exception *)
.text:004025C0 UserMathErrorFunction proc near         ; CODE XREF: pre_c_init+9F↑p
.text:004025C0                                         ; DATA XREF: .text:004010D8↑o ...
.text:004025C0                 xor     eax, eax
.text:004025C2                 retn
.text:004025C2 UserMathErrorFunction endp
.text:004025C2
.text:004025C2 ; ---------------------------------------------------------------------------
.text:004025C3                 align 10h
.text:004025D0
.text:004025D0 ; =============== S U B R O U T I N E =======================================
.text:004025D0
.text:004025D0 ; Attributes: bp-based frame info_from_lumina
.text:004025D0
.text:004025D0 ; _IMAGE_SECTION_HEADER *__cdecl _FindPESection(char *pImageBase, unsigned int rva)
.text:004025D0 __FindPESection proc near               ; CODE XREF: __IsNonwritableInCurrentImage+5B↓p
.text:004025D0
.text:004025D0 arg_0           = dword ptr  8
.text:004025D0 arg_4           = dword ptr  0Ch
.text:004025D0
.text:004025D0                 mov     edi, edi
.text:004025D2                 push    ebp
.text:004025D3                 mov     ebp, esp
.text:004025D5                 mov     eax, [ebp+arg_0]
.text:004025D8                 xor     edx, edx
.text:004025DA                 push    ebx
.text:004025DB                 push    esi
.text:004025DC                 push    edi
.text:004025DD                 mov     ecx, [eax+3Ch]
.text:004025E0                 add     ecx, eax
.text:004025E2                 movzx   eax, word ptr [ecx+14h]
.text:004025E6                 movzx   ebx, word ptr [ecx+6]
.text:004025EA                 add     eax, 18h
.text:004025ED                 add     eax, ecx
.text:004025EF                 test    ebx, ebx
.text:004025F1                 jz      short loc_40260E
.text:004025F3                 mov     edi, [ebp+arg_4]
.text:004025F6
.text:004025F6 loc_4025F6:                             ; CODE XREF: __FindPESection+3C↓j
.text:004025F6                 mov     esi, [eax+0Ch]
.text:004025F9                 cmp     edi, esi
.text:004025FB                 jb      short loc_402606
.text:004025FD                 mov     ecx, [eax+8]
.text:00402600                 add     ecx, esi
.text:00402602                 cmp     edi, ecx
.text:00402604                 jb      short loc_402610
.text:00402606
.text:00402606 loc_402606:                             ; CODE XREF: __FindPESection+2B↑j
.text:00402606                 inc     edx
.text:00402607                 add     eax, 28h ; '('
.text:0040260A                 cmp     edx, ebx
.text:0040260C                 jb      short loc_4025F6
.text:0040260E
.text:0040260E loc_40260E:                             ; CODE XREF: __FindPESection+21↑j
.text:0040260E                 xor     eax, eax
.text:00402610
.text:00402610 loc_402610:                             ; CODE XREF: __FindPESection+34↑j
.text:00402610                 pop     edi
.text:00402611                 pop     esi
.text:00402612                 pop     ebx
.text:00402613                 pop     ebp
.text:00402614                 retn
.text:00402614 __FindPESection endp
.text:00402614
.text:00402614 ; ---------------------------------------------------------------------------
.text:00402615                 align 10h
.text:00402620
.text:00402620 ; =============== S U B R O U T I N E =======================================
.text:00402620
.text:00402620 ; Attributes: bp-based frame info_from_lumina
.text:00402620
.text:00402620 ; int __cdecl _IsNonwritableInCurrentImage(char *pTarget)
.text:00402620 __IsNonwritableInCurrentImage proc near ; CODE XREF: start+E3↑p
.text:00402620
.text:00402620 ms_exc          = CPPEH_RECORD ptr -18h
.text:00402620 arg_0           = dword ptr  8
.text:00402620
.text:00402620                 mov     edi, edi
.text:00402622                 push    ebp
.text:00402623                 mov     ebp, esp
.text:00402625                 push    0FFFFFFFEh
.text:00402627                 push    offset stru_402A58
.text:0040262C                 push    offset __except_handler4
.text:00402631                 mov     eax, large fs:0
.text:00402637                 push    eax
.text:00402638                 sub     esp, 8
.text:0040263B                 push    ebx
.text:0040263C                 push    esi
.text:0040263D                 push    edi
.text:0040263E                 mov     eax, ___security_cookie
.text:00402643                 xor     [ebp+ms_exc.registration.ScopeTable], eax
.text:00402646                 xor     eax, ebp
.text:00402648                 push    eax
.text:00402649                 lea     eax, [ebp+ms_exc.registration]
.text:0040264C                 mov     large fs:0, eax
.text:00402652                 mov     [ebp+ms_exc.old_esp], esp
.text:00402655                 mov     [ebp+ms_exc.registration.TryLevel], 0
.text:0040265C                 push    400000h
.text:00402661                 call    __ValidateImageBase
.text:00402666                 add     esp, 4
.text:00402669                 test    eax, eax
.text:0040266B                 jz      short loc_4026C1
.text:0040266D                 mov     eax, [ebp+arg_0]
.text:00402670                 sub     eax, 400000h
.text:00402675                 push    eax
.text:00402676                 push    400000h
.text:0040267B                 call    __FindPESection
.text:00402680                 add     esp, 8
.text:00402683                 test    eax, eax
.text:00402685                 jz      short loc_4026C1
.text:00402687                 mov     eax, [eax+24h]
.text:0040268A                 shr     eax, 1Fh
.text:0040268D                 not     eax
.text:0040268F                 and     eax, 1
.text:00402692                 mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
.text:00402699                 mov     ecx, [ebp+ms_exc.registration.Next]
.text:0040269C                 mov     large fs:0, ecx
.text:004026A3                 pop     ecx
.text:004026A4                 pop     edi
.text:004026A5                 pop     esi
.text:004026A6                 pop     ebx
.text:004026A7                 mov     esp, ebp
.text:004026A9                 pop     ebp
.text:004026AA                 retn
.text:004026AB ; ---------------------------------------------------------------------------
.text:004026AB
.text:004026AB loc_4026AB:                             ; DATA XREF: .text:stru_402A58↓o
.text:004026AB                 mov     eax, [ebp+ms_exc.exc_ptr]
.text:004026AE                 mov     eax, [eax]
.text:004026B0                 xor     ecx, ecx
.text:004026B2                 cmp     dword ptr [eax], 0C0000005h
.text:004026B8                 setz    cl
.text:004026BB                 mov     eax, ecx
.text:004026BD                 retn
.text:004026BE ; ---------------------------------------------------------------------------
.text:004026BE
.text:004026BE loc_4026BE:                             ; DATA XREF: .text:stru_402A58↓o
.text:004026BE                 mov     esp, [ebp+ms_exc.old_esp]
.text:004026C1
.text:004026C1 loc_4026C1:                             ; CODE XREF: __IsNonwritableInCurrentImage+4B↑j
.text:004026C1                                         ; __IsNonwritableInCurrentImage+65↑j
.text:004026C1                 mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
.text:004026C8                 xor     eax, eax
.text:004026CA                 mov     ecx, [ebp+ms_exc.registration.Next]
.text:004026CD                 mov     large fs:0, ecx
.text:004026D4                 pop     ecx
.text:004026D5                 pop     edi
.text:004026D6                 pop     esi
.text:004026D7                 pop     ebx
.text:004026D8                 mov     esp, ebp
.text:004026DA                 pop     ebp
.text:004026DB                 retn
.text:004026DB __IsNonwritableInCurrentImage endp
.text:004026DB
.text:004026DB ; ---------------------------------------------------------------------------
.text:004026DC                 align 10h
.text:004026E0
.text:004026E0 ; =============== S U B R O U T I N E =======================================
.text:004026E0
.text:004026E0 ; Attributes: bp-based frame info_from_lumina
.text:004026E0
.text:004026E0 ; int __cdecl _ValidateImageBase(char *pImageBase)
.text:004026E0 __ValidateImageBase proc near           ; CODE XREF: __IsNonwritableInCurrentImage+41↑p
.text:004026E0
.text:004026E0 arg_0           = dword ptr  8
.text:004026E0
.text:004026E0                 mov     edi, edi
.text:004026E2                 push    ebp
.text:004026E3                 mov     ebp, esp
.text:004026E5                 mov     eax, [ebp+arg_0]
.text:004026E8                 mov     ecx, 5A4Dh
.text:004026ED                 cmp     [eax], cx
.text:004026F0                 jz      short loc_4026F6
.text:004026F2                 xor     eax, eax
.text:004026F4                 pop     ebp
.text:004026F5                 retn
.text:004026F6 ; ---------------------------------------------------------------------------
.text:004026F6
.text:004026F6 loc_4026F6:                             ; CODE XREF: __ValidateImageBase+10↑j
.text:004026F6                 mov     ecx, [eax+3Ch]
.text:004026F9                 add     ecx, eax
.text:004026FB                 xor     eax, eax
.text:004026FD                 cmp     dword ptr [ecx], 4550h
.text:00402703                 jnz     short loc_402711
.text:00402705                 mov     edx, 10Bh
.text:0040270A                 cmp     [ecx+18h], dx
.text:0040270E                 setz    al
.text:00402711
.text:00402711 loc_402711:                             ; CODE XREF: __ValidateImageBase+23↑j
.text:00402711                 pop     ebp
.text:00402712                 retn
.text:00402712 __ValidateImageBase endp
.text:00402712
.text:00402713
.text:00402713 ; =============== S U B R O U T I N E =======================================
.text:00402713
.text:00402713 ; Attributes: bp-based frame info_from_lumina
.text:00402713
.text:00402713 ; void __cdecl __security_init_cookie()
.text:00402713 ___security_init_cookie proc near       ; CODE XREF: start↑p
.text:00402713
.text:00402713 PerformanceCount= LARGE_INTEGER ptr -14h
.text:00402713 SystemTimeAsFileTime= _FILETIME ptr -0Ch
.text:00402713 var_4           = dword ptr -4
.text:00402713
.text:00402713                 mov     edi, edi
.text:00402715                 push    ebp
.text:00402716                 mov     ebp, esp
.text:00402718                 sub     esp, 14h
.text:0040271B                 and     [ebp+SystemTimeAsFileTime.dwLowDateTime], 0
.text:0040271F                 and     [ebp+SystemTimeAsFileTime.dwHighDateTime], 0
.text:00402723                 mov     eax, ___security_cookie
.text:00402728                 push    esi
.text:00402729                 push    edi
.text:0040272A                 mov     edi, 0BB40E64Eh
.text:0040272F                 mov     esi, 0FFFF0000h
.text:00402734                 cmp     eax, edi
.text:00402736                 jz      short loc_402745
.text:00402738                 test    esi, eax
.text:0040273A                 jz      short loc_402745
.text:0040273C                 not     eax
.text:0040273E                 mov     dword_403008, eax
.text:00402743                 jmp     short loc_4027AF
.text:00402745 ; ---------------------------------------------------------------------------
.text:00402745
.text:00402745 loc_402745:                             ; CODE XREF: ___security_init_cookie+23↑j
.text:00402745                                         ; ___security_init_cookie+27↑j
.text:00402745                 lea     eax, [ebp+SystemTimeAsFileTime]
.text:00402748                 push    eax             ; lpSystemTimeAsFileTime
.text:00402749                 call    ds:GetSystemTimeAsFileTime
.text:0040274F                 mov     eax, [ebp+SystemTimeAsFileTime.dwHighDateTime]
.text:00402752                 xor     eax, [ebp+SystemTimeAsFileTime.dwLowDateTime]
.text:00402755                 mov     [ebp+var_4], eax
.text:00402758                 call    ds:GetCurrentProcessId
.text:0040275E                 xor     [ebp+var_4], eax
.text:00402761                 call    ds:GetCurrentThreadId
.text:00402767                 xor     [ebp+var_4], eax
.text:0040276A                 call    ds:GetTickCount
.text:00402770                 xor     eax, [ebp+var_4]
.text:00402773                 lea     ecx, [ebp+var_4]
.text:00402776                 xor     eax, ecx
.text:00402778                 mov     [ebp+var_4], eax
.text:0040277B                 lea     eax, [ebp+PerformanceCount]
.text:0040277E                 push    eax             ; lpPerformanceCount
.text:0040277F                 call    ds:QueryPerformanceCounter
.text:00402785                 mov     eax, dword ptr [ebp+PerformanceCount+4]
.text:00402788                 xor     eax, dword ptr [ebp+PerformanceCount]
.text:0040278B                 mov     ecx, [ebp+var_4]
.text:0040278E                 xor     ecx, eax
.text:00402790                 cmp     ecx, edi
.text:00402792                 jz      short loc_40279C
.text:00402794                 test    ___security_cookie, esi
.text:0040279A                 jnz     short loc_4027A1
.text:0040279C
.text:0040279C loc_40279C:                             ; CODE XREF: ___security_init_cookie+7F↑j
.text:0040279C                 mov     ecx, 0BB40E64Fh
.text:004027A1
.text:004027A1 loc_4027A1:                             ; CODE XREF: ___security_init_cookie+87↑j
.text:004027A1                 mov     ___security_cookie, ecx
.text:004027A7                 not     ecx
.text:004027A9                 mov     dword_403008, ecx
.text:004027AF
.text:004027AF loc_4027AF:                             ; CODE XREF: ___security_init_cookie+30↑j
.text:004027AF                 pop     edi
.text:004027B0                 pop     esi
.text:004027B1                 mov     esp, ebp
.text:004027B3                 pop     ebp
.text:004027B4                 retn
.text:004027B4 ___security_init_cookie endp
.text:004027B4
.text:004027B5
.text:004027B5 ; =============== S U B R O U T I N E =======================================
.text:004027B5
.text:004027B5
.text:004027B5 sub_4027B5      proc near               ; CODE XREF: pre_c_init:loc_4021D9↑p
.text:004027B5                 push    30000h          ; Mask
.text:004027BA                 push    10000h          ; NewValue
.text:004027BF                 call    ds:_controlfp
.text:004027C5                 pop     ecx
.text:004027C6                 pop     ecx
.text:004027C7                 retn
.text:004027C7 sub_4027B5      endp
.text:004027C7
.text:004027C8
.text:004027C8 ; =============== S U B R O U T I N E =======================================
.text:004027C8
.text:004027C8 ; Attributes: thunk
.text:004027C8
.text:004027C8 ; void __cdecl initterm(_PVFV *First, _PVFV *Last)
.text:004027C8 _initterm       proc near               ; CODE XREF: start+B7↑p
.text:004027C8
.text:004027C8 First           = dword ptr  4
.text:004027C8 Last            = dword ptr  8
.text:004027C8
.text:004027C8                 jmp     ds:__imp__initterm
.text:004027C8 _initterm       endp
.text:004027C8
.text:004027C8 ; ---------------------------------------------------------------------------
.text:004027CE                 align 10h
.text:004027D0
.text:004027D0 ; =============== S U B R O U T I N E =======================================
.text:004027D0
.text:004027D0 ; Attributes: library function
.text:004027D0
.text:004027D0 __SEH_prolog4_GS proc near              ; CODE XREF: start+11↑p
.text:004027D0
.text:004027D0 arg_4           = dword ptr  8
.text:004027D0
.text:004027D0                 push    offset __except_handler4
.text:004027D5                 push    large dword ptr fs:0
.text:004027DC                 mov     eax, [esp+8+arg_4]
.text:004027E0                 mov     [esp+8+arg_4], ebp
.text:004027E4                 lea     ebp, [esp+8+arg_4]
.text:004027E8                 sub     esp, eax
.text:004027EA                 push    ebx
.text:004027EB                 push    esi
.text:004027EC                 push    edi
.text:004027ED                 mov     eax, ___security_cookie
.text:004027F2                 xor     [ebp-4], eax
.text:004027F5                 xor     eax, ebp
.text:004027F7                 mov     [ebp-1Ch], eax
.text:004027FA                 push    eax
.text:004027FB                 mov     [ebp-18h], esp
.text:004027FE                 push    dword ptr [ebp-8]
.text:00402801                 mov     eax, [ebp-4]
.text:00402804                 mov     dword ptr [ebp-4], 0FFFFFFFEh
.text:0040280B                 mov     [ebp-8], eax
.text:0040280E                 lea     eax, [ebp-10h]
.text:00402811                 mov     large fs:0, eax
.text:00402817                 retn
.text:00402817 __SEH_prolog4_GS endp
.text:00402817
.text:00402818
.text:00402818 ; =============== S U B R O U T I N E =======================================
.text:00402818
.text:00402818 ; Attributes: library function
.text:00402818
.text:00402818 __SEH_epilog4_GS proc near              ; CODE XREF: start:loc_40241A↑p
.text:00402818                 mov     ecx, [ebp-1Ch]
.text:0040281B                 xor     ecx, ebp        ; StackCookie
.text:0040281D                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text:00402822                 jmp     __SEH_epilog4
.text:00402822 __SEH_epilog4_GS endp
.text:00402822
.text:00402822 ; ---------------------------------------------------------------------------
.text:00402827                 align 10h
.text:00402830
.text:00402830 ; =============== S U B R O U T I N E =======================================
.text:00402830
.text:00402830
.text:00402830 ; __fastcall _guard_check_icall_nop(x)
.text:00402830 @_guard_check_icall_nop@4 proc near     ; CODE XREF: sub_401470+60↑p
.text:00402830                                         ; sub_4014F4+4F↑p ...
.text:00402830                 retn
.text:00402830 @_guard_check_icall_nop@4 endp
.text:00402830
.text:00402830 ; ---------------------------------------------------------------------------
.text:00402831                 align 2
.text:00402832
.text:00402832 ; =============== S U B R O U T I N E =======================================
.text:00402832
.text:00402832 ; Attributes: thunk
.text:00402832
.text:00402832 _except_handler4_common proc near       ; CODE XREF: __except_handler4+1B↑p
.text:00402832                 jmp     ds:__imp__except_handler4_common
.text:00402832 _except_handler4_common endp
.text:00402832
.text:00402838
.text:00402838 ; =============== S U B R O U T I N E =======================================
.text:00402838
.text:00402838 ; Attributes: bp-based frame info_from_lumina
.text:00402838
.text:00402838 ; void __cdecl __raise_securityfailure(_EXCEPTION_POINTERS *ExceptionPointers)
.text:00402838 ___raise_securityfailure proc near      ; CODE XREF: ___report_gsfailure+107↓p
.text:00402838
.text:00402838 ExceptionInfo   = dword ptr  8
.text:00402838
.text:00402838                 mov     edi, edi
.text:0040283A                 push    ebp
.text:0040283B                 mov     ebp, esp
.text:0040283D                 push    0               ; lpTopLevelExceptionFilter
.text:0040283F                 call    ds:SetUnhandledExceptionFilter
.text:00402845                 push    [ebp+ExceptionInfo] ; ExceptionInfo
.text:00402848                 call    ds:UnhandledExceptionFilter
.text:0040284E                 push    0C0000409h      ; uExitCode
.text:00402853                 call    ds:GetCurrentProcess
.text:00402859                 push    eax             ; hProcess
.text:0040285A                 call    ds:TerminateProcess
.text:00402860                 pop     ebp
.text:00402861                 retn
.text:00402861 ___raise_securityfailure endp
.text:00402861
.text:00402862
.text:00402862 ; =============== S U B R O U T I N E =======================================
.text:00402862
.text:00402862 ; Attributes: noreturn bp-based frame info_from_lumina
.text:00402862
.text:00402862 ; void __cdecl __noreturn __report_gsfailure()
.text:00402862 ___report_gsfailure proc near           ; CODE XREF: __security_check_cookie(x):loc_4024AB↑j
.text:00402862
.text:00402862 var_324         = dword ptr -324h
.text:00402862 var_8           = dword ptr -8
.text:00402862 var_s0          = dword ptr  0
.text:00402862 arg_0           = byte ptr  8
.text:00402862
.text:00402862                 mov     edi, edi
.text:00402864                 push    ebp
.text:00402865                 mov     ebp, esp
.text:00402867                 sub     esp, 324h
.text:0040286D                 mov     dword_403140, eax
.text:00402872                 mov     dword_40313C, ecx
.text:00402878                 mov     dword_403138, edx
.text:0040287E                 mov     dword_403134, ebx
.text:00402884                 mov     dword_403130, esi
.text:0040288A                 mov     dword_40312C, edi
.text:00402890                 mov     word_403158, ss
.text:00402897                 mov     word_40314C, cs
.text:0040289E                 mov     word_403128, ds
.text:004028A5                 mov     word_403124, es
.text:004028AC                 mov     word_403120, fs
.text:004028B3                 mov     word_40311C, gs
.text:004028BA                 pushf
.text:004028BB                 pop     dword_403150
.text:004028C1                 mov     eax, [ebp+var_s0]
.text:004028C4                 mov     dword_403144, eax
.text:004028C9                 mov     eax, [ebp+4]
.text:004028CC                 mov     dword_403148, eax
.text:004028D1                 lea     eax, [ebp+arg_0]
.text:004028D4                 mov     dword_403154, eax
.text:004028D9                 mov     eax, [ebp+var_324]
.text:004028DF                 mov     dword_403090, 10001h
.text:004028E9                 mov     eax, dword_403148
.text:004028EE                 mov     dword_40304C, eax
.text:004028F3                 mov     dword_403040, 0C0000409h
.text:004028FD                 mov     dword_403044, 1
.text:00402907                 mov     dword_403050, 3
.text:00402911                 push    4
.text:00402913                 pop     eax
.text:00402914                 imul    eax, 0
.text:00402917                 mov     dword_403054[eax], 2
.text:00402921                 push    4
.text:00402923                 pop     eax
.text:00402924                 shl     eax, 0
.text:00402927                 mov     ecx, ___security_cookie
.text:0040292D                 mov     dword_403054[eax], ecx
.text:00402933                 push    4
.text:00402935                 pop     eax
.text:00402936                 shl     eax, 1
.text:00402938                 mov     ecx, dword_403008
.text:0040293E                 mov     dword_403054[eax], ecx
.text:00402944                 push    4
.text:00402946                 pop     eax
.text:00402947                 imul    eax, 0
.text:0040294A                 mov     ecx, ___security_cookie
.text:00402950                 mov     [ebp+eax+var_8], ecx
.text:00402954                 push    4
.text:00402956                 pop     eax
.text:00402957                 shl     eax, 0
.text:0040295A                 mov     ecx, dword_403008
.text:00402960                 mov     [ebp+eax+var_8], ecx
.text:00402964                 push    offset ExceptionInfo ; ExceptionInfo
.text:00402969                 call    ___raise_securityfailure
.text:0040296E                 mov     esp, ebp
.text:00402970                 pop     ebp
.text:00402971                 retn
.text:00402971 ___report_gsfailure endp
.text:00402971
.text:00402971 ; ---------------------------------------------------------------------------
.text:00402972                 align 4
.text:00402974
.text:00402974 ; =============== S U B R O U T I N E =======================================
.text:00402974
.text:00402974 ; Attributes: library function
.text:00402974
.text:00402974 __SEH_prolog4   proc near               ; CODE XREF: sub_401567+7↑p
.text:00402974                                         ; sub_401DDF+7↑p ...
.text:00402974
.text:00402974 arg_4           = dword ptr  8
.text:00402974
.text:00402974                 push    offset __except_handler4
.text:00402979                 push    large dword ptr fs:0
.text:00402980                 mov     eax, [esp+8+arg_4]
.text:00402984                 mov     [esp+8+arg_4], ebp
.text:00402988                 lea     ebp, [esp+8+arg_4]
.text:0040298C                 sub     esp, eax
.text:0040298E                 push    ebx
.text:0040298F                 push    esi
.text:00402990                 push    edi
.text:00402991                 mov     eax, ___security_cookie
.text:00402996                 xor     [ebp-4], eax
.text:00402999                 xor     eax, ebp
.text:0040299B                 push    eax
.text:0040299C                 mov     [ebp-18h], esp
.text:0040299F                 push    dword ptr [ebp-8]
.text:004029A2                 mov     eax, [ebp-4]
.text:004029A5                 mov     dword ptr [ebp-4], 0FFFFFFFEh
.text:004029AC                 mov     [ebp-8], eax
.text:004029AF                 lea     eax, [ebp-10h]
.text:004029B2                 mov     large fs:0, eax
.text:004029B8                 retn
.text:004029B8 __SEH_prolog4   endp ; sp-analysis failed
.text:004029B8
.text:004029B9
.text:004029B9 ; =============== S U B R O U T I N E =======================================
.text:004029B9
.text:004029B9 ; Attributes: library function
.text:004029B9
.text:004029B9 __SEH_epilog4   proc near               ; CODE XREF: sub_401DDF:loc_401EFE↑p
.text:004029B9                                         ; RtlpImageNtHeader(x)+62↑p ...
.text:004029B9                 mov     ecx, [ebp-10h]
.text:004029BC                 mov     large fs:0, ecx
.text:004029C3                 pop     ecx
.text:004029C4                 pop     edi
.text:004029C5                 pop     edi
.text:004029C6                 pop     esi
.text:004029C7                 pop     ebx
.text:004029C8                 mov     esp, ebp
.text:004029CA                 pop     ebp
.text:004029CB                 push    ecx
.text:004029CC                 retn
.text:004029CC __SEH_epilog4   endp ; sp-analysis failed
.text:004029CC
.text:004029CC ; ---------------------------------------------------------------------------
.text:004029CD                 align 10h
.text:004029D0 stru_4029D0     dd 0FFFFFFFEh           ; GSCookieOffset
.text:004029D0                                         ; DATA XREF: sub_401567+2↑o
.text:004029D0                 dd 0                    ; GSCookieXOROffset
.text:004029D0                 dd 0FFFFFFC8h           ; EHCookieOffset
.text:004029D0                 dd 0                    ; EHCookieXOROffset
.text:004029D0                 dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
.text:004029D0                 dd offset loc_401622    ; ScopeRecord.FilterFunc
.text:004029D0                 dd offset loc_401630    ; ScopeRecord.HandlerFunc
.text:004029EC                 align 10h
.text:004029F0 stru_4029F0     dd 0FFFFFFFEh           ; GSCookieOffset
.text:004029F0                                         ; DATA XREF: sub_401DDF+2↑o
.text:004029F0                 dd 0                    ; GSCookieXOROffset
.text:004029F0                 dd 0FFFFFFC4h           ; EHCookieOffset
.text:004029F0                 dd 0                    ; EHCookieXOROffset
.text:004029F0                 dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
.text:004029F0                 dd offset loc_401EB4    ; ScopeRecord.FilterFunc
.text:004029F0                 dd offset loc_401EC4    ; ScopeRecord.HandlerFunc
.text:00402A0C                 align 10h
.text:00402A10 stru_402A10     dd 0FFFFFFE4h           ; GSCookieOffset
.text:00402A10                                         ; DATA XREF: start+C↑o
.text:00402A10                 dd 0                    ; GSCookieXOROffset
.text:00402A10                 dd 0FFFFFF84h           ; EHCookieOffset
.text:00402A10                 dd 0                    ; EHCookieXOROffset
.text:00402A20                 dd 0FFFFFFFEh
.text:00402A24                 dd offset loc_402407
.text:00402A28                 dd offset loc_40240B
.text:00402A2C                 dd 0FFFFFFFEh
.text:00402A30                 dd offset loc_4023BB
.text:00402A34                 dd offset loc_4023CF
.text:00402A38 stru_402A38     dd 0FFFFFFFEh           ; GSCookieOffset
.text:00402A38                                         ; DATA XREF: RtlpImageNtHeader(x)+2↑o
.text:00402A38                 dd 0                    ; GSCookieXOROffset
.text:00402A38                 dd 0FFFFFFD4h           ; EHCookieOffset
.text:00402A38                 dd 0                    ; EHCookieXOROffset
.text:00402A38                 dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
.text:00402A38                 dd offset loc_402561    ; ScopeRecord.FilterFunc
.text:00402A38                 dd offset loc_402565    ; ScopeRecord.HandlerFunc
.text:00402A54                 align 8
.text:00402A58 stru_402A58     dd 0FFFFFFFEh           ; GSCookieOffset
.text:00402A58                                         ; DATA XREF: __IsNonwritableInCurrentImage+7↑o
.text:00402A58                 dd 0                    ; GSCookieXOROffset
.text:00402A58                 dd 0FFFFFFD8h           ; EHCookieOffset
.text:00402A58                 dd 0                    ; EHCookieXOROffset
.text:00402A58                 dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
.text:00402A58                 dd offset loc_4026AB    ; ScopeRecord.FilterFunc
.text:00402A58                 dd offset loc_4026BE    ; ScopeRecord.HandlerFunc
.text:00402A74                 align 200h
.text:00402C00                 dd 100h dup(?)
.text:00402C00 _text           ends
.text:00402C00
.data:00403000 ; Section 2. (virtual address 00003000)
.data:00403000 ; Virtual size                  : 000003EC (   1004.)
.data:00403000 ; Section size in file          : 00000200 (    512.)
.data:00403000 ; Offset to raw data for section: 00002000
.data:00403000 ; Flags C0000040: Data Readable Writable
.data:00403000 ; Alignment     : default
.data:00403000 ; ===========================================================================
.data:00403000
.data:00403000 ; Segment type: Pure data
.data:00403000 ; Segment permissions: Read/Write
.data:00403000 _data           segment para public 'DATA' use32
.data:00403000                 assume cs:_data
.data:00403000                 ;org 403000h
.data:00403000 dword_403000    dd 1                    ; DATA XREF: pre_c_init+A4↑r
.data:00403004 ; uintptr_t __security_cookie
.data:00403004 ___security_cookie dd 0BB40E64Eh        ; DATA XREF: .text:00401044↑o
.data:00403004                                         ; sub_401470+8↑r ...
.data:00403008 dword_403008    dd 44BF19B1h            ; DATA XREF: ___security_init_cookie+2B↑w
.data:00403008                                         ; ___security_init_cookie+96↑w ...
.data:0040300C dword_40300C    dd 1                    ; DATA XREF: sub_401705+1E↑r
.data:0040300C                                         ; sub_4018CF+33↑w
.data:00403010 dword_403010    dd 0                    ; DATA XREF: start+14C↑w
.data:00403010                                         ; start+1A5↑w ...
.data:00403014 dword_403014    dd 0                    ; DATA XREF: start:loc_4022CF↑w
.data:00403014                                         ; start:loc_4023EA↑r
.data:00403018 unk_403018      db    0                 ; DATA XREF: pre_cpp_init+1F↑o
.data:00403019                 db    0
.data:0040301A                 db    0
.data:0040301B                 db    0
.data:0040301C unk_40301C      db    0                 ; DATA XREF: pre_cpp_init+1A↑o
.data:0040301D                 db    0
.data:0040301E                 db    0
.data:0040301F                 db    0
.data:00403020 unk_403020      db    0                 ; DATA XREF: pre_cpp_init+15↑o
.data:00403021                 db    0
.data:00403022                 db    0
.data:00403023                 db    0
.data:00403024 dword_403024    dd 0                    ; DATA XREF: pre_cpp_init+2D↑w
.data:00403028 dword_403028    dd 0                    ; DATA XREF: pre_c_init+62↑w
.data:00403028                                         ; start+151↑r ...
.data:0040302C dword_40302C    dd 0                    ; DATA XREF: pre_cpp_init+5↑o
.data:0040302C                                         ; pre_cpp_init+10↑w
.data:00403030 dword_403030    dd 0                    ; DATA XREF: pre_c_init+97↑r
.data:00403034 dword_403034    dd 0                    ; DATA XREF: pre_cpp_init+A↑r
.data:00403038 dword_403038    dd 0                    ; DATA XREF: pre_cpp_init↑r
.data:0040303C dword_40303C    dd 0                    ; DATA XREF: pre_c_init+89↑r
.data:00403040 dword_403040    dd 0                    ; DATA XREF: .text:ExceptionInfo↑o
.data:00403040                                         ; ___report_gsfailure+91↑w
.data:00403044 dword_403044    dd 0                    ; DATA XREF: ___report_gsfailure+9B↑w
.data:00403048                 db    0
.data:00403049                 db    0
.data:0040304A                 db    0
.data:0040304B                 db    0
.data:0040304C dword_40304C    dd 0                    ; DATA XREF: ___report_gsfailure+8C↑w
.data:00403050 dword_403050    dd 0                    ; DATA XREF: ___report_gsfailure+A5↑w
.data:00403054 dword_403054    dd 0                    ; DATA XREF: ___report_gsfailure+B5↑w
.data:00403054                                         ; ___report_gsfailure+CB↑w ...
.data:00403058                 db    0
.data:00403059                 db    0
.data:0040305A                 db    0
.data:0040305B                 db    0
.data:0040305C                 db    0
.data:0040305D                 db    0
.data:0040305E                 db    0
.data:0040305F                 db    0
.data:00403060                 db    0
.data:00403061                 db    0
.data:00403062                 db    0
.data:00403063                 db    0
.data:00403064                 db    0
.data:00403065                 db    0
.data:00403066                 db    0
.data:00403067                 db    0
.data:00403068                 db    0
.data:00403069                 db    0
.data:0040306A                 db    0
.data:0040306B                 db    0
.data:0040306C                 db    0
.data:0040306D                 db    0
.data:0040306E                 db    0
.data:0040306F                 db    0
.data:00403070                 db    0
.data:00403071                 db    0
.data:00403072                 db    0
.data:00403073                 db    0
.data:00403074                 db    0
.data:00403075                 db    0
.data:00403076                 db    0
.data:00403077                 db    0
.data:00403078                 db    0
.data:00403079                 db    0
.data:0040307A                 db    0
.data:0040307B                 db    0
.data:0040307C                 db    0
.data:0040307D                 db    0
.data:0040307E                 db    0
.data:0040307F                 db    0
.data:00403080                 db    0
.data:00403081                 db    0
.data:00403082                 db    0
.data:00403083                 db    0
.data:00403084                 db    0
.data:00403085                 db    0
.data:00403086                 db    0
.data:00403087                 db    0
.data:00403088                 db    0
.data:00403089                 db    0
.data:0040308A                 db    0
.data:0040308B                 db    0
.data:0040308C                 db    0
.data:0040308D                 db    0
.data:0040308E                 db    0
.data:0040308F                 db    0
.data:00403090 dword_403090    dd 0                    ; DATA XREF: .text:ExceptionInfo↑o
.data:00403090                                         ; ___report_gsfailure+7D↑w
.data:00403094                 db    0
.data:00403095                 db    0
.data:00403096                 db    0
.data:00403097                 db    0
.data:00403098                 db    0
.data:00403099                 db    0
.data:0040309A                 db    0
.data:0040309B                 db    0
.data:0040309C                 db    0
.data:0040309D                 db    0
.data:0040309E                 db    0
.data:0040309F                 db    0
.data:004030A0                 db    0
.data:004030A1                 db    0
.data:004030A2                 db    0
.data:004030A3                 db    0
.data:004030A4                 db    0
.data:004030A5                 db    0
.data:004030A6                 db    0
.data:004030A7                 db    0
.data:004030A8                 db    0
.data:004030A9                 db    0
.data:004030AA                 db    0
.data:004030AB                 db    0
.data:004030AC                 db    0
.data:004030AD                 db    0
.data:004030AE                 db    0
.data:004030AF                 db    0
.data:004030B0                 db    0
.data:004030B1                 db    0
.data:004030B2                 db    0
.data:004030B3                 db    0
.data:004030B4                 db    0
.data:004030B5                 db    0
.data:004030B6                 db    0
.data:004030B7                 db    0
.data:004030B8                 db    0
.data:004030B9                 db    0
.data:004030BA                 db    0
.data:004030BB                 db    0
.data:004030BC                 db    0
.data:004030BD                 db    0
.data:004030BE                 db    0
.data:004030BF                 db    0
.data:004030C0                 db    0
.data:004030C1                 db    0
.data:004030C2                 db    0
.data:004030C3                 db    0
.data:004030C4                 db    0
.data:004030C5                 db    0
.data:004030C6                 db    0
.data:004030C7                 db    0
.data:004030C8                 db    0
.data:004030C9                 db    0
.data:004030CA                 db    0
.data:004030CB                 db    0
.data:004030CC                 db    0
.data:004030CD                 db    0
.data:004030CE                 db    0
.data:004030CF                 db    0
.data:004030D0                 db    0
.data:004030D1                 db    0
.data:004030D2                 db    0
.data:004030D3                 db    0
.data:004030D4                 db    0
.data:004030D5                 db    0
.data:004030D6                 db    0
.data:004030D7                 db    0
.data:004030D8                 db    0
.data:004030D9                 db    0
.data:004030DA                 db    0
.data:004030DB                 db    0
.data:004030DC                 db    0
.data:004030DD                 db    0
.data:004030DE                 db    0
.data:004030DF                 db    0
.data:004030E0                 db    0
.data:004030E1                 db    0
.data:004030E2                 db    0
.data:004030E3                 db    0
.data:004030E4                 db    0
.data:004030E5                 db    0
.data:004030E6                 db    0
.data:004030E7                 db    0
.data:004030E8                 db    0
.data:004030E9                 db    0
.data:004030EA                 db    0
.data:004030EB                 db    0
.data:004030EC                 db    0
.data:004030ED                 db    0
.data:004030EE                 db    0
.data:004030EF                 db    0
.data:004030F0                 db    0
.data:004030F1                 db    0
.data:004030F2                 db    0
.data:004030F3                 db    0
.data:004030F4                 db    0
.data:004030F5                 db    0
.data:004030F6                 db    0
.data:004030F7                 db    0
.data:004030F8                 db    0
.data:004030F9                 db    0
.data:004030FA                 db    0
.data:004030FB                 db    0
.data:004030FC                 db    0
.data:004030FD                 db    0
.data:004030FE                 db    0
.data:004030FF                 db    0
.data:00403100                 db    0
.data:00403101                 db    0
.data:00403102                 db    0
.data:00403103                 db    0
.data:00403104                 db    0
.data:00403105                 db    0
.data:00403106                 db    0
.data:00403107                 db    0
.data:00403108                 db    0
.data:00403109                 db    0
.data:0040310A                 db    0
.data:0040310B                 db    0
.data:0040310C                 db    0
.data:0040310D                 db    0
.data:0040310E                 db    0
.data:0040310F                 db    0
.data:00403110                 db    0
.data:00403111                 db    0
.data:00403112                 db    0
.data:00403113                 db    0
.data:00403114                 db    0
.data:00403115                 db    0
.data:00403116                 db    0
.data:00403117                 db    0
.data:00403118                 db    0
.data:00403119                 db    0
.data:0040311A                 db    0
.data:0040311B                 db    0
.data:0040311C word_40311C     dw 0                    ; DATA XREF: ___report_gsfailure+51↑w
.data:0040311E                 align 10h
.data:00403120 word_403120     dw 0                    ; DATA XREF: ___report_gsfailure+4A↑w
.data:00403122                 align 4
.data:00403124 word_403124     dw 0                    ; DATA XREF: ___report_gsfailure+43↑w
.data:00403126                 align 4
.data:00403128 word_403128     dw 0                    ; DATA XREF: ___report_gsfailure+3C↑w
.data:0040312A                 align 4
.data:0040312C dword_40312C    dd 0                    ; DATA XREF: ___report_gsfailure+28↑w
.data:00403130 dword_403130    dd 0                    ; DATA XREF: ___report_gsfailure+22↑w
.data:00403134 dword_403134    dd 0                    ; DATA XREF: ___report_gsfailure+1C↑w
.data:00403138 dword_403138    dd 0                    ; DATA XREF: ___report_gsfailure+16↑w
.data:0040313C dword_40313C    dd 0                    ; DATA XREF: ___report_gsfailure+10↑w
.data:00403140 dword_403140    dd 0                    ; DATA XREF: ___report_gsfailure+B↑w
.data:00403144 dword_403144    dd 0                    ; DATA XREF: ___report_gsfailure+62↑w
.data:00403148 dword_403148    dd 0                    ; DATA XREF: ___report_gsfailure+6A↑w
.data:00403148                                         ; ___report_gsfailure+87↑r
.data:0040314C word_40314C     dw 0                    ; DATA XREF: ___report_gsfailure+35↑w
.data:0040314E                 align 10h
.data:00403150 dword_403150    dd 0                    ; DATA XREF: ___report_gsfailure+59↑w
.data:00403154 dword_403154    dd 0                    ; DATA XREF: ___report_gsfailure+72↑w
.data:00403158 word_403158     dw 0                    ; DATA XREF: ___report_gsfailure+2E↑w
.data:0040315A                 db    0
.data:0040315B                 db    0
.data:0040315C                 db    0
.data:0040315D                 db    0
.data:0040315E                 db    0
.data:0040315F                 db    0
.data:00403160                 db    0
.data:00403161                 db    0
.data:00403162                 db    0
.data:00403163                 db    0
.data:00403164                 db    0
.data:00403165                 db    0
.data:00403166                 db    0
.data:00403167                 db    0
.data:00403168                 db    0
.data:00403169                 db    0
.data:0040316A                 db    0
.data:0040316B                 db    0
.data:0040316C                 db    0
.data:0040316D                 db    0
.data:0040316E                 db    0
.data:0040316F                 db    0
.data:00403170                 db    0
.data:00403171                 db    0
.data:00403172                 db    0
.data:00403173                 db    0
.data:00403174                 db    0
.data:00403175                 db    0
.data:00403176                 db    0
.data:00403177                 db    0
.data:00403178                 db    0
.data:00403179                 db    0
.data:0040317A                 db    0
.data:0040317B                 db    0
.data:0040317C                 db    0
.data:0040317D                 db    0
.data:0040317E                 db    0
.data:0040317F                 db    0
.data:00403180                 db    0
.data:00403181                 db    0
.data:00403182                 db    0
.data:00403183                 db    0
.data:00403184                 db    0
.data:00403185                 db    0
.data:00403186                 db    0
.data:00403187                 db    0
.data:00403188                 db    0
.data:00403189                 db    0
.data:0040318A                 db    0
.data:0040318B                 db    0
.data:0040318C                 db    0
.data:0040318D                 db    0
.data:0040318E                 db    0
.data:0040318F                 db    0
.data:00403190                 db    0
.data:00403191                 db    0
.data:00403192                 db    0
.data:00403193                 db    0
.data:00403194                 db    0
.data:00403195                 db    0
.data:00403196                 db    0
.data:00403197                 db    0
.data:00403198                 db    0
.data:00403199                 db    0
.data:0040319A                 db    0
.data:0040319B                 db    0
.data:0040319C                 db    0
.data:0040319D                 db    0
.data:0040319E                 db    0
.data:0040319F                 db    0
.data:004031A0                 db    0
.data:004031A1                 db    0
.data:004031A2                 db    0
.data:004031A3                 db    0
.data:004031A4                 db    0
.data:004031A5                 db    0
.data:004031A6                 db    0
.data:004031A7                 db    0
.data:004031A8                 db    0
.data:004031A9                 db    0
.data:004031AA                 db    0
.data:004031AB                 db    0
.data:004031AC                 db    0
.data:004031AD                 db    0
.data:004031AE                 db    0
.data:004031AF                 db    0
.data:004031B0                 db    0
.data:004031B1                 db    0
.data:004031B2                 db    0
.data:004031B3                 db    0
.data:004031B4                 db    0
.data:004031B5                 db    0
.data:004031B6                 db    0
.data:004031B7                 db    0
.data:004031B8                 db    0
.data:004031B9                 db    0
.data:004031BA                 db    0
.data:004031BB                 db    0
.data:004031BC                 db    0
.data:004031BD                 db    0
.data:004031BE                 db    0
.data:004031BF                 db    0
.data:004031C0                 db    0
.data:004031C1                 db    0
.data:004031C2                 db    0
.data:004031C3                 db    0
.data:004031C4                 db    0
.data:004031C5                 db    0
.data:004031C6                 db    0
.data:004031C7                 db    0
.data:004031C8                 db    0
.data:004031C9                 db    0
.data:004031CA                 db    0
.data:004031CB                 db    0
.data:004031CC                 db    0
.data:004031CD                 db    0
.data:004031CE                 db    0
.data:004031CF                 db    0
.data:004031D0                 db    0
.data:004031D1                 db    0
.data:004031D2                 db    0
.data:004031D3                 db    0
.data:004031D4                 db    0
.data:004031D5                 db    0
.data:004031D6                 db    0
.data:004031D7                 db    0
.data:004031D8                 db    0
.data:004031D9                 db    0
.data:004031DA                 db    0
.data:004031DB                 db    0
.data:004031DC                 db    0
.data:004031DD                 db    0
.data:004031DE                 db    0
.data:004031DF                 db    0
.data:004031E0                 db    0
.data:004031E1                 db    0
.data:004031E2                 db    0
.data:004031E3                 db    0
.data:004031E4                 db    0
.data:004031E5                 db    0
.data:004031E6                 db    0
.data:004031E7                 db    0
.data:004031E8                 db    0
.data:004031E9                 db    0
.data:004031EA                 db    0
.data:004031EB                 db    0
.data:004031EC                 db    0
.data:004031ED                 db    0
.data:004031EE                 db    0
.data:004031EF                 db    0
.data:004031F0                 db    0
.data:004031F1                 db    0
.data:004031F2                 db    0
.data:004031F3                 db    0
.data:004031F4                 db    0
.data:004031F5                 db    0
.data:004031F6                 db    0
.data:004031F7                 db    0
.data:004031F8                 db    0
.data:004031F9                 db    0
.data:004031FA                 db    0
.data:004031FB                 db    0
.data:004031FC                 db    0
.data:004031FD                 db    0
.data:004031FE                 db    0
.data:004031FF                 db    0
.data:00403200                 db    ? ;
.data:00403201                 db    ? ;
.data:00403202                 db    ? ;
.data:00403203                 db    ? ;
.data:00403204                 db    ? ;
.data:00403205                 db    ? ;
.data:00403206                 db    ? ;
.data:00403207                 db    ? ;
.data:00403208                 db    ? ;
.data:00403209                 db    ? ;
.data:0040320A                 db    ? ;
.data:0040320B                 db    ? ;
.data:0040320C                 db    ? ;
.data:0040320D                 db    ? ;
.data:0040320E                 db    ? ;
.data:0040320F                 db    ? ;
.data:00403210                 db    ? ;
.data:00403211                 db    ? ;
.data:00403212                 db    ? ;
.data:00403213                 db    ? ;
.data:00403214                 db    ? ;
.data:00403215                 db    ? ;
.data:00403216                 db    ? ;
.data:00403217                 db    ? ;
.data:00403218                 db    ? ;
.data:00403219                 db    ? ;
.data:0040321A                 db    ? ;
.data:0040321B                 db    ? ;
.data:0040321C                 db    ? ;
.data:0040321D                 db    ? ;
.data:0040321E                 db    ? ;
.data:0040321F                 db    ? ;
.data:00403220                 db    ? ;
.data:00403221                 db    ? ;
.data:00403222                 db    ? ;
.data:00403223                 db    ? ;
.data:00403224                 db    ? ;
.data:00403225                 db    ? ;
.data:00403226                 db    ? ;
.data:00403227                 db    ? ;
.data:00403228                 db    ? ;
.data:00403229                 db    ? ;
.data:0040322A                 db    ? ;
.data:0040322B                 db    ? ;
.data:0040322C                 db    ? ;
.data:0040322D                 db    ? ;
.data:0040322E                 db    ? ;
.data:0040322F                 db    ? ;
.data:00403230                 db    ? ;
.data:00403231                 db    ? ;
.data:00403232                 db    ? ;
.data:00403233                 db    ? ;
.data:00403234                 db    ? ;
.data:00403235                 db    ? ;
.data:00403236                 db    ? ;
.data:00403237                 db    ? ;
.data:00403238                 db    ? ;
.data:00403239                 db    ? ;
.data:0040323A                 db    ? ;
.data:0040323B                 db    ? ;
.data:0040323C                 db    ? ;
.data:0040323D                 db    ? ;
.data:0040323E                 db    ? ;
.data:0040323F                 db    ? ;
.data:00403240                 db    ? ;
.data:00403241                 db    ? ;
.data:00403242                 db    ? ;
.data:00403243                 db    ? ;
.data:00403244                 db    ? ;
.data:00403245                 db    ? ;
.data:00403246                 db    ? ;
.data:00403247                 db    ? ;
.data:00403248                 db    ? ;
.data:00403249                 db    ? ;
.data:0040324A                 db    ? ;
.data:0040324B                 db    ? ;
.data:0040324C                 db    ? ;
.data:0040324D                 db    ? ;
.data:0040324E                 db    ? ;
.data:0040324F                 db    ? ;
.data:00403250                 db    ? ;
.data:00403251                 db    ? ;
.data:00403252                 db    ? ;
.data:00403253                 db    ? ;
.data:00403254                 db    ? ;
.data:00403255                 db    ? ;
.data:00403256                 db    ? ;
.data:00403257                 db    ? ;
.data:00403258                 db    ? ;
.data:00403259                 db    ? ;
.data:0040325A                 db    ? ;
.data:0040325B                 db    ? ;
.data:0040325C                 db    ? ;
.data:0040325D                 db    ? ;
.data:0040325E                 db    ? ;
.data:0040325F                 db    ? ;
.data:00403260                 db    ? ;
.data:00403261                 db    ? ;
.data:00403262                 db    ? ;
.data:00403263                 db    ? ;
.data:00403264                 db    ? ;
.data:00403265                 db    ? ;
.data:00403266                 db    ? ;
.data:00403267                 db    ? ;
.data:00403268                 db    ? ;
.data:00403269                 db    ? ;
.data:0040326A                 db    ? ;
.data:0040326B                 db    ? ;
.data:0040326C                 db    ? ;
.data:0040326D                 db    ? ;
.data:0040326E                 db    ? ;
.data:0040326F                 db    ? ;
.data:00403270                 db    ? ;
.data:00403271                 db    ? ;
.data:00403272                 db    ? ;
.data:00403273                 db    ? ;
.data:00403274                 db    ? ;
.data:00403275                 db    ? ;
.data:00403276                 db    ? ;
.data:00403277                 db    ? ;
.data:00403278                 db    ? ;
.data:00403279                 db    ? ;
.data:0040327A                 db    ? ;
.data:0040327B                 db    ? ;
.data:0040327C                 db    ? ;
.data:0040327D                 db    ? ;
.data:0040327E                 db    ? ;
.data:0040327F                 db    ? ;
.data:00403280                 db    ? ;
.data:00403281                 db    ? ;
.data:00403282                 db    ? ;
.data:00403283                 db    ? ;
.data:00403284                 db    ? ;
.data:00403285                 db    ? ;
.data:00403286                 db    ? ;
.data:00403287                 db    ? ;
.data:00403288                 db    ? ;
.data:00403289                 db    ? ;
.data:0040328A                 db    ? ;
.data:0040328B                 db    ? ;
.data:0040328C                 db    ? ;
.data:0040328D                 db    ? ;
.data:0040328E                 db    ? ;
.data:0040328F                 db    ? ;
.data:00403290                 db    ? ;
.data:00403291                 db    ? ;
.data:00403292                 db    ? ;
.data:00403293                 db    ? ;
.data:00403294                 db    ? ;
.data:00403295                 db    ? ;
.data:00403296                 db    ? ;
.data:00403297                 db    ? ;
.data:00403298                 db    ? ;
.data:00403299                 db    ? ;
.data:0040329A                 db    ? ;
.data:0040329B                 db    ? ;
.data:0040329C                 db    ? ;
.data:0040329D                 db    ? ;
.data:0040329E                 db    ? ;
.data:0040329F                 db    ? ;
.data:004032A0                 db    ? ;
.data:004032A1                 db    ? ;
.data:004032A2                 db    ? ;
.data:004032A3                 db    ? ;
.data:004032A4                 db    ? ;
.data:004032A5                 db    ? ;
.data:004032A6                 db    ? ;
.data:004032A7                 db    ? ;
.data:004032A8                 db    ? ;
.data:004032A9                 db    ? ;
.data:004032AA                 db    ? ;
.data:004032AB                 db    ? ;
.data:004032AC                 db    ? ;
.data:004032AD                 db    ? ;
.data:004032AE                 db    ? ;
.data:004032AF                 db    ? ;
.data:004032B0                 db    ? ;
.data:004032B1                 db    ? ;
.data:004032B2                 db    ? ;
.data:004032B3                 db    ? ;
.data:004032B4                 db    ? ;
.data:004032B5                 db    ? ;
.data:004032B6                 db    ? ;
.data:004032B7                 db    ? ;
.data:004032B8                 db    ? ;
.data:004032B9                 db    ? ;
.data:004032BA                 db    ? ;
.data:004032BB                 db    ? ;
.data:004032BC                 db    ? ;
.data:004032BD                 db    ? ;
.data:004032BE                 db    ? ;
.data:004032BF                 db    ? ;
.data:004032C0                 db    ? ;
.data:004032C1                 db    ? ;
.data:004032C2                 db    ? ;
.data:004032C3                 db    ? ;
.data:004032C4                 db    ? ;
.data:004032C5                 db    ? ;
.data:004032C6                 db    ? ;
.data:004032C7                 db    ? ;
.data:004032C8                 db    ? ;
.data:004032C9                 db    ? ;
.data:004032CA                 db    ? ;
.data:004032CB                 db    ? ;
.data:004032CC                 db    ? ;
.data:004032CD                 db    ? ;
.data:004032CE                 db    ? ;
.data:004032CF                 db    ? ;
.data:004032D0                 db    ? ;
.data:004032D1                 db    ? ;
.data:004032D2                 db    ? ;
.data:004032D3                 db    ? ;
.data:004032D4                 db    ? ;
.data:004032D5                 db    ? ;
.data:004032D6                 db    ? ;
.data:004032D7                 db    ? ;
.data:004032D8                 db    ? ;
.data:004032D9                 db    ? ;
.data:004032DA                 db    ? ;
.data:004032DB                 db    ? ;
.data:004032DC                 db    ? ;
.data:004032DD                 db    ? ;
.data:004032DE                 db    ? ;
.data:004032DF                 db    ? ;
.data:004032E0                 db    ? ;
.data:004032E1                 db    ? ;
.data:004032E2                 db    ? ;
.data:004032E3                 db    ? ;
.data:004032E4                 db    ? ;
.data:004032E5                 db    ? ;
.data:004032E6                 db    ? ;
.data:004032E7                 db    ? ;
.data:004032E8                 db    ? ;
.data:004032E9                 db    ? ;
.data:004032EA                 db    ? ;
.data:004032EB                 db    ? ;
.data:004032EC                 db    ? ;
.data:004032ED                 db    ? ;
.data:004032EE                 db    ? ;
.data:004032EF                 db    ? ;
.data:004032F0                 db    ? ;
.data:004032F1                 db    ? ;
.data:004032F2                 db    ? ;
.data:004032F3                 db    ? ;
.data:004032F4                 db    ? ;
.data:004032F5                 db    ? ;
.data:004032F6                 db    ? ;
.data:004032F7                 db    ? ;
.data:004032F8                 db    ? ;
.data:004032F9                 db    ? ;
.data:004032FA                 db    ? ;
.data:004032FB                 db    ? ;
.data:004032FC                 db    ? ;
.data:004032FD                 db    ? ;
.data:004032FE                 db    ? ;
.data:004032FF                 db    ? ;
.data:00403300                 db    ? ;
.data:00403301                 db    ? ;
.data:00403302                 db    ? ;
.data:00403303                 db    ? ;
.data:00403304                 db    ? ;
.data:00403305                 db    ? ;
.data:00403306                 db    ? ;
.data:00403307                 db    ? ;
.data:00403308                 db    ? ;
.data:00403309                 db    ? ;
.data:0040330A                 db    ? ;
.data:0040330B                 db    ? ;
.data:0040330C                 db    ? ;
.data:0040330D                 db    ? ;
.data:0040330E                 db    ? ;
.data:0040330F                 db    ? ;
.data:00403310                 db    ? ;
.data:00403311                 db    ? ;
.data:00403312                 db    ? ;
.data:00403313                 db    ? ;
.data:00403314                 db    ? ;
.data:00403315                 db    ? ;
.data:00403316                 db    ? ;
.data:00403317                 db    ? ;
.data:00403318                 db    ? ;
.data:00403319                 db    ? ;
.data:0040331A                 db    ? ;
.data:0040331B                 db    ? ;
.data:0040331C                 db    ? ;
.data:0040331D                 db    ? ;
.data:0040331E                 db    ? ;
.data:0040331F                 db    ? ;
.data:00403320                 db    ? ;
.data:00403321                 db    ? ;
.data:00403322                 db    ? ;
.data:00403323                 db    ? ;
.data:00403324                 db    ? ;
.data:00403325                 db    ? ;
.data:00403326                 db    ? ;
.data:00403327                 db    ? ;
.data:00403328                 db    ? ;
.data:00403329                 db    ? ;
.data:0040332A                 db    ? ;
.data:0040332B                 db    ? ;
.data:0040332C                 db    ? ;
.data:0040332D                 db    ? ;
.data:0040332E                 db    ? ;
.data:0040332F                 db    ? ;
.data:00403330                 db    ? ;
.data:00403331                 db    ? ;
.data:00403332                 db    ? ;
.data:00403333                 db    ? ;
.data:00403334                 db    ? ;
.data:00403335                 db    ? ;
.data:00403336                 db    ? ;
.data:00403337                 db    ? ;
.data:00403338                 db    ? ;
.data:00403339                 db    ? ;
.data:0040333A                 db    ? ;
.data:0040333B                 db    ? ;
.data:0040333C                 db    ? ;
.data:0040333D                 db    ? ;
.data:0040333E                 db    ? ;
.data:0040333F                 db    ? ;
.data:00403340                 db    ? ;
.data:00403341                 db    ? ;
.data:00403342                 db    ? ;
.data:00403343                 db    ? ;
.data:00403344                 db    ? ;
.data:00403345                 db    ? ;
.data:00403346                 db    ? ;
.data:00403347                 db    ? ;
.data:00403348                 db    ? ;
.data:00403349                 db    ? ;
.data:0040334A                 db    ? ;
.data:0040334B                 db    ? ;
.data:0040334C                 db    ? ;
.data:0040334D                 db    ? ;
.data:0040334E                 db    ? ;
.data:0040334F                 db    ? ;
.data:00403350                 db    ? ;
.data:00403351                 db    ? ;
.data:00403352                 db    ? ;
.data:00403353                 db    ? ;
.data:00403354                 db    ? ;
.data:00403355                 db    ? ;
.data:00403356                 db    ? ;
.data:00403357                 db    ? ;
.data:00403358                 db    ? ;
.data:00403359                 db    ? ;
.data:0040335A                 db    ? ;
.data:0040335B                 db    ? ;
.data:0040335C dword_40335C    dd ?                    ; DATA XREF: sub_401655+B↑o
.data:0040335C                                         ; sub_401655:loc_40168A↑r ...
.data:00403360 dword_403360    dd ?                    ; DATA XREF: sub_401831+30↑r
.data:00403360                                         ; sub_401831:loc_401898↑w ...
.data:00403364 ; LPVOID lpMem
.data:00403364 lpMem           dd ?                    ; DATA XREF: sub_401705+15↑r
.data:00403364                                         ; sub_4017AC+57↑r ...
.data:00403368 dword_403368    dd ?                    ; DATA XREF: sub_4017AC+45↑w
.data:00403368                                         ; sub_4017AC:loc_4017F9↑r ...
.data:0040336C dword_40336C    dd ?                    ; DATA XREF: sub_4017AC+14↑r
.data:0040336C                                         ; sub_4017AC+1E↑w ...
.data:00403370                 align 20h
.data:00403380 ; LPVOID dword_403380
.data:00403380 dword_403380    dd ?                    ; DATA XREF: sub_401831:loc_401883↑r
.data:00403380                                         ; sub_401831+61↑w ...
.data:00403384                 db    ? ;
.data:00403385                 db    ? ;
.data:00403386                 db    ? ;
.data:00403387                 db    ? ;
.data:00403388                 db    ? ;
.data:00403389                 db    ? ;
.data:0040338A                 db    ? ;
.data:0040338B                 db    ? ;
.data:0040338C                 db    ? ;
.data:0040338D                 db    ? ;
.data:0040338E                 db    ? ;
.data:0040338F                 db    ? ;
.data:00403390                 db    ? ;
.data:00403391                 db    ? ;
.data:00403392                 db    ? ;
.data:00403393                 db    ? ;
.data:00403394                 db    ? ;
.data:00403395                 db    ? ;
.data:00403396                 db    ? ;
.data:00403397                 db    ? ;
.data:00403398                 db    ? ;
.data:00403399                 db    ? ;
.data:0040339A                 db    ? ;
.data:0040339B                 db    ? ;
.data:0040339C                 db    ? ;
.data:0040339D                 db    ? ;
.data:0040339E                 db    ? ;
.data:0040339F                 db    ? ;
.data:004033A0                 db    ? ;
.data:004033A1                 db    ? ;
.data:004033A2                 db    ? ;
.data:004033A3                 db    ? ;
.data:004033A4                 db    ? ;
.data:004033A5                 db    ? ;
.data:004033A6                 db    ? ;
.data:004033A7                 db    ? ;
.data:004033A8 ; LPVOID dword_4033A8
.data:004033A8 dword_4033A8    dd ?                    ; DATA XREF: sub_401831+3D↑r
.data:004033A8                                         ; sub_401831+4C↑w ...
.data:004033AC                 align 20h
.data:004033C0 ; LPVOID dword_4033C0
.data:004033C0 dword_4033C0    dd ?                    ; DATA XREF: sub_401CA9:loc_401CD5↑r
.data:004033C0                                         ; sub_401CA9+3B↑w ...
.data:004033C4 ; LPVOID dword_4033C4
.data:004033C4 dword_4033C4    dd ?                    ; DATA XREF: sub_401CA9:loc_401CBF↑r
.data:004033C4                                         ; sub_401CA9+25↑w ...
.data:004033C8 ; LPVOID dword_4033C8
.data:004033C8 dword_4033C8    dd ?                    ; DATA XREF: sub_401CA9↑r
.data:004033C8                                         ; sub_401CA9+F↑w ...
.data:004033CC ; HANDLE hHeap
.data:004033CC hHeap           dd ?                    ; DATA XREF: sub_4017AC+2D↑w
.data:004033CC                                         ; sub_401D86+5↑r ...
.data:004033D0 dword_4033D0    dd ?                    ; DATA XREF: sub_4017AC+36↑w
.data:004033D0                                         ; sub_4017AC:loc_401818↑w ...
.data:004033D4 dword_4033D4    dd ?                    ; DATA XREF: pre_c_init+73↑w
.data:004033D8 dword_4033D8    dd ?                    ; DATA XREF: pre_c_init+7A↑w
.data:004033DC unk_4033DC      db    ? ;               ; DATA XREF: start:loc_402270↑o
.data:004033DC                                         ; start+CE↑o
.data:004033DD                 db    ? ;
.data:004033DE                 db    ? ;
.data:004033DF                 db    ? ;
.data:004033E0 dword_4033E0    dd ?                    ; DATA XREF: start:loc_402287↑r
.data:004033E0                                         ; start:loc_4022A6↑r ...
.data:004033E4 ; char pTarget[]
.data:004033E4 pTarget         dd ?                    ; DATA XREF: start:loc_402305↑r
.data:004033E4                                         ; start+DE↑o ...
.data:004033E8                 align 1000h
.data:004033E8 _data           ends
.data:004033E8
.idata:00404000 ; Section 3. (virtual address 00004000)
.idata:00404000 ; Virtual size                  : 0000068E (   1678.)
.idata:00404000 ; Section size in file          : 00000800 (   2048.)
.idata:00404000 ; Offset to raw data for section: 00002200
.idata:00404000 ; Flags 40000040: Data Readable
.idata:00404000 ; Alignment     : default
.idata:00404000 ;
.idata:00404000 ; Imports from ADVAPI32.dll
.idata:00404000 ;
.idata:00404000 ; ===========================================================================
.idata:00404000
.idata:00404000 ; Segment type: Externs
.idata:00404000 ; _idata
.idata:00404000 ; PVOID (__stdcall *FreeSid)(PSID pSid)
.idata:00404000                 extrn FreeSid:dword     ; CODE XREF: pSetupIsUserAdmin()+8B↑p
.idata:00404000                                         ; DATA XREF: pSetupIsUserAdmin()+8B↑r ...
.idata:00404004 ; BOOL (__stdcall *CheckTokenMembership)(HANDLE TokenHandle, PSID SidToCheck, PBOOL IsMember)
.idata:00404004                 extrn CheckTokenMembership:dword
.idata:00404004                                         ; CODE XREF: pSetupIsUserAdmin()+5B↑p
.idata:00404004                                         ; DATA XREF: pSetupIsUserAdmin()+5B↑r
.idata:00404008 ; BOOL (__stdcall *AllocateAndInitializeSid)(PSID_IDENTIFIER_AUTHORITY pIdentifierAuthority, BYTE nSubAuthorityCount, DWORD nSubAuthority0, DWORD nSubAuthority1, DWORD nSubAuthority2, DWORD nSubAuthority3, DWORD nSubAuthority4, DWORD nSubAuthority5, DWORD nSubAuthority6, DWORD nSubAuthority7, PSID *pSid)
.idata:00404008                 extrn AllocateAndInitializeSid:dword
.idata:00404008                                         ; CODE XREF: pSetupIsUserAdmin()+42↑p
.idata:00404008                                         ; DATA XREF: pSetupIsUserAdmin()+42↑r
.idata:0040400C
.idata:00404010 ;
.idata:00404010 ; Imports from KERNEL32.dll
.idata:00404010 ;
.idata:00404010 ; HANDLE (__stdcall *GetProcessHeap)()
.idata:00404010                 extrn GetProcessHeap:dword
.idata:00404010                                         ; CODE XREF: sub_4017AC+27↑p
.idata:00404010                                         ; DATA XREF: sub_4017AC+27↑r ...
.idata:00404014 ; BOOL (__stdcall *HeapFree)(HANDLE hHeap, DWORD dwFlags, LPVOID lpMem)
.idata:00404014                 extrn HeapFree:dword    ; CODE XREF: sub_401D98+B↑p
.idata:00404014                                         ; DATA XREF: sub_401D98+B↑r
.idata:00404018 ; DWORD (__stdcall *GetFullPathNameW)(LPCWSTR lpFileName, DWORD nBufferLength, LPWSTR lpBuffer, LPWSTR *lpFilePart)
.idata:00404018                 extrn GetFullPathNameW:dword
.idata:00404018                                         ; CODE XREF: pSetupMakeSurePathExists(x)+2F↑p
.idata:00404018                                         ; DATA XREF: pSetupMakeSurePathExists(x)+2F↑r
.idata:0040401C ; DWORD (__stdcall *GetFileAttributesW)(LPCWSTR lpFileName)
.idata:0040401C                 extrn GetFileAttributesW:dword
.idata:0040401C                                         ; CODE XREF: pSetupMakeSurePathExists(x)+EC↑p
.idata:0040401C                                         ; pSetupMakeSurePathExists(x)+173↑p
.idata:0040401C                                         ; DATA XREF: ...
.idata:00404020 ; BOOL (__stdcall *CreateDirectoryW)(LPCWSTR lpPathName, LPSECURITY_ATTRIBUTES lpSecurityAttributes)
.idata:00404020                 extrn CreateDirectoryW:dword
.idata:00404020                                         ; CODE XREF: pSetupMakeSurePathExists(x)+1A1↑p
.idata:00404020                                         ; pSetupMakeSurePathExists(x)+1DA↑p
.idata:00404020                                         ; DATA XREF: ...
.idata:00404024 ; BOOL (__stdcall *FreeLibrary)(HMODULE hLibModule)
.idata:00404024                 extrn FreeLibrary:dword ; CODE XREF: sub_401470+69↑p
.idata:00404024                                         ; sub_4014F4+5A↑p
.idata:00404024                                         ; DATA XREF: ...
.idata:00404028 ; void (__stdcall __noreturn *ExitProcess)(UINT uExitCode)
.idata:00404028                 extrn ExitProcess:dword ; CODE XREF: sub_401567+E7↑p
.idata:00404028                                         ; DATA XREF: sub_401567+E7↑r
.idata:0040402C ; FARPROC (__stdcall *GetProcAddress)(HMODULE hModule, LPCSTR lpProcName)
.idata:0040402C                 extrn GetProcAddress:dword
.idata:0040402C                                         ; CODE XREF: sub_401470+3E↑p
.idata:0040402C                                         ; sub_4014F4+36↑p
.idata:0040402C                                         ; DATA XREF: ...
.idata:00404030 ; BOOL (__stdcall *HeapSetInformation)(HANDLE HeapHandle, HEAP_INFORMATION_CLASS HeapInformationClass, PVOID HeapInformation, SIZE_T HeapInformationLength)
.idata:00404030                 extrn HeapSetInformation:dword
.idata:00404030                                         ; CODE XREF: sub_401567+16↑p
.idata:00404030                                         ; DATA XREF: sub_401567+16↑r
.idata:00404034 ; HMODULE (__stdcall *LoadLibraryW)(LPCWSTR lpLibFileName)
.idata:00404034                 extrn LoadLibraryW:dword
.idata:00404034                                         ; CODE XREF: sub_401470+21↑p
.idata:00404034                                         ; sub_4014F4+1A↑p
.idata:00404034                                         ; DATA XREF: ...
.idata:00404038 ; DWORD (__stdcall *GetLastError)()
.idata:00404038                 extrn GetLastError:dword
.idata:00404038                                         ; CODE XREF: sub_401470+2D↑p
.idata:00404038                                         ; sub_401470+4A↑p ...
.idata:0040403C ; LPVOID (__stdcall *HeapAlloc)(HANDLE hHeap, DWORD dwFlags, SIZE_T dwBytes)
.idata:0040403C                 extrn HeapAlloc:dword   ; CODE XREF: sub_401D86+B↑p
.idata:0040403C                                         ; DATA XREF: sub_401D86+B↑r
.idata:00404040 ; LPWSTR (__stdcall *GetCommandLineW)()
.idata:00404040                 extrn GetCommandLineW:dword
.idata:00404040                                         ; CODE XREF: sub_401567:loc_4015AA↑p
.idata:00404040                                         ; DATA XREF: sub_401567:loc_4015AA↑r
.idata:00404044 ; void (__stdcall *Sleep)(DWORD dwMilliseconds)
.idata:00404044                 extrn Sleep:dword       ; CODE XREF: start+6E↑p
.idata:00404044                                         ; DATA XREF: start+6E↑r
.idata:00404048 ; void (__stdcall *GetStartupInfoA)(LPSTARTUPINFOA lpStartupInfo)
.idata:00404048                 extrn GetStartupInfoA:dword
.idata:00404048                                         ; CODE XREF: start+22↑p
.idata:00404048                                         ; DATA XREF: start+22↑r
.idata:0040404C ; LPTOP_LEVEL_EXCEPTION_FILTER (__stdcall *SetUnhandledExceptionFilter)(LPTOP_LEVEL_EXCEPTION_FILTER lpTopLevelExceptionFilter)
.idata:0040404C                 extrn SetUnhandledExceptionFilter:dword
.idata:0040404C                                         ; CODE XREF: sub_402500+5↑p
.idata:0040404C                                         ; ___raise_securityfailure+7↑p
.idata:0040404C                                         ; DATA XREF: ...
.idata:00404050 ; HMODULE (__stdcall *GetModuleHandleA)(LPCSTR lpModuleName)
.idata:00404050                 extrn GetModuleHandleA:dword
.idata:00404050                                         ; CODE XREF: __get_image_app_type+7↑p
.idata:00404050                                         ; DATA XREF: __get_image_app_type+7↑r
.idata:00404054 ; BOOL (__stdcall *QueryPerformanceCounter)(LARGE_INTEGER *lpPerformanceCount)
.idata:00404054                 extrn QueryPerformanceCounter:dword
.idata:00404054                                         ; CODE XREF: ___security_init_cookie+6C↑p
.idata:00404054                                         ; DATA XREF: ___security_init_cookie+6C↑r
.idata:00404058 ; DWORD (__stdcall *GetCurrentProcessId)()
.idata:00404058                 extrn GetCurrentProcessId:dword
.idata:00404058                                         ; CODE XREF: ___security_init_cookie+45↑p
.idata:00404058                                         ; DATA XREF: ___security_init_cookie+45↑r
.idata:0040405C ; DWORD (__stdcall *GetCurrentThreadId)()
.idata:0040405C                 extrn GetCurrentThreadId:dword
.idata:0040405C                                         ; CODE XREF: ___security_init_cookie+4E↑p
.idata:0040405C                                         ; DATA XREF: ___security_init_cookie+4E↑r
.idata:00404060 ; void (__stdcall *GetSystemTimeAsFileTime)(LPFILETIME lpSystemTimeAsFileTime)
.idata:00404060                 extrn GetSystemTimeAsFileTime:dword
.idata:00404060                                         ; CODE XREF: ___security_init_cookie+36↑p
.idata:00404060                                         ; DATA XREF: ___security_init_cookie+36↑r
.idata:00404064 ; DWORD (__stdcall *GetTickCount)()
.idata:00404064                 extrn GetTickCount:dword
.idata:00404064                                         ; CODE XREF: ___security_init_cookie+57↑p
.idata:00404064                                         ; DATA XREF: ___security_init_cookie+57↑r
.idata:00404068 ; LONG (__stdcall *UnhandledExceptionFilter)(struct _EXCEPTION_POINTERS *ExceptionInfo)
.idata:00404068                 extrn UnhandledExceptionFilter:dword
.idata:00404068                                         ; CODE XREF: ___raise_securityfailure+10↑p
.idata:00404068                                         ; DATA XREF: ___raise_securityfailure+10↑r
.idata:0040406C ; HANDLE (__stdcall *GetCurrentProcess)()
.idata:0040406C                 extrn GetCurrentProcess:dword
.idata:0040406C                                         ; CODE XREF: ___raise_securityfailure+1B↑p
.idata:0040406C                                         ; DATA XREF: ___raise_securityfailure+1B↑r
.idata:00404070 ; BOOL (__stdcall *TerminateProcess)(HANDLE hProcess, UINT uExitCode)
.idata:00404070                 extrn TerminateProcess:dword
.idata:00404070                                         ; CODE XREF: ___raise_securityfailure+22↑p
.idata:00404070                                         ; DATA XREF: ___raise_securityfailure+22↑r
.idata:00404074 ; HANDLE (__stdcall *CreateEventW)(LPSECURITY_ATTRIBUTES lpEventAttributes, BOOL bManualReset, BOOL bInitialState, LPCWSTR lpName)
.idata:00404074                 extrn CreateEventW:dword
.idata:00404074                                         ; CODE XREF: sub_401655+29↑p
.idata:00404074                                         ; DATA XREF: sub_401655+29↑r
.idata:00404078 ; DWORD (__stdcall *WaitForSingleObjectEx)(HANDLE hHandle, DWORD dwMilliseconds, BOOL bAlertable)
.idata:00404078                 extrn WaitForSingleObjectEx:dword
.idata:00404078                                         ; CODE XREF: sub_401655+53↑p
.idata:00404078                                         ; DATA XREF: sub_401655+53↑r
.idata:0040407C ; BOOL (__stdcall *CloseHandle)(HANDLE hObject)
.idata:0040407C                 extrn CloseHandle:dword ; CODE XREF: sub_401655+61↑p
.idata:0040407C                                         ; DATA XREF: sub_401655+61↑r
.idata:00404080 ; BOOL (__stdcall *SetEvent)(HANDLE hEvent)
.idata:00404080                 extrn SetEvent:dword    ; CODE XREF: sub_4016C9+34↑p
.idata:00404080                                         ; DATA XREF: sub_4016C9+34↑r
.idata:00404084 ; void (__stdcall *SetLastError)(DWORD dwErrCode)
.idata:00404084                 extrn SetLastError:dword
.idata:00404084                                         ; CODE XREF: sub_401705+8A↑p
.idata:00404084                                         ; pSetupIsUserAdmin()+25↑p ...
.idata:00404088 ; UINT (__stdcall *GetSystemWindowsDirectoryW)(LPWSTR lpBuffer, UINT uSize)
.idata:00404088                 extrn GetSystemWindowsDirectoryW:dword
.idata:00404088                                         ; CODE XREF: sub_4018CF+45↑p
.idata:00404088                                         ; DATA XREF: sub_4018CF+45↑r
.idata:0040408C ; void (__stdcall *RaiseException)(DWORD dwExceptionCode, DWORD dwExceptionFlags, DWORD nNumberOfArguments, const ULONG_PTR *lpArguments)
.idata:0040408C                 extrn RaiseException:dword
.idata:0040408C                                         ; CODE XREF: sub_401973+21↑p
.idata:0040408C                                         ; DATA XREF: sub_401973+21↑r
.idata:00404090
.idata:00404094 ;
.idata:00404094 ; Imports from SHELL32.dll
.idata:00404094 ;
.idata:00404094 ; LPWSTR *(__stdcall *CommandLineToArgvW)(LPCWSTR lpCmdLine, int *pNumArgs)
.idata:00404094                 extrn CommandLineToArgvW:dword
.idata:00404094                                         ; CODE XREF: sub_401567+56↑p
.idata:00404094                                         ; DATA XREF: sub_401567+56↑r ...
.idata:00404098
.idata:0040409C ;
.idata:0040409C ; Imports from msvcrt.dll
.idata:0040409C ;
.idata:0040409C ; wchar_t *(__cdecl *wcschr)(const wchar_t *Str, wchar_t Ch)
.idata:0040409C                 extrn wcschr:dword      ; CODE XREF: pSetupMakeSurePathExists(x)+BE↑p
.idata:0040409C                                         ; pSetupMakeSurePathExists(x)+D3↑p
.idata:0040409C                                         ; DATA XREF: ...
.idata:004040A0 ; unsigned int (__cdecl *controlfp)(unsigned int NewValue, unsigned int Mask)
.idata:004040A0                 extrn _controlfp:dword  ; CODE XREF: sub_4027B5+A↑p
.idata:004040A0                                         ; DATA XREF: sub_4027B5+A↑r
.idata:004040A4 ; void __cdecl terminate(void)
.idata:004040A4                 extrn ?terminate@@YAXXZ:dword
.idata:004040A4                                         ; CODE XREF: __CxxUnhandledExceptionFilter(_EXCEPTION_POINTERS *):loc_4024E7↑p
.idata:004040A4                                         ; DATA XREF: __CxxUnhandledExceptionFilter(_EXCEPTION_POINTERS *):loc_4024E7↑r
.idata:004040A8                 extrn __imp__except_handler4_common:dword
.idata:004040A8                                         ; DATA XREF: _except_handler4_common↑r
.idata:004040AC ; char *acmdln
.idata:004040AC                 extrn _acmdln:dword     ; DATA XREF: start:loc_402333↑r
.idata:004040B0 ; void (__cdecl *_initterm)(_PVFV *First, _PVFV *Last)
.idata:004040B0                 extrn __imp__initterm:dword
.idata:004040B0                                         ; DATA XREF: _initterm↑r
.idata:004040B4 ; void (__cdecl *_setusermatherr)(_UserMathErrorFunctionPointer UserMathErrorFunction)
.idata:004040B4                 extrn __setusermatherr:dword
.idata:004040B4                                         ; CODE XREF: pre_c_init+B2↑p
.idata:004040B4                                         ; DATA XREF: pre_c_init+B2↑r
.idata:004040B8 ; int (__cdecl *ismbblead)(unsigned int Ch)
.idata:004040B8                 extrn _ismbblead:dword  ; CODE XREF: start+176↑p
.idata:004040B8                                         ; DATA XREF: start+176↑r
.idata:004040BC ; int *(__cdecl *_p__fmode)()
.idata:004040BC                 extrn __p__fmode:dword  ; CODE XREF: pre_c_init+83↑p
.idata:004040BC                                         ; DATA XREF: pre_c_init+83↑r
.idata:004040C0 ; void (__cdecl *cexit)()
.idata:004040C0                 extrn _cexit:dword      ; CODE XREF: start+1C3↑p
.idata:004040C0                                         ; DATA XREF: start+1C3↑r
.idata:004040C4 ; void (__cdecl __noreturn *exit)(int Code)
.idata:004040C4                 extrn _exit:dword       ; CODE XREF: start+1B4↑p
.idata:004040C4                                         ; DATA XREF: start+1B4↑r
.idata:004040C8 ; void (__cdecl __noreturn *exit)(int Code)
.idata:004040C8                 extrn exit:dword        ; CODE XREF: start+15B↑p
.idata:004040C8                                         ; DATA XREF: start+15B↑r
.idata:004040CC ; void (__cdecl *_set_app_type)(_crt_app_type Type)
.idata:004040CC                 extrn __set_app_type:dword
.idata:004040CC                                         ; CODE XREF: pre_c_init+6D↑p
.idata:004040CC                                         ; DATA XREF: pre_c_init+6D↑r
.idata:004040D0                 extrn __getmainargs:dword
.idata:004040D0                                         ; CODE XREF: pre_cpp_init+24↑p
.idata:004040D0                                         ; DATA XREF: pre_cpp_init+24↑r
.idata:004040D4                 extrn __imp__amsg_exit:dword
.idata:004040D4                                         ; DATA XREF: _amsg_exit↑r
.idata:004040D8 ; int *(__cdecl *_p__commode)()
.idata:004040D8                 extrn __p__commode:dword
.idata:004040D8                                         ; CODE XREF: pre_c_init+91↑p
.idata:004040D8                                         ; DATA XREF: pre_c_init+91↑r
.idata:004040DC                 extrn __imp__XcptFilter:dword
.idata:004040DC                                         ; DATA XREF: _XcptFilter↑r
.idata:004040E0 ; int (*swscanf)(const wchar_t *const Buffer, const wchar_t *const Format, ...)
.idata:004040E0                 extrn swscanf:dword     ; CODE XREF: sub_401567+70↑p
.idata:004040E0                                         ; DATA XREF: sub_401567+70↑r
.idata:004040E4 ; int (__cdecl *resetstkoflw)()
.idata:004040E4                 extrn _resetstkoflw:dword
.idata:004040E4                                         ; CODE XREF: sub_401973+E↑p
.idata:004040E4                                         ; DATA XREF: sub_401973+E↑r
.idata:004040E8 ; wchar_t *(__cdecl *wcsrchr)(const wchar_t *Str, wchar_t Ch)
.idata:004040E8                 extrn wcsrchr:dword     ; CODE XREF: pSetupMakeSurePathExists(x)+14C↑p
.idata:004040E8                                         ; DATA XREF: pSetupMakeSurePathExists(x)+14C↑r
.idata:004040EC
.idata:004040F0 ;
.idata:004040F0 ; Imports from ntdll.dll
.idata:004040F0 ;
.idata:004040F0 ; ULONG (__stdcall *RtlNtStatusToDosError)(NTSTATUS Status)
.idata:004040F0                 extrn RtlNtStatusToDosError:dword
.idata:004040F0                                         ; CODE XREF: sub_401567+CF↑p
.idata:004040F0                                         ; sub_401973+3A↑p
.idata:004040F0                                         ; DATA XREF: ...
.idata:004040F4
.idata:004040F4
.idata:004040F8 ; ===========================================================================
.idata:004040F8
.idata:004040F8 ; Segment type: Pure data
.idata:004040F8 ; Segment permissions: Read
.idata:004040F8 _idata          segment para public 'DATA' use32
.idata:004040F8                 assume cs:_idata
.idata:004040F8                 ;org 4040F8h
.idata:004040F8 ___guard_check_icall_fptr dd offset @_guard_check_icall_nop@4
.idata:004040F8                                         ; DATA XREF: .text:00401050↑o
.idata:004040F8                                         ; sub_401470+60↑r ...
.idata:004040F8                                         ; _guard_check_icall_nop(x)
.idata:004040FC __IMPORT_DESCRIPTOR_KERNEL32 dd rva off_404184 ; Import Name Table
.idata:00404100                 dd 0                    ; Time stamp
.idata:00404104                 dd 0                    ; Forwarder Chain
.idata:00404108                 dd rva aKernel32Dll     ; DLL Name
.idata:0040410C                 dd rva GetProcessHeap   ; Import Address Table
.idata:00404110 __IMPORT_DESCRIPTOR_msvcrt dd rva off_404210 ; Import Name Table
.idata:00404114                 dd 0                    ; Time stamp
.idata:00404118                 dd 0                    ; Forwarder Chain
.idata:0040411C                 dd rva aMsvcrtDll       ; DLL Name
.idata:00404120                 dd rva wcschr           ; Import Address Table
.idata:00404124 __IMPORT_DESCRIPTOR_ntdll dd rva off_404264 ; Import Name Table
.idata:00404128                 dd 0                    ; Time stamp
.idata:0040412C                 dd 0                    ; Forwarder Chain
.idata:00404130                 dd rva aNtdllDll        ; DLL Name
.idata:00404134                 dd rva RtlNtStatusToDosError ; Import Address Table
.idata:00404138 __IMPORT_DESCRIPTOR_SHELL32 dd rva off_404208 ; Import Name Table
.idata:0040413C                 dd 0                    ; Time stamp
.idata:00404140                 dd 0                    ; Forwarder Chain
.idata:00404144                 dd rva aShell32Dll      ; DLL Name
.idata:00404148                 dd rva CommandLineToArgvW ; Import Address Table
.idata:0040414C __IMPORT_DESCRIPTOR_ADVAPI32 dd rva off_404174 ; Import Name Table
.idata:00404150                 dd 0                    ; Time stamp
.idata:00404154                 dd 0                    ; Forwarder Chain
.idata:00404158                 dd rva aAdvapi32Dll     ; DLL Name
.idata:0040415C                 dd rva FreeSid          ; Import Address Table
.idata:00404160                 db    0
.idata:00404161                 db    0
.idata:00404162                 db    0
.idata:00404163                 db    0
.idata:00404164                 db    0
.idata:00404165                 db    0
.idata:00404166                 db    0
.idata:00404167                 db    0
.idata:00404168                 db    0
.idata:00404169                 db    0
.idata:0040416A                 db    0
.idata:0040416B                 db    0
.idata:0040416C                 db    0
.idata:0040416D                 db    0
.idata:0040416E                 db    0
.idata:0040416F                 db    0
.idata:00404170                 db    0
.idata:00404171                 db    0
.idata:00404172                 db    0
.idata:00404173                 db    0
.idata:00404174 ;
.idata:00404174 ; Import names for ADVAPI32.dll
.idata:00404174 ;
.idata:00404174 off_404174      dd rva word_404468      ; DATA XREF: .idata:__IMPORT_DESCRIPTOR_ADVAPI32↑o
.idata:00404178                 dd rva word_404450
.idata:0040417C                 dd rva word_404434
.idata:00404180                 dd 0
.idata:00404184 ;
.idata:00404184 ; Import names for KERNEL32.dll
.idata:00404184 ;
.idata:00404184 off_404184      dd rva word_40461A      ; DATA XREF: .idata:__IMPORT_DESCRIPTOR_KERNEL32↑o
.idata:00404188                 dd rva word_40460E
.idata:0040418C                 dd rva word_40462C
.idata:00404190                 dd rva word_404640
.idata:00404194                 dd rva word_404656
.idata:00404198                 dd rva word_4042D4
.idata:0040419C                 dd rva word_4042C6
.idata:004041A0                 dd rva word_4042B4
.idata:004041A4                 dd rva word_40429E
.idata:004041A8                 dd rva word_40428E
.idata:004041AC                 dd rva word_40427E
.idata:004041B0                 dd rva word_404602
.idata:004041B4                 dd rva word_40426C
.idata:004041B8                 dd rva word_404480
.idata:004041BC                 dd rva word_404488
.idata:004041C0                 dd rva word_40449A
.idata:004041C4                 dd rva word_4044B8
.idata:004041C8                 dd rva word_4044CC
.idata:004041CC                 dd rva word_4044E6
.idata:004041D0                 dd rva word_4044FC
.idata:004041D4                 dd rva word_404512
.idata:004041D8                 dd rva word_40452C
.idata:004041DC                 dd rva word_40453C
.idata:004041E0                 dd rva word_404558
.idata:004041E4                 dd rva word_40456C
.idata:004041E8                 dd rva word_404580
.idata:004041EC                 dd rva word_404590
.idata:004041F0                 dd rva word_4045A8
.idata:004041F4                 dd rva word_4045B6
.idata:004041F8                 dd rva word_4045C2
.idata:004041FC                 dd rva word_4045D2
.idata:00404200                 dd rva word_4045F0
.idata:00404204                 dd 0
.idata:00404208 ;
.idata:00404208 ; Import names for SHELL32.dll
.idata:00404208 ;
.idata:00404208 off_404208      dd rva word_404412      ; DATA XREF: .idata:__IMPORT_DESCRIPTOR_SHELL32↑o
.idata:0040420C                 dd 0
.idata:00404210 ;
.idata:00404210 ; Import names for msvcrt.dll
.idata:00404210 ;
.idata:00404210 off_404210      dd rva word_404684      ; DATA XREF: .idata:__IMPORT_DESCRIPTOR_msvcrt↑o
.idata:00404214                 dd rva word_4043E2
.idata:00404218                 dd rva word_4043CE
.idata:0040421C                 dd rva word_4043A8
.idata:00404220                 dd rva word_40439E
.idata:00404224                 dd rva word_404392
.idata:00404228                 dd rva word_40437E
.idata:0040422C                 dd rva word_404370
.idata:00404230                 dd rva word_404362
.idata:00404234                 dd rva word_404358
.idata:00404238                 dd rva word_404350
.idata:0040423C                 dd rva word_404348
.idata:00404240                 dd rva word_404336
.idata:00404244                 dd rva word_404326
.idata:00404248                 dd rva word_404318
.idata:0040424C                 dd rva word_404308
.idata:00404250                 dd rva word_4042FA
.idata:00404254                 dd rva word_4042F0
.idata:00404258                 dd rva word_40466A
.idata:0040425C                 dd rva word_40467A
.idata:00404260                 dd 0
.idata:00404264 ;
.idata:00404264 ; Import names for ntdll.dll
.idata:00404264 ;
.idata:00404264 off_404264      dd rva word_4043F0      ; DATA XREF: .idata:__IMPORT_DESCRIPTOR_ntdll↑o
.idata:00404268                 dd 0
.idata:0040426C word_40426C     dw 1D3h                 ; DATA XREF: .idata:004041B4↑o
.idata:0040426E                 db 'GetCommandLineW',0
.idata:0040427E word_40427E     dw 25Ah                 ; DATA XREF: .idata:004041AC↑o
.idata:00404280                 db 'GetLastError',0
.idata:0040428D                 align 2
.idata:0040428E word_40428E     dw 3B9h                 ; DATA XREF: .idata:004041A8↑o
.idata:00404290                 db 'LoadLibraryW',0
.idata:0040429D                 align 2
.idata:0040429E word_40429E     dw 345h                 ; DATA XREF: .idata:004041A4↑o
.idata:004042A0                 db 'HeapSetInformation',0
.idata:004042B3                 align 4
.idata:004042B4 word_4042B4     dw 2A7h                 ; DATA XREF: .idata:004041A0↑o
.idata:004042B6                 db 'GetProcAddress',0
.idata:004042C5                 align 2
.idata:004042C6 word_4042C6     dw 15Ah                 ; DATA XREF: .idata:0040419C↑o
.idata:004042C8                 db 'ExitProcess',0
.idata:004042D4 word_4042D4     dw 1A7h                 ; DATA XREF: .idata:00404198↑o
.idata:004042D6                 db 'FreeLibrary',0
.idata:004042E2 aKernel32Dll    db 'KERNEL32.dll',0     ; DATA XREF: .idata:00404108↑o
.idata:004042EF                 align 10h
.idata:004042F0 word_4042F0     dw 54Eh                 ; DATA XREF: .idata:00404254↑o
.idata:004042F2                 db 'swscanf',0
.idata:004042FA word_4042FA     dw 6Fh                  ; DATA XREF: .idata:00404250↑o
.idata:004042FC                 db '_XcptFilter',0
.idata:00404308 word_404308     dw 0C9h                 ; DATA XREF: .idata:0040424C↑o
.idata:0040430A                 db '__p__commode',0
.idata:00404317                 align 4
.idata:00404318 word_404318     dw 111h                 ; DATA XREF: .idata:00404248↑o
.idata:0040431A                 db '_amsg_exit',0
.idata:00404325                 align 2
.idata:00404326 word_404326     dw 0A1h                 ; DATA XREF: .idata:00404244↑o
.idata:00404328                 db '__getmainargs',0
.idata:00404336 word_404336     dw 0E2h                 ; DATA XREF: .idata:00404240↑o
.idata:00404338                 db '__set_app_type',0
.idata:00404347                 align 4
.idata:00404348 word_404348     dw 4AEh                 ; DATA XREF: .idata:0040423C↑o
.idata:0040434A                 db 'exit',0
.idata:0040434F                 align 10h
.idata:00404350 word_404350     dw 173h                 ; DATA XREF: .idata:00404238↑o
.idata:00404352                 db '_exit',0
.idata:00404358 word_404358     dw 124h                 ; DATA XREF: .idata:00404234↑o
.idata:0040435A                 db '_cexit',0
.idata:00404361                 align 2
.idata:00404362 word_404362     dw 0CEh                 ; DATA XREF: .idata:00404230↑o
.idata:00404364                 db '__p__fmode',0
.idata:0040436F                 align 10h
.idata:00404370 word_404370     dw 207h                 ; DATA XREF: .idata:0040422C↑o
.idata:00404372                 db '_ismbblead',0
.idata:0040437D                 align 2
.idata:0040437E word_40437E     dw 0E4h                 ; DATA XREF: .idata:00404228↑o
.idata:00404380                 db '__setusermatherr',0
.idata:00404391                 align 2
.idata:00404392 word_404392     dw 1E8h                 ; DATA XREF: .idata:00404224↑o
.idata:00404394                 db '_initterm',0
.idata:0040439E word_40439E     dw 0F7h                 ; DATA XREF: .idata:00404220↑o
.idata:004043A0                 db '_acmdln',0
.idata:004043A8 word_4043A8     dw 16Ah                 ; DATA XREF: .idata:0040421C↑o
.idata:004043AA                 db '_except_handler4_common',0
.idata:004043C2 aMsvcrtDll      db 'msvcrt.dll',0       ; DATA XREF: .idata:0040411C↑o
.idata:004043CD                 align 2
.idata:004043CE word_4043CE     dw 35h                  ; DATA XREF: .idata:00404218↑o
.idata:004043D0                 db '?terminate@@YAXXZ',0
.idata:004043E2 word_4043E2     dw 137h                 ; DATA XREF: .idata:00404214↑o
.idata:004043E4                 db '_controlfp',0
.idata:004043EF                 align 10h
.idata:004043F0 word_4043F0     dw 4B4h                 ; DATA XREF: .idata:off_404264↑o
.idata:004043F2                 db 'RtlNtStatusToDosError',0
.idata:00404408 aNtdllDll       db 'ntdll.dll',0        ; DATA XREF: .idata:00404130↑o
.idata:00404412 word_404412     dw 7                    ; DATA XREF: .idata:off_404208↑o
.idata:00404414                 db 'CommandLineToArgvW',0
.idata:00404427                 align 4
.idata:00404428 aShell32Dll     db 'SHELL32.dll',0      ; DATA XREF: .idata:00404144↑o
.idata:00404434 word_404434     dw 20h                  ; DATA XREF: .idata:0040417C↑o
.idata:00404436                 db 'AllocateAndInitializeSid',0
.idata:0040444F                 align 10h
.idata:00404450 word_404450     dw 5Fh                  ; DATA XREF: .idata:00404178↑o
.idata:00404452                 db 'CheckTokenMembership',0
.idata:00404467                 align 4
.idata:00404468 word_404468     dw 133h                 ; DATA XREF: .idata:off_404174↑o
.idata:0040446A                 db 'FreeSid',0
.idata:00404472 aAdvapi32Dll    db 'ADVAPI32.dll',0     ; DATA XREF: .idata:00404158↑o
.idata:0040447F                 align 10h
.idata:00404480 word_404480     dw 56Dh                 ; DATA XREF: .idata:004041B8↑o
.idata:00404482                 db 'Sleep',0
.idata:00404488 word_404488     dw 2C8h                 ; DATA XREF: .idata:004041BC↑o
.idata:0040448A                 db 'GetStartupInfoA',0
.idata:0040449A word_40449A     dw 55Eh                 ; DATA XREF: .idata:004041C0↑o
.idata:0040449C                 db 'SetUnhandledExceptionFilter',0
.idata:004044B8 word_4044B8     dw 26Eh                 ; DATA XREF: .idata:004041C4↑o
.idata:004044BA                 db 'GetModuleHandleA',0
.idata:004044CB                 align 4
.idata:004044CC word_4044CC     dw 440h                 ; DATA XREF: .idata:004041C8↑o
.idata:004044CE                 db 'QueryPerformanceCounter',0
.idata:004044E6 word_4044E6     dw 214h                 ; DATA XREF: .idata:004041CC↑o
.idata:004044E8                 db 'GetCurrentProcessId',0
.idata:004044FC word_4044FC     dw 218h                 ; DATA XREF: .idata:004041D0↑o
.idata:004044FE                 db 'GetCurrentThreadId',0
.idata:00404511                 align 2
.idata:00404512 word_404512     dw 2E2h                 ; DATA XREF: .idata:004041D4↑o
.idata:00404514                 db 'GetSystemTimeAsFileTime',0
.idata:0040452C word_40452C     dw 300h                 ; DATA XREF: .idata:004041D8↑o
.idata:0040452E                 db 'GetTickCount',0
.idata:0040453B                 align 4
.idata:0040453C word_40453C     dw 59Dh                 ; DATA XREF: .idata:004041DC↑o
.idata:0040453E                 db 'UnhandledExceptionFilter',0
.idata:00404557                 align 4
.idata:00404558 word_404558     dw 213h                 ; DATA XREF: .idata:004041E0↑o
.idata:0040455A                 db 'GetCurrentProcess',0
.idata:0040456C word_40456C     dw 57Ch                 ; DATA XREF: .idata:004041E4↑o
.idata:0040456E                 db 'TerminateProcess',0
.idata:0040457F                 align 10h
.idata:00404580 word_404580     dw 0BDh                 ; DATA XREF: .idata:004041E8↑o
.idata:00404582                 db 'CreateEventW',0
.idata:0040458F                 align 10h
.idata:00404590 word_404590     dw 5C8h                 ; DATA XREF: .idata:004041EC↑o
.idata:00404592                 db 'WaitForSingleObjectEx',0
.idata:004045A8 word_4045A8     dw 85h                  ; DATA XREF: .idata:004041F0↑o
.idata:004045AA                 db 'CloseHandle',0
.idata:004045B6 word_4045B6     dw 507h                 ; DATA XREF: .idata:004041F4↑o
.idata:004045B8                 db 'SetEvent',0
.idata:004045C1                 align 2
.idata:004045C2 word_4045C2     dw 523h                 ; DATA XREF: .idata:004041F8↑o
.idata:004045C4                 db 'SetLastError',0
.idata:004045D1                 align 2
.idata:004045D2 word_4045D2     dw 2E6h                 ; DATA XREF: .idata:004041FC↑o
.idata:004045D4                 db 'GetSystemWindowsDirectoryW',0
.idata:004045EF                 align 10h
.idata:004045F0 word_4045F0     dw 455h                 ; DATA XREF: .idata:00404200↑o
.idata:004045F2                 db 'RaiseException',0
.idata:00404601                 align 2
.idata:00404602 word_404602     dw 33Dh                 ; DATA XREF: .idata:004041B0↑o
.idata:00404604                 db 'HeapAlloc',0
.idata:0040460E word_40460E     dw 341h                 ; DATA XREF: .idata:00404188↑o
.idata:00404610                 db 'HeapFree',0
.idata:00404619                 align 2
.idata:0040461A word_40461A     dw 2ADh                 ; DATA XREF: .idata:off_404184↑o
.idata:0040461C                 db 'GetProcessHeap',0
.idata:0040462B                 align 4
.idata:0040462C word_40462C     dw 253h                 ; DATA XREF: .idata:0040418C↑o
.idata:0040462E                 db 'GetFullPathNameW',0
.idata:0040463F                 align 10h
.idata:00404640 word_404640     dw 23Fh                 ; DATA XREF: .idata:00404190↑o
.idata:00404642                 db 'GetFileAttributesW',0
.idata:00404655                 align 2
.idata:00404656 word_404656     dw 0B8h                 ; DATA XREF: .idata:00404194↑o
.idata:00404658                 db 'CreateDirectoryW',0
.idata:00404669                 align 2
.idata:0040466A word_40466A     dw 324h                 ; DATA XREF: .idata:00404258↑o
.idata:0040466C                 db '_resetstkoflw',0
.idata:0040467A word_40467A     dw 57Fh                 ; DATA XREF: .idata:0040425C↑o
.idata:0040467C                 db 'wcsrchr',0
.idata:00404684 word_404684     dw 570h                 ; DATA XREF: .idata:off_404210↑o
.idata:00404686                 db 'wcschr',0
.idata:0040468D                 align 1000h
.idata:0040468D _idata          ends
.idata:0040468D
.idata:0040468D
.idata:0040468D                 end start
