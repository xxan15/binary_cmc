.text:00401000 ;
.text:00401000 ; +-------------------------------------------------------------------------+
.text:00401000 ; |      This file was generated by The Interactive Disassembler (IDA)      |
.text:00401000 ; |           Copyright (c) 2021 Hex-Rays, <support@hex-rays.com>           |
.text:00401000 ; |                      License info: 48-357D-7BC4-C6                      |
.text:00401000 ; |                              Virginia Tech                              |
.text:00401000 ; +-------------------------------------------------------------------------+
.text:00401000 ;
.text:00401000 ; Input SHA256 : EE523D5705B16FA7F3526A42F01E6192420F67F30DC969C4217455F0C4E3CE41
.text:00401000 ; Input MD5    : A0D04690A98E5DCC606B182791FC6330
.text:00401000 ; Input CRC32  : 95E99C80
.text:00401000
.text:00401000 ; File Name   : /home/cindy/Documents/Projects/binary_cmc/benchmark/pe_benchmark/ARP.EXE
.text:00401000 ; Format      : Portable executable for 80386 (PE)
.text:00401000 ; Imagebase   : 400000
.text:00401000 ; Hash        : 2CE2E69F
.text:00401000 ; Section 1. (virtual address 00001000)
.text:00401000 ; Virtual size                  : 00002EFC (  12028.)
.text:00401000 ; Section size in file          : 00003000 (  12288.)
.text:00401000 ; Offset to raw data for section: 00000400
.text:00401000 ; Flags 60000020: Text Executable Readable
.text:00401000 ; Alignment     : default
.text:00401000 ; PDB File Name : arp.pdb
.text:00401000
.text:00401000                 .686p
.text:00401000                 .mmx
.text:00401000                 .model flat
.text:00401000
.text:00401000 ; ===========================================================================
.text:00401000
.text:00401000 ; Segment type: Pure code
.text:00401000 ; Segment permissions: Read/Execute
.text:00401000 _text           segment para public 'CODE' use32
.text:00401000                 assume cs:_text
.text:00401000                 ;org 401000h
.text:00401000                 assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
.text:00401000 ; const struct _EXCEPTION_POINTERS ExceptionInfo
.text:00401000 ExceptionInfo   _EXCEPTION_POINTERS <offset dword_4048A0, offset dword_4048F0>
.text:00401000                                         ; DATA XREF: ___report_gsfailure+102↓o
.text:00401008 __load_config_used dd 98h               ; Size
.text:0040100C                 dd 0                    ; Time stamp
.text:00401010                 dw 2 dup(0)             ; Version: 0.0
.text:00401014                 dd 0                    ; GlobalFlagsClear
.text:00401018                 dd 0                    ; GlobalFlagsSet
.text:0040101C                 dd 0                    ; CriticalSectionDefaultTimeout
.text:00401020                 dd 0                    ; DeCommitFreeBlockThreshold
.text:00401024                 dd 0                    ; DeCommitTotalFreeThreshold
.text:00401028                 dd 0                    ; LockPrefixTable
.text:0040102C                 dd 0                    ; MaximumAllocationSize
.text:00401030                 dd 0                    ; VirtualMemoryThreshold
.text:00401034                 dd 0                    ; ProcessAffinityMask
.text:00401038                 dd 0                    ; ProcessHeapFlags
.text:0040103C                 dw 0                    ; CSDVersion
.text:0040103E                 dw 0                    ; Reserved1
.text:00401040                 dd 0                    ; EditList
.text:00401044                 dd offset ___security_cookie ; SecurityCookie
.text:00401048                 dd offset ___safe_se_handler_table ; SEHandlerTable
.text:0040104C                 dd 1                    ; SEHandlerCount
.text:00401050                 dd offset ___guard_check_icall_fptr ; GuardCFCheckFunctionPointer
.text:00401054                 dd 0                    ; GuardCFDispatchFunctionPointer
.text:00401058                 dd offset ___guard_fids_table ; GuardCFFunctionTable
.text:0040105C                 dd 9                    ; GuardCFFunctionCount
.text:00401060                 dd 17500h               ; GuardFlags
.text:00401064                 dd 0Fh dup(0)
.text:004010A0 ; const _PVFV First
.text:004010A0 First           dd 0                    ; DATA XREF: start-11C↓o
.text:004010A4                 dd offset pre_cpp_init
.text:004010A8 ; const _PVFV Last
.text:004010A8 Last            dd 0                    ; DATA XREF: start-121↓o
.text:004010AC ; const _PIFV dword_4010AC
.text:004010AC dword_4010AC    dd 0                    ; DATA XREF: start-150↓o
.text:004010B0                 dd offset pre_c_init
.text:004010B4                 dd offset sub_403AC0
.text:004010B8 ; const _PIFV dword_4010B8
.text:004010B8 dword_4010B8    dd 0                    ; DATA XREF: start-155↓o
.text:004010BC ___guard_fids_table dd rva pre_c_init   ; DATA XREF: .text:00401058↑o
.text:004010C0                 dd rva pre_cpp_init
.text:004010C4                 dd rva start
.text:004010C8                 dd rva @__security_check_cookie@4 ; __security_check_cookie(x)
.text:004010CC                 dd rva ?__CxxUnhandledExceptionFilter@@YGJPAU_EXCEPTION_POINTERS@@@Z ; __CxxUnhandledExceptionFilter(_EXCEPTION_POINTERS *)
.text:004010D0                 dd rva sub_403AC0
.text:004010D4                 dd rva UserMathErrorFunction
.text:004010D8                 dd rva __except_handler4
.text:004010DC                 dd rva @_guard_check_icall_nop@4 ; _guard_check_icall_nop(x)
.text:004010E0 ; const char aUUUU0xX[]
.text:004010E0 aUUUU0xX        db '%u.%u.%u.%u --- 0x%x',0
.text:004010E0                                         ; DATA XREF: sub_40184E+157↓o
.text:004010F5                 align 4
.text:004010F8 ; const wchar_t a02x
.text:004010F8 a02x:                                   ; DATA XREF: sub_4020BF+30↓o
.text:004010F8                 text "UTF-16LE", '%02x',0
.text:00401102                 align 4
.text:00401104 ; const wchar_t a02x_0
.text:00401104 a02x_0:                                 ; DATA XREF: sub_4020BF+5E↓o
.text:00401104                 text "UTF-16LE", '-%02x',0
.text:00401110 ; const char Format[]
.text:00401110 Format          db '%2x-%2x-%2x-%2x-%2x-%2x',0
.text:00401110                                         ; DATA XREF: sub_4023C7+2D↓o
.text:00401128 ; const CHAR ProcName[]
.text:00401128 ProcName        db 'SnmpMgrOidToStr',0  ; DATA XREF: sub_40253E+8C↓o
.text:00401138 aInetmib1Dll    db '\inetmib1.dll',0    ; DATA XREF: sub_4024DD+27↓o
.text:00401146                 align 4
.text:00401148 ; const CHAR aSnmpextensioni[]
.text:00401148 aSnmpextensioni db 'SnmpExtensionInit',0
.text:00401148                                         ; DATA XREF: sub_40253E+C7↓o
.text:0040115A                 align 4
.text:0040115C ; const CHAR aSnmpextensionq[]
.text:0040115C aSnmpextensionq db 'SnmpExtensionQuery',0
.text:0040115C                                         ; DATA XREF: sub_40253E+DC↓o
.text:0040116F                 align 10h
.text:00401170 ; const char aGettableTypeD[]
.text:00401170 aGettableTypeD  db 'GetTable: type = %d',0Ah,0
.text:00401170                                         ; DATA XREF: sub_402666+1B↓o
.text:00401185                 align 4
.text:00401188 ; const char aReadtableTypeD[]
.text:00401188 aReadtableTypeD db 'ReadTable: type = %d',0Ah,0
.text:00401188                                         ; DATA XREF: ReadTable(x,x,x)+57↓o
.text:0040119E                 align 10h
.text:004011A0 ; const char aValue8dOid[]
.text:004011A0 aValue8dOid     db 'value=%8d oid= ',0  ; DATA XREF: ReadTable(x,x,x)+1E7↓o
.text:004011B0 ; const char aS[]
.text:004011B0 aS              db ' %s ',0             ; DATA XREF: ReadTable(x,x,x)+225↓o
.text:004011B5                 align 4
.text:004011B8 aD              db '%d.',0              ; DATA XREF: ReadTable(x,x,x)+269↓o
.text:004011BC a2d             db '%2d.',0             ; DATA XREF: ReadTable(x,x,x)+275↓o
.text:004011C1                 align 4
.text:004011C4 ; const char a3d[]
.text:004011C4 a3d             db '%3d.',0             ; DATA XREF: ReadTable(x,x,x):loc_402A28↓o
.text:004011C9                 align 4
.text:004011CC ; const char asc_4011CC[]
.text:004011CC asc_4011CC      db 0Ah,0                ; DATA XREF: ReadTable(x,x,x):loc_402A45↓o
.text:004011CE                 align 10h
.text:004011D0 ; const wchar_t aU
.text:004011D0 aU:                                     ; DATA XREF: _main+4D↓o
.text:004011D0                 text "UTF-16LE", '.%u',0
.text:004011D8 ; const char aS_0[]
.text:004011D8 aS_0            db '%s',0               ; DATA XREF: sub_4034F5+B1↓o
.text:004011DB                 align 10h
.text:004011E0 ; Debug Directory entries
.text:004011E0                 dd 0                    ; Characteristics
.text:004011E4                 dd 2CE2E69Fh            ; TimeDateStamp: Fri Nov 12 01:27:59 1993
.text:004011E8                 dw 0                    ; MajorVersion
.text:004011EA                 dw 0                    ; MinorVersion
.text:004011EC                 dd 2                    ; Type: IMAGE_DEBUG_TYPE_CODEVIEW
.text:004011F0                 dd 20h                  ; SizeOfData
.text:004011F4                 dd rva asc_401244       ; AddressOfRawData
.text:004011F8                 dd 644h                 ; PointerToRawData
.text:004011FC                 dd 0                    ; Characteristics
.text:00401200                 dd 2CE2E69Fh            ; TimeDateStamp: Fri Nov 12 01:27:59 1993
.text:00401204                 dw 0                    ; MajorVersion
.text:00401206                 dw 0                    ; MinorVersion
.text:00401208                 dd 0Dh                  ; Type: IMAGE_DEBUG_TYPE_POGO
.text:0040120C                 dd 1D8h                 ; SizeOfData
.text:00401210                 dd rva aGctl            ; AddressOfRawData
.text:00401214                 dd 664h                 ; PointerToRawData
.text:00401218                 dd 0                    ; Characteristics
.text:0040121C                 dd 2CE2E69Fh            ; TimeDateStamp: Fri Nov 12 01:27:59 1993
.text:00401220                 dw 0                    ; MajorVersion
.text:00401222                 dw 0                    ; MinorVersion
.text:00401224                 dd 10h                  ; Type: IMAGE_DEBUG_TYPE_REPRO
.text:00401228                 dd 0                    ; SizeOfData
.text:0040122C                 dd 0                    ; AddressOfRawData
.text:00401230                 dd 0                    ; PointerToRawData
.text:00401234                 align 10h
.text:00401240 ___safe_se_handler_table dd rva __except_handler4
.text:00401240                                         ; DATA XREF: .text:00401048↑o
.text:00401244 ; Debug information (IMAGE_DEBUG_TYPE_CODEVIEW)
.text:00401244 asc_401244      db 'RSDS'               ; DATA XREF: .text:004011F4↑o
.text:00401244                                         ; CV signature
.text:00401248                 dd 808CB051h            ; Data1 ; GUID
.text:00401248                 dw 0F52Dh               ; Data2
.text:00401248                 dw 11B2h                ; Data3
.text:00401248                 db 97h, 8Fh, 7, 0E1h, 0ABh, 4Fh, 56h, 0D3h; Data4
.text:00401258                 dd 1                    ; Age
.text:0040125C                 text "UTF-8", 'arp.pdb',0 ; PdbFileName
.text:00401264 ; Debug information (IMAGE_DEBUG_TYPE_POGO)
.text:00401264 aGctl           db 'GCTL',0             ; DATA XREF: .text:00401210↑o
.text:00401269                 db 10h, 2 dup(0)
.text:0040126C                 dd 0A0h, 6164722Eh, 62246174h, 6372h, 10A0h, 4, 5452432Eh
.text:0040126C                 dd 41435824h, 0
.text:00401290                 dd 10A4h, 4, 5452432Eh, 41435824h, 41h, 10A8h, 4, 5452432Eh
.text:00401290                 dd 5A435824h, 0
.text:004012B8                 dd 10ACh, 4, 5452432Eh, 41495824h, 0
.text:004012CC                 dd 10B0h, 4, 5452432Eh, 41495824h, 41h, 10B4h, 4, 5452432Eh
.text:004012CC                 dd 59495824h, 0
.text:004012F4                 dd 10B8h, 4, 5452432Eh, 5A495824h, 0
.text:00401308                 dd 10BCh, 24h, 6966672Eh, 7364h, 10E0h, 160h, 6164722Eh
.text:00401308                 dd 6174h, 1240h, 4, 6164722Eh, 73246174h, 74616478h, 61h
.text:00401308                 dd 1244h, 1FCh, 6164722Eh, 7A246174h, 62647A7Ah, 67h, 1440h
.text:00401308                 dd 2A60h, 7865742Eh, 6E6D2474h, 0
.text:0040136C                 dd 3EA0h, 5Ch, 6164782Eh, 78246174h, 0
.text:00401380                 dd 4000h, 880h, 7461642Eh, 61h, 4880h, 374h, 7373622Eh
.text:00401380                 dd 0
.text:004013A0                 dd 5000h, 150h, 6164692Eh, 35246174h, 0
.text:004013B4                 dd 5150h, 4, 6330302Eh, 6766h, 5154h, 154h, 6164692Eh
.text:004013B4                 dd 32246174h, 0
.text:004013D8                 dd 52A8h, 14h, 6164692Eh, 33246174h, 0
.text:004013EC                 dd 52BCh, 150h, 6164692Eh, 34246174h, 0
.text:00401400                 dd 540Ch, 63Eh, 6164692Eh, 36246174h, 0
.text:00401414                 dd 6000h, 0F0h, 7273722Eh, 31302463h, 0
.text:00401428                 dd 60F0h, 738h, 7273722Eh, 32302463h, 2 dup(0)
.text:00401440
.text:00401440 ; =============== S U B R O U T I N E =======================================
.text:00401440
.text:00401440 ; Attributes: bp-based frame info_from_lumina
.text:00401440
.text:00401440 ; HRESULT StringCchPrintfW(STRSAFE_LPWSTR pszDest, size_t cchDest, STRSAFE_LPCWSTR pszFormat, ...)
.text:00401440 ?StringCchPrintfW@@YAJPAGIPBGZZ_0 proc near
.text:00401440                                         ; CODE XREF: _main+5C↓p
.text:00401440                                         ; sub_4020BF+3B↓p ...
.text:00401440
.text:00401440 Buffer          = dword ptr  8
.text:00401440 arg_4           = dword ptr  0Ch
.text:00401440 Format          = dword ptr  10h
.text:00401440 Args            = byte ptr  14h
.text:00401440
.text:00401440                 mov     edi, edi
.text:00401442                 push    ebp
.text:00401443                 mov     ebp, esp
.text:00401445                 mov     eax, [ebp+arg_4]
.text:00401448                 push    esi
.text:00401449                 xor     esi, esi
.text:0040144B                 test    eax, eax
.text:0040144D                 jz      short loc_401456
.text:0040144F                 cmp     eax, 7FFFFFFFh
.text:00401454                 jbe     short loc_40145B
.text:00401456
.text:00401456 loc_401456:                             ; CODE XREF: StringCchPrintfW(ushort *,uint,ushort const *,...)+D↑j
.text:00401456                 mov     esi, 80070057h
.text:0040145B
.text:0040145B loc_40145B:                             ; CODE XREF: StringCchPrintfW(ushort *,uint,ushort const *,...)+14↑j
.text:0040145B                 test    esi, esi
.text:0040145D                 js      short loc_401496
.text:0040145F                 push    ebx
.text:00401460                 mov     ebx, [ebp+Buffer]
.text:00401463                 xor     esi, esi
.text:00401465                 push    edi
.text:00401466                 lea     edi, [eax-1]
.text:00401469                 lea     eax, [ebp+Args]
.text:0040146C                 push    eax             ; Args
.text:0040146D                 push    [ebp+Format]    ; Format
.text:00401470                 push    edi             ; BufferCount
.text:00401471                 push    ebx             ; Buffer
.text:00401472                 call    ds:_vsnwprintf
.text:00401478                 add     esp, 10h
.text:0040147B                 test    eax, eax
.text:0040147D                 js      short loc_401487
.text:0040147F                 cmp     eax, edi
.text:00401481                 ja      short loc_401487
.text:00401483                 jnz     short loc_401492
.text:00401485                 jmp     short loc_40148C
.text:00401487 ; ---------------------------------------------------------------------------
.text:00401487
.text:00401487 loc_401487:                             ; CODE XREF: StringCchPrintfW(ushort *,uint,ushort const *,...)+3D↑j
.text:00401487                                         ; StringCchPrintfW(ushort *,uint,ushort const *,...)+41↑j
.text:00401487                 mov     esi, 8007007Ah
.text:0040148C
.text:0040148C loc_40148C:                             ; CODE XREF: StringCchPrintfW(ushort *,uint,ushort const *,...)+45↑j
.text:0040148C                 xor     eax, eax
.text:0040148E                 mov     [ebx+edi*2], ax
.text:00401492
.text:00401492 loc_401492:                             ; CODE XREF: StringCchPrintfW(ushort *,uint,ushort const *,...)+43↑j
.text:00401492                 pop     edi
.text:00401493                 pop     ebx
.text:00401494                 jmp     short loc_4014A2
.text:00401496 ; ---------------------------------------------------------------------------
.text:00401496
.text:00401496 loc_401496:                             ; CODE XREF: StringCchPrintfW(ushort *,uint,ushort const *,...)+1D↑j
.text:00401496                 test    eax, eax
.text:00401498                 jz      short loc_4014A2
.text:0040149A                 mov     ecx, [ebp+Buffer]
.text:0040149D                 xor     eax, eax
.text:0040149F                 mov     [ecx], ax
.text:004014A2
.text:004014A2 loc_4014A2:                             ; CODE XREF: StringCchPrintfW(ushort *,uint,ushort const *,...)+54↑j
.text:004014A2                                         ; StringCchPrintfW(ushort *,uint,ushort const *,...)+58↑j
.text:004014A2                 mov     eax, esi
.text:004014A4                 pop     esi
.text:004014A5                 pop     ebp
.text:004014A6                 retn
.text:004014A6 ?StringCchPrintfW@@YAJPAGIPBGZZ_0 endp
.text:004014A6
.text:004014A7
.text:004014A7 ; =============== S U B R O U T I N E =======================================
.text:004014A7
.text:004014A7 ; Attributes: bp-based frame info_from_lumina
.text:004014A7
.text:004014A7 ; int StringCchPrintfA(char *DstBuf, unsigned int, const char *Format, ...)
.text:004014A7 ?StringCchPrintfA@@YAJPADIPBDZZ proc near
.text:004014A7                                         ; CODE XREF: sub_40184E+162↓p
.text:004014A7
.text:004014A7 Buffer          = dword ptr  8
.text:004014A7 arg_4           = dword ptr  0Ch
.text:004014A7 Format          = dword ptr  10h
.text:004014A7 ArgList         = byte ptr  14h
.text:004014A7
.text:004014A7                 mov     edi, edi
.text:004014A9                 push    ebp
.text:004014AA                 mov     ebp, esp
.text:004014AC                 mov     eax, [ebp+arg_4]
.text:004014AF                 push    esi
.text:004014B0                 xor     esi, esi
.text:004014B2                 test    eax, eax
.text:004014B4                 jz      short loc_4014BD
.text:004014B6                 cmp     eax, 7FFFFFFFh
.text:004014BB                 jbe     short loc_4014C2
.text:004014BD
.text:004014BD loc_4014BD:                             ; CODE XREF: StringCchPrintfA(char *,uint,char const *,...)+D↑j
.text:004014BD                 mov     esi, 80070057h
.text:004014C2
.text:004014C2 loc_4014C2:                             ; CODE XREF: StringCchPrintfA(char *,uint,char const *,...)+14↑j
.text:004014C2                 test    esi, esi
.text:004014C4                 js      short loc_4014FB
.text:004014C6                 push    ebx
.text:004014C7                 mov     ebx, [ebp+Buffer]
.text:004014CA                 xor     esi, esi
.text:004014CC                 push    edi
.text:004014CD                 lea     edi, [eax-1]
.text:004014D0                 lea     eax, [ebp+ArgList]
.text:004014D3                 push    eax             ; ArgList
.text:004014D4                 push    [ebp+Format]    ; Format
.text:004014D7                 push    edi             ; BufferCount
.text:004014D8                 push    ebx             ; Buffer
.text:004014D9                 call    ds:_vsnprintf
.text:004014DF                 add     esp, 10h
.text:004014E2                 test    eax, eax
.text:004014E4                 js      short loc_4014EE
.text:004014E6                 cmp     eax, edi
.text:004014E8                 ja      short loc_4014EE
.text:004014EA                 jnz     short loc_4014F7
.text:004014EC                 jmp     short loc_4014F3
.text:004014EE ; ---------------------------------------------------------------------------
.text:004014EE
.text:004014EE loc_4014EE:                             ; CODE XREF: StringCchPrintfA(char *,uint,char const *,...)+3D↑j
.text:004014EE                                         ; StringCchPrintfA(char *,uint,char const *,...)+41↑j
.text:004014EE                 mov     esi, 8007007Ah
.text:004014F3
.text:004014F3 loc_4014F3:                             ; CODE XREF: StringCchPrintfA(char *,uint,char const *,...)+45↑j
.text:004014F3                 mov     byte ptr [edi+ebx], 0
.text:004014F7
.text:004014F7 loc_4014F7:                             ; CODE XREF: StringCchPrintfA(char *,uint,char const *,...)+43↑j
.text:004014F7                 pop     edi
.text:004014F8                 pop     ebx
.text:004014F9                 jmp     short loc_401505
.text:004014FB ; ---------------------------------------------------------------------------
.text:004014FB
.text:004014FB loc_4014FB:                             ; CODE XREF: StringCchPrintfA(char *,uint,char const *,...)+1D↑j
.text:004014FB                 test    eax, eax
.text:004014FD                 jz      short loc_401505
.text:004014FF                 mov     ecx, [ebp+Buffer]
.text:00401502                 mov     byte ptr [ecx], 0
.text:00401505
.text:00401505 loc_401505:                             ; CODE XREF: StringCchPrintfA(char *,uint,char const *,...)+52↑j
.text:00401505                                         ; StringCchPrintfA(char *,uint,char const *,...)+56↑j
.text:00401505                 mov     eax, esi
.text:00401507                 pop     esi
.text:00401508                 pop     ebp
.text:00401509                 retn
.text:00401509 ?StringCchPrintfA@@YAJPADIPBDZZ endp
.text:00401509
.text:0040150A
.text:0040150A ; =============== S U B R O U T I N E =======================================
.text:0040150A
.text:0040150A ; Attributes: bp-based frame fuzzy-sp info_from_lumina
.text:0040150A
.text:0040150A ; int __cdecl main(int argc, const char **argv, const char **envp)
.text:0040150A _main           proc near               ; CODE XREF: start-BB↓p
.text:0040150A
.text:0040150A pdwSize         = dword ptr -1C8h
.text:0040150A var_1C4         = dword ptr -1C4h
.text:0040150A var_1C0         = dword ptr -1C0h
.text:0040150A var_1BC         = dword ptr -1BCh
.text:0040150A var_1B8         = dword ptr -1B8h
.text:0040150A var_1B4         = dword ptr -1B4h
.text:0040150A WSAData         = WSAData ptr -1B0h
.text:0040150A Locale          = word ptr -1Ch
.text:0040150A var_4           = dword ptr -4
.text:0040150A argc            = dword ptr  8
.text:0040150A argv            = dword ptr  0Ch
.text:0040150A envp            = dword ptr  10h
.text:0040150A
.text:0040150A                 mov     edi, edi
.text:0040150C                 push    ebp
.text:0040150D                 mov     ebp, esp
.text:0040150F                 and     esp, 0FFFFFFF8h
.text:00401512                 sub     esp, 1CCh
.text:00401518                 mov     eax, ___security_cookie
.text:0040151D                 xor     eax, esp
.text:0040151F                 mov     [esp+1CCh+var_4], eax
.text:00401526                 mov     eax, [ebp+argv]
.text:00401529                 push    ebx
.text:0040152A                 push    esi
.text:0040152B                 push    edi
.text:0040152C                 mov     [esp+1D8h+var_1BC], eax
.text:00401530                 xor     eax, eax
.text:00401532                 push    eax             ; HeapInformationLength
.text:00401533                 push    eax             ; HeapInformation
.text:00401534                 push    1               ; HeapInformationClass
.text:00401536                 push    eax             ; HeapHandle
.text:00401537                 mov     esi, eax
.text:00401539                 mov     byte ptr [esp+1E8h+var_1C0], al
.text:0040153D                 mov     byte ptr [esp+1E8h+var_1B4], 1
.text:00401542                 mov     edi, eax
.text:00401544                 mov     ebx, eax
.text:00401546                 mov     [esp+1E8h+var_1C4], eax
.text:0040154A                 call    ds:HeapSetInformation
.text:00401550                 call    ds:GetConsoleOutputCP
.text:00401556                 push    eax             ; Args
.text:00401557                 push    offset aU       ; ".%u"
.text:0040155C                 lea     eax, [esp+1E0h+Locale]
.text:00401563                 push    0Ch             ; int
.text:00401565                 push    eax             ; Buffer
.text:00401566                 call    ?StringCchPrintfW@@YAJPAGIPBGZZ_0 ; StringCchPrintfW(ushort *,uint,ushort const *,...)
.text:0040156B                 add     esp, 10h
.text:0040156E                 test    eax, eax
.text:00401570                 jnz     short loc_401583
.text:00401572                 lea     eax, [esp+1D8h+Locale]
.text:00401579                 push    eax             ; Locale
.text:0040157A                 push    ebx             ; Category
.text:0040157B                 call    ds:_wsetlocale
.text:00401581                 pop     ecx
.text:00401582                 pop     ecx
.text:00401583
.text:00401583 loc_401583:                             ; CODE XREF: _main+66↑j
.text:00401583                 push    0               ; pulNumLanguages
.text:00401585                 push    0               ; pwszLanguagesBuffer
.text:00401587                 push    100h            ; dwFlags
.text:0040158C                 call    ds:SetThreadPreferredUILanguages
.text:00401592                 mov     ecx, [esp+1D8h+var_1BC]
.text:00401596                 mov     eax, [ecx]
.text:00401598                 mov     dword_404BF0, eax
.text:0040159D                 lea     eax, [esp+1D8h+WSAData]
.text:004015A1                 push    eax             ; lpWSAData
.text:004015A2                 push    101h            ; wVersionRequested
.text:004015A7                 call    ds:WSAStartup
.text:004015AD                 test    eax, eax
.text:004015AF                 jz      short loc_4015CF
.text:004015B1                 push    eax
.text:004015B2                 push    dword_404BF0    ; char
.text:004015B8                 push    2719h           ; dwMessageId
.text:004015BD                 push    2               ; int
.text:004015BF                 call    sub_4034F5
.text:004015C4                 add     esp, 10h
.text:004015C7
.text:004015C7 loc_4015C7:                             ; CODE XREF: _main+1A9↓j
.text:004015C7                                         ; _main+1C2↓j
.text:004015C7                 push    1               ; Code
.text:004015C9                 call    ds:exit
.text:004015CF ; ---------------------------------------------------------------------------
.text:004015CF
.text:004015CF loc_4015CF:                             ; CODE XREF: _main+A5↑j
.text:004015CF                 cmp     [ebp+argc], 2
.text:004015D3                 jl      loc_401776
.text:004015D9                 xor     eax, eax
.text:004015DB                 inc     eax
.text:004015DC                 mov     [esp+1D8h+pdwSize], eax
.text:004015E0                 cmp     [ebp+argc], eax
.text:004015E3                 jle     loc_40168D
.text:004015E9
.text:004015E9 loc_4015E9:                             ; CODE XREF: _main+17D↓j
.text:004015E9                 mov     ecx, [esp+1D8h+var_1BC]
.text:004015ED                 mov     eax, [ecx+eax*4]
.text:004015F0                 mov     cl, [eax]
.text:004015F2                 cmp     cl, 2Dh ; '-'
.text:004015F5                 jz      short loc_401670
.text:004015F7                 cmp     cl, 2Fh ; '/'
.text:004015FA                 jz      short loc_401670
.text:004015FC                 test    edi, edi
.text:004015FE                 jnz     short loc_401604
.text:00401600                 mov     edi, eax
.text:00401602                 jmp     short loc_40167B
.text:00401604 ; ---------------------------------------------------------------------------
.text:00401604
.text:00401604 loc_401604:                             ; CODE XREF: _main+F4↑j
.text:00401604                 test    ebx, ebx
.text:00401606                 jnz     short loc_40160C
.text:00401608                 mov     ebx, eax
.text:0040160A                 jmp     short loc_40167B
.text:0040160C ; ---------------------------------------------------------------------------
.text:0040160C
.text:0040160C loc_40160C:                             ; CODE XREF: _main+FC↑j
.text:0040160C                 cmp     [esp+1D8h+var_1C4], 0
.text:00401611                 jnz     loc_401776
.text:00401617                 mov     [esp+1D8h+var_1C4], eax
.text:0040161B                 jmp     short loc_40167B
.text:0040161D ; ---------------------------------------------------------------------------
.text:0040161D
.text:0040161D loc_40161D:                             ; CODE XREF: _main+16F↓j
.text:0040161D                 movsx   eax, al
.text:00401620                 push    eax             ; C
.text:00401621                 call    ds:toupper
.text:00401627                 pop     ecx
.text:00401628                 cmp     eax, 41h ; 'A'
.text:0040162B                 jz      short loc_401669
.text:0040162D                 cmp     eax, 44h ; 'D'
.text:00401630                 jz      short loc_401664
.text:00401632                 cmp     eax, 47h ; 'G'
.text:00401635                 jz      short loc_401669
.text:00401637                 cmp     eax, 4Eh ; 'N'
.text:0040163A                 jz      short loc_401655
.text:0040163C                 cmp     eax, 53h ; 'S'
.text:0040163F                 jz      short loc_401651
.text:00401641                 cmp     eax, 56h ; 'V'
.text:00401644                 jnz     loc_401776
.text:0040164A                 mov     byte ptr [esp+1D8h+var_1B4], 0
.text:0040164F                 jmp     short loc_40165A
.text:00401651 ; ---------------------------------------------------------------------------
.text:00401651
.text:00401651 loc_401651:                             ; CODE XREF: _main+135↑j
.text:00401651                 push    2
.text:00401653                 jmp     short loc_401666
.text:00401655 ; ---------------------------------------------------------------------------
.text:00401655
.text:00401655 loc_401655:                             ; CODE XREF: _main+130↑j
.text:00401655                 mov     byte ptr [esp+1D8h+var_1C0], 1
.text:0040165A
.text:0040165A loc_40165A:                             ; CODE XREF: _main+145↑j
.text:0040165A                 test    esi, esi
.text:0040165C                 jz      loc_401776
.text:00401662                 jmp     short loc_40166C
.text:00401664 ; ---------------------------------------------------------------------------
.text:00401664
.text:00401664 loc_401664:                             ; CODE XREF: _main+126↑j
.text:00401664                 push    3
.text:00401666
.text:00401666 loc_401666:                             ; CODE XREF: _main+149↑j
.text:00401666                 pop     esi
.text:00401667                 jmp     short loc_40166C
.text:00401669 ; ---------------------------------------------------------------------------
.text:00401669
.text:00401669 loc_401669:                             ; CODE XREF: _main+121↑j
.text:00401669                                         ; _main+12B↑j
.text:00401669                 xor     esi, esi
.text:0040166B                 inc     esi
.text:0040166C
.text:0040166C loc_40166C:                             ; CODE XREF: _main+158↑j
.text:0040166C                                         ; _main+15D↑j
.text:0040166C                 mov     eax, [esp+1D8h+var_1B8]
.text:00401670
.text:00401670 loc_401670:                             ; CODE XREF: _main+EB↑j
.text:00401670                                         ; _main+F0↑j
.text:00401670                 inc     eax
.text:00401671                 mov     [esp+1D8h+var_1B8], eax
.text:00401675                 mov     al, [eax]
.text:00401677                 test    al, al
.text:00401679                 jnz     short loc_40161D
.text:0040167B
.text:0040167B loc_40167B:                             ; CODE XREF: _main+F8↑j
.text:0040167B                                         ; _main+100↑j ...
.text:0040167B                 mov     eax, [esp+1D8h+pdwSize]
.text:0040167F                 inc     eax
.text:00401680                 mov     [esp+1D8h+pdwSize], eax
.text:00401684                 cmp     eax, [ebp+argc]
.text:00401687                 jl      loc_4015E9
.text:0040168D
.text:0040168D loc_40168D:                             ; CODE XREF: _main+D9↑j
.text:0040168D                 xor     ecx, ecx
.text:0040168F                 lea     eax, [esp+1D8h+pdwSize]
.text:00401693                 push    ecx             ; bOrder
.text:00401694                 push    eax             ; pdwSize
.text:00401695                 push    ecx             ; pIpForwardTable
.text:00401696                 mov     [esp+1E4h+pdwSize], ecx
.text:0040169A                 call    ds:GetIpForwardTable
.text:004016A0                 cmp     eax, 7Ah ; 'z'
.text:004016A3                 jz      short loc_4016B8
.text:004016A5                 push    2724h           ; dwMessageId
.text:004016AA                 push    2               ; int
.text:004016AC                 call    sub_4034F5
.text:004016B1                 pop     ecx
.text:004016B2                 pop     ecx
.text:004016B3                 jmp     loc_4015C7
.text:004016B8 ; ---------------------------------------------------------------------------
.text:004016B8
.text:004016B8 loc_4016B8:                             ; CODE XREF: _main+199↑j
.text:004016B8                 call    sub_40253E
.text:004016BD                 test    eax, eax
.text:004016BF                 jz      short loc_4016D1
.text:004016C1                 push    eax
.text:004016C2                 mov     edx, 271Eh
.text:004016C7                 call    sub_4035DB
.text:004016CC                 jmp     loc_4015C7
.text:004016D1 ; ---------------------------------------------------------------------------
.text:004016D1
.text:004016D1 loc_4016D1:                             ; CODE XREF: _main+1B5↑j
.text:004016D1                 sub     esi, 1
.text:004016D4                 jz      short loc_401734
.text:004016D6                 sub     esi, 1
.text:004016D9                 jz      short loc_401704
.text:004016DB                 sub     esi, 1
.text:004016DE                 jnz     short loc_40175F
.text:004016E0                 call    sub_4024BA
.text:004016E5                 test    al, al
.text:004016E7                 jnz     short loc_4016F0
.text:004016E9                 mov     eax, 2E4h
.text:004016EE                 jmp     short loc_4016FD
.text:004016F0 ; ---------------------------------------------------------------------------
.text:004016F0
.text:004016F0 loc_4016F0:                             ; CODE XREF: _main+1DD↑j
.text:004016F0                 mov     edx, ebx
.text:004016F2                 mov     ecx, edi
.text:004016F4                 call    sub_401A35
.text:004016F9                 test    eax, eax
.text:004016FB                 jz      short loc_40175F
.text:004016FD
.text:004016FD loc_4016FD:                             ; CODE XREF: _main+1E4↑j
.text:004016FD                 mov     edx, 2721h
.text:00401702                 jmp     short loc_401759
.text:00401704 ; ---------------------------------------------------------------------------
.text:00401704
.text:00401704 loc_401704:                             ; CODE XREF: _main+1CF↑j
.text:00401704                 test    edi, edi
.text:00401706                 jz      short loc_401776
.text:00401708                 test    ebx, ebx
.text:0040170A                 jz      short loc_401776
.text:0040170C                 call    sub_4024BA
.text:00401711                 test    al, al
.text:00401713                 jnz     short loc_40171C
.text:00401715                 mov     eax, 2E4h
.text:0040171A                 jmp     short loc_40172D
.text:0040171C ; ---------------------------------------------------------------------------
.text:0040171C
.text:0040171C loc_40171C:                             ; CODE XREF: _main+209↑j
.text:0040171C                 push    [esp+1D8h+var_1C4]
.text:00401720                 mov     edx, ebx
.text:00401722                 mov     ecx, edi
.text:00401724                 call    _AddArp@12      ; AddArp(x,x,x)
.text:00401729                 test    eax, eax
.text:0040172B                 jz      short loc_40175F
.text:0040172D
.text:0040172D loc_40172D:                             ; CODE XREF: _main+210↑j
.text:0040172D                 mov     edx, 2720h
.text:00401732                 jmp     short loc_401759
.text:00401734 ; ---------------------------------------------------------------------------
.text:00401734
.text:00401734 loc_401734:                             ; CODE XREF: _main+1CA↑j
.text:00401734                 cmp     byte ptr [esp+1D8h+var_1C0], 0
.text:00401739                 jz      short loc_40173F
.text:0040173B                 test    edi, edi
.text:0040173D                 jz      short loc_401776
.text:0040173F
.text:0040173F loc_40173F:                             ; CODE XREF: _main+22F↑j
.text:0040173F                 push    [esp+1D8h+var_1B4]
.text:00401743                 mov     edx, ebx
.text:00401745                 mov     ecx, edi
.text:00401747                 push    [esp+1DCh+var_1C0]
.text:0040174B                 call    sub_40184E
.text:00401750                 test    eax, eax
.text:00401752                 jz      short loc_40175F
.text:00401754                 mov     edx, 271Fh
.text:00401759
.text:00401759 loc_401759:                             ; CODE XREF: _main+1F8↑j
.text:00401759                                         ; _main+228↑j
.text:00401759                 push    eax
.text:0040175A                 call    sub_4035DB
.text:0040175F
.text:0040175F loc_40175F:                             ; CODE XREF: _main+1D4↑j
.text:0040175F                                         ; _main+1F1↑j ...
.text:0040175F                 mov     ecx, [esp+1D8h+var_4]
.text:00401766                 xor     eax, eax
.text:00401768                 pop     edi
.text:00401769                 pop     esi
.text:0040176A                 pop     ebx
.text:0040176B                 xor     ecx, esp        ; StackCookie
.text:0040176D                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text:00401772                 mov     esp, ebp
.text:00401774                 pop     ebp
.text:00401775                 retn
.text:00401776 ; ---------------------------------------------------------------------------
.text:00401776
.text:00401776 loc_401776:                             ; CODE XREF: _main+C9↑j
.text:00401776                                         ; _main+107↑j ...
.text:00401776                 call    sub_4023A9
.text:00401776 _main           endp
.text:00401776
.text:00401776 ; ---------------------------------------------------------------------------
.text:0040177B                 align 4
.text:0040177C
.text:0040177C ; =============== S U B R O U T I N E =======================================
.text:0040177C
.text:0040177C ; Attributes: bp-based frame
.text:0040177C
.text:0040177C sub_40177C      proc near               ; CODE XREF: sub_401A35+121↓p
.text:0040177C                                         ; AddArp(x,x,x)+13D↓p ...
.text:0040177C
.text:0040177C arg_0           = dword ptr  8
.text:0040177C arg_4           = dword ptr  0Ch
.text:0040177C
.text:0040177C                 mov     edi, edi
.text:0040177E                 push    ebp
.text:0040177F                 mov     ebp, esp
.text:00401781                 push    esi
.text:00401782                 xor     eax, eax
.text:00401784                 mov     esi, ecx
.text:00401786                 inc     eax
.text:00401787                 mov     ecx, [ebp+arg_4]
.text:0040178A                 push    edi
.text:0040178B                 push    4
.text:0040178D                 mov     [esi], eax
.text:0040178F                 pop     edi
.text:00401790                 add     esi, edi
.text:00401792                 mov     dword ptr [esi], 3
.text:00401798                 add     esi, edi
.text:0040179A                 mov     dword ptr [esi], 6
.text:004017A0                 add     esi, edi
.text:004017A2                 mov     [esi], eax
.text:004017A4                 add     esi, edi
.text:004017A6                 mov     dword ptr [esi], 2
.text:004017AC                 add     esi, edi
.text:004017AE                 mov     [esi], eax
.text:004017B0                 add     esi, edi
.text:004017B2                 mov     [esi], edi
.text:004017B4                 add     esi, edi
.text:004017B6                 mov     dword ptr [esi], 16h
.text:004017BC                 add     esi, edi
.text:004017BE                 mov     [esi], eax
.text:004017C0                 add     esi, edi
.text:004017C2                 mov     eax, [ebp+arg_0]
.text:004017C5                 mov     [esi], edx
.text:004017C7                 add     esi, edi
.text:004017C9                 mov     [esi], eax
.text:004017CB                 add     esi, edi
.text:004017CD                 movzx   eax, byte ptr [ecx]
.text:004017D0                 mov     [esi], eax
.text:004017D2                 add     esi, edi
.text:004017D4                 movzx   eax, byte ptr [ecx+1]
.text:004017D8                 mov     [esi], eax
.text:004017DA                 movzx   eax, byte ptr [ecx+2]
.text:004017DE                 mov     [esi+edi], eax
.text:004017E1                 movzx   eax, byte ptr [ecx+3]
.text:004017E5                 mov     [esi+edi+4], eax
.text:004017E9                 pop     edi
.text:004017EA                 pop     esi
.text:004017EB                 pop     ebp
.text:004017EC                 retn    8
.text:004017EC sub_40177C      endp
.text:004017EC
.text:004017EF
.text:004017EF ; =============== S U B R O U T I N E =======================================
.text:004017EF
.text:004017EF ; Attributes: bp-based frame
.text:004017EF
.text:004017EF sub_4017EF      proc near               ; CODE XREF: sub_40184E+90↓p
.text:004017EF                                         ; sub_401A35+93↓p ...
.text:004017EF
.text:004017EF var_4           = dword ptr -4
.text:004017EF
.text:004017EF                 mov     edi, edi
.text:004017F1                 push    ebp
.text:004017F2                 mov     ebp, esp
.text:004017F4                 push    ecx
.text:004017F5                 push    ebx
.text:004017F6                 push    esi
.text:004017F7                 push    edi
.text:004017F8                 mov     esi, edx
.text:004017FA                 mov     ebx, ecx
.text:004017FC                 push    esi             ; cp
.text:004017FD                 or      edi, 0FFFFFFFFh
.text:00401800                 call    ds:inet_addr
.text:00401806                 cmp     eax, edi
.text:00401808                 jnz     short loc_401820
.text:0040180A                 push    esi             ; name
.text:0040180B                 call    ds:gethostbyname
.text:00401811                 test    eax, eax
.text:00401813                 jz      short loc_40181E
.text:00401815                 mov     eax, [eax+0Ch]
.text:00401818                 mov     eax, [eax]
.text:0040181A                 mov     eax, [eax]
.text:0040181C                 jmp     short loc_401820
.text:0040181E ; ---------------------------------------------------------------------------
.text:0040181E
.text:0040181E loc_40181E:                             ; CODE XREF: sub_4017EF+24↑j
.text:0040181E                 mov     eax, edi
.text:00401820
.text:00401820 loc_401820:                             ; CODE XREF: sub_4017EF+19↑j
.text:00401820                                         ; sub_4017EF+2D↑j
.text:00401820                 mov     [ebp+var_4], eax
.text:00401823                 cmp     eax, edi
.text:00401825                 jz      short loc_401845
.text:00401827                 mov     esi, [ebx]
.text:00401829                 jmp     short loc_40183C
.text:0040182B ; ---------------------------------------------------------------------------
.text:0040182B
.text:0040182B loc_40182B:                             ; CODE XREF: sub_4017EF+4F↓j
.text:0040182B                 lea     edx, [esi+8]
.text:0040182E                 lea     ecx, [ebp+var_4]
.text:00401831                 call    sub_4034D0
.text:00401836                 test    eax, eax
.text:00401838                 jnz     short loc_401842
.text:0040183A                 mov     esi, [esi]
.text:0040183C
.text:0040183C loc_40183C:                             ; CODE XREF: sub_4017EF+3A↑j
.text:0040183C                 cmp     esi, ebx
.text:0040183E                 jnz     short loc_40182B
.text:00401840                 jmp     short loc_401845
.text:00401842 ; ---------------------------------------------------------------------------
.text:00401842
.text:00401842 loc_401842:                             ; CODE XREF: sub_4017EF+49↑j
.text:00401842                 mov     edi, [esi+0Ch]
.text:00401845
.text:00401845 loc_401845:                             ; CODE XREF: sub_4017EF+36↑j
.text:00401845                                         ; sub_4017EF+51↑j
.text:00401845                 mov     eax, edi
.text:00401847                 pop     edi
.text:00401848                 pop     esi
.text:00401849                 pop     ebx
.text:0040184A                 mov     esp, ebp
.text:0040184C                 pop     ebp
.text:0040184D                 retn
.text:0040184D sub_4017EF      endp
.text:0040184D
.text:0040184E
.text:0040184E ; =============== S U B R O U T I N E =======================================
.text:0040184E
.text:0040184E ; Attributes: bp-based frame
.text:0040184E
.text:0040184E sub_40184E      proc near               ; CODE XREF: _main+241↑p
.text:0040184E
.text:0040184E var_60          = dword ptr -60h
.text:0040184E var_5C          = dword ptr -5Ch
.text:0040184E var_58          = dword ptr -58h
.text:0040184E var_54          = dword ptr -54h
.text:0040184E var_50          = dword ptr -50h
.text:0040184E var_49          = byte ptr -49h
.text:0040184E Buffer          = byte ptr -48h
.text:0040184E var_4           = dword ptr -4
.text:0040184E arg_0           = byte ptr  8
.text:0040184E arg_4           = byte ptr  0Ch
.text:0040184E
.text:0040184E                 mov     edi, edi
.text:00401850                 push    ebp
.text:00401851                 mov     ebp, esp
.text:00401853                 sub     esp, 64h
.text:00401856                 mov     eax, ___security_cookie
.text:0040185B                 xor     eax, ebp
.text:0040185D                 mov     [ebp+var_4], eax
.text:00401860                 or      [ebp+var_54], 0FFFFFFFFh
.text:00401864                 xor     eax, eax
.text:00401866                 or      [ebp+var_60], 0FFFFFFFFh
.text:0040186A                 push    ebx
.text:0040186B                 push    esi
.text:0040186C                 push    edi
.text:0040186D                 mov     edi, edx
.text:0040186F                 mov     [ebp+var_49], al
.text:00401872                 mov     esi, ecx
.text:00401874                 test    edi, edi
.text:00401876                 jnz     short loc_401885
.text:00401878                 cmp     [ebp+arg_0], al
.text:0040187B                 jz      short loc_401885
.text:0040187D                 mov     [ebp+var_58], eax
.text:00401880                 mov     [ebp+var_5C], eax
.text:00401883                 jmp     short loc_4018BD
.text:00401885 ; ---------------------------------------------------------------------------
.text:00401885
.text:00401885 loc_401885:                             ; CODE XREF: sub_40184E+28↑j
.text:00401885                                         ; sub_40184E+2D↑j
.text:00401885                 mov     [ebp+var_58], esi
.text:00401888                 test    esi, esi
.text:0040188A                 jz      short loc_4018BB
.text:0040188C                 lea     edx, [ebp+var_50]
.text:0040188F                 call    sub_4021BA
.text:00401894                 cmp     [ebp+var_50], 1
.text:00401898                 mov     [ebp+var_5C], eax
.text:0040189B                 jz      short loc_4018BB
.text:0040189D
.text:0040189D loc_40189D:                             ; CODE XREF: sub_40184E+9B↓j
.text:0040189D                 push    esi
.text:0040189E                 push    dword_404BF0    ; char
.text:004018A4                 push    2712h           ; dwMessageId
.text:004018A9                 push    2               ; int
.text:004018AB                 call    sub_4034F5
.text:004018B0                 add     esp, 10h
.text:004018B3                 push    1               ; Code
.text:004018B5                 call    ds:exit
.text:004018BB ; ---------------------------------------------------------------------------
.text:004018BB
.text:004018BB loc_4018BB:                             ; CODE XREF: sub_40184E+3C↑j
.text:004018BB                                         ; sub_40184E+4D↑j
.text:004018BB                 mov     esi, edi
.text:004018BD
.text:004018BD loc_4018BD:                             ; CODE XREF: sub_40184E+35↑j
.text:004018BD                 push    2
.text:004018BF                 lea     edx, [ebp+var_50]
.text:004018C2                 pop     ecx
.text:004018C3                 call    sub_402666
.text:004018C8                 mov     edi, eax
.text:004018CA                 test    edi, edi
.text:004018CC                 jnz     short loc_4018D6
.text:004018CE
.text:004018CE loc_4018CE:                             ; CODE XREF: sub_40184E+AC↓j
.text:004018CE                 mov     eax, [ebp+var_50]
.text:004018D1                 jmp     loc_401A0B
.text:004018D6 ; ---------------------------------------------------------------------------
.text:004018D6
.text:004018D6 loc_4018D6:                             ; CODE XREF: sub_40184E+7E↑j
.text:004018D6                 test    esi, esi
.text:004018D8                 jz      short loc_4018EB
.text:004018DA                 mov     edx, esi
.text:004018DC                 mov     ecx, edi
.text:004018DE                 call    sub_4017EF
.text:004018E3                 mov     [ebp+var_54], eax
.text:004018E6                 cmp     eax, 0FFFFFFFFh
.text:004018E9                 jz      short loc_40189D
.text:004018EB
.text:004018EB loc_4018EB:                             ; CODE XREF: sub_40184E+8A↑j
.text:004018EB                 push    4
.text:004018ED                 lea     edx, [ebp+var_50]
.text:004018F0                 pop     ecx
.text:004018F1                 call    sub_402666
.text:004018F6                 mov     ebx, eax
.text:004018F8                 test    ebx, ebx
.text:004018FA                 jz      short loc_4018CE
.text:004018FC                 mov     esi, [ebx]
.text:004018FE                 cmp     esi, ebx
.text:00401900                 jz      loc_4019E7
.text:00401906                 mov     al, [ebp+arg_4]
.text:00401909
.text:00401909 loc_401909:                             ; CODE XREF: sub_40184E+193↓j
.text:00401909                 test    al, al
.text:0040190B                 jz      short loc_401938
.text:0040190D                 cmp     dword ptr [esi+1Ch], 2
.text:00401911                 jz      loc_4019DD
.text:00401917                 mov     ecx, [esi+8]
.text:0040191A                 mov     eax, [edi]
.text:0040191C                 jmp     short loc_401925
.text:0040191E ; ---------------------------------------------------------------------------
.text:0040191E
.text:0040191E loc_40191E:                             ; CODE XREF: sub_40184E+D9↓j
.text:0040191E                 cmp     [eax+0Ch], ecx
.text:00401921                 jz      short loc_40192E
.text:00401923                 mov     eax, [eax]
.text:00401925
.text:00401925 loc_401925:                             ; CODE XREF: sub_40184E+CE↑j
.text:00401925                 cmp     eax, edi
.text:00401927                 jnz     short loc_40191E
.text:00401929                 jmp     loc_4019DA
.text:0040192E ; ---------------------------------------------------------------------------
.text:0040192E
.text:0040192E loc_40192E:                             ; CODE XREF: sub_40184E+D3↑j
.text:0040192E                 cmp     byte ptr [eax+8], 7Fh
.text:00401932                 jz      loc_4019DA
.text:00401938
.text:00401938 loc_401938:                             ; CODE XREF: sub_40184E+BD↑j
.text:00401938                 cmp     [ebp+var_58], 0
.text:0040193C                 jz      short loc_401951
.text:0040193E                 lea     ecx, [esi+18h]
.text:00401941                 lea     edx, [ebp+var_5C]
.text:00401944                 call    sub_4034D0
.text:00401949                 test    eax, eax
.text:0040194B                 jz      loc_4019DA
.text:00401951
.text:00401951 loc_401951:                             ; CODE XREF: sub_40184E+EE↑j
.text:00401951                 cmp     [ebp+arg_0], 0
.text:00401955                 jz      short loc_40195F
.text:00401957                 mov     eax, [ebp+var_54]
.text:0040195A                 cmp     eax, [esi+8]
.text:0040195D                 jnz     short loc_4019DA
.text:0040195F
.text:0040195F loc_40195F:                             ; CODE XREF: sub_40184E+107↑j
.text:0040195F                 mov     eax, [ebp+var_60]
.text:00401962                 cmp     eax, [esi+8]
.text:00401965                 jz      short loc_4019CF
.text:00401967                 mov     ecx, [esi+8]
.text:0040196A                 or      edx, 0FFFFFFFFh
.text:0040196D                 mov     eax, [edi]
.text:0040196F                 mov     [ebp+var_60], ecx
.text:00401972                 mov     [ebp+var_54], edx
.text:00401975                 jmp     short loc_401982
.text:00401977 ; ---------------------------------------------------------------------------
.text:00401977
.text:00401977 loc_401977:                             ; CODE XREF: sub_40184E+136↓j
.text:00401977                 cmp     ecx, [eax+0Ch]
.text:0040197A                 jz      loc_401A1E
.text:00401980                 mov     eax, [eax]
.text:00401982
.text:00401982 loc_401982:                             ; CODE XREF: sub_40184E+127↑j
.text:00401982                 cmp     eax, edi
.text:00401984                 jnz     short loc_401977
.text:00401986
.text:00401986 loc_401986:                             ; CODE XREF: sub_40184E+1D9↓j
.text:00401986                 xor     ecx, ecx
.text:00401988
.text:00401988 loc_401988:                             ; CODE XREF: sub_40184E+1E2↓j
.text:00401988                 push    edx
.text:00401989                 mov     eax, ecx
.text:0040198B                 shr     eax, 18h
.text:0040198E                 push    eax
.text:0040198F                 mov     eax, ecx
.text:00401991                 shr     eax, 10h
.text:00401994                 movzx   eax, al
.text:00401997                 push    eax
.text:00401998                 mov     eax, ecx
.text:0040199A                 shr     eax, 8
.text:0040199D                 movzx   eax, al
.text:004019A0                 push    eax
.text:004019A1                 movzx   eax, cl
.text:004019A4                 push    eax             ; ArgList
.text:004019A5                 push    offset aUUUU0xX ; "%u.%u.%u.%u --- 0x%x"
.text:004019AA                 lea     eax, [ebp+Buffer]
.text:004019AD                 push    40h ; '@'       ; int
.text:004019AF                 push    eax             ; Buffer
.text:004019B0                 call    ?StringCchPrintfA@@YAJPADIPBDZZ ; StringCchPrintfA(char *,uint,char const *,...)
.text:004019B5                 add     esp, 20h
.text:004019B8                 test    eax, eax
.text:004019BA                 js      short loc_4019CF
.text:004019BC                 lea     eax, [ebp+Buffer]
.text:004019BF                 push    eax             ; char
.text:004019C0                 push    2713h           ; dwMessageId
.text:004019C5                 push    1               ; int
.text:004019C7                 call    sub_4034F5
.text:004019CC                 add     esp, 0Ch
.text:004019CF
.text:004019CF loc_4019CF:                             ; CODE XREF: sub_40184E+117↑j
.text:004019CF                                         ; sub_40184E+16C↑j
.text:004019CF                 mov     ecx, esi
.text:004019D1                 mov     [ebp+var_49], 1
.text:004019D5                 call    sub_4020BF
.text:004019DA
.text:004019DA loc_4019DA:                             ; CODE XREF: sub_40184E+DB↑j
.text:004019DA                                         ; sub_40184E+E4↑j ...
.text:004019DA                 mov     al, [ebp+arg_4]
.text:004019DD
.text:004019DD loc_4019DD:                             ; CODE XREF: sub_40184E+C3↑j
.text:004019DD                 mov     esi, [esi]
.text:004019DF                 cmp     esi, ebx
.text:004019E1                 jnz     loc_401909
.text:004019E7
.text:004019E7 loc_4019E7:                             ; CODE XREF: sub_40184E+B2↑j
.text:004019E7                 mov     ecx, ebx        ; pMem
.text:004019E9                 call    sub_402752
.text:004019EE                 mov     ecx, edi        ; pMem
.text:004019F0                 call    sub_402752
.text:004019F5                 cmp     [ebp+var_49], 0
.text:004019F9                 jnz     short loc_401A09
.text:004019FB                 push    2722h           ; dwMessageId
.text:00401A00                 push    1               ; int
.text:00401A02                 call    sub_4034F5
.text:00401A07                 pop     ecx
.text:00401A08                 pop     ecx
.text:00401A09
.text:00401A09 loc_401A09:                             ; CODE XREF: sub_40184E+1AB↑j
.text:00401A09                 xor     eax, eax
.text:00401A0B
.text:00401A0B loc_401A0B:                             ; CODE XREF: sub_40184E+83↑j
.text:00401A0B                 mov     ecx, [ebp+var_4]
.text:00401A0E                 pop     edi
.text:00401A0F                 pop     esi
.text:00401A10                 xor     ecx, ebp        ; StackCookie
.text:00401A12                 pop     ebx
.text:00401A13                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text:00401A18                 mov     esp, ebp
.text:00401A1A                 pop     ebp
.text:00401A1B                 retn    8
.text:00401A1E ; ---------------------------------------------------------------------------
.text:00401A1E
.text:00401A1E loc_401A1E:                             ; CODE XREF: sub_40184E+12C↑j
.text:00401A1E                 mov     edx, [eax+0Ch]
.text:00401A21                 mov     [ebp+var_54], edx
.text:00401A24                 cmp     edx, 0FFFFFFFFh
.text:00401A27                 jz      loc_401986
.text:00401A2D                 mov     ecx, [eax+8]
.text:00401A30                 jmp     loc_401988
.text:00401A30 sub_40184E      endp
.text:00401A30
.text:00401A35
.text:00401A35 ; =============== S U B R O U T I N E =======================================
.text:00401A35
.text:00401A35 ; Attributes: bp-based frame
.text:00401A35
.text:00401A35 sub_401A35      proc near               ; CODE XREF: _main+1EA↑p
.text:00401A35
.text:00401A35 var_38          = dword ptr -38h
.text:00401A35 pMem            = dword ptr -34h
.text:00401A35 var_30          = byte ptr -30h
.text:00401A35 var_2C          = dword ptr -2Ch
.text:00401A35 var_20          = dword ptr -20h
.text:00401A35 var_1C          = dword ptr -1Ch
.text:00401A35 var_18          = dword ptr -18h
.text:00401A35 var_14          = dword ptr -14h
.text:00401A35 var_10          = dword ptr -10h
.text:00401A35 var_C           = dword ptr -0Ch
.text:00401A35 var_8           = dword ptr -8
.text:00401A35 var_4           = dword ptr -4
.text:00401A35
.text:00401A35                 mov     edi, edi
.text:00401A37                 push    ebp
.text:00401A38                 mov     ebp, esp
.text:00401A3A                 sub     esp, 3Ch
.text:00401A3D                 mov     eax, ___security_cookie
.text:00401A42                 xor     eax, ebp
.text:00401A44                 mov     [ebp+var_4], eax
.text:00401A47                 or      [ebp+var_C], 0FFFFFFFFh
.text:00401A4B                 lea     eax, [ebp+var_38]
.text:00401A4E                 push    ebx
.text:00401A4F                 push    esi
.text:00401A50                 xor     ebx, ebx
.text:00401A52                 mov     [ebp+var_20], eax
.text:00401A55                 xor     eax, eax
.text:00401A57                 mov     esi, ecx
.text:00401A59                 inc     ebx
.text:00401A5A                 mov     [ebp+var_14], eax
.text:00401A5D                 mov     [ebp+var_1C], ebx
.text:00401A60                 mov     [ebp+var_18], eax
.text:00401A63                 mov     [ebp+var_10], eax
.text:00401A66                 push    edi             ; char
.text:00401A67                 mov     edi, edx
.text:00401A69                 test    esi, esi
.text:00401A6B                 jz      short loc_401AA7
.text:00401A6D                 cmp     byte ptr [esi], 2Ah ; '*'
.text:00401A70                 jnz     short loc_401A7A
.text:00401A72                 movzx   eax, byte ptr [esi+1]
.text:00401A76                 test    al, al
.text:00401A78                 jz      short loc_401AA7
.text:00401A7A
.text:00401A7A loc_401A7A:                             ; CODE XREF: sub_401A35+3B↑j
.text:00401A7A                 lea     edx, [ebp+var_8]
.text:00401A7D                 call    sub_4021BA
.text:00401A82                 mov     [ebp+var_10], eax
.text:00401A85                 cmp     [ebp+var_8], ebx
.text:00401A88                 jz      short loc_401AA7
.text:00401A8A                 push    esi
.text:00401A8B                 push    dword_404BF0    ; char
.text:00401A91                 push    2711h           ; dwMessageId
.text:00401A96
.text:00401A96 loc_401A96:                             ; CODE XREF: sub_401A35+AC↓j
.text:00401A96                 push    2               ; int
.text:00401A98                 call    sub_4034F5
.text:00401A9D                 add     esp, 10h
.text:00401AA0                 push    ebx             ; Code
.text:00401AA1
.text:00401AA1 loc_401AA1:                             ; CODE XREF: sub_401A35+1BC↓j
.text:00401AA1                 call    ds:exit
.text:00401AA7 ; ---------------------------------------------------------------------------
.text:00401AA7
.text:00401AA7 loc_401AA7:                             ; CODE XREF: sub_401A35+36↑j
.text:00401AA7                                         ; sub_401A35+43↑j ...
.text:00401AA7                 test    edi, edi
.text:00401AA9                 jz      short loc_401AEA
.text:00401AAB                 push    2
.text:00401AAD                 lea     edx, [ebp+var_8]
.text:00401AB0                 pop     ecx
.text:00401AB1                 call    sub_402666
.text:00401AB6                 mov     esi, eax
.text:00401AB8                 test    esi, esi
.text:00401ABA                 jnz     short loc_401AC4
.text:00401ABC
.text:00401ABC loc_401ABC:                             ; CODE XREF: sub_401A35+C4↓j
.text:00401ABC                 mov     eax, [ebp+var_8]
.text:00401ABF                 jmp     loc_401BC2
.text:00401AC4 ; ---------------------------------------------------------------------------
.text:00401AC4
.text:00401AC4 loc_401AC4:                             ; CODE XREF: sub_401A35+85↑j
.text:00401AC4                 mov     edx, edi
.text:00401AC6                 mov     ecx, esi
.text:00401AC8                 call    sub_4017EF
.text:00401ACD                 mov     [ebp+var_C], eax
.text:00401AD0                 cmp     eax, 0FFFFFFFFh
.text:00401AD3                 jnz     short loc_401AE3
.text:00401AD5                 push    edi
.text:00401AD6                 push    dword_404BF0
.text:00401ADC                 push    2712h
.text:00401AE1                 jmp     short loc_401A96
.text:00401AE3 ; ---------------------------------------------------------------------------
.text:00401AE3
.text:00401AE3 loc_401AE3:                             ; CODE XREF: sub_401A35+9E↑j
.text:00401AE3                 mov     ecx, esi        ; pMem
.text:00401AE5                 call    sub_402752
.text:00401AEA
.text:00401AEA loc_401AEA:                             ; CODE XREF: sub_401A35+74↑j
.text:00401AEA                 push    4
.text:00401AEC                 lea     edx, [ebp+var_8]
.text:00401AEF                 pop     ecx
.text:00401AF0                 call    sub_402666
.text:00401AF5                 mov     ebx, eax
.text:00401AF7                 test    ebx, ebx
.text:00401AF9                 jz      short loc_401ABC
.text:00401AFB                 mov     edi, [ebx]
.text:00401AFD                 xor     esi, esi
.text:00401AFF                 cmp     edi, ebx
.text:00401B01                 jz      loc_401BA7
.text:00401B07                 mov     eax, [ebp+var_C]
.text:00401B0A
.text:00401B0A loc_401B0A:                             ; CODE XREF: sub_401A35+16C↓j
.text:00401B0A                 cmp     eax, 0FFFFFFFFh
.text:00401B0D                 jz      short loc_401B18
.text:00401B0F                 cmp     eax, [edi+8]
.text:00401B12                 jnz     loc_401B9D
.text:00401B18
.text:00401B18 loc_401B18:                             ; CODE XREF: sub_401A35+D8↑j
.text:00401B18                 cmp     [ebp+var_10], 0
.text:00401B1C                 jz      short loc_401B2D
.text:00401B1E                 lea     edx, [edi+18h]
.text:00401B21                 lea     ecx, [ebp+var_10]
.text:00401B24                 call    sub_4034D0
.text:00401B29                 test    eax, eax
.text:00401B2B                 jz      short loc_401B9A
.text:00401B2D
.text:00401B2D loc_401B2D:                             ; CODE XREF: sub_401A35+E7↑j
.text:00401B2D                 push    0C8h ; 'È'      ; nBytes
.text:00401B32                 call    ds:SnmpUtilMemAlloc
.text:00401B38                 test    eax, eax
.text:00401B3A                 jz      loc_401BDA
.text:00401B40                 lea     ecx, [edi+18h]
.text:00401B43                 mov     [ebp+pMem], eax
.text:00401B46                 push    ecx
.text:00401B47                 mov     [ebp+var_38], 0Fh
.text:00401B4E                 mov     ecx, eax
.text:00401B50                 push    dword ptr [edi+8]
.text:00401B53                 push    4
.text:00401B55                 pop     edx
.text:00401B56                 call    sub_40177C
.text:00401B5B                 mov     esi, dword_404BEC
.text:00401B61                 lea     eax, [ebp+var_18]
.text:00401B64                 push    eax
.text:00401B65                 lea     eax, [ebp+var_14]
.text:00401B68                 mov     [ebp+var_30], 2
.text:00401B6C                 push    eax
.text:00401B6D                 lea     eax, [ebp+var_20]
.text:00401B70                 mov     [ebp+var_2C], 2
.text:00401B77                 push    eax
.text:00401B78                 push    0A3h ; '£'
.text:00401B7D                 mov     ecx, esi
.text:00401B7F                 call    ds:___guard_check_icall_fptr ; _guard_check_icall_nop(x)
.text:00401B85                 call    esi ; dword_404BEC
.text:00401B87                 push    [ebp+pMem]      ; pMem
.text:00401B8A                 call    ds:SnmpUtilMemFree
.text:00401B90                 mov     ecx, [ebp+var_14]
.text:00401B93                 test    ecx, ecx
.text:00401B95                 jnz     short loc_401BD3
.text:00401B97                 xor     esi, esi
.text:00401B99                 inc     esi
.text:00401B9A
.text:00401B9A loc_401B9A:                             ; CODE XREF: sub_401A35+F6↑j
.text:00401B9A                 mov     eax, [ebp+var_C]
.text:00401B9D
.text:00401B9D loc_401B9D:                             ; CODE XREF: sub_401A35+DD↑j
.text:00401B9D                 mov     edi, [edi]
.text:00401B9F                 cmp     edi, ebx
.text:00401BA1                 jnz     loc_401B0A
.text:00401BA7
.text:00401BA7 loc_401BA7:                             ; CODE XREF: sub_401A35+CC↑j
.text:00401BA7                 mov     ecx, ebx        ; pMem
.text:00401BA9                 call    sub_402752
.text:00401BAE                 test    esi, esi
.text:00401BB0                 jnz     short loc_401BC0
.text:00401BB2                 push    271Ch           ; dwMessageId
.text:00401BB7                 push    2               ; int
.text:00401BB9                 call    sub_4034F5
.text:00401BBE                 pop     ecx
.text:00401BBF                 pop     ecx
.text:00401BC0
.text:00401BC0 loc_401BC0:                             ; CODE XREF: sub_401A35+17B↑j
.text:00401BC0                 xor     eax, eax
.text:00401BC2
.text:00401BC2 loc_401BC2:                             ; CODE XREF: sub_401A35+8A↑j
.text:00401BC2                                         ; sub_401A35+1A3↓j
.text:00401BC2                 mov     ecx, [ebp+var_4]
.text:00401BC5                 pop     edi
.text:00401BC6                 pop     esi
.text:00401BC7                 xor     ecx, ebp        ; StackCookie
.text:00401BC9                 pop     ebx
.text:00401BCA                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text:00401BCF                 mov     esp, ebp
.text:00401BD1                 pop     ebp
.text:00401BD2                 retn
.text:00401BD3 ; ---------------------------------------------------------------------------
.text:00401BD3
.text:00401BD3 loc_401BD3:                             ; CODE XREF: sub_401A35+160↑j
.text:00401BD3                 call    sub_402785
.text:00401BD8                 jmp     short loc_401BC2
.text:00401BDA ; ---------------------------------------------------------------------------
.text:00401BDA
.text:00401BDA loc_401BDA:                             ; CODE XREF: sub_401A35+105↑j
.text:00401BDA                 push    dword_404BF0    ; char
.text:00401BE0                 push    2714h           ; dwMessageId
.text:00401BE5                 push    2               ; int
.text:00401BE7                 call    sub_4034F5
.text:00401BEC                 add     esp, 0Ch
.text:00401BEF                 push    1
.text:00401BF1                 jmp     loc_401AA1
.text:00401BF1 sub_401A35      endp
.text:00401BF1
.text:00401BF6
.text:00401BF6 ; =============== S U B R O U T I N E =======================================
.text:00401BF6
.text:00401BF6 ; Attributes: bp-based frame info_from_lumina
.text:00401BF6
.text:00401BF6 ; __stdcall AddArp(x, x, x)
.text:00401BF6 _AddArp@12      proc near               ; CODE XREF: _main+21A↑p
.text:00401BF6
.text:00401BF6 var_98          = dword ptr -98h
.text:00401BF6 var_94          = dword ptr -94h
.text:00401BF6 var_90          = dword ptr -90h
.text:00401BF6 Buffer          = dword ptr -8Ch
.text:00401BF6 var_88          = dword ptr -88h
.text:00401BF6 var_84          = dword ptr -84h
.text:00401BF6 var_80          = dword ptr -80h
.text:00401BF6 var_7C          = dword ptr -7Ch
.text:00401BF6 var_78          = dword ptr -78h
.text:00401BF6 var_74          = dword ptr -74h
.text:00401BF6 pMem            = dword ptr -70h
.text:00401BF6 var_6C          = byte ptr -6Ch
.text:00401BF6 var_68          = dword ptr -68h
.text:00401BF6 var_5C          = dword ptr -5Ch
.text:00401BF6 var_58          = dword ptr -58h
.text:00401BF6 var_54          = byte ptr -54h
.text:00401BF6 var_50          = dword ptr -50h
.text:00401BF6 var_4C          = dword ptr -4Ch
.text:00401BF6 var_48          = dword ptr -48h
.text:00401BF6 var_44          = dword ptr -44h
.text:00401BF6 var_40          = dword ptr -40h
.text:00401BF6 var_3C          = byte ptr -3Ch
.text:00401BF6 var_38          = dword ptr -38h
.text:00401BF6 var_34          = dword ptr -34h
.text:00401BF6 var_30          = dword ptr -30h
.text:00401BF6 var_2C          = dword ptr -2Ch
.text:00401BF6 var_28          = dword ptr -28h
.text:00401BF6 var_24          = byte ptr -24h
.text:00401BF6 var_20          = dword ptr -20h
.text:00401BF6 var_10          = dword ptr -10h
.text:00401BF6 var_C           = word ptr -0Ch
.text:00401BF6 var_8           = dword ptr -8
.text:00401BF6 arg_0           = dword ptr  8
.text:00401BF6
.text:00401BF6                 mov     edi, edi
.text:00401BF8                 push    ebp
.text:00401BF9                 mov     ebp, esp
.text:00401BFB                 sub     esp, 98h
.text:00401C01                 mov     eax, ___security_cookie
.text:00401C06                 xor     eax, ebp
.text:00401C08                 mov     [ebp+var_8], eax
.text:00401C0B                 push    ebx
.text:00401C0C                 mov     eax, ecx
.text:00401C0E                 mov     [ebp+Buffer], edx
.text:00401C14                 push    esi
.text:00401C15                 mov     esi, [ebp+arg_0]
.text:00401C18                 lea     ecx, [ebp+var_74]
.text:00401C1B                 push    edi
.text:00401C1C                 xor     edi, edi
.text:00401C1E                 mov     [ebp+var_98], ecx
.text:00401C24                 or      ebx, 0FFFFFFFFh
.text:00401C27                 mov     [ebp+var_88], eax
.text:00401C2D                 lea     edx, [ebp+var_78]
.text:00401C30                 mov     [ebp+var_94], 4
.text:00401C3A                 mov     ecx, eax
.text:00401C3C                 mov     [ebp+var_7C], edi
.text:00401C3F                 mov     [ebp+var_90], edi
.text:00401C45                 mov     [ebp+var_78], edi
.text:00401C48                 mov     [ebp+var_10], edi
.text:00401C4B                 mov     [ebp+var_C], di
.text:00401C4F                 mov     [ebp+var_84], ebx
.text:00401C55                 call    sub_4021BA
.text:00401C5A                 cmp     [ebp+var_78], 1
.text:00401C5E                 mov     [ebp+var_80], eax
.text:00401C61                 jz      short loc_401C86
.text:00401C63                 push    [ebp+var_88]
.text:00401C69
.text:00401C69 loc_401C69:                             ; CODE XREF: AddArp(x,x,x)+FB↓j
.text:00401C69                 push    dword_404BF0    ; char
.text:00401C6F                 push    2711h           ; dwMessageId
.text:00401C74
.text:00401C74 loc_401C74:                             ; CODE XREF: AddArp(x,x,x)+B6↓j
.text:00401C74                 push    2               ; int
.text:00401C76                 call    sub_4034F5
.text:00401C7B                 add     esp, 10h
.text:00401C7E
.text:00401C7E loc_401C7E:                             ; CODE XREF: AddArp(x,x,x)+124↓j
.text:00401C7E                 push    1               ; Code
.text:00401C80                 call    ds:exit
.text:00401C86 ; ---------------------------------------------------------------------------
.text:00401C86
.text:00401C86 loc_401C86:                             ; CODE XREF: AddArp(x,x,x)+6B↑j
.text:00401C86                 mov     ecx, [ebp+Buffer] ; Buffer
.text:00401C8C                 lea     edx, [ebp+var_10]
.text:00401C8F                 call    sub_4023C7
.text:00401C94                 mov     [ebp+var_78], eax
.text:00401C97                 test    eax, eax
.text:00401C99                 jz      short loc_401CAE
.text:00401C9B                 push    [ebp+Buffer]
.text:00401CA1                 push    dword_404BF0
.text:00401CA7                 push    2712h
.text:00401CAC                 jmp     short loc_401C74
.text:00401CAE ; ---------------------------------------------------------------------------
.text:00401CAE
.text:00401CAE loc_401CAE:                             ; CODE XREF: AddArp(x,x,x)+A3↑j
.text:00401CAE                 test    esi, esi
.text:00401CB0                 jz      short loc_401CF6
.text:00401CB2                 push    2
.text:00401CB4                 lea     edx, [ebp+var_78]
.text:00401CB7                 pop     ecx
.text:00401CB8                 call    sub_402666
.text:00401CBD                 mov     [ebp+var_88], eax
.text:00401CC3                 test    eax, eax
.text:00401CC5                 jnz     short loc_401CCF
.text:00401CC7                 mov     eax, [ebp+var_78]
.text:00401CCA                 jmp     loc_401E4B
.text:00401CCF ; ---------------------------------------------------------------------------
.text:00401CCF
.text:00401CCF loc_401CCF:                             ; CODE XREF: AddArp(x,x,x)+CF↑j
.text:00401CCF                 mov     edx, esi
.text:00401CD1                 mov     ecx, eax
.text:00401CD3                 call    sub_4017EF
.text:00401CD8                 mov     ecx, [ebp+var_88] ; pMem
.text:00401CDE                 mov     ebx, eax
.text:00401CE0                 mov     [ebp+var_84], ebx
.text:00401CE6                 call    sub_402752
.text:00401CEB                 cmp     ebx, 0FFFFFFFFh
.text:00401CEE                 jnz     short loc_401CF6
.text:00401CF0                 push    esi
.text:00401CF1                 jmp     loc_401C69
.text:00401CF6 ; ---------------------------------------------------------------------------
.text:00401CF6
.text:00401CF6 loc_401CF6:                             ; CODE XREF: AddArp(x,x,x)+BA↑j
.text:00401CF6                                         ; AddArp(x,x,x)+F8↑j
.text:00401CF6                 push    0C8h ; 'È'      ; nBytes
.text:00401CFB                 call    ds:SnmpUtilMemAlloc
.text:00401D01                 test    eax, eax
.text:00401D03                 jnz     short loc_401D1F
.text:00401D05
.text:00401D05 loc_401D05:                             ; CODE XREF: AddArp(x,x,x)+156↓j
.text:00401D05                                         ; AddArp(x,x,x)+192↓j ...
.text:00401D05                 push    dword_404BF0    ; char
.text:00401D0B                 push    2714h           ; dwMessageId
.text:00401D10                 push    2               ; int
.text:00401D12                 call    sub_4034F5
.text:00401D17                 add     esp, 0Ch
.text:00401D1A                 jmp     loc_401C7E
.text:00401D1F ; ---------------------------------------------------------------------------
.text:00401D1F
.text:00401D1F loc_401D1F:                             ; CODE XREF: AddArp(x,x,x)+10D↑j
.text:00401D1F                 lea     ecx, [ebp+var_80]
.text:00401D22                 mov     [ebp+pMem], eax
.text:00401D25                 push    ecx
.text:00401D26                 xor     edx, edx
.text:00401D28                 mov     [ebp+var_74], 0Fh
.text:00401D2F                 push    ebx
.text:00401D30                 inc     edx
.text:00401D31                 mov     ecx, eax
.text:00401D33                 call    sub_40177C
.text:00401D38                 push    0C8h ; 'È'      ; nBytes
.text:00401D3D                 mov     [ebp+var_6C], 2
.text:00401D41                 mov     [ebp+var_68], ebx
.text:00401D44                 call    ds:SnmpUtilMemAlloc
.text:00401D4A                 test    eax, eax
.text:00401D4C                 jz      short loc_401D05
.text:00401D4E                 lea     ecx, [ebp+var_80]
.text:00401D51                 mov     [ebp+var_58], eax
.text:00401D54                 push    ecx
.text:00401D55                 push    ebx
.text:00401D56                 push    2
.text:00401D58                 pop     edx
.text:00401D59                 mov     ecx, eax
.text:00401D5B                 mov     [ebp+var_5C], 0Fh
.text:00401D62                 call    sub_40177C
.text:00401D67                 lea     eax, [ebp+var_10]
.text:00401D6A                 mov     [ebp+var_54], 4
.text:00401D6E                 push    0C8h ; 'È'      ; nBytes
.text:00401D73                 mov     [ebp+var_50], eax
.text:00401D76                 mov     [ebp+var_4C], 6
.text:00401D7D                 mov     [ebp+var_48], edi
.text:00401D80                 call    ds:SnmpUtilMemAlloc
.text:00401D86                 test    eax, eax
.text:00401D88                 jz      loc_401D05
.text:00401D8E                 lea     ecx, [ebp+var_80]
.text:00401D91                 mov     [ebp+var_40], eax
.text:00401D94                 push    ecx
.text:00401D95                 push    ebx
.text:00401D96                 push    3
.text:00401D98                 pop     edx
.text:00401D99                 mov     ecx, eax
.text:00401D9B                 mov     [ebp+var_44], 0Fh
.text:00401DA2                 call    sub_40177C
.text:00401DA7                 lea     eax, [ebp+var_80]
.text:00401DAA                 mov     [ebp+var_3C], 40h ; '@'
.text:00401DAE                 push    0C8h ; 'È'      ; nBytes
.text:00401DB3                 mov     [ebp+var_38], eax
.text:00401DB6                 mov     [ebp+var_34], 4
.text:00401DBD                 mov     [ebp+var_30], edi
.text:00401DC0                 call    ds:SnmpUtilMemAlloc
.text:00401DC6                 test    eax, eax
.text:00401DC8                 jz      loc_401D05
.text:00401DCE                 lea     ecx, [ebp+var_80]
.text:00401DD1                 mov     [ebp+var_28], eax
.text:00401DD4                 push    ecx
.text:00401DD5                 push    ebx
.text:00401DD6                 push    4
.text:00401DD8                 pop     edx
.text:00401DD9                 mov     ecx, eax
.text:00401DDB                 mov     [ebp+var_2C], 0Fh
.text:00401DE2                 call    sub_40177C
.text:00401DE7                 mov     [ebp+var_24], 2
.text:00401DEB                 push    edx
.text:00401DEC                 pop     eax
.text:00401DED                 mov     [ebp+var_20], eax
.text:00401DF0                 test    esi, esi
.text:00401DF2                 jz      short loc_401E5E
.text:00401DF4                 mov     esi, dword_404BEC
.text:00401DFA                 lea     eax, [ebp+var_90]
.text:00401E00                 push    eax
.text:00401E01                 lea     eax, [ebp+var_7C]
.text:00401E04                 mov     ecx, esi
.text:00401E06                 push    eax
.text:00401E07                 lea     eax, [ebp+var_98]
.text:00401E0D                 push    eax
.text:00401E0E                 push    0A3h ; '£'
.text:00401E13                 call    ds:___guard_check_icall_fptr ; _guard_check_icall_nop(x)
.text:00401E19                 call    esi ; dword_404BEC
.text:00401E1B
.text:00401E1B loc_401E1B:                             ; CODE XREF: AddArp(x,x,x)+4A2↓j
.text:00401E1B                                         ; AddArp(x,x,x)+4AC↓j
.text:00401E1B                 mov     esi, [ebp+var_78]
.text:00401E1E
.text:00401E1E loc_401E1E:                             ; CODE XREF: AddArp(x,x,x)+4B7↓j
.text:00401E1E                                         ; AddArp(x,x,x)+4C4↓j
.text:00401E1E                 push    [ebp+pMem]      ; pMem
.text:00401E21                 call    ds:SnmpUtilMemFree
.text:00401E27                 push    [ebp+var_58]    ; pMem
.text:00401E2A                 call    ds:SnmpUtilMemFree
.text:00401E30                 push    [ebp+var_40]    ; pMem
.text:00401E33                 call    ds:SnmpUtilMemFree
.text:00401E39                 push    [ebp+var_28]    ; pMem
.text:00401E3C                 call    ds:SnmpUtilMemFree
.text:00401E42                 mov     eax, [ebp+var_7C]
.text:00401E45                 test    eax, eax
.text:00401E47                 jnz     short loc_401E4B
.text:00401E49                 mov     eax, esi
.text:00401E4B
.text:00401E4B loc_401E4B:                             ; CODE XREF: AddArp(x,x,x)+D4↑j
.text:00401E4B                                         ; AddArp(x,x,x)+251↑j
.text:00401E4B                 mov     ecx, [ebp+var_8]
.text:00401E4E                 pop     edi
.text:00401E4F                 pop     esi
.text:00401E50                 xor     ecx, ebp        ; StackCookie
.text:00401E52                 pop     ebx
.text:00401E53                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text:00401E58                 mov     esp, ebp
.text:00401E5A                 pop     ebp
.text:00401E5B                 retn    4
.text:00401E5E ; ---------------------------------------------------------------------------
.text:00401E5E
.text:00401E5E loc_401E5E:                             ; CODE XREF: AddArp(x,x,x)+1FC↑j
.text:00401E5E                 lea     edx, [ebp+var_78]
.text:00401E61                 mov     ecx, eax
.text:00401E63                 call    sub_402666
.text:00401E68                 mov     [ebp+var_88], eax
.text:00401E6E                 test    eax, eax
.text:00401E70                 jz      loc_401F49
.text:00401E76                 mov     edx, [eax]
.text:00401E78                 mov     [ebp+Buffer], edx
.text:00401E7E                 cmp     edx, eax
.text:00401E80                 jz      loc_401F49
.text:00401E86                 mov     ecx, [ebp+var_80]
.text:00401E89                 or      ebx, 0FFFFFFFFh
.text:00401E8C                 mov     al, cl
.text:00401E8E                 and     al, 0C0h
.text:00401E90                 jz      short loc_401EBE
.text:00401E92                 cmp     al, 40h ; '@'
.text:00401E94                 jz      short loc_401EBE
.text:00401E96                 cmp     al, 80h ; '€'
.text:00401E98                 jnz     short loc_401EA1
.text:00401E9A                 mov     ebx, 0FFFFh
.text:00401E9F                 jmp     short loc_401EC3
.text:00401EA1 ; ---------------------------------------------------------------------------
.text:00401EA1
.text:00401EA1 loc_401EA1:                             ; CODE XREF: AddArp(x,x,x)+2A2↑j
.text:00401EA1                 cmp     al, 0C0h ; 'À'
.text:00401EA3                 jnz     short loc_401EC3
.text:00401EA5                 mov     al, cl
.text:00401EA7                 and     al, 30h
.text:00401EA9                 movzx   ebx, al
.text:00401EAC                 neg     ebx
.text:00401EAE                 sbb     ebx, ebx
.text:00401EB0                 and     ebx, 0FF000000h
.text:00401EB6                 add     ebx, 0FFFFFFh
.text:00401EBC                 jmp     short loc_401EC3
.text:00401EBE ; ---------------------------------------------------------------------------
.text:00401EBE
.text:00401EBE loc_401EBE:                             ; CODE XREF: AddArp(x,x,x)+29A↑j
.text:00401EBE                                         ; AddArp(x,x,x)+29E↑j
.text:00401EBE                 mov     ebx, 0FFh
.text:00401EC3
.text:00401EC3 loc_401EC3:                             ; CODE XREF: AddArp(x,x,x)+2A9↑j
.text:00401EC3                                         ; AddArp(x,x,x)+2AD↑j ...
.text:00401EC3                 mov     esi, [ebp+var_80]
.text:00401EC6
.text:00401EC6 loc_401EC6:                             ; CODE XREF: AddArp(x,x,x)+34B↓j
.text:00401EC6                 mov     ecx, [edx+18h]
.text:00401EC9                 mov     eax, ebx
.text:00401ECB                 and     ecx, ebx
.text:00401ECD                 and     eax, esi
.text:00401ECF                 cmp     ecx, eax
.text:00401ED1                 jnz     short loc_401F33
.text:00401ED3                 mov     eax, [ebp+pMem]
.text:00401ED6                 mov     ecx, [edx+8]
.text:00401ED9                 mov     [ebp+var_68], ecx
.text:00401EDC                 mov     esi, dword_404BEC
.text:00401EE2                 mov     [eax+28h], ecx
.text:00401EE5                 mov     eax, [ebp+var_58]
.text:00401EE8                 mov     ecx, [ebp+var_68]
.text:00401EEB                 mov     [eax+28h], ecx
.text:00401EEE                 mov     eax, [ebp+var_40]
.text:00401EF1                 mov     ecx, [ebp+var_68]
.text:00401EF4                 mov     [eax+28h], ecx
.text:00401EF7                 mov     ecx, [ebp+var_28]
.text:00401EFA                 mov     eax, [ebp+var_68]
.text:00401EFD                 mov     [ecx+28h], eax
.text:00401F00                 lea     eax, [ebp+var_90]
.text:00401F06                 push    eax
.text:00401F07                 lea     eax, [ebp+var_7C]
.text:00401F0A                 mov     ecx, esi
.text:00401F0C                 push    eax
.text:00401F0D                 lea     eax, [ebp+var_98]
.text:00401F13                 push    eax
.text:00401F14                 push    0A3h ; '£'
.text:00401F19                 call    ds:___guard_check_icall_fptr ; _guard_check_icall_nop(x)
.text:00401F1F                 call    esi ; dword_404BEC
.text:00401F21                 cmp     [ebp+var_7C], edi
.text:00401F24                 jz      loc_401FF4
.text:00401F2A                 mov     edx, [ebp+Buffer]
.text:00401F30                 mov     esi, [ebp+var_80]
.text:00401F33
.text:00401F33 loc_401F33:                             ; CODE XREF: AddArp(x,x,x)+2DB↑j
.text:00401F33                 mov     edx, [edx]
.text:00401F35                 mov     [ebp+Buffer], edx
.text:00401F3B                 cmp     edx, [ebp+var_88]
.text:00401F41                 jnz     short loc_401EC6
.text:00401F43                 mov     ebx, [ebp+var_84]
.text:00401F49
.text:00401F49 loc_401F49:                             ; CODE XREF: AddArp(x,x,x)+27A↑j
.text:00401F49                                         ; AddArp(x,x,x)+28A↑j ...
.text:00401F49                 cmp     ebx, 0FFFFFFFFh
.text:00401F4C                 jnz     loc_402079
.text:00401F52                 push    2
.text:00401F54                 lea     edx, [ebp+var_78]
.text:00401F57                 pop     ecx
.text:00401F58                 call    sub_402666
.text:00401F5D                 mov     edi, eax
.text:00401F5F                 test    edi, edi
.text:00401F61                 jz      loc_402079
.text:00401F67                 mov     edx, [edi]
.text:00401F69                 mov     [ebp+var_84], edx
.text:00401F6F                 cmp     edx, edi
.text:00401F71                 jz      loc_402079
.text:00401F77
.text:00401F77 loc_401F77:                             ; CODE XREF: AddArp(x,x,x)+3FA↓j
.text:00401F77                 cmp     dword ptr [edx+8], 0
.text:00401F7B                 jz      short loc_401FE6
.text:00401F7D                 mov     ecx, [edx+10h]
.text:00401F80                 mov     eax, ecx
.text:00401F82                 and     eax, [edx+8]
.text:00401F85                 and     ecx, [ebp+var_80]
.text:00401F88                 cmp     eax, ecx
.text:00401F8A                 jnz     short loc_401FE6
.text:00401F8C                 mov     eax, [ebp+pMem]
.text:00401F8F                 mov     ecx, [edx+0Ch]
.text:00401F92                 mov     [ebp+var_68], ecx
.text:00401F95                 mov     esi, dword_404BEC
.text:00401F9B                 mov     [eax+28h], ecx
.text:00401F9E                 mov     eax, [ebp+var_58]
.text:00401FA1                 mov     ecx, [ebp+var_68]
.text:00401FA4                 mov     [eax+28h], ecx
.text:00401FA7                 mov     eax, [ebp+var_40]
.text:00401FAA                 mov     ecx, [ebp+var_68]
.text:00401FAD                 mov     [eax+28h], ecx
.text:00401FB0                 mov     ecx, [ebp+var_28]
.text:00401FB3                 mov     eax, [ebp+var_68]
.text:00401FB6                 mov     [ecx+28h], eax
.text:00401FB9                 lea     eax, [ebp+var_90]
.text:00401FBF                 push    eax
.text:00401FC0                 lea     eax, [ebp+var_7C]
.text:00401FC3                 mov     ecx, esi
.text:00401FC5                 push    eax
.text:00401FC6                 lea     eax, [ebp+var_98]
.text:00401FCC                 push    eax
.text:00401FCD                 push    0A3h ; '£'
.text:00401FD2                 call    ds:___guard_check_icall_fptr ; _guard_check_icall_nop(x)
.text:00401FD8                 call    esi ; dword_404BEC
.text:00401FDA                 cmp     [ebp+var_7C], 0
.text:00401FDE                 jz      short loc_401FFC
.text:00401FE0                 mov     edx, [ebp+var_84]
.text:00401FE6
.text:00401FE6 loc_401FE6:                             ; CODE XREF: AddArp(x,x,x)+385↑j
.text:00401FE6                                         ; AddArp(x,x,x)+394↑j
.text:00401FE6                 mov     edx, [edx]
.text:00401FE8                 mov     [ebp+var_84], edx
.text:00401FEE                 cmp     edx, edi
.text:00401FF0                 jnz     short loc_401F77
.text:00401FF2                 jmp     short loc_402004
.text:00401FF4 ; ---------------------------------------------------------------------------
.text:00401FF4
.text:00401FF4 loc_401FF4:                             ; CODE XREF: AddArp(x,x,x)+32E↑j
.text:00401FF4                 mov     ebx, [ebp+var_68]
.text:00401FF7                 jmp     loc_401F49
.text:00401FFC ; ---------------------------------------------------------------------------
.text:00401FFC
.text:00401FFC loc_401FFC:                             ; CODE XREF: AddArp(x,x,x)+3E8↑j
.text:00401FFC                 mov     ebx, [ebp+var_68]
.text:00401FFF                 cmp     ebx, 0FFFFFFFFh
.text:00402002                 jnz     short loc_402079
.text:00402004
.text:00402004 loc_402004:                             ; CODE XREF: AddArp(x,x,x)+3FC↑j
.text:00402004                 mov     eax, [edi]
.text:00402006                 jmp     short loc_40206A
.text:00402008 ; ---------------------------------------------------------------------------
.text:00402008
.text:00402008 loc_402008:                             ; CODE XREF: AddArp(x,x,x)+47C↓j
.text:00402008                 cmp     byte ptr [eax+8], 7Fh
.text:0040200C                 jz      short loc_402068
.text:0040200E                 mov     ecx, [eax+0Ch]
.text:00402011                 mov     eax, [ebp+pMem]
.text:00402014                 mov     [ebp+var_68], ecx
.text:00402017                 mov     esi, dword_404BEC
.text:0040201D                 mov     [eax+28h], ecx
.text:00402020                 mov     eax, [ebp+var_58]
.text:00402023                 mov     ecx, [ebp+var_68]
.text:00402026                 mov     [eax+28h], ecx
.text:00402029                 mov     eax, [ebp+var_40]
.text:0040202C                 mov     ecx, [ebp+var_68]
.text:0040202F                 mov     [eax+28h], ecx
.text:00402032                 mov     ecx, [ebp+var_28]
.text:00402035                 mov     eax, [ebp+var_68]
.text:00402038                 mov     [ecx+28h], eax
.text:0040203B                 lea     eax, [ebp+var_90]
.text:00402041                 push    eax
.text:00402042                 lea     eax, [ebp+var_7C]
.text:00402045                 mov     ecx, esi
.text:00402047                 push    eax
.text:00402048                 lea     eax, [ebp+var_98]
.text:0040204E                 push    eax
.text:0040204F                 push    0A3h ; '£'
.text:00402054                 call    ds:___guard_check_icall_fptr ; _guard_check_icall_nop(x)
.text:0040205A                 call    esi ; dword_404BEC
.text:0040205C                 cmp     [ebp+var_7C], 0
.text:00402060                 jz      short loc_402076
.text:00402062                 mov     eax, [ebp+var_84]
.text:00402068
.text:00402068 loc_402068:                             ; CODE XREF: AddArp(x,x,x)+416↑j
.text:00402068                 mov     eax, [eax]
.text:0040206A
.text:0040206A loc_40206A:                             ; CODE XREF: AddArp(x,x,x)+410↑j
.text:0040206A                 mov     [ebp+var_84], eax
.text:00402070                 cmp     eax, edi
.text:00402072                 jnz     short loc_402008
.text:00402074                 jmp     short loc_402079
.text:00402076 ; ---------------------------------------------------------------------------
.text:00402076
.text:00402076 loc_402076:                             ; CODE XREF: AddArp(x,x,x)+46A↑j
.text:00402076                 mov     ebx, [ebp+var_68]
.text:00402079
.text:00402079 loc_402079:                             ; CODE XREF: AddArp(x,x,x)+356↑j
.text:00402079                                         ; AddArp(x,x,x)+36B↑j ...
.text:00402079                 mov     eax, [ebp+var_88]
.text:0040207F                 test    eax, eax
.text:00402081                 jz      short loc_40208A
.text:00402083                 mov     ecx, eax        ; pMem
.text:00402085                 call    sub_402752
.text:0040208A
.text:0040208A loc_40208A:                             ; CODE XREF: AddArp(x,x,x)+48B↑j
.text:0040208A                 test    edi, edi
.text:0040208C                 jz      short loc_402095
.text:0040208E                 mov     ecx, edi        ; pMem
.text:00402090                 call    sub_402752
.text:00402095
.text:00402095 loc_402095:                             ; CODE XREF: AddArp(x,x,x)+496↑j
.text:00402095                 cmp     ebx, 0FFFFFFFFh
.text:00402098                 jnz     loc_401E1B
.text:0040209E                 cmp     [ebp+var_7C], 0
.text:004020A2                 jnz     loc_401E1B
.text:004020A8                 mov     esi, [ebp+var_78]
.text:004020AB                 test    esi, esi
.text:004020AD                 jnz     loc_401E1E
.text:004020B3                 mov     [ebp+var_7C], 5
.text:004020BA                 jmp     loc_401E1E
.text:004020BA _AddArp@12      endp
.text:004020BA
.text:004020BF
.text:004020BF ; =============== S U B R O U T I N E =======================================
.text:004020BF
.text:004020BF ; Attributes: bp-based frame
.text:004020BF
.text:004020BF sub_4020BF      proc near               ; CODE XREF: sub_40184E+187↑p
.text:004020BF
.text:004020BF var_74          = dword ptr -74h
.text:004020BF S               = word ptr -70h
.text:004020BF Buffer          = word ptr -44h
.text:004020BF var_40          = word ptr -40h
.text:004020BF var_4           = dword ptr -4
.text:004020BF
.text:004020BF                 mov     edi, edi
.text:004020C1                 push    ebp
.text:004020C2                 mov     ebp, esp
.text:004020C4                 sub     esp, 74h
.text:004020C7                 mov     eax, ___security_cookie
.text:004020CC                 xor     eax, ebp
.text:004020CE                 mov     [ebp+var_4], eax
.text:004020D1                 push    ebx
.text:004020D2                 push    esi
.text:004020D3                 mov     esi, ecx
.text:004020D5                 lea     eax, [ebp+S]
.text:004020D8                 push    edi             ; char
.text:004020D9                 push    eax             ; S
.text:004020DA                 lea     eax, [esi+18h]
.text:004020DD                 push    eax             ; Addr
.text:004020DE                 call    ds:RtlIpv4AddressToStringW
.text:004020E4                 cmp     dword ptr [esi+0Ch], 0
.text:004020E8                 jz      short loc_402144
.text:004020EA                 movzx   eax, byte ptr [esi+10h]
.text:004020EE                 push    eax             ; Args
.text:004020EF                 push    offset a02x     ; "%02x"
.text:004020F4                 lea     eax, [ebp+Buffer]
.text:004020F7                 push    20h ; ' '       ; int
.text:004020F9                 push    eax             ; Buffer
.text:004020FA                 call    ?StringCchPrintfW@@YAJPAGIPBGZZ_0 ; StringCchPrintfW(ushort *,uint,ushort const *,...)
.text:004020FF                 add     esp, 10h
.text:00402102                 test    eax, eax
.text:00402104                 js      short loc_402144
.text:00402106                 xor     edi, edi
.text:00402108                 lea     ebx, [ebp+var_40]
.text:0040210B                 push    1Eh
.text:0040210D                 inc     edi
.text:0040210E                 pop     ecx
.text:0040210F                 mov     [ebp+var_74], ecx
.text:00402112                 cmp     [esi+0Ch], edi
.text:00402115                 jbe     short loc_40214A
.text:00402117
.text:00402117 loc_402117:                             ; CODE XREF: sub_4020BF+81↓j
.text:00402117                 movzx   eax, byte ptr [esi+edi+10h]
.text:0040211C                 push    eax             ; Args
.text:0040211D                 push    offset a02x_0   ; "-%02x"
.text:00402122                 push    ecx             ; int
.text:00402123                 push    ebx             ; Buffer
.text:00402124                 call    ?StringCchPrintfW@@YAJPAGIPBGZZ_0 ; StringCchPrintfW(ushort *,uint,ushort const *,...)
.text:00402129                 add     esp, 10h
.text:0040212C                 test    eax, eax
.text:0040212E                 js      short loc_402144
.text:00402130                 mov     ecx, [ebp+var_74]
.text:00402133                 add     ebx, 6
.text:00402136                 sub     ecx, 3
.text:00402139                 inc     edi
.text:0040213A                 mov     [ebp+var_74], ecx
.text:0040213D                 cmp     edi, [esi+0Ch]
.text:00402140                 jb      short loc_402117
.text:00402142                 jmp     short loc_40214A
.text:00402144 ; ---------------------------------------------------------------------------
.text:00402144
.text:00402144 loc_402144:                             ; CODE XREF: sub_4020BF+29↑j
.text:00402144                                         ; sub_4020BF+45↑j ...
.text:00402144                 xor     eax, eax
.text:00402146                 mov     [ebp+Buffer], ax
.text:0040214A
.text:0040214A loc_40214A:                             ; CODE XREF: sub_4020BF+56↑j
.text:0040214A                                         ; sub_4020BF+83↑j
.text:0040214A                 mov     eax, [esi+1Ch]
.text:0040214D                 sub     eax, 1
.text:00402150                 jz      short loc_40217D
.text:00402152                 sub     eax, 1
.text:00402155                 jz      short loc_402176
.text:00402157                 sub     eax, 1
.text:0040215A                 jz      short loc_40216F
.text:0040215C                 sub     eax, 1
.text:0040215F                 jz      short loc_402168
.text:00402161                 push    2723h
.text:00402166                 jmp     short loc_402182
.text:00402168 ; ---------------------------------------------------------------------------
.text:00402168
.text:00402168 loc_402168:                             ; CODE XREF: sub_4020BF+A0↑j
.text:00402168                 push    2718h
.text:0040216D                 jmp     short loc_402182
.text:0040216F ; ---------------------------------------------------------------------------
.text:0040216F
.text:0040216F loc_40216F:                             ; CODE XREF: sub_4020BF+9B↑j
.text:0040216F                 push    2717h
.text:00402174                 jmp     short loc_402182
.text:00402176 ; ---------------------------------------------------------------------------
.text:00402176
.text:00402176 loc_402176:                             ; CODE XREF: sub_4020BF+96↑j
.text:00402176                 push    2716h
.text:0040217B                 jmp     short loc_402182
.text:0040217D ; ---------------------------------------------------------------------------
.text:0040217D
.text:0040217D loc_40217D:                             ; CODE XREF: sub_4020BF+91↑j
.text:0040217D                 push    2715h           ; dwMessageId
.text:00402182
.text:00402182 loc_402182:                             ; CODE XREF: sub_4020BF+A7↑j
.text:00402182                                         ; sub_4020BF+AE↑j ...
.text:00402182                 call    sub_40360B
.text:00402187                 pop     ecx
.text:00402188                 mov     esi, eax
.text:0040218A                 lea     eax, [ebp+Buffer]
.text:0040218D                 push    esi
.text:0040218E                 push    eax
.text:0040218F                 lea     eax, [ebp+S]
.text:00402192                 push    eax             ; char
.text:00402193                 push    271Dh           ; dwMessageId
.text:00402198                 push    1               ; int
.text:0040219A                 call    sub_4034F5
.text:0040219F                 add     esp, 14h
.text:004021A2                 push    esi             ; hMem
.text:004021A3                 call    ds:LocalFree
.text:004021A9                 mov     ecx, [ebp+var_4]
.text:004021AC                 pop     edi
.text:004021AD                 pop     esi
.text:004021AE                 xor     ecx, ebp        ; StackCookie
.text:004021B0                 pop     ebx
.text:004021B1                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text:004021B6                 mov     esp, ebp
.text:004021B8                 pop     ebp
.text:004021B9                 retn
.text:004021B9 sub_4020BF      endp
.text:004021B9
.text:004021BA
.text:004021BA ; =============== S U B R O U T I N E =======================================
.text:004021BA
.text:004021BA ; Attributes: bp-based frame
.text:004021BA
.text:004021BA sub_4021BA      proc near               ; CODE XREF: sub_40184E+41↑p
.text:004021BA                                         ; sub_401A35+48↑p ...
.text:004021BA
.text:004021BA var_24          = dword ptr -24h
.text:004021BA var_20          = dword ptr -20h
.text:004021BA var_1C          = dword ptr -1Ch
.text:004021BA C               = dword ptr -18h
.text:004021BA var_14          = dword ptr -14h
.text:004021BA var_10          = dword ptr -10h
.text:004021BA var_C           = dword ptr -0Ch
.text:004021BA var_8           = dword ptr -8
.text:004021BA var_4           = dword ptr -4
.text:004021BA
.text:004021BA                 mov     edi, edi
.text:004021BC                 push    ebp
.text:004021BD                 mov     ebp, esp
.text:004021BF                 sub     esp, 24h
.text:004021C2                 mov     eax, ___security_cookie
.text:004021C7                 xor     eax, ebp
.text:004021C9                 mov     [ebp+var_4], eax
.text:004021CC                 push    ebx
.text:004021CD                 mov     ebx, edx
.text:004021CF                 push    esi
.text:004021D0                 push    edi
.text:004021D1                 mov     [ebp+var_24], ebx
.text:004021D4                 lea     esi, [ebp+var_14]
.text:004021D7                 mov     edi, ecx
.text:004021D9                 mov     dword ptr [ebx], 1
.text:004021DF
.text:004021DF loc_4021DF:                             ; CODE XREF: sub_4021BA+D9↓j
.text:004021DF                 mov     [ebp+var_20], esi
.text:004021E2                 xor     eax, eax
.text:004021E4                 mov     [ebp+var_1C], 0Ah
.text:004021EB                 cmp     byte ptr [edi], 30h ; '0'
.text:004021EE                 mov     [ebp+C], eax
.text:004021F1                 jnz     short loc_40220F
.text:004021F3                 inc     edi
.text:004021F4                 mov     [ebp+var_1C], 8
.text:004021FB                 mov     cl, [edi]
.text:004021FD                 cmp     cl, 78h ; 'x'
.text:00402200                 jz      short loc_402207
.text:00402202                 cmp     cl, 58h ; 'X'
.text:00402205                 jnz     short loc_40220F
.text:00402207
.text:00402207 loc_402207:                             ; CODE XREF: sub_4021BA+46↑j
.text:00402207                 mov     [ebp+var_1C], 10h
.text:0040220E                 inc     edi
.text:0040220F
.text:0040220F loc_40220F:                             ; CODE XREF: sub_4021BA+37↑j
.text:0040220F                                         ; sub_4021BA+4B↑j
.text:0040220F                 mov     cl, [edi]
.text:00402211                 test    cl, cl
.text:00402213                 jz      short loc_402281
.text:00402215                 mov     esi, [ebp+var_1C]
.text:00402218                 mov     ebx, eax
.text:0040221A
.text:0040221A loc_40221A:                             ; CODE XREF: sub_4021BA+B9↓j
.text:0040221A                 movzx   eax, cl
.text:0040221D                 push    eax             ; C
.text:0040221E                 mov     [ebp+C], eax
.text:00402221                 call    ds:isdigit
.text:00402227                 pop     ecx
.text:00402228                 test    eax, eax
.text:0040222A                 jz      short loc_402239
.text:0040222C                 mov     ecx, [ebp+C]
.text:0040222F                 mov     eax, esi
.text:00402231                 imul    eax, ebx
.text:00402234                 lea     ebx, [ecx-30h]
.text:00402237                 jmp     short loc_40226C
.text:00402239 ; ---------------------------------------------------------------------------
.text:00402239
.text:00402239 loc_402239:                             ; CODE XREF: sub_4021BA+70↑j
.text:00402239                 cmp     esi, 10h
.text:0040223C                 jnz     short loc_402275
.text:0040223E                 mov     ecx, [ebp+C]
.text:00402241                 push    ecx             ; C
.text:00402242                 call    ds:isxdigit
.text:00402248                 pop     ecx
.text:00402249                 test    eax, eax
.text:0040224B                 jz      short loc_402275
.text:0040224D                 push    [ebp+C]         ; C
.text:00402250                 call    ds:islower
.text:00402256                 neg     eax
.text:00402258                 pop     ecx
.text:00402259                 sbb     eax, eax
.text:0040225B                 shl     ebx, 4
.text:0040225E                 and     eax, 20h
.text:00402261                 add     eax, 41h ; 'A'
.text:00402264                 sub     ebx, eax
.text:00402266                 mov     eax, [ebp+C]
.text:00402269                 add     eax, 0Ah
.text:0040226C
.text:0040226C loc_40226C:                             ; CODE XREF: sub_4021BA+7D↑j
.text:0040226C                 add     ebx, eax
.text:0040226E                 inc     edi
.text:0040226F                 mov     cl, [edi]
.text:00402271                 test    cl, cl
.text:00402273                 jnz     short loc_40221A
.text:00402275
.text:00402275 loc_402275:                             ; CODE XREF: sub_4021BA+82↑j
.text:00402275                                         ; sub_4021BA+91↑j
.text:00402275                 mov     esi, [ebp+var_20]
.text:00402278                 mov     [ebp+C], ebx
.text:0040227B                 mov     ebx, [ebp+var_24]
.text:0040227E                 mov     eax, [ebp+C]
.text:00402281
.text:00402281 loc_402281:                             ; CODE XREF: sub_4021BA+59↑j
.text:00402281                 cmp     byte ptr [edi], 2Eh ; '.'
.text:00402284                 jnz     short loc_4022A3
.text:00402286                 lea     ecx, [ebp+var_8]
.text:00402289                 cmp     esi, ecx
.text:0040228B                 jnb     short loc_402298
.text:0040228D                 mov     [esi], eax
.text:0040228F                 add     esi, 4
.text:00402292                 inc     edi
.text:00402293                 jmp     loc_4021DF
.text:00402298 ; ---------------------------------------------------------------------------
.text:00402298
.text:00402298 loc_402298:                             ; CODE XREF: sub_4021BA+D1↑j
.text:00402298                                         ; sub_4021BA+FC↓j ...
.text:00402298                 and     dword ptr [ebx], 0
.text:0040229B                 or      eax, 0FFFFFFFFh
.text:0040229E                 jmp     loc_402398
.text:004022A3 ; ---------------------------------------------------------------------------
.text:004022A3
.text:004022A3 loc_4022A3:                             ; CODE XREF: sub_4021BA+CA↑j
.text:004022A3                 mov     al, [edi]
.text:004022A5                 test    al, al
.text:004022A7                 jz      short loc_4022B8
.text:004022A9                 movzx   eax, al
.text:004022AC                 push    eax             ; C
.text:004022AD                 call    ds:isspace
.text:004022B3                 pop     ecx
.text:004022B4                 test    eax, eax
.text:004022B6                 jz      short loc_402298
.text:004022B8
.text:004022B8 loc_4022B8:                             ; CODE XREF: sub_4021BA+ED↑j
.text:004022B8                 mov     eax, [ebp+C]
.text:004022BB                 mov     [esi], eax
.text:004022BD                 lea     eax, [ebp+var_14]
.text:004022C0                 sub     esi, eax
.text:004022C2                 add     esi, 4
.text:004022C5                 sar     esi, 2
.text:004022C8                 sub     esi, 1
.text:004022CB                 jz      loc_40237C
.text:004022D1                 sub     esi, 1
.text:004022D4                 jz      short loc_402354
.text:004022D6                 sub     esi, 1
.text:004022D9                 jz      short loc_40231B
.text:004022DB                 sub     esi, 1
.text:004022DE                 jnz     short loc_402298
.text:004022E0                 mov     ecx, [ebp+var_14]
.text:004022E3                 mov     eax, 0FFh
.text:004022E8                 cmp     ecx, eax
.text:004022EA                 ja      short loc_402298
.text:004022EC                 mov     edx, [ebp+var_10]
.text:004022EF                 cmp     edx, eax
.text:004022F1                 ja      short loc_402298
.text:004022F3                 cmp     [ebp+var_C], eax
.text:004022F6                 ja      short loc_402298
.text:004022F8                 cmp     [ebp+var_8], eax
.text:004022FB                 ja      short loc_402298
.text:004022FD                 mov     eax, [ebp+var_C]
.text:00402300                 movzx   edx, dl
.text:00402303                 shl     ecx, 8
.text:00402306                 or      edx, ecx
.text:00402308                 movzx   eax, al
.text:0040230B                 shl     edx, 8
.text:0040230E                 or      edx, eax
.text:00402310                 mov     eax, [ebp+var_8]
.text:00402313                 shl     edx, 8
.text:00402316                 movzx   eax, al
.text:00402319                 jmp     short loc_402378
.text:0040231B ; ---------------------------------------------------------------------------
.text:0040231B
.text:0040231B loc_40231B:                             ; CODE XREF: sub_4021BA+11F↑j
.text:0040231B                 mov     ecx, [ebp+var_14]
.text:0040231E                 mov     eax, 0FFh
.text:00402323                 cmp     ecx, eax
.text:00402325                 ja      loc_402298
.text:0040232B                 mov     edx, [ebp+var_10]
.text:0040232E                 cmp     edx, eax
.text:00402330                 ja      loc_402298
.text:00402336                 mov     eax, [ebp+var_C]
.text:00402339                 cmp     eax, 0FFFFh
.text:0040233E                 ja      loc_402298
.text:00402344                 movzx   edx, dl
.text:00402347                 shl     ecx, 8
.text:0040234A                 or      edx, ecx
.text:0040234C                 movzx   eax, ax
.text:0040234F                 shl     edx, 10h
.text:00402352                 jmp     short loc_402378
.text:00402354 ; ---------------------------------------------------------------------------
.text:00402354
.text:00402354 loc_402354:                             ; CODE XREF: sub_4021BA+11A↑j
.text:00402354                 mov     edx, [ebp+var_14]
.text:00402357                 cmp     edx, 0FFh
.text:0040235D                 ja      loc_402298
.text:00402363                 mov     eax, [ebp+var_10]
.text:00402366                 mov     ecx, 0FFFFFFh
.text:0040236B                 cmp     eax, ecx
.text:0040236D                 ja      loc_402298
.text:00402373                 shl     edx, 18h
.text:00402376                 and     eax, ecx
.text:00402378
.text:00402378 loc_402378:                             ; CODE XREF: sub_4021BA+15F↑j
.text:00402378                                         ; sub_4021BA+198↑j
.text:00402378                 or      edx, eax
.text:0040237A                 jmp     short loc_40237F
.text:0040237C ; ---------------------------------------------------------------------------
.text:0040237C
.text:0040237C loc_40237C:                             ; CODE XREF: sub_4021BA+111↑j
.text:0040237C                 mov     edx, [ebp+var_14]
.text:0040237F
.text:0040237F loc_40237F:                             ; CODE XREF: sub_4021BA+1C0↑j
.text:0040237F                 mov     eax, edx
.text:00402381                 mov     ecx, edx
.text:00402383                 shr     eax, 8
.text:00402386                 shl     ecx, 8
.text:00402389                 xor     eax, ecx
.text:0040238B                 shl     edx, 8
.text:0040238E                 and     eax, 0FF00FFh
.text:00402393                 xor     eax, edx
.text:00402395                 rol     eax, 10h
.text:00402398
.text:00402398 loc_402398:                             ; CODE XREF: sub_4021BA+E4↑j
.text:00402398                 mov     ecx, [ebp+var_4]
.text:0040239B                 pop     edi
.text:0040239C                 pop     esi
.text:0040239D                 xor     ecx, ebp        ; StackCookie
.text:0040239F                 pop     ebx
.text:004023A0                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text:004023A5                 mov     esp, ebp
.text:004023A7                 pop     ebp
.text:004023A8                 retn
.text:004023A8 sub_4021BA      endp
.text:004023A8
.text:004023A9
.text:004023A9 ; =============== S U B R O U T I N E =======================================
.text:004023A9
.text:004023A9 ; Attributes: noreturn
.text:004023A9
.text:004023A9 sub_4023A9      proc near               ; CODE XREF: _main:loc_401776↑p
.text:004023A9                 push    dword_404BF0    ; char
.text:004023AF                 push    2710h           ; dwMessageId
.text:004023B4                 push    1               ; int
.text:004023B6                 call    sub_4034F5
.text:004023BB                 add     esp, 0Ch
.text:004023BE                 push    1               ; Code
.text:004023C0                 call    ds:exit
.text:004023C0 sub_4023A9      endp
.text:004023C0
.text:004023C0 ; ---------------------------------------------------------------------------
.text:004023C6                 db 0CCh
.text:004023C7
.text:004023C7 ; =============== S U B R O U T I N E =======================================
.text:004023C7
.text:004023C7 ; Attributes: bp-based frame
.text:004023C7
.text:004023C7 ; int __thiscall sub_4023C7(char *Buffer)
.text:004023C7 sub_4023C7      proc near               ; CODE XREF: AddArp(x,x,x)+99↑p
.text:004023C7
.text:004023C7 var_1C          = byte ptr -1Ch
.text:004023C7 var_18          = byte ptr -18h
.text:004023C7 var_14          = byte ptr -14h
.text:004023C7 var_10          = byte ptr -10h
.text:004023C7 var_C           = byte ptr -0Ch
.text:004023C7 var_8           = byte ptr -8
.text:004023C7 var_4           = dword ptr -4
.text:004023C7
.text:004023C7                 mov     edi, edi
.text:004023C9                 push    ebp
.text:004023CA                 mov     ebp, esp
.text:004023CC                 sub     esp, 1Ch
.text:004023CF                 mov     eax, ___security_cookie
.text:004023D4                 xor     eax, ebp
.text:004023D6                 mov     [ebp+var_4], eax
.text:004023D9                 push    esi
.text:004023DA                 lea     eax, [ebp+var_8]
.text:004023DD                 mov     esi, edx
.text:004023DF                 push    eax
.text:004023E0                 lea     eax, [ebp+var_C]
.text:004023E3                 push    eax
.text:004023E4                 lea     eax, [ebp+var_10]
.text:004023E7                 push    eax
.text:004023E8                 lea     eax, [ebp+var_14]
.text:004023EB                 push    eax
.text:004023EC                 lea     eax, [ebp+var_18]
.text:004023EF                 push    eax
.text:004023F0                 lea     eax, [ebp+var_1C]
.text:004023F3                 push    eax
.text:004023F4                 push    offset Format   ; "%2x-%2x-%2x-%2x-%2x-%2x"
.text:004023F9                 push    ecx             ; Buffer
.text:004023FA                 call    ds:sscanf_s
.text:00402400                 add     esp, 20h
.text:00402403                 cmp     eax, 6
.text:00402406                 jz      short loc_40240D
.text:00402408                 push    57h ; 'W'
.text:0040240A                 pop     eax
.text:0040240B                 jmp     short loc_402432
.text:0040240D ; ---------------------------------------------------------------------------
.text:0040240D
.text:0040240D loc_40240D:                             ; CODE XREF: sub_4023C7+3F↑j
.text:0040240D                 mov     al, [ebp+var_1C]
.text:00402410                 mov     [esi], al
.text:00402412                 mov     al, [ebp+var_18]
.text:00402415                 mov     [esi+1], al
.text:00402418                 mov     al, [ebp+var_14]
.text:0040241B                 mov     [esi+2], al
.text:0040241E                 mov     al, [ebp+var_10]
.text:00402421                 mov     [esi+3], al
.text:00402424                 mov     al, [ebp+var_C]
.text:00402427                 mov     [esi+4], al
.text:0040242A                 mov     al, [ebp+var_8]
.text:0040242D                 mov     [esi+5], al
.text:00402430                 xor     eax, eax
.text:00402432
.text:00402432 loc_402432:                             ; CODE XREF: sub_4023C7+44↑j
.text:00402432                 mov     ecx, [ebp+var_4]
.text:00402435                 xor     ecx, ebp        ; StackCookie
.text:00402437                 pop     esi
.text:00402438                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text:0040243D                 mov     esp, ebp
.text:0040243F                 pop     ebp
.text:00402440                 retn
.text:00402440 sub_4023C7      endp
.text:00402440
.text:00402441
.text:00402441 ; =============== S U B R O U T I N E =======================================
.text:00402441
.text:00402441 ; Attributes: bp-based frame
.text:00402441
.text:00402441 ; int __thiscall sub_402441(DWORD nSubAuthority1)
.text:00402441 sub_402441      proc near               ; CODE XREF: sub_4024BA+5↓p
.text:00402441                                         ; sub_4024BA+13↓p
.text:00402441
.text:00402441 pSid            = dword ptr -14h
.text:00402441 IsMember        = dword ptr -10h
.text:00402441 pIdentifierAuthority= _SID_IDENTIFIER_AUTHORITY ptr -0Ch
.text:00402441 var_4           = dword ptr -4
.text:00402441
.text:00402441                 mov     edi, edi
.text:00402443                 push    ebp
.text:00402444                 mov     ebp, esp
.text:00402446                 sub     esp, 14h
.text:00402449                 mov     eax, ___security_cookie
.text:0040244E                 xor     eax, ebp
.text:00402450                 mov     [ebp+var_4], eax
.text:00402453                 push    ebx
.text:00402454                 xor     ebx, ebx
.text:00402456                 mov     word ptr [ebp+pIdentifierAuthority.Value+4], 500h
.text:0040245C                 lea     eax, [ebp+pSid]
.text:0040245F                 mov     dword ptr [ebp+pIdentifierAuthority.Value], ebx
.text:00402462                 push    eax             ; pSid
.text:00402463                 push    ebx             ; nSubAuthority7
.text:00402464                 push    ebx             ; nSubAuthority6
.text:00402465                 push    ebx             ; nSubAuthority5
.text:00402466                 push    ebx             ; nSubAuthority4
.text:00402467                 push    ebx             ; nSubAuthority3
.text:00402468                 push    ebx             ; nSubAuthority2
.text:00402469                 push    ecx             ; nSubAuthority1
.text:0040246A                 push    20h ; ' '       ; nSubAuthority0
.text:0040246C                 push    2               ; nSubAuthorityCount
.text:0040246E                 lea     eax, [ebp+pIdentifierAuthority]
.text:00402471                 push    eax             ; pIdentifierAuthority
.text:00402472                 call    ds:AllocateAndInitializeSid
.text:00402478                 mov     [ebp+IsMember], eax
.text:0040247B                 test    eax, eax
.text:0040247D                 jz      short loc_4024A9
.text:0040247F                 lea     eax, [ebp+IsMember]
.text:00402482                 push    eax             ; IsMember
.text:00402483                 push    [ebp+pSid]      ; SidToCheck
.text:00402486                 push    ebx             ; TokenHandle
.text:00402487                 call    ds:CheckTokenMembership
.text:0040248D                 push    [ebp+pSid]      ; pSid
.text:00402490                 neg     eax
.text:00402492                 sbb     eax, eax
.text:00402494                 and     eax, [ebp+IsMember]
.text:00402497                 mov     [ebp+IsMember], eax
.text:0040249A                 call    ds:FreeSid
.text:004024A0                 cmp     [ebp+IsMember], ebx
.text:004024A3                 jz      short loc_4024A9
.text:004024A5                 mov     al, 1
.text:004024A7                 jmp     short loc_4024AB
.text:004024A9 ; ---------------------------------------------------------------------------
.text:004024A9
.text:004024A9 loc_4024A9:                             ; CODE XREF: sub_402441+3C↑j
.text:004024A9                                         ; sub_402441+62↑j
.text:004024A9                 xor     al, al
.text:004024AB
.text:004024AB loc_4024AB:                             ; CODE XREF: sub_402441+66↑j
.text:004024AB                 mov     ecx, [ebp+var_4]
.text:004024AE                 xor     ecx, ebp        ; StackCookie
.text:004024B0                 pop     ebx
.text:004024B1                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text:004024B6                 mov     esp, ebp
.text:004024B8                 pop     ebp
.text:004024B9                 retn
.text:004024B9 sub_402441      endp
.text:004024B9
.text:004024BA
.text:004024BA ; =============== S U B R O U T I N E =======================================
.text:004024BA
.text:004024BA
.text:004024BA sub_4024BA      proc near               ; CODE XREF: _main+1D6↑p
.text:004024BA                                         ; _main+202↑p
.text:004024BA                 mov     ecx, 220h       ; nSubAuthority1
.text:004024BF                 call    sub_402441
.text:004024C4                 test    al, al
.text:004024C6                 jnz     short loc_4024D9
.text:004024C8                 mov     ecx, 22Ch       ; nSubAuthority1
.text:004024CD                 call    sub_402441
.text:004024D2                 test    al, al
.text:004024D4                 jnz     short loc_4024D9
.text:004024D6                 xor     eax, eax
.text:004024D8                 retn
.text:004024D9 ; ---------------------------------------------------------------------------
.text:004024D9
.text:004024D9 loc_4024D9:                             ; CODE XREF: sub_4024BA+C↑j
.text:004024D9                                         ; sub_4024BA+1A↑j
.text:004024D9                 xor     eax, eax
.text:004024DB                 inc     eax
.text:004024DC                 retn
.text:004024DC sub_4024BA      endp
.text:004024DC
.text:004024DD
.text:004024DD ; =============== S U B R O U T I N E =======================================
.text:004024DD
.text:004024DD
.text:004024DD sub_4024DD      proc near               ; CODE XREF: sub_40253E+70↓p
.text:004024DD                                         ; sub_40253E+A5↓p
.text:004024DD                 mov     edi, edi
.text:004024DF                 push    esi
.text:004024E0                 xor     esi, esi
.text:004024E2                 test    edx, edx
.text:004024E4                 jz      short loc_4024EE
.text:004024E6                 cmp     edx, 7FFFFFFFh
.text:004024EC                 jbe     short loc_4024F3
.text:004024EE
.text:004024EE loc_4024EE:                             ; CODE XREF: sub_4024DD+7↑j
.text:004024EE                 mov     esi, 80070057h
.text:004024F3
.text:004024F3 loc_4024F3:                             ; CODE XREF: sub_4024DD+F↑j
.text:004024F3                 test    esi, esi
.text:004024F5                 js      short loc_402531
.text:004024F7                 xor     esi, esi
.text:004024F9                 test    edx, edx
.text:004024FB                 jz      short loc_402529
.text:004024FD                 push    ebx
.text:004024FE                 push    edi
.text:004024FF                 mov     edi, 7FFFFFFEh
.text:00402504                 mov     ebx, offset aInetmib1Dll ; "\\inetmib1.dll"
.text:00402509                 sub     edi, edx
.text:0040250B                 sub     ebx, ecx
.text:0040250D
.text:0040250D loc_40250D:                             ; CODE XREF: sub_4024DD+44↓j
.text:0040250D                 lea     eax, [edi+edx]
.text:00402510                 test    eax, eax
.text:00402512                 jz      short loc_402523
.text:00402514                 mov     al, [ebx+ecx]
.text:00402517                 test    al, al
.text:00402519                 jz      short loc_402523
.text:0040251B                 mov     [ecx], al
.text:0040251D                 inc     ecx
.text:0040251E                 sub     edx, 1
.text:00402521                 jnz     short loc_40250D
.text:00402523
.text:00402523 loc_402523:                             ; CODE XREF: sub_4024DD+35↑j
.text:00402523                                         ; sub_4024DD+3C↑j
.text:00402523                 pop     edi
.text:00402524                 pop     ebx
.text:00402525                 test    edx, edx
.text:00402527                 jnz     short loc_402535
.text:00402529
.text:00402529 loc_402529:                             ; CODE XREF: sub_4024DD+1E↑j
.text:00402529                 dec     ecx
.text:0040252A                 mov     esi, 8007007Ah
.text:0040252F                 jmp     short loc_402535
.text:00402531 ; ---------------------------------------------------------------------------
.text:00402531
.text:00402531 loc_402531:                             ; CODE XREF: sub_4024DD+18↑j
.text:00402531                 test    edx, edx
.text:00402533                 jz      short loc_402538
.text:00402535
.text:00402535 loc_402535:                             ; CODE XREF: sub_4024DD+4A↑j
.text:00402535                                         ; sub_4024DD+52↑j
.text:00402535                 mov     byte ptr [ecx], 0
.text:00402538
.text:00402538 loc_402538:                             ; CODE XREF: sub_4024DD+56↑j
.text:00402538                 mov     eax, esi
.text:0040253A                 pop     esi
.text:0040253B                 retn    4
.text:0040253B sub_4024DD      endp
.text:0040253B
.text:0040253E
.text:0040253E ; =============== S U B R O U T I N E =======================================
.text:0040253E
.text:0040253E ; Attributes: bp-based frame
.text:0040253E
.text:0040253E sub_40253E      proc near               ; CODE XREF: _main:loc_4016B8↑p
.text:0040253E
.text:0040253E uSize           = dword ptr -130h
.text:0040253E var_124         = byte ptr -124h
.text:0040253E var_11C         = byte ptr -11Ch
.text:0040253E Buffer          = byte ptr -118h
.text:0040253E var_4           = dword ptr -4
.text:0040253E
.text:0040253E                 mov     edi, edi
.text:00402540                 push    ebp
.text:00402541                 mov     ebp, esp
.text:00402543                 sub     esp, 124h
.text:00402549                 mov     eax, ___security_cookie
.text:0040254E                 xor     eax, ebp
.text:00402550                 mov     [ebp+var_4], eax
.text:00402553                 push    ebx
.text:00402554                 push    edi
.text:00402555                 xor     ebx, ebx
.text:00402557                 push    ebx             ; Time
.text:00402558                 call    ds:time
.text:0040255E                 mov     edi, eax
.text:00402560                 mov     [esp+130h+uSize], 104h ; uSize
.text:00402567                 lea     eax, [ebp+Buffer]
.text:0040256D                 push    eax             ; lpBuffer
.text:0040256E                 call    ds:GetSystemDirectoryA
.text:00402574                 test    eax, eax
.text:00402576                 jnz     short loc_402583
.text:00402578                 call    ds:GetLastError
.text:0040257E                 jmp     loc_402656
.text:00402583 ; ---------------------------------------------------------------------------
.text:00402583
.text:00402583 loc_402583:                             ; CODE XREF: sub_40253E+38↑j
.text:00402583                 lea     ecx, [ebp+Buffer]
.text:00402589                 lea     edx, [ecx+1]
.text:0040258C
.text:0040258C loc_40258C:                             ; CODE XREF: sub_40253E+53↓j
.text:0040258C                 mov     al, [ecx]
.text:0040258E                 inc     ecx
.text:0040258F                 test    al, al
.text:00402591                 jnz     short loc_40258C
.text:00402593                 push    esi
.text:00402594                 sub     ecx, edx
.text:00402596                 lea     esi, [ebp+Buffer]
.text:0040259C                 add     esi, ecx
.text:0040259E                 cmp     dword_404BCC, ebx
.text:004025A4                 jz      short loc_4025DB
.text:004025A6                 push    ecx
.text:004025A7                 lea     edx, [ebp+var_4]
.text:004025AA                 mov     ecx, esi
.text:004025AC                 sub     edx, esi
.text:004025AE                 call    sub_4024DD
.text:004025B3                 test    eax, eax
.text:004025B5                 js      short loc_4025EC
.text:004025B7                 push    ebx             ; dwFlags
.text:004025B8                 push    ebx             ; hFile
.text:004025B9                 lea     eax, [ebp+Buffer]
.text:004025BF                 push    eax             ; lpLibFileName
.text:004025C0                 call    ds:LoadLibraryExA
.text:004025C6                 test    eax, eax
.text:004025C8                 jz      short loc_4025DB
.text:004025CA                 push    offset ProcName ; "SnmpMgrOidToStr"
.text:004025CF                 push    eax             ; hModule
.text:004025D0                 call    ds:GetProcAddress
.text:004025D6                 mov     dword_404BE4, eax
.text:004025DB
.text:004025DB loc_4025DB:                             ; CODE XREF: sub_40253E+66↑j
.text:004025DB                                         ; sub_40253E+8A↑j
.text:004025DB                 push    ecx
.text:004025DC                 lea     edx, [ebp+var_4]
.text:004025DF                 mov     ecx, esi
.text:004025E1                 sub     edx, esi
.text:004025E3                 call    sub_4024DD
.text:004025E8                 test    eax, eax
.text:004025EA                 jns     short loc_4025F0
.text:004025EC
.text:004025EC loc_4025EC:                             ; CODE XREF: sub_40253E+77↑j
.text:004025EC                 push    8
.text:004025EE                 jmp     short loc_402631
.text:004025F0 ; ---------------------------------------------------------------------------
.text:004025F0
.text:004025F0 loc_4025F0:                             ; CODE XREF: sub_40253E+AC↑j
.text:004025F0                 push    ebx             ; dwFlags
.text:004025F1                 push    ebx             ; hFile
.text:004025F2                 lea     eax, [ebp+Buffer]
.text:004025F8                 push    eax             ; lpLibFileName
.text:004025F9                 call    ds:LoadLibraryExA
.text:004025FF                 mov     esi, eax
.text:00402601                 test    esi, esi
.text:00402603                 jz      short loc_40262F
.text:00402605                 push    offset aSnmpextensioni ; "SnmpExtensionInit"
.text:0040260A                 push    esi             ; hModule
.text:0040260B                 call    ds:GetProcAddress
.text:00402611                 mov     dword_404BE8, eax
.text:00402616                 test    eax, eax
.text:00402618                 jz      short loc_40262F
.text:0040261A                 push    offset aSnmpextensionq ; "SnmpExtensionQuery"
.text:0040261F                 push    esi             ; hModule
.text:00402620                 call    ds:GetProcAddress
.text:00402626                 mov     dword_404BEC, eax
.text:0040262B                 test    eax, eax
.text:0040262D                 jnz     short loc_402634
.text:0040262F
.text:0040262F loc_40262F:                             ; CODE XREF: sub_40253E+C5↑j
.text:0040262F                                         ; sub_40253E+DA↑j
.text:0040262F                 push    2
.text:00402631
.text:00402631 loc_402631:                             ; CODE XREF: sub_40253E+B0↑j
.text:00402631                 pop     eax
.text:00402632                 jmp     short loc_402655
.text:00402634 ; ---------------------------------------------------------------------------
.text:00402634
.text:00402634 loc_402634:                             ; CODE XREF: sub_40253E+EF↑j
.text:00402634                 mov     esi, dword_404BE8
.text:0040263A                 lea     eax, [ebp+var_124]
.text:00402640                 push    eax
.text:00402641                 lea     eax, [ebp+var_11C]
.text:00402647                 mov     ecx, esi
.text:00402649                 push    eax
.text:0040264A                 push    edi
.text:0040264B                 call    ds:___guard_check_icall_fptr ; _guard_check_icall_nop(x)
.text:00402651                 call    esi ; dword_404BE8
.text:00402653                 xor     eax, eax
.text:00402655
.text:00402655 loc_402655:                             ; CODE XREF: sub_40253E+F4↑j
.text:00402655                 pop     esi
.text:00402656
.text:00402656 loc_402656:                             ; CODE XREF: sub_40253E+40↑j
.text:00402656                 mov     ecx, [ebp+var_4]
.text:00402659                 pop     edi
.text:0040265A                 xor     ecx, ebp        ; StackCookie
.text:0040265C                 pop     ebx
.text:0040265D                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text:00402662                 mov     esp, ebp
.text:00402664                 pop     ebp
.text:00402665                 retn
.text:00402665 sub_40253E      endp
.text:00402665
.text:00402666
.text:00402666 ; =============== S U B R O U T I N E =======================================
.text:00402666
.text:00402666 ; Attributes: bp-based frame
.text:00402666
.text:00402666 sub_402666      proc near               ; CODE XREF: sub_40184E+75↑p
.text:00402666                                         ; sub_40184E+A3↑p ...
.text:00402666
.text:00402666 var_4           = dword ptr -4
.text:00402666
.text:00402666                 mov     edi, edi
.text:00402668                 push    ebp
.text:00402669                 mov     ebp, esp
.text:0040266B                 push    ecx
.text:0040266C                 push    ebx
.text:0040266D                 push    esi
.text:0040266E                 push    edi
.text:0040266F                 xor     esi, esi
.text:00402671                 mov     edi, ecx
.text:00402673                 mov     ebx, edx
.text:00402675                 mov     [ebp+var_4], edi
.text:00402678                 cmp     dword_404BCC, esi
.text:0040267E                 jz      short loc_402698
.text:00402680                 push    edi
.text:00402681                 push    offset aGettableTypeD ; "GetTable: type = %d\n"
.text:00402686                 push    2
.text:00402688                 call    sub_403E84
.text:0040268D                 pop     ecx
.text:0040268E                 push    eax             ; Stream
.text:0040268F                 call    ds:fprintf
.text:00402695                 add     esp, 0Ch
.text:00402698
.text:00402698 loc_402698:                             ; CODE XREF: sub_402666+18↑j
.text:00402698                 jmp     ds:jpt_402698[edi*4] ; switch 16 cases
.text:0040269F ; ---------------------------------------------------------------------------
.text:0040269F
.text:0040269F loc_40269F:                             ; CODE XREF: sub_402666:loc_402698↑j
.text:0040269F                                         ; DATA XREF: .text:jpt_402698↓o
.text:0040269F                 mov     esi, 168h       ; jumptable 00402698 case 0
.text:004026A4                 jmp     short loc_4026CC
.text:004026A6 ; ---------------------------------------------------------------------------
.text:004026A6
.text:004026A6 loc_4026A6:                             ; CODE XREF: sub_402666:loc_402698↑j
.text:004026A6                                         ; DATA XREF: .text:jpt_402698↓o
.text:004026A6                 push    64h ; 'd'       ; jumptable 00402698 cases 1,10
.text:004026A8                 jmp     short loc_4026CB
.text:004026AA ; ---------------------------------------------------------------------------
.text:004026AA
.text:004026AA loc_4026AA:                             ; CODE XREF: sub_402666:loc_402698↑j
.text:004026AA                                         ; DATA XREF: .text:jpt_402698↓o
.text:004026AA                 push    20h ; ' '       ; jumptable 00402698 cases 2,4
.text:004026AC                 jmp     short loc_4026CB
.text:004026AE ; ---------------------------------------------------------------------------
.text:004026AE
.text:004026AE loc_4026AE:                             ; CODE XREF: sub_402666:loc_402698↑j
.text:004026AE                                         ; DATA XREF: .text:jpt_402698↓o
.text:004026AE                 push    38h ; '8'       ; jumptable 00402698 case 3
.text:004026B0                 jmp     short loc_4026CB
.text:004026B2 ; ---------------------------------------------------------------------------
.text:004026B2
.text:004026B2 loc_4026B2:                             ; CODE XREF: sub_402666:loc_402698↑j
.text:004026B2                                         ; DATA XREF: .text:jpt_402698↓o
.text:004026B2                 mov     esi, 818h       ; jumptable 00402698 cases 5,15
.text:004026B7                 jmp     short loc_4026CC
.text:004026B9 ; ---------------------------------------------------------------------------
.text:004026B9
.text:004026B9 loc_4026B9:                             ; CODE XREF: sub_402666:loc_402698↑j
.text:004026B9                                         ; DATA XREF: .text:jpt_402698↓o
.text:004026B9                 push    44h ; 'D'       ; jumptable 00402698 cases 6,11
.text:004026BB                 jmp     short loc_4026CB
.text:004026BD ; ---------------------------------------------------------------------------
.text:004026BD
.text:004026BD loc_4026BD:                             ; CODE XREF: sub_402666:loc_402698↑j
.text:004026BD                                         ; DATA XREF: .text:jpt_402698↓o
.text:004026BD                 push    1Ch             ; jumptable 00402698 cases 7,8,13
.text:004026BF                 jmp     short loc_4026CB
.text:004026C1 ; ---------------------------------------------------------------------------
.text:004026C1
.text:004026C1 loc_4026C1:                             ; CODE XREF: sub_402666:loc_402698↑j
.text:004026C1                                         ; DATA XREF: .text:jpt_402698↓o
.text:004026C1                 push    40h ; '@'       ; jumptable 00402698 case 12
.text:004026C3                 jmp     short loc_4026CB
.text:004026C5 ; ---------------------------------------------------------------------------
.text:004026C5
.text:004026C5 loc_4026C5:                             ; CODE XREF: sub_402666:loc_402698↑j
.text:004026C5                                         ; DATA XREF: .text:jpt_402698↓o
.text:004026C5                 push    10h             ; jumptable 00402698 case 9
.text:004026C7                 jmp     short loc_4026CB
.text:004026C9 ; ---------------------------------------------------------------------------
.text:004026C9
.text:004026C9 loc_4026C9:                             ; CODE XREF: sub_402666:loc_402698↑j
.text:004026C9                                         ; DATA XREF: .text:jpt_402698↓o
.text:004026C9                 push    24h ; '$'       ; jumptable 00402698 case 14
.text:004026CB
.text:004026CB loc_4026CB:                             ; CODE XREF: sub_402666+42↑j
.text:004026CB                                         ; sub_402666+46↑j ...
.text:004026CB                 pop     esi
.text:004026CC
.text:004026CC loc_4026CC:                             ; CODE XREF: sub_402666+3E↑j
.text:004026CC                                         ; sub_402666+51↑j
.text:004026CC                 push    esi             ; nBytes
.text:004026CD                 call    ds:SnmpUtilMemAlloc
.text:004026D3                 mov     edi, eax
.text:004026D5                 test    edi, edi
.text:004026D7                 jnz     short loc_4026E3
.text:004026D9                 mov     dword ptr [ebx], 8
.text:004026DF
.text:004026DF loc_4026DF:                             ; CODE XREF: sub_402666+9C↓j
.text:004026DF                 xor     eax, eax
.text:004026E1                 jmp     short loc_402709
.text:004026E3 ; ---------------------------------------------------------------------------
.text:004026E3
.text:004026E3 loc_4026E3:                             ; CODE XREF: sub_402666+71↑j
.text:004026E3                 mov     edx, [ebp+var_4]
.text:004026E6                 mov     ecx, edi
.text:004026E8                 push    esi
.text:004026E9                 mov     [edi+4], edi
.text:004026EC                 mov     [edi], edi
.text:004026EE                 call    _ReadTable@12   ; ReadTable(x,x,x)
.text:004026F3                 mov     esi, eax
.text:004026F5                 test    esi, esi
.text:004026F7                 jz      short loc_402704
.text:004026F9                 mov     ecx, edi        ; pMem
.text:004026FB                 call    sub_402752
.text:00402700                 mov     [ebx], esi
.text:00402702                 jmp     short loc_4026DF
.text:00402704 ; ---------------------------------------------------------------------------
.text:00402704
.text:00402704 loc_402704:                             ; CODE XREF: sub_402666+91↑j
.text:00402704                 and     dword ptr [ebx], 0
.text:00402707                 mov     eax, edi
.text:00402709
.text:00402709 loc_402709:                             ; CODE XREF: sub_402666+7B↑j
.text:00402709                 pop     edi
.text:0040270A                 pop     esi
.text:0040270B                 pop     ebx
.text:0040270C                 mov     esp, ebp
.text:0040270E                 pop     ebp
.text:0040270F                 retn
.text:0040270F sub_402666      endp
.text:0040270F
.text:0040270F ; ---------------------------------------------------------------------------
.text:00402710                 db 8Bh, 0FFh
.text:00402712 jpt_402698      dd offset loc_40269F    ; DATA XREF: sub_402666:loc_402698↑r
.text:00402712                 dd offset loc_4026A6    ; jump table for switch statement
.text:00402712                 dd offset loc_4026AA
.text:00402712                 dd offset loc_4026AE
.text:00402712                 dd offset loc_4026AA
.text:00402712                 dd offset loc_4026B2
.text:00402712                 dd offset loc_4026B9
.text:00402712                 dd offset loc_4026BD
.text:00402712                 dd offset loc_4026BD
.text:00402712                 dd offset loc_4026C5
.text:00402712                 dd offset loc_4026A6
.text:00402712                 dd offset loc_4026B9
.text:00402712                 dd offset loc_4026C1
.text:00402712                 dd offset loc_4026BD
.text:00402712                 dd offset loc_4026C9
.text:00402712                 dd offset loc_4026B2
.text:00402752
.text:00402752 ; =============== S U B R O U T I N E =======================================
.text:00402752
.text:00402752
.text:00402752 ; int __thiscall sub_402752(LPVOID pMem)
.text:00402752 sub_402752      proc near               ; CODE XREF: sub_40184E+19B↑p
.text:00402752                                         ; sub_40184E+1A2↑p ...
.text:00402752                 mov     edi, edi
.text:00402754                 push    esi
.text:00402755                 mov     esi, ecx
.text:00402757                 jmp     short loc_402773
.text:00402759 ; ---------------------------------------------------------------------------
.text:00402759
.text:00402759 loc_402759:                             ; CODE XREF: sub_402752+23↓j
.text:00402759                 mov     eax, [esi]
.text:0040275B                 mov     ecx, [eax]
.text:0040275D                 cmp     [eax+4], esi
.text:00402760                 jnz     short loc_402780
.text:00402762                 cmp     [ecx+4], eax
.text:00402765                 jnz     short loc_402780
.text:00402767                 mov     [esi], ecx
.text:00402769                 push    eax             ; pMem
.text:0040276A                 mov     [ecx+4], esi
.text:0040276D                 call    ds:SnmpUtilMemFree
.text:00402773
.text:00402773 loc_402773:                             ; CODE XREF: sub_402752+5↑j
.text:00402773                 cmp     [esi], esi
.text:00402775                 jnz     short loc_402759
.text:00402777                 push    esi             ; pMem
.text:00402778                 call    ds:SnmpUtilMemFree
.text:0040277E                 pop     esi
.text:0040277F                 retn
.text:00402780 ; ---------------------------------------------------------------------------
.text:00402780
.text:00402780 loc_402780:                             ; CODE XREF: sub_402752+E↑j
.text:00402780                                         ; sub_402752+13↑j
.text:00402780                 push    3
.text:00402782                 pop     ecx
.text:00402783                 int     29h             ; Win8: RtlFailFast(ecx)
.text:00402783 sub_402752      endp
.text:00402783
.text:00402785
.text:00402785 ; =============== S U B R O U T I N E =======================================
.text:00402785
.text:00402785
.text:00402785 sub_402785      proc near               ; CODE XREF: sub_401A35:loc_401BD3↑p
.text:00402785                                         ; ReadTable(x,x,x)+59C↓p
.text:00402785                 sub     ecx, 0
.text:00402788                 jz      short loc_4027A9
.text:0040278A                 sub     ecx, 1
.text:0040278D                 jz      short loc_4027A1
.text:0040278F                 sub     ecx, 1
.text:00402792                 jz      short loc_4027A1
.text:00402794                 sub     ecx, 1
.text:00402797                 jz      short loc_4027A1
.text:00402799                 sub     ecx, 1
.text:0040279C                 jz      short loc_4027A5
.text:0040279E                 sub     ecx, 1
.text:004027A1
.text:004027A1 loc_4027A1:                             ; CODE XREF: sub_402785+8↑j
.text:004027A1                                         ; sub_402785+D↑j ...
.text:004027A1                 push    57h ; 'W'
.text:004027A3                 pop     eax
.text:004027A4                 retn
.text:004027A5 ; ---------------------------------------------------------------------------
.text:004027A5
.text:004027A5 loc_4027A5:                             ; CODE XREF: sub_402785+17↑j
.text:004027A5                 push    0Ch
.text:004027A7                 pop     eax
.text:004027A8                 retn
.text:004027A9 ; ---------------------------------------------------------------------------
.text:004027A9
.text:004027A9 loc_4027A9:                             ; CODE XREF: sub_402785+3↑j
.text:004027A9                 xor     eax, eax
.text:004027AB                 retn
.text:004027AB sub_402785      endp
.text:004027AB
.text:004027AC
.text:004027AC ; =============== S U B R O U T I N E =======================================
.text:004027AC
.text:004027AC ; Attributes: fuzzy-sp info_from_lumina
.text:004027AC
.text:004027AC ; __stdcall ReadTable(x, x, x)
.text:004027AC _ReadTable@12   proc near               ; CODE XREF: sub_402666+88↑p
.text:004027AC
.text:004027AC var_8           = dword ptr -8
.text:004027AC
.text:004027AC                 mov     edi, edi
.text:004027AE                 push    ebx
.text:004027AF                 mov     ebx, esp
.text:004027B1                 push    ecx
.text:004027B2                 push    ecx
.text:004027B3                 and     esp, 0FFFFFFF8h
.text:004027B6                 add     esp, 4
.text:004027B9                 push    ebp
.text:004027BA                 mov     ebp, [ebx+4]
.text:004027BD                 mov     [esp+0Ch+var_8], ebp
.text:004027C1                 mov     ebp, esp
.text:004027C3                 sub     esp, 68h
.text:004027C6                 mov     eax, ___security_cookie
.text:004027CB                 xor     eax, ebp
.text:004027CD                 mov     [ebp-4], eax
.text:004027D0                 push    esi
.text:004027D1                 lea     eax, [ebp-24h]
.text:004027D4                 mov     dword ptr [ebp-40h], 1
.text:004027DB                 push    edi
.text:004027DC                 mov     [ebp-44h], eax
.text:004027DF                 mov     esi, ecx
.text:004027E1                 xor     eax, eax
.text:004027E3                 mov     [ebp-28h], esi
.text:004027E6                 mov     edi, edx
.text:004027E8                 mov     [ebp-34h], eax
.text:004027EB                 push    2
.text:004027ED                 mov     [ebp-30h], edi
.text:004027F0                 mov     [ebp-38h], eax
.text:004027F3                 mov     [ebp-2Ch], eax
.text:004027F6                 mov     [ebp-0Ch], eax
.text:004027F9                 pop     ecx
.text:004027FA                 cmp     dword_404BCC, eax
.text:00402800                 jz      short loc_40281C
.text:00402802                 push    edi
.text:00402803                 push    offset aReadtableTypeD ; "ReadTable: type = %d\n"
.text:00402808                 push    ecx
.text:00402809                 call    sub_403E84
.text:0040280E                 pop     ecx
.text:0040280F                 push    eax             ; Stream
.text:00402810                 call    ds:fprintf
.text:00402816                 add     esp, 0Ch
.text:00402819                 push    2
.text:0040281B                 pop     ecx
.text:0040281C
.text:0040281C loc_40281C:                             ; CODE XREF: ReadTable(x,x,x)+54↑j
.text:0040281C                 cmp     edi, 0Ah
.text:0040281F                 ja      short loc_402868
.text:00402821                 jz      short loc_402857
.text:00402823                 mov     eax, edi
.text:00402825                 sub     eax, 1
.text:00402828                 jz      short loc_402854
.text:0040282A                 sub     eax, 4
.text:0040282D                 jz      short loc_40284E
.text:0040282F                 sub     eax, 1
.text:00402832                 jz      short loc_402848
.text:00402834                 sub     eax, ecx
.text:00402836                 jnz     short loc_402883
.text:00402838                 push    ecx             ; Family
.text:00402839
.text:00402839 loc_402839:                             ; CODE XREF: ReadTable(x,x,x)+5B3↓j
.text:00402839                 lea     eax, [esi+8]
.text:0040283C                 push    eax             ; Statistics
.text:0040283D                 call    ds:GetUdpStatisticsEx
.text:00402843                 jmp     loc_402D70
.text:00402848 ; ---------------------------------------------------------------------------
.text:00402848
.text:00402848 loc_402848:                             ; CODE XREF: ReadTable(x,x,x)+86↑j
.text:00402848                 push    ecx
.text:00402849                 jmp     loc_402D66
.text:0040284E ; ---------------------------------------------------------------------------
.text:0040284E
.text:0040284E loc_40284E:                             ; CODE XREF: ReadTable(x,x,x)+81↑j
.text:0040284E                 push    ecx
.text:0040284F                 jmp     loc_402D51
.text:00402854 ; ---------------------------------------------------------------------------
.text:00402854
.text:00402854 loc_402854:                             ; CODE XREF: ReadTable(x,x,x)+7C↑j
.text:00402854                 push    ecx
.text:00402855                 jmp     short loc_402859
.text:00402857 ; ---------------------------------------------------------------------------
.text:00402857
.text:00402857 loc_402857:                             ; CODE XREF: ReadTable(x,x,x)+75↑j
.text:00402857                 push    17h             ; Family
.text:00402859
.text:00402859 loc_402859:                             ; CODE XREF: ReadTable(x,x,x)+A9↑j
.text:00402859                 lea     eax, [esi+8]
.text:0040285C                 push    eax             ; Statistics
.text:0040285D                 call    ds:GetIpStatisticsEx
.text:00402863                 jmp     loc_402D70
.text:00402868 ; ---------------------------------------------------------------------------
.text:00402868
.text:00402868 loc_402868:                             ; CODE XREF: ReadTable(x,x,x)+73↑j
.text:00402868                 mov     eax, edi
.text:0040286A                 sub     eax, 0Bh
.text:0040286D                 jz      loc_402D64
.text:00402873                 sub     eax, ecx
.text:00402875                 jz      loc_402D5D
.text:0040287B                 sub     eax, ecx
.text:0040287D                 jz      loc_402D4F
.text:00402883
.text:00402883 loc_402883:                             ; CODE XREF: ReadTable(x,x,x)+8A↑j
.text:00402883                 push    0C8h ; 'È'      ; nBytes
.text:00402888                 call    ds:SnmpUtilMemAlloc
.text:0040288E                 mov     edx, eax
.text:00402890                 test    edx, edx
.text:00402892                 jnz     short loc_40289C
.text:00402894
.text:00402894 loc_402894:                             ; CODE XREF: ReadTable(x,x,x)+57C↓j
.text:00402894                 push    8
.text:00402896                 pop     eax
.text:00402897                 jmp     loc_402D70
.text:0040289C ; ---------------------------------------------------------------------------
.text:0040289C
.text:0040289C loc_40289C:                             ; CODE XREF: ReadTable(x,x,x)+E6↑j
.text:0040289C                 mov     eax, dword_404520
.text:004028A1                 mov     [ebp-20h], edx
.text:004028A4                 test    eax, eax
.text:004028A6                 jz      short loc_4028BC
.text:004028A8                 mov     edi, edx
.text:004028AA                 mov     ecx, eax
.text:004028AC                 mov     esi, offset unk_404524
.text:004028B1                 lea     edx, [edx+eax*4]
.text:004028B4                 rep movsd
.text:004028B6                 mov     esi, [ebp-28h]
.text:004028B9                 mov     edi, [ebp-30h]
.text:004028BC
.text:004028BC loc_4028BC:                             ; CODE XREF: ReadTable(x,x,x)+FA↑j
.text:004028BC                 cmp     edi, 4
.text:004028BF                 ja      short loc_4028FF
.text:004028C1                 jz      short loc_4028F8
.text:004028C3                 mov     eax, edi
.text:004028C5                 sub     eax, 0
.text:004028C8                 jz      short loc_4028EE
.text:004028CA                 sub     eax, 1
.text:004028CD                 jz      short loc_4028E7
.text:004028CF                 sub     eax, 1
.text:004028D2                 jz      short loc_4028E0
.text:004028D4                 sub     eax, 1
.text:004028D7                 jnz     short loc_402933
.text:004028D9                 mov     ecx, offset unk_404370
.text:004028DE                 jmp     short loc_4028F3
.text:004028E0 ; ---------------------------------------------------------------------------
.text:004028E0
.text:004028E0 loc_4028E0:                             ; CODE XREF: ReadTable(x,x,x)+126↑j
.text:004028E0                 mov     ecx, offset unk_404448
.text:004028E5                 jmp     short loc_4028F3
.text:004028E7 ; ---------------------------------------------------------------------------
.text:004028E7
.text:004028E7 loc_4028E7:                             ; CODE XREF: ReadTable(x,x,x)+121↑j
.text:004028E7                 mov     ecx, offset unk_4045F8
.text:004028EC                 jmp     short loc_4028F3
.text:004028EE ; ---------------------------------------------------------------------------
.text:004028EE
.text:004028EE loc_4028EE:                             ; CODE XREF: ReadTable(x,x,x)+11C↑j
.text:004028EE                 mov     ecx, offset unk_4041C0
.text:004028F3
.text:004028F3 loc_4028F3:                             ; CODE XREF: ReadTable(x,x,x)+132↑j
.text:004028F3                                         ; ReadTable(x,x,x)+139↑j ...
.text:004028F3                 mov     [ebp-0Ch], ecx
.text:004028F6                 jmp     short loc_402936
.text:004028F8 ; ---------------------------------------------------------------------------
.text:004028F8
.text:004028F8 loc_4028F8:                             ; CODE XREF: ReadTable(x,x,x)+115↑j
.text:004028F8                 mov     ecx, offset unk_404010
.text:004028FD                 jmp     short loc_4028F3
.text:004028FF ; ---------------------------------------------------------------------------
.text:004028FF
.text:004028FF loc_4028FF:                             ; CODE XREF: ReadTable(x,x,x)+113↑j
.text:004028FF                 mov     eax, edi
.text:00402901                 sub     eax, 7
.text:00402904                 jz      short loc_40292C
.text:00402906                 dec     eax
.text:00402907                 sub     eax, 1
.text:0040290A                 jz      short loc_402925
.text:0040290C                 sub     eax, 3
.text:0040290F                 jz      short loc_40291E
.text:00402911                 dec     eax
.text:00402912                 sub     eax, 1
.text:00402915                 jnz     short loc_402933
.text:00402917                 mov     ecx, offset unk_4040E8
.text:0040291C                 jmp     short loc_4028F3
.text:0040291E ; ---------------------------------------------------------------------------
.text:0040291E
.text:0040291E loc_40291E:                             ; CODE XREF: ReadTable(x,x,x)+163↑j
.text:0040291E                 mov     ecx, offset unk_4047A8
.text:00402923                 jmp     short loc_4028F3
.text:00402925 ; ---------------------------------------------------------------------------
.text:00402925
.text:00402925 loc_402925:                             ; CODE XREF: ReadTable(x,x,x)+15E↑j
.text:00402925                 mov     ecx, offset unk_404298
.text:0040292A                 jmp     short loc_4028F3
.text:0040292C ; ---------------------------------------------------------------------------
.text:0040292C
.text:0040292C loc_40292C:                             ; CODE XREF: ReadTable(x,x,x)+158↑j
.text:0040292C                 mov     ecx, offset unk_4046D0
.text:00402931                 jmp     short loc_4028F3
.text:00402933 ; ---------------------------------------------------------------------------
.text:00402933
.text:00402933 loc_402933:                             ; CODE XREF: ReadTable(x,x,x)+12B↑j
.text:00402933                                         ; ReadTable(x,x,x)+169↑j
.text:00402933                 mov     ecx, [ebp-0Ch]
.text:00402936
.text:00402936 loc_402936:                             ; CODE XREF: ReadTable(x,x,x)+14A↑j
.text:00402936                 xor     edi, edi
.text:00402938                 cmp     [ecx], edi
.text:0040293A                 jbe     short loc_402951
.text:0040293C                 lea     esi, [ecx+4]
.text:0040293F
.text:0040293F loc_40293F:                             ; CODE XREF: ReadTable(x,x,x)+1A0↓j
.text:0040293F                 mov     eax, [esi]
.text:00402941                 inc     edi
.text:00402942                 mov     [edx], eax
.text:00402944                 lea     esi, [esi+4]
.text:00402947                 lea     edx, [edx+4]
.text:0040294A                 cmp     edi, [ecx]
.text:0040294C                 jb      short loc_40293F
.text:0040294E                 mov     esi, [ebp-28h]
.text:00402951
.text:00402951 loc_402951:                             ; CODE XREF: ReadTable(x,x,x)+18E↑j
.text:00402951                 mov     eax, [ecx]
.text:00402953                 mov     edi, esi
.text:00402955                 add     eax, dword_404520
.text:0040295B                 mov     [ebp-24h], eax
.text:0040295E                 mov     byte ptr [ebp-1Ch], 5
.text:00402962
.text:00402962 loc_402962:                             ; CODE XREF: ReadTable(x,x,x)+328↓j
.text:00402962                                         ; ReadTable(x,x,x)+352↓j ...
.text:00402962                 mov     esi, dword_404BEC
.text:00402968                 lea     eax, [ebp-38h]
.text:0040296B                 push    eax
.text:0040296C                 lea     eax, [ebp-34h]
.text:0040296F                 mov     ecx, esi
.text:00402971                 push    eax
.text:00402972                 lea     eax, [ebp-44h]
.text:00402975                 push    eax
.text:00402976                 push    0A1h ; '¡'
.text:0040297B                 call    ds:___guard_check_icall_fptr ; _guard_check_icall_nop(x)
.text:00402981                 call    esi ; dword_404BEC
.text:00402983                 cmp     dword_404BCC, 0
.text:0040298A                 jz      loc_402A5B
.text:00402990                 push    dword ptr [ebp-18h]
.text:00402993                 push    offset aValue8dOid ; "value=%8d oid= "
.text:00402998                 push    2
.text:0040299A                 call    sub_403E84
.text:0040299F                 pop     ecx
.text:004029A0                 push    eax             ; Stream
.text:004029A1                 call    ds:fprintf
.text:004029A7                 mov     esi, dword_404BE4
.text:004029AD                 add     esp, 0Ch
.text:004029B0                 test    esi, esi
.text:004029B2                 jz      short loc_402A03
.text:004029B4                 and     dword ptr [ebp-8], 0
.text:004029B8                 lea     eax, [ebp-8]
.text:004029BB                 push    eax
.text:004029BC                 lea     eax, [ebp-24h]
.text:004029BF                 mov     ecx, esi
.text:004029C1                 push    eax
.text:004029C2                 call    ds:___guard_check_icall_fptr ; _guard_check_icall_nop(x)
.text:004029C8                 call    esi ; dword_404BE4
.text:004029CA                 test    eax, eax
.text:004029CC                 jz      short loc_4029E8
.text:004029CE                 push    dword ptr [ebp-8]
.text:004029D1                 push    offset aS       ; " %s "
.text:004029D6                 push    2
.text:004029D8                 call    sub_403E84
.text:004029DD                 pop     ecx
.text:004029DE                 push    eax             ; Stream
.text:004029DF                 call    ds:fprintf
.text:004029E5                 add     esp, 0Ch
.text:004029E8
.text:004029E8 loc_4029E8:                             ; CODE XREF: ReadTable(x,x,x)+220↑j
.text:004029E8                 push    dword ptr [ebp-8] ; pMem
.text:004029EB                 call    ds:SnmpUtilMemFree
.text:004029F1                 cmp     dword_404BE4, 0
.text:004029F8                 jz      short loc_402A03
.text:004029FA                 cmp     dword_404BCC, 1
.text:00402A01                 jbe     short loc_402A45
.text:00402A03
.text:00402A03 loc_402A03:                             ; CODE XREF: ReadTable(x,x,x)+206↑j
.text:00402A03                                         ; ReadTable(x,x,x)+24C↑j
.text:00402A03                 xor     esi, esi
.text:00402A05                 cmp     [ebp-24h], esi
.text:00402A08                 jle     short loc_402A45
.text:00402A0A
.text:00402A0A loc_402A0A:                             ; CODE XREF: ReadTable(x,x,x)+297↓j
.text:00402A0A                 mov     eax, [ebp-20h]
.text:00402A0D                 push    dword ptr [eax+esi*4]
.text:00402A10                 cmp     esi, 6
.text:00402A13                 jge     short loc_402A1C
.text:00402A15                 push    offset aD       ; "%d."
.text:00402A1A                 jmp     short loc_402A2D
.text:00402A1C ; ---------------------------------------------------------------------------
.text:00402A1C
.text:00402A1C loc_402A1C:                             ; CODE XREF: ReadTable(x,x,x)+267↑j
.text:00402A1C                 cmp     esi, 9
.text:00402A1F                 jge     short loc_402A28
.text:00402A21                 push    offset a2d      ; "%2d."
.text:00402A26                 jmp     short loc_402A2D
.text:00402A28 ; ---------------------------------------------------------------------------
.text:00402A28
.text:00402A28 loc_402A28:                             ; CODE XREF: ReadTable(x,x,x)+273↑j
.text:00402A28                 push    offset a3d      ; "%3d."
.text:00402A2D
.text:00402A2D loc_402A2D:                             ; CODE XREF: ReadTable(x,x,x)+26E↑j
.text:00402A2D                                         ; ReadTable(x,x,x)+27A↑j
.text:00402A2D                 push    2
.text:00402A2F                 call    sub_403E84
.text:00402A34                 pop     ecx
.text:00402A35                 push    eax             ; Stream
.text:00402A36                 call    ds:fprintf
.text:00402A3C                 add     esp, 0Ch
.text:00402A3F                 inc     esi
.text:00402A40                 cmp     esi, [ebp-24h]
.text:00402A43                 jl      short loc_402A0A
.text:00402A45
.text:00402A45 loc_402A45:                             ; CODE XREF: ReadTable(x,x,x)+255↑j
.text:00402A45                                         ; ReadTable(x,x,x)+25C↑j
.text:00402A45                 push    offset asc_4011CC ; "\n"
.text:00402A4A                 push    2
.text:00402A4C                 call    sub_403E84
.text:00402A51                 pop     ecx
.text:00402A52                 push    eax             ; Stream
.text:00402A53                 call    ds:fprintf
.text:00402A59                 pop     ecx
.text:00402A5A                 pop     ecx
.text:00402A5B
.text:00402A5B loc_402A5B:                             ; CODE XREF: ReadTable(x,x,x)+1DE↑j
.text:00402A5B                 cmp     dword ptr [ebp-34h], 0
.text:00402A5F                 jnz     loc_402D3B
.text:00402A65                 mov     edx, [ebp-0Ch]
.text:00402A68                 mov     esi, dword_404520
.text:00402A6E                 mov     ecx, [edx]
.text:00402A70                 lea     eax, [ecx+esi]
.text:00402A73                 cmp     [ebp-24h], eax
.text:00402A76                 jb      loc_402D2D
.text:00402A7C                 sub     ecx, [edx+0D0h]
.text:00402A82                 add     ecx, esi
.text:00402A84                 mov     [ebp-3Ch], ecx
.text:00402A87                 cmp     esi, ecx
.text:00402A89                 mov     ecx, [ebp-20h]
.text:00402A8C                 jnb     short loc_402AB4
.text:00402A8E                 mov     eax, esi
.text:00402A90                 sub     eax, esi
.text:00402A92                 inc     eax
.text:00402A93                 lea     eax, [edx+eax*4]
.text:00402A96                 mov     [ebp-8], eax
.text:00402A99
.text:00402A99 loc_402A99:                             ; CODE XREF: ReadTable(x,x,x)+306↓j
.text:00402A99                 mov     edx, [ebp-8]
.text:00402A9C                 mov     eax, [ecx+esi*4]
.text:00402A9F                 cmp     eax, [edx]
.text:00402AA1                 mov     edx, [ebp-0Ch]
.text:00402AA4                 jnz     loc_402D2D
.text:00402AAA                 add     dword ptr [ebp-8], 4
.text:00402AAE                 inc     esi
.text:00402AAF                 cmp     esi, [ebp-3Ch]
.text:00402AB2                 jb      short loc_402A99
.text:00402AB4
.text:00402AB4 loc_402AB4:                             ; CODE XREF: ReadTable(x,x,x)+2E0↑j
.text:00402AB4                 mov     eax, [ebp-30h]
.text:00402AB7                 sub     eax, 1
.text:00402ABA                 jz      short loc_402AF4
.text:00402ABC                 sub     eax, 5
.text:00402ABF                 jz      short loc_402AE8
.text:00402AC1                 push    2
.text:00402AC3                 pop     esi
.text:00402AC4                 sub     eax, esi
.text:00402AC6                 jz      short loc_402ADC
.text:00402AC8                 sub     eax, 4
.text:00402ACB                 jz      short loc_402AD1
.text:00402ACD                 sub     eax, esi
.text:00402ACF                 jnz     short loc_402B18
.text:00402AD1
.text:00402AD1 loc_402AD1:                             ; CODE XREF: ReadTable(x,x,x)+31F↑j
.text:00402AD1                 cmp     [ecx+28h], esi
.text:00402AD4                 jnz     loc_402962
.text:00402ADA                 jmp     short loc_402B18
.text:00402ADC ; ---------------------------------------------------------------------------
.text:00402ADC
.text:00402ADC loc_402ADC:                             ; CODE XREF: ReadTable(x,x,x)+31A↑j
.text:00402ADC                 mov     eax, [edx+0CCh]
.text:00402AE2                 cmp     dword ptr [ecx+eax*4], 5
.text:00402AE6                 jmp     short loc_402B12
.text:00402AE8 ; ---------------------------------------------------------------------------
.text:00402AE8
.text:00402AE8 loc_402AE8:                             ; CODE XREF: ReadTable(x,x,x)+313↑j
.text:00402AE8                 mov     eax, [edx+0CCh]
.text:00402AEE                 cmp     dword ptr [ecx+eax*4], 0Dh
.text:00402AF2                 jmp     short loc_402B12
.text:00402AF4 ; ---------------------------------------------------------------------------
.text:00402AF4
.text:00402AF4 loc_402AF4:                             ; CODE XREF: ReadTable(x,x,x)+30E↑j
.text:00402AF4                 mov     eax, [edx+0CCh]
.text:00402AFA                 cmp     dword ptr [ecx+eax*4], 14h
.text:00402AFE                 jz      loc_402962
.text:00402B04                 cmp     dword ptr [ecx+eax*4], 15h
.text:00402B08                 jz      loc_402962
.text:00402B0E                 cmp     dword ptr [ecx+eax*4], 16h
.text:00402B12
.text:00402B12 loc_402B12:                             ; CODE XREF: ReadTable(x,x,x)+33A↑j
.text:00402B12                                         ; ReadTable(x,x,x)+346↑j
.text:00402B12                 jz      loc_402962
.text:00402B18
.text:00402B18 loc_402B18:                             ; CODE XREF: ReadTable(x,x,x)+323↑j
.text:00402B18                                         ; ReadTable(x,x,x)+32E↑j
.text:00402B18                 mov     esi, [ebp-28h]
.text:00402B1B                 cmp     edi, esi
.text:00402B1D                 jz      short loc_402B51
.text:00402B1F                 mov     edi, [edi]
.text:00402B21                 mov     [ebp-8], edi
.text:00402B24                 cmp     edi, esi
.text:00402B26                 jnz     short loc_402B39
.text:00402B28                 mov     eax, [edx+0CCh]
.text:00402B2E                 mov     esi, [ebp-2Ch]
.text:00402B31                 cmp     [ecx+eax*4], esi
.text:00402B34                 mov     esi, [ebp-28h]
.text:00402B37                 jz      short loc_402B51
.text:00402B39
.text:00402B39 loc_402B39:                             ; CODE XREF: ReadTable(x,x,x)+37A↑j
.text:00402B39                 mov     eax, [edx+0CCh]
.text:00402B3F                 mov     edx, [ebp-2Ch]
.text:00402B42                 cmp     [ecx+eax*4], edx
.text:00402B45                 mov     edx, [ebp-0Ch]
.text:00402B48                 jz      short loc_402B82
.text:00402B4A                 mov     edi, [esi]
.text:00402B4C                 mov     [ebp-8], edi
.text:00402B4F                 jmp     short loc_402B82
.text:00402B51 ; ---------------------------------------------------------------------------
.text:00402B51
.text:00402B51 loc_402B51:                             ; CODE XREF: ReadTable(x,x,x)+371↑j
.text:00402B51                                         ; ReadTable(x,x,x)+38B↑j
.text:00402B51                 push    dword ptr [ebx+8] ; nBytes
.text:00402B54                 call    ds:SnmpUtilMemAlloc
.text:00402B5A                 mov     edi, eax
.text:00402B5C                 mov     [ebp-8], edi
.text:00402B5F                 test    edi, edi
.text:00402B61                 jz      loc_402D1E
.text:00402B67                 mov     eax, [esi+4]
.text:00402B6A                 cmp     [eax], esi
.text:00402B6C                 jnz     loc_402D19
.text:00402B72                 mov     edx, [ebp-0Ch]
.text:00402B75                 mov     [edi], esi
.text:00402B77                 mov     [edi+4], eax
.text:00402B7A                 mov     [eax], edi
.text:00402B7C                 mov     ecx, [ebp-20h]
.text:00402B7F                 mov     [esi+4], edi
.text:00402B82
.text:00402B82 loc_402B82:                             ; CODE XREF: ReadTable(x,x,x)+39C↑j
.text:00402B82                                         ; ReadTable(x,x,x)+3A3↑j
.text:00402B82                 mov     eax, [edx+0CCh]
.text:00402B88                 mov     eax, [ecx+eax*4]
.text:00402B8B                 mov     [ebp-2Ch], eax
.text:00402B8E                 mov     eax, [ebp-30h]
.text:00402B91                 cmp     eax, 0Eh        ; switch 15 cases
.text:00402B94                 ja      def_402B9A      ; jumptable 00402B9A default case, cases 5,10
.text:00402B9A                 jmp     ds:jpt_402B9A[eax*4] ; switch jump
.text:00402BA1 ; ---------------------------------------------------------------------------
.text:00402BA1
.text:00402BA1 loc_402BA1:                             ; CODE XREF: ReadTable(x,x,x)+3EE↑j
.text:00402BA1                                         ; DATA XREF: .text:jpt_402B9A↓o
.text:00402BA1                 sub     esp, 18h        ; jumptable 00402B9A case 0
.text:00402BA4                 lea     esi, [ebp-24h]
.text:00402BA7                 push    6
.text:00402BA9                 pop     ecx
.text:00402BAA                 mov     edi, esp
.text:00402BAC                 rep movsd
.text:00402BAE                 mov     edi, [ebp-8]
.text:00402BB1                 mov     ecx, edi
.text:00402BB3                 call    sub_402DC4
.text:00402BB8                 jmp     def_402B9A      ; jumptable 00402B9A default case, cases 5,10
.text:00402BBD ; ---------------------------------------------------------------------------
.text:00402BBD
.text:00402BBD loc_402BBD:                             ; CODE XREF: ReadTable(x,x,x)+3EE↑j
.text:00402BBD                                         ; DATA XREF: .text:jpt_402B9A↓o
.text:00402BBD                 sub     esp, 18h        ; jumptable 00402B9A case 1
.text:00402BC0                 lea     esi, [ebp-24h]
.text:00402BC3                 push    6
.text:00402BC5                 pop     ecx
.text:00402BC6                 mov     edi, esp
.text:00402BC8                 rep movsd
.text:00402BCA                 mov     edi, [ebp-8]
.text:00402BCD                 mov     ecx, edi
.text:00402BCF                 call    sub_402F2C
.text:00402BD4                 jmp     def_402B9A      ; jumptable 00402B9A default case, cases 5,10
.text:00402BD9 ; ---------------------------------------------------------------------------
.text:00402BD9
.text:00402BD9 loc_402BD9:                             ; CODE XREF: ReadTable(x,x,x)+3EE↑j
.text:00402BD9                                         ; DATA XREF: .text:jpt_402B9A↓o
.text:00402BD9                 sub     esp, 18h        ; jumptable 00402B9A case 2
.text:00402BDC                 lea     esi, [ebp-24h]
.text:00402BDF                 push    6
.text:00402BE1                 pop     ecx
.text:00402BE2                 mov     edi, esp
.text:00402BE4                 rep movsd
.text:00402BE6                 mov     edi, [ebp-8]
.text:00402BE9                 mov     ecx, edi
.text:00402BEB                 call    sub_40303C
.text:00402BF0                 jmp     def_402B9A      ; jumptable 00402B9A default case, cases 5,10
.text:00402BF5 ; ---------------------------------------------------------------------------
.text:00402BF5
.text:00402BF5 loc_402BF5:                             ; CODE XREF: ReadTable(x,x,x)+3EE↑j
.text:00402BF5                                         ; DATA XREF: .text:jpt_402B9A↓o
.text:00402BF5                 sub     esp, 18h        ; jumptable 00402B9A case 3
.text:00402BF8                 lea     esi, [ebp-24h]
.text:00402BFB                 push    6
.text:00402BFD                 pop     ecx
.text:00402BFE                 mov     edi, esp
.text:00402C00                 rep movsd
.text:00402C02                 mov     edi, [ebp-8]
.text:00402C05                 mov     ecx, edi
.text:00402C07                 call    sub_4030BC
.text:00402C0C                 jmp     def_402B9A      ; jumptable 00402B9A default case, cases 5,10
.text:00402C11 ; ---------------------------------------------------------------------------
.text:00402C11
.text:00402C11 loc_402C11:                             ; CODE XREF: ReadTable(x,x,x)+3EE↑j
.text:00402C11                                         ; DATA XREF: .text:jpt_402B9A↓o
.text:00402C11                 sub     esp, 18h        ; jumptable 00402B9A case 4
.text:00402C14                 lea     esi, [ebp-24h]
.text:00402C17                 push    6
.text:00402C19                 pop     ecx
.text:00402C1A                 mov     edi, esp
.text:00402C1C                 rep movsd
.text:00402C1E                 mov     edi, [ebp-8]
.text:00402C21                 mov     ecx, edi
.text:00402C23                 call    sub_4031B0
.text:00402C28                 jmp     def_402B9A      ; jumptable 00402B9A default case, cases 5,10
.text:00402C2D ; ---------------------------------------------------------------------------
.text:00402C2D
.text:00402C2D loc_402C2D:                             ; CODE XREF: ReadTable(x,x,x)+3EE↑j
.text:00402C2D                                         ; DATA XREF: .text:jpt_402B9A↓o
.text:00402C2D                 sub     esp, 18h        ; jumptable 00402B9A cases 6,11
.text:00402C30                 lea     esi, [ebp-24h]
.text:00402C33                 push    6
.text:00402C35                 pop     ecx
.text:00402C36                 mov     edi, esp
.text:00402C38                 rep movsd
.text:00402C3A                 mov     edi, [ebp-8]
.text:00402C3D                 mov     ecx, edi
.text:00402C3F                 call    sub_403225
.text:00402C44                 jmp     def_402B9A      ; jumptable 00402B9A default case, cases 5,10
.text:00402C49 ; ---------------------------------------------------------------------------
.text:00402C49
.text:00402C49 loc_402C49:                             ; CODE XREF: ReadTable(x,x,x)+3EE↑j
.text:00402C49                                         ; DATA XREF: .text:jpt_402B9A↓o
.text:00402C49                 sub     esp, 18h        ; jumptable 00402B9A case 7
.text:00402C4C                 lea     esi, [ebp-24h]
.text:00402C4F                 push    6
.text:00402C51                 pop     ecx
.text:00402C52                 mov     edi, esp
.text:00402C54                 rep movsd
.text:00402C56                 mov     edi, [ebp-8]
.text:00402C59                 mov     ecx, edi
.text:00402C5B                 call    sub_4032F1
.text:00402C60                 jmp     def_402B9A      ; jumptable 00402B9A default case, cases 5,10
.text:00402C65 ; ---------------------------------------------------------------------------
.text:00402C65
.text:00402C65 loc_402C65:                             ; CODE XREF: ReadTable(x,x,x)+3EE↑j
.text:00402C65                                         ; DATA XREF: .text:jpt_402B9A↓o
.text:00402C65                 sub     esp, 18h        ; jumptable 00402B9A case 12
.text:00402C68                 lea     esi, [ebp-24h]
.text:00402C6B                 push    6
.text:00402C6D                 pop     ecx
.text:00402C6E                 mov     edi, esp
.text:00402C70                 rep movsd
.text:00402C72                 mov     edi, [ebp-8]
.text:00402C75                 mov     ecx, edi
.text:00402C77                 call    sub_403371
.text:00402C7C                 jmp     short def_402B9A ; jumptable 00402B9A default case, cases 5,10
.text:00402C7E ; ---------------------------------------------------------------------------
.text:00402C7E
.text:00402C7E loc_402C7E:                             ; CODE XREF: ReadTable(x,x,x)+3EE↑j
.text:00402C7E                                         ; DATA XREF: .text:jpt_402B9A↓o
.text:00402C7E                 sub     esp, 18h        ; jumptable 00402B9A cases 8,13
.text:00402C81                 lea     esi, [ebp-24h]
.text:00402C84                 push    6
.text:00402C86                 pop     ecx
.text:00402C87                 mov     edi, esp
.text:00402C89                 rep movsd
.text:00402C8B                 mov     edi, [ebp-8]
.text:00402C8E                 mov     ecx, edi
.text:00402C90                 call    sub_403421
.text:00402C95                 jmp     short def_402B9A ; jumptable 00402B9A default case, cases 5,10
.text:00402C97 ; ---------------------------------------------------------------------------
.text:00402C97
.text:00402C97 loc_402C97:                             ; CODE XREF: ReadTable(x,x,x)+3EE↑j
.text:00402C97                                         ; DATA XREF: .text:jpt_402B9A↓o
.text:00402C97                 mov     eax, [ebp-2Ch]  ; jumptable 00402B9A case 9
.text:00402C9A                 lea     esi, [ebp-24h]
.text:00402C9D                 lea     edi, [ebp-64h]
.text:00402CA0                 push    6
.text:00402CA2                 pop     ecx
.text:00402CA3                 rep movsd
.text:00402CA5                 mov     edi, [ebp-8]
.text:00402CA8                 sub     eax, 1
.text:00402CAB                 jz      short loc_402CBA
.text:00402CAD                 sub     eax, 1
.text:00402CB0                 jnz     short def_402B9A ; jumptable 00402B9A default case, cases 5,10
.text:00402CB2                 mov     eax, [ebp-18h]
.text:00402CB5                 mov     [edi+0Ch], eax
.text:00402CB8                 jmp     short def_402B9A ; jumptable 00402B9A default case, cases 5,10
.text:00402CBA ; ---------------------------------------------------------------------------
.text:00402CBA
.text:00402CBA loc_402CBA:                             ; CODE XREF: ReadTable(x,x,x)+4FF↑j
.text:00402CBA                 mov     eax, [ebp-18h]
.text:00402CBD                 mov     ecx, [ebp-58h]
.text:00402CC0                 mov     al, [eax]
.text:00402CC2                 mov     [edi+8], al
.text:00402CC5                 mov     al, [ecx+1]
.text:00402CC8                 mov     [edi+9], al
.text:00402CCB                 mov     al, [ecx+2]
.text:00402CCE                 mov     [edi+0Ah], al
.text:00402CD1                 mov     al, [ecx+3]
.text:00402CD4                 mov     [edi+0Bh], al
.text:00402CD7                 jmp     short def_402B9A ; jumptable 00402B9A default case, cases 5,10
.text:00402CD9 ; ---------------------------------------------------------------------------
.text:00402CD9
.text:00402CD9 loc_402CD9:                             ; CODE XREF: ReadTable(x,x,x)+3EE↑j
.text:00402CD9                                         ; DATA XREF: .text:jpt_402B9A↓o
.text:00402CD9                 sub     esp, 18h        ; jumptable 00402B9A case 14
.text:00402CDC                 lea     esi, [ebp-24h]
.text:00402CDF                 push    6
.text:00402CE1                 pop     ecx
.text:00402CE2                 mov     edi, esp
.text:00402CE4                 rep movsd
.text:00402CE6                 mov     edi, [ebp-8]
.text:00402CE9                 mov     ecx, edi
.text:00402CEB                 call    sub_403468
.text:00402CF0
.text:00402CF0 def_402B9A:                             ; CODE XREF: ReadTable(x,x,x)+3E8↑j
.text:00402CF0                                         ; ReadTable(x,x,x)+3EE↑j ...
.text:00402CF0                 lea     eax, [ebp-24h]  ; jumptable 00402B9A default case, cases 5,10
.text:00402CF3                 push    eax             ; pOidSrc
.text:00402CF4                 lea     eax, [ebp-4Ch]
.text:00402CF7                 push    eax             ; pOidDst
.text:00402CF8                 call    ds:SnmpUtilOidCpy
.text:00402CFE                 lea     eax, [ebp-24h]
.text:00402D01                 push    eax             ; pVb
.text:00402D02                 call    ds:SnmpUtilVarBindFree
.text:00402D08                 mov     eax, [ebp-4Ch]
.text:00402D0B                 mov     [ebp-24h], eax
.text:00402D0E                 mov     eax, [ebp-48h]
.text:00402D11                 mov     [ebp-20h], eax
.text:00402D14                 jmp     loc_402962
.text:00402D19 ; ---------------------------------------------------------------------------
.text:00402D19
.text:00402D19 loc_402D19:                             ; CODE XREF: ReadTable(x,x,x)+3C0↑j
.text:00402D19                 push    3
.text:00402D1B                 pop     ecx
.text:00402D1C                 int     29h             ; Win8: RtlFailFast(ecx)
.text:00402D1E ; ---------------------------------------------------------------------------
.text:00402D1E
.text:00402D1E loc_402D1E:                             ; CODE XREF: ReadTable(x,x,x)+3B5↑j
.text:00402D1E                 lea     eax, [ebp-24h]
.text:00402D21                 push    eax             ; pVb
.text:00402D22                 call    ds:SnmpUtilVarBindFree
.text:00402D28                 jmp     loc_402894
.text:00402D2D ; ---------------------------------------------------------------------------
.text:00402D2D
.text:00402D2D loc_402D2D:                             ; CODE XREF: ReadTable(x,x,x)+2CA↑j
.text:00402D2D                                         ; ReadTable(x,x,x)+2F8↑j
.text:00402D2D                 lea     eax, [ebp-24h]
.text:00402D30                 push    eax             ; pVb
.text:00402D31                 call    ds:SnmpUtilVarBindFree
.text:00402D37                 xor     eax, eax
.text:00402D39                 jmp     short loc_402D70
.text:00402D3B ; ---------------------------------------------------------------------------
.text:00402D3B
.text:00402D3B loc_402D3B:                             ; CODE XREF: ReadTable(x,x,x)+2B3↑j
.text:00402D3B                 lea     eax, [ebp-24h]
.text:00402D3E                 push    eax             ; pVb
.text:00402D3F                 call    ds:SnmpUtilVarBindFree
.text:00402D45                 mov     ecx, [ebp-34h]
.text:00402D48                 call    sub_402785
.text:00402D4D                 jmp     short loc_402D70
.text:00402D4F ; ---------------------------------------------------------------------------
.text:00402D4F
.text:00402D4F loc_402D4F:                             ; CODE XREF: ReadTable(x,x,x)+D1↑j
.text:00402D4F                 push    17h             ; Family
.text:00402D51
.text:00402D51 loc_402D51:                             ; CODE XREF: ReadTable(x,x,x)+A3↑j
.text:00402D51                 lea     eax, [esi+8]
.text:00402D54                 push    eax             ; Statistics
.text:00402D55                 call    ds:GetIcmpStatisticsEx
.text:00402D5B                 jmp     short loc_402D70
.text:00402D5D ; ---------------------------------------------------------------------------
.text:00402D5D
.text:00402D5D loc_402D5D:                             ; CODE XREF: ReadTable(x,x,x)+C9↑j
.text:00402D5D                 push    17h
.text:00402D5F                 jmp     loc_402839
.text:00402D64 ; ---------------------------------------------------------------------------
.text:00402D64
.text:00402D64 loc_402D64:                             ; CODE XREF: ReadTable(x,x,x)+C1↑j
.text:00402D64                 push    17h             ; Family
.text:00402D66
.text:00402D66 loc_402D66:                             ; CODE XREF: ReadTable(x,x,x)+9D↑j
.text:00402D66                 lea     eax, [esi+8]
.text:00402D69                 push    eax             ; Statistics
.text:00402D6A                 call    ds:GetTcpStatisticsEx
.text:00402D70
.text:00402D70 loc_402D70:                             ; CODE XREF: ReadTable(x,x,x)+97↑j
.text:00402D70                                         ; ReadTable(x,x,x)+B7↑j ...
.text:00402D70                 mov     ecx, [ebp-4]
.text:00402D73                 pop     edi
.text:00402D74                 xor     ecx, ebp        ; StackCookie
.text:00402D76                 pop     esi
.text:00402D77                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text:00402D7C                 mov     esp, ebp
.text:00402D7E                 pop     ebp
.text:00402D7F                 mov     esp, ebx
.text:00402D81                 pop     ebx
.text:00402D82                 retn    4
.text:00402D82 _ReadTable@12   endp
.text:00402D82
.text:00402D82 ; ---------------------------------------------------------------------------
.text:00402D85                 align 4
.text:00402D88 jpt_402B9A      dd offset loc_402BA1    ; DATA XREF: ReadTable(x,x,x)+3EE↑r
.text:00402D88                 dd offset loc_402BBD    ; jump table for switch statement
.text:00402D88                 dd offset loc_402BD9
.text:00402D88                 dd offset loc_402BF5
.text:00402D88                 dd offset loc_402C11
.text:00402D88                 dd offset def_402B9A
.text:00402D88                 dd offset loc_402C2D
.text:00402D88                 dd offset loc_402C49
.text:00402D88                 dd offset loc_402C7E
.text:00402D88                 dd offset loc_402C97
.text:00402D88                 dd offset def_402B9A
.text:00402D88                 dd offset loc_402C2D
.text:00402D88                 dd offset loc_402C65
.text:00402D88                 dd offset loc_402C7E
.text:00402D88                 dd offset loc_402CD9
.text:00402DC4
.text:00402DC4 ; =============== S U B R O U T I N E =======================================
.text:00402DC4
.text:00402DC4 ; Attributes: bp-based frame
.text:00402DC4
.text:00402DC4 sub_402DC4      proc near               ; CODE XREF: ReadTable(x,x,x)+407↑p
.text:00402DC4
.text:00402DC4 arg_4           = dword ptr  0Ch
.text:00402DC4 arg_C           = dword ptr  14h
.text:00402DC4 arg_10          = dword ptr  18h
.text:00402DC4
.text:00402DC4                 mov     edi, edi
.text:00402DC6                 push    ebp
.text:00402DC7                 mov     ebp, esp
.text:00402DC9                 mov     edx, [edx+0CCh]
.text:00402DCF                 mov     eax, [ebp+arg_4]
.text:00402DD2                 mov     eax, [eax+edx*4]
.text:00402DD5                 dec     eax             ; switch 21 cases
.text:00402DD6                 cmp     eax, 14h
.text:00402DD9                 ja      def_402DE0      ; jumptable 00402DE0 default case
.text:00402DDF                 push    esi
.text:00402DE0                 jmp     ds:jpt_402DE0[eax*4] ; switch jump
.text:00402DE7 ; ---------------------------------------------------------------------------
.text:00402DE7
.text:00402DE7 loc_402DE7:                             ; CODE XREF: sub_402DC4+1C↑j
.text:00402DE7                                         ; DATA XREF: .text:jpt_402DE0↓o
.text:00402DE7                 mov     eax, [ebp+arg_C] ; jumptable 00402DE0 case 1
.text:00402DEA                 mov     [ecx+8], eax
.text:00402DED                 jmp     loc_402ED0
.text:00402DF2 ; ---------------------------------------------------------------------------
.text:00402DF2
.text:00402DF2 loc_402DF2:                             ; CODE XREF: sub_402DC4+1C↑j
.text:00402DF2                                         ; DATA XREF: .text:jpt_402DE0↓o
.text:00402DF2                 mov     eax, [ebp+arg_10] ; jumptable 00402DE0 case 2
.text:00402DF5                 xor     edx, edx
.text:00402DF7                 mov     [ecx+60h], eax
.text:00402DFA                 test    eax, eax
.text:00402DFC                 jz      loc_402ED0
.text:00402E02                 mov     esi, [ebp+arg_C]
.text:00402E05
.text:00402E05 loc_402E05:                             ; CODE XREF: sub_402DC4+4C↓j
.text:00402E05                 mov     al, [edx+esi]
.text:00402E08                 mov     [ecx+edx+64h], al
.text:00402E0C                 inc     edx
.text:00402E0D                 cmp     edx, [ecx+60h]
.text:00402E10                 jb      short loc_402E05
.text:00402E12                 jmp     loc_402ED0
.text:00402E17 ; ---------------------------------------------------------------------------
.text:00402E17
.text:00402E17 loc_402E17:                             ; CODE XREF: sub_402DC4+1C↑j
.text:00402E17                                         ; DATA XREF: .text:jpt_402DE0↓o
.text:00402E17                 mov     eax, [ebp+arg_C] ; jumptable 00402DE0 case 3
.text:00402E1A                 mov     [ecx+0Ch], eax
.text:00402E1D                 jmp     loc_402ED0
.text:00402E22 ; ---------------------------------------------------------------------------
.text:00402E22
.text:00402E22 loc_402E22:                             ; CODE XREF: sub_402DC4+1C↑j
.text:00402E22                                         ; DATA XREF: .text:jpt_402DE0↓o
.text:00402E22                 mov     eax, [ebp+arg_C] ; jumptable 00402DE0 case 4
.text:00402E25                 mov     [ecx+10h], eax
.text:00402E28                 jmp     loc_402ED0
.text:00402E2D ; ---------------------------------------------------------------------------
.text:00402E2D
.text:00402E2D loc_402E2D:                             ; CODE XREF: sub_402DC4+1C↑j
.text:00402E2D                                         ; DATA XREF: .text:jpt_402DE0↓o
.text:00402E2D                 mov     eax, [ebp+arg_C] ; jumptable 00402DE0 case 5
.text:00402E30                 mov     [ecx+14h], eax
.text:00402E33                 jmp     loc_402ED0
.text:00402E38 ; ---------------------------------------------------------------------------
.text:00402E38
.text:00402E38 loc_402E38:                             ; CODE XREF: sub_402DC4+1C↑j
.text:00402E38                                         ; DATA XREF: .text:jpt_402DE0↓o
.text:00402E38                 mov     eax, [ebp+arg_10] ; jumptable 00402DE0 case 6
.text:00402E3B                 xor     edx, edx
.text:00402E3D                 mov     [ecx+18h], eax
.text:00402E40                 test    eax, eax
.text:00402E42                 jz      loc_402ED0
.text:00402E48                 mov     esi, [ebp+arg_C]
.text:00402E4B
.text:00402E4B loc_402E4B:                             ; CODE XREF: sub_402DC4+92↓j
.text:00402E4B                 mov     al, [edx+esi]
.text:00402E4E                 mov     [ecx+edx+1Ch], al
.text:00402E52                 inc     edx
.text:00402E53                 cmp     edx, [ecx+18h]
.text:00402E56                 jb      short loc_402E4B
.text:00402E58                 jmp     short loc_402ED0
.text:00402E5A ; ---------------------------------------------------------------------------
.text:00402E5A
.text:00402E5A loc_402E5A:                             ; CODE XREF: sub_402DC4+1C↑j
.text:00402E5A                                         ; DATA XREF: .text:jpt_402DE0↓o
.text:00402E5A                 mov     eax, [ebp+arg_C] ; jumptable 00402DE0 case 7
.text:00402E5D                 mov     [ecx+24h], eax
.text:00402E60                 jmp     short loc_402ED0
.text:00402E62 ; ---------------------------------------------------------------------------
.text:00402E62
.text:00402E62 loc_402E62:                             ; CODE XREF: sub_402DC4+1C↑j
.text:00402E62                                         ; DATA XREF: .text:jpt_402DE0↓o
.text:00402E62                 mov     eax, [ebp+arg_C] ; jumptable 00402DE0 case 8
.text:00402E65                 mov     [ecx+28h], eax
.text:00402E68                 jmp     short loc_402ED0
.text:00402E6A ; ---------------------------------------------------------------------------
.text:00402E6A
.text:00402E6A loc_402E6A:                             ; CODE XREF: sub_402DC4+1C↑j
.text:00402E6A                                         ; DATA XREF: .text:jpt_402DE0↓o
.text:00402E6A                 mov     eax, [ebp+arg_C] ; jumptable 00402DE0 case 9
.text:00402E6D                 mov     [ecx+2Ch], eax
.text:00402E70                 jmp     short loc_402ED0
.text:00402E72 ; ---------------------------------------------------------------------------
.text:00402E72
.text:00402E72 loc_402E72:                             ; CODE XREF: sub_402DC4+1C↑j
.text:00402E72                                         ; DATA XREF: .text:jpt_402DE0↓o
.text:00402E72                 mov     eax, [ebp+arg_C] ; jumptable 00402DE0 case 10
.text:00402E75                 mov     [ecx+30h], eax
.text:00402E78                 jmp     short loc_402ED0
.text:00402E7A ; ---------------------------------------------------------------------------
.text:00402E7A
.text:00402E7A loc_402E7A:                             ; CODE XREF: sub_402DC4+1C↑j
.text:00402E7A                                         ; DATA XREF: .text:jpt_402DE0↓o
.text:00402E7A                 mov     eax, [ebp+arg_C] ; jumptable 00402DE0 case 11
.text:00402E7D                 mov     [ecx+34h], eax
.text:00402E80                 jmp     short loc_402ED0
.text:00402E82 ; ---------------------------------------------------------------------------
.text:00402E82
.text:00402E82 loc_402E82:                             ; CODE XREF: sub_402DC4+1C↑j
.text:00402E82                                         ; DATA XREF: .text:jpt_402DE0↓o
.text:00402E82                 mov     eax, [ebp+arg_C] ; jumptable 00402DE0 case 12
.text:00402E85                 mov     [ecx+38h], eax
.text:00402E88                 jmp     short loc_402ED0
.text:00402E8A ; ---------------------------------------------------------------------------
.text:00402E8A
.text:00402E8A loc_402E8A:                             ; CODE XREF: sub_402DC4+1C↑j
.text:00402E8A                                         ; DATA XREF: .text:jpt_402DE0↓o
.text:00402E8A                 mov     eax, [ebp+arg_C] ; jumptable 00402DE0 case 13
.text:00402E8D                 mov     [ecx+3Ch], eax
.text:00402E90                 jmp     short loc_402ED0
.text:00402E92 ; ---------------------------------------------------------------------------
.text:00402E92
.text:00402E92 loc_402E92:                             ; CODE XREF: sub_402DC4+1C↑j
.text:00402E92                                         ; DATA XREF: .text:jpt_402DE0↓o
.text:00402E92                 mov     eax, [ebp+arg_C] ; jumptable 00402DE0 case 14
.text:00402E95                 mov     [ecx+40h], eax
.text:00402E98                 jmp     short loc_402ED0
.text:00402E9A ; ---------------------------------------------------------------------------
.text:00402E9A
.text:00402E9A loc_402E9A:                             ; CODE XREF: sub_402DC4+1C↑j
.text:00402E9A                                         ; DATA XREF: .text:jpt_402DE0↓o
.text:00402E9A                 mov     eax, [ebp+arg_C] ; jumptable 00402DE0 case 15
.text:00402E9D                 mov     [ecx+44h], eax
.text:00402EA0                 jmp     short loc_402ED0
.text:00402EA2 ; ---------------------------------------------------------------------------
.text:00402EA2
.text:00402EA2 loc_402EA2:                             ; CODE XREF: sub_402DC4+1C↑j
.text:00402EA2                                         ; DATA XREF: .text:jpt_402DE0↓o
.text:00402EA2                 mov     eax, [ebp+arg_C] ; jumptable 00402DE0 case 16
.text:00402EA5                 mov     [ecx+48h], eax
.text:00402EA8                 jmp     short loc_402ED0
.text:00402EAA ; ---------------------------------------------------------------------------
.text:00402EAA
.text:00402EAA loc_402EAA:                             ; CODE XREF: sub_402DC4+1C↑j
.text:00402EAA                                         ; DATA XREF: .text:jpt_402DE0↓o
.text:00402EAA                 mov     eax, [ebp+arg_C] ; jumptable 00402DE0 case 17
.text:00402EAD                 mov     [ecx+4Ch], eax
.text:00402EB0                 jmp     short loc_402ED0
.text:00402EB2 ; ---------------------------------------------------------------------------
.text:00402EB2
.text:00402EB2 loc_402EB2:                             ; CODE XREF: sub_402DC4+1C↑j
.text:00402EB2                                         ; DATA XREF: .text:jpt_402DE0↓o
.text:00402EB2                 mov     eax, [ebp+arg_C] ; jumptable 00402DE0 case 18
.text:00402EB5                 mov     [ecx+50h], eax
.text:00402EB8                 jmp     short loc_402ED0
.text:00402EBA ; ---------------------------------------------------------------------------
.text:00402EBA
.text:00402EBA loc_402EBA:                             ; CODE XREF: sub_402DC4+1C↑j
.text:00402EBA                                         ; DATA XREF: .text:jpt_402DE0↓o
.text:00402EBA                 mov     eax, [ebp+arg_C] ; jumptable 00402DE0 case 19
.text:00402EBD                 mov     [ecx+54h], eax
.text:00402EC0                 jmp     short loc_402ED0
.text:00402EC2 ; ---------------------------------------------------------------------------
.text:00402EC2
.text:00402EC2 loc_402EC2:                             ; CODE XREF: sub_402DC4+1C↑j
.text:00402EC2                                         ; DATA XREF: .text:jpt_402DE0↓o
.text:00402EC2                 mov     eax, [ebp+arg_C] ; jumptable 00402DE0 case 20
.text:00402EC5                 mov     [ecx+58h], eax
.text:00402EC8                 jmp     short loc_402ED0
.text:00402ECA ; ---------------------------------------------------------------------------
.text:00402ECA
.text:00402ECA loc_402ECA:                             ; CODE XREF: sub_402DC4+1C↑j
.text:00402ECA                                         ; DATA XREF: .text:jpt_402DE0↓o
.text:00402ECA                 mov     eax, [ebp+arg_C] ; jumptable 00402DE0 case 21
.text:00402ECD                 mov     [ecx+5Ch], eax
.text:00402ED0
.text:00402ED0 loc_402ED0:                             ; CODE XREF: sub_402DC4+29↑j
.text:00402ED0                                         ; sub_402DC4+38↑j ...
.text:00402ED0                 pop     esi
.text:00402ED1
.text:00402ED1 def_402DE0:                             ; CODE XREF: sub_402DC4+15↑j
.text:00402ED1                 pop     ebp             ; jumptable 00402DE0 default case
.text:00402ED2                 retn    18h
.text:00402ED2 sub_402DC4      endp
.text:00402ED2
.text:00402ED2 ; ---------------------------------------------------------------------------
.text:00402ED5                 align 4
.text:00402ED8 jpt_402DE0      dd offset loc_402DE7    ; DATA XREF: sub_402DC4+1C↑r
.text:00402ED8                 dd offset loc_402DF2    ; jump table for switch statement
.text:00402ED8                 dd offset loc_402E17
.text:00402ED8                 dd offset loc_402E22
.text:00402ED8                 dd offset loc_402E2D
.text:00402ED8                 dd offset loc_402E38
.text:00402ED8                 dd offset loc_402E5A
.text:00402ED8                 dd offset loc_402E62
.text:00402ED8                 dd offset loc_402E6A
.text:00402ED8                 dd offset loc_402E72
.text:00402ED8                 dd offset loc_402E7A
.text:00402ED8                 dd offset loc_402E82
.text:00402ED8                 dd offset loc_402E8A
.text:00402ED8                 dd offset loc_402E92
.text:00402ED8                 dd offset loc_402E9A
.text:00402ED8                 dd offset loc_402EA2
.text:00402ED8                 dd offset loc_402EAA
.text:00402ED8                 dd offset loc_402EB2
.text:00402ED8                 dd offset loc_402EBA
.text:00402ED8                 dd offset loc_402EC2
.text:00402ED8                 dd offset loc_402ECA
.text:00402F2C
.text:00402F2C ; =============== S U B R O U T I N E =======================================
.text:00402F2C
.text:00402F2C ; Attributes: bp-based frame
.text:00402F2C
.text:00402F2C sub_402F2C      proc near               ; CODE XREF: ReadTable(x,x,x)+423↑p
.text:00402F2C
.text:00402F2C arg_4           = dword ptr  0Ch
.text:00402F2C arg_C           = dword ptr  14h
.text:00402F2C
.text:00402F2C                 mov     edi, edi
.text:00402F2E                 push    ebp
.text:00402F2F                 mov     ebp, esp
.text:00402F31                 mov     edx, [edx+0CCh]
.text:00402F37                 mov     eax, [ebp+arg_4]
.text:00402F3A                 mov     eax, [eax+edx*4]
.text:00402F3D                 dec     eax             ; switch 19 cases
.text:00402F3E                 cmp     eax, 12h
.text:00402F41                 ja      def_402F47      ; jumptable 00402F47 default case
.text:00402F47                 jmp     ds:jpt_402F47[eax*4] ; switch jump
.text:00402F4E ; ---------------------------------------------------------------------------
.text:00402F4E
.text:00402F4E loc_402F4E:                             ; CODE XREF: sub_402F2C+1B↑j
.text:00402F4E                                         ; DATA XREF: .text:jpt_402F47↓o
.text:00402F4E                 mov     eax, [ebp+arg_C] ; jumptable 00402F47 case 1
.text:00402F51                 mov     [ecx+8], eax
.text:00402F54                 jmp     def_402F47      ; jumptable 00402F47 default case
.text:00402F59 ; ---------------------------------------------------------------------------
.text:00402F59
.text:00402F59 loc_402F59:                             ; CODE XREF: sub_402F2C+1B↑j
.text:00402F59                                         ; DATA XREF: .text:jpt_402F47↓o
.text:00402F59                 mov     eax, [ebp+arg_C] ; jumptable 00402F47 case 2
.text:00402F5C                 mov     [ecx+0Ch], eax
.text:00402F5F                 jmp     def_402F47      ; jumptable 00402F47 default case
.text:00402F64 ; ---------------------------------------------------------------------------
.text:00402F64
.text:00402F64 loc_402F64:                             ; CODE XREF: sub_402F2C+1B↑j
.text:00402F64                                         ; DATA XREF: .text:jpt_402F47↓o
.text:00402F64                 mov     eax, [ebp+arg_C] ; jumptable 00402F47 case 3
.text:00402F67                 mov     [ecx+10h], eax
.text:00402F6A                 jmp     short def_402F47 ; jumptable 00402F47 default case
.text:00402F6C ; ---------------------------------------------------------------------------
.text:00402F6C
.text:00402F6C loc_402F6C:                             ; CODE XREF: sub_402F2C+1B↑j
.text:00402F6C                                         ; DATA XREF: .text:jpt_402F47↓o
.text:00402F6C                 mov     eax, [ebp+arg_C] ; jumptable 00402F47 case 4
.text:00402F6F                 mov     [ecx+14h], eax
.text:00402F72                 jmp     short def_402F47 ; jumptable 00402F47 default case
.text:00402F74 ; ---------------------------------------------------------------------------
.text:00402F74
.text:00402F74 loc_402F74:                             ; CODE XREF: sub_402F2C+1B↑j
.text:00402F74                                         ; DATA XREF: .text:jpt_402F47↓o
.text:00402F74                 mov     eax, [ebp+arg_C] ; jumptable 00402F47 case 5
.text:00402F77                 mov     [ecx+18h], eax
.text:00402F7A                 jmp     short def_402F47 ; jumptable 00402F47 default case
.text:00402F7C ; ---------------------------------------------------------------------------
.text:00402F7C
.text:00402F7C loc_402F7C:                             ; CODE XREF: sub_402F2C+1B↑j
.text:00402F7C                                         ; DATA XREF: .text:jpt_402F47↓o
.text:00402F7C                 mov     eax, [ebp+arg_C] ; jumptable 00402F47 case 6
.text:00402F7F                 mov     [ecx+1Ch], eax
.text:00402F82                 jmp     short def_402F47 ; jumptable 00402F47 default case
.text:00402F84 ; ---------------------------------------------------------------------------
.text:00402F84
.text:00402F84 loc_402F84:                             ; CODE XREF: sub_402F2C+1B↑j
.text:00402F84                                         ; DATA XREF: .text:jpt_402F47↓o
.text:00402F84                 mov     eax, [ebp+arg_C] ; jumptable 00402F47 case 7
.text:00402F87                 mov     [ecx+20h], eax
.text:00402F8A                 jmp     short def_402F47 ; jumptable 00402F47 default case
.text:00402F8C ; ---------------------------------------------------------------------------
.text:00402F8C
.text:00402F8C loc_402F8C:                             ; CODE XREF: sub_402F2C+1B↑j
.text:00402F8C                                         ; DATA XREF: .text:jpt_402F47↓o
.text:00402F8C                 mov     eax, [ebp+arg_C] ; jumptable 00402F47 case 8
.text:00402F8F                 mov     [ecx+24h], eax
.text:00402F92                 jmp     short def_402F47 ; jumptable 00402F47 default case
.text:00402F94 ; ---------------------------------------------------------------------------
.text:00402F94
.text:00402F94 loc_402F94:                             ; CODE XREF: sub_402F2C+1B↑j
.text:00402F94                                         ; DATA XREF: .text:jpt_402F47↓o
.text:00402F94                 mov     eax, [ebp+arg_C] ; jumptable 00402F47 case 9
.text:00402F97                 mov     [ecx+28h], eax
.text:00402F9A                 jmp     short def_402F47 ; jumptable 00402F47 default case
.text:00402F9C ; ---------------------------------------------------------------------------
.text:00402F9C
.text:00402F9C loc_402F9C:                             ; CODE XREF: sub_402F2C+1B↑j
.text:00402F9C                                         ; DATA XREF: .text:jpt_402F47↓o
.text:00402F9C                 mov     eax, [ebp+arg_C] ; jumptable 00402F47 case 10
.text:00402F9F                 mov     [ecx+2Ch], eax
.text:00402FA2                 jmp     short def_402F47 ; jumptable 00402F47 default case
.text:00402FA4 ; ---------------------------------------------------------------------------
.text:00402FA4
.text:00402FA4 loc_402FA4:                             ; CODE XREF: sub_402F2C+1B↑j
.text:00402FA4                                         ; DATA XREF: .text:jpt_402F47↓o
.text:00402FA4                 mov     eax, [ebp+arg_C] ; jumptable 00402F47 case 11
.text:00402FA7                 mov     [ecx+34h], eax
.text:00402FAA                 jmp     short def_402F47 ; jumptable 00402F47 default case
.text:00402FAC ; ---------------------------------------------------------------------------
.text:00402FAC
.text:00402FAC loc_402FAC:                             ; CODE XREF: sub_402F2C+1B↑j
.text:00402FAC                                         ; DATA XREF: .text:jpt_402F47↓o
.text:00402FAC                 mov     eax, [ebp+arg_C] ; jumptable 00402F47 case 12
.text:00402FAF                 mov     [ecx+38h], eax
.text:00402FB2                 jmp     short def_402F47 ; jumptable 00402F47 default case
.text:00402FB4 ; ---------------------------------------------------------------------------
.text:00402FB4
.text:00402FB4 loc_402FB4:                             ; CODE XREF: sub_402F2C+1B↑j
.text:00402FB4                                         ; DATA XREF: .text:jpt_402F47↓o
.text:00402FB4                 mov     eax, [ebp+arg_C] ; jumptable 00402F47 case 13
.text:00402FB7                 mov     [ecx+3Ch], eax
.text:00402FBA                 jmp     short def_402F47 ; jumptable 00402F47 default case
.text:00402FBC ; ---------------------------------------------------------------------------
.text:00402FBC
.text:00402FBC loc_402FBC:                             ; CODE XREF: sub_402F2C+1B↑j
.text:00402FBC                                         ; DATA XREF: .text:jpt_402F47↓o
.text:00402FBC                 mov     eax, [ebp+arg_C] ; jumptable 00402F47 case 14
.text:00402FBF                 mov     [ecx+40h], eax
.text:00402FC2                 jmp     short def_402F47 ; jumptable 00402F47 default case
.text:00402FC4 ; ---------------------------------------------------------------------------
.text:00402FC4
.text:00402FC4 loc_402FC4:                             ; CODE XREF: sub_402F2C+1B↑j
.text:00402FC4                                         ; DATA XREF: .text:jpt_402F47↓o
.text:00402FC4                 mov     eax, [ebp+arg_C] ; jumptable 00402F47 case 15
.text:00402FC7                 mov     [ecx+44h], eax
.text:00402FCA                 jmp     short def_402F47 ; jumptable 00402F47 default case
.text:00402FCC ; ---------------------------------------------------------------------------
.text:00402FCC
.text:00402FCC loc_402FCC:                             ; CODE XREF: sub_402F2C+1B↑j
.text:00402FCC                                         ; DATA XREF: .text:jpt_402F47↓o
.text:00402FCC                 mov     eax, [ebp+arg_C] ; jumptable 00402F47 case 16
.text:00402FCF                 mov     [ecx+48h], eax
.text:00402FD2                 jmp     short def_402F47 ; jumptable 00402F47 default case
.text:00402FD4 ; ---------------------------------------------------------------------------
.text:00402FD4
.text:00402FD4 loc_402FD4:                             ; CODE XREF: sub_402F2C+1B↑j
.text:00402FD4                                         ; DATA XREF: .text:jpt_402F47↓o
.text:00402FD4                 mov     eax, [ebp+arg_C] ; jumptable 00402F47 case 17
.text:00402FD7                 mov     [ecx+4Ch], eax
.text:00402FDA                 jmp     short def_402F47 ; jumptable 00402F47 default case
.text:00402FDC ; ---------------------------------------------------------------------------
.text:00402FDC
.text:00402FDC loc_402FDC:                             ; CODE XREF: sub_402F2C+1B↑j
.text:00402FDC                                         ; DATA XREF: .text:jpt_402F47↓o
.text:00402FDC                 mov     eax, [ebp+arg_C] ; jumptable 00402F47 case 18
.text:00402FDF                 mov     [ecx+50h], eax
.text:00402FE2                 jmp     short def_402F47 ; jumptable 00402F47 default case
.text:00402FE4 ; ---------------------------------------------------------------------------
.text:00402FE4
.text:00402FE4 loc_402FE4:                             ; CODE XREF: sub_402F2C+1B↑j
.text:00402FE4                                         ; DATA XREF: .text:jpt_402F47↓o
.text:00402FE4                 mov     eax, [ebp+arg_C] ; jumptable 00402F47 case 19
.text:00402FE7                 mov     [ecx+54h], eax
.text:00402FEA
.text:00402FEA def_402F47:                             ; CODE XREF: sub_402F2C+15↑j
.text:00402FEA                                         ; sub_402F2C+28↑j ...
.text:00402FEA                 pop     ebp             ; jumptable 00402F47 default case
.text:00402FEB                 retn    18h
.text:00402FEB sub_402F2C      endp
.text:00402FEB
.text:00402FEB ; ---------------------------------------------------------------------------
.text:00402FEE                 align 10h
.text:00402FF0 jpt_402F47      dd offset loc_402F4E    ; DATA XREF: sub_402F2C+1B↑r
.text:00402FF0                 dd offset loc_402F59    ; jump table for switch statement
.text:00402FF0                 dd offset loc_402F64
.text:00402FF0                 dd offset loc_402F6C
.text:00402FF0                 dd offset loc_402F74
.text:00402FF0                 dd offset loc_402F7C
.text:00402FF0                 dd offset loc_402F84
.text:00402FF0                 dd offset loc_402F8C
.text:00402FF0                 dd offset loc_402F94
.text:00402FF0                 dd offset loc_402F9C
.text:00402FF0                 dd offset loc_402FA4
.text:00402FF0                 dd offset loc_402FAC
.text:00402FF0                 dd offset loc_402FB4
.text:00402FF0                 dd offset loc_402FBC
.text:00402FF0                 dd offset loc_402FC4
.text:00402FF0                 dd offset loc_402FCC
.text:00402FF0                 dd offset loc_402FD4
.text:00402FF0                 dd offset loc_402FDC
.text:00402FF0                 dd offset loc_402FE4
.text:0040303C
.text:0040303C ; =============== S U B R O U T I N E =======================================
.text:0040303C
.text:0040303C ; Attributes: bp-based frame
.text:0040303C
.text:0040303C sub_40303C      proc near               ; CODE XREF: ReadTable(x,x,x)+43F↑p
.text:0040303C
.text:0040303C arg_4           = dword ptr  0Ch
.text:0040303C arg_C           = dword ptr  14h
.text:0040303C
.text:0040303C                 mov     edi, edi
.text:0040303E                 push    ebp
.text:0040303F                 mov     ebp, esp
.text:00403041                 mov     edx, [edx+0CCh]
.text:00403047                 mov     eax, [ebp+arg_4]
.text:0040304A                 push    esi
.text:0040304B                 mov     esi, ecx
.text:0040304D                 mov     eax, [eax+edx*4]
.text:00403050                 sub     eax, 1
.text:00403053                 jz      short loc_40309D
.text:00403055                 sub     eax, 1
.text:00403058                 jz      short loc_403095
.text:0040305A                 sub     eax, 1
.text:0040305D                 jz      short loc_403079
.text:0040305F                 sub     eax, 1
.text:00403062                 jz      short loc_403071
.text:00403064                 sub     eax, 1
.text:00403067                 jnz     short loc_4030B7
.text:00403069                 mov     eax, [ebp+arg_C]
.text:0040306C                 mov     [esi+18h], eax
.text:0040306F                 jmp     short loc_4030B7
.text:00403071 ; ---------------------------------------------------------------------------
.text:00403071
.text:00403071 loc_403071:                             ; CODE XREF: sub_40303C+26↑j
.text:00403071                 mov     eax, [ebp+arg_C]
.text:00403074                 mov     [esi+14h], eax
.text:00403077                 jmp     short loc_4030B7
.text:00403079 ; ---------------------------------------------------------------------------
.text:00403079
.text:00403079 loc_403079:                             ; CODE XREF: sub_40303C+21↑j
.text:00403079                 mov     ecx, [ebp+arg_C]
.text:0040307C                 mov     al, [ecx]
.text:0040307E                 mov     [esi+10h], al
.text:00403081                 mov     al, [ecx+1]
.text:00403084                 mov     [esi+11h], al
.text:00403087                 mov     al, [ecx+2]
.text:0040308A                 mov     [esi+12h], al
.text:0040308D                 mov     al, [ecx+3]
.text:00403090                 mov     [esi+13h], al
.text:00403093                 jmp     short loc_4030B7
.text:00403095 ; ---------------------------------------------------------------------------
.text:00403095
.text:00403095 loc_403095:                             ; CODE XREF: sub_40303C+1C↑j
.text:00403095                 mov     eax, [ebp+arg_C]
.text:00403098                 mov     [esi+0Ch], eax
.text:0040309B                 jmp     short loc_4030B7
.text:0040309D ; ---------------------------------------------------------------------------
.text:0040309D
.text:0040309D loc_40309D:                             ; CODE XREF: sub_40303C+17↑j
.text:0040309D                 mov     ecx, [ebp+arg_C]
.text:004030A0                 mov     al, [ecx]
.text:004030A2                 mov     [esi+8], al
.text:004030A5                 mov     al, [ecx+1]
.text:004030A8                 mov     [esi+9], al
.text:004030AB                 mov     al, [ecx+2]
.text:004030AE                 mov     [esi+0Ah], al
.text:004030B1                 mov     al, [ecx+3]
.text:004030B4                 mov     [esi+0Bh], al
.text:004030B7
.text:004030B7 loc_4030B7:                             ; CODE XREF: sub_40303C+2B↑j
.text:004030B7                                         ; sub_40303C+33↑j ...
.text:004030B7                 pop     esi
.text:004030B8                 pop     ebp
.text:004030B9                 retn    18h
.text:004030B9 sub_40303C      endp
.text:004030B9
.text:004030BC
.text:004030BC ; =============== S U B R O U T I N E =======================================
.text:004030BC
.text:004030BC ; Attributes: bp-based frame
.text:004030BC
.text:004030BC sub_4030BC      proc near               ; CODE XREF: ReadTable(x,x,x)+45B↑p
.text:004030BC
.text:004030BC arg_4           = dword ptr  0Ch
.text:004030BC arg_C           = dword ptr  14h
.text:004030BC
.text:004030BC                 mov     edi, edi
.text:004030BE                 push    ebp
.text:004030BF                 mov     ebp, esp
.text:004030C1                 mov     edx, [edx+0CCh]
.text:004030C7                 mov     eax, [ebp+arg_4]
.text:004030CA                 push    esi
.text:004030CB                 mov     esi, ecx
.text:004030CD                 mov     eax, [eax+edx*4]
.text:004030D0                 dec     eax             ; switch 12 cases
.text:004030D1                 cmp     eax, 0Bh
.text:004030D4                 ja      def_4030DA      ; jumptable 004030DA default case
.text:004030DA                 jmp     ds:jpt_4030DA[eax*4] ; switch jump
.text:004030E1 ; ---------------------------------------------------------------------------
.text:004030E1
.text:004030E1 loc_4030E1:                             ; CODE XREF: sub_4030BC+1E↑j
.text:004030E1                                         ; DATA XREF: .text:jpt_4030DA↓o
.text:004030E1                 mov     ecx, [ebp+arg_C] ; jumptable 004030DA case 1
.text:004030E4                 mov     al, [ecx]
.text:004030E6                 mov     [esi+8], al
.text:004030E9                 mov     al, [ecx+1]
.text:004030EC                 mov     [esi+9], al
.text:004030EF                 mov     al, [ecx+2]
.text:004030F2                 mov     [esi+0Ah], al
.text:004030F5                 mov     al, [ecx+3]
.text:004030F8                 mov     [esi+0Bh], al
.text:004030FB                 jmp     short def_4030DA ; jumptable 004030DA default case
.text:004030FD ; ---------------------------------------------------------------------------
.text:004030FD
.text:004030FD loc_4030FD:                             ; CODE XREF: sub_4030BC+1E↑j
.text:004030FD                                         ; DATA XREF: .text:jpt_4030DA↓o
.text:004030FD                 mov     eax, [ebp+arg_C] ; jumptable 004030DA case 2
.text:00403100                 mov     [esi+0Ch], eax
.text:00403103                 jmp     short def_4030DA ; jumptable 004030DA default case
.text:00403105 ; ---------------------------------------------------------------------------
.text:00403105
.text:00403105 loc_403105:                             ; CODE XREF: sub_4030BC+1E↑j
.text:00403105                                         ; DATA XREF: .text:jpt_4030DA↓o
.text:00403105                 mov     eax, [ebp+arg_C] ; jumptable 004030DA case 3
.text:00403108                 mov     [esi+10h], eax
.text:0040310B                 jmp     short def_4030DA ; jumptable 004030DA default case
.text:0040310D ; ---------------------------------------------------------------------------
.text:0040310D
.text:0040310D loc_40310D:                             ; CODE XREF: sub_4030BC+1E↑j
.text:0040310D                                         ; DATA XREF: .text:jpt_4030DA↓o
.text:0040310D                 mov     eax, [ebp+arg_C] ; jumptable 004030DA case 4
.text:00403110                 mov     [esi+14h], eax
.text:00403113                 jmp     short def_4030DA ; jumptable 004030DA default case
.text:00403115 ; ---------------------------------------------------------------------------
.text:00403115
.text:00403115 loc_403115:                             ; CODE XREF: sub_4030BC+1E↑j
.text:00403115                                         ; DATA XREF: .text:jpt_4030DA↓o
.text:00403115                 mov     eax, [ebp+arg_C] ; jumptable 004030DA case 5
.text:00403118                 mov     [esi+18h], eax
.text:0040311B                 jmp     short def_4030DA ; jumptable 004030DA default case
.text:0040311D ; ---------------------------------------------------------------------------
.text:0040311D
.text:0040311D loc_40311D:                             ; CODE XREF: sub_4030BC+1E↑j
.text:0040311D                                         ; DATA XREF: .text:jpt_4030DA↓o
.text:0040311D                 mov     eax, [ebp+arg_C] ; jumptable 004030DA case 6
.text:00403120                 mov     [esi+1Ch], eax
.text:00403123                 jmp     short def_4030DA ; jumptable 004030DA default case
.text:00403125 ; ---------------------------------------------------------------------------
.text:00403125
.text:00403125 loc_403125:                             ; CODE XREF: sub_4030BC+1E↑j
.text:00403125                                         ; DATA XREF: .text:jpt_4030DA↓o
.text:00403125                 mov     ecx, [ebp+arg_C] ; jumptable 004030DA case 7
.text:00403128                 mov     al, [ecx]
.text:0040312A                 mov     [esi+20h], al
.text:0040312D                 mov     al, [ecx+1]
.text:00403130                 mov     [esi+21h], al
.text:00403133                 mov     al, [ecx+2]
.text:00403136                 mov     [esi+22h], al
.text:00403139                 mov     al, [ecx+3]
.text:0040313C                 mov     [esi+23h], al
.text:0040313F                 jmp     short def_4030DA ; jumptable 004030DA default case
.text:00403141 ; ---------------------------------------------------------------------------
.text:00403141
.text:00403141 loc_403141:                             ; CODE XREF: sub_4030BC+1E↑j
.text:00403141                                         ; DATA XREF: .text:jpt_4030DA↓o
.text:00403141                 mov     eax, [ebp+arg_C] ; jumptable 004030DA case 8
.text:00403144                 mov     [esi+24h], eax
.text:00403147                 jmp     short def_4030DA ; jumptable 004030DA default case
.text:00403149 ; ---------------------------------------------------------------------------
.text:00403149
.text:00403149 loc_403149:                             ; CODE XREF: sub_4030BC+1E↑j
.text:00403149                                         ; DATA XREF: .text:jpt_4030DA↓o
.text:00403149                 mov     eax, [ebp+arg_C] ; jumptable 004030DA case 9
.text:0040314C                 mov     [esi+28h], eax
.text:0040314F                 jmp     short def_4030DA ; jumptable 004030DA default case
.text:00403151 ; ---------------------------------------------------------------------------
.text:00403151
.text:00403151 loc_403151:                             ; CODE XREF: sub_4030BC+1E↑j
.text:00403151                                         ; DATA XREF: .text:jpt_4030DA↓o
.text:00403151                 mov     eax, [ebp+arg_C] ; jumptable 004030DA case 10
.text:00403154                 mov     [esi+2Ch], eax
.text:00403157                 jmp     short def_4030DA ; jumptable 004030DA default case
.text:00403159 ; ---------------------------------------------------------------------------
.text:00403159
.text:00403159 loc_403159:                             ; CODE XREF: sub_4030BC+1E↑j
.text:00403159                                         ; DATA XREF: .text:jpt_4030DA↓o
.text:00403159                 mov     ecx, [ebp+arg_C] ; jumptable 004030DA case 11
.text:0040315C                 mov     al, [ecx]
.text:0040315E                 mov     [esi+30h], al
.text:00403161                 mov     al, [ecx+1]
.text:00403164                 mov     [esi+31h], al
.text:00403167                 mov     al, [ecx+2]
.text:0040316A                 mov     [esi+32h], al
.text:0040316D                 mov     al, [ecx+3]
.text:00403170                 mov     [esi+33h], al
.text:00403173                 jmp     short def_4030DA ; jumptable 004030DA default case
.text:00403175 ; ---------------------------------------------------------------------------
.text:00403175
.text:00403175 loc_403175:                             ; CODE XREF: sub_4030BC+1E↑j
.text:00403175                                         ; DATA XREF: .text:jpt_4030DA↓o
.text:00403175                 mov     eax, [ebp+arg_C] ; jumptable 004030DA case 12
.text:00403178                 mov     [esi+34h], eax
.text:0040317B
.text:0040317B def_4030DA:                             ; CODE XREF: sub_4030BC+18↑j
.text:0040317B                                         ; sub_4030BC+3F↑j ...
.text:0040317B                 pop     esi             ; jumptable 004030DA default case
.text:0040317C                 pop     ebp
.text:0040317D                 retn    18h
.text:0040317D sub_4030BC      endp
.text:0040317D
.text:0040317D ; ---------------------------------------------------------------------------
.text:00403180 jpt_4030DA      dd offset loc_4030E1    ; DATA XREF: sub_4030BC+1E↑r
.text:00403180                 dd offset loc_4030FD    ; jump table for switch statement
.text:00403180                 dd offset loc_403105
.text:00403180                 dd offset loc_40310D
.text:00403180                 dd offset loc_403115
.text:00403180                 dd offset loc_40311D
.text:00403180                 dd offset loc_403125
.text:00403180                 dd offset loc_403141
.text:00403180                 dd offset loc_403149
.text:00403180                 dd offset loc_403151
.text:00403180                 dd offset loc_403159
.text:00403180                 dd offset loc_403175
.text:004031B0
.text:004031B0 ; =============== S U B R O U T I N E =======================================
.text:004031B0
.text:004031B0 ; Attributes: bp-based frame
.text:004031B0
.text:004031B0 sub_4031B0      proc near               ; CODE XREF: ReadTable(x,x,x)+477↑p
.text:004031B0
.text:004031B0 arg_4           = dword ptr  0Ch
.text:004031B0 arg_C           = dword ptr  14h
.text:004031B0 arg_10          = dword ptr  18h
.text:004031B0
.text:004031B0                 mov     edi, edi
.text:004031B2                 push    ebp
.text:004031B3                 mov     ebp, esp
.text:004031B5                 mov     edx, [edx+0CCh]
.text:004031BB                 mov     eax, [ebp+arg_4]
.text:004031BE                 push    esi
.text:004031BF                 mov     esi, ecx
.text:004031C1                 mov     eax, [eax+edx*4]
.text:004031C4                 sub     eax, 1
.text:004031C7                 jz      short loc_40321A
.text:004031C9                 sub     eax, 1
.text:004031CC                 jz      short loc_4031FC
.text:004031CE                 sub     eax, 1
.text:004031D1                 jz      short loc_4031E0
.text:004031D3                 sub     eax, 1
.text:004031D6                 jnz     short loc_403220
.text:004031D8                 mov     eax, [ebp+arg_C]
.text:004031DB                 mov     [esi+1Ch], eax
.text:004031DE                 jmp     short loc_403220
.text:004031E0 ; ---------------------------------------------------------------------------
.text:004031E0
.text:004031E0 loc_4031E0:                             ; CODE XREF: sub_4031B0+21↑j
.text:004031E0                 mov     ecx, [ebp+arg_C]
.text:004031E3                 mov     al, [ecx]
.text:004031E5                 mov     [esi+18h], al
.text:004031E8                 mov     al, [ecx+1]
.text:004031EB                 mov     [esi+19h], al
.text:004031EE                 mov     al, [ecx+2]
.text:004031F1                 mov     [esi+1Ah], al
.text:004031F4                 mov     al, [ecx+3]
.text:004031F7                 mov     [esi+1Bh], al
.text:004031FA                 jmp     short loc_403220
.text:004031FC ; ---------------------------------------------------------------------------
.text:004031FC
.text:004031FC loc_4031FC:                             ; CODE XREF: sub_4031B0+1C↑j
.text:004031FC                 mov     eax, [ebp+arg_10]
.text:004031FF                 xor     ecx, ecx
.text:00403201                 mov     [esi+0Ch], eax
.text:00403204                 test    eax, eax
.text:00403206                 jz      short loc_403220
.text:00403208                 mov     edx, [ebp+arg_C]
.text:0040320B
.text:0040320B loc_40320B:                             ; CODE XREF: sub_4031B0+66↓j
.text:0040320B                 mov     al, [ecx+edx]
.text:0040320E                 mov     [esi+ecx+10h], al
.text:00403212                 inc     ecx
.text:00403213                 cmp     ecx, [esi+0Ch]
.text:00403216                 jb      short loc_40320B
.text:00403218                 jmp     short loc_403220
.text:0040321A ; ---------------------------------------------------------------------------
.text:0040321A
.text:0040321A loc_40321A:                             ; CODE XREF: sub_4031B0+17↑j
.text:0040321A                 mov     eax, [ebp+arg_C]
.text:0040321D                 mov     [esi+8], eax
.text:00403220
.text:00403220 loc_403220:                             ; CODE XREF: sub_4031B0+26↑j
.text:00403220                                         ; sub_4031B0+2E↑j ...
.text:00403220                 pop     esi
.text:00403221                 pop     ebp
.text:00403222                 retn    18h
.text:00403222 sub_4031B0      endp
.text:00403222
.text:00403225
.text:00403225 ; =============== S U B R O U T I N E =======================================
.text:00403225
.text:00403225 ; Attributes: bp-based frame
.text:00403225
.text:00403225 sub_403225      proc near               ; CODE XREF: ReadTable(x,x,x)+493↑p
.text:00403225
.text:00403225 arg_4           = dword ptr  0Ch
.text:00403225 arg_C           = dword ptr  14h
.text:00403225
.text:00403225                 mov     edi, edi
.text:00403227                 push    ebp
.text:00403228                 mov     ebp, esp
.text:0040322A                 mov     edx, [edx+0CCh]
.text:00403230                 mov     eax, [ebp+arg_4]
.text:00403233                 mov     eax, [eax+edx*4]
.text:00403236                 dec     eax             ; switch 15 cases
.text:00403237                 cmp     eax, 0Eh
.text:0040323A                 ja      short def_40323C ; jumptable 0040323C default case, case 13
.text:0040323C                 jmp     ds:jpt_40323C[eax*4] ; switch jump
.text:00403243 ; ---------------------------------------------------------------------------
.text:00403243
.text:00403243 loc_403243:                             ; CODE XREF: sub_403225+17↑j
.text:00403243                                         ; DATA XREF: .text:jpt_40323C↓o
.text:00403243                 mov     eax, [ebp+arg_C] ; jumptable 0040323C case 1
.text:00403246                 mov     [ecx+8], eax
.text:00403249                 jmp     short def_40323C ; jumptable 0040323C default case, case 13
.text:0040324B ; ---------------------------------------------------------------------------
.text:0040324B
.text:0040324B loc_40324B:                             ; CODE XREF: sub_403225+17↑j
.text:0040324B                                         ; DATA XREF: .text:jpt_40323C↓o
.text:0040324B                 mov     eax, [ebp+arg_C] ; jumptable 0040323C case 2
.text:0040324E                 mov     [ecx+0Ch], eax
.text:00403251                 jmp     short def_40323C ; jumptable 0040323C default case, case 13
.text:00403253 ; ---------------------------------------------------------------------------
.text:00403253
.text:00403253 loc_403253:                             ; CODE XREF: sub_403225+17↑j
.text:00403253                                         ; DATA XREF: .text:jpt_40323C↓o
.text:00403253                 mov     eax, [ebp+arg_C] ; jumptable 0040323C case 3
.text:00403256                 mov     [ecx+10h], eax
.text:00403259                 jmp     short def_40323C ; jumptable 0040323C default case, case 13
.text:0040325B ; ---------------------------------------------------------------------------
.text:0040325B
.text:0040325B loc_40325B:                             ; CODE XREF: sub_403225+17↑j
.text:0040325B                                         ; DATA XREF: .text:jpt_40323C↓o
.text:0040325B                 mov     eax, [ebp+arg_C] ; jumptable 0040323C case 4
.text:0040325E                 mov     [ecx+14h], eax
.text:00403261                 jmp     short def_40323C ; jumptable 0040323C default case, case 13
.text:00403263 ; ---------------------------------------------------------------------------
.text:00403263
.text:00403263 loc_403263:                             ; CODE XREF: sub_403225+17↑j
.text:00403263                                         ; DATA XREF: .text:jpt_40323C↓o
.text:00403263                 mov     eax, [ebp+arg_C] ; jumptable 0040323C case 5
.text:00403266                 mov     [ecx+18h], eax
.text:00403269                 jmp     short def_40323C ; jumptable 0040323C default case, case 13
.text:0040326B ; ---------------------------------------------------------------------------
.text:0040326B
.text:0040326B loc_40326B:                             ; CODE XREF: sub_403225+17↑j
.text:0040326B                                         ; DATA XREF: .text:jpt_40323C↓o
.text:0040326B                 mov     eax, [ebp+arg_C] ; jumptable 0040323C case 6
.text:0040326E                 mov     [ecx+1Ch], eax
.text:00403271                 jmp     short def_40323C ; jumptable 0040323C default case, case 13
.text:00403273 ; ---------------------------------------------------------------------------
.text:00403273
.text:00403273 loc_403273:                             ; CODE XREF: sub_403225+17↑j
.text:00403273                                         ; DATA XREF: .text:jpt_40323C↓o
.text:00403273                 mov     eax, [ebp+arg_C] ; jumptable 0040323C case 7
.text:00403276                 mov     [ecx+20h], eax
.text:00403279                 jmp     short def_40323C ; jumptable 0040323C default case, case 13
.text:0040327B ; ---------------------------------------------------------------------------
.text:0040327B
.text:0040327B loc_40327B:                             ; CODE XREF: sub_403225+17↑j
.text:0040327B                                         ; DATA XREF: .text:jpt_40323C↓o
.text:0040327B                 mov     eax, [ebp+arg_C] ; jumptable 0040323C case 8
.text:0040327E                 mov     [ecx+24h], eax
.text:00403281                 jmp     short def_40323C ; jumptable 0040323C default case, case 13
.text:00403283 ; ---------------------------------------------------------------------------
.text:00403283
.text:00403283 loc_403283:                             ; CODE XREF: sub_403225+17↑j
.text:00403283                                         ; DATA XREF: .text:jpt_40323C↓o
.text:00403283                 mov     eax, [ebp+arg_C] ; jumptable 0040323C case 9
.text:00403286                 mov     [ecx+28h], eax
.text:00403289                 jmp     short def_40323C ; jumptable 0040323C default case, case 13
.text:0040328B ; ---------------------------------------------------------------------------
.text:0040328B
.text:0040328B loc_40328B:                             ; CODE XREF: sub_403225+17↑j
.text:0040328B                                         ; DATA XREF: .text:jpt_40323C↓o
.text:0040328B                 mov     eax, [ebp+arg_C] ; jumptable 0040323C case 10
.text:0040328E                 mov     [ecx+2Ch], eax
.text:00403291                 jmp     short def_40323C ; jumptable 0040323C default case, case 13
.text:00403293 ; ---------------------------------------------------------------------------
.text:00403293
.text:00403293 loc_403293:                             ; CODE XREF: sub_403225+17↑j
.text:00403293                                         ; DATA XREF: .text:jpt_40323C↓o
.text:00403293                 mov     eax, [ebp+arg_C] ; jumptable 0040323C case 11
.text:00403296                 mov     [ecx+30h], eax
.text:00403299                 jmp     short def_40323C ; jumptable 0040323C default case, case 13
.text:0040329B ; ---------------------------------------------------------------------------
.text:0040329B
.text:0040329B loc_40329B:                             ; CODE XREF: sub_403225+17↑j
.text:0040329B                                         ; DATA XREF: .text:jpt_40323C↓o
.text:0040329B                 mov     eax, [ebp+arg_C] ; jumptable 0040323C case 12
.text:0040329E                 mov     [ecx+34h], eax
.text:004032A1                 jmp     short def_40323C ; jumptable 0040323C default case, case 13
.text:004032A3 ; ---------------------------------------------------------------------------
.text:004032A3
.text:004032A3 loc_4032A3:                             ; CODE XREF: sub_403225+17↑j
.text:004032A3                                         ; DATA XREF: .text:jpt_40323C↓o
.text:004032A3                 mov     eax, [ebp+arg_C] ; jumptable 0040323C case 14
.text:004032A6                 mov     [ecx+38h], eax
.text:004032A9                 jmp     short def_40323C ; jumptable 0040323C default case, case 13
.text:004032AB ; ---------------------------------------------------------------------------
.text:004032AB
.text:004032AB loc_4032AB:                             ; CODE XREF: sub_403225+17↑j
.text:004032AB                                         ; DATA XREF: .text:jpt_40323C↓o
.text:004032AB                 mov     eax, [ebp+arg_C] ; jumptable 0040323C case 15
.text:004032AE                 mov     [ecx+3Ch], eax
.text:004032B1
.text:004032B1 def_40323C:                             ; CODE XREF: sub_403225+15↑j
.text:004032B1                                         ; sub_403225+17↑j ...
.text:004032B1                 pop     ebp             ; jumptable 0040323C default case, case 13
.text:004032B2                 retn    18h
.text:004032B2 sub_403225      endp
.text:004032B2
.text:004032B2 ; ---------------------------------------------------------------------------
.text:004032B5 jpt_40323C      dd offset loc_403243    ; DATA XREF: sub_403225+17↑r
.text:004032B5                 dd offset loc_40324B    ; jump table for switch statement
.text:004032B5                 dd offset loc_403253
.text:004032B5                 dd offset loc_40325B
.text:004032B5                 dd offset loc_403263
.text:004032B5                 dd offset loc_40326B
.text:004032B5                 dd offset loc_403273
.text:004032B5                 dd offset loc_40327B
.text:004032B5                 dd offset loc_403283
.text:004032B5                 dd offset loc_40328B
.text:004032B5                 dd offset loc_403293
.text:004032B5                 dd offset loc_40329B
.text:004032B5                 dd offset def_40323C
.text:004032B5                 dd offset loc_4032A3
.text:004032B5                 dd offset loc_4032AB
.text:004032F1
.text:004032F1 ; =============== S U B R O U T I N E =======================================
.text:004032F1
.text:004032F1 ; Attributes: bp-based frame
.text:004032F1
.text:004032F1 sub_4032F1      proc near               ; CODE XREF: ReadTable(x,x,x)+4AF↑p
.text:004032F1
.text:004032F1 arg_4           = dword ptr  0Ch
.text:004032F1 arg_C           = dword ptr  14h
.text:004032F1
.text:004032F1                 mov     edi, edi
.text:004032F3                 push    ebp
.text:004032F4                 mov     ebp, esp
.text:004032F6                 mov     edx, [edx+0CCh]
.text:004032FC                 mov     eax, [ebp+arg_4]
.text:004032FF                 push    esi
.text:00403300                 mov     esi, ecx
.text:00403302                 mov     eax, [eax+edx*4]
.text:00403305                 sub     eax, 1
.text:00403308                 jz      short loc_403366
.text:0040330A                 sub     eax, 1
.text:0040330D                 jz      short loc_40334A
.text:0040330F                 sub     eax, 1
.text:00403312                 jz      short loc_403342
.text:00403314                 sub     eax, 1
.text:00403317                 jz      short loc_403326
.text:00403319                 sub     eax, 1
.text:0040331C                 jnz     short loc_40336C
.text:0040331E                 mov     eax, [ebp+arg_C]
.text:00403321                 mov     [esi+18h], eax
.text:00403324                 jmp     short loc_40336C
.text:00403326 ; ---------------------------------------------------------------------------
.text:00403326
.text:00403326 loc_403326:                             ; CODE XREF: sub_4032F1+26↑j
.text:00403326                 mov     ecx, [ebp+arg_C]
.text:00403329                 mov     al, [ecx]
.text:0040332B                 mov     [esi+14h], al
.text:0040332E                 mov     al, [ecx+1]
.text:00403331                 mov     [esi+15h], al
.text:00403334                 mov     al, [ecx+2]
.text:00403337                 mov     [esi+16h], al
.text:0040333A                 mov     al, [ecx+3]
.text:0040333D                 mov     [esi+17h], al
.text:00403340                 jmp     short loc_40336C
.text:00403342 ; ---------------------------------------------------------------------------
.text:00403342
.text:00403342 loc_403342:                             ; CODE XREF: sub_4032F1+21↑j
.text:00403342                 mov     eax, [ebp+arg_C]
.text:00403345                 mov     [esi+10h], eax
.text:00403348                 jmp     short loc_40336C
.text:0040334A ; ---------------------------------------------------------------------------
.text:0040334A
.text:0040334A loc_40334A:                             ; CODE XREF: sub_4032F1+1C↑j
.text:0040334A                 mov     ecx, [ebp+arg_C]
.text:0040334D                 mov     al, [ecx]
.text:0040334F                 mov     [esi+0Ch], al
.text:00403352                 mov     al, [ecx+1]
.text:00403355                 mov     [esi+0Dh], al
.text:00403358                 mov     al, [ecx+2]
.text:0040335B                 mov     [esi+0Eh], al
.text:0040335E                 mov     al, [ecx+3]
.text:00403361                 mov     [esi+0Fh], al
.text:00403364                 jmp     short loc_40336C
.text:00403366 ; ---------------------------------------------------------------------------
.text:00403366
.text:00403366 loc_403366:                             ; CODE XREF: sub_4032F1+17↑j
.text:00403366                 mov     eax, [ebp+arg_C]
.text:00403369                 mov     [esi+8], eax
.text:0040336C
.text:0040336C loc_40336C:                             ; CODE XREF: sub_4032F1+2B↑j
.text:0040336C                                         ; sub_4032F1+33↑j ...
.text:0040336C                 pop     esi
.text:0040336D                 pop     ebp
.text:0040336E                 retn    18h
.text:0040336E sub_4032F1      endp
.text:0040336E
.text:00403371
.text:00403371 ; =============== S U B R O U T I N E =======================================
.text:00403371
.text:00403371 ; Attributes: bp-based frame
.text:00403371
.text:00403371 sub_403371      proc near               ; CODE XREF: ReadTable(x,x,x)+4CB↑p
.text:00403371
.text:00403371 var_4           = dword ptr -4
.text:00403371 arg_4           = dword ptr  0Ch
.text:00403371 arg_C           = dword ptr  14h
.text:00403371
.text:00403371                 mov     edi, edi
.text:00403373                 push    ebp
.text:00403374                 mov     ebp, esp
.text:00403376                 push    ecx
.text:00403377                 mov     eax, [edx+0CCh]
.text:0040337D                 push    ebx
.text:0040337E                 mov     ebx, [ebp+arg_4]
.text:00403381                 push    edi
.text:00403382                 mov     edi, ecx
.text:00403384                 cmp     dword ptr [ebx+eax*4], 7
.text:00403388                 jnz     loc_403419
.text:0040338E                 mov     eax, [ebx+2Ch]
.text:00403391                 xor     ecx, ecx
.text:00403393                 push    esi
.text:00403394                 push    0Ch
.text:00403396                 mov     [ebp+var_4], eax
.text:00403399                 mov     edx, ecx
.text:0040339B                 pop     esi
.text:0040339C
.text:0040339C loc_40339C:                             ; CODE XREF: sub_403371+37↓j
.text:0040339C                 mov     al, [ebx+esi*4]
.text:0040339F                 inc     esi
.text:004033A0                 mov     [edi+edx+8], al
.text:004033A4                 inc     edx
.text:004033A5                 cmp     edx, 10h
.text:004033A8                 jb      short loc_40339C
.text:004033AA                 cmp     [ebp+var_4], 10h
.text:004033AE                 jbe     short loc_4033CC
.text:004033B0
.text:004033B0 loc_4033B0:                             ; CODE XREF: sub_403371+4B↓j
.text:004033B0                 mov     al, [ebx+esi*4]
.text:004033B3                 inc     esi
.text:004033B4                 mov     [edi+ecx+18h], al
.text:004033B8                 inc     ecx
.text:004033B9                 cmp     ecx, 4
.text:004033BC                 jb      short loc_4033B0
.text:004033BE                 push    dword ptr [edi+18h] ; netlong
.text:004033C1                 call    ds:ntohl
.text:004033C7                 mov     [edi+18h], eax
.text:004033CA                 xor     ecx, ecx
.text:004033CC
.text:004033CC loc_4033CC:                             ; CODE XREF: sub_403371+3D↑j
.text:004033CC                 mov     eax, [ebx+esi*4]
.text:004033CF                 mov     edx, ecx
.text:004033D1                 mov     [edi+1Ch], eax
.text:004033D4                 mov     eax, [ebx+esi*4+8]
.text:004033D8                 add     esi, 3
.text:004033DB                 mov     [ebp+var_4], eax
.text:004033DE
.text:004033DE loc_4033DE:                             ; CODE XREF: sub_403371+79↓j
.text:004033DE                 mov     al, [ebx+esi*4]
.text:004033E1                 inc     esi
.text:004033E2                 mov     [edi+edx+20h], al
.text:004033E6                 inc     edx
.text:004033E7                 cmp     edx, 10h
.text:004033EA                 jb      short loc_4033DE
.text:004033EC                 cmp     [ebp+var_4], 10h
.text:004033F0                 jbe     short loc_40340C
.text:004033F2
.text:004033F2 loc_4033F2:                             ; CODE XREF: sub_403371+8D↓j
.text:004033F2                 mov     al, [ebx+esi*4]
.text:004033F5                 inc     esi
.text:004033F6                 mov     [edi+ecx+30h], al
.text:004033FA                 inc     ecx
.text:004033FB                 cmp     ecx, 4
.text:004033FE                 jb      short loc_4033F2
.text:00403400                 push    dword ptr [edi+30h] ; netlong
.text:00403403                 call    ds:ntohl
.text:00403409                 mov     [edi+30h], eax
.text:0040340C
.text:0040340C loc_40340C:                             ; CODE XREF: sub_403371+7F↑j
.text:0040340C                 mov     eax, [ebx+esi*4]
.text:0040340F                 mov     [edi+34h], eax
.text:00403412                 mov     eax, [ebp+arg_C]
.text:00403415                 mov     [edi+38h], eax
.text:00403418                 pop     esi
.text:00403419
.text:00403419 loc_403419:                             ; CODE XREF: sub_403371+17↑j
.text:00403419                 pop     edi
.text:0040341A                 pop     ebx
.text:0040341B                 mov     esp, ebp
.text:0040341D                 pop     ebp
.text:0040341E                 retn    18h
.text:0040341E sub_403371      endp
.text:0040341E
.text:00403421
.text:00403421 ; =============== S U B R O U T I N E =======================================
.text:00403421
.text:00403421 ; Attributes: bp-based frame
.text:00403421
.text:00403421 sub_403421      proc near               ; CODE XREF: ReadTable(x,x,x)+4E4↑p
.text:00403421
.text:00403421 arg_4           = dword ptr  0Ch
.text:00403421 arg_C           = dword ptr  14h
.text:00403421
.text:00403421                 mov     edi, edi
.text:00403423                 push    ebp
.text:00403424                 mov     ebp, esp
.text:00403426                 mov     edx, [edx+0CCh]
.text:0040342C                 mov     eax, [ebp+arg_4]
.text:0040342F                 mov     eax, [eax+edx*4]
.text:00403432                 sub     eax, 1
.text:00403435                 jz      short loc_40345E
.text:00403437                 sub     eax, 1
.text:0040343A                 jz      short loc_403456
.text:0040343C                 sub     eax, 1
.text:0040343F                 jz      short loc_40344E
.text:00403441                 sub     eax, 1
.text:00403444                 jnz     short loc_403464
.text:00403446                 mov     eax, [ebp+arg_C]
.text:00403449                 mov     [ecx+14h], eax
.text:0040344C                 jmp     short loc_403464
.text:0040344E ; ---------------------------------------------------------------------------
.text:0040344E
.text:0040344E loc_40344E:                             ; CODE XREF: sub_403421+1E↑j
.text:0040344E                 mov     eax, [ebp+arg_C]
.text:00403451                 mov     [ecx+10h], eax
.text:00403454                 jmp     short loc_403464
.text:00403456 ; ---------------------------------------------------------------------------
.text:00403456
.text:00403456 loc_403456:                             ; CODE XREF: sub_403421+19↑j
.text:00403456                 mov     eax, [ebp+arg_C]
.text:00403459                 mov     [ecx+0Ch], eax
.text:0040345C                 jmp     short loc_403464
.text:0040345E ; ---------------------------------------------------------------------------
.text:0040345E
.text:0040345E loc_40345E:                             ; CODE XREF: sub_403421+14↑j
.text:0040345E                 mov     eax, [ebp+arg_C]
.text:00403461                 mov     [ecx+8], eax
.text:00403464
.text:00403464 loc_403464:                             ; CODE XREF: sub_403421+23↑j
.text:00403464                                         ; sub_403421+2B↑j ...
.text:00403464                 pop     ebp
.text:00403465                 retn    18h
.text:00403465 sub_403421      endp
.text:00403465
.text:00403468
.text:00403468 ; =============== S U B R O U T I N E =======================================
.text:00403468
.text:00403468 ; Attributes: bp-based frame
.text:00403468
.text:00403468 sub_403468      proc near               ; CODE XREF: ReadTable(x,x,x)+53F↑p
.text:00403468
.text:00403468 var_4           = dword ptr -4
.text:00403468 arg_4           = dword ptr  0Ch
.text:00403468 arg_C           = dword ptr  14h
.text:00403468
.text:00403468                 mov     edi, edi
.text:0040346A                 push    ebp
.text:0040346B                 mov     ebp, esp
.text:0040346D                 push    ecx
.text:0040346E                 mov     eax, [edx+0CCh]
.text:00403474                 mov     edx, [ebp+arg_4]
.text:00403477                 push    esi
.text:00403478                 mov     esi, ecx
.text:0040347A                 cmp     dword ptr [edx+eax*4], 3
.text:0040347E                 jnz     short loc_4034C9
.text:00403480                 mov     eax, [edx+2Ch]
.text:00403483                 xor     ecx, ecx
.text:00403485                 push    ebx
.text:00403486                 push    edi
.text:00403487                 push    0Ch
.text:00403489                 mov     [ebp+var_4], eax
.text:0040348C                 mov     edi, ecx
.text:0040348E                 pop     ebx
.text:0040348F
.text:0040348F loc_40348F:                             ; CODE XREF: sub_403468+33↓j
.text:0040348F                 mov     al, [edx+ebx*4]
.text:00403492                 inc     ebx
.text:00403493                 mov     [esi+edi+8], al
.text:00403497                 inc     edi
.text:00403498                 cmp     edi, 10h
.text:0040349B                 jb      short loc_40348F
.text:0040349D                 cmp     [ebp+var_4], 10h
.text:004034A1                 jbe     short loc_4034C1
.text:004034A3                 lea     edx, [edx+ebx*4]
.text:004034A6
.text:004034A6 loc_4034A6:                             ; CODE XREF: sub_403468+4B↓j
.text:004034A6                 mov     al, [edx]
.text:004034A8                 lea     edx, [edx+4]
.text:004034AB                 mov     [esi+ecx+18h], al
.text:004034AF                 inc     ecx
.text:004034B0                 cmp     ecx, 4
.text:004034B3                 jb      short loc_4034A6
.text:004034B5                 push    dword ptr [esi+18h] ; netlong
.text:004034B8                 call    ds:ntohl
.text:004034BE                 mov     [esi+18h], eax
.text:004034C1
.text:004034C1 loc_4034C1:                             ; CODE XREF: sub_403468+39↑j
.text:004034C1                 mov     eax, [ebp+arg_C]
.text:004034C4                 pop     edi
.text:004034C5                 mov     [esi+1Ch], eax
.text:004034C8                 pop     ebx
.text:004034C9
.text:004034C9 loc_4034C9:                             ; CODE XREF: sub_403468+16↑j
.text:004034C9                 pop     esi
.text:004034CA                 mov     esp, ebp
.text:004034CC                 pop     ebp
.text:004034CD                 retn    18h
.text:004034CD sub_403468      endp
.text:004034CD
.text:004034D0
.text:004034D0 ; =============== S U B R O U T I N E =======================================
.text:004034D0
.text:004034D0
.text:004034D0 sub_4034D0      proc near               ; CODE XREF: sub_4017EF+42↑p
.text:004034D0                                         ; sub_40184E+F6↑p ...
.text:004034D0                 mov     al, [ecx]
.text:004034D2                 cmp     al, [edx]
.text:004034D4                 jnz     short loc_4034F2
.text:004034D6                 mov     al, [ecx+1]
.text:004034D9                 cmp     al, [edx+1]
.text:004034DC                 jnz     short loc_4034F2
.text:004034DE                 mov     al, [ecx+2]
.text:004034E1                 cmp     al, [edx+2]
.text:004034E4                 jnz     short loc_4034F2
.text:004034E6                 mov     al, [ecx+3]
.text:004034E9                 cmp     al, [edx+3]
.text:004034EC                 jnz     short loc_4034F2
.text:004034EE                 xor     eax, eax
.text:004034F0                 inc     eax
.text:004034F1                 retn
.text:004034F2 ; ---------------------------------------------------------------------------
.text:004034F2
.text:004034F2 loc_4034F2:                             ; CODE XREF: sub_4034D0+4↑j
.text:004034F2                                         ; sub_4034D0+C↑j ...
.text:004034F2                 xor     eax, eax
.text:004034F4                 retn
.text:004034F4 sub_4034D0      endp
.text:004034F4
.text:004034F5
.text:004034F5 ; =============== S U B R O U T I N E =======================================
.text:004034F5
.text:004034F5 ; Attributes: bp-based frame
.text:004034F5
.text:004034F5 ; int __cdecl sub_4034F5(int, DWORD dwMessageId, char)
.text:004034F5 sub_4034F5      proc near               ; CODE XREF: _main+B5↑p
.text:004034F5                                         ; _main+1A2↑p ...
.text:004034F5
.text:004034F5 Arguments       = dword ptr -0Ch
.text:004034F5 var_8           = dword ptr -8
.text:004034F5 Buffer          = word ptr -4
.text:004034F5 arg_0           = dword ptr  8
.text:004034F5 dwMessageId     = dword ptr  0Ch
.text:004034F5 arg_8           = byte ptr  10h
.text:004034F5
.text:004034F5                 mov     edi, edi
.text:004034F7                 push    ebp
.text:004034F8                 mov     ebp, esp
.text:004034FA                 sub     esp, 0Ch
.text:004034FD                 push    ebx
.text:004034FE                 push    esi
.text:004034FF                 lea     eax, [ebp+arg_8]
.text:00403502                 xor     ecx, ecx
.text:00403504                 mov     [ebp+Arguments], eax
.text:00403507                 mov     esi, ecx
.text:00403509                 lea     eax, [ebp+Arguments]
.text:0040350C                 mov     dword ptr [ebp+Buffer], ecx
.text:0040350F                 push    eax             ; Arguments
.text:00403510                 push    ecx             ; nSize
.text:00403511                 lea     eax, [ebp+Buffer]
.text:00403514                 push    eax             ; lpBuffer
.text:00403515                 push    ecx             ; dwLanguageId
.text:00403516                 push    [ebp+dwMessageId] ; dwMessageId
.text:00403519                 push    ecx             ; lpSource
.text:0040351A                 push    900h            ; dwFlags
.text:0040351F                 call    ds:FormatMessageW
.text:00403525                 mov     ebx, eax
.text:00403527                 mov     [ebp+var_8], ebx
.text:0040352A                 test    ebx, ebx
.text:0040352C                 jz      loc_4035B9
.text:00403532                 cmp     dword ptr [ebp+Buffer], esi
.text:00403535                 jz      loc_4035D3
.text:0040353B                 cmp     [ebp+arg_0], 2
.text:0040353F                 jnz     short loc_403545
.text:00403541                 push    2
.text:00403543                 jmp     short loc_403547
.text:00403545 ; ---------------------------------------------------------------------------
.text:00403545
.text:00403545 loc_403545:                             ; CODE XREF: sub_4034F5+4A↑j
.text:00403545                 push    1
.text:00403547
.text:00403547 loc_403547:                             ; CODE XREF: sub_4034F5+4E↑j
.text:00403547                 call    sub_403E84
.text:0040354C                 pop     ecx
.text:0040354D                 push    edi
.text:0040354E                 mov     ebx, eax
.text:00403550                 push    8000h           ; Mode
.text:00403555                 push    ebx             ; Stream
.text:00403556                 call    ds:_fileno
.text:0040355C                 pop     ecx
.text:0040355D                 push    eax             ; FileHandle
.text:0040355E                 call    ds:_setmode
.text:00403564                 mov     edi, dword ptr [ebp+Buffer]
.text:00403567                 xor     edx, edx
.text:00403569                 pop     ecx
.text:0040356A                 pop     ecx
.text:0040356B                 lea     ecx, [edi+2]
.text:0040356E
.text:0040356E loc_40356E:                             ; CODE XREF: sub_4034F5+82↓j
.text:0040356E                 mov     ax, [edi]
.text:00403571                 add     edi, 2
.text:00403574                 cmp     ax, dx
.text:00403577                 jnz     short loc_40356E
.text:00403579                 sub     edi, ecx
.text:0040357B                 sar     edi, 1
.text:0040357D                 lea     eax, [edi+edi]
.text:00403580                 push    eax             ; uBytes
.text:00403581                 push    40h ; '@'       ; uFlags
.text:00403583                 call    ds:LocalAlloc
.text:00403589                 mov     esi, eax
.text:0040358B                 test    esi, esi
.text:0040358D                 jz      short loc_4035B5
.text:0040358F                 xor     ecx, ecx
.text:00403591                 lea     eax, [edi+edi]
.text:00403594                 push    ecx             ; lpUsedDefaultChar
.text:00403595                 push    ecx             ; lpDefaultChar
.text:00403596                 push    eax             ; cbMultiByte
.text:00403597                 push    esi             ; lpMultiByteStr
.text:00403598                 push    edi             ; cchWideChar
.text:00403599                 push    dword ptr [ebp+Buffer] ; lpWideCharStr
.text:0040359C                 push    ecx             ; dwFlags
.text:0040359D                 push    1               ; CodePage
.text:0040359F                 call    ds:WideCharToMultiByte
.text:004035A5                 push    esi
.text:004035A6                 push    offset aS_0     ; "%s"
.text:004035AB                 push    ebx             ; Stream
.text:004035AC                 call    ds:fprintf
.text:004035B2                 add     esp, 0Ch
.text:004035B5
.text:004035B5 loc_4035B5:                             ; CODE XREF: sub_4034F5+98↑j
.text:004035B5                 mov     ebx, [ebp+var_8]
.text:004035B8                 pop     edi
.text:004035B9
.text:004035B9 loc_4035B9:                             ; CODE XREF: sub_4034F5+37↑j
.text:004035B9                 cmp     dword ptr [ebp+Buffer], 0
.text:004035BD                 jz      short loc_4035C8
.text:004035BF                 push    dword ptr [ebp+Buffer] ; hMem
.text:004035C2                 call    ds:LocalFree
.text:004035C8
.text:004035C8 loc_4035C8:                             ; CODE XREF: sub_4034F5+C8↑j
.text:004035C8                 test    esi, esi
.text:004035CA                 jz      short loc_4035D3
.text:004035CC                 push    esi             ; hMem
.text:004035CD                 call    ds:LocalFree
.text:004035D3
.text:004035D3 loc_4035D3:                             ; CODE XREF: sub_4034F5+40↑j
.text:004035D3                                         ; sub_4034F5+D5↑j
.text:004035D3                 pop     esi
.text:004035D4                 mov     eax, ebx
.text:004035D6                 pop     ebx
.text:004035D7                 mov     esp, ebp
.text:004035D9                 pop     ebp
.text:004035DA                 retn
.text:004035DA sub_4034F5      endp
.text:004035DA
.text:004035DB
.text:004035DB ; =============== S U B R O U T I N E =======================================
.text:004035DB
.text:004035DB ; Attributes: bp-based frame
.text:004035DB
.text:004035DB sub_4035DB      proc near               ; CODE XREF: _main+1BD↑p
.text:004035DB                                         ; _main+250↑p
.text:004035DB
.text:004035DB dwMessageId     = dword ptr  8
.text:004035DB
.text:004035DB                 mov     edi, edi
.text:004035DD                 push    ebp
.text:004035DE                 mov     ebp, esp
.text:004035E0                 push    esi
.text:004035E1                 push    edi             ; char
.text:004035E2                 push    [ebp+dwMessageId] ; dwMessageId
.text:004035E5                 mov     esi, edx
.text:004035E7                 call    sub_40360B
.text:004035EC                 mov     edi, eax
.text:004035EE                 push    edi             ; char
.text:004035EF                 push    esi             ; dwMessageId
.text:004035F0                 push    2               ; int
.text:004035F2                 call    sub_4034F5
.text:004035F7                 add     esp, 10h
.text:004035FA                 mov     esi, eax
.text:004035FC                 push    edi             ; hMem
.text:004035FD                 call    ds:LocalFree
.text:00403603                 pop     edi
.text:00403604                 mov     eax, esi
.text:00403606                 pop     esi
.text:00403607                 pop     ebp
.text:00403608                 retn    4
.text:00403608 sub_4035DB      endp
.text:00403608
.text:0040360B
.text:0040360B ; =============== S U B R O U T I N E =======================================
.text:0040360B
.text:0040360B ; Attributes: bp-based frame
.text:0040360B
.text:0040360B ; int __cdecl sub_40360B(DWORD dwMessageId, char)
.text:0040360B sub_40360B      proc near               ; CODE XREF: sub_4020BF:loc_402182↑p
.text:0040360B                                         ; sub_4035DB+C↑p
.text:0040360B
.text:0040360B Arguments       = dword ptr -8
.text:0040360B Buffer          = word ptr -4
.text:0040360B dwMessageId     = dword ptr  8
.text:0040360B arg_4           = byte ptr  0Ch
.text:0040360B
.text:0040360B                 mov     edi, edi
.text:0040360D                 push    ebp
.text:0040360E                 mov     ebp, esp
.text:00403610                 push    ecx
.text:00403611                 push    ecx
.text:00403612                 lea     eax, [ebp+arg_4]
.text:00403615                 xor     ecx, ecx
.text:00403617                 mov     [ebp+Arguments], eax
.text:0040361A                 lea     eax, [ebp+Arguments]
.text:0040361D                 push    eax             ; Arguments
.text:0040361E                 push    ecx             ; nSize
.text:0040361F                 lea     eax, [ebp+Buffer]
.text:00403622                 mov     dword ptr [ebp+Buffer], ecx
.text:00403625                 push    eax             ; lpBuffer
.text:00403626                 push    ecx             ; dwLanguageId
.text:00403627                 push    [ebp+dwMessageId] ; dwMessageId
.text:0040362A                 push    ecx             ; lpSource
.text:0040362B                 push    1900h           ; dwFlags
.text:00403630                 call    ds:FormatMessageW
.text:00403636                 xor     ecx, ecx
.text:00403638                 cmp     ecx, eax
.text:0040363A                 sbb     eax, eax
.text:0040363C                 and     eax, dword ptr [ebp+Buffer]
.text:0040363F                 mov     esp, ebp
.text:00403641                 pop     ebp
.text:00403642                 retn
.text:00403642 sub_40360B      endp
.text:00403642
.text:00403642 ; ---------------------------------------------------------------------------
.text:00403643                 align 10h
.text:00403650
.text:00403650 ; =============== S U B R O U T I N E =======================================
.text:00403650
.text:00403650 ; Attributes: info_from_lumina
.text:00403650
.text:00403650 ; int pre_c_init()
.text:00403650 pre_c_init      proc near               ; DATA XREF: .text:004010B0↑o
.text:00403650                                         ; .text:___guard_fids_table↑o
.text:00403650                 mov     eax, 5A4Dh
.text:00403655                 cmp     ds:400000h, ax
.text:0040365C                 jz      short loc_403662
.text:0040365E
.text:0040365E loc_40365E:                             ; CODE XREF: pre_c_init+22↓j
.text:0040365E                                         ; pre_c_init+37↓j
.text:0040365E                 xor     eax, eax
.text:00403660                 jmp     short loc_4036B0
.text:00403662 ; ---------------------------------------------------------------------------
.text:00403662
.text:00403662 loc_403662:                             ; CODE XREF: pre_c_init+C↑j
.text:00403662                 mov     ecx, ds:40003Ch
.text:00403668                 cmp     dword ptr [ecx+400000h], 4550h
.text:00403672                 jnz     short loc_40365E
.text:00403674                 movzx   eax, word ptr [ecx+400018h]
.text:0040367B                 cmp     eax, 10Bh
.text:00403680                 jz      short loc_40369C
.text:00403682                 cmp     eax, 20Bh
.text:00403687                 jnz     short loc_40365E
.text:00403689                 xor     eax, eax
.text:0040368B                 cmp     dword ptr [ecx+400084h], 0Eh
.text:00403692                 jbe     short loc_4036B0
.text:00403694                 cmp     [ecx+4000F8h], eax
.text:0040369A                 jmp     short loc_4036AD
.text:0040369C ; ---------------------------------------------------------------------------
.text:0040369C
.text:0040369C loc_40369C:                             ; CODE XREF: pre_c_init+30↑j
.text:0040369C                 xor     eax, eax
.text:0040369E                 cmp     dword ptr [ecx+400074h], 0Eh
.text:004036A5                 jbe     short loc_4036B0
.text:004036A7                 cmp     [ecx+4000E8h], eax
.text:004036AD
.text:004036AD loc_4036AD:                             ; CODE XREF: pre_c_init+4A↑j
.text:004036AD                 setnz   al
.text:004036B0
.text:004036B0 loc_4036B0:                             ; CODE XREF: pre_c_init+10↑j
.text:004036B0                                         ; pre_c_init+42↑j ...
.text:004036B0                 push    1
.text:004036B2                 mov     dword_404898, eax
.text:004036B7                 call    __get_image_app_type
.text:004036BC                 push    eax             ; Type
.text:004036BD                 call    ds:__set_app_type
.text:004036C3                 or      dword_404BD0, 0FFFFFFFFh
.text:004036CA                 or      dword_404BD4, 0FFFFFFFFh
.text:004036D1                 pop     ecx
.text:004036D2                 pop     ecx
.text:004036D3                 call    ds:__p__fmode
.text:004036D9                 mov     ecx, dword_404BC8
.text:004036DF                 mov     [eax], ecx
.text:004036E1                 call    ds:__p__commode
.text:004036E7                 mov     ecx, dword_404BBC
.text:004036ED                 mov     [eax], ecx
.text:004036EF                 call    UserMathErrorFunction
.text:004036F4                 cmp     dword_404000, 0
.text:004036FB                 jnz     short loc_403709
.text:004036FD                 push    offset UserMathErrorFunction ; UserMathErrorFunction
.text:00403702                 call    ds:__setusermatherr
.text:00403708                 pop     ecx
.text:00403709
.text:00403709 loc_403709:                             ; CODE XREF: pre_c_init+AB↑j
.text:00403709                 call    sub_403D73
.text:0040370E                 xor     eax, eax
.text:00403710                 retn
.text:00403710 pre_c_init      endp
.text:00403710
.text:00403710 ; ---------------------------------------------------------------------------
.text:00403711                 align 10h
.text:00403720
.text:00403720 ; =============== S U B R O U T I N E =======================================
.text:00403720
.text:00403720 ; Attributes: info_from_lumina
.text:00403720
.text:00403720 ; int pre_cpp_init()
.text:00403720 pre_cpp_init    proc near               ; DATA XREF: .text:004010A4↑o
.text:00403720                                         ; .text:004010C0↑o
.text:00403720                 mov     eax, dword_404BC4
.text:00403725                 push    offset dword_40489C
.text:0040372A                 push    dword_404BC0
.text:00403730                 mov     dword_40489C, eax
.text:00403735                 push    offset envp
.text:0040373A                 push    offset argv
.text:0040373F                 push    offset argc
.text:00403744                 call    ds:__getmainargs
.text:0040374A                 add     esp, 14h
.text:0040374D                 mov     dword_404894, eax
.text:00403752                 retn
.text:00403752 pre_cpp_init    endp
.text:00403752
.text:00403753 ; ---------------------------------------------------------------------------
.text:00403753 ; [0000011F BYTES: COLLAPSED CHUNK OF FUNCTION start. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00403872
.text:00403872 ; =============== S U B R O U T I N E =======================================
.text:00403872
.text:00403872
.text:00403872 sub_403872      proc near               ; DATA XREF: .text:stru_403EA0↓o
.text:00403872                 mov     ecx, [ebp-14h]
.text:00403875                 mov     eax, [ecx]
.text:00403877                 mov     eax, [eax]
.text:00403879                 mov     [ebp-20h], eax
.text:0040387C                 push    ecx
.text:0040387D                 push    eax
.text:0040387E                 call    _XcptFilter
.text:00403883                 pop     ecx
.text:00403884                 pop     ecx
.text:00403885                 retn
.text:00403885 sub_403872      endp
.text:00403885
.text:00403886 ; ---------------------------------------------------------------------------
.text:00403886
.text:00403886 loc_403886:                             ; DATA XREF: .text:stru_403EA0↓o
.text:00403886                 mov     esp, [ebp-18h]
.text:00403889                 mov     eax, [ebp-20h]
.text:0040388C                 mov     dword_404880, eax
.text:00403891                 cmp     dword_404898, 0
.text:00403898                 jnz     short loc_4038A1
.text:0040389A                 push    eax
.text:0040389B                 call    ds:_exit
.text:004038A1 ; ---------------------------------------------------------------------------
.text:004038A1 ; [00000021 BYTES: COLLAPSED CHUNK OF FUNCTION start. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:004038C2
.text:004038C2 ; =============== S U B R O U T I N E =======================================
.text:004038C2
.text:004038C2 ; Attributes: bp-based frame info_from_lumina
.text:004038C2
.text:004038C2 ; int __cdecl _initterm_e(_PIFV *First, _PIFV *Last)
.text:004038C2 __initterm_e    proc near               ; CODE XREF: start-14B↑p
.text:004038C2
.text:004038C2 var_4           = dword ptr -4
.text:004038C2 First           = dword ptr  8
.text:004038C2 Last            = dword ptr  0Ch
.text:004038C2
.text:004038C2                 mov     edi, edi
.text:004038C4                 push    ebp
.text:004038C5                 mov     ebp, esp
.text:004038C7                 push    ecx
.text:004038C8                 mov     eax, ___security_cookie
.text:004038CD                 xor     eax, ebp
.text:004038CF                 mov     [ebp+var_4], eax
.text:004038D2                 push    esi
.text:004038D3                 mov     esi, [ebp+First]
.text:004038D6                 xor     eax, eax
.text:004038D8                 cmp     esi, [ebp+Last]
.text:004038DB                 jnb     short loc_4038FB
.text:004038DD                 push    edi
.text:004038DE
.text:004038DE loc_4038DE:                             ; CODE XREF: __initterm_e+36↓j
.text:004038DE                 test    eax, eax
.text:004038E0                 jnz     short loc_4038FA
.text:004038E2                 mov     edi, [esi]
.text:004038E4                 test    edi, edi
.text:004038E6                 jz      short loc_4038F2
.text:004038E8                 mov     ecx, edi
.text:004038EA                 call    ds:___guard_check_icall_fptr ; _guard_check_icall_nop(x)
.text:004038F0                 call    edi
.text:004038F2
.text:004038F2 loc_4038F2:                             ; CODE XREF: __initterm_e+24↑j
.text:004038F2                 add     esi, 4
.text:004038F5                 cmp     esi, [ebp+Last]
.text:004038F8                 jb      short loc_4038DE
.text:004038FA
.text:004038FA loc_4038FA:                             ; CODE XREF: __initterm_e+1E↑j
.text:004038FA                 pop     edi
.text:004038FB
.text:004038FB loc_4038FB:                             ; CODE XREF: __initterm_e+19↑j
.text:004038FB                 mov     ecx, [ebp+var_4]
.text:004038FE                 xor     ecx, ebp        ; StackCookie
.text:00403900                 pop     esi
.text:00403901                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text:00403906                 mov     esp, ebp
.text:00403908                 pop     ebp
.text:00403909                 retn
.text:00403909 __initterm_e    endp
.text:00403909
.text:00403909 ; ---------------------------------------------------------------------------
.text:0040390A                 align 10h
.text:00403910 ; [0000000A BYTES: COLLAPSED FUNCTION start. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0040391A                 align 10h
.text:00403920 ; [00000010 BYTES: COLLAPSED FUNCTION __security_check_cookie(x). PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00403930
.text:00403930 ; =============== S U B R O U T I N E =======================================
.text:00403930
.text:00403930 ; Attributes: bp-based frame info_from_lumina
.text:00403930
.text:00403930 ; void __cdecl __raise_securityfailure(_EXCEPTION_POINTERS *ExceptionPointers)
.text:00403930 ___raise_securityfailure proc near      ; CODE XREF: ___report_gsfailure+107↓p
.text:00403930
.text:00403930 ExceptionInfo   = dword ptr  8
.text:00403930
.text:00403930                 mov     edi, edi
.text:00403932                 push    ebp
.text:00403933                 mov     ebp, esp
.text:00403935                 push    0               ; lpTopLevelExceptionFilter
.text:00403937                 call    ds:SetUnhandledExceptionFilter
.text:0040393D                 push    [ebp+ExceptionInfo] ; ExceptionInfo
.text:00403940                 call    ds:UnhandledExceptionFilter
.text:00403946                 push    0C0000409h      ; uExitCode
.text:0040394B                 call    ds:GetCurrentProcess
.text:00403951                 push    eax             ; hProcess
.text:00403952                 call    ds:TerminateProcess
.text:00403958                 pop     ebp
.text:00403959                 retn
.text:00403959 ___raise_securityfailure endp
.text:00403959
.text:0040395A
.text:0040395A ; =============== S U B R O U T I N E =======================================
.text:0040395A
.text:0040395A ; Attributes: noreturn bp-based frame info_from_lumina
.text:0040395A
.text:0040395A ; void __cdecl __noreturn __report_gsfailure()
.text:0040395A ___report_gsfailure proc near           ; CODE XREF: __security_check_cookie(x):loc_40392B↑j
.text:0040395A
.text:0040395A var_324         = dword ptr -324h
.text:0040395A var_8           = dword ptr -8
.text:0040395A var_s0          = dword ptr  0
.text:0040395A arg_0           = byte ptr  8
.text:0040395A
.text:0040395A                 mov     edi, edi
.text:0040395C                 push    ebp
.text:0040395D                 mov     ebp, esp
.text:0040395F                 sub     esp, 324h
.text:00403965                 mov     dword_4049A0, eax
.text:0040396A                 mov     dword_40499C, ecx
.text:00403970                 mov     dword_404998, edx
.text:00403976                 mov     dword_404994, ebx
.text:0040397C                 mov     dword_404990, esi
.text:00403982                 mov     dword_40498C, edi
.text:00403988                 mov     word_4049B8, ss
.text:0040398F                 mov     word_4049AC, cs
.text:00403996                 mov     word_404988, ds
.text:0040399D                 mov     word_404984, es
.text:004039A4                 mov     word_404980, fs
.text:004039AB                 mov     word_40497C, gs
.text:004039B2                 pushf
.text:004039B3                 pop     dword_4049B0
.text:004039B9                 mov     eax, [ebp+var_s0]
.text:004039BC                 mov     dword_4049A4, eax
.text:004039C1                 mov     eax, [ebp+4]
.text:004039C4                 mov     dword_4049A8, eax
.text:004039C9                 lea     eax, [ebp+arg_0]
.text:004039CC                 mov     dword_4049B4, eax
.text:004039D1                 mov     eax, [ebp+var_324]
.text:004039D7                 mov     dword_4048F0, 10001h
.text:004039E1                 mov     eax, dword_4049A8
.text:004039E6                 mov     dword_4048AC, eax
.text:004039EB                 mov     dword_4048A0, 0C0000409h
.text:004039F5                 mov     dword_4048A4, 1
.text:004039FF                 mov     dword_4048B0, 3
.text:00403A09                 push    4
.text:00403A0B                 pop     eax
.text:00403A0C                 imul    eax, 0
.text:00403A0F                 mov     dword_4048B4[eax], 2
.text:00403A19                 push    4
.text:00403A1B                 pop     eax
.text:00403A1C                 shl     eax, 0
.text:00403A1F                 mov     ecx, ___security_cookie
.text:00403A25                 mov     dword_4048B4[eax], ecx
.text:00403A2B                 push    4
.text:00403A2D                 pop     eax
.text:00403A2E                 shl     eax, 1
.text:00403A30                 mov     ecx, dword_404008
.text:00403A36                 mov     dword_4048B4[eax], ecx
.text:00403A3C                 push    4
.text:00403A3E                 pop     eax
.text:00403A3F                 imul    eax, 0
.text:00403A42                 mov     ecx, ___security_cookie
.text:00403A48                 mov     [ebp+eax+var_8], ecx
.text:00403A4C                 push    4
.text:00403A4E                 pop     eax
.text:00403A4F                 shl     eax, 0
.text:00403A52                 mov     ecx, dword_404008
.text:00403A58                 mov     [ebp+eax+var_8], ecx
.text:00403A5C                 push    offset ExceptionInfo ; ExceptionInfo
.text:00403A61                 call    ___raise_securityfailure
.text:00403A66                 mov     esp, ebp
.text:00403A68                 pop     ebp
.text:00403A69                 retn
.text:00403A69 ___report_gsfailure endp
.text:00403A69
.text:00403A69 ; ---------------------------------------------------------------------------
.text:00403A6A                 align 10h
.text:00403A70
.text:00403A70 ; =============== S U B R O U T I N E =======================================
.text:00403A70
.text:00403A70 ; Attributes: bp-based frame info_from_lumina
.text:00403A70
.text:00403A70 ; LONG __stdcall __CxxUnhandledExceptionFilter(struct _EXCEPTION_POINTERS *ExceptionInfo)
.text:00403A70 ?__CxxUnhandledExceptionFilter@@YGJPAU_EXCEPTION_POINTERS@@@Z proc near
.text:00403A70                                         ; DATA XREF: .text:004010CC↑o
.text:00403A70                                         ; sub_403AC0↓o
.text:00403A70
.text:00403A70 ExceptionInfo   = dword ptr  8
.text:00403A70
.text:00403A70                 mov     edi, edi
.text:00403A72                 push    ebp
.text:00403A73                 mov     ebp, esp
.text:00403A75                 mov     eax, [ebp+ExceptionInfo]
.text:00403A78                 mov     eax, [eax]
.text:00403A7A                 cmp     dword ptr [eax], 0E06D7363h
.text:00403A80                 jnz     short loc_403AAD
.text:00403A82                 cmp     dword ptr [eax+10h], 3
.text:00403A86                 jnz     short loc_403AAD
.text:00403A88                 mov     eax, [eax+14h]
.text:00403A8B                 cmp     eax, 19930520h
.text:00403A90                 jz      short loc_403AA7
.text:00403A92                 cmp     eax, 19930521h
.text:00403A97                 jz      short loc_403AA7
.text:00403A99                 cmp     eax, 19930522h
.text:00403A9E                 jz      short loc_403AA7
.text:00403AA0                 cmp     eax, 1994000h
.text:00403AA5                 jnz     short loc_403AAD
.text:00403AA7
.text:00403AA7 loc_403AA7:                             ; CODE XREF: __CxxUnhandledExceptionFilter(_EXCEPTION_POINTERS *)+20↑j
.text:00403AA7                                         ; __CxxUnhandledExceptionFilter(_EXCEPTION_POINTERS *)+27↑j ...
.text:00403AA7                 call    ds:?terminate@@YAXXZ ; terminate(void)
.text:00403AAD ; ---------------------------------------------------------------------------
.text:00403AAD
.text:00403AAD loc_403AAD:                             ; CODE XREF: __CxxUnhandledExceptionFilter(_EXCEPTION_POINTERS *)+10↑j
.text:00403AAD                                         ; __CxxUnhandledExceptionFilter(_EXCEPTION_POINTERS *)+16↑j ...
.text:00403AAD                 xor     eax, eax
.text:00403AAF                 pop     ebp
.text:00403AB0                 retn    4
.text:00403AB0 ?__CxxUnhandledExceptionFilter@@YGJPAU_EXCEPTION_POINTERS@@@Z endp
.text:00403AB0
.text:00403AB0 ; ---------------------------------------------------------------------------
.text:00403AB3                 align 10h
.text:00403AC0
.text:00403AC0 ; =============== S U B R O U T I N E =======================================
.text:00403AC0
.text:00403AC0
.text:00403AC0 sub_403AC0      proc near               ; DATA XREF: .text:004010B4↑o
.text:00403AC0                                         ; .text:004010D0↑o
.text:00403AC0                 push    offset ?__CxxUnhandledExceptionFilter@@YGJPAU_EXCEPTION_POINTERS@@@Z ; lpTopLevelExceptionFilter
.text:00403AC5                 call    ds:SetUnhandledExceptionFilter
.text:00403ACB                 xor     eax, eax
.text:00403ACD                 retn
.text:00403ACD sub_403AC0      endp
.text:00403ACD
.text:00403ACE ; [00000006 BYTES: COLLAPSED FUNCTION _XcptFilter. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00403AD4
.text:00403AD4 ; =============== S U B R O U T I N E =======================================
.text:00403AD4
.text:00403AD4 ; Attributes: bp-based frame info_from_lumina
.text:00403AD4
.text:00403AD4 ; __stdcall RtlpImageNtHeader(x)
.text:00403AD4 _RtlpImageNtHeader@4 proc near          ; CODE XREF: __get_image_app_type+12↓p
.text:00403AD4
.text:00403AD4 var_1C          = dword ptr -1Ch
.text:00403AD4 ms_exc          = CPPEH_RECORD ptr -18h
.text:00403AD4 arg_0           = dword ptr  8
.text:00403AD4
.text:00403AD4 ; __unwind { // __SEH_prolog4
.text:00403AD4                 push    0Ch
.text:00403AD6                 push    offset stru_403EC0
.text:00403ADB                 call    __SEH_prolog4
.text:00403AE0                 xor     ecx, ecx
.text:00403AE2                 mov     eax, [ebp+arg_0]
.text:00403AE5                 test    eax, eax
.text:00403AE7                 jz      short loc_403B34
.text:00403AE9                 cmp     eax, 0FFFFFFFFh
.text:00403AEC                 jz      short loc_403B34
.text:00403AEE ;   __try { // __except at loc_403B25
.text:00403AEE                 mov     [ebp+ms_exc.registration.TryLevel], ecx
.text:00403AF1                 mov     edx, 5A4Dh
.text:00403AF6                 cmp     [eax], dx
.text:00403AF9                 jnz     short loc_403B2D
.text:00403AFB                 mov     edx, [eax+3Ch]
.text:00403AFE                 test    edx, edx
.text:00403B00                 js      short loc_403B2D
.text:00403B02                 cmp     edx, 10000000h
.text:00403B08                 jnb     short loc_403B2D
.text:00403B0A                 add     eax, edx
.text:00403B0C                 mov     [ebp+var_1C], eax
.text:00403B0F                 mov     ecx, [eax]
.text:00403B11                 sub     ecx, 4550h
.text:00403B17                 neg     ecx
.text:00403B19                 sbb     ecx, ecx
.text:00403B1B                 not     ecx
.text:00403B1D                 and     ecx, eax
.text:00403B1F                 jmp     short loc_403B2A
.text:00403B21 ; ---------------------------------------------------------------------------
.text:00403B21
.text:00403B21 loc_403B21:                             ; DATA XREF: .text:stru_403EC0↓o
.text:00403B21 ;   __except filter // owned by 403AEE
.text:00403B21                 xor     eax, eax
.text:00403B23                 inc     eax
.text:00403B24                 retn
.text:00403B25 ; ---------------------------------------------------------------------------
.text:00403B25
.text:00403B25 loc_403B25:                             ; DATA XREF: .text:stru_403EC0↓o
.text:00403B25 ;   __except(loc_403B21) // owned by 403AEE
.text:00403B25                 mov     esp, [ebp+ms_exc.old_esp]
.text:00403B28                 xor     ecx, ecx
.text:00403B2A
.text:00403B2A loc_403B2A:                             ; CODE XREF: RtlpImageNtHeader(x)+4B↑j
.text:00403B2A                 mov     [ebp+var_1C], ecx
.text:00403B2A ;   } // starts at 403AEE
.text:00403B2D
.text:00403B2D loc_403B2D:                             ; CODE XREF: RtlpImageNtHeader(x)+25↑j
.text:00403B2D                                         ; RtlpImageNtHeader(x)+2C↑j ...
.text:00403B2D                 mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
.text:00403B34
.text:00403B34 loc_403B34:                             ; CODE XREF: RtlpImageNtHeader(x)+13↑j
.text:00403B34                                         ; RtlpImageNtHeader(x)+18↑j
.text:00403B34                 mov     eax, ecx
.text:00403B36                 call    __SEH_epilog4
.text:00403B3B                 retn    4
.text:00403B3B ; } // starts at 403AD4
.text:00403B3B _RtlpImageNtHeader@4 endp
.text:00403B3B
.text:00403B3E
.text:00403B3E ; =============== S U B R O U T I N E =======================================
.text:00403B3E
.text:00403B3E ; Attributes: bp-based frame info_from_lumina
.text:00403B3E
.text:00403B3E ; int __cdecl _get_image_app_type(int)
.text:00403B3E __get_image_app_type proc near          ; CODE XREF: pre_c_init+67↑p
.text:00403B3E
.text:00403B3E arg_0           = dword ptr  8
.text:00403B3E
.text:00403B3E                 mov     edi, edi
.text:00403B40                 push    ebp
.text:00403B41                 mov     ebp, esp
.text:00403B43                 push    0               ; lpModuleName
.text:00403B45                 call    ds:GetModuleHandleA
.text:00403B4B                 test    eax, eax
.text:00403B4D                 jz      short loc_403B6F
.text:00403B4F                 push    eax
.text:00403B50                 call    _RtlpImageNtHeader@4 ; RtlpImageNtHeader(x)
.text:00403B55                 test    eax, eax
.text:00403B57                 jz      short loc_403B6F
.text:00403B59                 movzx   ecx, word ptr [eax+5Ch]
.text:00403B5D                 push    2
.text:00403B5F                 pop     eax
.text:00403B60                 cmp     cx, ax
.text:00403B63                 jz      short loc_403B72
.text:00403B65                 cmp     ecx, 3
.text:00403B68                 jnz     short loc_403B6F
.text:00403B6A                 xor     eax, eax
.text:00403B6C                 inc     eax
.text:00403B6D                 pop     ebp
.text:00403B6E                 retn
.text:00403B6F ; ---------------------------------------------------------------------------
.text:00403B6F
.text:00403B6F loc_403B6F:                             ; CODE XREF: __get_image_app_type+F↑j
.text:00403B6F                                         ; __get_image_app_type+19↑j ...
.text:00403B6F                 mov     eax, [ebp+arg_0]
.text:00403B72
.text:00403B72 loc_403B72:                             ; CODE XREF: __get_image_app_type+25↑j
.text:00403B72                 pop     ebp
.text:00403B73                 retn
.text:00403B73 __get_image_app_type endp
.text:00403B73
.text:00403B74 ; [00000006 BYTES: COLLAPSED FUNCTION _amsg_exit. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00403B7A                 align 10h
.text:00403B80
.text:00403B80 ; =============== S U B R O U T I N E =======================================
.text:00403B80
.text:00403B80 ; Attributes: bp-based frame info_from_lumina
.text:00403B80
.text:00403B80 ; _IMAGE_SECTION_HEADER *__cdecl _FindPESection(char *pImageBase, unsigned int rva)
.text:00403B80 __FindPESection proc near               ; CODE XREF: __IsNonwritableInCurrentImage+5B↓p
.text:00403B80
.text:00403B80 arg_0           = dword ptr  8
.text:00403B80 arg_4           = dword ptr  0Ch
.text:00403B80
.text:00403B80                 mov     edi, edi
.text:00403B82                 push    ebp
.text:00403B83                 mov     ebp, esp
.text:00403B85                 mov     eax, [ebp+arg_0]
.text:00403B88                 xor     edx, edx
.text:00403B8A                 push    ebx
.text:00403B8B                 push    esi
.text:00403B8C                 push    edi
.text:00403B8D                 mov     ecx, [eax+3Ch]
.text:00403B90                 add     ecx, eax
.text:00403B92                 movzx   eax, word ptr [ecx+14h]
.text:00403B96                 movzx   ebx, word ptr [ecx+6]
.text:00403B9A                 add     eax, 18h
.text:00403B9D                 add     eax, ecx
.text:00403B9F                 test    ebx, ebx
.text:00403BA1                 jz      short loc_403BBE
.text:00403BA3                 mov     edi, [ebp+arg_4]
.text:00403BA6
.text:00403BA6 loc_403BA6:                             ; CODE XREF: __FindPESection+3C↓j
.text:00403BA6                 mov     esi, [eax+0Ch]
.text:00403BA9                 cmp     edi, esi
.text:00403BAB                 jb      short loc_403BB6
.text:00403BAD                 mov     ecx, [eax+8]
.text:00403BB0                 add     ecx, esi
.text:00403BB2                 cmp     edi, ecx
.text:00403BB4                 jb      short loc_403BC0
.text:00403BB6
.text:00403BB6 loc_403BB6:                             ; CODE XREF: __FindPESection+2B↑j
.text:00403BB6                 inc     edx
.text:00403BB7                 add     eax, 28h ; '('
.text:00403BBA                 cmp     edx, ebx
.text:00403BBC                 jb      short loc_403BA6
.text:00403BBE
.text:00403BBE loc_403BBE:                             ; CODE XREF: __FindPESection+21↑j
.text:00403BBE                 xor     eax, eax
.text:00403BC0
.text:00403BC0 loc_403BC0:                             ; CODE XREF: __FindPESection+34↑j
.text:00403BC0                 pop     edi
.text:00403BC1                 pop     esi
.text:00403BC2                 pop     ebx
.text:00403BC3                 pop     ebp
.text:00403BC4                 retn
.text:00403BC4 __FindPESection endp
.text:00403BC4
.text:00403BC4 ; ---------------------------------------------------------------------------
.text:00403BC5                 align 10h
.text:00403BD0
.text:00403BD0 ; =============== S U B R O U T I N E =======================================
.text:00403BD0
.text:00403BD0 ; Attributes: bp-based frame info_from_lumina
.text:00403BD0
.text:00403BD0 ; int __cdecl _IsNonwritableInCurrentImage(char *pTarget)
.text:00403BD0 __IsNonwritableInCurrentImage proc near ; CODE XREF: start-EB↑p
.text:00403BD0
.text:00403BD0 ms_exc          = CPPEH_RECORD ptr -18h
.text:00403BD0 arg_0           = dword ptr  8
.text:00403BD0
.text:00403BD0                 mov     edi, edi
.text:00403BD2                 push    ebp
.text:00403BD3                 mov     ebp, esp
.text:00403BD5                 push    0FFFFFFFEh
.text:00403BD7                 push    offset stru_403EE0
.text:00403BDC                 push    offset __except_handler4
.text:00403BE1                 mov     eax, large fs:0
.text:00403BE7                 push    eax
.text:00403BE8                 sub     esp, 8
.text:00403BEB                 push    ebx
.text:00403BEC                 push    esi
.text:00403BED                 push    edi
.text:00403BEE                 mov     eax, ___security_cookie
.text:00403BF3                 xor     [ebp+ms_exc.registration.ScopeTable], eax
.text:00403BF6                 xor     eax, ebp
.text:00403BF8                 push    eax
.text:00403BF9                 lea     eax, [ebp+ms_exc.registration]
.text:00403BFC                 mov     large fs:0, eax
.text:00403C02                 mov     [ebp+ms_exc.old_esp], esp
.text:00403C05                 mov     [ebp+ms_exc.registration.TryLevel], 0
.text:00403C0C                 push    400000h
.text:00403C11                 call    __ValidateImageBase
.text:00403C16                 add     esp, 4
.text:00403C19                 test    eax, eax
.text:00403C1B                 jz      short loc_403C71
.text:00403C1D                 mov     eax, [ebp+arg_0]
.text:00403C20                 sub     eax, 400000h
.text:00403C25                 push    eax
.text:00403C26                 push    400000h
.text:00403C2B                 call    __FindPESection
.text:00403C30                 add     esp, 8
.text:00403C33                 test    eax, eax
.text:00403C35                 jz      short loc_403C71
.text:00403C37                 mov     eax, [eax+24h]
.text:00403C3A                 shr     eax, 1Fh
.text:00403C3D                 not     eax
.text:00403C3F                 and     eax, 1
.text:00403C42                 mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
.text:00403C49                 mov     ecx, [ebp+ms_exc.registration.Next]
.text:00403C4C                 mov     large fs:0, ecx
.text:00403C53                 pop     ecx
.text:00403C54                 pop     edi
.text:00403C55                 pop     esi
.text:00403C56                 pop     ebx
.text:00403C57                 mov     esp, ebp
.text:00403C59                 pop     ebp
.text:00403C5A                 retn
.text:00403C5B ; ---------------------------------------------------------------------------
.text:00403C5B
.text:00403C5B loc_403C5B:                             ; DATA XREF: .text:stru_403EE0↓o
.text:00403C5B                 mov     eax, [ebp+ms_exc.exc_ptr]
.text:00403C5E                 mov     eax, [eax]
.text:00403C60                 xor     ecx, ecx
.text:00403C62                 cmp     dword ptr [eax], 0C0000005h
.text:00403C68                 setz    cl
.text:00403C6B                 mov     eax, ecx
.text:00403C6D                 retn
.text:00403C6E ; ---------------------------------------------------------------------------
.text:00403C6E
.text:00403C6E loc_403C6E:                             ; DATA XREF: .text:stru_403EE0↓o
.text:00403C6E                 mov     esp, [ebp+ms_exc.old_esp]
.text:00403C71
.text:00403C71 loc_403C71:                             ; CODE XREF: __IsNonwritableInCurrentImage+4B↑j
.text:00403C71                                         ; __IsNonwritableInCurrentImage+65↑j
.text:00403C71                 mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
.text:00403C78                 xor     eax, eax
.text:00403C7A                 mov     ecx, [ebp+ms_exc.registration.Next]
.text:00403C7D                 mov     large fs:0, ecx
.text:00403C84                 pop     ecx
.text:00403C85                 pop     edi
.text:00403C86                 pop     esi
.text:00403C87                 pop     ebx
.text:00403C88                 mov     esp, ebp
.text:00403C8A                 pop     ebp
.text:00403C8B                 retn
.text:00403C8B __IsNonwritableInCurrentImage endp
.text:00403C8B
.text:00403C8B ; ---------------------------------------------------------------------------
.text:00403C8C                 align 10h
.text:00403C90
.text:00403C90 ; =============== S U B R O U T I N E =======================================
.text:00403C90
.text:00403C90 ; Attributes: bp-based frame info_from_lumina
.text:00403C90
.text:00403C90 ; int __cdecl _ValidateImageBase(char *pImageBase)
.text:00403C90 __ValidateImageBase proc near           ; CODE XREF: __IsNonwritableInCurrentImage+41↑p
.text:00403C90
.text:00403C90 arg_0           = dword ptr  8
.text:00403C90
.text:00403C90                 mov     edi, edi
.text:00403C92                 push    ebp
.text:00403C93                 mov     ebp, esp
.text:00403C95                 mov     eax, [ebp+arg_0]
.text:00403C98                 mov     ecx, 5A4Dh
.text:00403C9D                 cmp     [eax], cx
.text:00403CA0                 jz      short loc_403CA6
.text:00403CA2                 xor     eax, eax
.text:00403CA4                 pop     ebp
.text:00403CA5                 retn
.text:00403CA6 ; ---------------------------------------------------------------------------
.text:00403CA6
.text:00403CA6 loc_403CA6:                             ; CODE XREF: __ValidateImageBase+10↑j
.text:00403CA6                 mov     ecx, [eax+3Ch]
.text:00403CA9                 add     ecx, eax
.text:00403CAB                 xor     eax, eax
.text:00403CAD                 cmp     dword ptr [ecx], 4550h
.text:00403CB3                 jnz     short loc_403CC1
.text:00403CB5                 mov     edx, 10Bh
.text:00403CBA                 cmp     [ecx+18h], dx
.text:00403CBE                 setz    al
.text:00403CC1
.text:00403CC1 loc_403CC1:                             ; CODE XREF: __ValidateImageBase+23↑j
.text:00403CC1                 pop     ebp
.text:00403CC2                 retn
.text:00403CC2 __ValidateImageBase endp
.text:00403CC2
.text:00403CC3
.text:00403CC3 ; =============== S U B R O U T I N E =======================================
.text:00403CC3
.text:00403CC3 ; Attributes: bp-based frame info_from_lumina
.text:00403CC3
.text:00403CC3 ; void __cdecl __security_init_cookie()
.text:00403CC3 ___security_init_cookie proc near       ; CODE XREF: start↑p
.text:00403CC3
.text:00403CC3 PerformanceCount= LARGE_INTEGER ptr -14h
.text:00403CC3 SystemTimeAsFileTime= _FILETIME ptr -0Ch
.text:00403CC3 var_4           = dword ptr -4
.text:00403CC3
.text:00403CC3                 mov     edi, edi
.text:00403CC5                 push    ebp
.text:00403CC6                 mov     ebp, esp
.text:00403CC8                 sub     esp, 14h
.text:00403CCB                 and     [ebp+SystemTimeAsFileTime.dwLowDateTime], 0
.text:00403CCF                 and     [ebp+SystemTimeAsFileTime.dwHighDateTime], 0
.text:00403CD3                 mov     eax, ___security_cookie
.text:00403CD8                 push    esi
.text:00403CD9                 push    edi
.text:00403CDA                 mov     edi, 0BB40E64Eh
.text:00403CDF                 mov     esi, 0FFFF0000h
.text:00403CE4                 cmp     eax, edi
.text:00403CE6                 jz      short loc_403CF5
.text:00403CE8                 test    esi, eax
.text:00403CEA                 jz      short loc_403CF5
.text:00403CEC                 not     eax
.text:00403CEE                 mov     dword_404008, eax
.text:00403CF3                 jmp     short loc_403D5F
.text:00403CF5 ; ---------------------------------------------------------------------------
.text:00403CF5
.text:00403CF5 loc_403CF5:                             ; CODE XREF: ___security_init_cookie+23↑j
.text:00403CF5                                         ; ___security_init_cookie+27↑j
.text:00403CF5                 lea     eax, [ebp+SystemTimeAsFileTime]
.text:00403CF8                 push    eax             ; lpSystemTimeAsFileTime
.text:00403CF9                 call    ds:GetSystemTimeAsFileTime
.text:00403CFF                 mov     eax, [ebp+SystemTimeAsFileTime.dwHighDateTime]
.text:00403D02                 xor     eax, [ebp+SystemTimeAsFileTime.dwLowDateTime]
.text:00403D05                 mov     [ebp+var_4], eax
.text:00403D08                 call    ds:GetCurrentProcessId
.text:00403D0E                 xor     [ebp+var_4], eax
.text:00403D11                 call    ds:GetCurrentThreadId
.text:00403D17                 xor     [ebp+var_4], eax
.text:00403D1A                 call    ds:GetTickCount
.text:00403D20                 xor     eax, [ebp+var_4]
.text:00403D23                 lea     ecx, [ebp+var_4]
.text:00403D26                 xor     eax, ecx
.text:00403D28                 mov     [ebp+var_4], eax
.text:00403D2B                 lea     eax, [ebp+PerformanceCount]
.text:00403D2E                 push    eax             ; lpPerformanceCount
.text:00403D2F                 call    ds:QueryPerformanceCounter
.text:00403D35                 mov     eax, dword ptr [ebp+PerformanceCount+4]
.text:00403D38                 xor     eax, dword ptr [ebp+PerformanceCount]
.text:00403D3B                 mov     ecx, [ebp+var_4]
.text:00403D3E                 xor     ecx, eax
.text:00403D40                 cmp     ecx, edi
.text:00403D42                 jz      short loc_403D4C
.text:00403D44                 test    ___security_cookie, esi
.text:00403D4A                 jnz     short loc_403D51
.text:00403D4C
.text:00403D4C loc_403D4C:                             ; CODE XREF: ___security_init_cookie+7F↑j
.text:00403D4C                 mov     ecx, 0BB40E64Fh
.text:00403D51
.text:00403D51 loc_403D51:                             ; CODE XREF: ___security_init_cookie+87↑j
.text:00403D51                 mov     ___security_cookie, ecx
.text:00403D57                 not     ecx
.text:00403D59                 mov     dword_404008, ecx
.text:00403D5F
.text:00403D5F loc_403D5F:                             ; CODE XREF: ___security_init_cookie+30↑j
.text:00403D5F                 pop     edi
.text:00403D60                 pop     esi
.text:00403D61                 mov     esp, ebp
.text:00403D63                 pop     ebp
.text:00403D64                 retn
.text:00403D64 ___security_init_cookie endp
.text:00403D64
.text:00403D64 ; ---------------------------------------------------------------------------
.text:00403D65                 align 10h
.text:00403D70
.text:00403D70 ; =============== S U B R O U T I N E =======================================
.text:00403D70
.text:00403D70
.text:00403D70 ; int __cdecl UserMathErrorFunction(struct _exception *)
.text:00403D70 UserMathErrorFunction proc near         ; CODE XREF: pre_c_init+9F↑p
.text:00403D70                                         ; DATA XREF: .text:004010D4↑o ...
.text:00403D70                 xor     eax, eax
.text:00403D72                 retn
.text:00403D72 UserMathErrorFunction endp
.text:00403D72
.text:00403D73
.text:00403D73 ; =============== S U B R O U T I N E =======================================
.text:00403D73
.text:00403D73
.text:00403D73 sub_403D73      proc near               ; CODE XREF: pre_c_init:loc_403709↑p
.text:00403D73                 push    30000h          ; Mask
.text:00403D78                 push    10000h          ; NewValue
.text:00403D7D                 call    ds:_controlfp
.text:00403D83                 pop     ecx
.text:00403D84                 pop     ecx
.text:00403D85                 retn
.text:00403D85 sub_403D73      endp
.text:00403D85
.text:00403D86 ; [00000006 BYTES: COLLAPSED FUNCTION _initterm. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00403D8C ; [00000048 BYTES: COLLAPSED FUNCTION __SEH_prolog4_GS. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00403DD4 ; [0000000F BYTES: COLLAPSED FUNCTION __SEH_epilog4_GS. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00403DE3                 align 10h
.text:00403DF0
.text:00403DF0 ; =============== S U B R O U T I N E =======================================
.text:00403DF0
.text:00403DF0 ; Attributes: bp-based frame info_from_lumina
.text:00403DF0
.text:00403DF0 ; _EXCEPTION_DISPOSITION __cdecl _except_handler4(_EXCEPTION_RECORD *ExceptionRecord, _EXCEPTION_REGISTRATION_RECORD *EstablisherFrame, _CONTEXT *ContextRecord, void *DispatcherContext)
.text:00403DF0 __except_handler4 proc near             ; DATA XREF: .text:004010D8↑o
.text:00403DF0                                         ; .text:___safe_se_handler_table↑o ...
.text:00403DF0
.text:00403DF0 arg_0           = dword ptr  8
.text:00403DF0 arg_4           = dword ptr  0Ch
.text:00403DF0 arg_8           = dword ptr  10h
.text:00403DF0 arg_C           = dword ptr  14h
.text:00403DF0
.text:00403DF0                 mov     edi, edi
.text:00403DF2                 push    ebp
.text:00403DF3                 mov     ebp, esp
.text:00403DF5                 push    [ebp+arg_C]
.text:00403DF8                 push    [ebp+arg_8]
.text:00403DFB                 push    [ebp+arg_4]
.text:00403DFE                 push    [ebp+arg_0]
.text:00403E01                 push    offset @__security_check_cookie@4 ; __security_check_cookie(x)
.text:00403E06                 push    offset ___security_cookie
.text:00403E0B                 call    _except_handler4_common
.text:00403E10                 add     esp, 18h
.text:00403E13                 pop     ebp
.text:00403E14                 retn
.text:00403E14 __except_handler4 endp
.text:00403E14
.text:00403E14 ; ---------------------------------------------------------------------------
.text:00403E15                 align 10h
.text:00403E20
.text:00403E20 ; =============== S U B R O U T I N E =======================================
.text:00403E20
.text:00403E20
.text:00403E20 ; __fastcall _guard_check_icall_nop(x)
.text:00403E20 @_guard_check_icall_nop@4 proc near     ; CODE XREF: sub_401A35+14A↑p
.text:00403E20                                         ; AddArp(x,x,x)+21D↑p ...
.text:00403E20                 retn
.text:00403E20 @_guard_check_icall_nop@4 endp
.text:00403E20
.text:00403E20 ; ---------------------------------------------------------------------------
.text:00403E21                 align 4
.text:00403E24 ; [00000045 BYTES: COLLAPSED FUNCTION __SEH_prolog4. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00403E69 ; [00000014 BYTES: COLLAPSED FUNCTION __SEH_epilog4. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00403E7D                 align 2
.text:00403E7E ; [00000006 BYTES: COLLAPSED FUNCTION _except_handler4_common. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00403E84
.text:00403E84 ; =============== S U B R O U T I N E =======================================
.text:00403E84
.text:00403E84 ; Attributes: bp-based frame
.text:00403E84
.text:00403E84 sub_403E84      proc near               ; CODE XREF: sub_402666+22↑p
.text:00403E84                                         ; ReadTable(x,x,x)+5D↑p ...
.text:00403E84
.text:00403E84 arg_0           = dword ptr  8
.text:00403E84
.text:00403E84                 mov     edi, edi
.text:00403E86                 push    ebp
.text:00403E87                 mov     ebp, esp
.text:00403E89                 call    __iob_func
.text:00403E8E                 mov     ecx, [ebp+arg_0]
.text:00403E91                 shl     ecx, 5
.text:00403E94                 add     eax, ecx
.text:00403E96                 pop     ebp
.text:00403E97                 retn
.text:00403E97 sub_403E84      endp
.text:00403E97
.text:00403E98 ; [00000006 BYTES: COLLAPSED FUNCTION __iob_func. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00403E9E                 align 10h
.text:00403EA0 stru_403EA0     dd 0FFFFFFE4h           ; GSCookieOffset
.text:00403EA0                                         ; DATA XREF: start-1BB↑o
.text:00403EA0                 dd 0                    ; GSCookieXOROffset
.text:00403EA0                 dd 0FFFFFFD0h           ; EHCookieOffset
.text:00403EA0                 dd 0                    ; EHCookieXOROffset
.text:00403EA0                 dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
.text:00403EA0                 dd offset sub_403872    ; ScopeRecord.FilterFunc
.text:00403EA0                 dd offset loc_403886    ; ScopeRecord.HandlerFunc
.text:00403EBC                 align 10h
.text:00403EC0 stru_403EC0     dd 0FFFFFFFEh           ; GSCookieOffset
.text:00403EC0                                         ; DATA XREF: RtlpImageNtHeader(x)+2↑o
.text:00403EC0                 dd 0                    ; GSCookieXOROffset
.text:00403EC0                 dd 0FFFFFFD4h           ; EHCookieOffset
.text:00403EC0                 dd 0                    ; EHCookieXOROffset
.text:00403EC0                 dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
.text:00403EC0                 dd offset loc_403B21    ; ScopeRecord.FilterFunc
.text:00403EC0                 dd offset loc_403B25    ; ScopeRecord.HandlerFunc
.text:00403EDC                 align 10h
.text:00403EE0 stru_403EE0     dd 0FFFFFFFEh           ; GSCookieOffset
.text:00403EE0                                         ; DATA XREF: __IsNonwritableInCurrentImage+7↑o
.text:00403EE0                 dd 0                    ; GSCookieXOROffset
.text:00403EE0                 dd 0FFFFFFD8h           ; EHCookieOffset
.text:00403EE0                 dd 0                    ; EHCookieXOROffset
.text:00403EE0                 dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
.text:00403EE0                 dd offset loc_403C5B    ; ScopeRecord.FilterFunc
.text:00403EE0                 dd offset loc_403C6E    ; ScopeRecord.HandlerFunc
.text:00403EFC                 align 200h
.text:00403EFC _text           ends
.text:00403EFC
.data:00404000 ; Section 2. (virtual address 00004000)
.data:00404000 ; Virtual size                  : 00000BF4 (   3060.)
.data:00404000 ; Section size in file          : 00000A00 (   2560.)
.data:00404000 ; Offset to raw data for section: 00003400
.data:00404000 ; Flags C0000040: Data Readable Writable
.data:00404000 ; Alignment     : default
.data:00404000 ; ===========================================================================
.data:00404000
.data:00404000 ; Segment type: Pure data
.data:00404000 ; Segment permissions: Read/Write
.data:00404000 _data           segment para public 'DATA' use32
.data:00404000                 assume cs:_data
.data:00404000                 ;org 404000h
.data:00404000 dword_404000    dd 1                    ; DATA XREF: pre_c_init+A4↑r
.data:00404004 ; uintptr_t __security_cookie
.data:00404004 ___security_cookie dd 0BB40E64Eh        ; DATA XREF: .text:00401044↑o
.data:00404004                                         ; _main+E↑r ...
.data:00404008 dword_404008    dd 44BF19B1h            ; DATA XREF: ___report_gsfailure+D6↑r
.data:00404008                                         ; ___report_gsfailure+F8↑r ...
.data:0040400C                 align 10h
.data:00404010 unk_404010      db    4                 ; DATA XREF: ReadTable(x,x,x):loc_4028F8↑o
.data:00404011                 db    0
.data:00404012                 db    0
.data:00404013                 db    0
.data:00404014                 db    4
.data:00404015                 db    0
.data:00404016                 db    0
.data:00404017                 db    0
.data:00404018                 db  16h
.data:00404019                 db    0
.data:0040401A                 db    0
.data:0040401B                 db    0
.data:0040401C                 db    1
.data:0040401D                 db    0
.data:0040401E                 db    0
.data:0040401F                 db    0
.data:00404020                 db    1
.data:00404021                 db    0
.data:00404022                 db    0
.data:00404023                 db    0
.data:00404024                 db    0
.data:00404025                 db    0
.data:00404026                 db    0
.data:00404027                 db    0
.data:00404028                 db    0
.data:00404029                 db    0
.data:0040402A                 db    0
.data:0040402B                 db    0
.data:0040402C                 db    0
.data:0040402D                 db    0
.data:0040402E                 db    0
.data:0040402F                 db    0
.data:00404030                 db    0
.data:00404031                 db    0
.data:00404032                 db    0
.data:00404033                 db    0
.data:00404034                 db    0
.data:00404035                 db    0
.data:00404036                 db    0
.data:00404037                 db    0
.data:00404038                 db    0
.data:00404039                 db    0
.data:0040403A                 db    0
.data:0040403B                 db    0
.data:0040403C                 db    0
.data:0040403D                 db    0
.data:0040403E                 db    0
.data:0040403F                 db    0
.data:00404040                 db    0
.data:00404041                 db    0
.data:00404042                 db    0
.data:00404043                 db    0
.data:00404044                 db    0
.data:00404045                 db    0
.data:00404046                 db    0
.data:00404047                 db    0
.data:00404048                 db    0
.data:00404049                 db    0
.data:0040404A                 db    0
.data:0040404B                 db    0
.data:0040404C                 db    0
.data:0040404D                 db    0
.data:0040404E                 db    0
.data:0040404F                 db    0
.data:00404050                 db    0
.data:00404051                 db    0
.data:00404052                 db    0
.data:00404053                 db    0
.data:00404054                 db    0
.data:00404055                 db    0
.data:00404056                 db    0
.data:00404057                 db    0
.data:00404058                 db    0
.data:00404059                 db    0
.data:0040405A                 db    0
.data:0040405B                 db    0
.data:0040405C                 db    0
.data:0040405D                 db    0
.data:0040405E                 db    0
.data:0040405F                 db    0
.data:00404060                 db    0
.data:00404061                 db    0
.data:00404062                 db    0
.data:00404063                 db    0
.data:00404064                 db    0
.data:00404065                 db    0
.data:00404066                 db    0
.data:00404067                 db    0
.data:00404068                 db    0
.data:00404069                 db    0
.data:0040406A                 db    0
.data:0040406B                 db    0
.data:0040406C                 db    0
.data:0040406D                 db    0
.data:0040406E                 db    0
.data:0040406F                 db    0
.data:00404070                 db    0
.data:00404071                 db    0
.data:00404072                 db    0
.data:00404073                 db    0
.data:00404074                 db    0
.data:00404075                 db    0
.data:00404076                 db    0
.data:00404077                 db    0
.data:00404078                 db    0
.data:00404079                 db    0
.data:0040407A                 db    0
.data:0040407B                 db    0
.data:0040407C                 db    0
.data:0040407D                 db    0
.data:0040407E                 db    0
.data:0040407F                 db    0
.data:00404080                 db    0
.data:00404081                 db    0
.data:00404082                 db    0
.data:00404083                 db    0
.data:00404084                 db    0
.data:00404085                 db    0
.data:00404086                 db    0
.data:00404087                 db    0
.data:00404088                 db    0
.data:00404089                 db    0
.data:0040408A                 db    0
.data:0040408B                 db    0
.data:0040408C                 db    0
.data:0040408D                 db    0
.data:0040408E                 db    0
.data:0040408F                 db    0
.data:00404090                 db    0
.data:00404091                 db    0
.data:00404092                 db    0
.data:00404093                 db    0
.data:00404094                 db    0
.data:00404095                 db    0
.data:00404096                 db    0
.data:00404097                 db    0
.data:00404098                 db    0
.data:00404099                 db    0
.data:0040409A                 db    0
.data:0040409B                 db    0
.data:0040409C                 db    0
.data:0040409D                 db    0
.data:0040409E                 db    0
.data:0040409F                 db    0
.data:004040A0                 db    0
.data:004040A1                 db    0
.data:004040A2                 db    0
.data:004040A3                 db    0
.data:004040A4                 db    0
.data:004040A5                 db    0
.data:004040A6                 db    0
.data:004040A7                 db    0
.data:004040A8                 db    0
.data:004040A9                 db    0
.data:004040AA                 db    0
.data:004040AB                 db    0
.data:004040AC                 db    0
.data:004040AD                 db    0
.data:004040AE                 db    0
.data:004040AF                 db    0
.data:004040B0                 db    0
.data:004040B1                 db    0
.data:004040B2                 db    0
.data:004040B3                 db    0
.data:004040B4                 db    0
.data:004040B5                 db    0
.data:004040B6                 db    0
.data:004040B7                 db    0
.data:004040B8                 db    0
.data:004040B9                 db    0
.data:004040BA                 db    0
.data:004040BB                 db    0
.data:004040BC                 db    0
.data:004040BD                 db    0
.data:004040BE                 db    0
.data:004040BF                 db    0
.data:004040C0                 db    0
.data:004040C1                 db    0
.data:004040C2                 db    0
.data:004040C3                 db    0
.data:004040C4                 db    0
.data:004040C5                 db    0
.data:004040C6                 db    0
.data:004040C7                 db    0
.data:004040C8                 db    0
.data:004040C9                 db    0
.data:004040CA                 db    0
.data:004040CB                 db    0
.data:004040CC                 db    0
.data:004040CD                 db    0
.data:004040CE                 db    0
.data:004040CF                 db    0
.data:004040D0                 db    0
.data:004040D1                 db    0
.data:004040D2                 db    0
.data:004040D3                 db    0
.data:004040D4                 db    0
.data:004040D5                 db    0
.data:004040D6                 db    0
.data:004040D7                 db    0
.data:004040D8                 db    0
.data:004040D9                 db    0
.data:004040DA                 db    0
.data:004040DB                 db    0
.data:004040DC                 db    9
.data:004040DD                 db    0
.data:004040DE                 db    0
.data:004040DF                 db    0
.data:004040E0                 db    2
.data:004040E1                 db    0
.data:004040E2                 db    0
.data:004040E3                 db    0
.data:004040E4                 db    0
.data:004040E5                 db    0
.data:004040E6                 db    0
.data:004040E7                 db    0
.data:004040E8 unk_4040E8      db    4                 ; DATA XREF: ReadTable(x,x,x)+16B↑o
.data:004040E9                 db    0
.data:004040EA                 db    0
.data:004040EB                 db    0
.data:004040EC                 db    7
.data:004040ED                 db    0
.data:004040EE                 db    0
.data:004040EF                 db    0
.data:004040F0                 db    7
.data:004040F1                 db    0
.data:004040F2                 db    0
.data:004040F3                 db    0
.data:004040F4                 db    1
.data:004040F5                 db    0
.data:004040F6                 db    0
.data:004040F7                 db    0
.data:004040F8                 db    1
.data:004040F9                 db    0
.data:004040FA                 db    0
.data:004040FB                 db    0
.data:004040FC                 db    0
.data:004040FD                 db    0
.data:004040FE                 db    0
.data:004040FF                 db    0
.data:00404100                 db    0
.data:00404101                 db    0
.data:00404102                 db    0
.data:00404103                 db    0
.data:00404104                 db    0
.data:00404105                 db    0
.data:00404106                 db    0
.data:00404107                 db    0
.data:00404108                 db    0
.data:00404109                 db    0
.data:0040410A                 db    0
.data:0040410B                 db    0
.data:0040410C                 db    0
.data:0040410D                 db    0
.data:0040410E                 db    0
.data:0040410F                 db    0
.data:00404110                 db    0
.data:00404111                 db    0
.data:00404112                 db    0
.data:00404113                 db    0
.data:00404114                 db    0
.data:00404115                 db    0
.data:00404116                 db    0
.data:00404117                 db    0
.data:00404118                 db    0
.data:00404119                 db    0
.data:0040411A                 db    0
.data:0040411B                 db    0
.data:0040411C                 db    0
.data:0040411D                 db    0
.data:0040411E                 db    0
.data:0040411F                 db    0
.data:00404120                 db    0
.data:00404121                 db    0
.data:00404122                 db    0
.data:00404123                 db    0
.data:00404124                 db    0
.data:00404125                 db    0
.data:00404126                 db    0
.data:00404127                 db    0
.data:00404128                 db    0
.data:00404129                 db    0
.data:0040412A                 db    0
.data:0040412B                 db    0
.data:0040412C                 db    0
.data:0040412D                 db    0
.data:0040412E                 db    0
.data:0040412F                 db    0
.data:00404130                 db    0
.data:00404131                 db    0
.data:00404132                 db    0
.data:00404133                 db    0
.data:00404134                 db    0
.data:00404135                 db    0
.data:00404136                 db    0
.data:00404137                 db    0
.data:00404138                 db    0
.data:00404139                 db    0
.data:0040413A                 db    0
.data:0040413B                 db    0
.data:0040413C                 db    0
.data:0040413D                 db    0
.data:0040413E                 db    0
.data:0040413F                 db    0
.data:00404140                 db    0
.data:00404141                 db    0
.data:00404142                 db    0
.data:00404143                 db    0
.data:00404144                 db    0
.data:00404145                 db    0
.data:00404146                 db    0
.data:00404147                 db    0
.data:00404148                 db    0
.data:00404149                 db    0
.data:0040414A                 db    0
.data:0040414B                 db    0
.data:0040414C                 db    0
.data:0040414D                 db    0
.data:0040414E                 db    0
.data:0040414F                 db    0
.data:00404150                 db    0
.data:00404151                 db    0
.data:00404152                 db    0
.data:00404153                 db    0
.data:00404154                 db    0
.data:00404155                 db    0
.data:00404156                 db    0
.data:00404157                 db    0
.data:00404158                 db    0
.data:00404159                 db    0
.data:0040415A                 db    0
.data:0040415B                 db    0
.data:0040415C                 db    0
.data:0040415D                 db    0
.data:0040415E                 db    0
.data:0040415F                 db    0
.data:00404160                 db    0
.data:00404161                 db    0
.data:00404162                 db    0
.data:00404163                 db    0
.data:00404164                 db    0
.data:00404165                 db    0
.data:00404166                 db    0
.data:00404167                 db    0
.data:00404168                 db    0
.data:00404169                 db    0
.data:0040416A                 db    0
.data:0040416B                 db    0
.data:0040416C                 db    0
.data:0040416D                 db    0
.data:0040416E                 db    0
.data:0040416F                 db    0
.data:00404170                 db    0
.data:00404171                 db    0
.data:00404172                 db    0
.data:00404173                 db    0
.data:00404174                 db    0
.data:00404175                 db    0
.data:00404176                 db    0
.data:00404177                 db    0
.data:00404178                 db    0
.data:00404179                 db    0
.data:0040417A                 db    0
.data:0040417B                 db    0
.data:0040417C                 db    0
.data:0040417D                 db    0
.data:0040417E                 db    0
.data:0040417F                 db    0
.data:00404180                 db    0
.data:00404181                 db    0
.data:00404182                 db    0
.data:00404183                 db    0
.data:00404184                 db    0
.data:00404185                 db    0
.data:00404186                 db    0
.data:00404187                 db    0
.data:00404188                 db    0
.data:00404189                 db    0
.data:0040418A                 db    0
.data:0040418B                 db    0
.data:0040418C                 db    0
.data:0040418D                 db    0
.data:0040418E                 db    0
.data:0040418F                 db    0
.data:00404190                 db    0
.data:00404191                 db    0
.data:00404192                 db    0
.data:00404193                 db    0
.data:00404194                 db    0
.data:00404195                 db    0
.data:00404196                 db    0
.data:00404197                 db    0
.data:00404198                 db    0
.data:00404199                 db    0
.data:0040419A                 db    0
.data:0040419B                 db    0
.data:0040419C                 db    0
.data:0040419D                 db    0
.data:0040419E                 db    0
.data:0040419F                 db    0
.data:004041A0                 db    0
.data:004041A1                 db    0
.data:004041A2                 db    0
.data:004041A3                 db    0
.data:004041A4                 db    0
.data:004041A5                 db    0
.data:004041A6                 db    0
.data:004041A7                 db    0
.data:004041A8                 db    0
.data:004041A9                 db    0
.data:004041AA                 db    0
.data:004041AB                 db    0
.data:004041AC                 db    0
.data:004041AD                 db    0
.data:004041AE                 db    0
.data:004041AF                 db    0
.data:004041B0                 db    0
.data:004041B1                 db    0
.data:004041B2                 db    0
.data:004041B3                 db    0
.data:004041B4                 db    9
.data:004041B5                 db    0
.data:004041B6                 db    0
.data:004041B7                 db    0
.data:004041B8                 db    2
.data:004041B9                 db    0
.data:004041BA                 db    0
.data:004041BB                 db    0
.data:004041BC                 db    0
.data:004041BD                 db    0
.data:004041BE                 db    0
.data:004041BF                 db    0
.data:004041C0 unk_4041C0      db    4                 ; DATA XREF: ReadTable(x,x,x):loc_4028EE↑o
.data:004041C1                 db    0
.data:004041C2                 db    0
.data:004041C3                 db    0
.data:004041C4                 db    2
.data:004041C5                 db    0
.data:004041C6                 db    0
.data:004041C7                 db    0
.data:004041C8                 db    2
.data:004041C9                 db    0
.data:004041CA                 db    0
.data:004041CB                 db    0
.data:004041CC                 db    1
.data:004041CD                 db    0
.data:004041CE                 db    0
.data:004041CF                 db    0
.data:004041D0                 db    1
.data:004041D1                 db    0
.data:004041D2                 db    0
.data:004041D3                 db    0
.data:004041D4                 db    0
.data:004041D5                 db    0
.data:004041D6                 db    0
.data:004041D7                 db    0
.data:004041D8                 db    0
.data:004041D9                 db    0
.data:004041DA                 db    0
.data:004041DB                 db    0
.data:004041DC                 db    0
.data:004041DD                 db    0
.data:004041DE                 db    0
.data:004041DF                 db    0
.data:004041E0                 db    0
.data:004041E1                 db    0
.data:004041E2                 db    0
.data:004041E3                 db    0
.data:004041E4                 db    0
.data:004041E5                 db    0
.data:004041E6                 db    0
.data:004041E7                 db    0
.data:004041E8                 db    0
.data:004041E9                 db    0
.data:004041EA                 db    0
.data:004041EB                 db    0
.data:004041EC                 db    0
.data:004041ED                 db    0
.data:004041EE                 db    0
.data:004041EF                 db    0
.data:004041F0                 db    0
.data:004041F1                 db    0
.data:004041F2                 db    0
.data:004041F3                 db    0
.data:004041F4                 db    0
.data:004041F5                 db    0
.data:004041F6                 db    0
.data:004041F7                 db    0
.data:004041F8                 db    0
.data:004041F9                 db    0
.data:004041FA                 db    0
.data:004041FB                 db    0
.data:004041FC                 db    0
.data:004041FD                 db    0
.data:004041FE                 db    0
.data:004041FF                 db    0
.data:00404200                 db    0
.data:00404201                 db    0
.data:00404202                 db    0
.data:00404203                 db    0
.data:00404204                 db    0
.data:00404205                 db    0
.data:00404206                 db    0
.data:00404207                 db    0
.data:00404208                 db    0
.data:00404209                 db    0
.data:0040420A                 db    0
.data:0040420B                 db    0
.data:0040420C                 db    0
.data:0040420D                 db    0
.data:0040420E                 db    0
.data:0040420F                 db    0
.data:00404210                 db    0
.data:00404211                 db    0
.data:00404212                 db    0
.data:00404213                 db    0
.data:00404214                 db    0
.data:00404215                 db    0
.data:00404216                 db    0
.data:00404217                 db    0
.data:00404218                 db    0
.data:00404219                 db    0
.data:0040421A                 db    0
.data:0040421B                 db    0
.data:0040421C                 db    0
.data:0040421D                 db    0
.data:0040421E                 db    0
.data:0040421F                 db    0
.data:00404220                 db    0
.data:00404221                 db    0
.data:00404222                 db    0
.data:00404223                 db    0
.data:00404224                 db    0
.data:00404225                 db    0
.data:00404226                 db    0
.data:00404227                 db    0
.data:00404228                 db    0
.data:00404229                 db    0
.data:0040422A                 db    0
.data:0040422B                 db    0
.data:0040422C                 db    0
.data:0040422D                 db    0
.data:0040422E                 db    0
.data:0040422F                 db    0
.data:00404230                 db    0
.data:00404231                 db    0
.data:00404232                 db    0
.data:00404233                 db    0
.data:00404234                 db    0
.data:00404235                 db    0
.data:00404236                 db    0
.data:00404237                 db    0
.data:00404238                 db    0
.data:00404239                 db    0
.data:0040423A                 db    0
.data:0040423B                 db    0
.data:0040423C                 db    0
.data:0040423D                 db    0
.data:0040423E                 db    0
.data:0040423F                 db    0
.data:00404240                 db    0
.data:00404241                 db    0
.data:00404242                 db    0
.data:00404243                 db    0
.data:00404244                 db    0
.data:00404245                 db    0
.data:00404246                 db    0
.data:00404247                 db    0
.data:00404248                 db    0
.data:00404249                 db    0
.data:0040424A                 db    0
.data:0040424B                 db    0
.data:0040424C                 db    0
.data:0040424D                 db    0
.data:0040424E                 db    0
.data:0040424F                 db    0
.data:00404250                 db    0
.data:00404251                 db    0
.data:00404252                 db    0
.data:00404253                 db    0
.data:00404254                 db    0
.data:00404255                 db    0
.data:00404256                 db    0
.data:00404257                 db    0
.data:00404258                 db    0
.data:00404259                 db    0
.data:0040425A                 db    0
.data:0040425B                 db    0
.data:0040425C                 db    0
.data:0040425D                 db    0
.data:0040425E                 db    0
.data:0040425F                 db    0
.data:00404260                 db    0
.data:00404261                 db    0
.data:00404262                 db    0
.data:00404263                 db    0
.data:00404264                 db    0
.data:00404265                 db    0
.data:00404266                 db    0
.data:00404267                 db    0
.data:00404268                 db    0
.data:00404269                 db    0
.data:0040426A                 db    0
.data:0040426B                 db    0
.data:0040426C                 db    0
.data:0040426D                 db    0
.data:0040426E                 db    0
.data:0040426F                 db    0
.data:00404270                 db    0
.data:00404271                 db    0
.data:00404272                 db    0
.data:00404273                 db    0
.data:00404274                 db    0
.data:00404275                 db    0
.data:00404276                 db    0
.data:00404277                 db    0
.data:00404278                 db    0
.data:00404279                 db    0
.data:0040427A                 db    0
.data:0040427B                 db    0
.data:0040427C                 db    0
.data:0040427D                 db    0
.data:0040427E                 db    0
.data:0040427F                 db    0
.data:00404280                 db    0
.data:00404281                 db    0
.data:00404282                 db    0
.data:00404283                 db    0
.data:00404284                 db    0
.data:00404285                 db    0
.data:00404286                 db    0
.data:00404287                 db    0
.data:00404288                 db    0
.data:00404289                 db    0
.data:0040428A                 db    0
.data:0040428B                 db    0
.data:0040428C                 db    9
.data:0040428D                 db    0
.data:0040428E                 db    0
.data:0040428F                 db    0
.data:00404290                 db    2
.data:00404291                 db    0
.data:00404292                 db    0
.data:00404293                 db    0
.data:00404294                 db    0
.data:00404295                 db    0
.data:00404296                 db    0
.data:00404297                 db    0
.data:00404298 unk_404298      db    4                 ; DATA XREF: ReadTable(x,x,x):loc_402925↑o
.data:00404299                 db    0
.data:0040429A                 db    0
.data:0040429B                 db    0
.data:0040429C                 db    7
.data:0040429D                 db    0
.data:0040429E                 db    0
.data:0040429F                 db    0
.data:004042A0                 db    5
.data:004042A1                 db    0
.data:004042A2                 db    0
.data:004042A3                 db    0
.data:004042A4                 db    1
.data:004042A5                 db    0
.data:004042A6                 db    0
.data:004042A7                 db    0
.data:004042A8                 db    1
.data:004042A9                 db    0
.data:004042AA                 db    0
.data:004042AB                 db    0
.data:004042AC                 db    0
.data:004042AD                 db    0
.data:004042AE                 db    0
.data:004042AF                 db    0
.data:004042B0                 db    0
.data:004042B1                 db    0
.data:004042B2                 db    0
.data:004042B3                 db    0
.data:004042B4                 db    0
.data:004042B5                 db    0
.data:004042B6                 db    0
.data:004042B7                 db    0
.data:004042B8                 db    0
.data:004042B9                 db    0
.data:004042BA                 db    0
.data:004042BB                 db    0
.data:004042BC                 db    0
.data:004042BD                 db    0
.data:004042BE                 db    0
.data:004042BF                 db    0
.data:004042C0                 db    0
.data:004042C1                 db    0
.data:004042C2                 db    0
.data:004042C3                 db    0
.data:004042C4                 db    0
.data:004042C5                 db    0
.data:004042C6                 db    0
.data:004042C7                 db    0
.data:004042C8                 db    0
.data:004042C9                 db    0
.data:004042CA                 db    0
.data:004042CB                 db    0
.data:004042CC                 db    0
.data:004042CD                 db    0
.data:004042CE                 db    0
.data:004042CF                 db    0
.data:004042D0                 db    0
.data:004042D1                 db    0
.data:004042D2                 db    0
.data:004042D3                 db    0
.data:004042D4                 db    0
.data:004042D5                 db    0
.data:004042D6                 db    0
.data:004042D7                 db    0
.data:004042D8                 db    0
.data:004042D9                 db    0
.data:004042DA                 db    0
.data:004042DB                 db    0
.data:004042DC                 db    0
.data:004042DD                 db    0
.data:004042DE                 db    0
.data:004042DF                 db    0
.data:004042E0                 db    0
.data:004042E1                 db    0
.data:004042E2                 db    0
.data:004042E3                 db    0
.data:004042E4                 db    0
.data:004042E5                 db    0
.data:004042E6                 db    0
.data:004042E7                 db    0
.data:004042E8                 db    0
.data:004042E9                 db    0
.data:004042EA                 db    0
.data:004042EB                 db    0
.data:004042EC                 db    0
.data:004042ED                 db    0
.data:004042EE                 db    0
.data:004042EF                 db    0
.data:004042F0                 db    0
.data:004042F1                 db    0
.data:004042F2                 db    0
.data:004042F3                 db    0
.data:004042F4                 db    0
.data:004042F5                 db    0
.data:004042F6                 db    0
.data:004042F7                 db    0
.data:004042F8                 db    0
.data:004042F9                 db    0
.data:004042FA                 db    0
.data:004042FB                 db    0
.data:004042FC                 db    0
.data:004042FD                 db    0
.data:004042FE                 db    0
.data:004042FF                 db    0
.data:00404300                 db    0
.data:00404301                 db    0
.data:00404302                 db    0
.data:00404303                 db    0
.data:00404304                 db    0
.data:00404305                 db    0
.data:00404306                 db    0
.data:00404307                 db    0
.data:00404308                 db    0
.data:00404309                 db    0
.data:0040430A                 db    0
.data:0040430B                 db    0
.data:0040430C                 db    0
.data:0040430D                 db    0
.data:0040430E                 db    0
.data:0040430F                 db    0
.data:00404310                 db    0
.data:00404311                 db    0
.data:00404312                 db    0
.data:00404313                 db    0
.data:00404314                 db    0
.data:00404315                 db    0
.data:00404316                 db    0
.data:00404317                 db    0
.data:00404318                 db    0
.data:00404319                 db    0
.data:0040431A                 db    0
.data:0040431B                 db    0
.data:0040431C                 db    0
.data:0040431D                 db    0
.data:0040431E                 db    0
.data:0040431F                 db    0
.data:00404320                 db    0
.data:00404321                 db    0
.data:00404322                 db    0
.data:00404323                 db    0
.data:00404324                 db    0
.data:00404325                 db    0
.data:00404326                 db    0
.data:00404327                 db    0
.data:00404328                 db    0
.data:00404329                 db    0
.data:0040432A                 db    0
.data:0040432B                 db    0
.data:0040432C                 db    0
.data:0040432D                 db    0
.data:0040432E                 db    0
.data:0040432F                 db    0
.data:00404330                 db    0
.data:00404331                 db    0
.data:00404332                 db    0
.data:00404333                 db    0
.data:00404334                 db    0
.data:00404335                 db    0
.data:00404336                 db    0
.data:00404337                 db    0
.data:00404338                 db    0
.data:00404339                 db    0
.data:0040433A                 db    0
.data:0040433B                 db    0
.data:0040433C                 db    0
.data:0040433D                 db    0
.data:0040433E                 db    0
.data:0040433F                 db    0
.data:00404340                 db    0
.data:00404341                 db    0
.data:00404342                 db    0
.data:00404343                 db    0
.data:00404344                 db    0
.data:00404345                 db    0
.data:00404346                 db    0
.data:00404347                 db    0
.data:00404348                 db    0
.data:00404349                 db    0
.data:0040434A                 db    0
.data:0040434B                 db    0
.data:0040434C                 db    0
.data:0040434D                 db    0
.data:0040434E                 db    0
.data:0040434F                 db    0
.data:00404350                 db    0
.data:00404351                 db    0
.data:00404352                 db    0
.data:00404353                 db    0
.data:00404354                 db    0
.data:00404355                 db    0
.data:00404356                 db    0
.data:00404357                 db    0
.data:00404358                 db    0
.data:00404359                 db    0
.data:0040435A                 db    0
.data:0040435B                 db    0
.data:0040435C                 db    0
.data:0040435D                 db    0
.data:0040435E                 db    0
.data:0040435F                 db    0
.data:00404360                 db    0
.data:00404361                 db    0
.data:00404362                 db    0
.data:00404363                 db    0
.data:00404364                 db    9
.data:00404365                 db    0
.data:00404366                 db    0
.data:00404367                 db    0
.data:00404368                 db    2
.data:00404369                 db    0
.data:0040436A                 db    0
.data:0040436B                 db    0
.data:0040436C                 db    0
.data:0040436D                 db    0
.data:0040436E                 db    0
.data:0040436F                 db    0
.data:00404370 unk_404370      db    4                 ; DATA XREF: ReadTable(x,x,x)+12D↑o
.data:00404371                 db    0
.data:00404372                 db    0
.data:00404373                 db    0
.data:00404374                 db    4
.data:00404375                 db    0
.data:00404376                 db    0
.data:00404377                 db    0
.data:00404378                 db  15h
.data:00404379                 db    0
.data:0040437A                 db    0
.data:0040437B                 db    0
.data:0040437C                 db    1
.data:0040437D                 db    0
.data:0040437E                 db    0
.data:0040437F                 db    0
.data:00404380                 db    1
.data:00404381                 db    0
.data:00404382                 db    0
.data:00404383                 db    0
.data:00404384                 db    0
.data:00404385                 db    0
.data:00404386                 db    0
.data:00404387                 db    0
.data:00404388                 db    0
.data:00404389                 db    0
.data:0040438A                 db    0
.data:0040438B                 db    0
.data:0040438C                 db    0
.data:0040438D                 db    0
.data:0040438E                 db    0
.data:0040438F                 db    0
.data:00404390                 db    0
.data:00404391                 db    0
.data:00404392                 db    0
.data:00404393                 db    0
.data:00404394                 db    0
.data:00404395                 db    0
.data:00404396                 db    0
.data:00404397                 db    0
.data:00404398                 db    0
.data:00404399                 db    0
.data:0040439A                 db    0
.data:0040439B                 db    0
.data:0040439C                 db    0
.data:0040439D                 db    0
.data:0040439E                 db    0
.data:0040439F                 db    0
.data:004043A0                 db    0
.data:004043A1                 db    0
.data:004043A2                 db    0
.data:004043A3                 db    0
.data:004043A4                 db    0
.data:004043A5                 db    0
.data:004043A6                 db    0
.data:004043A7                 db    0
.data:004043A8                 db    0
.data:004043A9                 db    0
.data:004043AA                 db    0
.data:004043AB                 db    0
.data:004043AC                 db    0
.data:004043AD                 db    0
.data:004043AE                 db    0
.data:004043AF                 db    0
.data:004043B0                 db    0
.data:004043B1                 db    0
.data:004043B2                 db    0
.data:004043B3                 db    0
.data:004043B4                 db    0
.data:004043B5                 db    0
.data:004043B6                 db    0
.data:004043B7                 db    0
.data:004043B8                 db    0
.data:004043B9                 db    0
.data:004043BA                 db    0
.data:004043BB                 db    0
.data:004043BC                 db    0
.data:004043BD                 db    0
.data:004043BE                 db    0
.data:004043BF                 db    0
.data:004043C0                 db    0
.data:004043C1                 db    0
.data:004043C2                 db    0
.data:004043C3                 db    0
.data:004043C4                 db    0
.data:004043C5                 db    0
.data:004043C6                 db    0
.data:004043C7                 db    0
.data:004043C8                 db    0
.data:004043C9                 db    0
.data:004043CA                 db    0
.data:004043CB                 db    0
.data:004043CC                 db    0
.data:004043CD                 db    0
.data:004043CE                 db    0
.data:004043CF                 db    0
.data:004043D0                 db    0
.data:004043D1                 db    0
.data:004043D2                 db    0
.data:004043D3                 db    0
.data:004043D4                 db    0
.data:004043D5                 db    0
.data:004043D6                 db    0
.data:004043D7                 db    0
.data:004043D8                 db    0
.data:004043D9                 db    0
.data:004043DA                 db    0
.data:004043DB                 db    0
.data:004043DC                 db    0
.data:004043DD                 db    0
.data:004043DE                 db    0
.data:004043DF                 db    0
.data:004043E0                 db    0
.data:004043E1                 db    0
.data:004043E2                 db    0
.data:004043E3                 db    0
.data:004043E4                 db    0
.data:004043E5                 db    0
.data:004043E6                 db    0
.data:004043E7                 db    0
.data:004043E8                 db    0
.data:004043E9                 db    0
.data:004043EA                 db    0
.data:004043EB                 db    0
.data:004043EC                 db    0
.data:004043ED                 db    0
.data:004043EE                 db    0
.data:004043EF                 db    0
.data:004043F0                 db    0
.data:004043F1                 db    0
.data:004043F2                 db    0
.data:004043F3                 db    0
.data:004043F4                 db    0
.data:004043F5                 db    0
.data:004043F6                 db    0
.data:004043F7                 db    0
.data:004043F8                 db    0
.data:004043F9                 db    0
.data:004043FA                 db    0
.data:004043FB                 db    0
.data:004043FC                 db    0
.data:004043FD                 db    0
.data:004043FE                 db    0
.data:004043FF                 db    0
.data:00404400                 db    0
.data:00404401                 db    0
.data:00404402                 db    0
.data:00404403                 db    0
.data:00404404                 db    0
.data:00404405                 db    0
.data:00404406                 db    0
.data:00404407                 db    0
.data:00404408                 db    0
.data:00404409                 db    0
.data:0040440A                 db    0
.data:0040440B                 db    0
.data:0040440C                 db    0
.data:0040440D                 db    0
.data:0040440E                 db    0
.data:0040440F                 db    0
.data:00404410                 db    0
.data:00404411                 db    0
.data:00404412                 db    0
.data:00404413                 db    0
.data:00404414                 db    0
.data:00404415                 db    0
.data:00404416                 db    0
.data:00404417                 db    0
.data:00404418                 db    0
.data:00404419                 db    0
.data:0040441A                 db    0
.data:0040441B                 db    0
.data:0040441C                 db    0
.data:0040441D                 db    0
.data:0040441E                 db    0
.data:0040441F                 db    0
.data:00404420                 db    0
.data:00404421                 db    0
.data:00404422                 db    0
.data:00404423                 db    0
.data:00404424                 db    0
.data:00404425                 db    0
.data:00404426                 db    0
.data:00404427                 db    0
.data:00404428                 db    0
.data:00404429                 db    0
.data:0040442A                 db    0
.data:0040442B                 db    0
.data:0040442C                 db    0
.data:0040442D                 db    0
.data:0040442E                 db    0
.data:0040442F                 db    0
.data:00404430                 db    0
.data:00404431                 db    0
.data:00404432                 db    0
.data:00404433                 db    0
.data:00404434                 db    0
.data:00404435                 db    0
.data:00404436                 db    0
.data:00404437                 db    0
.data:00404438                 db    0
.data:00404439                 db    0
.data:0040443A                 db    0
.data:0040443B                 db    0
.data:0040443C                 db    9
.data:0040443D                 db    0
.data:0040443E                 db    0
.data:0040443F                 db    0
.data:00404440                 db    2
.data:00404441                 db    0
.data:00404442                 db    0
.data:00404443                 db    0
.data:00404444                 db    0
.data:00404445                 db    0
.data:00404446                 db    0
.data:00404447                 db    0
.data:00404448 unk_404448      db    4                 ; DATA XREF: ReadTable(x,x,x):loc_4028E0↑o
.data:00404449                 db    0
.data:0040444A                 db    0
.data:0040444B                 db    0
.data:0040444C                 db    4
.data:0040444D                 db    0
.data:0040444E                 db    0
.data:0040444F                 db    0
.data:00404450                 db  14h
.data:00404451                 db    0
.data:00404452                 db    0
.data:00404453                 db    0
.data:00404454                 db    1
.data:00404455                 db    0
.data:00404456                 db    0
.data:00404457                 db    0
.data:00404458                 db    1
.data:00404459                 db    0
.data:0040445A                 db    0
.data:0040445B                 db    0
.data:0040445C                 db    0
.data:0040445D                 db    0
.data:0040445E                 db    0
.data:0040445F                 db    0
.data:00404460                 db    0
.data:00404461                 db    0
.data:00404462                 db    0
.data:00404463                 db    0
.data:00404464                 db    0
.data:00404465                 db    0
.data:00404466                 db    0
.data:00404467                 db    0
.data:00404468                 db    0
.data:00404469                 db    0
.data:0040446A                 db    0
.data:0040446B                 db    0
.data:0040446C                 db    0
.data:0040446D                 db    0
.data:0040446E                 db    0
.data:0040446F                 db    0
.data:00404470                 db    0
.data:00404471                 db    0
.data:00404472                 db    0
.data:00404473                 db    0
.data:00404474                 db    0
.data:00404475                 db    0
.data:00404476                 db    0
.data:00404477                 db    0
.data:00404478                 db    0
.data:00404479                 db    0
.data:0040447A                 db    0
.data:0040447B                 db    0
.data:0040447C                 db    0
.data:0040447D                 db    0
.data:0040447E                 db    0
.data:0040447F                 db    0
.data:00404480                 db    0
.data:00404481                 db    0
.data:00404482                 db    0
.data:00404483                 db    0
.data:00404484                 db    0
.data:00404485                 db    0
.data:00404486                 db    0
.data:00404487                 db    0
.data:00404488                 db    0
.data:00404489                 db    0
.data:0040448A                 db    0
.data:0040448B                 db    0
.data:0040448C                 db    0
.data:0040448D                 db    0
.data:0040448E                 db    0
.data:0040448F                 db    0
.data:00404490                 db    0
.data:00404491                 db    0
.data:00404492                 db    0
.data:00404493                 db    0
.data:00404494                 db    0
.data:00404495                 db    0
.data:00404496                 db    0
.data:00404497                 db    0
.data:00404498                 db    0
.data:00404499                 db    0
.data:0040449A                 db    0
.data:0040449B                 db    0
.data:0040449C                 db    0
.data:0040449D                 db    0
.data:0040449E                 db    0
.data:0040449F                 db    0
.data:004044A0                 db    0
.data:004044A1                 db    0
.data:004044A2                 db    0
.data:004044A3                 db    0
.data:004044A4                 db    0
.data:004044A5                 db    0
.data:004044A6                 db    0
.data:004044A7                 db    0
.data:004044A8                 db    0
.data:004044A9                 db    0
.data:004044AA                 db    0
.data:004044AB                 db    0
.data:004044AC                 db    0
.data:004044AD                 db    0
.data:004044AE                 db    0
.data:004044AF                 db    0
.data:004044B0                 db    0
.data:004044B1                 db    0
.data:004044B2                 db    0
.data:004044B3                 db    0
.data:004044B4                 db    0
.data:004044B5                 db    0
.data:004044B6                 db    0
.data:004044B7                 db    0
.data:004044B8                 db    0
.data:004044B9                 db    0
.data:004044BA                 db    0
.data:004044BB                 db    0
.data:004044BC                 db    0
.data:004044BD                 db    0
.data:004044BE                 db    0
.data:004044BF                 db    0
.data:004044C0                 db    0
.data:004044C1                 db    0
.data:004044C2                 db    0
.data:004044C3                 db    0
.data:004044C4                 db    0
.data:004044C5                 db    0
.data:004044C6                 db    0
.data:004044C7                 db    0
.data:004044C8                 db    0
.data:004044C9                 db    0
.data:004044CA                 db    0
.data:004044CB                 db    0
.data:004044CC                 db    0
.data:004044CD                 db    0
.data:004044CE                 db    0
.data:004044CF                 db    0
.data:004044D0                 db    0
.data:004044D1                 db    0
.data:004044D2                 db    0
.data:004044D3                 db    0
.data:004044D4                 db    0
.data:004044D5                 db    0
.data:004044D6                 db    0
.data:004044D7                 db    0
.data:004044D8                 db    0
.data:004044D9                 db    0
.data:004044DA                 db    0
.data:004044DB                 db    0
.data:004044DC                 db    0
.data:004044DD                 db    0
.data:004044DE                 db    0
.data:004044DF                 db    0
.data:004044E0                 db    0
.data:004044E1                 db    0
.data:004044E2                 db    0
.data:004044E3                 db    0
.data:004044E4                 db    0
.data:004044E5                 db    0
.data:004044E6                 db    0
.data:004044E7                 db    0
.data:004044E8                 db    0
.data:004044E9                 db    0
.data:004044EA                 db    0
.data:004044EB                 db    0
.data:004044EC                 db    0
.data:004044ED                 db    0
.data:004044EE                 db    0
.data:004044EF                 db    0
.data:004044F0                 db    0
.data:004044F1                 db    0
.data:004044F2                 db    0
.data:004044F3                 db    0
.data:004044F4                 db    0
.data:004044F5                 db    0
.data:004044F6                 db    0
.data:004044F7                 db    0
.data:004044F8                 db    0
.data:004044F9                 db    0
.data:004044FA                 db    0
.data:004044FB                 db    0
.data:004044FC                 db    0
.data:004044FD                 db    0
.data:004044FE                 db    0
.data:004044FF                 db    0
.data:00404500                 db    0
.data:00404501                 db    0
.data:00404502                 db    0
.data:00404503                 db    0
.data:00404504                 db    0
.data:00404505                 db    0
.data:00404506                 db    0
.data:00404507                 db    0
.data:00404508                 db    0
.data:00404509                 db    0
.data:0040450A                 db    0
.data:0040450B                 db    0
.data:0040450C                 db    0
.data:0040450D                 db    0
.data:0040450E                 db    0
.data:0040450F                 db    0
.data:00404510                 db    0
.data:00404511                 db    0
.data:00404512                 db    0
.data:00404513                 db    0
.data:00404514                 db    9
.data:00404515                 db    0
.data:00404516                 db    0
.data:00404517                 db    0
.data:00404518                 db    2
.data:00404519                 db    0
.data:0040451A                 db    0
.data:0040451B                 db    0
.data:0040451C                 db    0
.data:0040451D                 db    0
.data:0040451E                 db    0
.data:0040451F                 db    0
.data:00404520 dword_404520    dd 6                    ; DATA XREF: ReadTable(x,x,x):loc_40289C↑r
.data:00404520                                         ; ReadTable(x,x,x)+1A9↑r ...
.data:00404524 unk_404524      db    1                 ; DATA XREF: ReadTable(x,x,x)+100↑o
.data:00404525                 db    0
.data:00404526                 db    0
.data:00404527                 db    0
.data:00404528                 db    3
.data:00404529                 db    0
.data:0040452A                 db    0
.data:0040452B                 db    0
.data:0040452C                 db    6
.data:0040452D                 db    0
.data:0040452E                 db    0
.data:0040452F                 db    0
.data:00404530                 db    1
.data:00404531                 db    0
.data:00404532                 db    0
.data:00404533                 db    0
.data:00404534                 db    2
.data:00404535                 db    0
.data:00404536                 db    0
.data:00404537                 db    0
.data:00404538                 db    1
.data:00404539                 db    0
.data:0040453A                 db    0
.data:0040453B                 db    0
.data:0040453C                 db    0
.data:0040453D                 db    0
.data:0040453E                 db    0
.data:0040453F                 db    0
.data:00404540                 db    0
.data:00404541                 db    0
.data:00404542                 db    0
.data:00404543                 db    0
.data:00404544                 db    0
.data:00404545                 db    0
.data:00404546                 db    0
.data:00404547                 db    0
.data:00404548                 db    0
.data:00404549                 db    0
.data:0040454A                 db    0
.data:0040454B                 db    0
.data:0040454C                 db    0
.data:0040454D                 db    0
.data:0040454E                 db    0
.data:0040454F                 db    0
.data:00404550                 db    0
.data:00404551                 db    0
.data:00404552                 db    0
.data:00404553                 db    0
.data:00404554                 db    0
.data:00404555                 db    0
.data:00404556                 db    0
.data:00404557                 db    0
.data:00404558                 db    0
.data:00404559                 db    0
.data:0040455A                 db    0
.data:0040455B                 db    0
.data:0040455C                 db    0
.data:0040455D                 db    0
.data:0040455E                 db    0
.data:0040455F                 db    0
.data:00404560                 db    0
.data:00404561                 db    0
.data:00404562                 db    0
.data:00404563                 db    0
.data:00404564                 db    0
.data:00404565                 db    0
.data:00404566                 db    0
.data:00404567                 db    0
.data:00404568                 db    0
.data:00404569                 db    0
.data:0040456A                 db    0
.data:0040456B                 db    0
.data:0040456C                 db    0
.data:0040456D                 db    0
.data:0040456E                 db    0
.data:0040456F                 db    0
.data:00404570                 db    0
.data:00404571                 db    0
.data:00404572                 db    0
.data:00404573                 db    0
.data:00404574                 db    0
.data:00404575                 db    0
.data:00404576                 db    0
.data:00404577                 db    0
.data:00404578                 db    0
.data:00404579                 db    0
.data:0040457A                 db    0
.data:0040457B                 db    0
.data:0040457C                 db    0
.data:0040457D                 db    0
.data:0040457E                 db    0
.data:0040457F                 db    0
.data:00404580                 db    0
.data:00404581                 db    0
.data:00404582                 db    0
.data:00404583                 db    0
.data:00404584                 db    0
.data:00404585                 db    0
.data:00404586                 db    0
.data:00404587                 db    0
.data:00404588                 db    0
.data:00404589                 db    0
.data:0040458A                 db    0
.data:0040458B                 db    0
.data:0040458C                 db    0
.data:0040458D                 db    0
.data:0040458E                 db    0
.data:0040458F                 db    0
.data:00404590                 db    0
.data:00404591                 db    0
.data:00404592                 db    0
.data:00404593                 db    0
.data:00404594                 db    0
.data:00404595                 db    0
.data:00404596                 db    0
.data:00404597                 db    0
.data:00404598                 db    0
.data:00404599                 db    0
.data:0040459A                 db    0
.data:0040459B                 db    0
.data:0040459C                 db    0
.data:0040459D                 db    0
.data:0040459E                 db    0
.data:0040459F                 db    0
.data:004045A0                 db    0
.data:004045A1                 db    0
.data:004045A2                 db    0
.data:004045A3                 db    0
.data:004045A4                 db    0
.data:004045A5                 db    0
.data:004045A6                 db    0
.data:004045A7                 db    0
.data:004045A8                 db    0
.data:004045A9                 db    0
.data:004045AA                 db    0
.data:004045AB                 db    0
.data:004045AC                 db    0
.data:004045AD                 db    0
.data:004045AE                 db    0
.data:004045AF                 db    0
.data:004045B0                 db    0
.data:004045B1                 db    0
.data:004045B2                 db    0
.data:004045B3                 db    0
.data:004045B4                 db    0
.data:004045B5                 db    0
.data:004045B6                 db    0
.data:004045B7                 db    0
.data:004045B8                 db    0
.data:004045B9                 db    0
.data:004045BA                 db    0
.data:004045BB                 db    0
.data:004045BC                 db    0
.data:004045BD                 db    0
.data:004045BE                 db    0
.data:004045BF                 db    0
.data:004045C0                 db    0
.data:004045C1                 db    0
.data:004045C2                 db    0
.data:004045C3                 db    0
.data:004045C4                 db    0
.data:004045C5                 db    0
.data:004045C6                 db    0
.data:004045C7                 db    0
.data:004045C8                 db    0
.data:004045C9                 db    0
.data:004045CA                 db    0
.data:004045CB                 db    0
.data:004045CC                 db    0
.data:004045CD                 db    0
.data:004045CE                 db    0
.data:004045CF                 db    0
.data:004045D0                 db    0
.data:004045D1                 db    0
.data:004045D2                 db    0
.data:004045D3                 db    0
.data:004045D4                 db    0
.data:004045D5                 db    0
.data:004045D6                 db    0
.data:004045D7                 db    0
.data:004045D8                 db    0
.data:004045D9                 db    0
.data:004045DA                 db    0
.data:004045DB                 db    0
.data:004045DC                 db    0
.data:004045DD                 db    0
.data:004045DE                 db    0
.data:004045DF                 db    0
.data:004045E0                 db    0
.data:004045E1                 db    0
.data:004045E2                 db    0
.data:004045E3                 db    0
.data:004045E4                 db    0
.data:004045E5                 db    0
.data:004045E6                 db    0
.data:004045E7                 db    0
.data:004045E8                 db    0
.data:004045E9                 db    0
.data:004045EA                 db    0
.data:004045EB                 db    0
.data:004045EC                 db    0
.data:004045ED                 db    0
.data:004045EE                 db    0
.data:004045EF                 db    0
.data:004045F0                 db    0
.data:004045F1                 db    0
.data:004045F2                 db    0
.data:004045F3                 db    0
.data:004045F4                 db    0
.data:004045F5                 db    0
.data:004045F6                 db    0
.data:004045F7                 db    0
.data:004045F8 unk_4045F8      db    2                 ; DATA XREF: ReadTable(x,x,x):loc_4028E7↑o
.data:004045F9                 db    0
.data:004045FA                 db    0
.data:004045FB                 db    0
.data:004045FC                 db    4
.data:004045FD                 db    0
.data:004045FE                 db    0
.data:004045FF                 db    0
.data:00404600                 db    1
.data:00404601                 db    0
.data:00404602                 db    0
.data:00404603                 db    0
.data:00404604                 db    0
.data:00404605                 db    0
.data:00404606                 db    0
.data:00404607                 db    0
.data:00404608                 db    0
.data:00404609                 db    0
.data:0040460A                 db    0
.data:0040460B                 db    0
.data:0040460C                 db    0
.data:0040460D                 db    0
.data:0040460E                 db    0
.data:0040460F                 db    0
.data:00404610                 db    0
.data:00404611                 db    0
.data:00404612                 db    0
.data:00404613                 db    0
.data:00404614                 db    0
.data:00404615                 db    0
.data:00404616                 db    0
.data:00404617                 db    0
.data:00404618                 db    0
.data:00404619                 db    0
.data:0040461A                 db    0
.data:0040461B                 db    0
.data:0040461C                 db    0
.data:0040461D                 db    0
.data:0040461E                 db    0
.data:0040461F                 db    0
.data:00404620                 db    0
.data:00404621                 db    0
.data:00404622                 db    0
.data:00404623                 db    0
.data:00404624                 db    0
.data:00404625                 db    0
.data:00404626                 db    0
.data:00404627                 db    0
.data:00404628                 db    0
.data:00404629                 db    0
.data:0040462A                 db    0
.data:0040462B                 db    0
.data:0040462C                 db    0
.data:0040462D                 db    0
.data:0040462E                 db    0
.data:0040462F                 db    0
.data:00404630                 db    0
.data:00404631                 db    0
.data:00404632                 db    0
.data:00404633                 db    0
.data:00404634                 db    0
.data:00404635                 db    0
.data:00404636                 db    0
.data:00404637                 db    0
.data:00404638                 db    0
.data:00404639                 db    0
.data:0040463A                 db    0
.data:0040463B                 db    0
.data:0040463C                 db    0
.data:0040463D                 db    0
.data:0040463E                 db    0
.data:0040463F                 db    0
.data:00404640                 db    0
.data:00404641                 db    0
.data:00404642                 db    0
.data:00404643                 db    0
.data:00404644                 db    0
.data:00404645                 db    0
.data:00404646                 db    0
.data:00404647                 db    0
.data:00404648                 db    0
.data:00404649                 db    0
.data:0040464A                 db    0
.data:0040464B                 db    0
.data:0040464C                 db    0
.data:0040464D                 db    0
.data:0040464E                 db    0
.data:0040464F                 db    0
.data:00404650                 db    0
.data:00404651                 db    0
.data:00404652                 db    0
.data:00404653                 db    0
.data:00404654                 db    0
.data:00404655                 db    0
.data:00404656                 db    0
.data:00404657                 db    0
.data:00404658                 db    0
.data:00404659                 db    0
.data:0040465A                 db    0
.data:0040465B                 db    0
.data:0040465C                 db    0
.data:0040465D                 db    0
.data:0040465E                 db    0
.data:0040465F                 db    0
.data:00404660                 db    0
.data:00404661                 db    0
.data:00404662                 db    0
.data:00404663                 db    0
.data:00404664                 db    0
.data:00404665                 db    0
.data:00404666                 db    0
.data:00404667                 db    0
.data:00404668                 db    0
.data:00404669                 db    0
.data:0040466A                 db    0
.data:0040466B                 db    0
.data:0040466C                 db    0
.data:0040466D                 db    0
.data:0040466E                 db    0
.data:0040466F                 db    0
.data:00404670                 db    0
.data:00404671                 db    0
.data:00404672                 db    0
.data:00404673                 db    0
.data:00404674                 db    0
.data:00404675                 db    0
.data:00404676                 db    0
.data:00404677                 db    0
.data:00404678                 db    0
.data:00404679                 db    0
.data:0040467A                 db    0
.data:0040467B                 db    0
.data:0040467C                 db    0
.data:0040467D                 db    0
.data:0040467E                 db    0
.data:0040467F                 db    0
.data:00404680                 db    0
.data:00404681                 db    0
.data:00404682                 db    0
.data:00404683                 db    0
.data:00404684                 db    0
.data:00404685                 db    0
.data:00404686                 db    0
.data:00404687                 db    0
.data:00404688                 db    0
.data:00404689                 db    0
.data:0040468A                 db    0
.data:0040468B                 db    0
.data:0040468C                 db    0
.data:0040468D                 db    0
.data:0040468E                 db    0
.data:0040468F                 db    0
.data:00404690                 db    0
.data:00404691                 db    0
.data:00404692                 db    0
.data:00404693                 db    0
.data:00404694                 db    0
.data:00404695                 db    0
.data:00404696                 db    0
.data:00404697                 db    0
.data:00404698                 db    0
.data:00404699                 db    0
.data:0040469A                 db    0
.data:0040469B                 db    0
.data:0040469C                 db    0
.data:0040469D                 db    0
.data:0040469E                 db    0
.data:0040469F                 db    0
.data:004046A0                 db    0
.data:004046A1                 db    0
.data:004046A2                 db    0
.data:004046A3                 db    0
.data:004046A4                 db    0
.data:004046A5                 db    0
.data:004046A6                 db    0
.data:004046A7                 db    0
.data:004046A8                 db    0
.data:004046A9                 db    0
.data:004046AA                 db    0
.data:004046AB                 db    0
.data:004046AC                 db    0
.data:004046AD                 db    0
.data:004046AE                 db    0
.data:004046AF                 db    0
.data:004046B0                 db    0
.data:004046B1                 db    0
.data:004046B2                 db    0
.data:004046B3                 db    0
.data:004046B4                 db    0
.data:004046B5                 db    0
.data:004046B6                 db    0
.data:004046B7                 db    0
.data:004046B8                 db    0
.data:004046B9                 db    0
.data:004046BA                 db    0
.data:004046BB                 db    0
.data:004046BC                 db    0
.data:004046BD                 db    0
.data:004046BE                 db    0
.data:004046BF                 db    0
.data:004046C0                 db    0
.data:004046C1                 db    0
.data:004046C2                 db    0
.data:004046C3                 db    0
.data:004046C4                 db    7
.data:004046C5                 db    0
.data:004046C6                 db    0
.data:004046C7                 db    0
.data:004046C8                 db    1
.data:004046C9                 db    0
.data:004046CA                 db    0
.data:004046CB                 db    0
.data:004046CC                 db    0
.data:004046CD                 db    0
.data:004046CE                 db    0
.data:004046CF                 db    0
.data:004046D0 unk_4046D0      db    4                 ; DATA XREF: ReadTable(x,x,x):loc_40292C↑o
.data:004046D1                 db    0
.data:004046D2                 db    0
.data:004046D3                 db    0
.data:004046D4                 db    6
.data:004046D5                 db    0
.data:004046D6                 db    0
.data:004046D7                 db    0
.data:004046D8                 db  0Dh
.data:004046D9                 db    0
.data:004046DA                 db    0
.data:004046DB                 db    0
.data:004046DC                 db    1
.data:004046DD                 db    0
.data:004046DE                 db    0
.data:004046DF                 db    0
.data:004046E0                 db    1
.data:004046E1                 db    0
.data:004046E2                 db    0
.data:004046E3                 db    0
.data:004046E4                 db    0
.data:004046E5                 db    0
.data:004046E6                 db    0
.data:004046E7                 db    0
.data:004046E8                 db    0
.data:004046E9                 db    0
.data:004046EA                 db    0
.data:004046EB                 db    0
.data:004046EC                 db    0
.data:004046ED                 db    0
.data:004046EE                 db    0
.data:004046EF                 db    0
.data:004046F0                 db    0
.data:004046F1                 db    0
.data:004046F2                 db    0
.data:004046F3                 db    0
.data:004046F4                 db    0
.data:004046F5                 db    0
.data:004046F6                 db    0
.data:004046F7                 db    0
.data:004046F8                 db    0
.data:004046F9                 db    0
.data:004046FA                 db    0
.data:004046FB                 db    0
.data:004046FC                 db    0
.data:004046FD                 db    0
.data:004046FE                 db    0
.data:004046FF                 db    0
.data:00404700                 db    0
.data:00404701                 db    0
.data:00404702                 db    0
.data:00404703                 db    0
.data:00404704                 db    0
.data:00404705                 db    0
.data:00404706                 db    0
.data:00404707                 db    0
.data:00404708                 db    0
.data:00404709                 db    0
.data:0040470A                 db    0
.data:0040470B                 db    0
.data:0040470C                 db    0
.data:0040470D                 db    0
.data:0040470E                 db    0
.data:0040470F                 db    0
.data:00404710                 db    0
.data:00404711                 db    0
.data:00404712                 db    0
.data:00404713                 db    0
.data:00404714                 db    0
.data:00404715                 db    0
.data:00404716                 db    0
.data:00404717                 db    0
.data:00404718                 db    0
.data:00404719                 db    0
.data:0040471A                 db    0
.data:0040471B                 db    0
.data:0040471C                 db    0
.data:0040471D                 db    0
.data:0040471E                 db    0
.data:0040471F                 db    0
.data:00404720                 db    0
.data:00404721                 db    0
.data:00404722                 db    0
.data:00404723                 db    0
.data:00404724                 db    0
.data:00404725                 db    0
.data:00404726                 db    0
.data:00404727                 db    0
.data:00404728                 db    0
.data:00404729                 db    0
.data:0040472A                 db    0
.data:0040472B                 db    0
.data:0040472C                 db    0
.data:0040472D                 db    0
.data:0040472E                 db    0
.data:0040472F                 db    0
.data:00404730                 db    0
.data:00404731                 db    0
.data:00404732                 db    0
.data:00404733                 db    0
.data:00404734                 db    0
.data:00404735                 db    0
.data:00404736                 db    0
.data:00404737                 db    0
.data:00404738                 db    0
.data:00404739                 db    0
.data:0040473A                 db    0
.data:0040473B                 db    0
.data:0040473C                 db    0
.data:0040473D                 db    0
.data:0040473E                 db    0
.data:0040473F                 db    0
.data:00404740                 db    0
.data:00404741                 db    0
.data:00404742                 db    0
.data:00404743                 db    0
.data:00404744                 db    0
.data:00404745                 db    0
.data:00404746                 db    0
.data:00404747                 db    0
.data:00404748                 db    0
.data:00404749                 db    0
.data:0040474A                 db    0
.data:0040474B                 db    0
.data:0040474C                 db    0
.data:0040474D                 db    0
.data:0040474E                 db    0
.data:0040474F                 db    0
.data:00404750                 db    0
.data:00404751                 db    0
.data:00404752                 db    0
.data:00404753                 db    0
.data:00404754                 db    0
.data:00404755                 db    0
.data:00404756                 db    0
.data:00404757                 db    0
.data:00404758                 db    0
.data:00404759                 db    0
.data:0040475A                 db    0
.data:0040475B                 db    0
.data:0040475C                 db    0
.data:0040475D                 db    0
.data:0040475E                 db    0
.data:0040475F                 db    0
.data:00404760                 db    0
.data:00404761                 db    0
.data:00404762                 db    0
.data:00404763                 db    0
.data:00404764                 db    0
.data:00404765                 db    0
.data:00404766                 db    0
.data:00404767                 db    0
.data:00404768                 db    0
.data:00404769                 db    0
.data:0040476A                 db    0
.data:0040476B                 db    0
.data:0040476C                 db    0
.data:0040476D                 db    0
.data:0040476E                 db    0
.data:0040476F                 db    0
.data:00404770                 db    0
.data:00404771                 db    0
.data:00404772                 db    0
.data:00404773                 db    0
.data:00404774                 db    0
.data:00404775                 db    0
.data:00404776                 db    0
.data:00404777                 db    0
.data:00404778                 db    0
.data:00404779                 db    0
.data:0040477A                 db    0
.data:0040477B                 db    0
.data:0040477C                 db    0
.data:0040477D                 db    0
.data:0040477E                 db    0
.data:0040477F                 db    0
.data:00404780                 db    0
.data:00404781                 db    0
.data:00404782                 db    0
.data:00404783                 db    0
.data:00404784                 db    0
.data:00404785                 db    0
.data:00404786                 db    0
.data:00404787                 db    0
.data:00404788                 db    0
.data:00404789                 db    0
.data:0040478A                 db    0
.data:0040478B                 db    0
.data:0040478C                 db    0
.data:0040478D                 db    0
.data:0040478E                 db    0
.data:0040478F                 db    0
.data:00404790                 db    0
.data:00404791                 db    0
.data:00404792                 db    0
.data:00404793                 db    0
.data:00404794                 db    0
.data:00404795                 db    0
.data:00404796                 db    0
.data:00404797                 db    0
.data:00404798                 db    0
.data:00404799                 db    0
.data:0040479A                 db    0
.data:0040479B                 db    0
.data:0040479C                 db    9
.data:0040479D                 db    0
.data:0040479E                 db    0
.data:0040479F                 db    0
.data:004047A0                 db    2
.data:004047A1                 db    0
.data:004047A2                 db    0
.data:004047A3                 db    0
.data:004047A4                 db    0
.data:004047A5                 db    0
.data:004047A6                 db    0
.data:004047A7                 db    0
.data:004047A8 unk_4047A8      db    4                 ; DATA XREF: ReadTable(x,x,x):loc_40291E↑o
.data:004047A9                 db    0
.data:004047AA                 db    0
.data:004047AB                 db    0
.data:004047AC                 db    6
.data:004047AD                 db    0
.data:004047AE                 db    0
.data:004047AF                 db    0
.data:004047B0                 db  13h
.data:004047B1                 db    0
.data:004047B2                 db    0
.data:004047B3                 db    0
.data:004047B4                 db    1
.data:004047B5                 db    0
.data:004047B6                 db    0
.data:004047B7                 db    0
.data:004047B8                 db    1
.data:004047B9                 db    0
.data:004047BA                 db    0
.data:004047BB                 db    0
.data:004047BC                 db    0
.data:004047BD                 db    0
.data:004047BE                 db    0
.data:004047BF                 db    0
.data:004047C0                 db    0
.data:004047C1                 db    0
.data:004047C2                 db    0
.data:004047C3                 db    0
.data:004047C4                 db    0
.data:004047C5                 db    0
.data:004047C6                 db    0
.data:004047C7                 db    0
.data:004047C8                 db    0
.data:004047C9                 db    0
.data:004047CA                 db    0
.data:004047CB                 db    0
.data:004047CC                 db    0
.data:004047CD                 db    0
.data:004047CE                 db    0
.data:004047CF                 db    0
.data:004047D0                 db    0
.data:004047D1                 db    0
.data:004047D2                 db    0
.data:004047D3                 db    0
.data:004047D4                 db    0
.data:004047D5                 db    0
.data:004047D6                 db    0
.data:004047D7                 db    0
.data:004047D8                 db    0
.data:004047D9                 db    0
.data:004047DA                 db    0
.data:004047DB                 db    0
.data:004047DC                 db    0
.data:004047DD                 db    0
.data:004047DE                 db    0
.data:004047DF                 db    0
.data:004047E0                 db    0
.data:004047E1                 db    0
.data:004047E2                 db    0
.data:004047E3                 db    0
.data:004047E4                 db    0
.data:004047E5                 db    0
.data:004047E6                 db    0
.data:004047E7                 db    0
.data:004047E8                 db    0
.data:004047E9                 db    0
.data:004047EA                 db    0
.data:004047EB                 db    0
.data:004047EC                 db    0
.data:004047ED                 db    0
.data:004047EE                 db    0
.data:004047EF                 db    0
.data:004047F0                 db    0
.data:004047F1                 db    0
.data:004047F2                 db    0
.data:004047F3                 db    0
.data:004047F4                 db    0
.data:004047F5                 db    0
.data:004047F6                 db    0
.data:004047F7                 db    0
.data:004047F8                 db    0
.data:004047F9                 db    0
.data:004047FA                 db    0
.data:004047FB                 db    0
.data:004047FC                 db    0
.data:004047FD                 db    0
.data:004047FE                 db    0
.data:004047FF                 db    0
.data:00404800                 db    0
.data:00404801                 db    0
.data:00404802                 db    0
.data:00404803                 db    0
.data:00404804                 db    0
.data:00404805                 db    0
.data:00404806                 db    0
.data:00404807                 db    0
.data:00404808                 db    0
.data:00404809                 db    0
.data:0040480A                 db    0
.data:0040480B                 db    0
.data:0040480C                 db    0
.data:0040480D                 db    0
.data:0040480E                 db    0
.data:0040480F                 db    0
.data:00404810                 db    0
.data:00404811                 db    0
.data:00404812                 db    0
.data:00404813                 db    0
.data:00404814                 db    0
.data:00404815                 db    0
.data:00404816                 db    0
.data:00404817                 db    0
.data:00404818                 db    0
.data:00404819                 db    0
.data:0040481A                 db    0
.data:0040481B                 db    0
.data:0040481C                 db    0
.data:0040481D                 db    0
.data:0040481E                 db    0
.data:0040481F                 db    0
.data:00404820                 db    0
.data:00404821                 db    0
.data:00404822                 db    0
.data:00404823                 db    0
.data:00404824                 db    0
.data:00404825                 db    0
.data:00404826                 db    0
.data:00404827                 db    0
.data:00404828                 db    0
.data:00404829                 db    0
.data:0040482A                 db    0
.data:0040482B                 db    0
.data:0040482C                 db    0
.data:0040482D                 db    0
.data:0040482E                 db    0
.data:0040482F                 db    0
.data:00404830                 db    0
.data:00404831                 db    0
.data:00404832                 db    0
.data:00404833                 db    0
.data:00404834                 db    0
.data:00404835                 db    0
.data:00404836                 db    0
.data:00404837                 db    0
.data:00404838                 db    0
.data:00404839                 db    0
.data:0040483A                 db    0
.data:0040483B                 db    0
.data:0040483C                 db    0
.data:0040483D                 db    0
.data:0040483E                 db    0
.data:0040483F                 db    0
.data:00404840                 db    0
.data:00404841                 db    0
.data:00404842                 db    0
.data:00404843                 db    0
.data:00404844                 db    0
.data:00404845                 db    0
.data:00404846                 db    0
.data:00404847                 db    0
.data:00404848                 db    0
.data:00404849                 db    0
.data:0040484A                 db    0
.data:0040484B                 db    0
.data:0040484C                 db    0
.data:0040484D                 db    0
.data:0040484E                 db    0
.data:0040484F                 db    0
.data:00404850                 db    0
.data:00404851                 db    0
.data:00404852                 db    0
.data:00404853                 db    0
.data:00404854                 db    0
.data:00404855                 db    0
.data:00404856                 db    0
.data:00404857                 db    0
.data:00404858                 db    0
.data:00404859                 db    0
.data:0040485A                 db    0
.data:0040485B                 db    0
.data:0040485C                 db    0
.data:0040485D                 db    0
.data:0040485E                 db    0
.data:0040485F                 db    0
.data:00404860                 db    0
.data:00404861                 db    0
.data:00404862                 db    0
.data:00404863                 db    0
.data:00404864                 db    0
.data:00404865                 db    0
.data:00404866                 db    0
.data:00404867                 db    0
.data:00404868                 db    0
.data:00404869                 db    0
.data:0040486A                 db    0
.data:0040486B                 db    0
.data:0040486C                 db    0
.data:0040486D                 db    0
.data:0040486E                 db    0
.data:0040486F                 db    0
.data:00404870                 db    0
.data:00404871                 db    0
.data:00404872                 db    0
.data:00404873                 db    0
.data:00404874                 db    9
.data:00404875                 db    0
.data:00404876                 db    0
.data:00404877                 db    0
.data:00404878                 db    2
.data:00404879                 db    0
.data:0040487A                 db    0
.data:0040487B                 db    0
.data:0040487C                 db    0
.data:0040487D                 db    0
.data:0040487E                 db    0
.data:0040487F                 db    0
.data:00404880 dword_404880    dd 0                    ; DATA XREF: start-B3↑w
.data:00404880                                         ; .text:0040388C↑w ...
.data:00404884 dword_404884    dd 0                    ; DATA XREF: start:loc_4037E1↑w
.data:00404884                                         ; start:loc_4038A1↑r
.data:00404888 ; int argc
.data:00404888 argc            dd 0                    ; DATA XREF: pre_cpp_init+1F↑o
.data:00404888                                         ; start-C1↑r
.data:0040488C ; char **argv
.data:0040488C argv            dd 0                    ; DATA XREF: pre_cpp_init+1A↑o
.data:0040488C                                         ; start-C7↑r
.data:00404890 ; char **envp
.data:00404890 envp            dd 0                    ; DATA XREF: pre_cpp_init+15↑o
.data:00404890                                         ; start:loc_403843↑r
.data:00404894 dword_404894    dd 0                    ; DATA XREF: pre_cpp_init+2D↑w
.data:00404898 dword_404898    dd 0                    ; DATA XREF: pre_c_init+62↑w
.data:00404898                                         ; start-AE↑r ...
.data:0040489C dword_40489C    dd 0                    ; DATA XREF: pre_cpp_init+5↑o
.data:0040489C                                         ; pre_cpp_init+10↑w
.data:004048A0 dword_4048A0    dd 0                    ; DATA XREF: .text:ExceptionInfo↑o
.data:004048A0                                         ; ___report_gsfailure+91↑w
.data:004048A4 dword_4048A4    dd 0                    ; DATA XREF: ___report_gsfailure+9B↑w
.data:004048A8                 db    0
.data:004048A9                 db    0
.data:004048AA                 db    0
.data:004048AB                 db    0
.data:004048AC dword_4048AC    dd 0                    ; DATA XREF: ___report_gsfailure+8C↑w
.data:004048B0 dword_4048B0    dd 0                    ; DATA XREF: ___report_gsfailure+A5↑w
.data:004048B4 dword_4048B4    dd 0                    ; DATA XREF: ___report_gsfailure+B5↑w
.data:004048B4                                         ; ___report_gsfailure+CB↑w ...
.data:004048B8                 db    0
.data:004048B9                 db    0
.data:004048BA                 db    0
.data:004048BB                 db    0
.data:004048BC                 db    0
.data:004048BD                 db    0
.data:004048BE                 db    0
.data:004048BF                 db    0
.data:004048C0                 db    0
.data:004048C1                 db    0
.data:004048C2                 db    0
.data:004048C3                 db    0
.data:004048C4                 db    0
.data:004048C5                 db    0
.data:004048C6                 db    0
.data:004048C7                 db    0
.data:004048C8                 db    0
.data:004048C9                 db    0
.data:004048CA                 db    0
.data:004048CB                 db    0
.data:004048CC                 db    0
.data:004048CD                 db    0
.data:004048CE                 db    0
.data:004048CF                 db    0
.data:004048D0                 db    0
.data:004048D1                 db    0
.data:004048D2                 db    0
.data:004048D3                 db    0
.data:004048D4                 db    0
.data:004048D5                 db    0
.data:004048D6                 db    0
.data:004048D7                 db    0
.data:004048D8                 db    0
.data:004048D9                 db    0
.data:004048DA                 db    0
.data:004048DB                 db    0
.data:004048DC                 db    0
.data:004048DD                 db    0
.data:004048DE                 db    0
.data:004048DF                 db    0
.data:004048E0                 db    0
.data:004048E1                 db    0
.data:004048E2                 db    0
.data:004048E3                 db    0
.data:004048E4                 db    0
.data:004048E5                 db    0
.data:004048E6                 db    0
.data:004048E7                 db    0
.data:004048E8                 db    0
.data:004048E9                 db    0
.data:004048EA                 db    0
.data:004048EB                 db    0
.data:004048EC                 db    0
.data:004048ED                 db    0
.data:004048EE                 db    0
.data:004048EF                 db    0
.data:004048F0 dword_4048F0    dd 0                    ; DATA XREF: .text:ExceptionInfo↑o
.data:004048F0                                         ; ___report_gsfailure+7D↑w
.data:004048F4                 db    0
.data:004048F5                 db    0
.data:004048F6                 db    0
.data:004048F7                 db    0
.data:004048F8                 db    0
.data:004048F9                 db    0
.data:004048FA                 db    0
.data:004048FB                 db    0
.data:004048FC                 db    0
.data:004048FD                 db    0
.data:004048FE                 db    0
.data:004048FF                 db    0
.data:00404900                 db    0
.data:00404901                 db    0
.data:00404902                 db    0
.data:00404903                 db    0
.data:00404904                 db    0
.data:00404905                 db    0
.data:00404906                 db    0
.data:00404907                 db    0
.data:00404908                 db    0
.data:00404909                 db    0
.data:0040490A                 db    0
.data:0040490B                 db    0
.data:0040490C                 db    0
.data:0040490D                 db    0
.data:0040490E                 db    0
.data:0040490F                 db    0
.data:00404910                 db    0
.data:00404911                 db    0
.data:00404912                 db    0
.data:00404913                 db    0
.data:00404914                 db    0
.data:00404915                 db    0
.data:00404916                 db    0
.data:00404917                 db    0
.data:00404918                 db    0
.data:00404919                 db    0
.data:0040491A                 db    0
.data:0040491B                 db    0
.data:0040491C                 db    0
.data:0040491D                 db    0
.data:0040491E                 db    0
.data:0040491F                 db    0
.data:00404920                 db    0
.data:00404921                 db    0
.data:00404922                 db    0
.data:00404923                 db    0
.data:00404924                 db    0
.data:00404925                 db    0
.data:00404926                 db    0
.data:00404927                 db    0
.data:00404928                 db    0
.data:00404929                 db    0
.data:0040492A                 db    0
.data:0040492B                 db    0
.data:0040492C                 db    0
.data:0040492D                 db    0
.data:0040492E                 db    0
.data:0040492F                 db    0
.data:00404930                 db    0
.data:00404931                 db    0
.data:00404932                 db    0
.data:00404933                 db    0
.data:00404934                 db    0
.data:00404935                 db    0
.data:00404936                 db    0
.data:00404937                 db    0
.data:00404938                 db    0
.data:00404939                 db    0
.data:0040493A                 db    0
.data:0040493B                 db    0
.data:0040493C                 db    0
.data:0040493D                 db    0
.data:0040493E                 db    0
.data:0040493F                 db    0
.data:00404940                 db    0
.data:00404941                 db    0
.data:00404942                 db    0
.data:00404943                 db    0
.data:00404944                 db    0
.data:00404945                 db    0
.data:00404946                 db    0
.data:00404947                 db    0
.data:00404948                 db    0
.data:00404949                 db    0
.data:0040494A                 db    0
.data:0040494B                 db    0
.data:0040494C                 db    0
.data:0040494D                 db    0
.data:0040494E                 db    0
.data:0040494F                 db    0
.data:00404950                 db    0
.data:00404951                 db    0
.data:00404952                 db    0
.data:00404953                 db    0
.data:00404954                 db    0
.data:00404955                 db    0
.data:00404956                 db    0
.data:00404957                 db    0
.data:00404958                 db    0
.data:00404959                 db    0
.data:0040495A                 db    0
.data:0040495B                 db    0
.data:0040495C                 db    0
.data:0040495D                 db    0
.data:0040495E                 db    0
.data:0040495F                 db    0
.data:00404960                 db    0
.data:00404961                 db    0
.data:00404962                 db    0
.data:00404963                 db    0
.data:00404964                 db    0
.data:00404965                 db    0
.data:00404966                 db    0
.data:00404967                 db    0
.data:00404968                 db    0
.data:00404969                 db    0
.data:0040496A                 db    0
.data:0040496B                 db    0
.data:0040496C                 db    0
.data:0040496D                 db    0
.data:0040496E                 db    0
.data:0040496F                 db    0
.data:00404970                 db    0
.data:00404971                 db    0
.data:00404972                 db    0
.data:00404973                 db    0
.data:00404974                 db    0
.data:00404975                 db    0
.data:00404976                 db    0
.data:00404977                 db    0
.data:00404978                 db    0
.data:00404979                 db    0
.data:0040497A                 db    0
.data:0040497B                 db    0
.data:0040497C word_40497C     dw 0                    ; DATA XREF: ___report_gsfailure+51↑w
.data:0040497E                 align 10h
.data:00404980 word_404980     dw 0                    ; DATA XREF: ___report_gsfailure+4A↑w
.data:00404982                 align 4
.data:00404984 word_404984     dw 0                    ; DATA XREF: ___report_gsfailure+43↑w
.data:00404986                 align 4
.data:00404988 word_404988     dw 0                    ; DATA XREF: ___report_gsfailure+3C↑w
.data:0040498A                 align 4
.data:0040498C dword_40498C    dd 0                    ; DATA XREF: ___report_gsfailure+28↑w
.data:00404990 dword_404990    dd 0                    ; DATA XREF: ___report_gsfailure+22↑w
.data:00404994 dword_404994    dd 0                    ; DATA XREF: ___report_gsfailure+1C↑w
.data:00404998 dword_404998    dd 0                    ; DATA XREF: ___report_gsfailure+16↑w
.data:0040499C dword_40499C    dd 0                    ; DATA XREF: ___report_gsfailure+10↑w
.data:004049A0 dword_4049A0    dd 0                    ; DATA XREF: ___report_gsfailure+B↑w
.data:004049A4 dword_4049A4    dd 0                    ; DATA XREF: ___report_gsfailure+62↑w
.data:004049A8 dword_4049A8    dd 0                    ; DATA XREF: ___report_gsfailure+6A↑w
.data:004049A8                                         ; ___report_gsfailure+87↑r
.data:004049AC word_4049AC     dw 0                    ; DATA XREF: ___report_gsfailure+35↑w
.data:004049AE                 align 10h
.data:004049B0 dword_4049B0    dd 0                    ; DATA XREF: ___report_gsfailure+59↑w
.data:004049B4 dword_4049B4    dd 0                    ; DATA XREF: ___report_gsfailure+72↑w
.data:004049B8 word_4049B8     dw 0                    ; DATA XREF: ___report_gsfailure+2E↑w
.data:004049BA                 db    0
.data:004049BB                 db    0
.data:004049BC                 db    0
.data:004049BD                 db    0
.data:004049BE                 db    0
.data:004049BF                 db    0
.data:004049C0                 db    0
.data:004049C1                 db    0
.data:004049C2                 db    0
.data:004049C3                 db    0
.data:004049C4                 db    0
.data:004049C5                 db    0
.data:004049C6                 db    0
.data:004049C7                 db    0
.data:004049C8                 db    0
.data:004049C9                 db    0
.data:004049CA                 db    0
.data:004049CB                 db    0
.data:004049CC                 db    0
.data:004049CD                 db    0
.data:004049CE                 db    0
.data:004049CF                 db    0
.data:004049D0                 db    0
.data:004049D1                 db    0
.data:004049D2                 db    0
.data:004049D3                 db    0
.data:004049D4                 db    0
.data:004049D5                 db    0
.data:004049D6                 db    0
.data:004049D7                 db    0
.data:004049D8                 db    0
.data:004049D9                 db    0
.data:004049DA                 db    0
.data:004049DB                 db    0
.data:004049DC                 db    0
.data:004049DD                 db    0
.data:004049DE                 db    0
.data:004049DF                 db    0
.data:004049E0                 db    0
.data:004049E1                 db    0
.data:004049E2                 db    0
.data:004049E3                 db    0
.data:004049E4                 db    0
.data:004049E5                 db    0
.data:004049E6                 db    0
.data:004049E7                 db    0
.data:004049E8                 db    0
.data:004049E9                 db    0
.data:004049EA                 db    0
.data:004049EB                 db    0
.data:004049EC                 db    0
.data:004049ED                 db    0
.data:004049EE                 db    0
.data:004049EF                 db    0
.data:004049F0                 db    0
.data:004049F1                 db    0
.data:004049F2                 db    0
.data:004049F3                 db    0
.data:004049F4                 db    0
.data:004049F5                 db    0
.data:004049F6                 db    0
.data:004049F7                 db    0
.data:004049F8                 db    0
.data:004049F9                 db    0
.data:004049FA                 db    0
.data:004049FB                 db    0
.data:004049FC                 db    0
.data:004049FD                 db    0
.data:004049FE                 db    0
.data:004049FF                 db    0
.data:00404A00                 db    ? ;
.data:00404A01                 db    ? ;
.data:00404A02                 db    ? ;
.data:00404A03                 db    ? ;
.data:00404A04                 db    ? ;
.data:00404A05                 db    ? ;
.data:00404A06                 db    ? ;
.data:00404A07                 db    ? ;
.data:00404A08                 db    ? ;
.data:00404A09                 db    ? ;
.data:00404A0A                 db    ? ;
.data:00404A0B                 db    ? ;
.data:00404A0C                 db    ? ;
.data:00404A0D                 db    ? ;
.data:00404A0E                 db    ? ;
.data:00404A0F                 db    ? ;
.data:00404A10                 db    ? ;
.data:00404A11                 db    ? ;
.data:00404A12                 db    ? ;
.data:00404A13                 db    ? ;
.data:00404A14                 db    ? ;
.data:00404A15                 db    ? ;
.data:00404A16                 db    ? ;
.data:00404A17                 db    ? ;
.data:00404A18                 db    ? ;
.data:00404A19                 db    ? ;
.data:00404A1A                 db    ? ;
.data:00404A1B                 db    ? ;
.data:00404A1C                 db    ? ;
.data:00404A1D                 db    ? ;
.data:00404A1E                 db    ? ;
.data:00404A1F                 db    ? ;
.data:00404A20                 db    ? ;
.data:00404A21                 db    ? ;
.data:00404A22                 db    ? ;
.data:00404A23                 db    ? ;
.data:00404A24                 db    ? ;
.data:00404A25                 db    ? ;
.data:00404A26                 db    ? ;
.data:00404A27                 db    ? ;
.data:00404A28                 db    ? ;
.data:00404A29                 db    ? ;
.data:00404A2A                 db    ? ;
.data:00404A2B                 db    ? ;
.data:00404A2C                 db    ? ;
.data:00404A2D                 db    ? ;
.data:00404A2E                 db    ? ;
.data:00404A2F                 db    ? ;
.data:00404A30                 db    ? ;
.data:00404A31                 db    ? ;
.data:00404A32                 db    ? ;
.data:00404A33                 db    ? ;
.data:00404A34                 db    ? ;
.data:00404A35                 db    ? ;
.data:00404A36                 db    ? ;
.data:00404A37                 db    ? ;
.data:00404A38                 db    ? ;
.data:00404A39                 db    ? ;
.data:00404A3A                 db    ? ;
.data:00404A3B                 db    ? ;
.data:00404A3C                 db    ? ;
.data:00404A3D                 db    ? ;
.data:00404A3E                 db    ? ;
.data:00404A3F                 db    ? ;
.data:00404A40                 db    ? ;
.data:00404A41                 db    ? ;
.data:00404A42                 db    ? ;
.data:00404A43                 db    ? ;
.data:00404A44                 db    ? ;
.data:00404A45                 db    ? ;
.data:00404A46                 db    ? ;
.data:00404A47                 db    ? ;
.data:00404A48                 db    ? ;
.data:00404A49                 db    ? ;
.data:00404A4A                 db    ? ;
.data:00404A4B                 db    ? ;
.data:00404A4C                 db    ? ;
.data:00404A4D                 db    ? ;
.data:00404A4E                 db    ? ;
.data:00404A4F                 db    ? ;
.data:00404A50                 db    ? ;
.data:00404A51                 db    ? ;
.data:00404A52                 db    ? ;
.data:00404A53                 db    ? ;
.data:00404A54                 db    ? ;
.data:00404A55                 db    ? ;
.data:00404A56                 db    ? ;
.data:00404A57                 db    ? ;
.data:00404A58                 db    ? ;
.data:00404A59                 db    ? ;
.data:00404A5A                 db    ? ;
.data:00404A5B                 db    ? ;
.data:00404A5C                 db    ? ;
.data:00404A5D                 db    ? ;
.data:00404A5E                 db    ? ;
.data:00404A5F                 db    ? ;
.data:00404A60                 db    ? ;
.data:00404A61                 db    ? ;
.data:00404A62                 db    ? ;
.data:00404A63                 db    ? ;
.data:00404A64                 db    ? ;
.data:00404A65                 db    ? ;
.data:00404A66                 db    ? ;
.data:00404A67                 db    ? ;
.data:00404A68                 db    ? ;
.data:00404A69                 db    ? ;
.data:00404A6A                 db    ? ;
.data:00404A6B                 db    ? ;
.data:00404A6C                 db    ? ;
.data:00404A6D                 db    ? ;
.data:00404A6E                 db    ? ;
.data:00404A6F                 db    ? ;
.data:00404A70                 db    ? ;
.data:00404A71                 db    ? ;
.data:00404A72                 db    ? ;
.data:00404A73                 db    ? ;
.data:00404A74                 db    ? ;
.data:00404A75                 db    ? ;
.data:00404A76                 db    ? ;
.data:00404A77                 db    ? ;
.data:00404A78                 db    ? ;
.data:00404A79                 db    ? ;
.data:00404A7A                 db    ? ;
.data:00404A7B                 db    ? ;
.data:00404A7C                 db    ? ;
.data:00404A7D                 db    ? ;
.data:00404A7E                 db    ? ;
.data:00404A7F                 db    ? ;
.data:00404A80                 db    ? ;
.data:00404A81                 db    ? ;
.data:00404A82                 db    ? ;
.data:00404A83                 db    ? ;
.data:00404A84                 db    ? ;
.data:00404A85                 db    ? ;
.data:00404A86                 db    ? ;
.data:00404A87                 db    ? ;
.data:00404A88                 db    ? ;
.data:00404A89                 db    ? ;
.data:00404A8A                 db    ? ;
.data:00404A8B                 db    ? ;
.data:00404A8C                 db    ? ;
.data:00404A8D                 db    ? ;
.data:00404A8E                 db    ? ;
.data:00404A8F                 db    ? ;
.data:00404A90                 db    ? ;
.data:00404A91                 db    ? ;
.data:00404A92                 db    ? ;
.data:00404A93                 db    ? ;
.data:00404A94                 db    ? ;
.data:00404A95                 db    ? ;
.data:00404A96                 db    ? ;
.data:00404A97                 db    ? ;
.data:00404A98                 db    ? ;
.data:00404A99                 db    ? ;
.data:00404A9A                 db    ? ;
.data:00404A9B                 db    ? ;
.data:00404A9C                 db    ? ;
.data:00404A9D                 db    ? ;
.data:00404A9E                 db    ? ;
.data:00404A9F                 db    ? ;
.data:00404AA0                 db    ? ;
.data:00404AA1                 db    ? ;
.data:00404AA2                 db    ? ;
.data:00404AA3                 db    ? ;
.data:00404AA4                 db    ? ;
.data:00404AA5                 db    ? ;
.data:00404AA6                 db    ? ;
.data:00404AA7                 db    ? ;
.data:00404AA8                 db    ? ;
.data:00404AA9                 db    ? ;
.data:00404AAA                 db    ? ;
.data:00404AAB                 db    ? ;
.data:00404AAC                 db    ? ;
.data:00404AAD                 db    ? ;
.data:00404AAE                 db    ? ;
.data:00404AAF                 db    ? ;
.data:00404AB0                 db    ? ;
.data:00404AB1                 db    ? ;
.data:00404AB2                 db    ? ;
.data:00404AB3                 db    ? ;
.data:00404AB4                 db    ? ;
.data:00404AB5                 db    ? ;
.data:00404AB6                 db    ? ;
.data:00404AB7                 db    ? ;
.data:00404AB8                 db    ? ;
.data:00404AB9                 db    ? ;
.data:00404ABA                 db    ? ;
.data:00404ABB                 db    ? ;
.data:00404ABC                 db    ? ;
.data:00404ABD                 db    ? ;
.data:00404ABE                 db    ? ;
.data:00404ABF                 db    ? ;
.data:00404AC0                 db    ? ;
.data:00404AC1                 db    ? ;
.data:00404AC2                 db    ? ;
.data:00404AC3                 db    ? ;
.data:00404AC4                 db    ? ;
.data:00404AC5                 db    ? ;
.data:00404AC6                 db    ? ;
.data:00404AC7                 db    ? ;
.data:00404AC8                 db    ? ;
.data:00404AC9                 db    ? ;
.data:00404ACA                 db    ? ;
.data:00404ACB                 db    ? ;
.data:00404ACC                 db    ? ;
.data:00404ACD                 db    ? ;
.data:00404ACE                 db    ? ;
.data:00404ACF                 db    ? ;
.data:00404AD0                 db    ? ;
.data:00404AD1                 db    ? ;
.data:00404AD2                 db    ? ;
.data:00404AD3                 db    ? ;
.data:00404AD4                 db    ? ;
.data:00404AD5                 db    ? ;
.data:00404AD6                 db    ? ;
.data:00404AD7                 db    ? ;
.data:00404AD8                 db    ? ;
.data:00404AD9                 db    ? ;
.data:00404ADA                 db    ? ;
.data:00404ADB                 db    ? ;
.data:00404ADC                 db    ? ;
.data:00404ADD                 db    ? ;
.data:00404ADE                 db    ? ;
.data:00404ADF                 db    ? ;
.data:00404AE0                 db    ? ;
.data:00404AE1                 db    ? ;
.data:00404AE2                 db    ? ;
.data:00404AE3                 db    ? ;
.data:00404AE4                 db    ? ;
.data:00404AE5                 db    ? ;
.data:00404AE6                 db    ? ;
.data:00404AE7                 db    ? ;
.data:00404AE8                 db    ? ;
.data:00404AE9                 db    ? ;
.data:00404AEA                 db    ? ;
.data:00404AEB                 db    ? ;
.data:00404AEC                 db    ? ;
.data:00404AED                 db    ? ;
.data:00404AEE                 db    ? ;
.data:00404AEF                 db    ? ;
.data:00404AF0                 db    ? ;
.data:00404AF1                 db    ? ;
.data:00404AF2                 db    ? ;
.data:00404AF3                 db    ? ;
.data:00404AF4                 db    ? ;
.data:00404AF5                 db    ? ;
.data:00404AF6                 db    ? ;
.data:00404AF7                 db    ? ;
.data:00404AF8                 db    ? ;
.data:00404AF9                 db    ? ;
.data:00404AFA                 db    ? ;
.data:00404AFB                 db    ? ;
.data:00404AFC                 db    ? ;
.data:00404AFD                 db    ? ;
.data:00404AFE                 db    ? ;
.data:00404AFF                 db    ? ;
.data:00404B00                 db    ? ;
.data:00404B01                 db    ? ;
.data:00404B02                 db    ? ;
.data:00404B03                 db    ? ;
.data:00404B04                 db    ? ;
.data:00404B05                 db    ? ;
.data:00404B06                 db    ? ;
.data:00404B07                 db    ? ;
.data:00404B08                 db    ? ;
.data:00404B09                 db    ? ;
.data:00404B0A                 db    ? ;
.data:00404B0B                 db    ? ;
.data:00404B0C                 db    ? ;
.data:00404B0D                 db    ? ;
.data:00404B0E                 db    ? ;
.data:00404B0F                 db    ? ;
.data:00404B10                 db    ? ;
.data:00404B11                 db    ? ;
.data:00404B12                 db    ? ;
.data:00404B13                 db    ? ;
.data:00404B14                 db    ? ;
.data:00404B15                 db    ? ;
.data:00404B16                 db    ? ;
.data:00404B17                 db    ? ;
.data:00404B18                 db    ? ;
.data:00404B19                 db    ? ;
.data:00404B1A                 db    ? ;
.data:00404B1B                 db    ? ;
.data:00404B1C                 db    ? ;
.data:00404B1D                 db    ? ;
.data:00404B1E                 db    ? ;
.data:00404B1F                 db    ? ;
.data:00404B20                 db    ? ;
.data:00404B21                 db    ? ;
.data:00404B22                 db    ? ;
.data:00404B23                 db    ? ;
.data:00404B24                 db    ? ;
.data:00404B25                 db    ? ;
.data:00404B26                 db    ? ;
.data:00404B27                 db    ? ;
.data:00404B28                 db    ? ;
.data:00404B29                 db    ? ;
.data:00404B2A                 db    ? ;
.data:00404B2B                 db    ? ;
.data:00404B2C                 db    ? ;
.data:00404B2D                 db    ? ;
.data:00404B2E                 db    ? ;
.data:00404B2F                 db    ? ;
.data:00404B30                 db    ? ;
.data:00404B31                 db    ? ;
.data:00404B32                 db    ? ;
.data:00404B33                 db    ? ;
.data:00404B34                 db    ? ;
.data:00404B35                 db    ? ;
.data:00404B36                 db    ? ;
.data:00404B37                 db    ? ;
.data:00404B38                 db    ? ;
.data:00404B39                 db    ? ;
.data:00404B3A                 db    ? ;
.data:00404B3B                 db    ? ;
.data:00404B3C                 db    ? ;
.data:00404B3D                 db    ? ;
.data:00404B3E                 db    ? ;
.data:00404B3F                 db    ? ;
.data:00404B40                 db    ? ;
.data:00404B41                 db    ? ;
.data:00404B42                 db    ? ;
.data:00404B43                 db    ? ;
.data:00404B44                 db    ? ;
.data:00404B45                 db    ? ;
.data:00404B46                 db    ? ;
.data:00404B47                 db    ? ;
.data:00404B48                 db    ? ;
.data:00404B49                 db    ? ;
.data:00404B4A                 db    ? ;
.data:00404B4B                 db    ? ;
.data:00404B4C                 db    ? ;
.data:00404B4D                 db    ? ;
.data:00404B4E                 db    ? ;
.data:00404B4F                 db    ? ;
.data:00404B50                 db    ? ;
.data:00404B51                 db    ? ;
.data:00404B52                 db    ? ;
.data:00404B53                 db    ? ;
.data:00404B54                 db    ? ;
.data:00404B55                 db    ? ;
.data:00404B56                 db    ? ;
.data:00404B57                 db    ? ;
.data:00404B58                 db    ? ;
.data:00404B59                 db    ? ;
.data:00404B5A                 db    ? ;
.data:00404B5B                 db    ? ;
.data:00404B5C                 db    ? ;
.data:00404B5D                 db    ? ;
.data:00404B5E                 db    ? ;
.data:00404B5F                 db    ? ;
.data:00404B60                 db    ? ;
.data:00404B61                 db    ? ;
.data:00404B62                 db    ? ;
.data:00404B63                 db    ? ;
.data:00404B64                 db    ? ;
.data:00404B65                 db    ? ;
.data:00404B66                 db    ? ;
.data:00404B67                 db    ? ;
.data:00404B68                 db    ? ;
.data:00404B69                 db    ? ;
.data:00404B6A                 db    ? ;
.data:00404B6B                 db    ? ;
.data:00404B6C                 db    ? ;
.data:00404B6D                 db    ? ;
.data:00404B6E                 db    ? ;
.data:00404B6F                 db    ? ;
.data:00404B70                 db    ? ;
.data:00404B71                 db    ? ;
.data:00404B72                 db    ? ;
.data:00404B73                 db    ? ;
.data:00404B74                 db    ? ;
.data:00404B75                 db    ? ;
.data:00404B76                 db    ? ;
.data:00404B77                 db    ? ;
.data:00404B78                 db    ? ;
.data:00404B79                 db    ? ;
.data:00404B7A                 db    ? ;
.data:00404B7B                 db    ? ;
.data:00404B7C                 db    ? ;
.data:00404B7D                 db    ? ;
.data:00404B7E                 db    ? ;
.data:00404B7F                 db    ? ;
.data:00404B80                 db    ? ;
.data:00404B81                 db    ? ;
.data:00404B82                 db    ? ;
.data:00404B83                 db    ? ;
.data:00404B84                 db    ? ;
.data:00404B85                 db    ? ;
.data:00404B86                 db    ? ;
.data:00404B87                 db    ? ;
.data:00404B88                 db    ? ;
.data:00404B89                 db    ? ;
.data:00404B8A                 db    ? ;
.data:00404B8B                 db    ? ;
.data:00404B8C                 db    ? ;
.data:00404B8D                 db    ? ;
.data:00404B8E                 db    ? ;
.data:00404B8F                 db    ? ;
.data:00404B90                 db    ? ;
.data:00404B91                 db    ? ;
.data:00404B92                 db    ? ;
.data:00404B93                 db    ? ;
.data:00404B94                 db    ? ;
.data:00404B95                 db    ? ;
.data:00404B96                 db    ? ;
.data:00404B97                 db    ? ;
.data:00404B98                 db    ? ;
.data:00404B99                 db    ? ;
.data:00404B9A                 db    ? ;
.data:00404B9B                 db    ? ;
.data:00404B9C                 db    ? ;
.data:00404B9D                 db    ? ;
.data:00404B9E                 db    ? ;
.data:00404B9F                 db    ? ;
.data:00404BA0                 db    ? ;
.data:00404BA1                 db    ? ;
.data:00404BA2                 db    ? ;
.data:00404BA3                 db    ? ;
.data:00404BA4                 db    ? ;
.data:00404BA5                 db    ? ;
.data:00404BA6                 db    ? ;
.data:00404BA7                 db    ? ;
.data:00404BA8                 db    ? ;
.data:00404BA9                 db    ? ;
.data:00404BAA                 db    ? ;
.data:00404BAB                 db    ? ;
.data:00404BAC                 db    ? ;
.data:00404BAD                 db    ? ;
.data:00404BAE                 db    ? ;
.data:00404BAF                 db    ? ;
.data:00404BB0                 db    ? ;
.data:00404BB1                 db    ? ;
.data:00404BB2                 db    ? ;
.data:00404BB3                 db    ? ;
.data:00404BB4                 db    ? ;
.data:00404BB5                 db    ? ;
.data:00404BB6                 db    ? ;
.data:00404BB7                 db    ? ;
.data:00404BB8                 db    ? ;
.data:00404BB9                 db    ? ;
.data:00404BBA                 db    ? ;
.data:00404BBB                 db    ? ;
.data:00404BBC dword_404BBC    dd ?                    ; DATA XREF: pre_c_init+97↑r
.data:00404BC0 dword_404BC0    dd ?                    ; DATA XREF: pre_cpp_init+A↑r
.data:00404BC4 dword_404BC4    dd ?                    ; DATA XREF: pre_cpp_init↑r
.data:00404BC8 dword_404BC8    dd ?                    ; DATA XREF: pre_c_init+89↑r
.data:00404BCC dword_404BCC    dd ?                    ; DATA XREF: sub_40253E+60↑r
.data:00404BCC                                         ; sub_402666+12↑r ...
.data:00404BD0 dword_404BD0    dd ?                    ; DATA XREF: pre_c_init+73↑w
.data:00404BD4 dword_404BD4    dd ?                    ; DATA XREF: pre_c_init+7A↑w
.data:00404BD8 unk_404BD8      db    ? ;               ; DATA XREF: start:loc_40376F↑o
.data:00404BD8                                         ; start-100↑o
.data:00404BD9                 db    ? ;
.data:00404BDA                 db    ? ;
.data:00404BDB                 db    ? ;
.data:00404BDC dword_404BDC    dd ?                    ; DATA XREF: start:loc_40379B↑r
.data:00404BDC                                         ; start:loc_4037AD↑r ...
.data:00404BE0 ; char pTarget[]
.data:00404BE0 pTarget         dd ?                    ; DATA XREF: start:loc_403817↑r
.data:00404BE0                                         ; start-F0↑o ...
.data:00404BE4 dword_404BE4    dd ?                    ; DATA XREF: sub_40253E+98↑w
.data:00404BE4                                         ; ReadTable(x,x,x)+1FB↑r ...
.data:00404BE8 dword_404BE8    dd ?                    ; DATA XREF: sub_40253E+D3↑w
.data:00404BE8                                         ; sub_40253E:loc_402634↑r
.data:00404BEC dword_404BEC    dd ?                    ; DATA XREF: sub_401A35+126↑r
.data:00404BEC                                         ; AddArp(x,x,x)+1FE↑r ...
.data:00404BF0 ; char dword_404BF0[]
.data:00404BF0 dword_404BF0    dd ?                    ; DATA XREF: _main+8E↑w
.data:00404BF0                                         ; _main+A8↑r ...
.data:00404BF4                 align 800h
.data:00404BF4 _data           ends
.data:00404BF4
.idata:00405000 ; Section 3. (virtual address 00005000)
.idata:00405000 ; Virtual size                  : 00000A4A (   2634.)
.idata:00405000 ; Section size in file          : 00000C00 (   3072.)
.idata:00405000 ; Offset to raw data for section: 00003E00
.idata:00405000 ; Flags 40000040: Data Readable
.idata:00405000 ; Alignment     : default
.idata:00405000 ;
.idata:00405000 ; Imports from IPHLPAPI.DLL
.idata:00405000 ;
.idata:00405000 ; ===========================================================================
.idata:00405000
.idata:00405000 ; Segment type: Externs
.idata:00405000 ; _idata
.idata:00405000 ; ULONG (__stdcall *GetIcmpStatisticsEx)(PMIB_ICMP_EX Statistics, ULONG Family)
.idata:00405000                 extrn GetIcmpStatisticsEx:dword
.idata:00405000                                         ; CODE XREF: ReadTable(x,x,x)+5A9↑p
.idata:00405000                                         ; DATA XREF: ReadTable(x,x,x)+5A9↑r ...
.idata:00405004 ; DWORD (__stdcall *GetIpForwardTable)(PMIB_IPFORWARDTABLE pIpForwardTable, PULONG pdwSize, BOOL bOrder)
.idata:00405004                 extrn GetIpForwardTable:dword
.idata:00405004                                         ; CODE XREF: _main+190↑p
.idata:00405004                                         ; DATA XREF: _main+190↑r
.idata:00405008 ; ULONG (__stdcall *GetUdpStatisticsEx)(PMIB_UDPSTATS Statistics, ULONG Family)
.idata:00405008                 extrn GetUdpStatisticsEx:dword
.idata:00405008                                         ; CODE XREF: ReadTable(x,x,x)+91↑p
.idata:00405008                                         ; DATA XREF: ReadTable(x,x,x)+91↑r
.idata:0040500C ; ULONG (__stdcall *GetIpStatisticsEx)(PMIB_IPSTATS Statistics, ULONG Family)
.idata:0040500C                 extrn GetIpStatisticsEx:dword
.idata:0040500C                                         ; CODE XREF: ReadTable(x,x,x)+B1↑p
.idata:0040500C                                         ; DATA XREF: ReadTable(x,x,x)+B1↑r
.idata:00405010 ; ULONG (__stdcall *GetTcpStatisticsEx)(PMIB_TCPSTATS Statistics, ULONG Family)
.idata:00405010                 extrn GetTcpStatisticsEx:dword
.idata:00405010                                         ; CODE XREF: ReadTable(x,x,x)+5BE↑p
.idata:00405010                                         ; DATA XREF: ReadTable(x,x,x)+5BE↑r
.idata:00405014
.idata:00405018 ;
.idata:00405018 ; Imports from WS2_32.dll
.idata:00405018 ;
.idata:00405018 ; int (__stdcall *WSAStartup)(WORD wVersionRequested, LPWSADATA lpWSAData)
.idata:00405018                 extrn WSAStartup:dword  ; CODE XREF: _main+9D↑p
.idata:00405018                                         ; DATA XREF: _main+9D↑r ...
.idata:00405018                                         ; Import by ordinal 115
.idata:0040501C ; u_long (__stdcall *ntohl)(u_long netlong)
.idata:0040501C                 extrn ntohl:dword       ; CODE XREF: sub_403371+50↑p
.idata:0040501C                                         ; sub_403371+92↑p ...
.idata:0040501C                                         ; Import by ordinal 14
.idata:00405020 ; struct hostent *(__stdcall *gethostbyname)(const char *name)
.idata:00405020                 extrn gethostbyname:dword
.idata:00405020                                         ; CODE XREF: sub_4017EF+1C↑p
.idata:00405020                                         ; DATA XREF: sub_4017EF+1C↑r
.idata:00405020                                         ; Import by ordinal 52
.idata:00405024 ; unsigned int (__stdcall *inet_addr)(const char *cp)
.idata:00405024                 extrn inet_addr:dword   ; CODE XREF: sub_4017EF+11↑p
.idata:00405024                                         ; DATA XREF: sub_4017EF+11↑r
.idata:00405024                                         ; Import by ordinal 11
.idata:00405028
.idata:0040502C ;
.idata:0040502C ; Imports from api-ms-win-core-console-l1-1-0.dll
.idata:0040502C ;
.idata:0040502C ; UINT (__stdcall *GetConsoleOutputCP)()
.idata:0040502C                 extrn GetConsoleOutputCP:dword
.idata:0040502C                                         ; CODE XREF: _main+46↑p
.idata:0040502C                                         ; DATA XREF: _main+46↑r ...
.idata:00405030
.idata:00405034 ;
.idata:00405034 ; Imports from api-ms-win-core-errorhandling-l1-1-1.dll
.idata:00405034 ;
.idata:00405034 ; LPTOP_LEVEL_EXCEPTION_FILTER (__stdcall *SetUnhandledExceptionFilter)(LPTOP_LEVEL_EXCEPTION_FILTER lpTopLevelExceptionFilter)
.idata:00405034                 extrn SetUnhandledExceptionFilter:dword
.idata:00405034                                         ; CODE XREF: ___raise_securityfailure+7↑p
.idata:00405034                                         ; sub_403AC0+5↑p
.idata:00405034                                         ; DATA XREF: ...
.idata:00405038 ; DWORD (__stdcall *GetLastError)()
.idata:00405038                 extrn GetLastError:dword
.idata:00405038                                         ; CODE XREF: sub_40253E+3A↑p
.idata:00405038                                         ; DATA XREF: sub_40253E+3A↑r
.idata:0040503C ; LONG (__stdcall *UnhandledExceptionFilter)(struct _EXCEPTION_POINTERS *ExceptionInfo)
.idata:0040503C                 extrn UnhandledExceptionFilter:dword
.idata:0040503C                                         ; CODE XREF: ___raise_securityfailure+10↑p
.idata:0040503C                                         ; DATA XREF: ___raise_securityfailure+10↑r
.idata:00405040
.idata:00405044 ;
.idata:00405044 ; Imports from api-ms-win-core-heap-l1-2-0.dll
.idata:00405044 ;
.idata:00405044 ; BOOL (__stdcall *HeapSetInformation)(HANDLE HeapHandle, HEAP_INFORMATION_CLASS HeapInformationClass, PVOID HeapInformation, SIZE_T HeapInformationLength)
.idata:00405044                 extrn HeapSetInformation:dword
.idata:00405044                                         ; CODE XREF: _main+40↑p
.idata:00405044                                         ; DATA XREF: _main+40↑r ...
.idata:00405048
.idata:0040504C ;
.idata:0040504C ; Imports from api-ms-win-core-heap-l2-1-0.dll
.idata:0040504C ;
.idata:0040504C ; HLOCAL (__stdcall *LocalFree)(HLOCAL hMem)
.idata:0040504C                 extrn LocalFree:dword   ; CODE XREF: sub_4020BF+E4↑p
.idata:0040504C                                         ; sub_4034F5+CD↑p ...
.idata:00405050 ; HLOCAL (__stdcall *LocalAlloc)(UINT uFlags, SIZE_T uBytes)
.idata:00405050                 extrn LocalAlloc:dword  ; CODE XREF: sub_4034F5+8E↑p
.idata:00405050                                         ; DATA XREF: sub_4034F5+8E↑r
.idata:00405054
.idata:00405058 ;
.idata:00405058 ; Imports from api-ms-win-core-libraryloader-l1-2-0.dll
.idata:00405058 ;
.idata:00405058 ; HMODULE (__stdcall *LoadLibraryExA)(LPCSTR lpLibFileName, HANDLE hFile, DWORD dwFlags)
.idata:00405058                 extrn LoadLibraryExA:dword
.idata:00405058                                         ; CODE XREF: sub_40253E+82↑p
.idata:00405058                                         ; sub_40253E+BB↑p
.idata:00405058                                         ; DATA XREF: ...
.idata:0040505C ; HMODULE (__stdcall *GetModuleHandleA)(LPCSTR lpModuleName)
.idata:0040505C                 extrn GetModuleHandleA:dword
.idata:0040505C                                         ; CODE XREF: __get_image_app_type+7↑p
.idata:0040505C                                         ; DATA XREF: __get_image_app_type+7↑r
.idata:00405060 ; FARPROC (__stdcall *GetProcAddress)(HMODULE hModule, LPCSTR lpProcName)
.idata:00405060                 extrn GetProcAddress:dword
.idata:00405060                                         ; CODE XREF: sub_40253E+92↑p
.idata:00405060                                         ; sub_40253E+CD↑p ...
.idata:00405064
.idata:00405068 ;
.idata:00405068 ; Imports from api-ms-win-core-localization-l1-2-1.dll
.idata:00405068 ;
.idata:00405068 ; DWORD (__stdcall *FormatMessageW)(DWORD dwFlags, LPCVOID lpSource, DWORD dwMessageId, DWORD dwLanguageId, LPWSTR lpBuffer, DWORD nSize, va_list *Arguments)
.idata:00405068                 extrn FormatMessageW:dword
.idata:00405068                                         ; CODE XREF: sub_4034F5+2A↑p
.idata:00405068                                         ; sub_40360B+25↑p
.idata:00405068                                         ; DATA XREF: ...
.idata:0040506C ; BOOL (__stdcall *SetThreadPreferredUILanguages)(DWORD dwFlags, PCZZWSTR pwszLanguagesBuffer, PULONG pulNumLanguages)
.idata:0040506C                 extrn SetThreadPreferredUILanguages:dword
.idata:0040506C                                         ; CODE XREF: _main+82↑p
.idata:0040506C                                         ; DATA XREF: _main+82↑r
.idata:00405070
.idata:00405074 ;
.idata:00405074 ; Imports from api-ms-win-core-processthreads-l1-1-2.dll
.idata:00405074 ;
.idata:00405074 ; DWORD (__stdcall *GetCurrentProcessId)()
.idata:00405074                 extrn GetCurrentProcessId:dword
.idata:00405074                                         ; CODE XREF: ___security_init_cookie+45↑p
.idata:00405074                                         ; DATA XREF: ___security_init_cookie+45↑r ...
.idata:00405078 ; DWORD (__stdcall *GetCurrentThreadId)()
.idata:00405078                 extrn GetCurrentThreadId:dword
.idata:00405078                                         ; CODE XREF: ___security_init_cookie+4E↑p
.idata:00405078                                         ; DATA XREF: ___security_init_cookie+4E↑r
.idata:0040507C ; BOOL (__stdcall *TerminateProcess)(HANDLE hProcess, UINT uExitCode)
.idata:0040507C                 extrn TerminateProcess:dword
.idata:0040507C                                         ; CODE XREF: ___raise_securityfailure+22↑p
.idata:0040507C                                         ; DATA XREF: ___raise_securityfailure+22↑r
.idata:00405080 ; HANDLE (__stdcall *GetCurrentProcess)()
.idata:00405080                 extrn GetCurrentProcess:dword
.idata:00405080                                         ; CODE XREF: ___raise_securityfailure+1B↑p
.idata:00405080                                         ; DATA XREF: ___raise_securityfailure+1B↑r
.idata:00405084
.idata:00405088 ;
.idata:00405088 ; Imports from api-ms-win-core-profile-l1-1-0.dll
.idata:00405088 ;
.idata:00405088 ; BOOL (__stdcall *QueryPerformanceCounter)(LARGE_INTEGER *lpPerformanceCount)
.idata:00405088                 extrn QueryPerformanceCounter:dword
.idata:00405088                                         ; CODE XREF: ___security_init_cookie+6C↑p
.idata:00405088                                         ; DATA XREF: ___security_init_cookie+6C↑r ...
.idata:0040508C
.idata:00405090 ;
.idata:00405090 ; Imports from api-ms-win-core-string-l1-1-0.dll
.idata:00405090 ;
.idata:00405090 ; int (__stdcall *WideCharToMultiByte)(UINT CodePage, DWORD dwFlags, LPCWCH lpWideCharStr, int cchWideChar, LPSTR lpMultiByteStr, int cbMultiByte, LPCCH lpDefaultChar, LPBOOL lpUsedDefaultChar)
.idata:00405090                 extrn WideCharToMultiByte:dword
.idata:00405090                                         ; CODE XREF: sub_4034F5+AA↑p
.idata:00405090                                         ; DATA XREF: sub_4034F5+AA↑r ...
.idata:00405094
.idata:00405098 ;
.idata:00405098 ; Imports from api-ms-win-core-synch-l1-2-0.dll
.idata:00405098 ;
.idata:00405098 ; void (__stdcall *Sleep)(DWORD dwMilliseconds)
.idata:00405098                 extrn Sleep:dword       ; CODE XREF: start-180↑p
.idata:00405098                                         ; DATA XREF: start-180↑r ...
.idata:0040509C
.idata:004050A0 ;
.idata:004050A0 ; Imports from api-ms-win-core-sysinfo-l1-2-1.dll
.idata:004050A0 ;
.idata:004050A0 ; DWORD (__stdcall *GetTickCount)()
.idata:004050A0                 extrn GetTickCount:dword
.idata:004050A0                                         ; CODE XREF: ___security_init_cookie+57↑p
.idata:004050A0                                         ; DATA XREF: ___security_init_cookie+57↑r ...
.idata:004050A4 ; UINT (__stdcall *GetSystemDirectoryA)(LPSTR lpBuffer, UINT uSize)
.idata:004050A4                 extrn GetSystemDirectoryA:dword
.idata:004050A4                                         ; CODE XREF: sub_40253E+30↑p
.idata:004050A4                                         ; DATA XREF: sub_40253E+30↑r
.idata:004050A8 ; void (__stdcall *GetSystemTimeAsFileTime)(LPFILETIME lpSystemTimeAsFileTime)
.idata:004050A8                 extrn GetSystemTimeAsFileTime:dword
.idata:004050A8                                         ; CODE XREF: ___security_init_cookie+36↑p
.idata:004050A8                                         ; DATA XREF: ___security_init_cookie+36↑r
.idata:004050AC
.idata:004050B0 ;
.idata:004050B0 ; Imports from api-ms-win-security-base-l1-2-0.dll
.idata:004050B0 ;
.idata:004050B0 ; BOOL (__stdcall *AllocateAndInitializeSid)(PSID_IDENTIFIER_AUTHORITY pIdentifierAuthority, BYTE nSubAuthorityCount, DWORD nSubAuthority0, DWORD nSubAuthority1, DWORD nSubAuthority2, DWORD nSubAuthority3, DWORD nSubAuthority4, DWORD nSubAuthority5, DWORD nSubAuthority6, DWORD nSubAuthority7, PSID *pSid)
.idata:004050B0                 extrn AllocateAndInitializeSid:dword
.idata:004050B0                                         ; CODE XREF: sub_402441+31↑p
.idata:004050B0                                         ; DATA XREF: sub_402441+31↑r ...
.idata:004050B4 ; PVOID (__stdcall *FreeSid)(PSID pSid)
.idata:004050B4                 extrn FreeSid:dword     ; CODE XREF: sub_402441+59↑p
.idata:004050B4                                         ; DATA XREF: sub_402441+59↑r
.idata:004050B8 ; BOOL (__stdcall *CheckTokenMembership)(HANDLE TokenHandle, PSID SidToCheck, PBOOL IsMember)
.idata:004050B8                 extrn CheckTokenMembership:dword
.idata:004050B8                                         ; CODE XREF: sub_402441+46↑p
.idata:004050B8                                         ; DATA XREF: sub_402441+46↑r
.idata:004050BC
.idata:004050C0 ;
.idata:004050C0 ; Imports from msvcrt.dll
.idata:004050C0 ;
.idata:004050C0 ; __time32_t (__cdecl *time)(__time32_t *const Time)
.idata:004050C0                 extrn time:dword        ; CODE XREF: sub_40253E+1A↑p
.idata:004050C0                                         ; DATA XREF: sub_40253E+1A↑r ...
.idata:004050C4 ; int (__cdecl *setmode)(int FileHandle, int Mode)
.idata:004050C4                 extrn _setmode:dword    ; CODE XREF: sub_4034F5+69↑p
.idata:004050C4                                         ; DATA XREF: sub_4034F5+69↑r
.idata:004050C8 ; int (__cdecl *fileno)(FILE *Stream)
.idata:004050C8                 extrn _fileno:dword     ; CODE XREF: sub_4034F5+61↑p
.idata:004050C8                                         ; DATA XREF: sub_4034F5+61↑r
.idata:004050CC ; wchar_t *(__cdecl *wsetlocale)(int Category, const wchar_t *Locale)
.idata:004050CC                 extrn _wsetlocale:dword ; CODE XREF: _main+71↑p
.idata:004050CC                                         ; DATA XREF: _main+71↑r
.idata:004050D0 ; int (*fprintf)(FILE *const Stream, const char *const Format, ...)
.idata:004050D0                 extrn fprintf:dword     ; CODE XREF: sub_402666+29↑p
.idata:004050D0                                         ; ReadTable(x,x,x)+64↑p ...
.idata:004050D4                 extrn __imp__except_handler4_common:dword
.idata:004050D4                                         ; DATA XREF: _except_handler4_common↑r
.idata:004050D8 ; unsigned int (__cdecl *controlfp)(unsigned int NewValue, unsigned int Mask)
.idata:004050D8                 extrn _controlfp:dword  ; CODE XREF: sub_403D73+A↑p
.idata:004050D8                                         ; DATA XREF: sub_403D73+A↑r
.idata:004050DC ; void __cdecl terminate(void)
.idata:004050DC                 extrn ?terminate@@YAXXZ:dword
.idata:004050DC                                         ; CODE XREF: __CxxUnhandledExceptionFilter(_EXCEPTION_POINTERS *):loc_403AA7↑p
.idata:004050DC                                         ; DATA XREF: __CxxUnhandledExceptionFilter(_EXCEPTION_POINTERS *):loc_403AA7↑r
.idata:004050E0 ; void (__cdecl *_initterm)(_PVFV *First, _PVFV *Last)
.idata:004050E0                 extrn __imp__initterm:dword
.idata:004050E0                                         ; DATA XREF: _initterm↑r
.idata:004050E4 ; void (__cdecl *_setusermatherr)(_UserMathErrorFunctionPointer UserMathErrorFunction)
.idata:004050E4                 extrn __setusermatherr:dword
.idata:004050E4                                         ; CODE XREF: pre_c_init+B2↑p
.idata:004050E4                                         ; DATA XREF: pre_c_init+B2↑r
.idata:004050E8 ; int *(__cdecl *_p__fmode)()
.idata:004050E8                 extrn __p__fmode:dword  ; CODE XREF: pre_c_init+83↑p
.idata:004050E8                                         ; DATA XREF: pre_c_init+83↑r
.idata:004050EC ; void (__cdecl *cexit)()
.idata:004050EC                 extrn _cexit:dword      ; CODE XREF: start-66↑p
.idata:004050EC                                         ; DATA XREF: start-66↑r
.idata:004050F0 ; void (__cdecl __noreturn *exit)(int Code)
.idata:004050F0                 extrn _exit:dword       ; CODE XREF: .text:0040389B↑p
.idata:004050F0                                         ; DATA XREF: .text:0040389B↑r
.idata:004050F4 ; void (__cdecl *_set_app_type)(_crt_app_type Type)
.idata:004050F4                 extrn __set_app_type:dword
.idata:004050F4                                         ; CODE XREF: pre_c_init+6D↑p
.idata:004050F4                                         ; DATA XREF: pre_c_init+6D↑r
.idata:004050F8                 extrn __getmainargs:dword
.idata:004050F8                                         ; CODE XREF: pre_cpp_init+24↑p
.idata:004050F8                                         ; DATA XREF: pre_cpp_init+24↑r
.idata:004050FC                 extrn __imp__amsg_exit:dword
.idata:004050FC                                         ; DATA XREF: _amsg_exit↑r
.idata:00405100 ; int *(__cdecl *_p__commode)()
.idata:00405100                 extrn __p__commode:dword
.idata:00405100                                         ; CODE XREF: pre_c_init+91↑p
.idata:00405100                                         ; DATA XREF: pre_c_init+91↑r
.idata:00405104                 extrn __imp__XcptFilter:dword
.idata:00405104                                         ; DATA XREF: _XcptFilter↑r
.idata:00405108 ; int (__cdecl *islower)(int C)
.idata:00405108                 extrn islower:dword     ; CODE XREF: sub_4021BA+96↑p
.idata:00405108                                         ; DATA XREF: sub_4021BA+96↑r
.idata:0040510C ; int (__cdecl *isdigit)(int C)
.idata:0040510C                 extrn isdigit:dword     ; CODE XREF: sub_4021BA+67↑p
.idata:0040510C                                         ; DATA XREF: sub_4021BA+67↑r
.idata:00405110 ; int (__cdecl *isspace)(int C)
.idata:00405110                 extrn isspace:dword     ; CODE XREF: sub_4021BA+F3↑p
.idata:00405110                                         ; DATA XREF: sub_4021BA+F3↑r
.idata:00405114 ; int (__cdecl *isxdigit)(int C)
.idata:00405114                 extrn isxdigit:dword    ; CODE XREF: sub_4021BA+88↑p
.idata:00405114                                         ; DATA XREF: sub_4021BA+88↑r
.idata:00405118 ; int (__cdecl *vsnprintf)(char *const Buffer, const size_t BufferCount, const char *const Format, va_list ArgList)
.idata:00405118                 extrn _vsnprintf:dword  ; CODE XREF: StringCchPrintfA(char *,uint,char const *,...)+32↑p
.idata:00405118                                         ; DATA XREF: StringCchPrintfA(char *,uint,char const *,...)+32↑r
.idata:0040511C ; int (*sscanf_s)(const char *const Buffer, const char *const Format, ...)
.idata:0040511C                 extrn sscanf_s:dword    ; CODE XREF: sub_4023C7+33↑p
.idata:0040511C                                         ; DATA XREF: sub_4023C7+33↑r
.idata:00405120 ; FILE *(__cdecl *__iob_func)()
.idata:00405120                 extrn __imp___iob_func:dword
.idata:00405120                                         ; DATA XREF: __iob_func↑r
.idata:00405124 ; int (__cdecl *toupper)(int C)
.idata:00405124                 extrn toupper:dword     ; CODE XREF: _main+117↑p
.idata:00405124                                         ; DATA XREF: _main+117↑r
.idata:00405128 ; int (__cdecl *vsnwprintf)(wchar_t *Buffer, size_t BufferCount, const wchar_t *Format, va_list Args)
.idata:00405128                 extrn _vsnwprintf:dword ; CODE XREF: StringCchPrintfW(ushort *,uint,ushort const *,...)+32↑p
.idata:00405128                                         ; DATA XREF: StringCchPrintfW(ushort *,uint,ushort const *,...)+32↑r
.idata:0040512C ; void (__cdecl __noreturn *exit)(int Code)
.idata:0040512C                 extrn exit:dword        ; CODE XREF: _main+BF↑p
.idata:0040512C                                         ; sub_40184E+67↑p ...
.idata:00405130
.idata:00405134 ;
.idata:00405134 ; Imports from ntdll.dll
.idata:00405134 ;
.idata:00405134 ; PWSTR (__stdcall *RtlIpv4AddressToStringW)(const struct in_addr *Addr, PWSTR S)
.idata:00405134                 extrn RtlIpv4AddressToStringW:dword
.idata:00405134                                         ; CODE XREF: sub_4020BF+1F↑p
.idata:00405134                                         ; DATA XREF: sub_4020BF+1F↑r ...
.idata:00405138
.idata:0040513C ;
.idata:0040513C ; Imports from snmpapi.dll
.idata:0040513C ;
.idata:0040513C ; LPVOID (__stdcall *SnmpUtilMemAlloc)(UINT nBytes)
.idata:0040513C                 extrn SnmpUtilMemAlloc:dword
.idata:0040513C                                         ; CODE XREF: sub_401A35+FD↑p
.idata:0040513C                                         ; AddArp(x,x,x)+105↑p ...
.idata:00405140 ; INT (__stdcall *SnmpUtilOidCpy)(AsnObjectIdentifier *pOidDst, AsnObjectIdentifier *pOidSrc)
.idata:00405140                 extrn SnmpUtilOidCpy:dword
.idata:00405140                                         ; CODE XREF: ReadTable(x,x,x)+54C↑p
.idata:00405140                                         ; DATA XREF: ReadTable(x,x,x)+54C↑r
.idata:00405144 ; void (__stdcall *SnmpUtilVarBindFree)(SnmpVarBind *pVb)
.idata:00405144                 extrn SnmpUtilVarBindFree:dword
.idata:00405144                                         ; CODE XREF: ReadTable(x,x,x)+556↑p
.idata:00405144                                         ; ReadTable(x,x,x)+576↑p ...
.idata:00405148 ; void (__stdcall *SnmpUtilMemFree)(LPVOID pMem)
.idata:00405148                 extrn SnmpUtilMemFree:dword
.idata:00405148                                         ; CODE XREF: sub_401A35+155↑p
.idata:00405148                                         ; AddArp(x,x,x)+22B↑p ...
.idata:0040514C
.idata:0040514C
.idata:00405150 ; ===========================================================================
.idata:00405150
.idata:00405150 ; Segment type: Pure data
.idata:00405150 ; Segment permissions: Read
.idata:00405150 _idata          segment para public 'DATA' use32
.idata:00405150                 assume cs:_idata
.idata:00405150                 ;org 405150h
.idata:00405150 ___guard_check_icall_fptr dd offset @_guard_check_icall_nop@4
.idata:00405150                                         ; DATA XREF: .text:00401050↑o
.idata:00405150                                         ; sub_401A35+14A↑r ...
.idata:00405150                                         ; _guard_check_icall_nop(x)
.idata:00405154 __IMPORT_DESCRIPTOR_msvcrt dd rva off_40537C ; Import Name Table
.idata:00405158                 dd 0                    ; Time stamp
.idata:0040515C                 dd 0                    ; Forwarder Chain
.idata:00405160                 dd rva aMsvcrtDll       ; DLL Name
.idata:00405164                 dd rva time             ; Import Address Table
.idata:00405168 __IMPORT_DESCRIPTOR_WS2_32 dd rva dword_4052D4 ; Import Name Table
.idata:0040516C                 dd 0                    ; Time stamp
.idata:00405170                 dd 0                    ; Forwarder Chain
.idata:00405174                 dd rva aWs232Dll        ; DLL Name
.idata:00405178                 dd rva WSAStartup       ; Import Address Table
.idata:0040517C                 dd rva off_405300       ; Import Name Table
.idata:00405180                 dd 0                    ; Time stamp
.idata:00405184                 dd 0                    ; Forwarder Chain
.idata:00405188                 dd rva aApiMsWinCoreHe  ; DLL Name
.idata:0040518C                 dd rva HeapSetInformation ; Import Address Table
.idata:00405190                 dd rva off_405308       ; Import Name Table
.idata:00405194                 dd 0                    ; Time stamp
.idata:00405198                 dd 0                    ; Forwarder Chain
.idata:0040519C                 dd rva aApiMsWinCoreHe_0 ; DLL Name
.idata:004051A0                 dd rva LocalFree        ; Import Address Table
.idata:004051A4                 dd rva off_405354       ; Import Name Table
.idata:004051A8                 dd 0                    ; Time stamp
.idata:004051AC                 dd 0                    ; Forwarder Chain
.idata:004051B0                 dd rva aApiMsWinCoreSy  ; DLL Name
.idata:004051B4                 dd rva Sleep            ; Import Address Table
.idata:004051B8                 dd rva off_4052F0       ; Import Name Table
.idata:004051BC                 dd 0                    ; Time stamp
.idata:004051C0                 dd 0                    ; Forwarder Chain
.idata:004051C4                 dd rva aApiMsWinCoreEr  ; DLL Name
.idata:004051C8                 dd rva SetUnhandledExceptionFilter ; Import Address Table
.idata:004051CC                 dd rva off_405330       ; Import Name Table
.idata:004051D0                 dd 0                    ; Time stamp
.idata:004051D4                 dd 0                    ; Forwarder Chain
.idata:004051D8                 dd rva aApiMsWinCorePr  ; DLL Name
.idata:004051DC                 dd rva GetCurrentProcessId ; Import Address Table
.idata:004051E0                 dd rva off_405314       ; Import Name Table
.idata:004051E4                 dd 0                    ; Time stamp
.idata:004051E8                 dd 0                    ; Forwarder Chain
.idata:004051EC                 dd rva aApiMsWinCoreLi  ; DLL Name
.idata:004051F0                 dd rva LoadLibraryExA   ; Import Address Table
.idata:004051F4                 dd rva off_405344       ; Import Name Table
.idata:004051F8                 dd 0                    ; Time stamp
.idata:004051FC                 dd 0                    ; Forwarder Chain
.idata:00405200                 dd rva aApiMsWinCorePr_0 ; DLL Name
.idata:00405204                 dd rva QueryPerformanceCounter ; Import Address Table
.idata:00405208                 dd rva off_40535C       ; Import Name Table
.idata:0040520C                 dd 0                    ; Time stamp
.idata:00405210                 dd 0                    ; Forwarder Chain
.idata:00405214                 dd rva aApiMsWinCoreSy_0 ; DLL Name
.idata:00405218                 dd rva GetTickCount     ; Import Address Table
.idata:0040521C __IMPORT_DESCRIPTOR_ntdll dd rva off_4053F0 ; Import Name Table
.idata:00405220                 dd 0                    ; Time stamp
.idata:00405224                 dd 0                    ; Forwarder Chain
.idata:00405228                 dd rva aNtdllDll        ; DLL Name
.idata:0040522C                 dd rva RtlIpv4AddressToStringW ; Import Address Table
.idata:00405230 __IMPORT_DESCRIPTOR_snmpapi dd rva off_4053F8 ; Import Name Table
.idata:00405234                 dd 0                    ; Time stamp
.idata:00405238                 dd 0                    ; Forwarder Chain
.idata:0040523C                 dd rva aSnmpapiDll      ; DLL Name
.idata:00405240                 dd rva SnmpUtilMemAlloc ; Import Address Table
.idata:00405244                 dd rva off_40536C       ; Import Name Table
.idata:00405248                 dd 0                    ; Time stamp
.idata:0040524C                 dd 0                    ; Forwarder Chain
.idata:00405250                 dd rva aApiMsWinSecuri  ; DLL Name
.idata:00405254                 dd rva AllocateAndInitializeSid ; Import Address Table
.idata:00405258 __IMPORT_DESCRIPTOR_IPHLPAPI dd rva off_4052BC ; Import Name Table
.idata:0040525C                 dd 0                    ; Time stamp
.idata:00405260                 dd 0                    ; Forwarder Chain
.idata:00405264                 dd rva aIphlpapiDll     ; DLL Name
.idata:00405268                 dd rva GetIcmpStatisticsEx ; Import Address Table
.idata:0040526C                 dd rva off_4052E8       ; Import Name Table
.idata:00405270                 dd 0                    ; Time stamp
.idata:00405274                 dd 0                    ; Forwarder Chain
.idata:00405278                 dd rva aApiMsWinCoreCo  ; DLL Name
.idata:0040527C                 dd rva GetConsoleOutputCP ; Import Address Table
.idata:00405280                 dd rva off_405324       ; Import Name Table
.idata:00405284                 dd 0                    ; Time stamp
.idata:00405288                 dd 0                    ; Forwarder Chain
.idata:0040528C                 dd rva aApiMsWinCoreLo  ; DLL Name
.idata:00405290                 dd rva FormatMessageW   ; Import Address Table
.idata:00405294                 dd rva off_40534C       ; Import Name Table
.idata:00405298                 dd 0                    ; Time stamp
.idata:0040529C                 dd 0                    ; Forwarder Chain
.idata:004052A0                 dd rva aApiMsWinCoreSt  ; DLL Name
.idata:004052A4                 dd rva WideCharToMultiByte ; Import Address Table
.idata:004052A8                 db    0
.idata:004052A9                 db    0
.idata:004052AA                 db    0
.idata:004052AB                 db    0
.idata:004052AC                 db    0
.idata:004052AD                 db    0
.idata:004052AE                 db    0
.idata:004052AF                 db    0
.idata:004052B0                 db    0
.idata:004052B1                 db    0
.idata:004052B2                 db    0
.idata:004052B3                 db    0
.idata:004052B4                 db    0
.idata:004052B5                 db    0
.idata:004052B6                 db    0
.idata:004052B7                 db    0
.idata:004052B8                 db    0
.idata:004052B9                 db    0
.idata:004052BA                 db    0
.idata:004052BB                 db    0
.idata:004052BC ;
.idata:004052BC ; Import names for IPHLPAPI.DLL
.idata:004052BC ;
.idata:004052BC off_4052BC      dd rva word_405876      ; DATA XREF: .idata:__IMPORT_DESCRIPTOR_IPHLPAPI↑o
.idata:004052C0                 dd rva word_4058F4
.idata:004052C4                 dd rva word_4058CA
.idata:004052C8                 dd rva word_4058E0
.idata:004052CC                 dd rva word_4058B4
.idata:004052D0                 dd 0
.idata:004052D4 ;
.idata:004052D4 ; Import names for WS2_32.dll
.idata:004052D4 ;
.idata:004052D4 dword_4052D4    dd 80000073h            ; DATA XREF: .idata:__IMPORT_DESCRIPTOR_WS2_32↑o
.idata:004052D8                 dd 8000000Eh
.idata:004052DC                 dd 80000034h
.idata:004052E0                 dd 8000000Bh
.idata:004052E4                 dd 0
.idata:004052E8 ;
.idata:004052E8 ; Import names for api-ms-win-core-console-l1-1-0.dll
.idata:004052E8 ;
.idata:004052E8 off_4052E8      dd rva word_405908      ; DATA XREF: .idata:0040526C↑o
.idata:004052EC                 dd 0
.idata:004052F0 ;
.idata:004052F0 ; Import names for api-ms-win-core-errorhandling-l1-1-1.dll
.idata:004052F0 ;
.idata:004052F0 off_4052F0      dd rva word_40558C      ; DATA XREF: .idata:004051B8↑o
.idata:004052F4                 dd rva word_405866
.idata:004052F8                 dd rva word_405570
.idata:004052FC                 dd 0
.idata:00405300 ;
.idata:00405300 ; Import names for api-ms-win-core-heap-l1-2-0.dll
.idata:00405300 ;
.idata:00405300 off_405300      dd rva word_405546      ; DATA XREF: .idata:0040517C↑o
.idata:00405304                 dd 0
.idata:00405308 ;
.idata:00405308 ; Import names for api-ms-win-core-heap-l2-1-0.dll
.idata:00405308 ;
.idata:00405308 off_405308      dd rva word_40555C      ; DATA XREF: .idata:00405190↑o
.idata:0040530C                 dd rva word_40591E
.idata:00405310                 dd 0
.idata:00405314 ;
.idata:00405314 ; Import names for api-ms-win-core-libraryloader-l1-2-0.dll
.idata:00405314 ;
.idata:00405314 off_405314      dd rva word_405854      ; DATA XREF: .idata:004051E0↑o
.idata:00405318                 dd rva word_4055D2
.idata:0040531C                 dd rva word_4058A2
.idata:00405320                 dd 0
.idata:00405324 ;
.idata:00405324 ; Import names for api-ms-win-core-localization-l1-2-1.dll
.idata:00405324 ;
.idata:00405324 off_405324      dd rva word_40592C      ; DATA XREF: .idata:00405280↑o
.idata:00405328                 dd rva word_405954
.idata:0040532C                 dd 0
.idata:00405330 ;
.idata:00405330 ; Import names for api-ms-win-core-processthreads-l1-1-2.dll
.idata:00405330 ;
.idata:00405330 off_405330      dd rva word_405600      ; DATA XREF: .idata:004051CC↑o
.idata:00405334                 dd rva word_405616
.idata:00405338                 dd rva word_4055BE
.idata:0040533C                 dd rva word_4055AA
.idata:00405340                 dd 0
.idata:00405344 ;
.idata:00405344 ; Import names for api-ms-win-core-profile-l1-1-0.dll
.idata:00405344 ;
.idata:00405344 off_405344      dd rva word_4055E6      ; DATA XREF: .idata:004051F4↑o
.idata:00405348                 dd 0
.idata:0040534C ;
.idata:0040534C ; Import names for api-ms-win-core-string-l1-1-0.dll
.idata:0040534C ;
.idata:0040534C off_40534C      dd rva word_40593E      ; DATA XREF: .idata:00405294↑o
.idata:00405350                 dd 0
.idata:00405354 ;
.idata:00405354 ; Import names for api-ms-win-core-synch-l1-2-0.dll
.idata:00405354 ;
.idata:00405354 off_405354      dd rva word_405568      ; DATA XREF: .idata:004051A4↑o
.idata:00405358                 dd 0
.idata:0040535C ;
.idata:0040535C ; Import names for api-ms-win-core-sysinfo-l1-2-1.dll
.idata:0040535C ;
.idata:0040535C off_40535C      dd rva word_405646      ; DATA XREF: .idata:00405208↑o
.idata:00405360                 dd rva word_40588C
.idata:00405364                 dd rva word_40562C
.idata:00405368                 dd 0
.idata:0040536C ;
.idata:0040536C ; Import names for api-ms-win-security-base-l1-2-0.dll
.idata:0040536C ;
.idata:0040536C off_40536C      dd rva word_405838      ; DATA XREF: .idata:00405244↑o
.idata:00405370                 dd rva word_40582E
.idata:00405374                 dd rva word_405816
.idata:00405378                 dd 0
.idata:0040537C ;
.idata:0040537C ; Import names for msvcrt.dll
.idata:0040537C ;
.idata:0040537C off_40537C      dd rva word_4057EA      ; DATA XREF: .idata:__IMPORT_DESCRIPTOR_msvcrt↑o
.idata:00405380                 dd rva word_4057F2
.idata:00405384                 dd rva word_4057FE
.idata:00405388                 dd rva word_405808
.idata:0040538C                 dd rva word_4057E0
.idata:00405390                 dd rva word_40552C
.idata:00405394                 dd rva word_40551E
.idata:00405398                 dd rva word_40550A
.idata:0040539C                 dd rva word_4054F2
.idata:004053A0                 dd rva word_4054DE
.idata:004053A4                 dd rva word_4054D0
.idata:004053A8                 dd rva word_4054C6
.idata:004053AC                 dd rva word_4054BE
.idata:004053B0                 dd rva word_4054AC
.idata:004053B4                 dd rva word_40549C
.idata:004053B8                 dd rva word_40548E
.idata:004053BC                 dd rva word_40547E
.idata:004053C0                 dd rva word_405470
.idata:004053C4                 dd rva word_405466
.idata:004053C8                 dd rva word_40545C
.idata:004053CC                 dd rva word_405452
.idata:004053D0                 dd rva word_405446
.idata:004053D4                 dd rva word_405438
.idata:004053D8                 dd rva word_40542C
.idata:004053DC                 dd rva word_405A3C
.idata:004053E0                 dd rva word_405422
.idata:004053E4                 dd rva word_405414
.idata:004053E8                 dd rva word_40540C
.idata:004053EC                 dd 0
.idata:004053F0 ;
.idata:004053F0 ; Import names for ntdll.dll
.idata:004053F0 ;
.idata:004053F0 off_4053F0      dd rva word_40578A      ; DATA XREF: .idata:__IMPORT_DESCRIPTOR_ntdll↑o
.idata:004053F4                 dd 0
.idata:004053F8 ;
.idata:004053F8 ; Import names for snmpapi.dll
.idata:004053F8 ;
.idata:004053F8 off_4053F8      dd rva word_4057C0      ; DATA XREF: .idata:__IMPORT_DESCRIPTOR_snmpapi↑o
.idata:004053FC                 dd rva word_405A14
.idata:00405400                 dd rva word_405A26
.idata:00405404                 dd rva word_4057AE
.idata:00405408                 dd 0
.idata:0040540C word_40540C     dw 4AEh                 ; DATA XREF: .idata:004053E8↑o
.idata:0040540E                 db 'exit',0
.idata:00405413                 align 4
.idata:00405414 word_405414     dw 3ECh                 ; DATA XREF: .idata:004053E4↑o
.idata:00405416                 db '_vsnwprintf',0
.idata:00405422 word_405422     dw 559h                 ; DATA XREF: .idata:004053E0↑o
.idata:00405424                 db 'toupper',0
.idata:0040542C word_40542C     dw 52Fh                 ; DATA XREF: .idata:004053D8↑o
.idata:0040542E                 db 'sscanf_s',0
.idata:00405437                 align 4
.idata:00405438 word_405438     dw 3E6h                 ; DATA XREF: .idata:004053D4↑o
.idata:0040543A                 db '_vsnprintf',0
.idata:00405445                 align 2
.idata:00405446 word_405446     dw 4F4h                 ; DATA XREF: .idata:004053D0↑o
.idata:00405448                 db 'isxdigit',0
.idata:00405451                 align 2
.idata:00405452 word_405452     dw 4E5h                 ; DATA XREF: .idata:004053CC↑o
.idata:00405454                 db 'isspace',0
.idata:0040545C word_40545C     dw 4DFh                 ; DATA XREF: .idata:004053C8↑o
.idata:0040545E                 db 'isdigit',0
.idata:00405466 word_405466     dw 4E2h                 ; DATA XREF: .idata:004053C4↑o
.idata:00405468                 db 'islower',0
.idata:00405470 word_405470     dw 6Fh                  ; DATA XREF: .idata:004053C0↑o
.idata:00405472                 db '_XcptFilter',0
.idata:0040547E word_40547E     dw 0C9h                 ; DATA XREF: .idata:004053BC↑o
.idata:00405480                 db '__p__commode',0
.idata:0040548D                 align 2
.idata:0040548E word_40548E     dw 111h                 ; DATA XREF: .idata:004053B8↑o
.idata:00405490                 db '_amsg_exit',0
.idata:0040549B                 align 4
.idata:0040549C word_40549C     dw 0A1h                 ; DATA XREF: .idata:004053B4↑o
.idata:0040549E                 db '__getmainargs',0
.idata:004054AC word_4054AC     dw 0E2h                 ; DATA XREF: .idata:004053B0↑o
.idata:004054AE                 db '__set_app_type',0
.idata:004054BD                 align 2
.idata:004054BE word_4054BE     dw 173h                 ; DATA XREF: .idata:004053AC↑o
.idata:004054C0                 db '_exit',0
.idata:004054C6 word_4054C6     dw 124h                 ; DATA XREF: .idata:004053A8↑o
.idata:004054C8                 db '_cexit',0
.idata:004054CF                 align 10h
.idata:004054D0 word_4054D0     dw 0CEh                 ; DATA XREF: .idata:004053A4↑o
.idata:004054D2                 db '__p__fmode',0
.idata:004054DD                 align 2
.idata:004054DE word_4054DE     dw 0E4h                 ; DATA XREF: .idata:004053A0↑o
.idata:004054E0                 db '__setusermatherr',0
.idata:004054F1                 align 2
.idata:004054F2 word_4054F2     dw 1E8h                 ; DATA XREF: .idata:0040539C↑o
.idata:004054F4                 db '_initterm',0
.idata:004054FE aMsvcrtDll      db 'msvcrt.dll',0       ; DATA XREF: .idata:00405160↑o
.idata:00405509                 align 2
.idata:0040550A word_40550A     dw 35h                  ; DATA XREF: .idata:00405398↑o
.idata:0040550C                 db '?terminate@@YAXXZ',0
.idata:0040551E word_40551E     dw 137h                 ; DATA XREF: .idata:00405394↑o
.idata:00405520                 db '_controlfp',0
.idata:0040552B                 align 4
.idata:0040552C word_40552C     dw 16Ah                 ; DATA XREF: .idata:00405390↑o
.idata:0040552E                 db '_except_handler4_common',0
.idata:00405546 word_405546     dw 0Ah                  ; DATA XREF: .idata:off_405300↑o
.idata:00405548                 db 'HeapSetInformation',0
.idata:0040555B                 align 4
.idata:0040555C word_40555C     dw 3                    ; DATA XREF: .idata:off_405308↑o
.idata:0040555E                 db 'LocalFree',0
.idata:00405568 word_405568     dw 2Dh                  ; DATA XREF: .idata:off_405354↑o
.idata:0040556A                 db 'Sleep',0
.idata:00405570 word_405570     dw 11h                  ; DATA XREF: .idata:004052F8↑o
.idata:00405572                 db 'UnhandledExceptionFilter',0
.idata:0040558B                 align 4
.idata:0040558C word_40558C     dw 0Fh                  ; DATA XREF: .idata:off_4052F0↑o
.idata:0040558E                 db 'SetUnhandledExceptionFilter',0
.idata:004055AA word_4055AA     dw 0Ch                  ; DATA XREF: .idata:0040533C↑o
.idata:004055AC                 db 'GetCurrentProcess',0
.idata:004055BE word_4055BE     dw 4Dh                  ; DATA XREF: .idata:00405338↑o
.idata:004055C0                 db 'TerminateProcess',0
.idata:004055D1                 align 2
.idata:004055D2 word_4055D2     dw 11h                  ; DATA XREF: .idata:00405318↑o
.idata:004055D4                 db 'GetModuleHandleA',0
.idata:004055E5                 align 2
.idata:004055E6 word_4055E6     dw 0                    ; DATA XREF: .idata:off_405344↑o
.idata:004055E8                 db 'QueryPerformanceCounter',0
.idata:00405600 word_405600     dw 0Dh                  ; DATA XREF: .idata:off_405330↑o
.idata:00405602                 db 'GetCurrentProcessId',0
.idata:00405616 word_405616     dw 11h                  ; DATA XREF: .idata:00405334↑o
.idata:00405618                 db 'GetCurrentThreadId',0
.idata:0040562B                 align 4
.idata:0040562C word_40562C     dw 14h                  ; DATA XREF: .idata:00405364↑o
.idata:0040562E                 db 'GetSystemTimeAsFileTime',0
.idata:00405646 word_405646     dw 18h                  ; DATA XREF: .idata:off_40535C↑o
.idata:00405648                 db 'GetTickCount',0
.idata:00405655                 align 2
.idata:00405656 aWs232Dll       db 'WS2_32.dll',0       ; DATA XREF: .idata:00405174↑o
.idata:00405661                 align 2
.idata:00405662 aApiMsWinCoreHe db 'api-ms-win-core-heap-l1-2-0.dll',0
.idata:00405662                                         ; DATA XREF: .idata:00405188↑o
.idata:00405682 aApiMsWinCoreHe_0 db 'api-ms-win-core-heap-l2-1-0.dll',0
.idata:00405682                                         ; DATA XREF: .idata:0040519C↑o
.idata:004056A2 aApiMsWinCoreSy db 'api-ms-win-core-synch-l1-2-0.dll',0
.idata:004056A2                                         ; DATA XREF: .idata:004051B0↑o
.idata:004056C3                 align 4
.idata:004056C4 aApiMsWinCoreEr db 'api-ms-win-core-errorhandling-l1-1-1.dll',0
.idata:004056C4                                         ; DATA XREF: .idata:004051C4↑o
.idata:004056ED                 align 2
.idata:004056EE aApiMsWinCorePr db 'api-ms-win-core-processthreads-l1-1-2.dll',0
.idata:004056EE                                         ; DATA XREF: .idata:004051D8↑o
.idata:00405718 aApiMsWinCoreLi db 'api-ms-win-core-libraryloader-l1-2-0.dll',0
.idata:00405718                                         ; DATA XREF: .idata:004051EC↑o
.idata:00405741                 align 2
.idata:00405742 aApiMsWinCorePr_0 db 'api-ms-win-core-profile-l1-1-0.dll',0
.idata:00405742                                         ; DATA XREF: .idata:00405200↑o
.idata:00405765                 align 2
.idata:00405766 aApiMsWinCoreSy_0 db 'api-ms-win-core-sysinfo-l1-2-1.dll',0
.idata:00405766                                         ; DATA XREF: .idata:00405214↑o
.idata:00405789                 align 2
.idata:0040578A word_40578A     dw 456h                 ; DATA XREF: .idata:off_4053F0↑o
.idata:0040578C                 db 'RtlIpv4AddressToStringW',0
.idata:004057A4 aNtdllDll       db 'ntdll.dll',0        ; DATA XREF: .idata:00405228↑o
.idata:004057AE word_4057AE     dw 11h                  ; DATA XREF: .idata:00405404↑o
.idata:004057B0                 db 'SnmpUtilMemFree',0
.idata:004057C0 word_4057C0     dw 10h                  ; DATA XREF: .idata:off_4053F8↑o
.idata:004057C2                 db 'SnmpUtilMemAlloc',0
.idata:004057D3                 align 4
.idata:004057D4 aSnmpapiDll     db 'snmpapi.dll',0      ; DATA XREF: .idata:0040523C↑o
.idata:004057E0 word_4057E0     dw 4BEh                 ; DATA XREF: .idata:0040538C↑o
.idata:004057E2                 db 'fprintf',0
.idata:004057EA word_4057EA     dw 553h                 ; DATA XREF: .idata:off_40537C↑o
.idata:004057EC                 db 'time',0
.idata:004057F1                 align 2
.idata:004057F2 word_4057F2     dw 34Ah                 ; DATA XREF: .idata:00405380↑o
.idata:004057F4                 db '_setmode',0
.idata:004057FD                 align 2
.idata:004057FE word_4057FE     dw 180h                 ; DATA XREF: .idata:00405384↑o
.idata:00405800                 db '_fileno',0
.idata:00405808 word_405808     dw 46Dh                 ; DATA XREF: .idata:00405388↑o
.idata:0040580A                 db '_wsetlocale',0
.idata:00405816 word_405816     dw 1Bh                  ; DATA XREF: .idata:00405374↑o
.idata:00405818                 db 'CheckTokenMembership',0
.idata:0040582D                 align 2
.idata:0040582E word_40582E     dw 2Eh                  ; DATA XREF: .idata:00405370↑o
.idata:00405830                 db 'FreeSid',0
.idata:00405838 word_405838     dw 16h                  ; DATA XREF: .idata:off_40536C↑o
.idata:0040583A                 db 'AllocateAndInitializeSid',0
.idata:00405853                 align 4
.idata:00405854 word_405854     dw 17h                  ; DATA XREF: .idata:off_405314↑o
.idata:00405856                 db 'LoadLibraryExA',0
.idata:00405865                 align 2
.idata:00405866 word_405866     dw 5                    ; DATA XREF: .idata:004052F4↑o
.idata:00405868                 db 'GetLastError',0
.idata:00405875                 align 2
.idata:00405876 word_405876     dw 4Eh                  ; DATA XREF: .idata:off_4052BC↑o
.idata:00405878                 db 'GetIcmpStatisticsEx',0
.idata:0040588C word_40588C     dw 0Eh                  ; DATA XREF: .idata:00405360↑o
.idata:0040588E                 db 'GetSystemDirectoryA',0
.idata:004058A2 word_4058A2     dw 15h                  ; DATA XREF: .idata:0040531C↑o
.idata:004058A4                 db 'GetProcAddress',0
.idata:004058B3                 align 4
.idata:004058B4 word_4058B4     dw 7Dh                  ; DATA XREF: .idata:004052CC↑o
.idata:004058B6                 db 'GetTcpStatisticsEx',0
.idata:004058C9                 align 2
.idata:004058CA word_4058CA     dw 83h                  ; DATA XREF: .idata:004052C4↑o
.idata:004058CC                 db 'GetUdpStatisticsEx',0
.idata:004058DF                 align 10h
.idata:004058E0 word_4058E0     dw 67h                  ; DATA XREF: .idata:004052C8↑o
.idata:004058E2                 db 'GetIpStatisticsEx',0
.idata:004058F4 word_4058F4     dw 5Ch                  ; DATA XREF: .idata:004052C0↑o
.idata:004058F6                 db 'GetIpForwardTable',0
.idata:00405908 word_405908     dw 3                    ; DATA XREF: .idata:off_4052E8↑o
.idata:0040590A                 db 'GetConsoleOutputCP',0
.idata:0040591D                 align 2
.idata:0040591E word_40591E     dw 2                    ; DATA XREF: .idata:0040530C↑o
.idata:00405920                 db 'LocalAlloc',0
.idata:0040592B                 align 4
.idata:0040592C word_40592C     dw 8                    ; DATA XREF: .idata:off_405324↑o
.idata:0040592E                 db 'FormatMessageW',0
.idata:0040593D                 align 2
.idata:0040593E word_40593E     dw 7                    ; DATA XREF: .idata:off_40534C↑o
.idata:00405940                 db 'WideCharToMultiByte',0
.idata:00405954 word_405954     dw 39h                  ; DATA XREF: .idata:00405328↑o
.idata:00405956                 db 'SetThreadPreferredUILanguages',0
.idata:00405974 aApiMsWinSecuri db 'api-ms-win-security-base-l1-2-0.dll',0
.idata:00405974                                         ; DATA XREF: .idata:00405250↑o
.idata:00405998 aIphlpapiDll    db 'IPHLPAPI.DLL',0     ; DATA XREF: .idata:00405264↑o
.idata:004059A5                 align 2
.idata:004059A6 aApiMsWinCoreCo db 'api-ms-win-core-console-l1-1-0.dll',0
.idata:004059A6                                         ; DATA XREF: .idata:00405278↑o
.idata:004059C9                 align 2
.idata:004059CA aApiMsWinCoreLo db 'api-ms-win-core-localization-l1-2-1.dll',0
.idata:004059CA                                         ; DATA XREF: .idata:0040528C↑o
.idata:004059F2 aApiMsWinCoreSt db 'api-ms-win-core-string-l1-1-0.dll',0
.idata:004059F2                                         ; DATA XREF: .idata:004052A0↑o
.idata:00405A14 word_405A14     dw 19h                  ; DATA XREF: .idata:004053FC↑o
.idata:00405A16                 db 'SnmpUtilOidCpy',0
.idata:00405A25                 align 2
.idata:00405A26 word_405A26     dw 23h                  ; DATA XREF: .idata:00405400↑o
.idata:00405A28                 db 'SnmpUtilVarBindFree',0
.idata:00405A3C word_405A3C     dw 0A3h                 ; DATA XREF: .idata:004053DC↑o
.idata:00405A3E                 db '__iob_func',0
.idata:00405A49                 align 800h
.idata:00405A49 _idata          ends
.idata:00405A49
.idata:00405A49
.idata:00405A49                 end start
