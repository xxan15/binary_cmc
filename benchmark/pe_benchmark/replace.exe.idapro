.text:00401000 ;
.text:00401000 ; +-------------------------------------------------------------------------+
.text:00401000 ; |      This file was generated by The Interactive Disassembler (IDA)      |
.text:00401000 ; |           Copyright (c) 2021 Hex-Rays, <support@hex-rays.com>           |
.text:00401000 ; |                      License info: 48-357D-7BC4-C6                      |
.text:00401000 ; |                              Virginia Tech                              |
.text:00401000 ; +-------------------------------------------------------------------------+
.text:00401000 ;
.text:00401000 ; Input SHA256 : D191D59C02C3C4F9FADFAB8C97108AB087E82386EA669EBC6F7FF9FC697C8A24
.text:00401000 ; Input MD5    : 104B57DD6A26E3E65FFD0822DC605918
.text:00401000 ; Input CRC32  : CFB752FC
.text:00401000
.text:00401000 ; File Name   : /home/cindy/Documents/Projects/DSV/benchmark/pe_benchmarks/replace.exe
.text:00401000 ; Format      : Portable executable for 80386 (PE)
.text:00401000 ; Imagebase   : 400000
.text:00401000 ; Hash        : 238A3149
.text:00401000 ; Section 1. (virtual address 00001000)
.text:00401000 ; Virtual size                  : 00002614 (   9748.)
.text:00401000 ; Section size in file          : 00002800 (  10240.)
.text:00401000 ; Offset to raw data for section: 00000400
.text:00401000 ; Flags 60000020: Text Executable Readable
.text:00401000 ; Alignment     : default
.text:00401000 ; PDB File Name : replace.pdb
.text:00401000
.text:00401000                 .686p
.text:00401000                 .mmx
.text:00401000                 .model flat
.text:00401000
.text:00401000 ; ===========================================================================
.text:00401000
.text:00401000 ; Segment type: Pure code
.text:00401000 ; Segment permissions: Read/Execute
.text:00401000 _text           segment para public 'CODE' use32
.text:00401000                 assume cs:_text
.text:00401000                 ;org 401000h
.text:00401000                 assume es:nothing, ss:nothing, ds:_data, fs:nothing, gs:nothing
.text:00401000 ; const struct _EXCEPTION_POINTERS ExceptionInfo
.text:00401000 ExceptionInfo   _EXCEPTION_POINTERS <offset dword_404040, offset dword_404090>
.text:00401000                                         ; DATA XREF: ___report_gsfailure+102↓o
.text:00401008 ; const TIMEINFO::`vftable'
.text:00401008 ??_7TIMEINFO@@6B@ dd offset ??_ETIMEINFO@@UAEPAXI@Z
.text:00401008                                         ; DATA XREF: REPLACE::ReplaceFiles(FSN_DIRECTORY *)+166↓o
.text:00401008                                         ; TIMEINFO::`vector deleting destructor'(uint)
.text:0040100C                 dd offset ?Compare@OBJECT@@UBEJPBV1@@Z_0 ; OBJECT::Compare(OBJECT const *)
.text:00401010                 dd offset ?DebugDump@OBJECT@@UBEXE@Z_0 ; OBJECT::DebugDump(uchar)
.text:00401014 ; const REPLACE::`vftable'
.text:00401014 ??_7REPLACE@@6B@ dd offset ??_GREPLACE@@UAEPAXI@Z
.text:00401014                                         ; DATA XREF: REPLACE::REPLACE(void)+11↓o
.text:00401014                                         ; REPLACE::~REPLACE(void)+5↓o
.text:00401014                                         ; REPLACE::`scalar deleting destructor'(uint)
.text:00401018                 dd offset ?Compare@OBJECT@@UBEJPBV1@@Z_0 ; OBJECT::Compare(OBJECT const *)
.text:0040101C                 dd offset ?DebugDump@OBJECT@@UBEXE@Z_0 ; OBJECT::DebugDump(uchar)
.text:00401020                 dd offset ?DisplayMessage@PROGRAM@@UBAEKW4MESSAGE_TYPE@@PADZZ_0 ; PROGRAM::DisplayMessage(ulong,MESSAGE_TYPE,char *,...)
.text:00401024                 dd offset ?DisplayMessage@PROGRAM@@UBEEKW4MESSAGE_TYPE@@@Z_0 ; PROGRAM::DisplayMessage(ulong,MESSAGE_TYPE)
.text:00401028                 dd offset ?Fatal@PROGRAM@@UBAXKKPADZZ_0 ; PROGRAM::Fatal(ulong,ulong,char *,...)
.text:0040102C                 dd offset ?Fatal@PROGRAM@@UBEXXZ_0 ; PROGRAM::Fatal(void)
.text:00401030                 dd offset ?GetStandardInput@PROGRAM@@UAEPAVSTREAM@@XZ_0 ; PROGRAM::GetStandardInput(void)
.text:00401034                 dd offset ?GetStandardOutput@PROGRAM@@UAEPAVSTREAM@@XZ_0 ; PROGRAM::GetStandardOutput(void)
.text:00401038                 dd offset ?GetStandardError@PROGRAM@@UAEPAVSTREAM@@XZ_0 ; PROGRAM::GetStandardError(void)
.text:0040103C                 dd offset ?Usage@PROGRAM@@UBEXXZ_0 ; PROGRAM::Usage(void)
.text:00401040                 dd offset ?ValidateVersion@PROGRAM@@UBEXKK@Z_0 ; PROGRAM::ValidateVersion(ulong,ulong)
.text:00401044                 align 8
.text:00401048 __load_config_used dd 98h               ; Size
.text:0040104C                 dd 0                    ; Time stamp
.text:00401050                 dw 2 dup(0)             ; Version: 0.0
.text:00401054                 dd 0                    ; GlobalFlagsClear
.text:00401058                 dd 0                    ; GlobalFlagsSet
.text:0040105C                 dd 0                    ; CriticalSectionDefaultTimeout
.text:00401060                 dd 0                    ; DeCommitFreeBlockThreshold
.text:00401064                 dd 0                    ; DeCommitTotalFreeThreshold
.text:00401068                 dd 0                    ; LockPrefixTable
.text:0040106C                 dd 0                    ; MaximumAllocationSize
.text:00401070                 dd 0                    ; VirtualMemoryThreshold
.text:00401074                 dd 0                    ; ProcessAffinityMask
.text:00401078                 dd 0                    ; ProcessHeapFlags
.text:0040107C                 dw 0                    ; CSDVersion
.text:0040107E                 dw 0                    ; Reserved1
.text:00401080                 dd 0                    ; EditList
.text:00401084                 dd offset ___security_cookie ; SecurityCookie
.text:00401088                 dd offset ___safe_se_handler_table ; SEHandlerTable
.text:0040108C                 dd 1                    ; SEHandlerCount
.text:00401090                 dd offset ___guard_check_icall_fptr ; GuardCFCheckFunctionPointer
.text:00401094                 dd 0                    ; GuardCFDispatchFunctionPointer
.text:00401098                 dd offset ___guard_fids_table ; GuardCFFunctionTable
.text:0040109C                 dd 17h                  ; GuardCFFunctionCount
.text:004010A0                 dd 17500h               ; GuardFlags
.text:004010A4                 dd 0Fh dup(0)
.text:004010E0 ; const _PVFV __xc_a
.text:004010E0 ___xc_a         dd 0                    ; DATA XREF: __wmainCRTStartup+A1↓o
.text:004010E4                 dd offset pre_cpp_init
.text:004010E8 ; const _PVFV __xc_z
.text:004010E8 ___xc_z         dd 0                    ; DATA XREF: __wmainCRTStartup+9C↓o
.text:004010EC ; const _PIFV __xi_a
.text:004010EC ___xi_a         dd 0                    ; DATA XREF: __wmainCRTStartup+6D↓o
.text:004010F0                 dd offset pre_c_init
.text:004010F4                 dd offset ___CxxSetUnhandledExceptionFilter
.text:004010F8 ; const _PIFV __xi_z
.text:004010F8 ___xi_z         dd 0                    ; DATA XREF: __wmainCRTStartup+68↓o
.text:004010FC ___guard_fids_table dd rva ??_GREPLACE@@UAEPAXI@Z
.text:004010FC                                         ; DATA XREF: .text:00401098↑o
.text:004010FC                                         ; REPLACE::`scalar deleting destructor'(uint)
.text:00401100                 dd rva ?Replacer@REPLACE@@CGEPAXPAVFSNODE@@PAVPATH@@@Z ; REPLACE::Replacer(void *,FSNODE *,PATH *)
.text:00401104                 dd rva ??_ETIMEINFO@@UAEPAXI@Z ; TIMEINFO::`vector deleting destructor'(uint)
.text:00401108                 dd rva pre_c_init
.text:0040110C                 dd rva pre_cpp_init
.text:00401110                 dd rva _mainCRTStartup
.text:00401114                 dd rva @__security_check_cookie@4 ; __security_check_cookie(x)
.text:00401118                 dd rva ?__CxxUnhandledExceptionFilter@@YGJPAU_EXCEPTION_POINTERS@@@Z ; __CxxUnhandledExceptionFilter(_EXCEPTION_POINTERS *)
.text:0040111C                 dd rva ___CxxSetUnhandledExceptionFilter
.text:00401120                 dd rva __setargv
.text:00401124                 dd rva __except_handler4
.text:00401128                 dd rva @_guard_check_icall_nop@4 ; _guard_check_icall_nop(x)
.text:0040112C                 dd rva ?DebugDump@OBJECT@@UBEXE@Z_0 ; OBJECT::DebugDump(uchar)
.text:00401130                 dd rva ?Compare@OBJECT@@UBEJPBV1@@Z_0 ; OBJECT::Compare(OBJECT const *)
.text:00401134                 dd rva ?ValidateVersion@PROGRAM@@UBEXKK@Z_0 ; PROGRAM::ValidateVersion(ulong,ulong)
.text:00401138                 dd rva ?Usage@PROGRAM@@UBEXXZ_0 ; PROGRAM::Usage(void)
.text:0040113C                 dd rva ?GetStandardError@PROGRAM@@UAEPAVSTREAM@@XZ_0 ; PROGRAM::GetStandardError(void)
.text:00401140                 dd rva ?GetStandardOutput@PROGRAM@@UAEPAVSTREAM@@XZ_0 ; PROGRAM::GetStandardOutput(void)
.text:00401144                 dd rva ?GetStandardInput@PROGRAM@@UAEPAVSTREAM@@XZ_0 ; PROGRAM::GetStandardInput(void)
.text:00401148                 dd rva ?Fatal@PROGRAM@@UBEXXZ_0 ; PROGRAM::Fatal(void)
.text:0040114C                 dd rva ?Fatal@PROGRAM@@UBAXKKPADZZ_0 ; PROGRAM::Fatal(ulong,ulong,char *,...)
.text:00401150                 dd rva ?DisplayMessage@PROGRAM@@UBEEKW4MESSAGE_TYPE@@@Z_0 ; PROGRAM::DisplayMessage(ulong,MESSAGE_TYPE)
.text:00401154                 dd rva ?DisplayMessage@PROGRAM@@UBAEKW4MESSAGE_TYPE@@PADZZ_0 ; PROGRAM::DisplayMessage(ulong,MESSAGE_TYPE,char *,...)
.text:00401158                 align 10h
.text:00401160 aA:                                     ; DATA XREF: REPLACE::SetArguments(void)+19↓o
.text:00401160                 text "UTF-16LE", '/A',0
.text:00401166                 align 4
.text:00401168 aP:                                     ; DATA XREF: REPLACE::SetArguments(void)+35↓o
.text:00401168                 text "UTF-16LE", '/P',0
.text:0040116E                 align 10h
.text:00401170 aR:                                     ; DATA XREF: REPLACE::SetArguments(void)+4F↓o
.text:00401170                 text "UTF-16LE", '/R',0
.text:00401176                 align 4
.text:00401178 aS:                                     ; DATA XREF: REPLACE::SetArguments(void)+69↓o
.text:00401178                 text "UTF-16LE", '/S',0
.text:0040117E                 align 10h
.text:00401180 aU:                                     ; DATA XREF: REPLACE::SetArguments(void)+83↓o
.text:00401180                 text "UTF-16LE", '/U',0
.text:00401186                 align 4
.text:00401188 aW_0:                                   ; DATA XREF: REPLACE::SetArguments(void)+9D↓o
.text:00401188                 text "UTF-16LE", '/W',0
.text:0040118E                 align 10h
.text:00401190 asc_401190:                             ; DATA XREF: REPLACE::SetArguments(void)+B7↓o
.text:00401190                 text "UTF-16LE", '/?',0
.text:00401196                 align 4
.text:00401198 asc_401198:                             ; DATA XREF: REPLACE::SetArguments(void)+D1↓o
.text:00401198                 text "UTF-16LE", '/-',0
.text:0040119E                 align 10h
.text:004011A0 aAprsuw:                                ; DATA XREF: REPLACE::SetArguments(void)+EB↓o
.text:004011A0                 text "UTF-16LE", '/APRSUW?',0
.text:004011B2                 align 4
.text:004011B4 asc_4011B4      db '*',0                ; DATA XREF: REPLACE::GetArgumentsCmd(void)+5A↓o
.text:004011B6                 align 4
.text:004011B8 asc_4011B8      db ' /',9,0             ; DATA XREF: REPLACE::ParseArguments(WSTRING *,ARRAY *)+85↓o
.text:004011BC asc_4011BC      db '"',0                ; DATA XREF: REPLACE::ParseArguments(WSTRING *,ARRAY *)+98↓o
.text:004011BE                 align 10h
.text:004011C0 asc_4011C0:                             ; DATA XREF: REPLACE::CheckArgumentConsistency(void)+9F↓o
.text:004011C0                 text "UTF-16LE", '.',0
.text:004011C4 dword_4011C4    dd 0                    ; DATA XREF: REPLACE::DisplayMessageAndExit(ulong,WSTRING const *,ulong):loc_401E07↓o
.text:004011C8 aW              db '%W',0               ; DATA XREF: REPLACE::DisplayMessageAndExit(ulong,WSTRING const *,ulong)+33↓o
.text:004011C8                                         ; REPLACE::AddFiles(FSN_DIRECTORY *)+E6↓o ...
.text:004011CB                 align 4
.text:004011CC aD              db '%d',0               ; DATA XREF: REPLACE::DisplayMessageAndExit(ulong,WSTRING const *,ulong)+7F↓o
.text:004011CC                                         ; REPLACE::DisplayMessageAndExit(ulong,WSTRING const *,ulong)+B1↓o ...
.text:004011CF                 align 10h
.text:004011D0 ; Debug Directory entries
.text:004011D0                 dd 0                    ; Characteristics
.text:004011D4                 dd 238A3149h            ; TimeDateStamp: Wed Nov 23 03:32:25 1988
.text:004011D8                 dw 0                    ; MajorVersion
.text:004011DA                 dw 0                    ; MinorVersion
.text:004011DC                 dd 2                    ; Type: IMAGE_DEBUG_TYPE_CODEVIEW
.text:004011E0                 dd 24h                  ; SizeOfData
.text:004011E4                 dd rva asc_401234       ; AddressOfRawData
.text:004011E8                 dd 634h                 ; PointerToRawData
.text:004011EC                 dd 0                    ; Characteristics
.text:004011F0                 dd 238A3149h            ; TimeDateStamp: Wed Nov 23 03:32:25 1988
.text:004011F4                 dw 0                    ; MajorVersion
.text:004011F6                 dw 0                    ; MinorVersion
.text:004011F8                 dd 0Dh                  ; Type: IMAGE_DEBUG_TYPE_POGO
.text:004011FC                 dd 1D8h                 ; SizeOfData
.text:00401200                 dd rva aGctl            ; AddressOfRawData
.text:00401204                 dd 658h                 ; PointerToRawData
.text:00401208                 dd 0                    ; Characteristics
.text:0040120C                 dd 238A3149h            ; TimeDateStamp: Wed Nov 23 03:32:25 1988
.text:00401210                 dw 0                    ; MajorVersion
.text:00401212                 dw 0                    ; MinorVersion
.text:00401214                 dd 10h                  ; Type: IMAGE_DEBUG_TYPE_REPRO
.text:00401218                 dd 0                    ; SizeOfData
.text:0040121C                 dd 0                    ; AddressOfRawData
.text:00401220                 dd 0                    ; PointerToRawData
.text:00401224                 align 10h
.text:00401230 ___safe_se_handler_table dd rva __except_handler4
.text:00401230                                         ; DATA XREF: .text:00401088↑o
.text:00401234 ; Debug information (IMAGE_DEBUG_TYPE_CODEVIEW)
.text:00401234 asc_401234      db 'RSDS'               ; DATA XREF: .text:004011E4↑o
.text:00401234                                         ; CV signature
.text:00401238                 dd 4B41F60h             ; Data1 ; GUID
.text:00401238                 dw 430h                 ; Data2
.text:00401238                 dw 8D14h                ; Data3
.text:00401238                 db 0B0h, 0D7h, 40h, 0FFh, 82h, 1, 0F5h, 67h; Data4
.text:00401248                 dd 1                    ; Age
.text:0040124C                 text "UTF-8", 'replace.pdb',0 ; PdbFileName
.text:00401258 ; Debug information (IMAGE_DEBUG_TYPE_POGO)
.text:00401258 aGctl           db 'GCTL',0             ; DATA XREF: .text:00401200↑o
.text:0040125D                 db 10h, 2 dup(0)
.text:00401260                 dd 0E0h, 6164722Eh, 62246174h, 6372h, 10E0h, 4, 5452432Eh
.text:00401260                 dd 41435824h, 0
.text:00401284                 dd 10E4h, 4, 5452432Eh, 41435824h, 41h, 10E8h, 4, 5452432Eh
.text:00401284                 dd 5A435824h, 0
.text:004012AC                 dd 10ECh, 4, 5452432Eh, 41495824h, 0
.text:004012C0                 dd 10F0h, 4, 5452432Eh, 41495824h, 41h, 10F4h, 4, 5452432Eh
.text:004012C0                 dd 59495824h, 0
.text:004012E8                 dd 10F8h, 4, 5452432Eh, 5A495824h, 0
.text:004012FC                 dd 10FCh, 64h, 6966672Eh, 7364h, 1160h, 0D0h, 6164722Eh
.text:004012FC                 dd 6174h, 1230h, 4, 6164722Eh, 73246174h, 74616478h, 61h
.text:004012FC                 dd 1234h, 1FCh, 6164722Eh, 7A246174h, 62647A7Ah, 67h, 1430h
.text:004012FC                 dd 2188h, 7865742Eh, 6E6D2474h, 0
.text:00401360                 dd 35B8h, 5Ch, 6164782Eh, 78246174h, 0
.text:00401374                 dd 4000h, 10h, 7461642Eh, 61h, 4010h, 38Ch, 7373622Eh
.text:00401374                 dd 0
.text:00401394                 dd 5000h, 1A8h, 6164692Eh, 35246174h, 0
.text:004013A8                 dd 51A8h, 4, 6330302Eh, 6766h, 51ACh, 50h, 6164692Eh, 32246174h
.text:004013A8                 dd 0
.text:004013CC                 dd 51FCh, 14h, 6164692Eh, 33246174h, 0
.text:004013E0                 dd 5210h, 1A8h, 6164692Eh, 34246174h, 0
.text:004013F4                 dd 53B8h, 0C5Ch, 6164692Eh, 36246174h, 0
.text:00401408                 dd 7000h, 0F0h, 7273722Eh, 31302463h, 0
.text:0040141C                 dd 70F0h, 700h, 7273722Eh, 32302463h, 0
.text:00401430
.text:00401430 ; =============== S U B R O U T I N E =======================================
.text:00401430
.text:00401430
.text:00401430 ; const struct WSTRING *__thiscall PATH::GetPathString(PATH *__hidden this)
.text:00401430 ?GetPathString@PATH@@QBEPBVWSTRING@@XZ proc near
.text:00401430                                         ; CODE XREF: REPLACE::CheckArgumentConsistency(void)+E1↓p
.text:00401430                                         ; REPLACE::DoReplace(void)+206↓p ...
.text:00401430                 lea     eax, [ecx+210h]
.text:00401436                 retn
.text:00401436 ?GetPathString@PATH@@QBEPBVWSTRING@@XZ endp
.text:00401436
.text:00401437
.text:00401437 ; =============== S U B R O U T I N E =======================================
.text:00401437
.text:00401437 ; Attributes: bp-based frame info_from_lumina
.text:00401437
.text:00401437 ; void __thiscall REPLACE::SetArguments(REPLACE *__hidden this)
.text:00401437 ?SetArguments@REPLACE@@AAEXXZ proc near ; CODE XREF: _main+7C↓p
.text:00401437
.text:00401437 var_4           = dword ptr -4
.text:00401437
.text:00401437                 mov     edi, edi
.text:00401439                 push    ebp
.text:0040143A                 mov     ebp, esp
.text:0040143C                 push    ecx
.text:0040143D                 mov     eax, ___security_cookie
.text:00401442                 xor     eax, ebp
.text:00401444                 mov     [ebp+var_4], eax
.text:00401447                 push    ebx
.text:00401448                 push    esi
.text:00401449                 push    edi
.text:0040144A                 mov     esi, ecx
.text:0040144C                 or      edi, 0FFFFFFFFh
.text:0040144F                 push    edi
.text:00401450                 push    offset aA       ; "/A"
.text:00401455                 lea     ecx, [esi+0C0h]
.text:0040145B                 call    ds:__imp_?Initialize@WSTRING@@QAEEPBGK@Z ; WSTRING::Initialize(ushort const *,ulong)
.text:00401461                 xor     ebx, ebx
.text:00401463                 test    al, al
.text:00401465                 jz      loc_40182D
.text:0040146B                 push    edi
.text:0040146C                 push    offset aP       ; "/P"
.text:00401471                 lea     ecx, [esi+0D8h]
.text:00401477                 call    ds:__imp_?Initialize@WSTRING@@QAEEPBGK@Z ; WSTRING::Initialize(ushort const *,ulong)
.text:0040147D                 test    al, al
.text:0040147F                 jz      loc_40182D
.text:00401485                 push    edi
.text:00401486                 push    offset aR       ; "/R"
.text:0040148B                 lea     ecx, [esi+0F0h]
.text:00401491                 call    ds:__imp_?Initialize@WSTRING@@QAEEPBGK@Z ; WSTRING::Initialize(ushort const *,ulong)
.text:00401497                 test    al, al
.text:00401499                 jz      loc_40182D
.text:0040149F                 push    edi
.text:004014A0                 push    offset aS       ; "/S"
.text:004014A5                 lea     ecx, [esi+108h]
.text:004014AB                 call    ds:__imp_?Initialize@WSTRING@@QAEEPBGK@Z ; WSTRING::Initialize(ushort const *,ulong)
.text:004014B1                 test    al, al
.text:004014B3                 jz      loc_40182D
.text:004014B9                 push    edi
.text:004014BA                 push    offset aU       ; "/U"
.text:004014BF                 lea     ecx, [esi+120h]
.text:004014C5                 call    ds:__imp_?Initialize@WSTRING@@QAEEPBGK@Z ; WSTRING::Initialize(ushort const *,ulong)
.text:004014CB                 test    al, al
.text:004014CD                 jz      loc_40182D
.text:004014D3                 push    edi
.text:004014D4                 push    offset aW_0     ; "/W"
.text:004014D9                 lea     ecx, [esi+138h]
.text:004014DF                 call    ds:__imp_?Initialize@WSTRING@@QAEEPBGK@Z ; WSTRING::Initialize(ushort const *,ulong)
.text:004014E5                 test    al, al
.text:004014E7                 jz      loc_40182D
.text:004014ED                 push    edi
.text:004014EE                 push    offset asc_401190 ; "/?"
.text:004014F3                 lea     ecx, [esi+150h]
.text:004014F9                 call    ds:__imp_?Initialize@WSTRING@@QAEEPBGK@Z ; WSTRING::Initialize(ushort const *,ulong)
.text:004014FF                 test    al, al
.text:00401501                 jz      loc_40182D
.text:00401507                 push    edi
.text:00401508                 push    offset asc_401198 ; "/-"
.text:0040150D                 lea     ecx, [esi+168h]
.text:00401513                 call    ds:__imp_?Initialize@WSTRING@@QAEEPBGK@Z ; WSTRING::Initialize(ushort const *,ulong)
.text:00401519                 test    al, al
.text:0040151B                 jz      loc_40182D
.text:00401521                 push    edi
.text:00401522                 push    offset aAprsuw  ; "/APRSUW?"
.text:00401527                 lea     ecx, [esi+180h]
.text:0040152D                 call    ds:__imp_?Initialize@WSTRING@@QAEEPBGK@Z ; WSTRING::Initialize(ushort const *,ulong)
.text:00401533                 test    al, al
.text:00401535                 jz      loc_40182D
.text:0040153B                 mov     eax, large fs:30h
.text:00401541                 push    30h ; '0'
.text:00401543                 pop     edi
.text:00401544                 push    edi             ; Size
.text:00401545                 push    ebx             ; Flags
.text:00401546                 push    dword ptr [eax+18h] ; HeapHandle
.text:00401549                 call    ds:__imp__RtlAllocateHeap@12 ; RtlAllocateHeap(x,x,x)
.text:0040154F                 test    eax, eax
.text:00401551                 jz      short loc_40155D
.text:00401553                 mov     ecx, eax
.text:00401555                 call    ds:__imp_??0PATH_ARGUMENT@@QAE@XZ ; PATH_ARGUMENT::PATH_ARGUMENT(void)
.text:0040155B                 jmp     short loc_40155F
.text:0040155D ; ---------------------------------------------------------------------------
.text:0040155D
.text:0040155D loc_40155D:                             ; CODE XREF: REPLACE::SetArguments(void)+11A↑j
.text:0040155D                 mov     eax, ebx
.text:0040155F
.text:0040155F loc_40155F:                             ; CODE XREF: REPLACE::SetArguments(void)+124↑j
.text:0040155F                 mov     ?SourcePathArgument@@3PAVPATH_ARGUMENT@@A, eax ; PATH_ARGUMENT * SourcePathArgument
.text:00401564                 test    eax, eax
.text:00401566                 jz      loc_40182D
.text:0040156C                 mov     eax, large fs:30h
.text:00401572                 push    edi             ; Size
.text:00401573                 push    ebx             ; Flags
.text:00401574                 push    dword ptr [eax+18h] ; HeapHandle
.text:00401577                 call    ds:__imp__RtlAllocateHeap@12 ; RtlAllocateHeap(x,x,x)
.text:0040157D                 test    eax, eax
.text:0040157F                 jz      short loc_40158B
.text:00401581                 mov     ecx, eax
.text:00401583                 call    ds:__imp_??0PATH_ARGUMENT@@QAE@XZ ; PATH_ARGUMENT::PATH_ARGUMENT(void)
.text:00401589                 jmp     short loc_40158D
.text:0040158B ; ---------------------------------------------------------------------------
.text:0040158B
.text:0040158B loc_40158B:                             ; CODE XREF: REPLACE::SetArguments(void)+148↑j
.text:0040158B                 mov     eax, ebx
.text:0040158D
.text:0040158D loc_40158D:                             ; CODE XREF: REPLACE::SetArguments(void)+152↑j
.text:0040158D                 mov     ?DestinationPathArgument@@3PAVPATH_ARGUMENT@@A, eax ; PATH_ARGUMENT * DestinationPathArgument
.text:00401592                 test    eax, eax
.text:00401594                 jz      loc_40182D
.text:0040159A                 mov     eax, large fs:30h
.text:004015A0                 push    edi             ; Size
.text:004015A1                 push    ebx             ; Flags
.text:004015A2                 push    dword ptr [eax+18h] ; HeapHandle
.text:004015A5                 call    ds:__imp__RtlAllocateHeap@12 ; RtlAllocateHeap(x,x,x)
.text:004015AB                 test    eax, eax
.text:004015AD                 jz      short loc_4015B9
.text:004015AF                 mov     ecx, eax
.text:004015B1                 call    ds:__imp_??0FLAG_ARGUMENT@@QAE@XZ ; FLAG_ARGUMENT::FLAG_ARGUMENT(void)
.text:004015B7                 jmp     short loc_4015BB
.text:004015B9 ; ---------------------------------------------------------------------------
.text:004015B9
.text:004015B9 loc_4015B9:                             ; CODE XREF: REPLACE::SetArguments(void)+176↑j
.text:004015B9                 mov     eax, ebx
.text:004015BB
.text:004015BB loc_4015BB:                             ; CODE XREF: REPLACE::SetArguments(void)+180↑j
.text:004015BB                 mov     ?AddArgument@@3PAVFLAG_ARGUMENT@@A, eax ; FLAG_ARGUMENT * AddArgument
.text:004015C0                 test    eax, eax
.text:004015C2                 jz      loc_40182D
.text:004015C8                 mov     eax, large fs:30h
.text:004015CE                 push    edi             ; Size
.text:004015CF                 push    ebx             ; Flags
.text:004015D0                 push    dword ptr [eax+18h] ; HeapHandle
.text:004015D3                 call    ds:__imp__RtlAllocateHeap@12 ; RtlAllocateHeap(x,x,x)
.text:004015D9                 test    eax, eax
.text:004015DB                 jz      short loc_4015E7
.text:004015DD                 mov     ecx, eax
.text:004015DF                 call    ds:__imp_??0FLAG_ARGUMENT@@QAE@XZ ; FLAG_ARGUMENT::FLAG_ARGUMENT(void)
.text:004015E5                 jmp     short loc_4015E9
.text:004015E7 ; ---------------------------------------------------------------------------
.text:004015E7
.text:004015E7 loc_4015E7:                             ; CODE XREF: REPLACE::SetArguments(void)+1A4↑j
.text:004015E7                 mov     eax, ebx
.text:004015E9
.text:004015E9 loc_4015E9:                             ; CODE XREF: REPLACE::SetArguments(void)+1AE↑j
.text:004015E9                 mov     ?PromptArgument@@3PAVFLAG_ARGUMENT@@A, eax ; FLAG_ARGUMENT * PromptArgument
.text:004015EE                 test    eax, eax
.text:004015F0                 jz      loc_40182D
.text:004015F6                 mov     eax, large fs:30h
.text:004015FC                 push    edi             ; Size
.text:004015FD                 push    ebx             ; Flags
.text:004015FE                 push    dword ptr [eax+18h] ; HeapHandle
.text:00401601                 call    ds:__imp__RtlAllocateHeap@12 ; RtlAllocateHeap(x,x,x)
.text:00401607                 test    eax, eax
.text:00401609                 jz      short loc_401615
.text:0040160B                 mov     ecx, eax
.text:0040160D                 call    ds:__imp_??0FLAG_ARGUMENT@@QAE@XZ ; FLAG_ARGUMENT::FLAG_ARGUMENT(void)
.text:00401613                 jmp     short loc_401617
.text:00401615 ; ---------------------------------------------------------------------------
.text:00401615
.text:00401615 loc_401615:                             ; CODE XREF: REPLACE::SetArguments(void)+1D2↑j
.text:00401615                 mov     eax, ebx
.text:00401617
.text:00401617 loc_401617:                             ; CODE XREF: REPLACE::SetArguments(void)+1DC↑j
.text:00401617                 mov     ?ReadOnlyArgument@@3PAVFLAG_ARGUMENT@@A, eax ; FLAG_ARGUMENT * ReadOnlyArgument
.text:0040161C                 test    eax, eax
.text:0040161E                 jz      loc_40182D
.text:00401624                 mov     eax, large fs:30h
.text:0040162A                 push    edi             ; Size
.text:0040162B                 push    ebx             ; Flags
.text:0040162C                 push    dword ptr [eax+18h] ; HeapHandle
.text:0040162F                 call    ds:__imp__RtlAllocateHeap@12 ; RtlAllocateHeap(x,x,x)
.text:00401635                 test    eax, eax
.text:00401637                 jz      short loc_401643
.text:00401639                 mov     ecx, eax
.text:0040163B                 call    ds:__imp_??0FLAG_ARGUMENT@@QAE@XZ ; FLAG_ARGUMENT::FLAG_ARGUMENT(void)
.text:00401641                 jmp     short loc_401645
.text:00401643 ; ---------------------------------------------------------------------------
.text:00401643
.text:00401643 loc_401643:                             ; CODE XREF: REPLACE::SetArguments(void)+200↑j
.text:00401643                 mov     eax, ebx
.text:00401645
.text:00401645 loc_401645:                             ; CODE XREF: REPLACE::SetArguments(void)+20A↑j
.text:00401645                 mov     ?SubdirArgument@@3PAVFLAG_ARGUMENT@@A, eax ; FLAG_ARGUMENT * SubdirArgument
.text:0040164A                 test    eax, eax
.text:0040164C                 jz      loc_40182D
.text:00401652                 mov     eax, large fs:30h
.text:00401658                 push    edi             ; Size
.text:00401659                 push    ebx             ; Flags
.text:0040165A                 push    dword ptr [eax+18h] ; HeapHandle
.text:0040165D                 call    ds:__imp__RtlAllocateHeap@12 ; RtlAllocateHeap(x,x,x)
.text:00401663                 test    eax, eax
.text:00401665                 jz      short loc_401671
.text:00401667                 mov     ecx, eax
.text:00401669                 call    ds:__imp_??0FLAG_ARGUMENT@@QAE@XZ ; FLAG_ARGUMENT::FLAG_ARGUMENT(void)
.text:0040166F                 jmp     short loc_401673
.text:00401671 ; ---------------------------------------------------------------------------
.text:00401671
.text:00401671 loc_401671:                             ; CODE XREF: REPLACE::SetArguments(void)+22E↑j
.text:00401671                 mov     eax, ebx
.text:00401673
.text:00401673 loc_401673:                             ; CODE XREF: REPLACE::SetArguments(void)+238↑j
.text:00401673                 mov     ?CompareTimeArgument@@3PAVFLAG_ARGUMENT@@A, eax ; FLAG_ARGUMENT * CompareTimeArgument
.text:00401678                 test    eax, eax
.text:0040167A                 jz      loc_40182D
.text:00401680                 mov     eax, large fs:30h
.text:00401686                 push    edi             ; Size
.text:00401687                 push    ebx             ; Flags
.text:00401688                 push    dword ptr [eax+18h] ; HeapHandle
.text:0040168B                 call    ds:__imp__RtlAllocateHeap@12 ; RtlAllocateHeap(x,x,x)
.text:00401691                 test    eax, eax
.text:00401693                 jz      short loc_40169F
.text:00401695                 mov     ecx, eax
.text:00401697                 call    ds:__imp_??0FLAG_ARGUMENT@@QAE@XZ ; FLAG_ARGUMENT::FLAG_ARGUMENT(void)
.text:0040169D                 jmp     short loc_4016A1
.text:0040169F ; ---------------------------------------------------------------------------
.text:0040169F
.text:0040169F loc_40169F:                             ; CODE XREF: REPLACE::SetArguments(void)+25C↑j
.text:0040169F                 mov     eax, ebx
.text:004016A1
.text:004016A1 loc_4016A1:                             ; CODE XREF: REPLACE::SetArguments(void)+266↑j
.text:004016A1                 mov     ?WaitArgument@@3PAVFLAG_ARGUMENT@@A, eax ; FLAG_ARGUMENT * WaitArgument
.text:004016A6                 test    eax, eax
.text:004016A8                 jz      loc_40182D
.text:004016AE                 mov     eax, large fs:30h
.text:004016B4                 push    edi             ; Size
.text:004016B5                 push    ebx             ; Flags
.text:004016B6                 push    dword ptr [eax+18h] ; HeapHandle
.text:004016B9                 call    ds:__imp__RtlAllocateHeap@12 ; RtlAllocateHeap(x,x,x)
.text:004016BF                 test    eax, eax
.text:004016C1                 jz      short loc_4016CD
.text:004016C3                 mov     ecx, eax
.text:004016C5                 call    ds:__imp_??0FLAG_ARGUMENT@@QAE@XZ ; FLAG_ARGUMENT::FLAG_ARGUMENT(void)
.text:004016CB                 jmp     short loc_4016CF
.text:004016CD ; ---------------------------------------------------------------------------
.text:004016CD
.text:004016CD loc_4016CD:                             ; CODE XREF: REPLACE::SetArguments(void)+28A↑j
.text:004016CD                 mov     eax, ebx
.text:004016CF
.text:004016CF loc_4016CF:                             ; CODE XREF: REPLACE::SetArguments(void)+294↑j
.text:004016CF                 mov     ?HelpArgument@@3PAVFLAG_ARGUMENT@@A, eax ; FLAG_ARGUMENT * HelpArgument
.text:004016D4                 test    eax, eax
.text:004016D6                 jz      loc_40182D
.text:004016DC                 mov     ecx, esi        ; this
.text:004016DE                 call    ?GetArgumentsCmd@REPLACE@@AAEXXZ ; REPLACE::GetArgumentsCmd(void)
.text:004016E3                 mov     ecx, esi        ; this
.text:004016E5                 call    ?CheckArgumentConsistency@REPLACE@@AAEXXZ ; REPLACE::CheckArgumentConsistency(void)
.text:004016EA                 mov     edi, ?SourcePathArgument@@3PAVPATH_ARGUMENT@@A ; PATH_ARGUMENT * SourcePathArgument
.text:004016F0                 test    edi, edi
.text:004016F2                 jz      short loc_401706
.text:004016F4                 mov     eax, [edi]
.text:004016F6                 push    1
.text:004016F8                 mov     esi, [eax]
.text:004016FA                 mov     ecx, esi
.text:004016FC                 call    ds:___guard_check_icall_fptr ; _guard_check_icall_nop(x)
.text:00401702                 mov     ecx, edi
.text:00401704                 call    esi
.text:00401706
.text:00401706 loc_401706:                             ; CODE XREF: REPLACE::SetArguments(void)+2BB↑j
.text:00401706                 mov     edi, ?DestinationPathArgument@@3PAVPATH_ARGUMENT@@A ; PATH_ARGUMENT * DestinationPathArgument
.text:0040170C                 mov     ?SourcePathArgument@@3PAVPATH_ARGUMENT@@A, ebx ; PATH_ARGUMENT * SourcePathArgument
.text:00401712                 test    edi, edi
.text:00401714                 jz      short loc_401728
.text:00401716                 mov     eax, [edi]
.text:00401718                 push    1
.text:0040171A                 mov     esi, [eax]
.text:0040171C                 mov     ecx, esi
.text:0040171E                 call    ds:___guard_check_icall_fptr ; _guard_check_icall_nop(x)
.text:00401724                 mov     ecx, edi
.text:00401726                 call    esi
.text:00401728
.text:00401728 loc_401728:                             ; CODE XREF: REPLACE::SetArguments(void)+2DD↑j
.text:00401728                 mov     edi, ?AddArgument@@3PAVFLAG_ARGUMENT@@A ; FLAG_ARGUMENT * AddArgument
.text:0040172E                 mov     ?DestinationPathArgument@@3PAVPATH_ARGUMENT@@A, ebx ; PATH_ARGUMENT * DestinationPathArgument
.text:00401734                 test    edi, edi
.text:00401736                 jz      short loc_40174A
.text:00401738                 mov     eax, [edi]
.text:0040173A                 push    1
.text:0040173C                 mov     esi, [eax]
.text:0040173E                 mov     ecx, esi
.text:00401740                 call    ds:___guard_check_icall_fptr ; _guard_check_icall_nop(x)
.text:00401746                 mov     ecx, edi
.text:00401748                 call    esi
.text:0040174A
.text:0040174A loc_40174A:                             ; CODE XREF: REPLACE::SetArguments(void)+2FF↑j
.text:0040174A                 mov     edi, ?PromptArgument@@3PAVFLAG_ARGUMENT@@A ; FLAG_ARGUMENT * PromptArgument
.text:00401750                 mov     ?AddArgument@@3PAVFLAG_ARGUMENT@@A, ebx ; FLAG_ARGUMENT * AddArgument
.text:00401756                 test    edi, edi
.text:00401758                 jz      short loc_40176C
.text:0040175A                 mov     eax, [edi]
.text:0040175C                 push    1
.text:0040175E                 mov     esi, [eax]
.text:00401760                 mov     ecx, esi
.text:00401762                 call    ds:___guard_check_icall_fptr ; _guard_check_icall_nop(x)
.text:00401768                 mov     ecx, edi
.text:0040176A                 call    esi
.text:0040176C
.text:0040176C loc_40176C:                             ; CODE XREF: REPLACE::SetArguments(void)+321↑j
.text:0040176C                 mov     edi, ?ReadOnlyArgument@@3PAVFLAG_ARGUMENT@@A ; FLAG_ARGUMENT * ReadOnlyArgument
.text:00401772                 mov     ?PromptArgument@@3PAVFLAG_ARGUMENT@@A, ebx ; FLAG_ARGUMENT * PromptArgument
.text:00401778                 test    edi, edi
.text:0040177A                 jz      short loc_40178E
.text:0040177C                 mov     eax, [edi]
.text:0040177E                 push    1
.text:00401780                 mov     esi, [eax]
.text:00401782                 mov     ecx, esi
.text:00401784                 call    ds:___guard_check_icall_fptr ; _guard_check_icall_nop(x)
.text:0040178A                 mov     ecx, edi
.text:0040178C                 call    esi
.text:0040178E
.text:0040178E loc_40178E:                             ; CODE XREF: REPLACE::SetArguments(void)+343↑j
.text:0040178E                 mov     edi, ?SubdirArgument@@3PAVFLAG_ARGUMENT@@A ; FLAG_ARGUMENT * SubdirArgument
.text:00401794                 mov     ?ReadOnlyArgument@@3PAVFLAG_ARGUMENT@@A, ebx ; FLAG_ARGUMENT * ReadOnlyArgument
.text:0040179A                 test    edi, edi
.text:0040179C                 jz      short loc_4017B0
.text:0040179E                 mov     eax, [edi]
.text:004017A0                 push    1
.text:004017A2                 mov     esi, [eax]
.text:004017A4                 mov     ecx, esi
.text:004017A6                 call    ds:___guard_check_icall_fptr ; _guard_check_icall_nop(x)
.text:004017AC                 mov     ecx, edi
.text:004017AE                 call    esi
.text:004017B0
.text:004017B0 loc_4017B0:                             ; CODE XREF: REPLACE::SetArguments(void)+365↑j
.text:004017B0                 mov     edi, ?CompareTimeArgument@@3PAVFLAG_ARGUMENT@@A ; FLAG_ARGUMENT * CompareTimeArgument
.text:004017B6                 mov     ?SubdirArgument@@3PAVFLAG_ARGUMENT@@A, ebx ; FLAG_ARGUMENT * SubdirArgument
.text:004017BC                 test    edi, edi
.text:004017BE                 jz      short loc_4017D2
.text:004017C0                 mov     eax, [edi]
.text:004017C2                 push    1
.text:004017C4                 mov     esi, [eax]
.text:004017C6                 mov     ecx, esi
.text:004017C8                 call    ds:___guard_check_icall_fptr ; _guard_check_icall_nop(x)
.text:004017CE                 mov     ecx, edi
.text:004017D0                 call    esi
.text:004017D2
.text:004017D2 loc_4017D2:                             ; CODE XREF: REPLACE::SetArguments(void)+387↑j
.text:004017D2                 mov     edi, ?WaitArgument@@3PAVFLAG_ARGUMENT@@A ; FLAG_ARGUMENT * WaitArgument
.text:004017D8                 mov     ?CompareTimeArgument@@3PAVFLAG_ARGUMENT@@A, ebx ; FLAG_ARGUMENT * CompareTimeArgument
.text:004017DE                 test    edi, edi
.text:004017E0                 jz      short loc_4017F4
.text:004017E2                 mov     eax, [edi]
.text:004017E4                 push    1
.text:004017E6                 mov     esi, [eax]
.text:004017E8                 mov     ecx, esi
.text:004017EA                 call    ds:___guard_check_icall_fptr ; _guard_check_icall_nop(x)
.text:004017F0                 mov     ecx, edi
.text:004017F2                 call    esi
.text:004017F4
.text:004017F4 loc_4017F4:                             ; CODE XREF: REPLACE::SetArguments(void)+3A9↑j
.text:004017F4                 mov     edi, ?HelpArgument@@3PAVFLAG_ARGUMENT@@A ; FLAG_ARGUMENT * HelpArgument
.text:004017FA                 mov     ?WaitArgument@@3PAVFLAG_ARGUMENT@@A, ebx ; FLAG_ARGUMENT * WaitArgument
.text:00401800                 test    edi, edi
.text:00401802                 jz      short loc_401816
.text:00401804                 mov     eax, [edi]
.text:00401806                 push    1
.text:00401808                 mov     esi, [eax]
.text:0040180A                 mov     ecx, esi
.text:0040180C                 call    ds:___guard_check_icall_fptr ; _guard_check_icall_nop(x)
.text:00401812                 mov     ecx, edi
.text:00401814                 call    esi
.text:00401816
.text:00401816 loc_401816:                             ; CODE XREF: REPLACE::SetArguments(void)+3CB↑j
.text:00401816                 mov     ecx, [ebp+var_4]
.text:00401819                 pop     edi
.text:0040181A                 pop     esi
.text:0040181B                 mov     ?HelpArgument@@3PAVFLAG_ARGUMENT@@A, ebx ; FLAG_ARGUMENT * HelpArgument
.text:00401821                 xor     ecx, ebp        ; StackCookie
.text:00401823                 pop     ebx
.text:00401824                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text:00401829                 mov     esp, ebp
.text:0040182B                 pop     ebp
.text:0040182C                 retn
.text:0040182D ; ---------------------------------------------------------------------------
.text:0040182D
.text:0040182D loc_40182D:                             ; CODE XREF: REPLACE::SetArguments(void)+2E↑j
.text:0040182D                                         ; REPLACE::SetArguments(void)+48↑j ...
.text:0040182D                 push    8               ; unsigned int
.text:0040182F                 push    ebx             ; struct WSTRING *
.text:00401830                 push    5241h           ; unsigned int
.text:00401835                 mov     ecx, esi        ; this
.text:00401837                 call    ?DisplayMessageAndExit@REPLACE@@AAEXKPBVWSTRING@@K@Z ; REPLACE::DisplayMessageAndExit(ulong,WSTRING const *,ulong)
.text:00401837 ?SetArguments@REPLACE@@AAEXXZ endp
.text:00401837
.text:00401837 ; ---------------------------------------------------------------------------
.text:0040183C                 db 0CCh
.text:0040183D
.text:0040183D ; =============== S U B R O U T I N E =======================================
.text:0040183D
.text:0040183D ; Attributes: bp-based frame info_from_lumina
.text:0040183D
.text:0040183D ; void __thiscall REPLACE::GetArgumentsCmd(REPLACE *__hidden this)
.text:0040183D ?GetArgumentsCmd@REPLACE@@AAEXXZ proc near
.text:0040183D                                         ; CODE XREF: REPLACE::SetArguments(void)+2A7↑p
.text:0040183D
.text:0040183D var_60          = byte ptr -60h
.text:0040183D var_30          = byte ptr -30h
.text:0040183D var_18          = byte ptr -18h
.text:0040183D
.text:0040183D                 mov     edi, edi
.text:0040183F                 push    ebp
.text:00401840                 mov     ebp, esp
.text:00401842                 sub     esp, 64h
.text:00401845                 push    ebx
.text:00401846                 push    esi
.text:00401847                 mov     esi, ecx
.text:00401849                 lea     ecx, [ebp+var_18]
.text:0040184C                 push    edi
.text:0040184D                 call    ds:__imp_??0ARRAY@@QAE@XZ ; ARRAY::ARRAY(void)
.text:00401853                 lea     ecx, [ebp+var_60]
.text:00401856                 call    ds:__imp_??0PATH_ARGUMENT@@QAE@XZ ; PATH_ARGUMENT::PATH_ARGUMENT(void)
.text:0040185C                 lea     ecx, [ebp+var_30]
.text:0040185F                 call    ds:__imp_??0DSTRING@@QAE@XZ ; DSTRING::DSTRING(void)
.text:00401865                 push    0FFFFFFFFh
.text:00401867                 call    ds:__imp__GetCommandLineW@0 ; GetCommandLineW()
.text:0040186D                 push    eax
.text:0040186E                 lea     ecx, [ebp+var_30]
.text:00401871                 call    ds:__imp_?Initialize@WSTRING@@QAEEPBGK@Z ; WSTRING::Initialize(ushort const *,ulong)
.text:00401877                 xor     edi, edi
.text:00401879                 test    al, al
.text:0040187B                 jz      loc_401B6E
.text:00401881                 push    0Ah
.text:00401883                 push    0Ah
.text:00401885                 lea     ecx, [ebp+var_18]
.text:00401888                 call    ds:__imp_?Initialize@ARRAY@@QAEEKK@Z ; ARRAY::Initialize(ulong,ulong)
.text:0040188E                 test    al, al
.text:00401890                 jz      loc_401B6E
.text:00401896                 push    edi
.text:00401897                 mov     ebx, offset asc_4011B4 ; "*"
.text:0040189C                 lea     ecx, [ebp+var_60]
.text:0040189F                 push    ebx
.text:004018A0                 call    ds:__imp_?Initialize@PATH_ARGUMENT@@QAEEPADE@Z ; PATH_ARGUMENT::Initialize(char *,uchar)
.text:004018A6                 test    al, al
.text:004018A8                 jz      loc_401B6E
.text:004018AE                 mov     ecx, ?SourcePathArgument@@3PAVPATH_ARGUMENT@@A ; PATH_ARGUMENT * SourcePathArgument
.text:004018B4                 push    edi
.text:004018B5                 push    ebx
.text:004018B6                 call    ds:__imp_?Initialize@PATH_ARGUMENT@@QAEEPADE@Z ; PATH_ARGUMENT::Initialize(char *,uchar)
.text:004018BC                 test    al, al
.text:004018BE                 jz      loc_401B6E
.text:004018C4                 mov     ecx, ?DestinationPathArgument@@3PAVPATH_ARGUMENT@@A ; PATH_ARGUMENT * DestinationPathArgument
.text:004018CA                 push    1
.text:004018CC                 push    ebx
.text:004018CD                 call    ds:__imp_?Initialize@PATH_ARGUMENT@@QAEEPADE@Z ; PATH_ARGUMENT::Initialize(char *,uchar)
.text:004018D3                 test    al, al
.text:004018D5                 jz      loc_401B6E
.text:004018DB                 mov     ecx, ?AddArgument@@3PAVFLAG_ARGUMENT@@A ; FLAG_ARGUMENT * AddArgument
.text:004018E1                 lea     eax, [esi+0C0h]
.text:004018E7                 push    eax
.text:004018E8                 call    ds:__imp_?Initialize@FLAG_ARGUMENT@@QAEEPAVWSTRING@@@Z ; FLAG_ARGUMENT::Initialize(WSTRING *)
.text:004018EE                 test    al, al
.text:004018F0                 jz      loc_401B6E
.text:004018F6                 mov     ecx, ?PromptArgument@@3PAVFLAG_ARGUMENT@@A ; FLAG_ARGUMENT * PromptArgument
.text:004018FC                 lea     eax, [esi+0D8h]
.text:00401902                 push    eax
.text:00401903                 call    ds:__imp_?Initialize@FLAG_ARGUMENT@@QAEEPAVWSTRING@@@Z ; FLAG_ARGUMENT::Initialize(WSTRING *)
.text:00401909                 test    al, al
.text:0040190B                 jz      loc_401B6E
.text:00401911                 mov     ecx, ?ReadOnlyArgument@@3PAVFLAG_ARGUMENT@@A ; FLAG_ARGUMENT * ReadOnlyArgument
.text:00401917                 lea     eax, [esi+0F0h]
.text:0040191D                 push    eax
.text:0040191E                 call    ds:__imp_?Initialize@FLAG_ARGUMENT@@QAEEPAVWSTRING@@@Z ; FLAG_ARGUMENT::Initialize(WSTRING *)
.text:00401924                 test    al, al
.text:00401926                 jz      loc_401B6E
.text:0040192C                 mov     ecx, ?SubdirArgument@@3PAVFLAG_ARGUMENT@@A ; FLAG_ARGUMENT * SubdirArgument
.text:00401932                 lea     eax, [esi+108h]
.text:00401938                 push    eax
.text:00401939                 call    ds:__imp_?Initialize@FLAG_ARGUMENT@@QAEEPAVWSTRING@@@Z ; FLAG_ARGUMENT::Initialize(WSTRING *)
.text:0040193F                 test    al, al
.text:00401941                 jz      loc_401B6E
.text:00401947                 mov     ecx, ?CompareTimeArgument@@3PAVFLAG_ARGUMENT@@A ; FLAG_ARGUMENT * CompareTimeArgument
.text:0040194D                 lea     eax, [esi+120h]
.text:00401953                 push    eax
.text:00401954                 call    ds:__imp_?Initialize@FLAG_ARGUMENT@@QAEEPAVWSTRING@@@Z ; FLAG_ARGUMENT::Initialize(WSTRING *)
.text:0040195A                 test    al, al
.text:0040195C                 jz      loc_401B6E
.text:00401962                 mov     ecx, ?WaitArgument@@3PAVFLAG_ARGUMENT@@A ; FLAG_ARGUMENT * WaitArgument
.text:00401968                 lea     eax, [esi+138h]
.text:0040196E                 push    eax
.text:0040196F                 call    ds:__imp_?Initialize@FLAG_ARGUMENT@@QAEEPAVWSTRING@@@Z ; FLAG_ARGUMENT::Initialize(WSTRING *)
.text:00401975                 test    al, al
.text:00401977                 jz      loc_401B6E
.text:0040197D                 mov     ecx, ?HelpArgument@@3PAVFLAG_ARGUMENT@@A ; FLAG_ARGUMENT * HelpArgument
.text:00401983                 lea     eax, [esi+150h]
.text:00401989                 push    eax
.text:0040198A                 call    ds:__imp_?Initialize@FLAG_ARGUMENT@@QAEEPAVWSTRING@@@Z ; FLAG_ARGUMENT::Initialize(WSTRING *)
.text:00401990                 test    al, al
.text:00401992                 jz      loc_401B6E
.text:00401998                 lea     eax, [ebp+var_60]
.text:0040199B                 push    eax
.text:0040199C                 lea     ecx, [ebp+var_18]
.text:0040199F                 call    ds:__imp_?Put@ARRAY@@UAEEPAVOBJECT@@@Z ; ARRAY::Put(OBJECT *)
.text:004019A5                 test    al, al
.text:004019A7                 jz      loc_401B6E
.text:004019AD                 push    ?AddArgument@@3PAVFLAG_ARGUMENT@@A ; FLAG_ARGUMENT * AddArgument
.text:004019B3                 lea     ecx, [ebp+var_18]
.text:004019B6                 call    ds:__imp_?Put@ARRAY@@UAEEPAVOBJECT@@@Z ; ARRAY::Put(OBJECT *)
.text:004019BC                 test    al, al
.text:004019BE                 jz      loc_401B6E
.text:004019C4                 push    ?PromptArgument@@3PAVFLAG_ARGUMENT@@A ; FLAG_ARGUMENT * PromptArgument
.text:004019CA                 lea     ecx, [ebp+var_18]
.text:004019CD                 call    ds:__imp_?Put@ARRAY@@UAEEPAVOBJECT@@@Z ; ARRAY::Put(OBJECT *)
.text:004019D3                 test    al, al
.text:004019D5                 jz      loc_401B6E
.text:004019DB                 push    ?ReadOnlyArgument@@3PAVFLAG_ARGUMENT@@A ; FLAG_ARGUMENT * ReadOnlyArgument
.text:004019E1                 lea     ecx, [ebp+var_18]
.text:004019E4                 call    ds:__imp_?Put@ARRAY@@UAEEPAVOBJECT@@@Z ; ARRAY::Put(OBJECT *)
.text:004019EA                 test    al, al
.text:004019EC                 jz      loc_401B6E
.text:004019F2                 push    ?SubdirArgument@@3PAVFLAG_ARGUMENT@@A ; FLAG_ARGUMENT * SubdirArgument
.text:004019F8                 lea     ecx, [ebp+var_18]
.text:004019FB                 call    ds:__imp_?Put@ARRAY@@UAEEPAVOBJECT@@@Z ; ARRAY::Put(OBJECT *)
.text:00401A01                 test    al, al
.text:00401A03                 jz      loc_401B6E
.text:00401A09                 push    ?CompareTimeArgument@@3PAVFLAG_ARGUMENT@@A ; FLAG_ARGUMENT * CompareTimeArgument
.text:00401A0F                 lea     ecx, [ebp+var_18]
.text:00401A12                 call    ds:__imp_?Put@ARRAY@@UAEEPAVOBJECT@@@Z ; ARRAY::Put(OBJECT *)
.text:00401A18                 test    al, al
.text:00401A1A                 jz      loc_401B6E
.text:00401A20                 push    ?WaitArgument@@3PAVFLAG_ARGUMENT@@A ; FLAG_ARGUMENT * WaitArgument
.text:00401A26                 lea     ecx, [ebp+var_18]
.text:00401A29                 call    ds:__imp_?Put@ARRAY@@UAEEPAVOBJECT@@@Z ; ARRAY::Put(OBJECT *)
.text:00401A2F                 test    al, al
.text:00401A31                 jz      loc_401B6E
.text:00401A37                 push    ?HelpArgument@@3PAVFLAG_ARGUMENT@@A ; FLAG_ARGUMENT * HelpArgument
.text:00401A3D                 lea     ecx, [ebp+var_18]
.text:00401A40                 call    ds:__imp_?Put@ARRAY@@UAEEPAVOBJECT@@@Z ; ARRAY::Put(OBJECT *)
.text:00401A46                 test    al, al
.text:00401A48                 jz      loc_401B6E
.text:00401A4E                 push    ?SourcePathArgument@@3PAVPATH_ARGUMENT@@A ; PATH_ARGUMENT * SourcePathArgument
.text:00401A54                 lea     ecx, [ebp+var_18]
.text:00401A57                 call    ds:__imp_?Put@ARRAY@@UAEEPAVOBJECT@@@Z ; ARRAY::Put(OBJECT *)
.text:00401A5D                 test    al, al
.text:00401A5F                 jz      loc_401B6E
.text:00401A65                 push    ?DestinationPathArgument@@3PAVPATH_ARGUMENT@@A ; PATH_ARGUMENT * DestinationPathArgument
.text:00401A6B                 lea     ecx, [ebp+var_18]
.text:00401A6E                 call    ds:__imp_?Put@ARRAY@@UAEEPAVOBJECT@@@Z ; ARRAY::Put(OBJECT *)
.text:00401A74                 test    al, al
.text:00401A76                 jz      loc_401B6E
.text:00401A7C                 lea     eax, [ebp+var_18]
.text:00401A7F                 mov     ecx, esi        ; this
.text:00401A81                 push    eax             ; struct ARRAY *
.text:00401A82                 lea     eax, [ebp+var_30]
.text:00401A85                 push    eax             ; struct WSTRING *
.text:00401A86                 call    ?ParseArguments@REPLACE@@AAEXPAVWSTRING@@PAVARRAY@@@Z ; REPLACE::ParseArguments(WSTRING *,ARRAY *)
.text:00401A8B                 mov     eax, ?AddArgument@@3PAVFLAG_ARGUMENT@@A ; FLAG_ARGUMENT * AddArgument
.text:00401A90                 mov     ecx, ?SourcePathArgument@@3PAVPATH_ARGUMENT@@A ; PATH_ARGUMENT * SourcePathArgument
.text:00401A96                 mov     al, [eax+2Ch]
.text:00401A99                 mov     [esi+90h], al
.text:00401A9F                 mov     eax, ?PromptArgument@@3PAVFLAG_ARGUMENT@@A ; FLAG_ARGUMENT * PromptArgument
.text:00401AA4                 mov     al, [eax+2Ch]
.text:00401AA7                 mov     [esi+91h], al
.text:00401AAD                 mov     eax, ?ReadOnlyArgument@@3PAVFLAG_ARGUMENT@@A ; FLAG_ARGUMENT * ReadOnlyArgument
.text:00401AB2                 mov     al, [eax+2Ch]
.text:00401AB5                 mov     [esi+92h], al
.text:00401ABB                 mov     eax, ?SubdirArgument@@3PAVFLAG_ARGUMENT@@A ; FLAG_ARGUMENT * SubdirArgument
.text:00401AC0                 mov     al, [eax+2Ch]
.text:00401AC3                 mov     [esi+93h], al
.text:00401AC9                 mov     eax, ?CompareTimeArgument@@3PAVFLAG_ARGUMENT@@A ; FLAG_ARGUMENT * CompareTimeArgument
.text:00401ACE                 mov     al, [eax+2Ch]
.text:00401AD1                 mov     [esi+94h], al
.text:00401AD7                 mov     eax, ?WaitArgument@@3PAVFLAG_ARGUMENT@@A ; FLAG_ARGUMENT * WaitArgument
.text:00401ADC                 mov     al, [eax+2Ch]
.text:00401ADF                 mov     [esi+95h], al
.text:00401AE5                 mov     eax, ?HelpArgument@@3PAVFLAG_ARGUMENT@@A ; FLAG_ARGUMENT * HelpArgument
.text:00401AEA                 mov     al, [eax+2Ch]
.text:00401AED                 mov     ?HelpSwitch@@3EA, al ; uchar HelpSwitch
.text:00401AF2                 call    ds:__imp_?IsValueSet@ARGUMENT@@QAEEXZ ; ARGUMENT::IsValueSet(void)
.text:00401AF8                 test    al, al
.text:00401AFA                 jz      short loc_401B16
.text:00401AFC                 mov     eax, ?SourcePathArgument@@3PAVPATH_ARGUMENT@@A ; PATH_ARGUMENT * SourcePathArgument
.text:00401B01                 mov     ecx, [eax+28h]
.text:00401B04                 call    ds:__imp_?QueryPath@PATH@@QBEPAV1@XZ ; PATH::QueryPath(void)
.text:00401B0A                 mov     [esi+88h], eax
.text:00401B10                 test    eax, eax
.text:00401B12                 jnz     short loc_401B1C
.text:00401B14                 jmp     short loc_401B6E
.text:00401B16 ; ---------------------------------------------------------------------------
.text:00401B16
.text:00401B16 loc_401B16:                             ; CODE XREF: REPLACE::GetArgumentsCmd(void)+2BD↑j
.text:00401B16                 mov     [esi+88h], edi
.text:00401B1C
.text:00401B1C loc_401B1C:                             ; CODE XREF: REPLACE::GetArgumentsCmd(void)+2D5↑j
.text:00401B1C                 mov     ecx, ?DestinationPathArgument@@3PAVPATH_ARGUMENT@@A ; PATH_ARGUMENT * DestinationPathArgument
.text:00401B22                 call    ds:__imp_?IsValueSet@ARGUMENT@@QAEEXZ ; ARGUMENT::IsValueSet(void)
.text:00401B28                 test    al, al
.text:00401B2A                 jz      short loc_401B46
.text:00401B2C                 mov     eax, ?DestinationPathArgument@@3PAVPATH_ARGUMENT@@A ; PATH_ARGUMENT * DestinationPathArgument
.text:00401B31                 mov     ecx, [eax+28h]
.text:00401B34                 call    ds:__imp_?QueryFullPath@PATH@@QBEPAV1@XZ ; PATH::QueryFullPath(void)
.text:00401B3A                 mov     [esi+8Ch], eax
.text:00401B40                 test    eax, eax
.text:00401B42                 jnz     short loc_401B4C
.text:00401B44                 jmp     short loc_401B6E
.text:00401B46 ; ---------------------------------------------------------------------------
.text:00401B46
.text:00401B46 loc_401B46:                             ; CODE XREF: REPLACE::GetArgumentsCmd(void)+2ED↑j
.text:00401B46                 mov     [esi+8Ch], edi
.text:00401B4C
.text:00401B4C loc_401B4C:                             ; CODE XREF: REPLACE::GetArgumentsCmd(void)+305↑j
.text:00401B4C                 lea     ecx, [ebp+var_30]
.text:00401B4F                 call    ds:__imp_??1DSTRING@@UAE@XZ ; DSTRING::~DSTRING(void)
.text:00401B55                 lea     ecx, [ebp+var_60]
.text:00401B58                 call    ds:__imp_??1PATH_ARGUMENT@@UAE@XZ ; PATH_ARGUMENT::~PATH_ARGUMENT(void)
.text:00401B5E                 lea     ecx, [ebp+var_18]
.text:00401B61                 call    ds:__imp_??1ARRAY@@UAE@XZ ; ARRAY::~ARRAY(void)
.text:00401B67                 pop     edi
.text:00401B68                 pop     esi
.text:00401B69                 pop     ebx
.text:00401B6A                 mov     esp, ebp
.text:00401B6C                 pop     ebp
.text:00401B6D                 retn
.text:00401B6E ; ---------------------------------------------------------------------------
.text:00401B6E
.text:00401B6E loc_401B6E:                             ; CODE XREF: REPLACE::GetArgumentsCmd(void)+3E↑j
.text:00401B6E                                         ; REPLACE::GetArgumentsCmd(void)+53↑j ...
.text:00401B6E                 push    8               ; unsigned int
.text:00401B70                 push    edi             ; struct WSTRING *
.text:00401B71                 push    5241h           ; unsigned int
.text:00401B76                 mov     ecx, esi        ; this
.text:00401B78                 call    ?DisplayMessageAndExit@REPLACE@@AAEXKPBVWSTRING@@K@Z ; REPLACE::DisplayMessageAndExit(ulong,WSTRING const *,ulong)
.text:00401B78 ?GetArgumentsCmd@REPLACE@@AAEXXZ endp
.text:00401B78
.text:00401B78 ; ---------------------------------------------------------------------------
.text:00401B7D                 align 2
.text:00401B7E
.text:00401B7E ; =============== S U B R O U T I N E =======================================
.text:00401B7E
.text:00401B7E ; Attributes: bp-based frame
.text:00401B7E
.text:00401B7E ; void __thiscall REPLACE::ParseArguments(REPLACE *__hidden this, struct WSTRING *, struct ARRAY *)
.text:00401B7E ?ParseArguments@REPLACE@@AAEXPAVWSTRING@@PAVARRAY@@@Z proc near
.text:00401B7E                                         ; CODE XREF: REPLACE::GetArgumentsCmd(void)+249↑p
.text:00401B7E
.text:00401B7E var_118         = byte ptr -118h
.text:00401B7E var_B4          = byte ptr -0B4h
.text:00401B7E var_84          = byte ptr -84h
.text:00401B7E var_18          = byte ptr -18h
.text:00401B7E arg_0           = dword ptr  8
.text:00401B7E arg_4           = dword ptr  0Ch
.text:00401B7E
.text:00401B7E                 mov     edi, edi
.text:00401B80                 push    ebp
.text:00401B81                 mov     ebp, esp
.text:00401B83                 sub     esp, 118h
.text:00401B89                 push    esi
.text:00401B8A                 mov     esi, ecx
.text:00401B8C                 lea     ecx, [ebp+var_118]
.text:00401B92                 push    edi
.text:00401B93                 call    ds:__imp_??0ARGUMENT_LEXEMIZER@@QAE@XZ ; ARGUMENT_LEXEMIZER::ARGUMENT_LEXEMIZER(void)
.text:00401B99                 lea     ecx, [ebp+var_18]
.text:00401B9C                 call    ds:__imp_??0ARRAY@@QAE@XZ ; ARRAY::ARRAY(void)
.text:00401BA2                 push    8
.text:00401BA4                 push    8
.text:00401BA6                 lea     ecx, [ebp+var_18]
.text:00401BA9                 call    ds:__imp_?Initialize@ARRAY@@QAEEKK@Z ; ARRAY::Initialize(ulong,ulong)
.text:00401BAF                 test    al, al
.text:00401BB1                 jz      loc_401C90
.text:00401BB7                 lea     eax, [ebp+var_18]
.text:00401BBA                 push    eax
.text:00401BBB                 lea     ecx, [ebp+var_118]
.text:00401BC1                 call    ds:__imp_?Initialize@ARGUMENT_LEXEMIZER@@QAEEPAVARRAY@@@Z ; ARGUMENT_LEXEMIZER::Initialize(ARRAY *)
.text:00401BC7                 test    al, al
.text:00401BC9                 jz      loc_401C90
.text:00401BCF                 lea     eax, [esi+180h]
.text:00401BD5                 push    eax
.text:00401BD6                 lea     ecx, [ebp+var_118]
.text:00401BDC                 call    ds:__imp_?PutMultipleSwitch@ARGUMENT_LEXEMIZER@@QAEXPBVWSTRING@@@Z ; ARGUMENT_LEXEMIZER::PutMultipleSwitch(WSTRING const *)
.text:00401BE2                 lea     eax, [esi+168h]
.text:00401BE8                 push    eax
.text:00401BE9                 lea     ecx, [ebp+var_118]
.text:00401BEF                 call    ds:__imp_?PutSwitches@ARGUMENT_LEXEMIZER@@QAEXPBVWSTRING@@@Z ; ARGUMENT_LEXEMIZER::PutSwitches(WSTRING const *)
.text:00401BF5                 push    0
.text:00401BF7                 lea     ecx, [ebp+var_118]
.text:00401BFD                 call    ds:__imp_?SetCaseSensitive@ARGUMENT_LEXEMIZER@@QAEXE@Z ; ARGUMENT_LEXEMIZER::SetCaseSensitive(uchar)
.text:00401C03                 push    offset asc_4011B8 ; " /\t"
.text:00401C08                 lea     ecx, [ebp+var_118]
.text:00401C0E                 call    ds:__imp_?PutSeparators@ARGUMENT_LEXEMIZER@@QAEXPBD@Z ; ARGUMENT_LEXEMIZER::PutSeparators(char const *)
.text:00401C14                 push    0FFFFFFFFh
.text:00401C16                 mov     edi, offset asc_4011BC ; "\""
.text:00401C1B                 lea     ecx, [ebp+var_B4]
.text:00401C21                 push    edi
.text:00401C22                 call    ds:__imp_?Initialize@WSTRING@@QAEEPBDK@Z ; WSTRING::Initialize(char const *,ulong)
.text:00401C28                 push    0FFFFFFFFh
.text:00401C2A                 push    edi
.text:00401C2B                 lea     ecx, [ebp+var_84]
.text:00401C31                 call    ds:__imp_?Initialize@WSTRING@@QAEEPBDK@Z ; WSTRING::Initialize(char const *,ulong)
.text:00401C37                 push    [ebp+arg_0]
.text:00401C3A                 lea     ecx, [ebp+var_118]
.text:00401C40                 call    ds:__imp_?PrepareToParse@ARGUMENT_LEXEMIZER@@QAEEPAVWSTRING@@@Z ; ARGUMENT_LEXEMIZER::PrepareToParse(WSTRING *)
.text:00401C46                 test    al, al
.text:00401C48                 jz      short loc_401C9B
.text:00401C4A                 push    [ebp+arg_4]
.text:00401C4D                 lea     ecx, [ebp+var_118]
.text:00401C53                 call    ds:__imp_?DoParsing@ARGUMENT_LEXEMIZER@@QAEEPAVARRAY@@@Z ; ARGUMENT_LEXEMIZER::DoParsing(ARRAY *)
.text:00401C59                 test    al, al
.text:00401C5B                 jnz     short loc_401C73
.text:00401C5D                 push    0Bh
.text:00401C5F                 lea     ecx, [ebp+var_118]
.text:00401C65                 call    ds:__imp_?QueryInvalidArgument@ARGUMENT_LEXEMIZER@@QAEPAVWSTRING@@XZ ; ARGUMENT_LEXEMIZER::QueryInvalidArgument(void)
.text:00401C6B                 push    eax
.text:00401C6C                 push    5242h
.text:00401C71                 jmp     short loc_401CA4
.text:00401C73 ; ---------------------------------------------------------------------------
.text:00401C73
.text:00401C73 loc_401C73:                             ; CODE XREF: REPLACE::ParseArguments(WSTRING *,ARRAY *)+DD↑j
.text:00401C73                 lea     ecx, [ebp+var_18]
.text:00401C76                 call    ds:__imp_??1ARRAY@@UAE@XZ ; ARRAY::~ARRAY(void)
.text:00401C7C                 lea     ecx, [ebp+var_118]
.text:00401C82                 call    ds:__imp_??1ARGUMENT_LEXEMIZER@@UAE@XZ ; ARGUMENT_LEXEMIZER::~ARGUMENT_LEXEMIZER(void)
.text:00401C88                 pop     edi
.text:00401C89                 pop     esi
.text:00401C8A                 mov     esp, ebp
.text:00401C8C                 pop     ebp
.text:00401C8D                 retn    8
.text:00401C90 ; ---------------------------------------------------------------------------
.text:00401C90
.text:00401C90 loc_401C90:                             ; CODE XREF: REPLACE::ParseArguments(WSTRING *,ARRAY *)+33↑j
.text:00401C90                                         ; REPLACE::ParseArguments(WSTRING *,ARRAY *)+4B↑j
.text:00401C90                 push    8
.text:00401C92                 push    0
.text:00401C94                 push    5241h
.text:00401C99                 jmp     short loc_401CA4
.text:00401C9B ; ---------------------------------------------------------------------------
.text:00401C9B
.text:00401C9B loc_401C9B:                             ; CODE XREF: REPLACE::ParseArguments(WSTRING *,ARRAY *)+CA↑j
.text:00401C9B                 push    0Bh             ; unsigned int
.text:00401C9D                 push    0               ; struct WSTRING *
.text:00401C9F                 push    5240h           ; unsigned int
.text:00401CA4
.text:00401CA4 loc_401CA4:                             ; CODE XREF: REPLACE::ParseArguments(WSTRING *,ARRAY *)+F3↑j
.text:00401CA4                                         ; REPLACE::ParseArguments(WSTRING *,ARRAY *)+11B↑j
.text:00401CA4                 mov     ecx, esi        ; this
.text:00401CA6                 call    ?DisplayMessageAndExit@REPLACE@@AAEXKPBVWSTRING@@K@Z ; REPLACE::DisplayMessageAndExit(ulong,WSTRING const *,ulong)
.text:00401CA6 ?ParseArguments@REPLACE@@AAEXPAVWSTRING@@PAVARRAY@@@Z endp
.text:00401CA6
.text:00401CA6 ; ---------------------------------------------------------------------------
.text:00401CAB                 align 4
.text:00401CAC
.text:00401CAC ; =============== S U B R O U T I N E =======================================
.text:00401CAC
.text:00401CAC ; Attributes: bp-based frame
.text:00401CAC
.text:00401CAC ; void __thiscall REPLACE::CheckArgumentConsistency(REPLACE *__hidden this)
.text:00401CAC ?CheckArgumentConsistency@REPLACE@@AAEXXZ proc near
.text:00401CAC                                         ; CODE XREF: REPLACE::SetArguments(void)+2AE↑p
.text:00401CAC
.text:00401CAC var_4           = dword ptr -4
.text:00401CAC
.text:00401CAC                 mov     edi, edi
.text:00401CAE                 push    ebp
.text:00401CAF                 mov     ebp, esp
.text:00401CB1                 push    ecx
.text:00401CB2                 mov     eax, ___security_cookie
.text:00401CB7                 xor     eax, ebp
.text:00401CB9                 mov     [ebp+var_4], eax
.text:00401CBC                 cmp     ?HelpSwitch@@3EA, 0 ; uchar HelpSwitch
.text:00401CC3                 push    esi
.text:00401CC4                 push    edi
.text:00401CC5                 mov     edi, ecx
.text:00401CC7                 jz      short loc_401CDA
.text:00401CC9                 mov     eax, [edi]
.text:00401CCB                 mov     esi, [eax+28h]
.text:00401CCE                 mov     ecx, esi
.text:00401CD0                 call    ds:___guard_check_icall_fptr ; _guard_check_icall_nop(x)
.text:00401CD6                 mov     ecx, edi
.text:00401CD8                 call    esi
.text:00401CDA
.text:00401CDA loc_401CDA:                             ; CODE XREF: REPLACE::CheckArgumentConsistency(void)+1B↑j
.text:00401CDA                 xor     esi, esi
.text:00401CDC                 cmp     [edi+88h], esi
.text:00401CE2                 jz      loc_401DAB
.text:00401CE8                 cmp     byte ptr [edi+90h], 0
.text:00401CEF                 jz      short loc_401D10
.text:00401CF1                 cmp     byte ptr [edi+93h], 0
.text:00401CF8                 jnz     short loc_401D03
.text:00401CFA                 cmp     byte ptr [edi+94h], 0
.text:00401D01                 jz      short loc_401D10
.text:00401D03
.text:00401D03 loc_401D03:                             ; CODE XREF: REPLACE::CheckArgumentConsistency(void)+4C↑j
.text:00401D03                 push    0Bh
.text:00401D05                 push    esi
.text:00401D06                 push    5243h
.text:00401D0B                 jmp     loc_401DB3
.text:00401D10 ; ---------------------------------------------------------------------------
.text:00401D10
.text:00401D10 loc_401D10:                             ; CODE XREF: REPLACE::CheckArgumentConsistency(void)+43↑j
.text:00401D10                                         ; REPLACE::CheckArgumentConsistency(void)+55↑j
.text:00401D10                 mov     ecx, [edi+8Ch]
.text:00401D16                 test    ecx, ecx
.text:00401D18                 jnz     short loc_401D66
.text:00401D1A                 mov     eax, large fs:30h
.text:00401D20                 push    244h            ; Size
.text:00401D25                 push    esi             ; Flags
.text:00401D26                 push    dword ptr [eax+18h] ; HeapHandle
.text:00401D29                 call    ds:__imp__RtlAllocateHeap@12 ; RtlAllocateHeap(x,x,x)
.text:00401D2F                 test    eax, eax
.text:00401D31                 jz      short loc_401D3D
.text:00401D33                 mov     ecx, eax
.text:00401D35                 call    ds:__imp_??0PATH@@QAE@XZ ; PATH::PATH(void)
.text:00401D3B                 jmp     short loc_401D3F
.text:00401D3D ; ---------------------------------------------------------------------------
.text:00401D3D
.text:00401D3D loc_401D3D:                             ; CODE XREF: REPLACE::CheckArgumentConsistency(void)+85↑j
.text:00401D3D                 mov     eax, esi
.text:00401D3F
.text:00401D3F loc_401D3F:                             ; CODE XREF: REPLACE::CheckArgumentConsistency(void)+8F↑j
.text:00401D3F                 mov     [edi+8Ch], eax
.text:00401D45                 test    eax, eax
.text:00401D47                 jz      short loc_401D5C
.text:00401D49                 push    1
.text:00401D4B                 push    offset asc_4011C0 ; "."
.text:00401D50                 mov     ecx, eax
.text:00401D52                 call    ds:__imp_?Initialize@PATH@@QAEEPBGE@Z ; PATH::Initialize(ushort const *,uchar)
.text:00401D58                 test    al, al
.text:00401D5A                 jnz     short loc_401D9B
.text:00401D5C
.text:00401D5C loc_401D5C:                             ; CODE XREF: REPLACE::CheckArgumentConsistency(void)+9B↑j
.text:00401D5C                 push    8
.text:00401D5E                 push    esi
.text:00401D5F                 push    5241h
.text:00401D64                 jmp     short loc_401DB3
.text:00401D66 ; ---------------------------------------------------------------------------
.text:00401D66
.text:00401D66 loc_401D66:                             ; CODE XREF: REPLACE::CheckArgumentConsistency(void)+6C↑j
.text:00401D66                 call    ds:__imp_?HasWildCard@PATH@@QBEEXZ ; PATH::HasWildCard(void)
.text:00401D6C                 test    al, al
.text:00401D6E                 jnz     short loc_401D85
.text:00401D70                 push    ebx
.text:00401D71                 push    esi
.text:00401D72                 push    esi
.text:00401D73                 push    dword ptr [edi+8Ch]
.text:00401D79                 call    ds:__imp_?QueryFile@SYSTEM@@SGPAVFSN_FILE@@PBVPATH@@EPAE@Z ; SYSTEM::QueryFile(PATH const *,uchar,uchar *)
.text:00401D7F                 mov     ebx, eax
.text:00401D81                 test    ebx, ebx
.text:00401D83                 jz      short loc_401D9A
.text:00401D85
.text:00401D85 loc_401D85:                             ; CODE XREF: REPLACE::CheckArgumentConsistency(void)+C2↑j
.text:00401D85                 mov     ecx, [edi+8Ch]  ; this
.text:00401D8B                 push    3
.text:00401D8D                 call    ?GetPathString@PATH@@QBEPBVWSTRING@@XZ ; PATH::GetPathString(void)
.text:00401D92                 push    eax
.text:00401D93                 push    5244h
.text:00401D98                 jmp     short loc_401DB3
.text:00401D9A ; ---------------------------------------------------------------------------
.text:00401D9A
.text:00401D9A loc_401D9A:                             ; CODE XREF: REPLACE::CheckArgumentConsistency(void)+D7↑j
.text:00401D9A                 pop     ebx
.text:00401D9B
.text:00401D9B loc_401D9B:                             ; CODE XREF: REPLACE::CheckArgumentConsistency(void)+AE↑j
.text:00401D9B                 mov     ecx, [ebp+var_4]
.text:00401D9E                 pop     edi
.text:00401D9F                 xor     ecx, ebp        ; StackCookie
.text:00401DA1                 pop     esi
.text:00401DA2                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text:00401DA7                 mov     esp, ebp
.text:00401DA9                 pop     ebp
.text:00401DAA                 retn
.text:00401DAB ; ---------------------------------------------------------------------------
.text:00401DAB
.text:00401DAB loc_401DAB:                             ; CODE XREF: REPLACE::CheckArgumentConsistency(void)+36↑j
.text:00401DAB                 push    0Bh             ; unsigned int
.text:00401DAD                 push    esi             ; struct WSTRING *
.text:00401DAE                 push    523Bh           ; unsigned int
.text:00401DB3
.text:00401DB3 loc_401DB3:                             ; CODE XREF: REPLACE::CheckArgumentConsistency(void)+5F↑j
.text:00401DB3                                         ; REPLACE::CheckArgumentConsistency(void)+B8↑j ...
.text:00401DB3                 mov     ecx, edi        ; this
.text:00401DB5                 call    ?DisplayMessageAndExit@REPLACE@@AAEXKPBVWSTRING@@K@Z ; REPLACE::DisplayMessageAndExit(ulong,WSTRING const *,ulong)
.text:00401DB5 ?CheckArgumentConsistency@REPLACE@@AAEXXZ endp ; sp-analysis failed
.text:00401DB5
.text:00401DB5 ; ---------------------------------------------------------------------------
.text:00401DBA                 db 0CCh
.text:00401DBB
.text:00401DBB ; =============== S U B R O U T I N E =======================================
.text:00401DBB
.text:00401DBB ; Attributes: noreturn bp-based frame
.text:00401DBB
.text:00401DBB ; void __thiscall __noreturn REPLACE::DisplayMessageAndExit(REPLACE *__hidden this, unsigned int, const struct WSTRING *, unsigned int)
.text:00401DBB ?DisplayMessageAndExit@REPLACE@@AAEXKPBVWSTRING@@K@Z proc near
.text:00401DBB                                         ; CODE XREF: REPLACE::SetArguments(void)+400↑p
.text:00401DBB                                         ; REPLACE::GetArgumentsCmd(void)+33B↑p ...
.text:00401DBB
.text:00401DBB var_248         = byte ptr -248h
.text:00401DBB var_4           = dword ptr -4
.text:00401DBB arg_0           = dword ptr  8
.text:00401DBB arg_4           = dword ptr  0Ch
.text:00401DBB Code            = dword ptr  10h
.text:00401DBB
.text:00401DBB                 mov     edi, edi
.text:00401DBD                 push    ebp
.text:00401DBE                 mov     ebp, esp
.text:00401DC0                 sub     esp, 248h
.text:00401DC6                 mov     eax, ___security_cookie
.text:00401DCB                 xor     eax, ebp
.text:00401DCD                 mov     [ebp+var_4], eax
.text:00401DD0                 push    ebx
.text:00401DD1                 mov     ebx, [ebp+arg_4]
.text:00401DD4                 push    esi
.text:00401DD5                 push    edi
.text:00401DD6                 mov     edi, ecx
.text:00401DD8                 lea     ecx, [ebp+var_248]
.text:00401DDE                 call    ds:__imp_??0PATH@@QAE@XZ ; PATH::PATH(void)
.text:00401DE4                 mov     esi, [edi]
.text:00401DE6                 mov     ecx, [esi+0Ch]
.text:00401DE9                 test    ebx, ebx
.text:00401DEB                 jz      short loc_401E07
.text:00401DED                 push    ebx
.text:00401DEE                 push    offset aW       ; "%W"
.text:00401DF3                 push    1
.text:00401DF5                 push    [ebp+arg_0]
.text:00401DF8                 push    edi
.text:00401DF9                 call    ds:___guard_check_icall_fptr ; _guard_check_icall_nop(x)
.text:00401DFF                 call    dword ptr [esi+0Ch]
.text:00401E02                 add     esp, 14h
.text:00401E05                 jmp     short loc_401E1E
.text:00401E07 ; ---------------------------------------------------------------------------
.text:00401E07
.text:00401E07 loc_401E07:                             ; CODE XREF: REPLACE::DisplayMessageAndExit(ulong,WSTRING const *,ulong)+30↑j
.text:00401E07                 push    offset dword_4011C4
.text:00401E0C                 push    1
.text:00401E0E                 push    [ebp+arg_0]
.text:00401E11                 push    edi
.text:00401E12                 call    ds:___guard_check_icall_fptr ; _guard_check_icall_nop(x)
.text:00401E18                 call    dword ptr [esi+0Ch]
.text:00401E1B                 add     esp, 10h
.text:00401E1E
.text:00401E1E loc_401E1E:                             ; CODE XREF: REPLACE::DisplayMessageAndExit(ulong,WSTRING const *,ulong)+4A↑j
.text:00401E1E                 cmp     byte ptr [edi+90h], 0
.text:00401E25                 jz      short loc_401E48
.text:00401E27                 mov     eax, [edi+98h]
.text:00401E2D                 test    eax, eax
.text:00401E2F                 jnz     short loc_401E39
.text:00401E31                 push    eax
.text:00401E32                 push    5221h
.text:00401E37                 jmp     short loc_401E58
.text:00401E39 ; ---------------------------------------------------------------------------
.text:00401E39
.text:00401E39 loc_401E39:                             ; CODE XREF: REPLACE::DisplayMessageAndExit(ulong,WSTRING const *,ulong)+74↑j
.text:00401E39                 push    eax
.text:00401E3A                 push    offset aD       ; "%d"
.text:00401E3F                 push    0
.text:00401E41                 push    521Fh
.text:00401E46                 jmp     short loc_401E78
.text:00401E48 ; ---------------------------------------------------------------------------
.text:00401E48
.text:00401E48 loc_401E48:                             ; CODE XREF: REPLACE::DisplayMessageAndExit(ulong,WSTRING const *,ulong)+6A↑j
.text:00401E48                 mov     eax, [edi+9Ch]
.text:00401E4E                 test    eax, eax
.text:00401E50                 jnz     short loc_401E6B
.text:00401E52                 push    eax
.text:00401E53                 push    5220h
.text:00401E58
.text:00401E58 loc_401E58:                             ; CODE XREF: REPLACE::DisplayMessageAndExit(ulong,WSTRING const *,ulong)+7C↑j
.text:00401E58                 mov     eax, [edi]
.text:00401E5A                 mov     esi, [eax+10h]
.text:00401E5D                 mov     ecx, esi
.text:00401E5F                 call    ds:___guard_check_icall_fptr ; _guard_check_icall_nop(x)
.text:00401E65                 mov     ecx, edi
.text:00401E67                 call    esi
.text:00401E69                 jmp     short loc_401E8A
.text:00401E6B ; ---------------------------------------------------------------------------
.text:00401E6B
.text:00401E6B loc_401E6B:                             ; CODE XREF: REPLACE::DisplayMessageAndExit(ulong,WSTRING const *,ulong)+95↑j
.text:00401E6B                 push    eax
.text:00401E6C                 push    offset aD       ; "%d"
.text:00401E71                 push    0
.text:00401E73                 push    521Eh
.text:00401E78
.text:00401E78 loc_401E78:                             ; CODE XREF: REPLACE::DisplayMessageAndExit(ulong,WSTRING const *,ulong)+8B↑j
.text:00401E78                 mov     esi, [edi]
.text:00401E7A                 push    edi
.text:00401E7B                 mov     ecx, [esi+0Ch]
.text:00401E7E                 call    ds:___guard_check_icall_fptr ; _guard_check_icall_nop(x)
.text:00401E84                 call    dword ptr [esi+0Ch]
.text:00401E87                 add     esp, 14h
.text:00401E8A
.text:00401E8A loc_401E8A:                             ; CODE XREF: REPLACE::DisplayMessageAndExit(ulong,WSTRING const *,ulong)+AE↑j
.text:00401E8A                 push    [ebp+Code]      ; Code
.text:00401E8D                 call    ds:__imp__exit
.text:00401E8D ?DisplayMessageAndExit@REPLACE@@AAEXKPBVWSTRING@@K@Z endp
.text:00401E8D
.text:00401E8D ; ---------------------------------------------------------------------------
.text:00401E93                 align 4
.text:00401E94
.text:00401E94 ; =============== S U B R O U T I N E =======================================
.text:00401E94
.text:00401E94
.text:00401E94 ; struct WSTRING *__thiscall PATH::QueryName(PATH *__hidden this)
.text:00401E94 ?QueryName@PATH@@QBEPAVWSTRING@@XZ proc near
.text:00401E94                                         ; CODE XREF: REPLACE::GetDirectoryAndPattern(PATH *,FSN_DIRECTORY * *,WSTRING * *)+54↓p
.text:00401E94                                         ; REPLACE::AddFiles(FSN_DIRECTORY *)+6C↓p ...
.text:00401E94                 mov     edx, [ecx+234h]
.text:00401E9A                 test    edx, edx
.text:00401E9C                 jz      short loc_401EB9
.text:00401E9E                 mov     eax, [ecx+230h]
.text:00401EA4                 add     eax, [ecx+224h]
.text:00401EAA                 add     ecx, 210h
.text:00401EB0                 push    edx
.text:00401EB1                 push    eax
.text:00401EB2                 call    ds:__imp_?QueryString@WSTRING@@QBEPAV1@KK@Z ; WSTRING::QueryString(ulong,ulong)
.text:00401EB8                 retn
.text:00401EB9 ; ---------------------------------------------------------------------------
.text:00401EB9
.text:00401EB9 loc_401EB9:                             ; CODE XREF: PATH::QueryName(void)+8↑j
.text:00401EB9                 xor     eax, eax
.text:00401EBB                 retn
.text:00401EBB ?QueryName@PATH@@QBEPAVWSTRING@@XZ endp
.text:00401EBB
.text:00401EBC
.text:00401EBC ; =============== S U B R O U T I N E =======================================
.text:00401EBC
.text:00401EBC ; Attributes: bp-based frame fuzzy-sp
.text:00401EBC
.text:00401EBC ; int __cdecl main(int argc, const char **argv, const char **envp)
.text:00401EBC _main           proc near               ; CODE XREF: __wmainCRTStartup+102↓p
.text:00401EBC
.text:00401EBC var_198         = byte ptr -198h
.text:00401EBC argc            = dword ptr  8
.text:00401EBC argv            = dword ptr  0Ch
.text:00401EBC envp            = dword ptr  10h
.text:00401EBC
.text:00401EBC                 mov     edi, edi
.text:00401EBE                 push    ebp
.text:00401EBF                 mov     ebp, esp
.text:00401EC1                 and     esp, 0FFFFFFF8h
.text:00401EC4                 sub     esp, 19Ch
.text:00401ECA                 push    esi
.text:00401ECB                 xor     esi, esi
.text:00401ECD                 push    esi             ; HeapInformationLength
.text:00401ECE                 push    esi             ; HeapInformation
.text:00401ECF                 push    1               ; HeapInformationClass
.text:00401ED1                 push    esi             ; HeapHandle
.text:00401ED2                 call    ds:__imp__HeapSetInformation@16 ; HeapSetInformation(x,x,x,x)
.text:00401ED8                 mov     eax, large fs:30h
.text:00401EDE                 push    4               ; Size
.text:00401EE0                 push    esi             ; Flags
.text:00401EE1                 push    dword ptr [eax+18h] ; HeapHandle
.text:00401EE4                 call    ds:__imp__RtlAllocateHeap@12 ; RtlAllocateHeap(x,x,x)
.text:00401EEA                 test    eax, eax
.text:00401EEC                 jz      short loc_401EF8
.text:00401EEE                 mov     ecx, eax
.text:00401EF0                 call    ds:__imp_??0CLASS_DESCRIPTOR@@QAE@XZ ; CLASS_DESCRIPTOR::CLASS_DESCRIPTOR(void)
.text:00401EF6                 jmp     short loc_401EFA
.text:00401EF8 ; ---------------------------------------------------------------------------
.text:00401EF8
.text:00401EF8 loc_401EF8:                             ; CODE XREF: _main+30↑j
.text:00401EF8                 mov     eax, esi
.text:00401EFA
.text:00401EFA loc_401EFA:                             ; CODE XREF: _main+3A↑j
.text:00401EFA                 mov     ?REPLACE_cd@@3PBVCLASS_DESCRIPTOR@@B, eax ; CLASS_DESCRIPTOR const * const REPLACE_cd
.text:00401EFF                 test    eax, eax
.text:00401F01                 jz      short loc_401F0C
.text:00401F03                 push    esi
.text:00401F04                 mov     ecx, eax
.text:00401F06                 call    ds:__imp_?Initialize@CLASS_DESCRIPTOR@@QAEEPBD@Z ; CLASS_DESCRIPTOR::Initialize(char const *)
.text:00401F0C
.text:00401F0C loc_401F0C:                             ; CODE XREF: _main+45↑j
.text:00401F0C                 lea     ecx, [esp+1A0h+var_198] ; this
.text:00401F10                 call    ??0REPLACE@@QAE@XZ ; REPLACE::REPLACE(void)
.text:00401F15                 push    1
.text:00401F17                 push    7531h
.text:00401F1C                 push    5225h
.text:00401F21                 lea     ecx, [esp+1ACh+var_198]
.text:00401F25                 call    ds:__imp_?Initialize@PROGRAM@@QAEEKKK@Z ; PROGRAM::Initialize(ulong,ulong,ulong)
.text:00401F2B                 lea     ecx, [esp+1A0h+var_198] ; this
.text:00401F2F                 call    ?InitializeThings@REPLACE@@AAEXXZ ; REPLACE::InitializeThings(void)
.text:00401F34                 lea     ecx, [esp+1A0h+var_198] ; this
.text:00401F38                 call    ?SetArguments@REPLACE@@AAEXXZ ; REPLACE::SetArguments(void)
.text:00401F3D                 lea     ecx, [esp+1A0h+var_198] ; this
.text:00401F41                 call    ?DoReplace@REPLACE@@QAEEXZ ; REPLACE::DoReplace(void)
.text:00401F46                 lea     ecx, [esp+1A0h+var_198] ; this
.text:00401F4A                 call    ??1REPLACE@@UAE@XZ ; REPLACE::~REPLACE(void)
.text:00401F4F                 xor     eax, eax
.text:00401F51                 pop     esi
.text:00401F52                 mov     esp, ebp
.text:00401F54                 pop     ebp
.text:00401F55                 retn
.text:00401F55 _main           endp
.text:00401F55
.text:00401F56
.text:00401F56 ; =============== S U B R O U T I N E =======================================
.text:00401F56
.text:00401F56
.text:00401F56 ; REPLACE *__thiscall REPLACE::REPLACE(REPLACE *__hidden this)
.text:00401F56 ??0REPLACE@@QAE@XZ proc near            ; CODE XREF: _main+54↑p
.text:00401F56                 mov     edi, edi
.text:00401F58                 push    esi
.text:00401F59                 mov     esi, ecx
.text:00401F5B                 call    ds:__imp_??0PROGRAM@@IAE@XZ ; PROGRAM::PROGRAM(void)
.text:00401F61                 lea     ecx, [esi+0C0h]
.text:00401F67                 mov     dword ptr [esi], offset ??_7REPLACE@@6B@ ; const REPLACE::`vftable'
.text:00401F6D                 call    ds:__imp_??0DSTRING@@QAE@XZ ; DSTRING::DSTRING(void)
.text:00401F73                 lea     ecx, [esi+0D8h]
.text:00401F79                 call    ds:__imp_??0DSTRING@@QAE@XZ ; DSTRING::DSTRING(void)
.text:00401F7F                 lea     ecx, [esi+0F0h]
.text:00401F85                 call    ds:__imp_??0DSTRING@@QAE@XZ ; DSTRING::DSTRING(void)
.text:00401F8B                 lea     ecx, [esi+108h]
.text:00401F91                 call    ds:__imp_??0DSTRING@@QAE@XZ ; DSTRING::DSTRING(void)
.text:00401F97                 lea     ecx, [esi+120h]
.text:00401F9D                 call    ds:__imp_??0DSTRING@@QAE@XZ ; DSTRING::DSTRING(void)
.text:00401FA3                 lea     ecx, [esi+138h]
.text:00401FA9                 call    ds:__imp_??0DSTRING@@QAE@XZ ; DSTRING::DSTRING(void)
.text:00401FAF                 lea     ecx, [esi+150h]
.text:00401FB5                 call    ds:__imp_??0DSTRING@@QAE@XZ ; DSTRING::DSTRING(void)
.text:00401FBB                 lea     ecx, [esi+168h]
.text:00401FC1                 call    ds:__imp_??0DSTRING@@QAE@XZ ; DSTRING::DSTRING(void)
.text:00401FC7                 lea     ecx, [esi+180h]
.text:00401FCD                 call    ds:__imp_??0DSTRING@@QAE@XZ ; DSTRING::DSTRING(void)
.text:00401FD3                 mov     eax, ?REPLACE_cd@@3PBVCLASS_DESCRIPTOR@@B ; CLASS_DESCRIPTOR const * const REPLACE_cd
.text:00401FD8                 mov     [esi+4], eax
.text:00401FDB                 mov     eax, esi
.text:00401FDD                 pop     esi
.text:00401FDE                 retn
.text:00401FDE ??0REPLACE@@QAE@XZ endp
.text:00401FDE
.text:00401FDE ; ---------------------------------------------------------------------------
.text:00401FDF                 align 10h
.text:00401FE0
.text:00401FE0 ; =============== S U B R O U T I N E =======================================
.text:00401FE0
.text:00401FE0 ; Attributes: bp-based frame
.text:00401FE0
.text:00401FE0 ; void *__thiscall REPLACE::`scalar deleting destructor'(PVOID P, char)
.text:00401FE0 ??_GREPLACE@@UAEPAXI@Z proc near        ; DATA XREF: .text:const REPLACE::`vftable'↑o
.text:00401FE0                                         ; .text:___guard_fids_table↑o
.text:00401FE0
.text:00401FE0 arg_0           = byte ptr  8
.text:00401FE0
.text:00401FE0                 mov     edi, edi
.text:00401FE2                 push    ebp
.text:00401FE3                 mov     ebp, esp
.text:00401FE5                 push    esi
.text:00401FE6                 mov     esi, ecx
.text:00401FE8                 call    ??1REPLACE@@UAE@XZ ; REPLACE::~REPLACE(void)
.text:00401FED                 test    [ebp+arg_0], 1
.text:00401FF1                 jz      short loc_402009
.text:00401FF3                 test    esi, esi
.text:00401FF5                 jz      short loc_402009
.text:00401FF7                 mov     eax, large fs:30h
.text:00401FFD                 push    esi             ; P
.text:00401FFE                 push    0               ; Flags
.text:00402000                 push    dword ptr [eax+18h] ; HeapHandle
.text:00402003                 call    ds:__imp__RtlFreeHeap@12 ; RtlFreeHeap(x,x,x)
.text:00402009
.text:00402009 loc_402009:                             ; CODE XREF: REPLACE::`scalar deleting destructor'(uint)+11↑j
.text:00402009                                         ; REPLACE::`scalar deleting destructor'(uint)+15↑j
.text:00402009                 mov     eax, esi
.text:0040200B                 pop     esi
.text:0040200C                 pop     ebp
.text:0040200D                 retn    4
.text:0040200D ??_GREPLACE@@UAEPAXI@Z endp
.text:0040200D
.text:00402010
.text:00402010 ; =============== S U B R O U T I N E =======================================
.text:00402010
.text:00402010
.text:00402010 ; void __thiscall REPLACE::~REPLACE(REPLACE *__hidden this)
.text:00402010 ??1REPLACE@@UAE@XZ proc near            ; CODE XREF: _main+8E↑p
.text:00402010                                         ; REPLACE::`scalar deleting destructor'(uint)+8↑p
.text:00402010                 mov     edi, edi
.text:00402012                 push    esi
.text:00402013                 mov     esi, ecx
.text:00402015                 mov     dword ptr [esi], offset ??_7REPLACE@@6B@ ; const REPLACE::`vftable'
.text:0040201B                 call    ?DeallocateThings@REPLACE@@AAEXXZ ; REPLACE::DeallocateThings(void)
.text:00402020                 lea     ecx, [esi+180h]
.text:00402026                 call    ds:__imp_??1DSTRING@@UAE@XZ ; DSTRING::~DSTRING(void)
.text:0040202C                 lea     ecx, [esi+168h]
.text:00402032                 call    ds:__imp_??1DSTRING@@UAE@XZ ; DSTRING::~DSTRING(void)
.text:00402038                 lea     ecx, [esi+150h]
.text:0040203E                 call    ds:__imp_??1DSTRING@@UAE@XZ ; DSTRING::~DSTRING(void)
.text:00402044                 lea     ecx, [esi+138h]
.text:0040204A                 call    ds:__imp_??1DSTRING@@UAE@XZ ; DSTRING::~DSTRING(void)
.text:00402050                 lea     ecx, [esi+120h]
.text:00402056                 call    ds:__imp_??1DSTRING@@UAE@XZ ; DSTRING::~DSTRING(void)
.text:0040205C                 lea     ecx, [esi+108h]
.text:00402062                 call    ds:__imp_??1DSTRING@@UAE@XZ ; DSTRING::~DSTRING(void)
.text:00402068                 lea     ecx, [esi+0F0h]
.text:0040206E                 call    ds:__imp_??1DSTRING@@UAE@XZ ; DSTRING::~DSTRING(void)
.text:00402074                 lea     ecx, [esi+0D8h]
.text:0040207A                 call    ds:__imp_??1DSTRING@@UAE@XZ ; DSTRING::~DSTRING(void)
.text:00402080                 lea     ecx, [esi+0C0h]
.text:00402086                 call    ds:__imp_??1DSTRING@@UAE@XZ ; DSTRING::~DSTRING(void)
.text:0040208C                 mov     ecx, esi
.text:0040208E                 pop     esi
.text:0040208F                 jmp     ds:__imp_??1PROGRAM@@UAE@XZ ; PROGRAM::~PROGRAM(void)
.text:0040208F ??1REPLACE@@UAE@XZ endp
.text:0040208F
.text:00402095
.text:00402095 ; =============== S U B R O U T I N E =======================================
.text:00402095
.text:00402095
.text:00402095 ; void __thiscall REPLACE::InitializeThings(REPLACE *__hidden this)
.text:00402095 ?InitializeThings@REPLACE@@AAEXXZ proc near
.text:00402095                                         ; CODE XREF: _main+73↑p
.text:00402095                 mov     eax, large fs:30h
.text:0040209B                 push    ebx
.text:0040209C                 push    esi
.text:0040209D                 push    edi
.text:0040209E                 mov     edi, 104h
.text:004020A3                 xor     ebx, ebx
.text:004020A5                 push    edi             ; Size
.text:004020A6                 push    ebx             ; Flags
.text:004020A7                 push    dword ptr [eax+18h] ; HeapHandle
.text:004020AA                 mov     esi, ecx
.text:004020AC                 call    ds:__imp__RtlAllocateHeap@12 ; RtlAllocateHeap(x,x,x)
.text:004020B2                 mov     [esi+0ACh], eax
.text:004020B8                 mov     eax, large fs:30h
.text:004020BE                 push    edi             ; Size
.text:004020BF                 push    ebx             ; Flags
.text:004020C0                 push    dword ptr [eax+18h] ; HeapHandle
.text:004020C3                 call    ds:__imp__RtlAllocateHeap@12 ; RtlAllocateHeap(x,x,x)
.text:004020C9                 mov     [esi+0B4h], eax
.text:004020CF                 mov     eax, large fs:30h
.text:004020D5                 push    48h ; 'H'       ; Size
.text:004020D7                 push    ebx             ; Flags
.text:004020D8                 mov     [esi+0B8h], edi
.text:004020DE                 mov     [esi+0B0h], edi
.text:004020E4                 push    dword ptr [eax+18h] ; HeapHandle
.text:004020E7                 call    ds:__imp__RtlAllocateHeap@12 ; RtlAllocateHeap(x,x,x)
.text:004020ED                 test    eax, eax
.text:004020EF                 jz      short loc_4020FB
.text:004020F1                 mov     ecx, eax
.text:004020F3                 call    ds:__imp_??0KEYBOARD@@QAE@XZ ; KEYBOARD::KEYBOARD(void)
.text:004020F9                 jmp     short loc_4020FD
.text:004020FB ; ---------------------------------------------------------------------------
.text:004020FB
.text:004020FB loc_4020FB:                             ; CODE XREF: REPLACE::InitializeThings(void)+5A↑j
.text:004020FB                 mov     eax, ebx
.text:004020FD
.text:004020FD loc_4020FD:                             ; CODE XREF: REPLACE::InitializeThings(void)+64↑j
.text:004020FD                 mov     [esi+0BCh], eax
.text:00402103                 cmp     [esi+0ACh], ebx
.text:00402109                 jz      short loc_40215D
.text:0040210B                 cmp     [esi+0B4h], ebx
.text:00402111                 jz      short loc_40215D
.text:00402113                 test    eax, eax
.text:00402115                 jz      short loc_40215D
.text:00402117                 push    1
.text:00402119                 push    1
.text:0040211B                 mov     ecx, eax
.text:0040211D                 call    ds:__imp_?Initialize@KEYBOARD@@QAEEEE@Z ; KEYBOARD::Initialize(uchar,uchar)
.text:00402123                 call    ds:__imp_?EnableBreakHandling@KEYBOARD@@SGEXZ ; KEYBOARD::EnableBreakHandling(void)
.text:00402129                 pop     edi
.text:0040212A                 mov     [esi+88h], ebx
.text:00402130                 mov     [esi+8Ch], ebx
.text:00402136                 mov     [esi+98h], ebx
.text:0040213C                 mov     [esi+9Ch], ebx
.text:00402142                 mov     [esi+0A0h], ebx
.text:00402148                 mov     [esi+0A4h], ebx
.text:0040214E                 mov     [esi+0A8h], ebx
.text:00402154                 mov     [esi+90h], bl
.text:0040215A                 pop     esi
.text:0040215B                 pop     ebx
.text:0040215C                 retn
.text:0040215D ; ---------------------------------------------------------------------------
.text:0040215D
.text:0040215D loc_40215D:                             ; CODE XREF: REPLACE::InitializeThings(void)+74↑j
.text:0040215D                                         ; REPLACE::InitializeThings(void)+7C↑j ...
.text:0040215D                 push    8               ; unsigned int
.text:0040215F                 push    ebx             ; struct WSTRING *
.text:00402160                 push    5241h           ; unsigned int
.text:00402165                 mov     ecx, esi        ; this
.text:00402167                 call    ?DisplayMessageAndExit@REPLACE@@AAEXKPBVWSTRING@@K@Z ; REPLACE::DisplayMessageAndExit(ulong,WSTRING const *,ulong)
.text:00402167 ?InitializeThings@REPLACE@@AAEXXZ endp
.text:00402167
.text:00402167 ; ---------------------------------------------------------------------------
.text:0040216C                 db 0CCh
.text:0040216D
.text:0040216D ; =============== S U B R O U T I N E =======================================
.text:0040216D
.text:0040216D ; Attributes: bp-based frame
.text:0040216D
.text:0040216D ; void __thiscall REPLACE::DeallocateThings(REPLACE *__hidden this)
.text:0040216D ?DeallocateThings@REPLACE@@AAEXXZ proc near
.text:0040216D                                         ; CODE XREF: REPLACE::~REPLACE(void)+B↑p
.text:0040216D
.text:0040216D var_4           = dword ptr -4
.text:0040216D
.text:0040216D                 mov     edi, edi
.text:0040216F                 push    ebp
.text:00402170                 mov     ebp, esp
.text:00402172                 push    ecx
.text:00402173                 mov     eax, ___security_cookie
.text:00402178                 xor     eax, ebp
.text:0040217A                 mov     [ebp+var_4], eax
.text:0040217D                 push    ebx
.text:0040217E                 push    esi
.text:0040217F                 push    edi
.text:00402180                 mov     edi, ecx
.text:00402182                 mov     ebx, [edi+0A8h]
.text:00402188                 test    ebx, ebx
.text:0040218A                 jz      short loc_40219E
.text:0040218C                 mov     eax, [ebx]
.text:0040218E                 push    1
.text:00402190                 mov     esi, [eax]
.text:00402192                 mov     ecx, esi
.text:00402194                 call    ds:___guard_check_icall_fptr ; _guard_check_icall_nop(x)
.text:0040219A                 mov     ecx, ebx
.text:0040219C                 call    esi
.text:0040219E
.text:0040219E loc_40219E:                             ; CODE XREF: REPLACE::DeallocateThings(void)+1D↑j
.text:0040219E                 and     dword ptr [edi+0A8h], 0
.text:004021A5                 mov     ebx, [edi+0A0h]
.text:004021AB                 test    ebx, ebx
.text:004021AD                 jz      short loc_4021C1
.text:004021AF                 mov     eax, [ebx]
.text:004021B1                 push    1
.text:004021B3                 mov     esi, [eax]
.text:004021B5                 mov     ecx, esi
.text:004021B7                 call    ds:___guard_check_icall_fptr ; _guard_check_icall_nop(x)
.text:004021BD                 mov     ecx, ebx
.text:004021BF                 call    esi
.text:004021C1
.text:004021C1 loc_4021C1:                             ; CODE XREF: REPLACE::DeallocateThings(void)+40↑j
.text:004021C1                 and     dword ptr [edi+0A0h], 0
.text:004021C8                 mov     ebx, [edi+0A4h]
.text:004021CE                 test    ebx, ebx
.text:004021D0                 jz      short loc_4021E4
.text:004021D2                 mov     eax, [ebx]
.text:004021D4                 push    1
.text:004021D6                 mov     esi, [eax]
.text:004021D8                 mov     ecx, esi
.text:004021DA                 call    ds:___guard_check_icall_fptr ; _guard_check_icall_nop(x)
.text:004021E0                 mov     ecx, ebx
.text:004021E2                 call    esi
.text:004021E4
.text:004021E4 loc_4021E4:                             ; CODE XREF: REPLACE::DeallocateThings(void)+63↑j
.text:004021E4                 and     dword ptr [edi+0A4h], 0
.text:004021EB                 mov     ebx, [edi+0BCh]
.text:004021F1                 test    ebx, ebx
.text:004021F3                 jz      short loc_402207
.text:004021F5                 mov     eax, [ebx]
.text:004021F7                 push    1
.text:004021F9                 mov     esi, [eax]
.text:004021FB                 mov     ecx, esi
.text:004021FD                 call    ds:___guard_check_icall_fptr ; _guard_check_icall_nop(x)
.text:00402203                 mov     ecx, ebx
.text:00402205                 call    esi
.text:00402207
.text:00402207 loc_402207:                             ; CODE XREF: REPLACE::DeallocateThings(void)+86↑j
.text:00402207                 and     dword ptr [edi+0BCh], 0
.text:0040220E                 mov     eax, [edi+0ACh]
.text:00402214                 test    eax, eax
.text:00402216                 jz      short loc_402231
.text:00402218                 push    eax             ; P
.text:00402219                 mov     eax, large fs:30h
.text:0040221F                 push    0               ; Flags
.text:00402221                 push    dword ptr [eax+18h] ; HeapHandle
.text:00402224                 call    ds:__imp__RtlFreeHeap@12 ; RtlFreeHeap(x,x,x)
.text:0040222A                 and     dword ptr [edi+0ACh], 0
.text:00402231
.text:00402231 loc_402231:                             ; CODE XREF: REPLACE::DeallocateThings(void)+A9↑j
.text:00402231                 mov     eax, [edi+0B4h]
.text:00402237                 test    eax, eax
.text:00402239                 jz      short loc_402254
.text:0040223B                 push    eax             ; P
.text:0040223C                 mov     eax, large fs:30h
.text:00402242                 push    0               ; Flags
.text:00402244                 push    dword ptr [eax+18h] ; HeapHandle
.text:00402247                 call    ds:__imp__RtlFreeHeap@12 ; RtlFreeHeap(x,x,x)
.text:0040224D                 and     dword ptr [edi+0B4h], 0
.text:00402254
.text:00402254 loc_402254:                             ; CODE XREF: REPLACE::DeallocateThings(void)+CC↑j
.text:00402254                 mov     ecx, [ebp+var_4]
.text:00402257                 pop     edi
.text:00402258                 pop     esi
.text:00402259                 xor     ecx, ebp        ; StackCookie
.text:0040225B                 pop     ebx
.text:0040225C                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text:00402261                 mov     esp, ebp
.text:00402263                 pop     ebp
.text:00402264                 retn
.text:00402264 ?DeallocateThings@REPLACE@@AAEXXZ endp
.text:00402264
.text:00402265
.text:00402265 ; =============== S U B R O U T I N E =======================================
.text:00402265
.text:00402265 ; Attributes: bp-based frame info_from_lumina
.text:00402265
.text:00402265 ; unsigned __int8 __thiscall REPLACE::DoReplace(REPLACE *__hidden this)
.text:00402265 ?DoReplace@REPLACE@@QAEEXZ proc near    ; CODE XREF: _main+85↑p
.text:00402265
.text:00402265 var_B0          = dword ptr -0B0h
.text:00402265 var_AC          = dword ptr -0ACh
.text:00402265 var_A8          = byte ptr -0A8h
.text:00402265 var_4           = dword ptr -4
.text:00402265
.text:00402265                 mov     edi, edi
.text:00402267                 push    ebp
.text:00402268                 mov     ebp, esp
.text:0040226A                 sub     esp, 0B4h
.text:00402270                 mov     eax, ___security_cookie
.text:00402275                 xor     eax, ebp
.text:00402277                 mov     [ebp+var_4], eax
.text:0040227A                 push    ebx
.text:0040227B                 push    esi
.text:0040227C                 mov     ebx, ecx
.text:0040227E                 lea     ecx, [ebp+var_A8]
.text:00402284                 push    edi
.text:00402285                 call    ds:__imp_??0FSN_FILTER@@QAE@XZ ; FSN_FILTER::FSN_FILTER(void)
.text:0040228B                 lea     eax, [ebx+0A4h]
.text:00402291                 push    eax             ; struct WSTRING **
.text:00402292                 lea     ecx, [ebx+0A0h]
.text:00402298                 push    ecx             ; struct FSN_DIRECTORY **
.text:00402299                 push    dword ptr [ebx+88h] ; struct PATH *
.text:0040229F                 mov     ecx, ebx        ; this
.text:004022A1                 call    ?GetDirectoryAndPattern@REPLACE@@AAEXPAVPATH@@PAPAVFSN_DIRECTORY@@PAPAVWSTRING@@@Z ; REPLACE::GetDirectoryAndPattern(PATH *,FSN_DIRECTORY * *,WSTRING * *)
.text:004022A6                 mov     esi, [ebx+8Ch]
.text:004022AC                 push    0
.text:004022AE                 push    esi
.text:004022AF                 call    ds:__imp_?QueryDirectory@SYSTEM@@SGPAVFSN_DIRECTORY@@PBVPATH@@E@Z ; SYSTEM::QueryDirectory(PATH const *,uchar)
.text:004022B5                 mov     edi, eax
.text:004022B7                 mov     [ebp+var_B0], edi
.text:004022BD                 test    edi, edi
.text:004022BF                 jz      loc_402467
.text:004022C5                 cmp     byte ptr [ebx+95h], 0
.text:004022CC                 jz      loc_4023CF
.text:004022D2                 mov     eax, [ebx]
.text:004022D4                 push    0
.text:004022D6                 push    5222h
.text:004022DB                 mov     esi, [eax+10h]
.text:004022DE                 mov     ecx, esi
.text:004022E0                 call    ds:___guard_check_icall_fptr ; _guard_check_icall_nop(x)
.text:004022E6                 mov     ecx, ebx
.text:004022E8                 call    esi
.text:004022EA                 call    ds:__imp_?GotABreak@KEYBOARD@@SGEXZ ; KEYBOARD::GotABreak(void)
.text:004022F0                 test    al, al
.text:004022F2                 jz      short loc_4022FC
.text:004022F4                 push    3               ; Code
.text:004022F6
.text:004022F6 loc_4022F6:                             ; CODE XREF: REPLACE::DoReplace(void)+15F↓j
.text:004022F6                 call    ds:__imp__exit
.text:004022FC ; ---------------------------------------------------------------------------
.text:004022FC
.text:004022FC loc_4022FC:                             ; CODE XREF: REPLACE::DoReplace(void)+8D↑j
.text:004022FC                 mov     ecx, [ebx+0BCh]
.text:00402302                 call    ds:__imp_?DisableLineMode@KEYBOARD@@QAEEXZ ; KEYBOARD::DisableLineMode(void)
.text:00402308                 mov     eax, [ebx]
.text:0040230A                 mov     esi, [eax+1Ch]
.text:0040230D                 mov     ecx, esi
.text:0040230F                 call    ds:___guard_check_icall_fptr ; _guard_check_icall_nop(x)
.text:00402315                 mov     ecx, ebx
.text:00402317                 call    esi
.text:00402319                 mov     edi, eax
.text:0040231B                 lea     eax, [ebp+var_AC]
.text:00402321                 push    0
.text:00402323                 push    eax
.text:00402324                 mov     ecx, [edi]
.text:00402326                 mov     esi, [ecx+18h]
.text:00402329                 mov     ecx, esi
.text:0040232B                 call    ds:___guard_check_icall_fptr ; _guard_check_icall_nop(x)
.text:00402331                 mov     ecx, edi
.text:00402333                 call    esi
.text:00402335                 mov     ecx, [ebx+0BCh]
.text:0040233B                 call    ds:__imp_?EnableLineMode@KEYBOARD@@QAEEXZ ; KEYBOARD::EnableLineMode(void)
.text:00402341                 mov     eax, [ebx]
.text:00402343                 mov     esi, [eax+20h]
.text:00402346                 mov     ecx, esi
.text:00402348                 call    ds:___guard_check_icall_fptr ; _guard_check_icall_nop(x)
.text:0040234E                 mov     ecx, ebx
.text:00402350                 call    esi
.text:00402352                 push    [ebp+var_AC]
.text:00402358                 mov     edi, eax
.text:0040235A                 mov     ecx, [edi]
.text:0040235C                 mov     esi, [ecx+2Ch]
.text:0040235F                 mov     ecx, esi
.text:00402361                 call    ds:___guard_check_icall_fptr ; _guard_check_icall_nop(x)
.text:00402367                 mov     ecx, edi
.text:00402369                 call    esi
.text:0040236B                 mov     eax, [ebx]
.text:0040236D                 mov     esi, [eax+20h]
.text:00402370                 mov     ecx, esi
.text:00402372                 call    ds:___guard_check_icall_fptr ; _guard_check_icall_nop(x)
.text:00402378                 mov     ecx, ebx
.text:0040237A                 call    esi
.text:0040237C                 mov     edi, eax
.text:0040237E                 push    0Dh
.text:00402380                 mov     ecx, [edi]
.text:00402382                 mov     esi, [ecx+2Ch]
.text:00402385                 mov     ecx, esi
.text:00402387                 call    ds:___guard_check_icall_fptr ; _guard_check_icall_nop(x)
.text:0040238D                 mov     ecx, edi
.text:0040238F                 call    esi
.text:00402391                 mov     eax, [ebx]
.text:00402393                 mov     esi, [eax+20h]
.text:00402396                 mov     ecx, esi
.text:00402398                 call    ds:___guard_check_icall_fptr ; _guard_check_icall_nop(x)
.text:0040239E                 mov     ecx, ebx
.text:004023A0                 call    esi
.text:004023A2                 mov     edi, eax
.text:004023A4                 push    0Ah
.text:004023A6                 mov     ecx, [edi]
.text:004023A8                 mov     esi, [ecx+2Ch]
.text:004023AB                 mov     ecx, esi
.text:004023AD                 call    ds:___guard_check_icall_fptr ; _guard_check_icall_nop(x)
.text:004023B3                 mov     ecx, edi
.text:004023B5                 call    esi
.text:004023B7                 push    3
.text:004023B9                 pop     eax
.text:004023BA                 cmp     word ptr [ebp+var_AC], ax
.text:004023C1                 jnz     short loc_4023C9
.text:004023C3                 push    eax
.text:004023C4                 jmp     loc_4022F6
.text:004023C9 ; ---------------------------------------------------------------------------
.text:004023C9
.text:004023C9 loc_4023C9:                             ; CODE XREF: REPLACE::DoReplace(void)+15C↑j
.text:004023C9                 mov     edi, [ebp+var_B0]
.text:004023CF
.text:004023CF loc_4023CF:                             ; CODE XREF: REPLACE::DoReplace(void)+67↑j
.text:004023CF                 push    dword ptr [ebx+0A4h] ; struct WSTRING *
.text:004023D5                 push    dword ptr [ebx+0A0h] ; struct FSN_DIRECTORY *
.text:004023DB                 call    ?GetFileArray@REPLACE@@AAEPAVARRAY@@PAVFSN_DIRECTORY@@PAVWSTRING@@@Z ; REPLACE::GetFileArray(FSN_DIRECTORY *,WSTRING *)
.text:004023E0                 cmp     byte ptr [ebx+93h], 0
.text:004023E7                 mov     [ebx+0A8h], eax
.text:004023ED                 jz      short loc_40242D
.text:004023EF                 xor     esi, esi
.text:004023F1                 push    esi             ; struct PATH *
.text:004023F2                 push    edi             ; struct FSNODE *
.text:004023F3                 push    ebx             ; REPLACE *
.text:004023F4                 call    ?Replacer@REPLACE@@CGEPAXPAVFSNODE@@PAVPATH@@@Z ; REPLACE::Replacer(void *,FSNODE *,PATH *)
.text:004023F9                 lea     ecx, [ebp+var_A8]
.text:004023FF                 call    ds:__imp_?Initialize@FSN_FILTER@@QAEEXZ ; FSN_FILTER::Initialize(void)
.text:00402405                 push    esi
.text:00402406                 push    esi
.text:00402407                 push    10h
.text:00402409                 lea     ecx, [ebp+var_A8]
.text:0040240F                 call    ds:__imp_?SetAttributes@FSN_FILTER@@QAEEKKK@Z ; FSN_FILTER::SetAttributes(ulong,ulong,ulong)
.text:00402415                 push    offset ?Replacer@REPLACE@@CGEPAXPAVFSNODE@@PAVPATH@@@Z ; REPLACE::Replacer(void *,FSNODE *,PATH *)
.text:0040241A                 push    esi
.text:0040241B                 lea     eax, [ebp+var_A8]
.text:00402421                 mov     ecx, edi
.text:00402423                 push    eax
.text:00402424                 push    ebx
.text:00402425                 call    ds:__imp_?Traverse@FSN_DIRECTORY@@QBEEPAXPAVFSN_FILTER@@PAVPATH@@P6GE0PAVFSNODE@@2@Z@Z ; FSN_DIRECTORY::Traverse(void *,FSN_FILTER *,PATH *,uchar (*)(void *,FSNODE *,PATH *))
.text:0040242B                 jmp     short loc_402436
.text:0040242D ; ---------------------------------------------------------------------------
.text:0040242D
.text:0040242D loc_40242D:                             ; CODE XREF: REPLACE::DoReplace(void)+188↑j
.text:0040242D                 push    0               ; struct PATH *
.text:0040242F                 push    edi             ; struct FSNODE *
.text:00402430                 push    ebx             ; REPLACE *
.text:00402431                 call    ?Replacer@REPLACE@@CGEPAXPAVFSNODE@@PAVPATH@@@Z ; REPLACE::Replacer(void *,FSNODE *,PATH *)
.text:00402436
.text:00402436 loc_402436:                             ; CODE XREF: REPLACE::DoReplace(void)+1C6↑j
.text:00402436                 mov     ecx, [edi]
.text:00402438                 push    1
.text:0040243A                 mov     esi, [ecx]
.text:0040243C                 mov     ecx, esi
.text:0040243E                 call    ds:___guard_check_icall_fptr ; _guard_check_icall_nop(x)
.text:00402444                 mov     ecx, edi
.text:00402446                 call    esi
.text:00402448                 lea     ecx, [ebp+var_A8]
.text:0040244E                 call    ds:__imp_??1FSN_FILTER@@UAE@XZ ; FSN_FILTER::~FSN_FILTER(void)
.text:00402454                 mov     ecx, [ebp+var_4]
.text:00402457                 mov     al, 1
.text:00402459                 pop     edi
.text:0040245A                 pop     esi
.text:0040245B                 xor     ecx, ebp        ; StackCookie
.text:0040245D                 pop     ebx
.text:0040245E                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text:00402463                 mov     esp, ebp
.text:00402465                 pop     ebp
.text:00402466                 retn
.text:00402467 ; ---------------------------------------------------------------------------
.text:00402467
.text:00402467 loc_402467:                             ; CODE XREF: REPLACE::DoReplace(void)+5A↑j
.text:00402467                 push    3               ; unsigned int
.text:00402469                 mov     ecx, esi        ; this
.text:0040246B                 call    ?GetPathString@PATH@@QBEPBVWSTRING@@XZ ; PATH::GetPathString(void)
.text:00402470                 push    eax             ; struct WSTRING *
.text:00402471                 push    5244h           ; unsigned int
.text:00402476                 mov     ecx, ebx        ; this
.text:00402478                 call    ?DisplayMessageAndExit@REPLACE@@AAEXKPBVWSTRING@@K@Z ; REPLACE::DisplayMessageAndExit(ulong,WSTRING const *,ulong)
.text:00402478 ?DoReplace@REPLACE@@QAEEXZ endp
.text:00402478
.text:00402478 ; ---------------------------------------------------------------------------
.text:0040247D                 align 2
.text:0040247E
.text:0040247E ; =============== S U B R O U T I N E =======================================
.text:0040247E
.text:0040247E ; Attributes: bp-based frame
.text:0040247E
.text:0040247E ; void __thiscall REPLACE::GetDirectoryAndPattern(REPLACE *__hidden this, struct PATH *, struct FSN_DIRECTORY **, struct WSTRING **)
.text:0040247E ?GetDirectoryAndPattern@REPLACE@@AAEXPAVPATH@@PAPAVFSN_DIRECTORY@@PAPAVWSTRING@@@Z proc near
.text:0040247E                                         ; CODE XREF: REPLACE::DoReplace(void)+3C↑p
.text:0040247E
.text:0040247E var_258         = dword ptr -258h
.text:0040247E var_254         = dword ptr -254h
.text:0040247E var_250         = dword ptr -250h
.text:0040247E var_24C         = dword ptr -24Ch
.text:0040247E var_248         = byte ptr -248h
.text:0040247E var_4           = dword ptr -4
.text:0040247E arg_0           = dword ptr  8
.text:0040247E arg_4           = dword ptr  0Ch
.text:0040247E arg_8           = dword ptr  10h
.text:0040247E
.text:0040247E                 mov     edi, edi
.text:00402480                 push    ebp
.text:00402481                 mov     ebp, esp
.text:00402483                 sub     esp, 258h
.text:00402489                 mov     eax, ___security_cookie
.text:0040248E                 xor     eax, ebp
.text:00402490                 mov     [ebp+var_4], eax
.text:00402493                 mov     eax, [ebp+arg_4]
.text:00402496                 push    ebx
.text:00402497                 push    esi
.text:00402498                 mov     esi, ecx
.text:0040249A                 mov     [ebp+var_250], eax
.text:004024A0                 mov     eax, [ebp+arg_8]
.text:004024A3                 lea     ecx, [ebp+var_248]
.text:004024A9                 push    edi
.text:004024AA                 mov     edi, [ebp+arg_0]
.text:004024AD                 mov     [ebp+var_24C], esi
.text:004024B3                 mov     [ebp+var_258], eax
.text:004024B9                 call    ds:__imp_??0PATH@@QAE@XZ ; PATH::PATH(void)
.text:004024BF                 push    0
.text:004024C1                 push    edi
.text:004024C2                 call    ds:__imp_?QueryDirectory@SYSTEM@@SGPAVFSN_DIRECTORY@@PBVPATH@@E@Z ; SYSTEM::QueryDirectory(PATH const *,uchar)
.text:004024C8                 test    eax, eax
.text:004024CA                 jnz     loc_40256E
.text:004024D0                 mov     ecx, edi        ; this
.text:004024D2                 call    ?QueryName@PATH@@QBEPAVWSTRING@@XZ ; PATH::QueryName(void)
.text:004024D7                 mov     ebx, eax
.text:004024D9                 test    ebx, ebx
.text:004024DB                 jz      loc_40256E
.text:004024E1                 push    0FFFFFFFFh
.text:004024E3                 push    0
.text:004024E5                 mov     ecx, ebx
.text:004024E7                 call    ds:__imp_?QueryString@WSTRING@@QBEPAV1@KK@Z ; WSTRING::QueryString(ulong,ulong)
.text:004024ED                 mov     [ebp+var_254], eax
.text:004024F3                 test    eax, eax
.text:004024F5                 jz      short loc_40256E
.text:004024F7                 mov     ecx, [ebx]
.text:004024F9                 push    1
.text:004024FB                 mov     esi, [ecx]
.text:004024FD                 mov     ecx, esi
.text:004024FF                 call    ds:___guard_check_icall_fptr ; _guard_check_icall_nop(x)
.text:00402505                 mov     ecx, ebx
.text:00402507                 call    esi
.text:00402509                 push    1
.text:0040250B                 push    edi
.text:0040250C                 lea     ecx, [ebp+var_248]
.text:00402512                 call    ds:__imp_?Initialize@PATH@@QAEEPBV1@E@Z ; PATH::Initialize(PATH const *,uchar)
.text:00402518                 lea     ecx, [ebp+var_248]
.text:0040251E                 call    ds:__imp_?TruncateBase@PATH@@QAEEXZ ; PATH::TruncateBase(void)
.text:00402524                 push    0
.text:00402526                 lea     eax, [ebp+var_248]
.text:0040252C                 push    eax
.text:0040252D                 call    ds:__imp_?QueryDirectory@SYSTEM@@SGPAVFSN_DIRECTORY@@PBVPATH@@E@Z ; SYSTEM::QueryDirectory(PATH const *,uchar)
.text:00402533                 mov     ecx, eax
.text:00402535                 test    ecx, ecx
.text:00402537                 jz      short loc_402581
.text:00402539                 mov     eax, [ebp+var_250]
.text:0040253F                 mov     [eax], ecx
.text:00402541                 mov     ecx, [ebp+var_258]
.text:00402547                 mov     eax, [ebp+var_254]
.text:0040254D                 mov     [ecx], eax
.text:0040254F                 lea     ecx, [ebp+var_248]
.text:00402555                 call    ds:__imp_??1PATH@@UAE@XZ ; PATH::~PATH(void)
.text:0040255B                 mov     ecx, [ebp+var_4]
.text:0040255E                 pop     edi
.text:0040255F                 pop     esi
.text:00402560                 xor     ecx, ebp        ; StackCookie
.text:00402562                 pop     ebx
.text:00402563                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text:00402568                 mov     esp, ebp
.text:0040256A                 pop     ebp
.text:0040256B                 retn    0Ch
.text:0040256E ; ---------------------------------------------------------------------------
.text:0040256E
.text:0040256E loc_40256E:                             ; CODE XREF: REPLACE::GetDirectoryAndPattern(PATH *,FSN_DIRECTORY * *,WSTRING * *)+4C↑j
.text:0040256E                                         ; REPLACE::GetDirectoryAndPattern(PATH *,FSN_DIRECTORY * *,WSTRING * *)+5D↑j ...
.text:0040256E                 push    2
.text:00402570                 mov     ecx, edi        ; this
.text:00402572                 call    ?GetPathString@PATH@@QBEPBVWSTRING@@XZ ; PATH::GetPathString(void)
.text:00402577                 push    eax
.text:00402578                 push    523Eh
.text:0040257D                 mov     ecx, esi
.text:0040257F                 jmp     short loc_402596
.text:00402581 ; ---------------------------------------------------------------------------
.text:00402581
.text:00402581 loc_402581:                             ; CODE XREF: REPLACE::GetDirectoryAndPattern(PATH *,FSN_DIRECTORY * *,WSTRING * *)+B9↑j
.text:00402581                 push    3               ; unsigned int
.text:00402583                 mov     ecx, edi        ; this
.text:00402585                 call    ?GetPathString@PATH@@QBEPBVWSTRING@@XZ ; PATH::GetPathString(void)
.text:0040258A                 mov     ecx, [ebp+var_24C] ; this
.text:00402590                 push    eax             ; struct WSTRING *
.text:00402591                 push    5244h           ; unsigned int
.text:00402596
.text:00402596 loc_402596:                             ; CODE XREF: REPLACE::GetDirectoryAndPattern(PATH *,FSN_DIRECTORY * *,WSTRING * *)+101↑j
.text:00402596                 call    ?DisplayMessageAndExit@REPLACE@@AAEXKPBVWSTRING@@K@Z ; REPLACE::DisplayMessageAndExit(ulong,WSTRING const *,ulong)
.text:00402596 ?GetDirectoryAndPattern@REPLACE@@AAEXPAVPATH@@PAPAVFSN_DIRECTORY@@PAPAVWSTRING@@@Z endp
.text:00402596
.text:00402596 ; ---------------------------------------------------------------------------
.text:0040259B                 align 4
.text:0040259C
.text:0040259C ; =============== S U B R O U T I N E =======================================
.text:0040259C
.text:0040259C ; Attributes: bp-based frame
.text:0040259C
.text:0040259C ; struct ARRAY *__thiscall REPLACE::GetFileArray(REPLACE *__hidden this, struct FSN_DIRECTORY *, struct WSTRING *)
.text:0040259C ?GetFileArray@REPLACE@@AAEPAVARRAY@@PAVFSN_DIRECTORY@@PAVWSTRING@@@Z proc near
.text:0040259C                                         ; CODE XREF: REPLACE::DoReplace(void)+176↑p
.text:0040259C
.text:0040259C var_A8          = byte ptr -0A8h
.text:0040259C var_4           = dword ptr -4
.text:0040259C arg_0           = dword ptr  8
.text:0040259C arg_4           = dword ptr  0Ch
.text:0040259C
.text:0040259C                 mov     edi, edi
.text:0040259E                 push    ebp
.text:0040259F                 mov     ebp, esp
.text:004025A1                 sub     esp, 0A8h
.text:004025A7                 mov     eax, ___security_cookie
.text:004025AC                 xor     eax, ebp
.text:004025AE                 mov     [ebp+var_4], eax
.text:004025B1                 push    esi
.text:004025B2                 mov     esi, [ebp+arg_4]
.text:004025B5                 lea     ecx, [ebp+var_A8]
.text:004025BB                 push    edi
.text:004025BC                 mov     edi, [ebp+arg_0]
.text:004025BF                 call    ds:__imp_??0FSN_FILTER@@QAE@XZ ; FSN_FILTER::FSN_FILTER(void)
.text:004025C5                 lea     ecx, [ebp+var_A8]
.text:004025CB                 call    ds:__imp_?Initialize@FSN_FILTER@@QAEEXZ ; FSN_FILTER::Initialize(void)
.text:004025D1                 push    esi
.text:004025D2                 lea     ecx, [ebp+var_A8]
.text:004025D8                 call    ds:__imp_?SetFileName@FSN_FILTER@@QAEEPBVWSTRING@@@Z ; FSN_FILTER::SetFileName(WSTRING const *)
.text:004025DE                 push    10h
.text:004025E0                 push    0
.text:004025E2                 push    0
.text:004025E4                 lea     ecx, [ebp+var_A8]
.text:004025EA                 call    ds:__imp_?SetAttributes@FSN_FILTER@@QAEEKKK@Z ; FSN_FILTER::SetAttributes(ulong,ulong,ulong)
.text:004025F0                 lea     eax, [ebp+var_A8]
.text:004025F6                 mov     ecx, edi
.text:004025F8                 push    eax
.text:004025F9                 call    ds:__imp_?QueryFsnodeArray@FSN_DIRECTORY@@QBEPAVARRAY@@PAVFSN_FILTER@@@Z ; FSN_DIRECTORY::QueryFsnodeArray(FSN_FILTER *)
.text:004025FF                 lea     ecx, [ebp+var_A8]
.text:00402605                 mov     esi, eax
.text:00402607                 call    ds:__imp_??1FSN_FILTER@@UAE@XZ ; FSN_FILTER::~FSN_FILTER(void)
.text:0040260D                 mov     ecx, [ebp+var_4]
.text:00402610                 mov     eax, esi
.text:00402612                 pop     edi
.text:00402613                 xor     ecx, ebp        ; StackCookie
.text:00402615                 pop     esi
.text:00402616                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text:0040261B                 mov     esp, ebp
.text:0040261D                 pop     ebp
.text:0040261E                 retn    8
.text:0040261E ?GetFileArray@REPLACE@@AAEPAVARRAY@@PAVFSN_DIRECTORY@@PAVWSTRING@@@Z endp
.text:0040261E
.text:0040261E ; ---------------------------------------------------------------------------
.text:00402621                 align 10h
.text:00402630
.text:00402630 ; =============== S U B R O U T I N E =======================================
.text:00402630
.text:00402630 ; Attributes: bp-based frame
.text:00402630
.text:00402630 ; unsigned __int8 __stdcall REPLACE::Replacer(REPLACE *, struct FSNODE *, struct PATH *)
.text:00402630 ?Replacer@REPLACE@@CGEPAXPAVFSNODE@@PAVPATH@@@Z proc near
.text:00402630                                         ; CODE XREF: REPLACE::DoReplace(void)+18F↑p
.text:00402630                                         ; REPLACE::DoReplace(void)+1CC↑p
.text:00402630                                         ; DATA XREF: ...
.text:00402630
.text:00402630 arg_0           = dword ptr  8
.text:00402630 arg_4           = dword ptr  0Ch
.text:00402630
.text:00402630                 mov     edi, edi
.text:00402632                 push    ebp
.text:00402633                 mov     ebp, esp
.text:00402635                 call    ds:__imp_?GotABreak@KEYBOARD@@SGEXZ ; KEYBOARD::GotABreak(void)
.text:0040263B                 test    al, al
.text:0040263D                 jz      short loc_402647
.text:0040263F                 push    3               ; Code
.text:00402641                 call    ds:__imp__exit
.text:00402647 ; ---------------------------------------------------------------------------
.text:00402647
.text:00402647 loc_402647:                             ; CODE XREF: REPLACE::Replacer(void *,FSNODE *,PATH *)+D↑j
.text:00402647                 mov     ecx, [ebp+arg_0] ; this
.text:0040264A                 push    [ebp+arg_4]     ; struct FSN_DIRECTORY *
.text:0040264D                 cmp     byte ptr [ecx+90h], 0
.text:00402654                 jz      short loc_40265D
.text:00402656                 call    ?AddFiles@REPLACE@@AAEEPAVFSN_DIRECTORY@@@Z ; REPLACE::AddFiles(FSN_DIRECTORY *)
.text:0040265B                 jmp     short loc_402662
.text:0040265D ; ---------------------------------------------------------------------------
.text:0040265D
.text:0040265D loc_40265D:                             ; CODE XREF: REPLACE::Replacer(void *,FSNODE *,PATH *)+24↑j
.text:0040265D                 call    ?ReplaceFiles@REPLACE@@AAEEPAVFSN_DIRECTORY@@@Z ; REPLACE::ReplaceFiles(FSN_DIRECTORY *)
.text:00402662
.text:00402662 loc_402662:                             ; CODE XREF: REPLACE::Replacer(void *,FSNODE *,PATH *)+2B↑j
.text:00402662                 pop     ebp
.text:00402663                 retn    0Ch
.text:00402663 ?Replacer@REPLACE@@CGEPAXPAVFSNODE@@PAVPATH@@@Z endp
.text:00402663
.text:00402666
.text:00402666 ; =============== S U B R O U T I N E =======================================
.text:00402666
.text:00402666 ; Attributes: bp-based frame
.text:00402666
.text:00402666 ; unsigned __int8 __thiscall REPLACE::AddFiles(REPLACE *__hidden this, struct FSN_DIRECTORY *)
.text:00402666 ?AddFiles@REPLACE@@AAEEPAVFSN_DIRECTORY@@@Z proc near
.text:00402666                                         ; CODE XREF: REPLACE::Replacer(void *,FSNODE *,PATH *)+26↑p
.text:00402666
.text:00402666 var_250         = dword ptr -250h
.text:00402666 var_24C         = dword ptr -24Ch
.text:00402666 var_248         = byte ptr -248h
.text:00402666 var_38          = byte ptr -38h
.text:00402666 var_4           = dword ptr -4
.text:00402666 arg_0           = dword ptr  8
.text:00402666
.text:00402666                 mov     edi, edi
.text:00402668                 push    ebp
.text:00402669                 mov     ebp, esp
.text:0040266B                 sub     esp, 250h
.text:00402671                 mov     eax, ___security_cookie
.text:00402676                 xor     eax, ebp
.text:00402678                 mov     [ebp+var_4], eax
.text:0040267B                 push    ebx
.text:0040267C                 push    esi
.text:0040267D                 mov     esi, [ebp+arg_0]
.text:00402680                 mov     ebx, ecx
.text:00402682                 push    edi
.text:00402683                 lea     ecx, [ebp+var_248]
.text:00402689                 call    ds:__imp_??0PATH@@QAE@XZ ; PATH::PATH(void)
.text:0040268F                 push    0
.text:00402691                 lea     eax, [esi+8]
.text:00402694                 push    eax
.text:00402695                 lea     ecx, [ebp+var_248]
.text:0040269B                 call    ds:__imp_?Initialize@PATH@@QAEEPBV1@E@Z ; PATH::Initialize(PATH const *,uchar)
.text:004026A1                 mov     edi, [ebx+0A8h]
.text:004026A7                 mov     eax, [edi]
.text:004026A9                 mov     esi, [eax+18h]
.text:004026AC                 mov     ecx, esi
.text:004026AE                 call    ds:___guard_check_icall_fptr ; _guard_check_icall_nop(x)
.text:004026B4                 mov     ecx, edi
.text:004026B6                 call    esi
.text:004026B8                 mov     edi, eax
.text:004026BA                 test    edi, edi
.text:004026BC                 jnz     loc_4027A6
.text:004026C2                 jmp     loc_4027F2
.text:004026C7 ; ---------------------------------------------------------------------------
.text:004026C7
.text:004026C7 loc_4026C7:                             ; CODE XREF: REPLACE::AddFiles(FSN_DIRECTORY *)+153↓j
.text:004026C7                 add     eax, 8
.text:004026CA                 mov     ecx, eax        ; this
.text:004026CC                 mov     [ebp+var_250], eax
.text:004026D2                 call    ?QueryName@PATH@@QBEPAVWSTRING@@XZ ; PATH::QueryName(void)
.text:004026D7                 mov     esi, eax
.text:004026D9                 mov     [ebp+var_24C], esi
.text:004026DF                 test    esi, esi
.text:004026E1                 jz      loc_4027F2
.text:004026E7                 push    0
.text:004026E9                 push    esi
.text:004026EA                 lea     ecx, [ebp+var_248]
.text:004026F0                 call    ds:__imp_?AppendBase@PATH@@QAEEPBVWSTRING@@E@Z ; PATH::AppendBase(WSTRING const *,uchar)
.text:004026F6                 mov     ecx, [esi]
.text:004026F8                 push    1
.text:004026FA                 mov     esi, [ecx]
.text:004026FC                 mov     ecx, esi
.text:004026FE                 call    ds:___guard_check_icall_fptr ; _guard_check_icall_nop(x)
.text:00402704                 mov     ecx, [ebp+var_24C]
.text:0040270A                 call    esi
.text:0040270C                 push    0
.text:0040270E                 push    0
.text:00402710                 lea     eax, [ebp+var_248]
.text:00402716                 push    eax
.text:00402717                 call    ds:__imp_?QueryFile@SYSTEM@@SGPAVFSN_FILE@@PBVPATH@@EPAE@Z ; SYSTEM::QueryFile(PATH const *,uchar,uchar *)
.text:0040271D                 mov     [ebp+var_24C], eax
.text:00402723                 test    eax, eax
.text:00402725                 jnz     short loc_402784
.text:00402727                 cmp     [ebx+91h], al
.text:0040272D                 jz      short loc_402746
.text:0040272F                 lea     eax, [ebp+var_248]
.text:00402735                 mov     ecx, ebx        ; this
.text:00402737                 push    eax             ; struct PATH *
.text:00402738                 push    5224h           ; unsigned int
.text:0040273D                 call    ?Prompt@REPLACE@@AAEEKPBVPATH@@@Z ; REPLACE::Prompt(ulong,PATH const *)
.text:00402742                 test    al, al
.text:00402744                 jz      short loc_40279A
.text:00402746
.text:00402746 loc_402746:                             ; CODE XREF: REPLACE::AddFiles(FSN_DIRECTORY *)+C7↑j
.text:00402746                 mov     esi, [ebx]
.text:00402748                 lea     eax, [ebp+var_38]
.text:0040274B                 push    eax
.text:0040274C                 push    offset aW       ; "%W"
.text:00402751                 push    0
.text:00402753                 mov     ecx, [esi+0Ch]
.text:00402756                 push    521Dh
.text:0040275B                 push    ebx
.text:0040275C                 call    ds:___guard_check_icall_fptr ; _guard_check_icall_nop(x)
.text:00402762                 call    dword ptr [esi+0Ch]
.text:00402765                 add     esp, 14h
.text:00402768                 lea     eax, [ebp+var_248]
.text:0040276E                 mov     ecx, ebx        ; this
.text:00402770                 push    eax             ; struct PATH *
.text:00402771                 push    [ebp+var_250]   ; struct PATH *
.text:00402777                 call    ?CopyTheFile@REPLACE@@AAEEPBVPATH@@0@Z ; REPLACE::CopyTheFile(PATH const *,PATH const *)
.text:0040277C                 inc     dword ptr [ebx+98h]
.text:00402782                 jmp     short loc_40279A
.text:00402784 ; ---------------------------------------------------------------------------
.text:00402784
.text:00402784 loc_402784:                             ; CODE XREF: REPLACE::AddFiles(FSN_DIRECTORY *)+BF↑j
.text:00402784                 mov     eax, [eax]
.text:00402786                 push    1
.text:00402788                 mov     esi, [eax]
.text:0040278A                 mov     ecx, esi
.text:0040278C                 call    ds:___guard_check_icall_fptr ; _guard_check_icall_nop(x)
.text:00402792                 mov     ecx, [ebp+var_24C]
.text:00402798                 call    esi
.text:0040279A
.text:0040279A loc_40279A:                             ; CODE XREF: REPLACE::AddFiles(FSN_DIRECTORY *)+DE↑j
.text:0040279A                                         ; REPLACE::AddFiles(FSN_DIRECTORY *)+11C↑j
.text:0040279A                 lea     ecx, [ebp+var_248]
.text:004027A0                 call    ds:__imp_?TruncateBase@PATH@@QAEEXZ ; PATH::TruncateBase(void)
.text:004027A6
.text:004027A6 loc_4027A6:                             ; CODE XREF: REPLACE::AddFiles(FSN_DIRECTORY *)+56↑j
.text:004027A6                 mov     eax, [edi]
.text:004027A8                 mov     esi, [eax+14h]
.text:004027AB                 mov     ecx, esi
.text:004027AD                 call    ds:___guard_check_icall_fptr ; _guard_check_icall_nop(x)
.text:004027B3                 mov     ecx, edi
.text:004027B5                 call    esi
.text:004027B7                 test    eax, eax
.text:004027B9                 jnz     loc_4026C7
.text:004027BF                 mov     ecx, [edi]
.text:004027C1                 push    1
.text:004027C3                 mov     esi, [ecx]
.text:004027C5                 mov     ecx, esi
.text:004027C7                 call    ds:___guard_check_icall_fptr ; _guard_check_icall_nop(x)
.text:004027CD                 mov     ecx, edi
.text:004027CF                 call    esi
.text:004027D1                 lea     ecx, [ebp+var_248]
.text:004027D7                 call    ds:__imp_??1PATH@@UAE@XZ ; PATH::~PATH(void)
.text:004027DD                 mov     ecx, [ebp+var_4]
.text:004027E0                 mov     al, 1
.text:004027E2                 pop     edi
.text:004027E3                 pop     esi
.text:004027E4                 xor     ecx, ebp        ; StackCookie
.text:004027E6                 pop     ebx
.text:004027E7                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text:004027EC                 mov     esp, ebp
.text:004027EE                 pop     ebp
.text:004027EF                 retn    4
.text:004027F2 ; ---------------------------------------------------------------------------
.text:004027F2
.text:004027F2 loc_4027F2:                             ; CODE XREF: REPLACE::AddFiles(FSN_DIRECTORY *)+5C↑j
.text:004027F2                                         ; REPLACE::AddFiles(FSN_DIRECTORY *)+7B↑j
.text:004027F2                 push    8               ; unsigned int
.text:004027F4                 push    0               ; struct WSTRING *
.text:004027F6                 push    5241h           ; unsigned int
.text:004027FB                 mov     ecx, ebx        ; this
.text:004027FD                 call    ?DisplayMessageAndExit@REPLACE@@AAEXKPBVWSTRING@@K@Z ; REPLACE::DisplayMessageAndExit(ulong,WSTRING const *,ulong)
.text:004027FD ?AddFiles@REPLACE@@AAEEPAVFSN_DIRECTORY@@@Z endp
.text:004027FD
.text:004027FD ; ---------------------------------------------------------------------------
.text:00402802                 db 0CCh
.text:00402803
.text:00402803 ; =============== S U B R O U T I N E =======================================
.text:00402803
.text:00402803 ; Attributes: bp-based frame info_from_lumina
.text:00402803
.text:00402803 ; unsigned __int8 __thiscall REPLACE::ReplaceFiles(REPLACE *__hidden this, struct FSN_DIRECTORY *)
.text:00402803 ?ReplaceFiles@REPLACE@@AAEEPAVFSN_DIRECTORY@@@Z proc near
.text:00402803                                         ; CODE XREF: REPLACE::Replacer(void *,FSNODE *,PATH *):loc_40265D↑p
.text:00402803
.text:00402803 var_260         = dword ptr -260h
.text:00402803 var_25C         = dword ptr -25Ch
.text:00402803 var_258         = dword ptr -258h
.text:00402803 var_254         = dword ptr -254h
.text:00402803 var_250         = dword ptr -250h
.text:00402803 var_249         = byte ptr -249h
.text:00402803 var_248         = byte ptr -248h
.text:00402803 var_38          = byte ptr -38h
.text:00402803 var_4           = dword ptr -4
.text:00402803 arg_0           = dword ptr  8
.text:00402803
.text:00402803                 mov     edi, edi
.text:00402805                 push    ebp
.text:00402806                 mov     ebp, esp
.text:00402808                 sub     esp, 260h
.text:0040280E                 mov     eax, ___security_cookie
.text:00402813                 xor     eax, ebp
.text:00402815                 mov     [ebp+var_4], eax
.text:00402818                 push    ebx
.text:00402819                 push    esi
.text:0040281A                 mov     esi, [ebp+arg_0]
.text:0040281D                 mov     ebx, ecx
.text:0040281F                 push    edi
.text:00402820                 lea     ecx, [ebp+var_248]
.text:00402826                 call    ds:__imp_??0PATH@@QAE@XZ ; PATH::PATH(void)
.text:0040282C                 push    0
.text:0040282E                 lea     eax, [esi+8]
.text:00402831                 mov     [ebp+var_249], 1
.text:00402838                 push    eax
.text:00402839                 lea     ecx, [ebp+var_248]
.text:0040283F                 call    ds:__imp_?Initialize@PATH@@QAEEPBV1@E@Z ; PATH::Initialize(PATH const *,uchar)
.text:00402845                 mov     edi, [ebx+0A8h]
.text:0040284B                 mov     eax, [edi]
.text:0040284D                 mov     esi, [eax+18h]
.text:00402850                 mov     ecx, esi
.text:00402852                 call    ds:___guard_check_icall_fptr ; _guard_check_icall_nop(x)
.text:00402858                 mov     ecx, edi
.text:0040285A                 call    esi
.text:0040285C                 mov     edi, eax
.text:0040285E                 mov     [ebp+var_260], edi
.text:00402864                 test    edi, edi
.text:00402866                 jz      loc_402AF5
.text:0040286C                 mov     eax, [edi]
.text:0040286E                 mov     esi, [eax+14h]
.text:00402871                 mov     ecx, esi
.text:00402873                 call    ds:___guard_check_icall_fptr ; _guard_check_icall_nop(x)
.text:00402879                 mov     ecx, edi
.text:0040287B                 call    esi
.text:0040287D                 mov     esi, eax
.text:0040287F                 mov     [ebp+var_250], esi
.text:00402885                 jmp     loc_402A9D
.text:0040288A ; ---------------------------------------------------------------------------
.text:0040288A
.text:0040288A loc_40288A:                             ; CODE XREF: REPLACE::ReplaceFiles(FSN_DIRECTORY *)+29C↓j
.text:0040288A                 call    ds:__imp_?GotABreak@KEYBOARD@@SGEXZ ; KEYBOARD::GotABreak(void)
.text:00402890                 test    al, al
.text:00402892                 jnz     loc_402AED
.text:00402898                 lea     eax, [esi+8]
.text:0040289B                 mov     ecx, eax        ; this
.text:0040289D                 mov     [ebp+var_25C], eax
.text:004028A3                 call    ?QueryName@PATH@@QBEPAVWSTRING@@XZ ; PATH::QueryName(void)
.text:004028A8                 mov     edi, eax
.text:004028AA                 test    edi, edi
.text:004028AC                 jz      loc_402AF5
.text:004028B2                 push    0
.text:004028B4                 push    edi
.text:004028B5                 lea     ecx, [ebp+var_248]
.text:004028BB                 call    ds:__imp_?AppendBase@PATH@@QAEEPBVWSTRING@@E@Z ; PATH::AppendBase(WSTRING const *,uchar)
.text:004028C1                 mov     eax, [edi]
.text:004028C3                 push    1
.text:004028C5                 mov     esi, [eax]
.text:004028C7                 mov     ecx, esi
.text:004028C9                 call    ds:___guard_check_icall_fptr ; _guard_check_icall_nop(x)
.text:004028CF                 mov     ecx, edi
.text:004028D1                 call    esi
.text:004028D3                 xor     esi, esi
.text:004028D5                 lea     eax, [ebp+var_248]
.text:004028DB                 push    esi
.text:004028DC                 push    esi
.text:004028DD                 push    eax
.text:004028DE                 call    ds:__imp_?QueryFile@SYSTEM@@SGPAVFSN_FILE@@PBVPATH@@EPAE@Z ; SYSTEM::QueryFile(PATH const *,uchar,uchar *)
.text:004028E4                 mov     edi, eax
.text:004028E6                 mov     [ebp+var_258], edi
.text:004028EC                 test    edi, edi
.text:004028EE                 jz      loc_402A72
.text:004028F4                 cmp     byte ptr [ebx+94h], 0
.text:004028FB                 jz      loc_4029C4
.text:00402901                 mov     eax, [ebp+var_250]
.text:00402907                 push    esi
.text:00402908                 mov     eax, [eax]
.text:0040290A                 mov     esi, [eax+10h]
.text:0040290D                 mov     ecx, esi
.text:0040290F                 call    ds:___guard_check_icall_fptr ; _guard_check_icall_nop(x)
.text:00402915                 mov     ecx, [ebp+var_250]
.text:0040291B                 call    esi
.text:0040291D                 mov     [ebp+var_250], eax
.text:00402923                 mov     eax, [edi]
.text:00402925                 push    0
.text:00402927                 mov     esi, [eax+10h]
.text:0040292A                 mov     ecx, esi
.text:0040292C                 call    ds:___guard_check_icall_fptr ; _guard_check_icall_nop(x)
.text:00402932                 mov     ecx, edi
.text:00402934                 call    esi
.text:00402936                 mov     edx, [ebp+var_250]
.text:0040293C                 mov     ecx, eax
.text:0040293E                 mov     [ebp+var_254], ecx
.text:00402944                 test    edx, edx
.text:00402946                 jz      loc_402AF5
.text:0040294C                 test    ecx, ecx
.text:0040294E                 jz      loc_402AF5
.text:00402954                 mov     eax, ds:__imp_??_7OBJECT@@6B@ ; const OBJECT::`vftable'
.text:00402959                 lea     esi, [edx+10h]
.text:0040295C                 sub     esp, 20h
.text:0040295F                 mov     edi, esp
.text:00402961                 mov     [edi], eax
.text:00402963                 mov     eax, [edx+4]
.text:00402966                 mov     [edi+4], eax
.text:00402969                 mov     dword ptr [edi], offset ??_7TIMEINFO@@6B@ ; const TIMEINFO::`vftable'
.text:0040296F                 mov     eax, [edx+8]
.text:00402972                 mov     [edi+8], eax
.text:00402975                 mov     eax, [edx+0Ch]
.text:00402978                 mov     [edi+0Ch], eax
.text:0040297B                 add     edi, 10h
.text:0040297E                 movsd
.text:0040297F                 movsd
.text:00402980                 movsd
.text:00402981                 movsd
.text:00402982                 call    ds:__imp_??MTIMEINFO@@QBEEV0@@Z ; TIMEINFO::operator<(TIMEINFO)
.text:00402988                 mov     edi, [ebp+var_250]
.text:0040298E                 mov     [ebp+var_249], al
.text:00402994                 push    1
.text:00402996                 mov     eax, [edi]
.text:00402998                 mov     esi, [eax]
.text:0040299A                 mov     ecx, esi
.text:0040299C                 call    ds:___guard_check_icall_fptr ; _guard_check_icall_nop(x)
.text:004029A2                 mov     ecx, edi
.text:004029A4                 call    esi
.text:004029A6                 mov     edi, [ebp+var_254]
.text:004029AC                 push    1
.text:004029AE                 mov     eax, [edi]
.text:004029B0                 mov     esi, [eax]
.text:004029B2                 mov     ecx, esi
.text:004029B4                 call    ds:___guard_check_icall_fptr ; _guard_check_icall_nop(x)
.text:004029BA                 mov     ecx, edi
.text:004029BC                 call    esi
.text:004029BE                 mov     edi, [ebp+var_258]
.text:004029C4
.text:004029C4 loc_4029C4:                             ; CODE XREF: REPLACE::ReplaceFiles(FSN_DIRECTORY *)+F8↑j
.text:004029C4                 cmp     [ebp+var_249], 0
.text:004029CB                 jz      loc_402A60
.text:004029D1                 cmp     byte ptr [ebx+92h], 0
.text:004029D8                 jnz     short loc_4029E7
.text:004029DA                 test    byte ptr [edi+24Ch], 1
.text:004029E1                 jnz     loc_402AD8
.text:004029E7
.text:004029E7 loc_4029E7:                             ; CODE XREF: REPLACE::ReplaceFiles(FSN_DIRECTORY *)+1D5↑j
.text:004029E7                 cmp     byte ptr [ebx+91h], 0
.text:004029EE                 jz      short loc_402A07
.text:004029F0                 lea     eax, [ebp+var_248]
.text:004029F6                 mov     ecx, ebx        ; this
.text:004029F8                 push    eax             ; struct PATH *
.text:004029F9                 push    5223h           ; unsigned int
.text:004029FE                 call    ?Prompt@REPLACE@@AAEEKPBVPATH@@@Z ; REPLACE::Prompt(ulong,PATH const *)
.text:00402A03                 test    al, al
.text:00402A05                 jz      short loc_402A60
.text:00402A07
.text:00402A07 loc_402A07:                             ; CODE XREF: REPLACE::ReplaceFiles(FSN_DIRECTORY *)+1EB↑j
.text:00402A07                 mov     esi, [ebx]
.text:00402A09                 lea     eax, [ebp+var_38]
.text:00402A0C                 push    eax
.text:00402A0D                 push    offset aW       ; "%W"
.text:00402A12                 push    0
.text:00402A14                 mov     ecx, [esi+0Ch]
.text:00402A17                 push    521Ch
.text:00402A1C                 push    ebx
.text:00402A1D                 call    ds:___guard_check_icall_fptr ; _guard_check_icall_nop(x)
.text:00402A23                 call    dword ptr [esi+0Ch]
.text:00402A26                 add     esp, 14h
.text:00402A29                 test    byte ptr [edi+24Ch], 1
.text:00402A30                 jz      short loc_402A46
.text:00402A32                 mov     eax, [edi+24Ch]
.text:00402A38                 mov     ecx, edi
.text:00402A3A                 push    0
.text:00402A3C                 and     eax, 0FFFFFFFEh
.text:00402A3F                 push    eax
.text:00402A40                 call    ds:__imp_?SetAttributes@FSNODE@@QAEEKPAK@Z ; FSNODE::SetAttributes(ulong,ulong *)
.text:00402A46
.text:00402A46 loc_402A46:                             ; CODE XREF: REPLACE::ReplaceFiles(FSN_DIRECTORY *)+22D↑j
.text:00402A46                 lea     eax, [ebp+var_248]
.text:00402A4C                 mov     ecx, ebx        ; this
.text:00402A4E                 push    eax             ; struct PATH *
.text:00402A4F                 push    [ebp+var_25C]   ; struct PATH *
.text:00402A55                 call    ?CopyTheFile@REPLACE@@AAEEPBVPATH@@0@Z ; REPLACE::CopyTheFile(PATH const *,PATH const *)
.text:00402A5A                 inc     dword ptr [ebx+9Ch]
.text:00402A60
.text:00402A60 loc_402A60:                             ; CODE XREF: REPLACE::ReplaceFiles(FSN_DIRECTORY *)+1C8↑j
.text:00402A60                                         ; REPLACE::ReplaceFiles(FSN_DIRECTORY *)+202↑j
.text:00402A60                 mov     eax, [edi]
.text:00402A62                 push    1
.text:00402A64                 mov     esi, [eax]
.text:00402A66                 mov     ecx, esi
.text:00402A68                 call    ds:___guard_check_icall_fptr ; _guard_check_icall_nop(x)
.text:00402A6E                 mov     ecx, edi
.text:00402A70                 call    esi
.text:00402A72
.text:00402A72 loc_402A72:                             ; CODE XREF: REPLACE::ReplaceFiles(FSN_DIRECTORY *)+EB↑j
.text:00402A72                 lea     ecx, [ebp+var_248]
.text:00402A78                 call    ds:__imp_?TruncateBase@PATH@@QAEEXZ ; PATH::TruncateBase(void)
.text:00402A7E                 mov     edi, [ebp+var_260]
.text:00402A84                 mov     eax, [edi]
.text:00402A86                 mov     esi, [eax+14h]
.text:00402A89                 mov     ecx, esi
.text:00402A8B                 call    ds:___guard_check_icall_fptr ; _guard_check_icall_nop(x)
.text:00402A91                 mov     ecx, edi
.text:00402A93                 call    esi
.text:00402A95                 mov     esi, eax
.text:00402A97                 mov     [ebp+var_250], eax
.text:00402A9D
.text:00402A9D loc_402A9D:                             ; CODE XREF: REPLACE::ReplaceFiles(FSN_DIRECTORY *)+82↑j
.text:00402A9D                 test    esi, esi
.text:00402A9F                 jnz     loc_40288A
.text:00402AA5                 mov     ecx, [edi]
.text:00402AA7                 push    1
.text:00402AA9                 mov     esi, [ecx]
.text:00402AAB                 mov     ecx, esi
.text:00402AAD                 call    ds:___guard_check_icall_fptr ; _guard_check_icall_nop(x)
.text:00402AB3                 mov     ecx, edi
.text:00402AB5                 call    esi
.text:00402AB7                 lea     ecx, [ebp+var_248]
.text:00402ABD                 call    ds:__imp_??1PATH@@UAE@XZ ; PATH::~PATH(void)
.text:00402AC3                 mov     ecx, [ebp+var_4]
.text:00402AC6                 mov     al, 1
.text:00402AC8                 pop     edi
.text:00402AC9                 pop     esi
.text:00402ACA                 xor     ecx, ebp        ; StackCookie
.text:00402ACC                 pop     ebx
.text:00402ACD                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text:00402AD2                 mov     esp, ebp
.text:00402AD4                 pop     ebp
.text:00402AD5                 retn    4
.text:00402AD8 ; ---------------------------------------------------------------------------
.text:00402AD8
.text:00402AD8 loc_402AD8:                             ; CODE XREF: REPLACE::ReplaceFiles(FSN_DIRECTORY *)+1DE↑j
.text:00402AD8                 push    5
.text:00402ADA                 lea     ecx, [ebp+var_248] ; this
.text:00402AE0                 call    ?GetPathString@PATH@@QBEPBVWSTRING@@XZ ; PATH::GetPathString(void)
.text:00402AE5                 push    eax
.text:00402AE6                 push    5245h
.text:00402AEB                 jmp     short loc_402AFE
.text:00402AED ; ---------------------------------------------------------------------------
.text:00402AED
.text:00402AED loc_402AED:                             ; CODE XREF: REPLACE::ReplaceFiles(FSN_DIRECTORY *)+8F↑j
.text:00402AED                 push    3               ; Code
.text:00402AEF                 call    ds:__imp__exit
.text:00402AF5 ; ---------------------------------------------------------------------------
.text:00402AF5
.text:00402AF5 loc_402AF5:                             ; CODE XREF: REPLACE::ReplaceFiles(FSN_DIRECTORY *)+63↑j
.text:00402AF5                                         ; REPLACE::ReplaceFiles(FSN_DIRECTORY *)+A9↑j ...
.text:00402AF5                 push    8               ; unsigned int
.text:00402AF7                 push    0               ; struct WSTRING *
.text:00402AF9                 push    5241h           ; unsigned int
.text:00402AFE
.text:00402AFE loc_402AFE:                             ; CODE XREF: REPLACE::ReplaceFiles(FSN_DIRECTORY *)+2E8↑j
.text:00402AFE                 mov     ecx, ebx        ; this
.text:00402B00                 call    ?DisplayMessageAndExit@REPLACE@@AAEXKPBVWSTRING@@K@Z ; REPLACE::DisplayMessageAndExit(ulong,WSTRING const *,ulong)
.text:00402B00 ?ReplaceFiles@REPLACE@@AAEEPAVFSN_DIRECTORY@@@Z endp
.text:00402B00
.text:00402B00 ; ---------------------------------------------------------------------------
.text:00402B05                 align 10h
.text:00402B10
.text:00402B10 ; =============== S U B R O U T I N E =======================================
.text:00402B10
.text:00402B10 ; Attributes: bp-based frame
.text:00402B10
.text:00402B10 ; void *__thiscall TIMEINFO::`vector deleting destructor'(PVOID P, char)
.text:00402B10 ??_ETIMEINFO@@UAEPAXI@Z proc near       ; DATA XREF: .text:const TIMEINFO::`vftable'↑o
.text:00402B10                                         ; .text:00401104↑o
.text:00402B10
.text:00402B10 arg_0           = byte ptr  8
.text:00402B10
.text:00402B10                 mov     edi, edi
.text:00402B12                 push    ebp
.text:00402B13                 mov     ebp, esp
.text:00402B15                 push    esi
.text:00402B16                 mov     esi, ecx
.text:00402B18                 call    ds:__imp_??1OBJECT@@UAE@XZ ; OBJECT::~OBJECT(void)
.text:00402B1E                 test    [ebp+arg_0], 1
.text:00402B22                 jz      short loc_402B3A
.text:00402B24                 test    esi, esi
.text:00402B26                 jz      short loc_402B3A
.text:00402B28                 mov     eax, large fs:30h
.text:00402B2E                 push    esi             ; P
.text:00402B2F                 push    0               ; Flags
.text:00402B31                 push    dword ptr [eax+18h] ; HeapHandle
.text:00402B34                 call    ds:__imp__RtlFreeHeap@12 ; RtlFreeHeap(x,x,x)
.text:00402B3A
.text:00402B3A loc_402B3A:                             ; CODE XREF: TIMEINFO::`vector deleting destructor'(uint)+12↑j
.text:00402B3A                                         ; TIMEINFO::`vector deleting destructor'(uint)+16↑j
.text:00402B3A                 mov     eax, esi
.text:00402B3C                 pop     esi
.text:00402B3D                 pop     ebp
.text:00402B3E                 retn    4
.text:00402B3E ??_ETIMEINFO@@UAEPAXI@Z endp
.text:00402B3E
.text:00402B41
.text:00402B41 ; =============== S U B R O U T I N E =======================================
.text:00402B41
.text:00402B41 ; Attributes: bp-based frame
.text:00402B41
.text:00402B41 ; unsigned __int8 __thiscall REPLACE::Prompt(REPLACE *__hidden this, unsigned int, const struct PATH *)
.text:00402B41 ?Prompt@REPLACE@@AAEEKPBVPATH@@@Z proc near
.text:00402B41                                         ; CODE XREF: REPLACE::AddFiles(FSN_DIRECTORY *)+D7↑p
.text:00402B41                                         ; REPLACE::ReplaceFiles(FSN_DIRECTORY *)+1FB↑p
.text:00402B41
.text:00402B41 var_4           = dword ptr -4
.text:00402B41 arg_0           = dword ptr  8
.text:00402B41 arg_4           = dword ptr  0Ch
.text:00402B41
.text:00402B41                 mov     edi, edi
.text:00402B43                 push    ebp
.text:00402B44                 mov     ebp, esp
.text:00402B46                 push    ecx
.text:00402B47                 mov     eax, ___security_cookie
.text:00402B4C                 xor     eax, ebp
.text:00402B4E                 mov     [ebp+var_4], eax
.text:00402B51                 mov     eax, [ebp+arg_4]
.text:00402B54                 push    esi
.text:00402B55                 push    edi
.text:00402B56                 mov     edi, ecx
.text:00402B58                 add     eax, 210h
.text:00402B5D                 push    eax
.text:00402B5E                 push    offset aW       ; "%W"
.text:00402B63                 push    0
.text:00402B65                 mov     esi, [edi]
.text:00402B67                 push    [ebp+arg_0]
.text:00402B6A                 push    edi
.text:00402B6B                 mov     ecx, [esi+0Ch]
.text:00402B6E                 call    ds:___guard_check_icall_fptr ; _guard_check_icall_nop(x)
.text:00402B74                 call    dword ptr [esi+0Ch]
.text:00402B77                 mov     eax, [edi+8]
.text:00402B7A                 add     esp, 14h
.text:00402B7D                 mov     esi, [eax+18h]
.text:00402B80                 mov     ecx, esi
.text:00402B82                 push    1
.text:00402B84                 call    ds:___guard_check_icall_fptr ; _guard_check_icall_nop(x)
.text:00402B8A                 lea     ecx, [edi+8]
.text:00402B8D                 call    esi
.text:00402B8F                 mov     ecx, [ebp+var_4]
.text:00402B92                 pop     edi
.text:00402B93                 xor     ecx, ebp        ; StackCookie
.text:00402B95                 pop     esi
.text:00402B96                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text:00402B9B                 mov     esp, ebp
.text:00402B9D                 pop     ebp
.text:00402B9E                 retn    8
.text:00402B9E ?Prompt@REPLACE@@AAEEKPBVPATH@@@Z endp
.text:00402B9E
.text:00402BA1
.text:00402BA1 ; =============== S U B R O U T I N E =======================================
.text:00402BA1
.text:00402BA1 ; Attributes: bp-based frame
.text:00402BA1
.text:00402BA1 ; unsigned __int8 __thiscall REPLACE::CopyTheFile(REPLACE *__hidden this, const struct PATH *, const struct PATH *)
.text:00402BA1 ?CopyTheFile@REPLACE@@AAEEPBVPATH@@0@Z proc near
.text:00402BA1                                         ; CODE XREF: REPLACE::AddFiles(FSN_DIRECTORY *)+111↑p
.text:00402BA1                                         ; REPLACE::ReplaceFiles(FSN_DIRECTORY *)+252↑p
.text:00402BA1
.text:00402BA1 var_4           = dword ptr -4
.text:00402BA1 arg_0           = dword ptr  8
.text:00402BA1 arg_4           = dword ptr  0Ch
.text:00402BA1
.text:00402BA1                 mov     edi, edi
.text:00402BA3                 push    ebp
.text:00402BA4                 mov     ebp, esp
.text:00402BA6                 push    ecx
.text:00402BA7                 mov     eax, ___security_cookie
.text:00402BAC                 xor     eax, ebp
.text:00402BAE                 mov     [ebp+var_4], eax
.text:00402BB1                 push    ebx
.text:00402BB2                 mov     ebx, [ebp+arg_0]
.text:00402BB5                 push    esi
.text:00402BB6                 push    edi
.text:00402BB7                 mov     edi, ecx
.text:00402BB9                 mov     eax, [ebx+21Ch]
.text:00402BBF                 lea     esi, ds:2[eax*2]
.text:00402BC6                 cmp     esi, [edi+0B0h]
.text:00402BCC                 jbe     short loc_402BE7
.text:00402BCE                 push    esi
.text:00402BCF                 push    dword ptr [edi+0ACh]
.text:00402BD5                 call    ds:__imp__UlibRealloc@8 ; UlibRealloc(x,x)
.text:00402BDB                 mov     [edi+0ACh], eax
.text:00402BE1                 mov     [edi+0B0h], esi
.text:00402BE7
.text:00402BE7 loc_402BE7:                             ; CODE XREF: REPLACE::CopyTheFile(PATH const *,PATH const *)+2B↑j
.text:00402BE7                 mov     eax, [ebp+arg_4]
.text:00402BEA                 mov     eax, [eax+21Ch]
.text:00402BF0                 lea     esi, ds:2[eax*2]
.text:00402BF7                 cmp     esi, [edi+0B8h]
.text:00402BFD                 jbe     short loc_402C18
.text:00402BFF                 push    esi
.text:00402C00                 push    dword ptr [edi+0B4h]
.text:00402C06                 call    ds:__imp__UlibRealloc@8 ; UlibRealloc(x,x)
.text:00402C0C                 mov     [edi+0B4h], eax
.text:00402C12                 mov     [edi+0B8h], esi
.text:00402C18
.text:00402C18 loc_402C18:                             ; CODE XREF: REPLACE::CopyTheFile(PATH const *,PATH const *)+5C↑j
.text:00402C18                 mov     ecx, [edi+0ACh]
.text:00402C1E                 xor     esi, esi
.text:00402C20                 test    ecx, ecx
.text:00402C22                 jz      loc_402CC3
.text:00402C28                 cmp     [edi+0B4h], esi
.text:00402C2E                 jz      loc_402CC3
.text:00402C34                 mov     eax, [edi+0B0h]
.text:00402C3A                 push    1
.text:00402C3C                 shr     eax, 1
.text:00402C3E                 push    eax
.text:00402C3F                 push    ecx
.text:00402C40                 push    0FFFFFFFFh
.text:00402C42                 push    esi
.text:00402C43                 lea     ecx, [ebx+210h]
.text:00402C49                 call    ds:__imp_?QueryWSTR@WSTRING@@QBEPAGKKPAGKE@Z ; WSTRING::QueryWSTR(ulong,ulong,ushort *,ulong,uchar)
.text:00402C4F                 mov     eax, [edi+0B8h]
.text:00402C55                 mov     ecx, [ebp+arg_4]
.text:00402C58                 push    1
.text:00402C5A                 shr     eax, 1
.text:00402C5C                 push    eax
.text:00402C5D                 push    dword ptr [edi+0B4h]
.text:00402C63                 lea     ecx, [ecx+210h]
.text:00402C69                 push    0FFFFFFFFh
.text:00402C6B                 push    esi
.text:00402C6C                 call    ds:__imp_?QueryWSTR@WSTRING@@QBEPAGKKPAGKE@Z ; WSTRING::QueryWSTR(ulong,ulong,ushort *,ulong,uchar)
.text:00402C72                 push    esi             ; bFailIfExists
.text:00402C73                 push    dword ptr [edi+0B4h] ; lpNewFileName
.text:00402C79                 push    dword ptr [edi+0ACh] ; lpExistingFileName
.text:00402C7F                 call    ds:__imp__CopyFileW@12 ; CopyFileW(x,x,x)
.text:00402C85                 test    eax, eax
.text:00402C87                 jnz     short loc_402CAE
.text:00402C89                 call    ds:__imp__GetLastError@0 ; GetLastError()
.text:00402C8F                 mov     esi, [edi]
.text:00402C91                 push    eax
.text:00402C92                 push    offset aD       ; "%d"
.text:00402C97                 push    523Fh
.text:00402C9C                 mov     ecx, [esi+14h]
.text:00402C9F                 push    3
.text:00402CA1                 push    edi
.text:00402CA2                 call    ds:___guard_check_icall_fptr ; _guard_check_icall_nop(x)
.text:00402CA8                 call    dword ptr [esi+14h]
.text:00402CAB                 add     esp, 14h
.text:00402CAE
.text:00402CAE loc_402CAE:                             ; CODE XREF: REPLACE::CopyTheFile(PATH const *,PATH const *)+E6↑j
.text:00402CAE                 mov     ecx, [ebp+var_4]
.text:00402CB1                 mov     al, 1
.text:00402CB3                 pop     edi
.text:00402CB4                 pop     esi
.text:00402CB5                 xor     ecx, ebp        ; StackCookie
.text:00402CB7                 pop     ebx
.text:00402CB8                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text:00402CBD                 mov     esp, ebp
.text:00402CBF                 pop     ebp
.text:00402CC0                 retn    8
.text:00402CC3 ; ---------------------------------------------------------------------------
.text:00402CC3
.text:00402CC3 loc_402CC3:                             ; CODE XREF: REPLACE::CopyTheFile(PATH const *,PATH const *)+81↑j
.text:00402CC3                                         ; REPLACE::CopyTheFile(PATH const *,PATH const *)+8D↑j
.text:00402CC3                 push    8               ; unsigned int
.text:00402CC5                 push    esi             ; struct WSTRING *
.text:00402CC6                 push    5241h           ; unsigned int
.text:00402CCB                 mov     ecx, edi        ; this
.text:00402CCD                 call    ?DisplayMessageAndExit@REPLACE@@AAEXKPBVWSTRING@@K@Z ; REPLACE::DisplayMessageAndExit(ulong,WSTRING const *,ulong)
.text:00402CCD ?CopyTheFile@REPLACE@@AAEEPBVPATH@@0@Z endp
.text:00402CCD
.text:00402CCD ; ---------------------------------------------------------------------------
.text:00402CD2                 align 10h
.text:00402CE0
.text:00402CE0 ; =============== S U B R O U T I N E =======================================
.text:00402CE0
.text:00402CE0 ; Attributes: info_from_lumina
.text:00402CE0
.text:00402CE0 pre_c_init      proc near               ; DATA XREF: .text:004010F0↑o
.text:00402CE0                                         ; .text:00401108↑o
.text:00402CE0                 mov     eax, 5A4Dh
.text:00402CE5                 cmp     ds:400000h, ax
.text:00402CEC                 jz      short loc_402CF2
.text:00402CEE
.text:00402CEE loc_402CEE:                             ; CODE XREF: pre_c_init+22↓j
.text:00402CEE                                         ; pre_c_init+37↓j
.text:00402CEE                 xor     eax, eax
.text:00402CF0                 jmp     short loc_402D40
.text:00402CF2 ; ---------------------------------------------------------------------------
.text:00402CF2
.text:00402CF2 loc_402CF2:                             ; CODE XREF: pre_c_init+C↑j
.text:00402CF2                 mov     ecx, ds:40003Ch
.text:00402CF8                 cmp     dword ptr [ecx+400000h], 4550h
.text:00402D02                 jnz     short loc_402CEE
.text:00402D04                 movzx   eax, word ptr [ecx+400018h]
.text:00402D0B                 cmp     eax, 10Bh
.text:00402D10                 jz      short loc_402D2C
.text:00402D12                 cmp     eax, 20Bh
.text:00402D17                 jnz     short loc_402CEE
.text:00402D19                 xor     eax, eax
.text:00402D1B                 cmp     dword ptr [ecx+400084h], 0Eh
.text:00402D22                 jbe     short loc_402D40
.text:00402D24                 cmp     [ecx+4000F8h], eax
.text:00402D2A                 jmp     short loc_402D3D
.text:00402D2C ; ---------------------------------------------------------------------------
.text:00402D2C
.text:00402D2C loc_402D2C:                             ; CODE XREF: pre_c_init+30↑j
.text:00402D2C                 xor     eax, eax
.text:00402D2E                 cmp     dword ptr [ecx+400074h], 0Eh
.text:00402D35                 jbe     short loc_402D40
.text:00402D37                 cmp     [ecx+4000E8h], eax
.text:00402D3D
.text:00402D3D loc_402D3D:                             ; CODE XREF: pre_c_init+4A↑j
.text:00402D3D                 setnz   al
.text:00402D40
.text:00402D40 loc_402D40:                             ; CODE XREF: pre_c_init+10↑j
.text:00402D40                                         ; pre_c_init+42↑j ...
.text:00402D40                 push    1
.text:00402D42                 mov     dword_404028, eax
.text:00402D47                 call    __get_image_app_type
.text:00402D4C                 push    eax             ; Type
.text:00402D4D                 call    ds:__imp____set_app_type
.text:00402D53                 or      ___onexitend, 0FFFFFFFFh
.text:00402D5A                 or      ___onexitbegin, 0FFFFFFFFh
.text:00402D61                 pop     ecx
.text:00402D62                 pop     ecx
.text:00402D63                 call    ds:__imp____p__fmode
.text:00402D69                 mov     ecx, __fmode
.text:00402D6F                 mov     [eax], ecx
.text:00402D71                 call    ds:__imp____p__commode
.text:00402D77                 mov     ecx, __commode
.text:00402D7D                 mov     [eax], ecx
.text:00402D7F                 call    __setargv
.text:00402D84                 cmp     ___defaultmatherr, 0
.text:00402D8B                 jnz     short loc_402D99
.text:00402D8D                 push    offset __setargv ; UserMathErrorFunction
.text:00402D92                 call    ds:__imp____setusermatherr
.text:00402D98                 pop     ecx
.text:00402D99
.text:00402D99 loc_402D99:                             ; CODE XREF: pre_c_init+AB↑j
.text:00402D99                 call    __setdefaultprecision
.text:00402D9E                 xor     eax, eax
.text:00402DA0                 retn
.text:00402DA0 pre_c_init      endp
.text:00402DA0
.text:00402DA0 ; ---------------------------------------------------------------------------
.text:00402DA1                 align 10h
.text:00402DB0
.text:00402DB0 ; =============== S U B R O U T I N E =======================================
.text:00402DB0
.text:00402DB0 ; Attributes: info_from_lumina
.text:00402DB0
.text:00402DB0 pre_cpp_init    proc near               ; DATA XREF: .text:004010E4↑o
.text:00402DB0                                         ; .text:0040110C↑o
.text:00402DB0                 mov     eax, __newmode
.text:00402DB5                 push    offset dword_40402C
.text:00402DBA                 push    __dowildcard
.text:00402DC0                 mov     dword_40402C, eax
.text:00402DC5                 push    offset envp
.text:00402DCA                 push    offset argv
.text:00402DCF                 push    offset argc
.text:00402DD4                 call    ds:__imp____getmainargs
.text:00402DDA                 add     esp, 14h
.text:00402DDD                 mov     dword_404024, eax
.text:00402DE2                 retn
.text:00402DE2 pre_cpp_init    endp
.text:00402DE2
.text:00402DE3
.text:00402DE3 ; =============== S U B R O U T I N E =======================================
.text:00402DE3
.text:00402DE3 ; Attributes: bp-based frame info_from_lumina
.text:00402DE3
.text:00402DE3 __wmainCRTStartup proc near             ; CODE XREF: _mainCRTStartup+5↓j
.text:00402DE3
.text:00402DE3 Code            = dword ptr -20h
.text:00402DE3 ms_exc          = CPPEH_RECORD ptr -18h
.text:00402DE3
.text:00402DE3 ; __unwind { // __SEH_prolog4_GS
.text:00402DE3                 push    10h
.text:00402DE5                 push    offset stru_4035B8
.text:00402DEA                 call    __SEH_prolog4_GS
.text:00402DEF                 xor     ebx, ebx
.text:00402DF1 ;   __try { // __except at loc_402F16
.text:00402DF1                 mov     [ebp+ms_exc.registration.TryLevel], ebx
.text:00402DF4                 mov     eax, large fs:18h
.text:00402DFA                 mov     esi, [eax+4]
.text:00402DFD                 mov     edi, ebx
.text:00402DFF
.text:00402DFF loc_402DFF:                             ; CODE XREF: __wmainCRTStartup+43↓j
.text:00402DFF                 mov     edx, offset ___native_startup_lock
.text:00402E04                 mov     ecx, esi
.text:00402E06                 xor     eax, eax
.text:00402E08                 lock cmpxchg [edx], ecx
.text:00402E0C                 test    eax, eax
.text:00402E0E                 jz      short loc_402E28
.text:00402E10                 cmp     eax, esi
.text:00402E12                 jnz     short loc_402E1B
.text:00402E14                 xor     esi, esi
.text:00402E16                 inc     esi
.text:00402E17                 mov     edi, esi
.text:00402E19                 jmp     short loc_402E2B
.text:00402E1B ; ---------------------------------------------------------------------------
.text:00402E1B
.text:00402E1B loc_402E1B:                             ; CODE XREF: __wmainCRTStartup+2F↑j
.text:00402E1B                 push    3E8h            ; dwMilliseconds
.text:00402E20                 call    ds:__imp__Sleep@4 ; Sleep(x)
.text:00402E26                 jmp     short loc_402DFF
.text:00402E28 ; ---------------------------------------------------------------------------
.text:00402E28
.text:00402E28 loc_402E28:                             ; CODE XREF: __wmainCRTStartup+2B↑j
.text:00402E28                 xor     esi, esi
.text:00402E2A                 inc     esi
.text:00402E2B
.text:00402E2B loc_402E2B:                             ; CODE XREF: __wmainCRTStartup+36↑j
.text:00402E2B                 cmp     ___native_startup_state, esi
.text:00402E31                 jnz     short loc_402E3D
.text:00402E33                 push    1Fh
.text:00402E35                 call    __amsg_exit
.text:00402E3A                 pop     ecx
.text:00402E3B                 jmp     short loc_402E77
.text:00402E3D ; ---------------------------------------------------------------------------
.text:00402E3D
.text:00402E3D loc_402E3D:                             ; CODE XREF: __wmainCRTStartup+4E↑j
.text:00402E3D                 cmp     ___native_startup_state, ebx
.text:00402E43                 jnz     short loc_402E71
.text:00402E45                 mov     ___native_startup_state, esi
.text:00402E4B                 push    offset ___xi_z  ; Last
.text:00402E50                 push    offset ___xi_a  ; First
.text:00402E55                 call    __initterm_e
.text:00402E5A                 pop     ecx
.text:00402E5B                 pop     ecx
.text:00402E5C                 test    eax, eax
.text:00402E5E                 jz      short loc_402E77
.text:00402E5E ;   } // starts at 402DF1
.text:00402E60                 mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
.text:00402E67                 mov     eax, 0FFh
.text:00402E6C                 jmp     loc_402F4C
.text:00402E71 ; ---------------------------------------------------------------------------
.text:00402E71
.text:00402E71 loc_402E71:                             ; CODE XREF: __wmainCRTStartup+60↑j
.text:00402E71                 mov     dword_404014, esi
.text:00402E77
.text:00402E77 loc_402E77:                             ; CODE XREF: __wmainCRTStartup+58↑j
.text:00402E77                                         ; __wmainCRTStartup+7B↑j
.text:00402E77                 cmp     ___native_startup_state, esi
.text:00402E7D                 jnz     short loc_402E9A
.text:00402E7F                 push    offset ___xc_z  ; Last
.text:00402E84                 push    offset ___xc_a  ; First
.text:00402E89                 call    __initterm
.text:00402E8E                 pop     ecx
.text:00402E8F                 pop     ecx
.text:00402E90                 mov     ___native_startup_state, 2
.text:00402E9A
.text:00402E9A loc_402E9A:                             ; CODE XREF: __wmainCRTStartup+9A↑j
.text:00402E9A                 test    edi, edi
.text:00402E9C                 jnz     short loc_402EA7
.text:00402E9E                 xor     eax, eax
.text:00402EA0                 mov     ecx, offset ___native_startup_lock
.text:00402EA5                 xchg    eax, [ecx]
.text:00402EA7
.text:00402EA7 loc_402EA7:                             ; CODE XREF: __wmainCRTStartup+B9↑j
.text:00402EA7                 cmp     ___dyn_tls_init_callback, 0
.text:00402EAE                 jz      short loc_402ED3
.text:00402EB0                 push    offset ___dyn_tls_init_callback
.text:00402EB5                 call    __IsNonwritableInCurrentImage
.text:00402EBA                 pop     ecx
.text:00402EBB                 test    eax, eax
.text:00402EBD                 jz      short loc_402ED3
.text:00402EBF                 push    ebx
.text:00402EC0                 push    2
.text:00402EC2                 push    ebx
.text:00402EC3                 mov     esi, ___dyn_tls_init_callback
.text:00402EC9                 mov     ecx, esi
.text:00402ECB                 call    ds:___guard_check_icall_fptr ; _guard_check_icall_nop(x)
.text:00402ED1                 call    esi ; ___dyn_tls_init_callback
.text:00402ED3
.text:00402ED3 loc_402ED3:                             ; CODE XREF: __wmainCRTStartup+CB↑j
.text:00402ED3                                         ; __wmainCRTStartup+DA↑j
.text:00402ED3                 push    envp            ; envp
.text:00402ED9                 push    argv            ; argv
.text:00402EDF                 push    argc            ; argc
.text:00402EE5                 call    _main
.text:00402EEA                 add     esp, 0Ch
.text:00402EED                 mov     dword_404010, eax
.text:00402EF2                 cmp     dword_404028, 0
.text:00402EF9                 jnz     short loc_402F31
.text:00402EFB                 push    eax             ; Code
.text:00402EFC                 call    ds:__imp__exit
.text:00402F02 ; ---------------------------------------------------------------------------
.text:00402F02
.text:00402F02 loc_402F02:                             ; DATA XREF: .text:stru_4035B8↓o
.text:00402F02 ;   __except filter // owned by 402DF1
.text:00402F02                 mov     ecx, [ebp+ms_exc.exc_ptr]
.text:00402F05                 mov     eax, [ecx]
.text:00402F07                 mov     eax, [eax]
.text:00402F09                 mov     [ebp+Code], eax
.text:00402F0C                 push    ecx
.text:00402F0D                 push    eax
.text:00402F0E                 call    __XcptFilter
.text:00402F13                 pop     ecx
.text:00402F14                 pop     ecx
.text:00402F15                 retn
.text:00402F16 ; ---------------------------------------------------------------------------
.text:00402F16
.text:00402F16 loc_402F16:                             ; DATA XREF: .text:stru_4035B8↓o
.text:00402F16 ;   __except(loc_402F02) // owned by 402DF1
.text:00402F16                 mov     esp, [ebp+ms_exc.old_esp]
.text:00402F19                 mov     eax, [ebp+Code]
.text:00402F1C                 mov     dword_404010, eax
.text:00402F21                 cmp     dword_404028, 0
.text:00402F28                 jnz     short loc_402F31
.text:00402F2A                 push    eax             ; Code
.text:00402F2B                 call    ds:__imp___exit
.text:00402F31 ; ---------------------------------------------------------------------------
.text:00402F31
.text:00402F31 loc_402F31:                             ; CODE XREF: __wmainCRTStartup+116↑j
.text:00402F31                                         ; __wmainCRTStartup+145↑j
.text:00402F31                 cmp     dword_404014, 0
.text:00402F38                 jnz     short loc_402F45
.text:00402F3A                 call    ds:__imp___cexit
.text:00402F40                 mov     eax, dword_404010
.text:00402F45
.text:00402F45 loc_402F45:                             ; CODE XREF: __wmainCRTStartup+155↑j
.text:00402F45                 mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
.text:00402F4C
.text:00402F4C loc_402F4C:                             ; CODE XREF: __wmainCRTStartup+89↑j
.text:00402F4C                 call    __SEH_epilog4_GS
.text:00402F51                 retn
.text:00402F51 ; } // starts at 402DE3
.text:00402F51 __wmainCRTStartup endp
.text:00402F51
.text:00402F52
.text:00402F52 ; =============== S U B R O U T I N E =======================================
.text:00402F52
.text:00402F52 ; Attributes: bp-based frame info_from_lumina
.text:00402F52
.text:00402F52 ; int __cdecl _initterm_e(_PIFV *First, _PIFV *Last)
.text:00402F52 __initterm_e    proc near               ; CODE XREF: __wmainCRTStartup+72↑p
.text:00402F52
.text:00402F52 var_4           = dword ptr -4
.text:00402F52 First           = dword ptr  8
.text:00402F52 Last            = dword ptr  0Ch
.text:00402F52
.text:00402F52                 mov     edi, edi
.text:00402F54                 push    ebp
.text:00402F55                 mov     ebp, esp
.text:00402F57                 push    ecx
.text:00402F58                 mov     eax, ___security_cookie
.text:00402F5D                 xor     eax, ebp
.text:00402F5F                 mov     [ebp+var_4], eax
.text:00402F62                 push    esi
.text:00402F63                 mov     esi, [ebp+First]
.text:00402F66                 xor     eax, eax
.text:00402F68                 cmp     esi, [ebp+Last]
.text:00402F6B                 jnb     short loc_402F8B
.text:00402F6D                 push    edi
.text:00402F6E
.text:00402F6E loc_402F6E:                             ; CODE XREF: __initterm_e+36↓j
.text:00402F6E                 test    eax, eax
.text:00402F70                 jnz     short loc_402F8A
.text:00402F72                 mov     edi, [esi]
.text:00402F74                 test    edi, edi
.text:00402F76                 jz      short loc_402F82
.text:00402F78                 mov     ecx, edi
.text:00402F7A                 call    ds:___guard_check_icall_fptr ; _guard_check_icall_nop(x)
.text:00402F80                 call    edi
.text:00402F82
.text:00402F82 loc_402F82:                             ; CODE XREF: __initterm_e+24↑j
.text:00402F82                 add     esi, 4
.text:00402F85                 cmp     esi, [ebp+Last]
.text:00402F88                 jb      short loc_402F6E
.text:00402F8A
.text:00402F8A loc_402F8A:                             ; CODE XREF: __initterm_e+1E↑j
.text:00402F8A                 pop     edi
.text:00402F8B
.text:00402F8B loc_402F8B:                             ; CODE XREF: __initterm_e+19↑j
.text:00402F8B                 mov     ecx, [ebp+var_4]
.text:00402F8E                 xor     ecx, ebp        ; StackCookie
.text:00402F90                 pop     esi
.text:00402F91                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text:00402F96                 mov     esp, ebp
.text:00402F98                 pop     ebp
.text:00402F99                 retn
.text:00402F99 __initterm_e    endp
.text:00402F99
.text:00402F99 ; ---------------------------------------------------------------------------
.text:00402F9A                 align 10h
.text:00402FA0
.text:00402FA0 ; =============== S U B R O U T I N E =======================================
.text:00402FA0
.text:00402FA0 ; Attributes: library function
.text:00402FA0
.text:00402FA0                 public _mainCRTStartup
.text:00402FA0 _mainCRTStartup proc near               ; DATA XREF: .text:00401110↑o
.text:00402FA0                 call    ___security_init_cookie
.text:00402FA5                 jmp     __wmainCRTStartup
.text:00402FA5 _mainCRTStartup endp
.text:00402FA5
.text:00402FA5 ; ---------------------------------------------------------------------------
.text:00402FAA                 align 10h
.text:00402FB0
.text:00402FB0 ; =============== S U B R O U T I N E =======================================
.text:00402FB0
.text:00402FB0 ; Attributes: library function
.text:00402FB0
.text:00402FB0 ; void __fastcall __security_check_cookie(uintptr_t StackCookie)
.text:00402FB0 @__security_check_cookie@4 proc near    ; CODE XREF: REPLACE::SetArguments(void)+3ED↑p
.text:00402FB0                                         ; REPLACE::CheckArgumentConsistency(void)+F6↑p ...
.text:00402FB0                 cmp     ecx, ___security_cookie
.text:00402FB6                 jnz     short loc_402FBB
.text:00402FB8                 retn    0
.text:00402FBB ; ---------------------------------------------------------------------------
.text:00402FBB
.text:00402FBB loc_402FBB:                             ; CODE XREF: __security_check_cookie(x)+6↑j
.text:00402FBB                 jmp     ___report_gsfailure
.text:00402FBB @__security_check_cookie@4 endp
.text:00402FBB
.text:00402FC0
.text:00402FC0 ; =============== S U B R O U T I N E =======================================
.text:00402FC0
.text:00402FC0 ; Attributes: bp-based frame info_from_lumina
.text:00402FC0
.text:00402FC0 ; LONG __stdcall __CxxUnhandledExceptionFilter(struct _EXCEPTION_POINTERS *ExceptionInfo)
.text:00402FC0 ?__CxxUnhandledExceptionFilter@@YGJPAU_EXCEPTION_POINTERS@@@Z proc near
.text:00402FC0                                         ; DATA XREF: .text:00401118↑o
.text:00402FC0                                         ; ___CxxSetUnhandledExceptionFilter↓o
.text:00402FC0
.text:00402FC0 ExceptionInfo   = dword ptr  8
.text:00402FC0
.text:00402FC0                 mov     edi, edi
.text:00402FC2                 push    ebp
.text:00402FC3                 mov     ebp, esp
.text:00402FC5                 mov     eax, [ebp+ExceptionInfo]
.text:00402FC8                 mov     eax, [eax]
.text:00402FCA                 cmp     dword ptr [eax], 0E06D7363h
.text:00402FD0                 jnz     short loc_402FFD
.text:00402FD2                 cmp     dword ptr [eax+10h], 3
.text:00402FD6                 jnz     short loc_402FFD
.text:00402FD8                 mov     eax, [eax+14h]
.text:00402FDB                 cmp     eax, 19930520h
.text:00402FE0                 jz      short loc_402FF7
.text:00402FE2                 cmp     eax, 19930521h
.text:00402FE7                 jz      short loc_402FF7
.text:00402FE9                 cmp     eax, 19930522h
.text:00402FEE                 jz      short loc_402FF7
.text:00402FF0                 cmp     eax, 1994000h
.text:00402FF5                 jnz     short loc_402FFD
.text:00402FF7
.text:00402FF7 loc_402FF7:                             ; CODE XREF: __CxxUnhandledExceptionFilter(_EXCEPTION_POINTERS *)+20↑j
.text:00402FF7                                         ; __CxxUnhandledExceptionFilter(_EXCEPTION_POINTERS *)+27↑j ...
.text:00402FF7                 call    ds:__imp_?terminate@@YAXXZ ; terminate(void)
.text:00402FFD ; ---------------------------------------------------------------------------
.text:00402FFD
.text:00402FFD loc_402FFD:                             ; CODE XREF: __CxxUnhandledExceptionFilter(_EXCEPTION_POINTERS *)+10↑j
.text:00402FFD                                         ; __CxxUnhandledExceptionFilter(_EXCEPTION_POINTERS *)+16↑j ...
.text:00402FFD                 xor     eax, eax
.text:00402FFF                 pop     ebp
.text:00403000                 retn    4
.text:00403000 ?__CxxUnhandledExceptionFilter@@YGJPAU_EXCEPTION_POINTERS@@@Z endp
.text:00403000
.text:00403000 ; ---------------------------------------------------------------------------
.text:00403003                 align 10h
.text:00403010
.text:00403010 ; =============== S U B R O U T I N E =======================================
.text:00403010
.text:00403010
.text:00403010 ___CxxSetUnhandledExceptionFilter proc near
.text:00403010                                         ; DATA XREF: .text:004010F4↑o
.text:00403010                                         ; .text:0040111C↑o
.text:00403010                 push    offset ?__CxxUnhandledExceptionFilter@@YGJPAU_EXCEPTION_POINTERS@@@Z ; lpTopLevelExceptionFilter
.text:00403015                 call    ds:__imp__SetUnhandledExceptionFilter@4 ; SetUnhandledExceptionFilter(x)
.text:0040301B                 xor     eax, eax
.text:0040301D                 retn
.text:0040301D ___CxxSetUnhandledExceptionFilter endp
.text:0040301D
.text:0040301E
.text:0040301E ; =============== S U B R O U T I N E =======================================
.text:0040301E
.text:0040301E ; Attributes: thunk
.text:0040301E
.text:0040301E __XcptFilter    proc near               ; CODE XREF: __wmainCRTStartup+12B↑p
.text:0040301E                 jmp     ds:__imp___XcptFilter
.text:0040301E __XcptFilter    endp
.text:0040301E
.text:00403024
.text:00403024 ; =============== S U B R O U T I N E =======================================
.text:00403024
.text:00403024 ; Attributes: bp-based frame info_from_lumina
.text:00403024
.text:00403024 ; __stdcall RtlpImageNtHeader(x)
.text:00403024 _RtlpImageNtHeader@4 proc near          ; CODE XREF: __get_image_app_type+12↓p
.text:00403024
.text:00403024 var_1C          = dword ptr -1Ch
.text:00403024 ms_exc          = CPPEH_RECORD ptr -18h
.text:00403024 arg_0           = dword ptr  8
.text:00403024
.text:00403024 ; __unwind { // __SEH_prolog4
.text:00403024                 push    0Ch
.text:00403026                 push    offset stru_4035D8
.text:0040302B                 call    __SEH_prolog4
.text:00403030                 xor     ecx, ecx
.text:00403032                 mov     eax, [ebp+arg_0]
.text:00403035                 test    eax, eax
.text:00403037                 jz      short loc_403084
.text:00403039                 cmp     eax, 0FFFFFFFFh
.text:0040303C                 jz      short loc_403084
.text:0040303E ;   __try { // __except at loc_403075
.text:0040303E                 mov     [ebp+ms_exc.registration.TryLevel], ecx
.text:00403041                 mov     edx, 5A4Dh
.text:00403046                 cmp     [eax], dx
.text:00403049                 jnz     short loc_40307D
.text:0040304B                 mov     edx, [eax+3Ch]
.text:0040304E                 test    edx, edx
.text:00403050                 js      short loc_40307D
.text:00403052                 cmp     edx, 10000000h
.text:00403058                 jnb     short loc_40307D
.text:0040305A                 add     eax, edx
.text:0040305C                 mov     [ebp+var_1C], eax
.text:0040305F                 mov     ecx, [eax]
.text:00403061                 sub     ecx, 4550h
.text:00403067                 neg     ecx
.text:00403069                 sbb     ecx, ecx
.text:0040306B                 not     ecx
.text:0040306D                 and     ecx, eax
.text:0040306F                 jmp     short loc_40307A
.text:00403071 ; ---------------------------------------------------------------------------
.text:00403071
.text:00403071 loc_403071:                             ; DATA XREF: .text:stru_4035D8↓o
.text:00403071 ;   __except filter // owned by 40303E
.text:00403071                 xor     eax, eax
.text:00403073                 inc     eax
.text:00403074                 retn
.text:00403075 ; ---------------------------------------------------------------------------
.text:00403075
.text:00403075 loc_403075:                             ; DATA XREF: .text:stru_4035D8↓o
.text:00403075 ;   __except(loc_403071) // owned by 40303E
.text:00403075                 mov     esp, [ebp+ms_exc.old_esp]
.text:00403078                 xor     ecx, ecx
.text:0040307A
.text:0040307A loc_40307A:                             ; CODE XREF: RtlpImageNtHeader(x)+4B↑j
.text:0040307A                 mov     [ebp+var_1C], ecx
.text:0040307A ;   } // starts at 40303E
.text:0040307D
.text:0040307D loc_40307D:                             ; CODE XREF: RtlpImageNtHeader(x)+25↑j
.text:0040307D                                         ; RtlpImageNtHeader(x)+2C↑j ...
.text:0040307D                 mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
.text:00403084
.text:00403084 loc_403084:                             ; CODE XREF: RtlpImageNtHeader(x)+13↑j
.text:00403084                                         ; RtlpImageNtHeader(x)+18↑j
.text:00403084                 mov     eax, ecx
.text:00403086                 call    __SEH_epilog4
.text:0040308B                 retn    4
.text:0040308B ; } // starts at 403024
.text:0040308B _RtlpImageNtHeader@4 endp
.text:0040308B
.text:0040308E
.text:0040308E ; =============== S U B R O U T I N E =======================================
.text:0040308E
.text:0040308E ; Attributes: bp-based frame info_from_lumina
.text:0040308E
.text:0040308E __get_image_app_type proc near          ; CODE XREF: pre_c_init+67↑p
.text:0040308E
.text:0040308E arg_0           = dword ptr  8
.text:0040308E
.text:0040308E                 mov     edi, edi
.text:00403090                 push    ebp
.text:00403091                 mov     ebp, esp
.text:00403093                 push    0               ; lpModuleName
.text:00403095                 call    ds:__imp__GetModuleHandleA@4 ; GetModuleHandleA(x)
.text:0040309B                 test    eax, eax
.text:0040309D                 jz      short loc_4030BF
.text:0040309F                 push    eax
.text:004030A0                 call    _RtlpImageNtHeader@4 ; RtlpImageNtHeader(x)
.text:004030A5                 test    eax, eax
.text:004030A7                 jz      short loc_4030BF
.text:004030A9                 movzx   ecx, word ptr [eax+5Ch]
.text:004030AD                 push    2
.text:004030AF                 pop     eax
.text:004030B0                 cmp     cx, ax
.text:004030B3                 jz      short loc_4030C2
.text:004030B5                 cmp     ecx, 3
.text:004030B8                 jnz     short loc_4030BF
.text:004030BA                 xor     eax, eax
.text:004030BC                 inc     eax
.text:004030BD                 pop     ebp
.text:004030BE                 retn
.text:004030BF ; ---------------------------------------------------------------------------
.text:004030BF
.text:004030BF loc_4030BF:                             ; CODE XREF: __get_image_app_type+F↑j
.text:004030BF                                         ; __get_image_app_type+19↑j ...
.text:004030BF                 mov     eax, [ebp+arg_0]
.text:004030C2
.text:004030C2 loc_4030C2:                             ; CODE XREF: __get_image_app_type+25↑j
.text:004030C2                 pop     ebp
.text:004030C3                 retn
.text:004030C3 __get_image_app_type endp
.text:004030C3
.text:004030C4
.text:004030C4 ; =============== S U B R O U T I N E =======================================
.text:004030C4
.text:004030C4 ; Attributes: thunk
.text:004030C4
.text:004030C4 __amsg_exit     proc near               ; CODE XREF: __wmainCRTStartup+52↑p
.text:004030C4                 jmp     ds:__imp___amsg_exit
.text:004030C4 __amsg_exit     endp
.text:004030C4
.text:004030C4 ; ---------------------------------------------------------------------------
.text:004030CA                 align 10h
.text:004030D0
.text:004030D0 ; =============== S U B R O U T I N E =======================================
.text:004030D0
.text:004030D0
.text:004030D0 ; int __cdecl _setargv(struct _exception *)
.text:004030D0 __setargv       proc near               ; CODE XREF: pre_c_init+9F↑p
.text:004030D0                                         ; DATA XREF: .text:00401120↑o ...
.text:004030D0                 xor     eax, eax
.text:004030D2                 retn
.text:004030D2 __setargv       endp
.text:004030D2
.text:004030D2 ; ---------------------------------------------------------------------------
.text:004030D3                 align 10h
.text:004030E0
.text:004030E0 ; =============== S U B R O U T I N E =======================================
.text:004030E0
.text:004030E0 ; Attributes: bp-based frame info_from_lumina
.text:004030E0
.text:004030E0 ; _IMAGE_SECTION_HEADER *__cdecl _FindPESection(char *pImageBase, unsigned int rva)
.text:004030E0 __FindPESection proc near               ; CODE XREF: __IsNonwritableInCurrentImage+5B↓p
.text:004030E0
.text:004030E0 arg_0           = dword ptr  8
.text:004030E0 arg_4           = dword ptr  0Ch
.text:004030E0
.text:004030E0                 mov     edi, edi
.text:004030E2                 push    ebp
.text:004030E3                 mov     ebp, esp
.text:004030E5                 mov     eax, [ebp+arg_0]
.text:004030E8                 xor     edx, edx
.text:004030EA                 push    ebx
.text:004030EB                 push    esi
.text:004030EC                 push    edi
.text:004030ED                 mov     ecx, [eax+3Ch]
.text:004030F0                 add     ecx, eax
.text:004030F2                 movzx   eax, word ptr [ecx+14h]
.text:004030F6                 movzx   ebx, word ptr [ecx+6]
.text:004030FA                 add     eax, 18h
.text:004030FD                 add     eax, ecx
.text:004030FF                 test    ebx, ebx
.text:00403101                 jz      short loc_40311E
.text:00403103                 mov     edi, [ebp+arg_4]
.text:00403106
.text:00403106 loc_403106:                             ; CODE XREF: __FindPESection+3C↓j
.text:00403106                 mov     esi, [eax+0Ch]
.text:00403109                 cmp     edi, esi
.text:0040310B                 jb      short loc_403116
.text:0040310D                 mov     ecx, [eax+8]
.text:00403110                 add     ecx, esi
.text:00403112                 cmp     edi, ecx
.text:00403114                 jb      short loc_403120
.text:00403116
.text:00403116 loc_403116:                             ; CODE XREF: __FindPESection+2B↑j
.text:00403116                 inc     edx
.text:00403117                 add     eax, 28h ; '('
.text:0040311A                 cmp     edx, ebx
.text:0040311C                 jb      short loc_403106
.text:0040311E
.text:0040311E loc_40311E:                             ; CODE XREF: __FindPESection+21↑j
.text:0040311E                 xor     eax, eax
.text:00403120
.text:00403120 loc_403120:                             ; CODE XREF: __FindPESection+34↑j
.text:00403120                 pop     edi
.text:00403121                 pop     esi
.text:00403122                 pop     ebx
.text:00403123                 pop     ebp
.text:00403124                 retn
.text:00403124 __FindPESection endp
.text:00403124
.text:00403124 ; ---------------------------------------------------------------------------
.text:00403125                 align 10h
.text:00403130
.text:00403130 ; =============== S U B R O U T I N E =======================================
.text:00403130
.text:00403130 ; Attributes: bp-based frame info_from_lumina
.text:00403130
.text:00403130 ; int __cdecl _IsNonwritableInCurrentImage(char *pTarget)
.text:00403130 __IsNonwritableInCurrentImage proc near ; CODE XREF: __wmainCRTStartup+D2↑p
.text:00403130
.text:00403130 ms_exc          = CPPEH_RECORD ptr -18h
.text:00403130 arg_0           = dword ptr  8
.text:00403130
.text:00403130 ; __unwind { // __except_handler4
.text:00403130                 mov     edi, edi
.text:00403132                 push    ebp
.text:00403133                 mov     ebp, esp
.text:00403135                 push    0FFFFFFFEh
.text:00403137                 push    offset stru_4035F8
.text:0040313C                 push    offset __except_handler4
.text:00403141                 mov     eax, large fs:0
.text:00403147                 push    eax
.text:00403148                 sub     esp, 8
.text:0040314B                 push    ebx
.text:0040314C                 push    esi
.text:0040314D                 push    edi
.text:0040314E                 mov     eax, ___security_cookie
.text:00403153                 xor     [ebp+ms_exc.registration.ScopeTable], eax
.text:00403156                 xor     eax, ebp
.text:00403158                 push    eax
.text:00403159                 lea     eax, [ebp+ms_exc.registration]
.text:0040315C                 mov     large fs:0, eax
.text:00403162                 mov     [ebp+ms_exc.old_esp], esp
.text:00403165 ;   __try { // __except at loc_4031CE
.text:00403165                 mov     [ebp+ms_exc.registration.TryLevel], 0
.text:0040316C                 push    400000h
.text:00403171                 call    __ValidateImageBase
.text:00403176                 add     esp, 4
.text:00403179                 test    eax, eax
.text:0040317B                 jz      short loc_4031D1
.text:0040317D                 mov     eax, [ebp+arg_0]
.text:00403180                 sub     eax, 400000h
.text:00403185                 push    eax
.text:00403186                 push    400000h
.text:0040318B                 call    __FindPESection
.text:00403190                 add     esp, 8
.text:00403193                 test    eax, eax
.text:00403195                 jz      short loc_4031D1
.text:00403197                 mov     eax, [eax+24h]
.text:0040319A                 shr     eax, 1Fh
.text:0040319D                 not     eax
.text:0040319F                 and     eax, 1
.text:0040319F ;   } // starts at 403165
.text:004031A2                 mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
.text:004031A9                 mov     ecx, [ebp+ms_exc.registration.Next]
.text:004031AC                 mov     large fs:0, ecx
.text:004031B3                 pop     ecx
.text:004031B4                 pop     edi
.text:004031B5                 pop     esi
.text:004031B6                 pop     ebx
.text:004031B7                 mov     esp, ebp
.text:004031B9                 pop     ebp
.text:004031BA                 retn
.text:004031BB ; ---------------------------------------------------------------------------
.text:004031BB
.text:004031BB loc_4031BB:                             ; DATA XREF: .text:stru_4035F8↓o
.text:004031BB ;   __except filter // owned by 403165
.text:004031BB                 mov     eax, [ebp+ms_exc.exc_ptr]
.text:004031BE                 mov     eax, [eax]
.text:004031C0                 xor     ecx, ecx
.text:004031C2                 cmp     dword ptr [eax], 0C0000005h
.text:004031C8                 setz    cl
.text:004031CB                 mov     eax, ecx
.text:004031CD                 retn
.text:004031CE ; ---------------------------------------------------------------------------
.text:004031CE
.text:004031CE loc_4031CE:                             ; DATA XREF: .text:stru_4035F8↓o
.text:004031CE ;   __except(loc_4031BB) // owned by 403165
.text:004031CE                 mov     esp, [ebp+ms_exc.old_esp]
.text:004031D1
.text:004031D1 loc_4031D1:                             ; CODE XREF: __IsNonwritableInCurrentImage+4B↑j
.text:004031D1                                         ; __IsNonwritableInCurrentImage+65↑j
.text:004031D1                 mov     [ebp+ms_exc.registration.TryLevel], 0FFFFFFFEh
.text:004031D8                 xor     eax, eax
.text:004031DA                 mov     ecx, [ebp+ms_exc.registration.Next]
.text:004031DD                 mov     large fs:0, ecx
.text:004031E4                 pop     ecx
.text:004031E5                 pop     edi
.text:004031E6                 pop     esi
.text:004031E7                 pop     ebx
.text:004031E8                 mov     esp, ebp
.text:004031EA                 pop     ebp
.text:004031EB                 retn
.text:004031EB ; } // starts at 403130
.text:004031EB __IsNonwritableInCurrentImage endp
.text:004031EB
.text:004031EB ; ---------------------------------------------------------------------------
.text:004031EC                 align 10h
.text:004031F0
.text:004031F0 ; =============== S U B R O U T I N E =======================================
.text:004031F0
.text:004031F0 ; Attributes: bp-based frame info_from_lumina
.text:004031F0
.text:004031F0 ; int __cdecl _ValidateImageBase(char *pImageBase)
.text:004031F0 __ValidateImageBase proc near           ; CODE XREF: __IsNonwritableInCurrentImage+41↑p
.text:004031F0
.text:004031F0 arg_0           = dword ptr  8
.text:004031F0
.text:004031F0                 mov     edi, edi
.text:004031F2                 push    ebp
.text:004031F3                 mov     ebp, esp
.text:004031F5                 mov     eax, [ebp+arg_0]
.text:004031F8                 mov     ecx, 5A4Dh
.text:004031FD                 cmp     [eax], cx
.text:00403200                 jz      short loc_403206
.text:00403202                 xor     eax, eax
.text:00403204                 pop     ebp
.text:00403205                 retn
.text:00403206 ; ---------------------------------------------------------------------------
.text:00403206
.text:00403206 loc_403206:                             ; CODE XREF: __ValidateImageBase+10↑j
.text:00403206                 mov     ecx, [eax+3Ch]
.text:00403209                 add     ecx, eax
.text:0040320B                 xor     eax, eax
.text:0040320D                 cmp     dword ptr [ecx], 4550h
.text:00403213                 jnz     short loc_403221
.text:00403215                 mov     edx, 10Bh
.text:0040321A                 cmp     [ecx+18h], dx
.text:0040321E                 setz    al
.text:00403221
.text:00403221 loc_403221:                             ; CODE XREF: __ValidateImageBase+23↑j
.text:00403221                 pop     ebp
.text:00403222                 retn
.text:00403222 __ValidateImageBase endp
.text:00403222
.text:00403223
.text:00403223 ; =============== S U B R O U T I N E =======================================
.text:00403223
.text:00403223 ; Attributes: bp-based frame info_from_lumina
.text:00403223
.text:00403223 ; void __cdecl __security_init_cookie()
.text:00403223 ___security_init_cookie proc near       ; CODE XREF: _mainCRTStartup↑p
.text:00403223
.text:00403223 PerformanceCount= LARGE_INTEGER ptr -14h
.text:00403223 SystemTimeAsFileTime= _FILETIME ptr -0Ch
.text:00403223 var_4           = dword ptr -4
.text:00403223
.text:00403223                 mov     edi, edi
.text:00403225                 push    ebp
.text:00403226                 mov     ebp, esp
.text:00403228                 sub     esp, 14h
.text:0040322B                 and     [ebp+SystemTimeAsFileTime.dwLowDateTime], 0
.text:0040322F                 and     [ebp+SystemTimeAsFileTime.dwHighDateTime], 0
.text:00403233                 mov     eax, ___security_cookie
.text:00403238                 push    esi
.text:00403239                 push    edi
.text:0040323A                 mov     edi, 0BB40E64Eh
.text:0040323F                 mov     esi, 0FFFF0000h
.text:00403244                 cmp     eax, edi
.text:00403246                 jz      short loc_403255
.text:00403248                 test    esi, eax
.text:0040324A                 jz      short loc_403255
.text:0040324C                 not     eax
.text:0040324E                 mov     ___security_cookie_complement, eax
.text:00403253                 jmp     short loc_4032BF
.text:00403255 ; ---------------------------------------------------------------------------
.text:00403255
.text:00403255 loc_403255:                             ; CODE XREF: ___security_init_cookie+23↑j
.text:00403255                                         ; ___security_init_cookie+27↑j
.text:00403255                 lea     eax, [ebp+SystemTimeAsFileTime]
.text:00403258                 push    eax             ; lpSystemTimeAsFileTime
.text:00403259                 call    ds:__imp__GetSystemTimeAsFileTime@4 ; GetSystemTimeAsFileTime(x)
.text:0040325F                 mov     eax, [ebp+SystemTimeAsFileTime.dwHighDateTime]
.text:00403262                 xor     eax, [ebp+SystemTimeAsFileTime.dwLowDateTime]
.text:00403265                 mov     [ebp+var_4], eax
.text:00403268                 call    ds:__imp__GetCurrentProcessId@0 ; GetCurrentProcessId()
.text:0040326E                 xor     [ebp+var_4], eax
.text:00403271                 call    ds:__imp__GetCurrentThreadId@0 ; GetCurrentThreadId()
.text:00403277                 xor     [ebp+var_4], eax
.text:0040327A                 call    ds:__imp__GetTickCount@0 ; GetTickCount()
.text:00403280                 xor     eax, [ebp+var_4]
.text:00403283                 lea     ecx, [ebp+var_4]
.text:00403286                 xor     eax, ecx
.text:00403288                 mov     [ebp+var_4], eax
.text:0040328B                 lea     eax, [ebp+PerformanceCount]
.text:0040328E                 push    eax             ; lpPerformanceCount
.text:0040328F                 call    ds:__imp__QueryPerformanceCounter@4 ; QueryPerformanceCounter(x)
.text:00403295                 mov     eax, dword ptr [ebp+PerformanceCount+4]
.text:00403298                 xor     eax, dword ptr [ebp+PerformanceCount]
.text:0040329B                 mov     ecx, [ebp+var_4]
.text:0040329E                 xor     ecx, eax
.text:004032A0                 cmp     ecx, edi
.text:004032A2                 jz      short loc_4032AC
.text:004032A4                 test    ___security_cookie, esi
.text:004032AA                 jnz     short loc_4032B1
.text:004032AC
.text:004032AC loc_4032AC:                             ; CODE XREF: ___security_init_cookie+7F↑j
.text:004032AC                 mov     ecx, 0BB40E64Fh
.text:004032B1
.text:004032B1 loc_4032B1:                             ; CODE XREF: ___security_init_cookie+87↑j
.text:004032B1                 mov     ___security_cookie, ecx
.text:004032B7                 not     ecx
.text:004032B9                 mov     ___security_cookie_complement, ecx
.text:004032BF
.text:004032BF loc_4032BF:                             ; CODE XREF: ___security_init_cookie+30↑j
.text:004032BF                 pop     edi
.text:004032C0                 pop     esi
.text:004032C1                 mov     esp, ebp
.text:004032C3                 pop     ebp
.text:004032C4                 retn
.text:004032C4 ___security_init_cookie endp
.text:004032C4
.text:004032C5
.text:004032C5 ; =============== S U B R O U T I N E =======================================
.text:004032C5
.text:004032C5
.text:004032C5 __setdefaultprecision proc near         ; CODE XREF: pre_c_init:loc_402D99↑p
.text:004032C5                 push    30000h          ; Mask
.text:004032CA                 push    10000h          ; NewValue
.text:004032CF                 call    ds:__imp___controlfp
.text:004032D5                 pop     ecx
.text:004032D6                 pop     ecx
.text:004032D7                 retn
.text:004032D7 __setdefaultprecision endp
.text:004032D7
.text:004032D8
.text:004032D8 ; =============== S U B R O U T I N E =======================================
.text:004032D8
.text:004032D8 ; Attributes: thunk
.text:004032D8
.text:004032D8 ; void __cdecl _initterm(_PVFV *First, _PVFV *Last)
.text:004032D8 __initterm      proc near               ; CODE XREF: __wmainCRTStartup+A6↑p
.text:004032D8
.text:004032D8 First           = dword ptr  4
.text:004032D8 Last            = dword ptr  8
.text:004032D8
.text:004032D8                 jmp     ds:__imp___initterm
.text:004032D8 __initterm      endp
.text:004032D8
.text:004032D8 ; ---------------------------------------------------------------------------
.text:004032DE                 align 10h
.text:004032E0
.text:004032E0 ; =============== S U B R O U T I N E =======================================
.text:004032E0
.text:004032E0 ; Attributes: library function
.text:004032E0
.text:004032E0 __SEH_prolog4_GS proc near              ; CODE XREF: __wmainCRTStartup+7↑p
.text:004032E0
.text:004032E0 arg_4           = dword ptr  8
.text:004032E0
.text:004032E0                 push    offset __except_handler4
.text:004032E5                 push    large dword ptr fs:0
.text:004032EC                 mov     eax, [esp+8+arg_4]
.text:004032F0                 mov     [esp+8+arg_4], ebp
.text:004032F4                 lea     ebp, [esp+8+arg_4]
.text:004032F8                 sub     esp, eax
.text:004032FA                 push    ebx
.text:004032FB                 push    esi
.text:004032FC                 push    edi
.text:004032FD                 mov     eax, ___security_cookie
.text:00403302                 xor     [ebp-4], eax
.text:00403305                 xor     eax, ebp
.text:00403307                 mov     [ebp-1Ch], eax
.text:0040330A                 push    eax
.text:0040330B                 mov     [ebp-18h], esp
.text:0040330E                 push    dword ptr [ebp-8]
.text:00403311                 mov     eax, [ebp-4]
.text:00403314                 mov     dword ptr [ebp-4], 0FFFFFFFEh
.text:0040331B                 mov     [ebp-8], eax
.text:0040331E                 lea     eax, [ebp-10h]
.text:00403321                 mov     large fs:0, eax
.text:00403327                 retn
.text:00403327 __SEH_prolog4_GS endp
.text:00403327
.text:00403328
.text:00403328 ; =============== S U B R O U T I N E =======================================
.text:00403328
.text:00403328 ; Attributes: library function
.text:00403328
.text:00403328 __SEH_epilog4_GS proc near              ; CODE XREF: __wmainCRTStartup:loc_402F4C↑p
.text:00403328                 mov     ecx, [ebp-1Ch]
.text:0040332B                 xor     ecx, ebp        ; StackCookie
.text:0040332D                 call    @__security_check_cookie@4 ; __security_check_cookie(x)
.text:00403332                 jmp     __SEH_epilog4
.text:00403332 __SEH_epilog4_GS endp
.text:00403332
.text:00403332 ; ---------------------------------------------------------------------------
.text:00403337                 align 10h
.text:00403340
.text:00403340 ; =============== S U B R O U T I N E =======================================
.text:00403340
.text:00403340 ; Attributes: bp-based frame info_from_lumina
.text:00403340
.text:00403340 ; _EXCEPTION_DISPOSITION __cdecl _except_handler4(_EXCEPTION_RECORD *ExceptionRecord, _EXCEPTION_REGISTRATION_RECORD *EstablisherFrame, _CONTEXT *ContextRecord, void *DispatcherContext)
.text:00403340 __except_handler4 proc near             ; DATA XREF: .text:00401124↑o
.text:00403340                                         ; .text:___safe_se_handler_table↑o ...
.text:00403340
.text:00403340 arg_0           = dword ptr  8
.text:00403340 arg_4           = dword ptr  0Ch
.text:00403340 arg_8           = dword ptr  10h
.text:00403340 arg_C           = dword ptr  14h
.text:00403340
.text:00403340                 mov     edi, edi
.text:00403342                 push    ebp
.text:00403343                 mov     ebp, esp
.text:00403345                 push    [ebp+arg_C]
.text:00403348                 push    [ebp+arg_8]
.text:0040334B                 push    [ebp+arg_4]
.text:0040334E                 push    [ebp+arg_0]
.text:00403351                 push    offset @__security_check_cookie@4 ; __security_check_cookie(x)
.text:00403356                 push    offset ___security_cookie
.text:0040335B                 call    __except_handler4_common
.text:00403360                 add     esp, 18h
.text:00403363                 pop     ebp
.text:00403364                 retn
.text:00403364 __except_handler4 endp
.text:00403364
.text:00403364 ; ---------------------------------------------------------------------------
.text:00403365                 align 10h
.text:00403370
.text:00403370 ; =============== S U B R O U T I N E =======================================
.text:00403370
.text:00403370
.text:00403370 ; __fastcall _guard_check_icall_nop(x)
.text:00403370 @_guard_check_icall_nop@4 proc near     ; CODE XREF: REPLACE::SetArguments(void)+2C5↑p
.text:00403370                                         ; REPLACE::SetArguments(void)+2E7↑p ...
.text:00403370                 retn
.text:00403370 @_guard_check_icall_nop@4 endp
.text:00403370
.text:00403371
.text:00403371 ; =============== S U B R O U T I N E =======================================
.text:00403371
.text:00403371 ; Attributes: bp-based frame info_from_lumina
.text:00403371
.text:00403371 ; void __cdecl __raise_securityfailure(_EXCEPTION_POINTERS *ExceptionPointers)
.text:00403371 ___raise_securityfailure proc near      ; CODE XREF: ___report_gsfailure+107↓p
.text:00403371
.text:00403371 ExceptionInfo   = dword ptr  8
.text:00403371
.text:00403371                 mov     edi, edi
.text:00403373                 push    ebp
.text:00403374                 mov     ebp, esp
.text:00403376                 push    0               ; lpTopLevelExceptionFilter
.text:00403378                 call    ds:__imp__SetUnhandledExceptionFilter@4 ; SetUnhandledExceptionFilter(x)
.text:0040337E                 push    [ebp+ExceptionInfo] ; ExceptionInfo
.text:00403381                 call    ds:__imp__UnhandledExceptionFilter@4 ; UnhandledExceptionFilter(x)
.text:00403387                 push    0C0000409h      ; uExitCode
.text:0040338C                 call    ds:__imp__GetCurrentProcess@0 ; GetCurrentProcess()
.text:00403392                 push    eax             ; hProcess
.text:00403393                 call    ds:__imp__TerminateProcess@8 ; TerminateProcess(x,x)
.text:00403399                 pop     ebp
.text:0040339A                 retn
.text:0040339A ___raise_securityfailure endp
.text:0040339A
.text:0040339B
.text:0040339B ; =============== S U B R O U T I N E =======================================
.text:0040339B
.text:0040339B ; Attributes: noreturn bp-based frame info_from_lumina
.text:0040339B
.text:0040339B ; void __cdecl __noreturn __report_gsfailure()
.text:0040339B ___report_gsfailure proc near           ; CODE XREF: __security_check_cookie(x):loc_402FBB↑j
.text:0040339B
.text:0040339B var_324         = dword ptr -324h
.text:0040339B var_8           = dword ptr -8
.text:0040339B var_s0          = dword ptr  0
.text:0040339B arg_0           = byte ptr  8
.text:0040339B
.text:0040339B                 mov     edi, edi
.text:0040339D                 push    ebp
.text:0040339E                 mov     ebp, esp
.text:004033A0                 sub     esp, 324h
.text:004033A6                 mov     dword_404140, eax
.text:004033AB                 mov     dword_40413C, ecx
.text:004033B1                 mov     dword_404138, edx
.text:004033B7                 mov     dword_404134, ebx
.text:004033BD                 mov     dword_404130, esi
.text:004033C3                 mov     dword_40412C, edi
.text:004033C9                 mov     word_404158, ss
.text:004033D0                 mov     word_40414C, cs
.text:004033D7                 mov     word_404128, ds
.text:004033DE                 mov     word_404124, es
.text:004033E5                 mov     word_404120, fs
.text:004033EC                 mov     word_40411C, gs
.text:004033F3                 pushf
.text:004033F4                 pop     dword_404150
.text:004033FA                 mov     eax, [ebp+var_s0]
.text:004033FD                 mov     dword_404144, eax
.text:00403402                 mov     eax, [ebp+4]
.text:00403405                 mov     dword_404148, eax
.text:0040340A                 lea     eax, [ebp+arg_0]
.text:0040340D                 mov     dword_404154, eax
.text:00403412                 mov     eax, [ebp+var_324]
.text:00403418                 mov     dword_404090, 10001h
.text:00403422                 mov     eax, dword_404148
.text:00403427                 mov     dword_40404C, eax
.text:0040342C                 mov     dword_404040, 0C0000409h
.text:00403436                 mov     dword_404044, 1
.text:00403440                 mov     dword_404050, 3
.text:0040344A                 push    4
.text:0040344C                 pop     eax
.text:0040344D                 imul    eax, 0
.text:00403450                 mov     dword_404054[eax], 2
.text:0040345A                 push    4
.text:0040345C                 pop     eax
.text:0040345D                 shl     eax, 0
.text:00403460                 mov     ecx, ___security_cookie
.text:00403466                 mov     dword_404054[eax], ecx
.text:0040346C                 push    4
.text:0040346E                 pop     eax
.text:0040346F                 shl     eax, 1
.text:00403471                 mov     ecx, ___security_cookie_complement
.text:00403477                 mov     dword_404054[eax], ecx
.text:0040347D                 push    4
.text:0040347F                 pop     eax
.text:00403480                 imul    eax, 0
.text:00403483                 mov     ecx, ___security_cookie
.text:00403489                 mov     [ebp+eax+var_8], ecx
.text:0040348D                 push    4
.text:0040348F                 pop     eax
.text:00403490                 shl     eax, 0
.text:00403493                 mov     ecx, ___security_cookie_complement
.text:00403499                 mov     [ebp+eax+var_8], ecx
.text:0040349D                 push    offset ExceptionInfo ; ExceptionInfo
.text:004034A2                 call    ___raise_securityfailure
.text:004034A7                 mov     esp, ebp
.text:004034A9                 pop     ebp
.text:004034AA                 retn
.text:004034AA ___report_gsfailure endp
.text:004034AA
.text:004034AA ; ---------------------------------------------------------------------------
.text:004034AB                 align 4
.text:004034AC
.text:004034AC ; =============== S U B R O U T I N E =======================================
.text:004034AC
.text:004034AC ; Attributes: library function
.text:004034AC
.text:004034AC __SEH_prolog4   proc near               ; CODE XREF: RtlpImageNtHeader(x)+7↑p
.text:004034AC
.text:004034AC arg_4           = dword ptr  8
.text:004034AC
.text:004034AC                 push    offset __except_handler4
.text:004034B1                 push    large dword ptr fs:0
.text:004034B8                 mov     eax, [esp+8+arg_4]
.text:004034BC                 mov     [esp+8+arg_4], ebp
.text:004034C0                 lea     ebp, [esp+8+arg_4]
.text:004034C4                 sub     esp, eax
.text:004034C6                 push    ebx
.text:004034C7                 push    esi
.text:004034C8                 push    edi
.text:004034C9                 mov     eax, ___security_cookie
.text:004034CE                 xor     [ebp-4], eax
.text:004034D1                 xor     eax, ebp
.text:004034D3                 push    eax
.text:004034D4                 mov     [ebp-18h], esp
.text:004034D7                 push    dword ptr [ebp-8]
.text:004034DA                 mov     eax, [ebp-4]
.text:004034DD                 mov     dword ptr [ebp-4], 0FFFFFFFEh
.text:004034E4                 mov     [ebp-8], eax
.text:004034E7                 lea     eax, [ebp-10h]
.text:004034EA                 mov     large fs:0, eax
.text:004034F0                 retn
.text:004034F0 __SEH_prolog4   endp
.text:004034F0
.text:004034F1
.text:004034F1 ; =============== S U B R O U T I N E =======================================
.text:004034F1
.text:004034F1 ; Attributes: library function
.text:004034F1
.text:004034F1 __SEH_epilog4   proc near               ; CODE XREF: RtlpImageNtHeader(x)+62↑p
.text:004034F1                                         ; __SEH_epilog4_GS+A↑j
.text:004034F1                 mov     ecx, [ebp-10h]
.text:004034F4                 mov     large fs:0, ecx
.text:004034FB                 pop     ecx
.text:004034FC                 pop     edi
.text:004034FD                 pop     edi
.text:004034FE                 pop     esi
.text:004034FF                 pop     ebx
.text:00403500                 mov     esp, ebp
.text:00403502                 pop     ebp
.text:00403503                 push    ecx
.text:00403504                 retn
.text:00403504 __SEH_epilog4   endp
.text:00403504
.text:00403504 ; ---------------------------------------------------------------------------
.text:00403505                 align 2
.text:00403506
.text:00403506 ; =============== S U B R O U T I N E =======================================
.text:00403506
.text:00403506 ; Attributes: thunk
.text:00403506
.text:00403506 __except_handler4_common proc near      ; CODE XREF: __except_handler4+1B↑p
.text:00403506                 jmp     ds:__imp___except_handler4_common
.text:00403506 __except_handler4_common endp
.text:00403506
.text:00403506 ; ---------------------------------------------------------------------------
.text:0040350C                 align 10h
.text:00403510
.text:00403510 ; =============== S U B R O U T I N E =======================================
.text:00403510
.text:00403510 ; Attributes: thunk
.text:00403510
.text:00403510 ; void __thiscall OBJECT::DebugDump(OBJECT *__hidden this, unsigned __int8)
.text:00403510 ?DebugDump@OBJECT@@UBEXE@Z_0 proc near  ; DATA XREF: .text:00401010↑o
.text:00403510                                         ; .text:0040101C↑o ...
.text:00403510                 jmp     ds:__imp_?DebugDump@OBJECT@@UBEXE@Z ; OBJECT::DebugDump(uchar)
.text:00403510 ?DebugDump@OBJECT@@UBEXE@Z_0 endp
.text:00403510
.text:00403510 ; ---------------------------------------------------------------------------
.text:00403516                 align 10h
.text:00403520
.text:00403520 ; =============== S U B R O U T I N E =======================================
.text:00403520
.text:00403520 ; Attributes: thunk
.text:00403520
.text:00403520 ; int __thiscall OBJECT::Compare(OBJECT *__hidden this, const struct OBJECT *)
.text:00403520 ?Compare@OBJECT@@UBEJPBV1@@Z_0 proc near
.text:00403520                                         ; DATA XREF: .text:0040100C↑o
.text:00403520                                         ; .text:00401018↑o ...
.text:00403520                 jmp     ds:__imp_?Compare@OBJECT@@UBEJPBV1@@Z ; OBJECT::Compare(OBJECT const *)
.text:00403520 ?Compare@OBJECT@@UBEJPBV1@@Z_0 endp
.text:00403520
.text:00403520 ; ---------------------------------------------------------------------------
.text:00403526                 align 10h
.text:00403530
.text:00403530 ; =============== S U B R O U T I N E =======================================
.text:00403530
.text:00403530 ; Attributes: thunk
.text:00403530
.text:00403530 ; void __thiscall PROGRAM::ValidateVersion(PROGRAM *__hidden this, unsigned int, unsigned int)
.text:00403530 ?ValidateVersion@PROGRAM@@UBEXKK@Z_0 proc near
.text:00403530                                         ; DATA XREF: .text:00401040↑o
.text:00403530                                         ; .text:00401134↑o
.text:00403530                 jmp     ds:__imp_?ValidateVersion@PROGRAM@@UBEXKK@Z ; PROGRAM::ValidateVersion(ulong,ulong)
.text:00403530 ?ValidateVersion@PROGRAM@@UBEXKK@Z_0 endp
.text:00403530
.text:00403530 ; ---------------------------------------------------------------------------
.text:00403536                 align 10h
.text:00403540
.text:00403540 ; =============== S U B R O U T I N E =======================================
.text:00403540
.text:00403540 ; Attributes: thunk
.text:00403540
.text:00403540 ; void __thiscall PROGRAM::Usage(PROGRAM *__hidden this)
.text:00403540 ?Usage@PROGRAM@@UBEXXZ_0 proc near      ; DATA XREF: .text:0040103C↑o
.text:00403540                                         ; .text:00401138↑o
.text:00403540                 jmp     ds:__imp_?Usage@PROGRAM@@UBEXXZ ; PROGRAM::Usage(void)
.text:00403540 ?Usage@PROGRAM@@UBEXXZ_0 endp
.text:00403540
.text:00403540 ; ---------------------------------------------------------------------------
.text:00403546                 align 10h
.text:00403550
.text:00403550 ; =============== S U B R O U T I N E =======================================
.text:00403550
.text:00403550 ; Attributes: thunk
.text:00403550
.text:00403550 ; struct STREAM *__thiscall PROGRAM::GetStandardError(PROGRAM *__hidden this)
.text:00403550 ?GetStandardError@PROGRAM@@UAEPAVSTREAM@@XZ_0 proc near
.text:00403550                                         ; DATA XREF: .text:00401038↑o
.text:00403550                                         ; .text:0040113C↑o
.text:00403550                 jmp     ds:__imp_?GetStandardError@PROGRAM@@UAEPAVSTREAM@@XZ ; PROGRAM::GetStandardError(void)
.text:00403550 ?GetStandardError@PROGRAM@@UAEPAVSTREAM@@XZ_0 endp
.text:00403550
.text:00403550 ; ---------------------------------------------------------------------------
.text:00403556                 align 10h
.text:00403560
.text:00403560 ; =============== S U B R O U T I N E =======================================
.text:00403560
.text:00403560 ; Attributes: thunk
.text:00403560
.text:00403560 ; struct STREAM *__thiscall PROGRAM::GetStandardOutput(PROGRAM *__hidden this)
.text:00403560 ?GetStandardOutput@PROGRAM@@UAEPAVSTREAM@@XZ_0 proc near
.text:00403560                                         ; DATA XREF: .text:00401034↑o
.text:00403560                                         ; .text:00401140↑o
.text:00403560                 jmp     ds:__imp_?GetStandardOutput@PROGRAM@@UAEPAVSTREAM@@XZ ; PROGRAM::GetStandardOutput(void)
.text:00403560 ?GetStandardOutput@PROGRAM@@UAEPAVSTREAM@@XZ_0 endp
.text:00403560
.text:00403560 ; ---------------------------------------------------------------------------
.text:00403566                 align 10h
.text:00403570
.text:00403570 ; =============== S U B R O U T I N E =======================================
.text:00403570
.text:00403570 ; Attributes: thunk
.text:00403570
.text:00403570 ; struct STREAM *__thiscall PROGRAM::GetStandardInput(PROGRAM *__hidden this)
.text:00403570 ?GetStandardInput@PROGRAM@@UAEPAVSTREAM@@XZ_0 proc near
.text:00403570                                         ; DATA XREF: .text:00401030↑o
.text:00403570                                         ; .text:00401144↑o
.text:00403570                 jmp     ds:__imp_?GetStandardInput@PROGRAM@@UAEPAVSTREAM@@XZ ; PROGRAM::GetStandardInput(void)
.text:00403570 ?GetStandardInput@PROGRAM@@UAEPAVSTREAM@@XZ_0 endp
.text:00403570
.text:00403570 ; ---------------------------------------------------------------------------
.text:00403576                 align 10h
.text:00403580
.text:00403580 ; =============== S U B R O U T I N E =======================================
.text:00403580
.text:00403580 ; Attributes: thunk
.text:00403580
.text:00403580 ; void __thiscall PROGRAM::Fatal(PROGRAM *__hidden this)
.text:00403580 ?Fatal@PROGRAM@@UBEXXZ_0 proc near      ; DATA XREF: .text:0040102C↑o
.text:00403580                                         ; .text:00401148↑o
.text:00403580                 jmp     ds:__imp_?Fatal@PROGRAM@@UBEXXZ ; PROGRAM::Fatal(void)
.text:00403580 ?Fatal@PROGRAM@@UBEXXZ_0 endp
.text:00403580
.text:00403580 ; ---------------------------------------------------------------------------
.text:00403586                 align 10h
.text:00403590
.text:00403590 ; =============== S U B R O U T I N E =======================================
.text:00403590
.text:00403590 ; Attributes: thunk
.text:00403590
.text:00403590 ; void PROGRAM::Fatal(PROGRAM *__hidden this, unsigned int, unsigned int, char *, ...)
.text:00403590 ?Fatal@PROGRAM@@UBAXKKPADZZ_0 proc near ; DATA XREF: .text:00401028↑o
.text:00403590                                         ; .text:0040114C↑o
.text:00403590
.text:00403590 this            = dword ptr  4
.text:00403590
.text:00403590                 jmp     ds:__imp_?Fatal@PROGRAM@@UBAXKKPADZZ ; PROGRAM::Fatal(ulong,ulong,char *,...)
.text:00403590 ?Fatal@PROGRAM@@UBAXKKPADZZ_0 endp
.text:00403590
.text:00403590 ; ---------------------------------------------------------------------------
.text:00403596                 align 10h
.text:004035A0
.text:004035A0 ; =============== S U B R O U T I N E =======================================
.text:004035A0
.text:004035A0 ; Attributes: thunk
.text:004035A0
.text:004035A0 ; public: virtual unsigned char __thiscall PROGRAM::DisplayMessage(unsigned long, enum MESSAGE_TYPE)const
.text:004035A0 ?DisplayMessage@PROGRAM@@UBEEKW4MESSAGE_TYPE@@@Z_0 proc near
.text:004035A0                                         ; DATA XREF: .text:00401024↑o
.text:004035A0                                         ; .text:00401150↑o
.text:004035A0                 jmp     ds:__imp_?DisplayMessage@PROGRAM@@UBEEKW4MESSAGE_TYPE@@@Z ; PROGRAM::DisplayMessage(ulong,MESSAGE_TYPE)
.text:004035A0 ?DisplayMessage@PROGRAM@@UBEEKW4MESSAGE_TYPE@@@Z_0 endp
.text:004035A0
.text:004035A0 ; ---------------------------------------------------------------------------
.text:004035A6                 align 10h
.text:004035B0
.text:004035B0 ; =============== S U B R O U T I N E =======================================
.text:004035B0
.text:004035B0 ; Attributes: thunk
.text:004035B0
.text:004035B0 ; public: virtual unsigned char __cdecl PROGRAM::DisplayMessage(unsigned long, enum MESSAGE_TYPE, char *, ...)const
.text:004035B0 ?DisplayMessage@PROGRAM@@UBAEKW4MESSAGE_TYPE@@PADZZ_0 proc near
.text:004035B0                                         ; DATA XREF: .text:00401020↑o
.text:004035B0                                         ; .text:00401154↑o
.text:004035B0                 jmp     ds:__imp_?DisplayMessage@PROGRAM@@UBAEKW4MESSAGE_TYPE@@PADZZ ; PROGRAM::DisplayMessage(ulong,MESSAGE_TYPE,char *,...)
.text:004035B0 ?DisplayMessage@PROGRAM@@UBAEKW4MESSAGE_TYPE@@PADZZ_0 endp
.text:004035B0
.text:004035B0 ; ---------------------------------------------------------------------------
.text:004035B6                 align 4
.text:004035B8 stru_4035B8     dd 0FFFFFFE4h           ; GSCookieOffset
.text:004035B8                                         ; DATA XREF: __wmainCRTStartup+2↑o
.text:004035B8                 dd 0                    ; GSCookieXOROffset
.text:004035B8                 dd 0FFFFFFD0h           ; EHCookieOffset
.text:004035B8                 dd 0                    ; EHCookieXOROffset
.text:004035B8                 dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
.text:004035B8                 dd offset loc_402F02    ; ScopeRecord.FilterFunc
.text:004035B8                 dd offset loc_402F16    ; ScopeRecord.HandlerFunc
.text:004035D4                 align 8
.text:004035D8 stru_4035D8     dd 0FFFFFFFEh           ; GSCookieOffset
.text:004035D8                                         ; DATA XREF: RtlpImageNtHeader(x)+2↑o
.text:004035D8                 dd 0                    ; GSCookieXOROffset
.text:004035D8                 dd 0FFFFFFD4h           ; EHCookieOffset
.text:004035D8                 dd 0                    ; EHCookieXOROffset
.text:004035D8                 dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
.text:004035D8                 dd offset loc_403071    ; ScopeRecord.FilterFunc
.text:004035D8                 dd offset loc_403075    ; ScopeRecord.HandlerFunc
.text:004035F4                 align 8
.text:004035F8 stru_4035F8     dd 0FFFFFFFEh           ; GSCookieOffset
.text:004035F8                                         ; DATA XREF: __IsNonwritableInCurrentImage+7↑o
.text:004035F8                 dd 0                    ; GSCookieXOROffset
.text:004035F8                 dd 0FFFFFFD8h           ; EHCookieOffset
.text:004035F8                 dd 0                    ; EHCookieXOROffset
.text:004035F8                 dd 0FFFFFFFEh           ; ScopeRecord.EnclosingLevel
.text:004035F8                 dd offset loc_4031BB    ; ScopeRecord.FilterFunc
.text:004035F8                 dd offset loc_4031CE    ; ScopeRecord.HandlerFunc
.text:00403614                 align 200h
.text:00403800                 dd 200h dup(?)
.text:00403800 _text           ends
.text:00403800
.data:00404000 ; Section 2. (virtual address 00004000)
.data:00404000 ; Virtual size                  : 0000039C (    924.)
.data:00404000 ; Section size in file          : 00000200 (    512.)
.data:00404000 ; Offset to raw data for section: 00002C00
.data:00404000 ; Flags C0000040: Data Readable Writable
.data:00404000 ; Alignment     : default
.data:00404000 ; ===========================================================================
.data:00404000
.data:00404000 ; Segment type: Pure data
.data:00404000 ; Segment permissions: Read/Write
.data:00404000 _data           segment para public 'DATA' use32
.data:00404000                 assume cs:_data
.data:00404000                 ;org 404000h
.data:00404000 ___defaultmatherr dd 1                  ; DATA XREF: pre_c_init+A4↑r
.data:00404004 ; uintptr_t __security_cookie
.data:00404004 ___security_cookie dd 0BB40E64Eh        ; DATA XREF: .text:00401084↑o
.data:00404004                                         ; REPLACE::SetArguments(void)+6↑r ...
.data:00404008 ___security_cookie_complement dd 44BF19B1h
.data:00404008                                         ; DATA XREF: ___security_init_cookie+2B↑w
.data:00404008                                         ; ___security_init_cookie+96↑w ...
.data:0040400C                 align 10h
.data:00404010 dword_404010    dd 0                    ; DATA XREF: __wmainCRTStartup+10A↑w
.data:00404010                                         ; __wmainCRTStartup+139↑w ...
.data:00404014 dword_404014    dd 0                    ; DATA XREF: __wmainCRTStartup:loc_402E71↑w
.data:00404014                                         ; __wmainCRTStartup:loc_402F31↑r
.data:00404018 ; int argc
.data:00404018 argc            dd 0                    ; DATA XREF: pre_cpp_init+1F↑o
.data:00404018                                         ; __wmainCRTStartup+FC↑r
.data:0040401C ; char **argv
.data:0040401C argv            dd 0                    ; DATA XREF: pre_cpp_init+1A↑o
.data:0040401C                                         ; __wmainCRTStartup+F6↑r
.data:00404020 ; char **envp
.data:00404020 envp            dd 0                    ; DATA XREF: pre_cpp_init+15↑o
.data:00404020                                         ; __wmainCRTStartup:loc_402ED3↑r
.data:00404024 dword_404024    dd 0                    ; DATA XREF: pre_cpp_init+2D↑w
.data:00404028 dword_404028    dd 0                    ; DATA XREF: pre_c_init+62↑w
.data:00404028                                         ; __wmainCRTStartup+10F↑r ...
.data:0040402C dword_40402C    dd 0                    ; DATA XREF: pre_cpp_init+5↑o
.data:0040402C                                         ; pre_cpp_init+10↑w
.data:00404030 ; int _commode
.data:00404030 __commode       dd 0                    ; DATA XREF: pre_c_init+97↑r
.data:00404034 __dowildcard    dd 0                    ; DATA XREF: pre_cpp_init+A↑r
.data:00404038 __newmode       dd 0                    ; DATA XREF: pre_cpp_init↑r
.data:0040403C ; int _fmode
.data:0040403C __fmode         dd 0                    ; DATA XREF: pre_c_init+89↑r
.data:00404040 dword_404040    dd 0                    ; DATA XREF: .text:ExceptionInfo↑o
.data:00404040                                         ; ___report_gsfailure+91↑w
.data:00404044 dword_404044    dd 0                    ; DATA XREF: ___report_gsfailure+9B↑w
.data:00404048                 db    0
.data:00404049                 db    0
.data:0040404A                 db    0
.data:0040404B                 db    0
.data:0040404C dword_40404C    dd 0                    ; DATA XREF: ___report_gsfailure+8C↑w
.data:00404050 dword_404050    dd 0                    ; DATA XREF: ___report_gsfailure+A5↑w
.data:00404054 dword_404054    dd 0                    ; DATA XREF: ___report_gsfailure+B5↑w
.data:00404054                                         ; ___report_gsfailure+CB↑w ...
.data:00404058                 db    0
.data:00404059                 db    0
.data:0040405A                 db    0
.data:0040405B                 db    0
.data:0040405C                 db    0
.data:0040405D                 db    0
.data:0040405E                 db    0
.data:0040405F                 db    0
.data:00404060                 db    0
.data:00404061                 db    0
.data:00404062                 db    0
.data:00404063                 db    0
.data:00404064                 db    0
.data:00404065                 db    0
.data:00404066                 db    0
.data:00404067                 db    0
.data:00404068                 db    0
.data:00404069                 db    0
.data:0040406A                 db    0
.data:0040406B                 db    0
.data:0040406C                 db    0
.data:0040406D                 db    0
.data:0040406E                 db    0
.data:0040406F                 db    0
.data:00404070                 db    0
.data:00404071                 db    0
.data:00404072                 db    0
.data:00404073                 db    0
.data:00404074                 db    0
.data:00404075                 db    0
.data:00404076                 db    0
.data:00404077                 db    0
.data:00404078                 db    0
.data:00404079                 db    0
.data:0040407A                 db    0
.data:0040407B                 db    0
.data:0040407C                 db    0
.data:0040407D                 db    0
.data:0040407E                 db    0
.data:0040407F                 db    0
.data:00404080                 db    0
.data:00404081                 db    0
.data:00404082                 db    0
.data:00404083                 db    0
.data:00404084                 db    0
.data:00404085                 db    0
.data:00404086                 db    0
.data:00404087                 db    0
.data:00404088                 db    0
.data:00404089                 db    0
.data:0040408A                 db    0
.data:0040408B                 db    0
.data:0040408C                 db    0
.data:0040408D                 db    0
.data:0040408E                 db    0
.data:0040408F                 db    0
.data:00404090 dword_404090    dd 0                    ; DATA XREF: .text:ExceptionInfo↑o
.data:00404090                                         ; ___report_gsfailure+7D↑w
.data:00404094                 db    0
.data:00404095                 db    0
.data:00404096                 db    0
.data:00404097                 db    0
.data:00404098                 db    0
.data:00404099                 db    0
.data:0040409A                 db    0
.data:0040409B                 db    0
.data:0040409C                 db    0
.data:0040409D                 db    0
.data:0040409E                 db    0
.data:0040409F                 db    0
.data:004040A0                 db    0
.data:004040A1                 db    0
.data:004040A2                 db    0
.data:004040A3                 db    0
.data:004040A4                 db    0
.data:004040A5                 db    0
.data:004040A6                 db    0
.data:004040A7                 db    0
.data:004040A8                 db    0
.data:004040A9                 db    0
.data:004040AA                 db    0
.data:004040AB                 db    0
.data:004040AC                 db    0
.data:004040AD                 db    0
.data:004040AE                 db    0
.data:004040AF                 db    0
.data:004040B0                 db    0
.data:004040B1                 db    0
.data:004040B2                 db    0
.data:004040B3                 db    0
.data:004040B4                 db    0
.data:004040B5                 db    0
.data:004040B6                 db    0
.data:004040B7                 db    0
.data:004040B8                 db    0
.data:004040B9                 db    0
.data:004040BA                 db    0
.data:004040BB                 db    0
.data:004040BC                 db    0
.data:004040BD                 db    0
.data:004040BE                 db    0
.data:004040BF                 db    0
.data:004040C0                 db    0
.data:004040C1                 db    0
.data:004040C2                 db    0
.data:004040C3                 db    0
.data:004040C4                 db    0
.data:004040C5                 db    0
.data:004040C6                 db    0
.data:004040C7                 db    0
.data:004040C8                 db    0
.data:004040C9                 db    0
.data:004040CA                 db    0
.data:004040CB                 db    0
.data:004040CC                 db    0
.data:004040CD                 db    0
.data:004040CE                 db    0
.data:004040CF                 db    0
.data:004040D0                 db    0
.data:004040D1                 db    0
.data:004040D2                 db    0
.data:004040D3                 db    0
.data:004040D4                 db    0
.data:004040D5                 db    0
.data:004040D6                 db    0
.data:004040D7                 db    0
.data:004040D8                 db    0
.data:004040D9                 db    0
.data:004040DA                 db    0
.data:004040DB                 db    0
.data:004040DC                 db    0
.data:004040DD                 db    0
.data:004040DE                 db    0
.data:004040DF                 db    0
.data:004040E0                 db    0
.data:004040E1                 db    0
.data:004040E2                 db    0
.data:004040E3                 db    0
.data:004040E4                 db    0
.data:004040E5                 db    0
.data:004040E6                 db    0
.data:004040E7                 db    0
.data:004040E8                 db    0
.data:004040E9                 db    0
.data:004040EA                 db    0
.data:004040EB                 db    0
.data:004040EC                 db    0
.data:004040ED                 db    0
.data:004040EE                 db    0
.data:004040EF                 db    0
.data:004040F0                 db    0
.data:004040F1                 db    0
.data:004040F2                 db    0
.data:004040F3                 db    0
.data:004040F4                 db    0
.data:004040F5                 db    0
.data:004040F6                 db    0
.data:004040F7                 db    0
.data:004040F8                 db    0
.data:004040F9                 db    0
.data:004040FA                 db    0
.data:004040FB                 db    0
.data:004040FC                 db    0
.data:004040FD                 db    0
.data:004040FE                 db    0
.data:004040FF                 db    0
.data:00404100                 db    0
.data:00404101                 db    0
.data:00404102                 db    0
.data:00404103                 db    0
.data:00404104                 db    0
.data:00404105                 db    0
.data:00404106                 db    0
.data:00404107                 db    0
.data:00404108                 db    0
.data:00404109                 db    0
.data:0040410A                 db    0
.data:0040410B                 db    0
.data:0040410C                 db    0
.data:0040410D                 db    0
.data:0040410E                 db    0
.data:0040410F                 db    0
.data:00404110                 db    0
.data:00404111                 db    0
.data:00404112                 db    0
.data:00404113                 db    0
.data:00404114                 db    0
.data:00404115                 db    0
.data:00404116                 db    0
.data:00404117                 db    0
.data:00404118                 db    0
.data:00404119                 db    0
.data:0040411A                 db    0
.data:0040411B                 db    0
.data:0040411C word_40411C     dw 0                    ; DATA XREF: ___report_gsfailure+51↑w
.data:0040411E                 align 10h
.data:00404120 word_404120     dw 0                    ; DATA XREF: ___report_gsfailure+4A↑w
.data:00404122                 align 4
.data:00404124 word_404124     dw 0                    ; DATA XREF: ___report_gsfailure+43↑w
.data:00404126                 align 4
.data:00404128 word_404128     dw 0                    ; DATA XREF: ___report_gsfailure+3C↑w
.data:0040412A                 align 4
.data:0040412C dword_40412C    dd 0                    ; DATA XREF: ___report_gsfailure+28↑w
.data:00404130 dword_404130    dd 0                    ; DATA XREF: ___report_gsfailure+22↑w
.data:00404134 dword_404134    dd 0                    ; DATA XREF: ___report_gsfailure+1C↑w
.data:00404138 dword_404138    dd 0                    ; DATA XREF: ___report_gsfailure+16↑w
.data:0040413C dword_40413C    dd 0                    ; DATA XREF: ___report_gsfailure+10↑w
.data:00404140 dword_404140    dd 0                    ; DATA XREF: ___report_gsfailure+B↑w
.data:00404144 dword_404144    dd 0                    ; DATA XREF: ___report_gsfailure+62↑w
.data:00404148 dword_404148    dd 0                    ; DATA XREF: ___report_gsfailure+6A↑w
.data:00404148                                         ; ___report_gsfailure+87↑r
.data:0040414C word_40414C     dw 0                    ; DATA XREF: ___report_gsfailure+35↑w
.data:0040414E                 align 10h
.data:00404150 dword_404150    dd 0                    ; DATA XREF: ___report_gsfailure+59↑w
.data:00404154 dword_404154    dd 0                    ; DATA XREF: ___report_gsfailure+72↑w
.data:00404158 word_404158     dw 0                    ; DATA XREF: ___report_gsfailure+2E↑w
.data:0040415A                 db    0
.data:0040415B                 db    0
.data:0040415C                 db    0
.data:0040415D                 db    0
.data:0040415E                 db    0
.data:0040415F                 db    0
.data:00404160                 db    0
.data:00404161                 db    0
.data:00404162                 db    0
.data:00404163                 db    0
.data:00404164                 db    0
.data:00404165                 db    0
.data:00404166                 db    0
.data:00404167                 db    0
.data:00404168                 db    0
.data:00404169                 db    0
.data:0040416A                 db    0
.data:0040416B                 db    0
.data:0040416C                 db    0
.data:0040416D                 db    0
.data:0040416E                 db    0
.data:0040416F                 db    0
.data:00404170                 db    0
.data:00404171                 db    0
.data:00404172                 db    0
.data:00404173                 db    0
.data:00404174                 db    0
.data:00404175                 db    0
.data:00404176                 db    0
.data:00404177                 db    0
.data:00404178                 db    0
.data:00404179                 db    0
.data:0040417A                 db    0
.data:0040417B                 db    0
.data:0040417C                 db    0
.data:0040417D                 db    0
.data:0040417E                 db    0
.data:0040417F                 db    0
.data:00404180                 db    0
.data:00404181                 db    0
.data:00404182                 db    0
.data:00404183                 db    0
.data:00404184                 db    0
.data:00404185                 db    0
.data:00404186                 db    0
.data:00404187                 db    0
.data:00404188                 db    0
.data:00404189                 db    0
.data:0040418A                 db    0
.data:0040418B                 db    0
.data:0040418C                 db    0
.data:0040418D                 db    0
.data:0040418E                 db    0
.data:0040418F                 db    0
.data:00404190                 db    0
.data:00404191                 db    0
.data:00404192                 db    0
.data:00404193                 db    0
.data:00404194                 db    0
.data:00404195                 db    0
.data:00404196                 db    0
.data:00404197                 db    0
.data:00404198                 db    0
.data:00404199                 db    0
.data:0040419A                 db    0
.data:0040419B                 db    0
.data:0040419C                 db    0
.data:0040419D                 db    0
.data:0040419E                 db    0
.data:0040419F                 db    0
.data:004041A0                 db    0
.data:004041A1                 db    0
.data:004041A2                 db    0
.data:004041A3                 db    0
.data:004041A4                 db    0
.data:004041A5                 db    0
.data:004041A6                 db    0
.data:004041A7                 db    0
.data:004041A8                 db    0
.data:004041A9                 db    0
.data:004041AA                 db    0
.data:004041AB                 db    0
.data:004041AC                 db    0
.data:004041AD                 db    0
.data:004041AE                 db    0
.data:004041AF                 db    0
.data:004041B0                 db    0
.data:004041B1                 db    0
.data:004041B2                 db    0
.data:004041B3                 db    0
.data:004041B4                 db    0
.data:004041B5                 db    0
.data:004041B6                 db    0
.data:004041B7                 db    0
.data:004041B8                 db    0
.data:004041B9                 db    0
.data:004041BA                 db    0
.data:004041BB                 db    0
.data:004041BC                 db    0
.data:004041BD                 db    0
.data:004041BE                 db    0
.data:004041BF                 db    0
.data:004041C0                 db    0
.data:004041C1                 db    0
.data:004041C2                 db    0
.data:004041C3                 db    0
.data:004041C4                 db    0
.data:004041C5                 db    0
.data:004041C6                 db    0
.data:004041C7                 db    0
.data:004041C8                 db    0
.data:004041C9                 db    0
.data:004041CA                 db    0
.data:004041CB                 db    0
.data:004041CC                 db    0
.data:004041CD                 db    0
.data:004041CE                 db    0
.data:004041CF                 db    0
.data:004041D0                 db    0
.data:004041D1                 db    0
.data:004041D2                 db    0
.data:004041D3                 db    0
.data:004041D4                 db    0
.data:004041D5                 db    0
.data:004041D6                 db    0
.data:004041D7                 db    0
.data:004041D8                 db    0
.data:004041D9                 db    0
.data:004041DA                 db    0
.data:004041DB                 db    0
.data:004041DC                 db    0
.data:004041DD                 db    0
.data:004041DE                 db    0
.data:004041DF                 db    0
.data:004041E0                 db    0
.data:004041E1                 db    0
.data:004041E2                 db    0
.data:004041E3                 db    0
.data:004041E4                 db    0
.data:004041E5                 db    0
.data:004041E6                 db    0
.data:004041E7                 db    0
.data:004041E8                 db    0
.data:004041E9                 db    0
.data:004041EA                 db    0
.data:004041EB                 db    0
.data:004041EC                 db    0
.data:004041ED                 db    0
.data:004041EE                 db    0
.data:004041EF                 db    0
.data:004041F0                 db    0
.data:004041F1                 db    0
.data:004041F2                 db    0
.data:004041F3                 db    0
.data:004041F4                 db    0
.data:004041F5                 db    0
.data:004041F6                 db    0
.data:004041F7                 db    0
.data:004041F8                 db    0
.data:004041F9                 db    0
.data:004041FA                 db    0
.data:004041FB                 db    0
.data:004041FC                 db    0
.data:004041FD                 db    0
.data:004041FE                 db    0
.data:004041FF                 db    0
.data:00404200                 db    ? ;
.data:00404201                 db    ? ;
.data:00404202                 db    ? ;
.data:00404203                 db    ? ;
.data:00404204                 db    ? ;
.data:00404205                 db    ? ;
.data:00404206                 db    ? ;
.data:00404207                 db    ? ;
.data:00404208                 db    ? ;
.data:00404209                 db    ? ;
.data:0040420A                 db    ? ;
.data:0040420B                 db    ? ;
.data:0040420C                 db    ? ;
.data:0040420D                 db    ? ;
.data:0040420E                 db    ? ;
.data:0040420F                 db    ? ;
.data:00404210                 db    ? ;
.data:00404211                 db    ? ;
.data:00404212                 db    ? ;
.data:00404213                 db    ? ;
.data:00404214                 db    ? ;
.data:00404215                 db    ? ;
.data:00404216                 db    ? ;
.data:00404217                 db    ? ;
.data:00404218                 db    ? ;
.data:00404219                 db    ? ;
.data:0040421A                 db    ? ;
.data:0040421B                 db    ? ;
.data:0040421C                 db    ? ;
.data:0040421D                 db    ? ;
.data:0040421E                 db    ? ;
.data:0040421F                 db    ? ;
.data:00404220                 db    ? ;
.data:00404221                 db    ? ;
.data:00404222                 db    ? ;
.data:00404223                 db    ? ;
.data:00404224                 db    ? ;
.data:00404225                 db    ? ;
.data:00404226                 db    ? ;
.data:00404227                 db    ? ;
.data:00404228                 db    ? ;
.data:00404229                 db    ? ;
.data:0040422A                 db    ? ;
.data:0040422B                 db    ? ;
.data:0040422C                 db    ? ;
.data:0040422D                 db    ? ;
.data:0040422E                 db    ? ;
.data:0040422F                 db    ? ;
.data:00404230                 db    ? ;
.data:00404231                 db    ? ;
.data:00404232                 db    ? ;
.data:00404233                 db    ? ;
.data:00404234                 db    ? ;
.data:00404235                 db    ? ;
.data:00404236                 db    ? ;
.data:00404237                 db    ? ;
.data:00404238                 db    ? ;
.data:00404239                 db    ? ;
.data:0040423A                 db    ? ;
.data:0040423B                 db    ? ;
.data:0040423C                 db    ? ;
.data:0040423D                 db    ? ;
.data:0040423E                 db    ? ;
.data:0040423F                 db    ? ;
.data:00404240                 db    ? ;
.data:00404241                 db    ? ;
.data:00404242                 db    ? ;
.data:00404243                 db    ? ;
.data:00404244                 db    ? ;
.data:00404245                 db    ? ;
.data:00404246                 db    ? ;
.data:00404247                 db    ? ;
.data:00404248                 db    ? ;
.data:00404249                 db    ? ;
.data:0040424A                 db    ? ;
.data:0040424B                 db    ? ;
.data:0040424C                 db    ? ;
.data:0040424D                 db    ? ;
.data:0040424E                 db    ? ;
.data:0040424F                 db    ? ;
.data:00404250                 db    ? ;
.data:00404251                 db    ? ;
.data:00404252                 db    ? ;
.data:00404253                 db    ? ;
.data:00404254                 db    ? ;
.data:00404255                 db    ? ;
.data:00404256                 db    ? ;
.data:00404257                 db    ? ;
.data:00404258                 db    ? ;
.data:00404259                 db    ? ;
.data:0040425A                 db    ? ;
.data:0040425B                 db    ? ;
.data:0040425C                 db    ? ;
.data:0040425D                 db    ? ;
.data:0040425E                 db    ? ;
.data:0040425F                 db    ? ;
.data:00404260                 db    ? ;
.data:00404261                 db    ? ;
.data:00404262                 db    ? ;
.data:00404263                 db    ? ;
.data:00404264                 db    ? ;
.data:00404265                 db    ? ;
.data:00404266                 db    ? ;
.data:00404267                 db    ? ;
.data:00404268                 db    ? ;
.data:00404269                 db    ? ;
.data:0040426A                 db    ? ;
.data:0040426B                 db    ? ;
.data:0040426C                 db    ? ;
.data:0040426D                 db    ? ;
.data:0040426E                 db    ? ;
.data:0040426F                 db    ? ;
.data:00404270                 db    ? ;
.data:00404271                 db    ? ;
.data:00404272                 db    ? ;
.data:00404273                 db    ? ;
.data:00404274                 db    ? ;
.data:00404275                 db    ? ;
.data:00404276                 db    ? ;
.data:00404277                 db    ? ;
.data:00404278                 db    ? ;
.data:00404279                 db    ? ;
.data:0040427A                 db    ? ;
.data:0040427B                 db    ? ;
.data:0040427C                 db    ? ;
.data:0040427D                 db    ? ;
.data:0040427E                 db    ? ;
.data:0040427F                 db    ? ;
.data:00404280                 db    ? ;
.data:00404281                 db    ? ;
.data:00404282                 db    ? ;
.data:00404283                 db    ? ;
.data:00404284                 db    ? ;
.data:00404285                 db    ? ;
.data:00404286                 db    ? ;
.data:00404287                 db    ? ;
.data:00404288                 db    ? ;
.data:00404289                 db    ? ;
.data:0040428A                 db    ? ;
.data:0040428B                 db    ? ;
.data:0040428C                 db    ? ;
.data:0040428D                 db    ? ;
.data:0040428E                 db    ? ;
.data:0040428F                 db    ? ;
.data:00404290                 db    ? ;
.data:00404291                 db    ? ;
.data:00404292                 db    ? ;
.data:00404293                 db    ? ;
.data:00404294                 db    ? ;
.data:00404295                 db    ? ;
.data:00404296                 db    ? ;
.data:00404297                 db    ? ;
.data:00404298                 db    ? ;
.data:00404299                 db    ? ;
.data:0040429A                 db    ? ;
.data:0040429B                 db    ? ;
.data:0040429C                 db    ? ;
.data:0040429D                 db    ? ;
.data:0040429E                 db    ? ;
.data:0040429F                 db    ? ;
.data:004042A0                 db    ? ;
.data:004042A1                 db    ? ;
.data:004042A2                 db    ? ;
.data:004042A3                 db    ? ;
.data:004042A4                 db    ? ;
.data:004042A5                 db    ? ;
.data:004042A6                 db    ? ;
.data:004042A7                 db    ? ;
.data:004042A8                 db    ? ;
.data:004042A9                 db    ? ;
.data:004042AA                 db    ? ;
.data:004042AB                 db    ? ;
.data:004042AC                 db    ? ;
.data:004042AD                 db    ? ;
.data:004042AE                 db    ? ;
.data:004042AF                 db    ? ;
.data:004042B0                 db    ? ;
.data:004042B1                 db    ? ;
.data:004042B2                 db    ? ;
.data:004042B3                 db    ? ;
.data:004042B4                 db    ? ;
.data:004042B5                 db    ? ;
.data:004042B6                 db    ? ;
.data:004042B7                 db    ? ;
.data:004042B8                 db    ? ;
.data:004042B9                 db    ? ;
.data:004042BA                 db    ? ;
.data:004042BB                 db    ? ;
.data:004042BC                 db    ? ;
.data:004042BD                 db    ? ;
.data:004042BE                 db    ? ;
.data:004042BF                 db    ? ;
.data:004042C0                 db    ? ;
.data:004042C1                 db    ? ;
.data:004042C2                 db    ? ;
.data:004042C3                 db    ? ;
.data:004042C4                 db    ? ;
.data:004042C5                 db    ? ;
.data:004042C6                 db    ? ;
.data:004042C7                 db    ? ;
.data:004042C8                 db    ? ;
.data:004042C9                 db    ? ;
.data:004042CA                 db    ? ;
.data:004042CB                 db    ? ;
.data:004042CC                 db    ? ;
.data:004042CD                 db    ? ;
.data:004042CE                 db    ? ;
.data:004042CF                 db    ? ;
.data:004042D0                 db    ? ;
.data:004042D1                 db    ? ;
.data:004042D2                 db    ? ;
.data:004042D3                 db    ? ;
.data:004042D4                 db    ? ;
.data:004042D5                 db    ? ;
.data:004042D6                 db    ? ;
.data:004042D7                 db    ? ;
.data:004042D8                 db    ? ;
.data:004042D9                 db    ? ;
.data:004042DA                 db    ? ;
.data:004042DB                 db    ? ;
.data:004042DC                 db    ? ;
.data:004042DD                 db    ? ;
.data:004042DE                 db    ? ;
.data:004042DF                 db    ? ;
.data:004042E0                 db    ? ;
.data:004042E1                 db    ? ;
.data:004042E2                 db    ? ;
.data:004042E3                 db    ? ;
.data:004042E4                 db    ? ;
.data:004042E5                 db    ? ;
.data:004042E6                 db    ? ;
.data:004042E7                 db    ? ;
.data:004042E8                 db    ? ;
.data:004042E9                 db    ? ;
.data:004042EA                 db    ? ;
.data:004042EB                 db    ? ;
.data:004042EC                 db    ? ;
.data:004042ED                 db    ? ;
.data:004042EE                 db    ? ;
.data:004042EF                 db    ? ;
.data:004042F0                 db    ? ;
.data:004042F1                 db    ? ;
.data:004042F2                 db    ? ;
.data:004042F3                 db    ? ;
.data:004042F4                 db    ? ;
.data:004042F5                 db    ? ;
.data:004042F6                 db    ? ;
.data:004042F7                 db    ? ;
.data:004042F8                 db    ? ;
.data:004042F9                 db    ? ;
.data:004042FA                 db    ? ;
.data:004042FB                 db    ? ;
.data:004042FC                 db    ? ;
.data:004042FD                 db    ? ;
.data:004042FE                 db    ? ;
.data:004042FF                 db    ? ;
.data:00404300                 db    ? ;
.data:00404301                 db    ? ;
.data:00404302                 db    ? ;
.data:00404303                 db    ? ;
.data:00404304                 db    ? ;
.data:00404305                 db    ? ;
.data:00404306                 db    ? ;
.data:00404307                 db    ? ;
.data:00404308                 db    ? ;
.data:00404309                 db    ? ;
.data:0040430A                 db    ? ;
.data:0040430B                 db    ? ;
.data:0040430C                 db    ? ;
.data:0040430D                 db    ? ;
.data:0040430E                 db    ? ;
.data:0040430F                 db    ? ;
.data:00404310                 db    ? ;
.data:00404311                 db    ? ;
.data:00404312                 db    ? ;
.data:00404313                 db    ? ;
.data:00404314                 db    ? ;
.data:00404315                 db    ? ;
.data:00404316                 db    ? ;
.data:00404317                 db    ? ;
.data:00404318                 db    ? ;
.data:00404319                 db    ? ;
.data:0040431A                 db    ? ;
.data:0040431B                 db    ? ;
.data:0040431C                 db    ? ;
.data:0040431D                 db    ? ;
.data:0040431E                 db    ? ;
.data:0040431F                 db    ? ;
.data:00404320                 db    ? ;
.data:00404321                 db    ? ;
.data:00404322                 db    ? ;
.data:00404323                 db    ? ;
.data:00404324                 db    ? ;
.data:00404325                 db    ? ;
.data:00404326                 db    ? ;
.data:00404327                 db    ? ;
.data:00404328                 db    ? ;
.data:00404329                 db    ? ;
.data:0040432A                 db    ? ;
.data:0040432B                 db    ? ;
.data:0040432C                 db    ? ;
.data:0040432D                 db    ? ;
.data:0040432E                 db    ? ;
.data:0040432F                 db    ? ;
.data:00404330                 db    ? ;
.data:00404331                 db    ? ;
.data:00404332                 db    ? ;
.data:00404333                 db    ? ;
.data:00404334                 db    ? ;
.data:00404335                 db    ? ;
.data:00404336                 db    ? ;
.data:00404337                 db    ? ;
.data:00404338                 db    ? ;
.data:00404339                 db    ? ;
.data:0040433A                 db    ? ;
.data:0040433B                 db    ? ;
.data:0040433C                 db    ? ;
.data:0040433D                 db    ? ;
.data:0040433E                 db    ? ;
.data:0040433F                 db    ? ;
.data:00404340                 db    ? ;
.data:00404341                 db    ? ;
.data:00404342                 db    ? ;
.data:00404343                 db    ? ;
.data:00404344                 db    ? ;
.data:00404345                 db    ? ;
.data:00404346                 db    ? ;
.data:00404347                 db    ? ;
.data:00404348                 db    ? ;
.data:00404349                 db    ? ;
.data:0040434A                 db    ? ;
.data:0040434B                 db    ? ;
.data:0040434C                 db    ? ;
.data:0040434D                 db    ? ;
.data:0040434E                 db    ? ;
.data:0040434F                 db    ? ;
.data:00404350                 db    ? ;
.data:00404351                 db    ? ;
.data:00404352                 db    ? ;
.data:00404353                 db    ? ;
.data:00404354                 db    ? ;
.data:00404355                 db    ? ;
.data:00404356                 db    ? ;
.data:00404357                 db    ? ;
.data:00404358                 db    ? ;
.data:00404359                 db    ? ;
.data:0040435A                 db    ? ;
.data:0040435B                 db    ? ;
.data:0040435C ; class FLAG_ARGUMENT * CompareTimeArgument
.data:0040435C ?CompareTimeArgument@@3PAVFLAG_ARGUMENT@@A dd ?
.data:0040435C                                         ; DATA XREF: REPLACE::SetArguments(void):loc_401673↑w
.data:0040435C                                         ; REPLACE::SetArguments(void):loc_4017B0↑r ...
.data:00404360 ; class FLAG_ARGUMENT * AddArgument
.data:00404360 ?AddArgument@@3PAVFLAG_ARGUMENT@@A dd ? ; DATA XREF: REPLACE::SetArguments(void):loc_4015BB↑w
.data:00404360                                         ; REPLACE::SetArguments(void):loc_401728↑r ...
.data:00404364 ; unsigned char HelpSwitch
.data:00404364 ?HelpSwitch@@3EA db ?                   ; DATA XREF: REPLACE::GetArgumentsCmd(void)+2B0↑w
.data:00404364                                         ; REPLACE::CheckArgumentConsistency(void)+10↑r
.data:00404365                 align 4
.data:00404368 ; class CLASS_DESCRIPTOR const * const REPLACE_cd
.data:00404368 ?REPLACE_cd@@3PBVCLASS_DESCRIPTOR@@B dd ?
.data:00404368                                         ; DATA XREF: _main:loc_401EFA↑w
.data:00404368                                         ; REPLACE::REPLACE(void)+7D↑r
.data:0040436C ; class FLAG_ARGUMENT * HelpArgument
.data:0040436C ?HelpArgument@@3PAVFLAG_ARGUMENT@@A dd ?
.data:0040436C                                         ; DATA XREF: REPLACE::SetArguments(void):loc_4016CF↑w
.data:0040436C                                         ; REPLACE::SetArguments(void):loc_4017F4↑r ...
.data:00404370 ; class FLAG_ARGUMENT * PromptArgument
.data:00404370 ?PromptArgument@@3PAVFLAG_ARGUMENT@@A dd ?
.data:00404370                                         ; DATA XREF: REPLACE::SetArguments(void):loc_4015E9↑w
.data:00404370                                         ; REPLACE::SetArguments(void):loc_40174A↑r ...
.data:00404374 ; class FLAG_ARGUMENT * WaitArgument
.data:00404374 ?WaitArgument@@3PAVFLAG_ARGUMENT@@A dd ?
.data:00404374                                         ; DATA XREF: REPLACE::SetArguments(void):loc_4016A1↑w
.data:00404374                                         ; REPLACE::SetArguments(void):loc_4017D2↑r ...
.data:00404378 ; class PATH_ARGUMENT * SourcePathArgument
.data:00404378 ?SourcePathArgument@@3PAVPATH_ARGUMENT@@A dd ?
.data:00404378                                         ; DATA XREF: REPLACE::SetArguments(void):loc_40155F↑w
.data:00404378                                         ; REPLACE::SetArguments(void)+2B3↑r ...
.data:0040437C ; class PATH_ARGUMENT * DestinationPathArgument
.data:0040437C ?DestinationPathArgument@@3PAVPATH_ARGUMENT@@A dd ?
.data:0040437C                                         ; DATA XREF: REPLACE::SetArguments(void):loc_40158D↑w
.data:0040437C                                         ; REPLACE::SetArguments(void):loc_401706↑r ...
.data:00404380 ; class FLAG_ARGUMENT * SubdirArgument
.data:00404380 ?SubdirArgument@@3PAVFLAG_ARGUMENT@@A dd ?
.data:00404380                                         ; DATA XREF: REPLACE::SetArguments(void):loc_401645↑w
.data:00404380                                         ; REPLACE::SetArguments(void):loc_40178E↑r ...
.data:00404384 ; class FLAG_ARGUMENT * ReadOnlyArgument
.data:00404384 ?ReadOnlyArgument@@3PAVFLAG_ARGUMENT@@A dd ?
.data:00404384                                         ; DATA XREF: REPLACE::SetArguments(void):loc_401617↑w
.data:00404384                                         ; REPLACE::SetArguments(void):loc_40176C↑r ...
.data:00404388 ___onexitend    dd ?                    ; DATA XREF: pre_c_init+73↑w
.data:0040438C ___onexitbegin  dd ?                    ; DATA XREF: pre_c_init+7A↑w
.data:00404390 ___native_startup_lock db    ? ;        ; DATA XREF: __wmainCRTStartup:loc_402DFF↑o
.data:00404390                                         ; __wmainCRTStartup+BD↑o
.data:00404391                 db    ? ;
.data:00404392                 db    ? ;
.data:00404393                 db    ? ;
.data:00404394 ___native_startup_state dd ?            ; DATA XREF: __wmainCRTStartup:loc_402E2B↑r
.data:00404394                                         ; __wmainCRTStartup:loc_402E3D↑r ...
.data:00404398 ___dyn_tls_init_callback dd ?           ; DATA XREF: __wmainCRTStartup:loc_402EA7↑r
.data:00404398                                         ; __wmainCRTStartup+CD↑o ...
.data:0040439C                 align 1000h
.data:0040439C _data           ends
.data:0040439C
.idata:00405000 ; Section 3. (virtual address 00005000)
.idata:00405000 ; Virtual size                  : 00001014 (   4116.)
.idata:00405000 ; Section size in file          : 00001200 (   4608.)
.idata:00405000 ; Offset to raw data for section: 00002E00
.idata:00405000 ; Flags 40000040: Data Readable
.idata:00405000 ; Alignment     : default
.idata:00405000 ;
.idata:00405000 ; Imports from KERNEL32.dll
.idata:00405000 ;
.idata:00405000 ; ===========================================================================
.idata:00405000
.idata:00405000 ; Segment type: Externs
.idata:00405000 ; _idata
.idata:00405000 ; LPWSTR (__stdcall *GetCommandLineW)()
.idata:00405000                 extrn __imp__GetCommandLineW@0:dword
.idata:00405000                                         ; CODE XREF: REPLACE::GetArgumentsCmd(void)+2A↑p
.idata:00405000                                         ; DATA XREF: REPLACE::GetArgumentsCmd(void)+2A↑r ...
.idata:00405004 ; DWORD (__stdcall *GetLastError)()
.idata:00405004                 extrn __imp__GetLastError@0:dword
.idata:00405004                                         ; CODE XREF: REPLACE::CopyTheFile(PATH const *,PATH const *)+E8↑p
.idata:00405004                                         ; DATA XREF: REPLACE::CopyTheFile(PATH const *,PATH const *)+E8↑r
.idata:00405008 ; BOOL (__stdcall *HeapSetInformation)(HANDLE HeapHandle, HEAP_INFORMATION_CLASS HeapInformationClass, PVOID HeapInformation, SIZE_T HeapInformationLength)
.idata:00405008                 extrn __imp__HeapSetInformation@16:dword
.idata:00405008                                         ; CODE XREF: _main+16↑p
.idata:00405008                                         ; DATA XREF: _main+16↑r
.idata:0040500C ; BOOL (__stdcall *CopyFileW)(LPCWSTR lpExistingFileName, LPCWSTR lpNewFileName, BOOL bFailIfExists)
.idata:0040500C                 extrn __imp__CopyFileW@12:dword
.idata:0040500C                                         ; CODE XREF: REPLACE::CopyTheFile(PATH const *,PATH const *)+DE↑p
.idata:0040500C                                         ; DATA XREF: REPLACE::CopyTheFile(PATH const *,PATH const *)+DE↑r
.idata:00405010 ; HANDLE (__stdcall *GetCurrentProcess)()
.idata:00405010                 extrn __imp__GetCurrentProcess@0:dword
.idata:00405010                                         ; CODE XREF: ___raise_securityfailure+1B↑p
.idata:00405010                                         ; DATA XREF: ___raise_securityfailure+1B↑r
.idata:00405014 ; LONG (__stdcall *UnhandledExceptionFilter)(struct _EXCEPTION_POINTERS *ExceptionInfo)
.idata:00405014                 extrn __imp__UnhandledExceptionFilter@4:dword
.idata:00405014                                         ; CODE XREF: ___raise_securityfailure+10↑p
.idata:00405014                                         ; DATA XREF: ___raise_securityfailure+10↑r
.idata:00405018 ; DWORD (__stdcall *GetTickCount)()
.idata:00405018                 extrn __imp__GetTickCount@0:dword
.idata:00405018                                         ; CODE XREF: ___security_init_cookie+57↑p
.idata:00405018                                         ; DATA XREF: ___security_init_cookie+57↑r
.idata:0040501C ; void (__stdcall *GetSystemTimeAsFileTime)(LPFILETIME lpSystemTimeAsFileTime)
.idata:0040501C                 extrn __imp__GetSystemTimeAsFileTime@4:dword
.idata:0040501C                                         ; CODE XREF: ___security_init_cookie+36↑p
.idata:0040501C                                         ; DATA XREF: ___security_init_cookie+36↑r
.idata:00405020 ; DWORD (__stdcall *GetCurrentThreadId)()
.idata:00405020                 extrn __imp__GetCurrentThreadId@0:dword
.idata:00405020                                         ; CODE XREF: ___security_init_cookie+4E↑p
.idata:00405020                                         ; DATA XREF: ___security_init_cookie+4E↑r
.idata:00405024 ; DWORD (__stdcall *GetCurrentProcessId)()
.idata:00405024                 extrn __imp__GetCurrentProcessId@0:dword
.idata:00405024                                         ; CODE XREF: ___security_init_cookie+45↑p
.idata:00405024                                         ; DATA XREF: ___security_init_cookie+45↑r
.idata:00405028 ; BOOL (__stdcall *QueryPerformanceCounter)(LARGE_INTEGER *lpPerformanceCount)
.idata:00405028                 extrn __imp__QueryPerformanceCounter@4:dword
.idata:00405028                                         ; CODE XREF: ___security_init_cookie+6C↑p
.idata:00405028                                         ; DATA XREF: ___security_init_cookie+6C↑r
.idata:0040502C ; HMODULE (__stdcall *GetModuleHandleA)(LPCSTR lpModuleName)
.idata:0040502C                 extrn __imp__GetModuleHandleA@4:dword
.idata:0040502C                                         ; CODE XREF: __get_image_app_type+7↑p
.idata:0040502C                                         ; DATA XREF: __get_image_app_type+7↑r
.idata:00405030 ; LPTOP_LEVEL_EXCEPTION_FILTER (__stdcall *SetUnhandledExceptionFilter)(LPTOP_LEVEL_EXCEPTION_FILTER lpTopLevelExceptionFilter)
.idata:00405030                 extrn __imp__SetUnhandledExceptionFilter@4:dword
.idata:00405030                                         ; CODE XREF: ___CxxSetUnhandledExceptionFilter+5↑p
.idata:00405030                                         ; ___raise_securityfailure+7↑p
.idata:00405030                                         ; DATA XREF: ...
.idata:00405034 ; void (__stdcall *Sleep)(DWORD dwMilliseconds)
.idata:00405034                 extrn __imp__Sleep@4:dword
.idata:00405034                                         ; CODE XREF: __wmainCRTStartup+3D↑p
.idata:00405034                                         ; DATA XREF: __wmainCRTStartup+3D↑r
.idata:00405038 ; BOOL (__stdcall *TerminateProcess)(HANDLE hProcess, UINT uExitCode)
.idata:00405038                 extrn __imp__TerminateProcess@8:dword
.idata:00405038                                         ; CODE XREF: ___raise_securityfailure+22↑p
.idata:00405038                                         ; DATA XREF: ___raise_securityfailure+22↑r
.idata:0040503C                 extrn _KERNEL32_NULL_THUNK_DATA:byte:4
.idata:00405040 ;
.idata:00405040 ; Imports from msvcrt.dll
.idata:00405040 ;
.idata:00405040 ; __declspec(dllimport) void __cdecl terminate(void)
.idata:00405040                 extrn __imp_?terminate@@YAXXZ:dword
.idata:00405040                                         ; CODE XREF: __CxxUnhandledExceptionFilter(_EXCEPTION_POINTERS *):loc_402FF7↑p
.idata:00405040                                         ; DATA XREF: __CxxUnhandledExceptionFilter(_EXCEPTION_POINTERS *):loc_402FF7↑r ...
.idata:00405044 ; unsigned int (__cdecl *__controlfp)(unsigned int NewValue, unsigned int Mask)
.idata:00405044                 extrn __imp___controlfp:dword
.idata:00405044                                         ; CODE XREF: __setdefaultprecision+A↑p
.idata:00405044                                         ; DATA XREF: __setdefaultprecision+A↑r
.idata:00405048                 extrn __imp___except_handler4_common:dword
.idata:00405048                                         ; DATA XREF: __except_handler4_common↑r
.idata:0040504C                 extrn __imp___XcptFilter:dword
.idata:0040504C                                         ; DATA XREF: __XcptFilter↑r
.idata:00405050 ; int *(__cdecl *___p__commode)()
.idata:00405050                 extrn __imp____p__commode:dword
.idata:00405050                                         ; CODE XREF: pre_c_init+91↑p
.idata:00405050                                         ; DATA XREF: pre_c_init+91↑r
.idata:00405054                 extrn __imp___amsg_exit:dword
.idata:00405054                                         ; DATA XREF: __amsg_exit↑r
.idata:00405058                 extrn __imp____getmainargs:dword
.idata:00405058                                         ; CODE XREF: pre_cpp_init+24↑p
.idata:00405058                                         ; DATA XREF: pre_cpp_init+24↑r
.idata:0040505C ; void (__cdecl *___set_app_type)(_crt_app_type Type)
.idata:0040505C                 extrn __imp____set_app_type:dword
.idata:0040505C                                         ; CODE XREF: pre_c_init+6D↑p
.idata:0040505C                                         ; DATA XREF: pre_c_init+6D↑r
.idata:00405060 ; void (__cdecl __noreturn *__exit)(int Code)
.idata:00405060                 extrn __imp___exit:dword
.idata:00405060                                         ; CODE XREF: __wmainCRTStartup+148↑p
.idata:00405060                                         ; DATA XREF: __wmainCRTStartup+148↑r
.idata:00405064 ; void (__cdecl *__cexit)()
.idata:00405064                 extrn __imp___cexit:dword
.idata:00405064                                         ; CODE XREF: __wmainCRTStartup+157↑p
.idata:00405064                                         ; DATA XREF: __wmainCRTStartup+157↑r
.idata:00405068 ; int *(__cdecl *___p__fmode)()
.idata:00405068                 extrn __imp____p__fmode:dword
.idata:00405068                                         ; CODE XREF: pre_c_init+83↑p
.idata:00405068                                         ; DATA XREF: pre_c_init+83↑r
.idata:0040506C ; void (__cdecl *___setusermatherr)(_UserMathErrorFunctionPointer UserMathErrorFunction)
.idata:0040506C                 extrn __imp____setusermatherr:dword
.idata:0040506C                                         ; CODE XREF: pre_c_init+B2↑p
.idata:0040506C                                         ; DATA XREF: pre_c_init+B2↑r
.idata:00405070 ; void (__cdecl __noreturn *_exit)(int Code)
.idata:00405070                 extrn __imp__exit:dword ; CODE XREF: REPLACE::DisplayMessageAndExit(ulong,WSTRING const *,ulong)+D2↑p
.idata:00405070                                         ; REPLACE::DoReplace(void):loc_4022F6↑p ...
.idata:00405074 ; void (__cdecl *__initterm)(_PVFV *First, _PVFV *Last)
.idata:00405074                 extrn __imp___initterm:dword
.idata:00405074                                         ; DATA XREF: __initterm↑r
.idata:00405078                 extrn _msvcrt_NULL_THUNK_DATA:byte:4
.idata:0040507C ;
.idata:0040507C ; Imports from ntdll.dll
.idata:0040507C ;
.idata:0040507C ; PVOID (__stdcall *RtlAllocateHeap)(PVOID HeapHandle, ULONG Flags, SIZE_T Size)
.idata:0040507C                 extrn __imp__RtlAllocateHeap@12:dword
.idata:0040507C                                         ; CODE XREF: REPLACE::SetArguments(void)+112↑p
.idata:0040507C                                         ; REPLACE::SetArguments(void)+140↑p ...
.idata:00405080 ; BOOLEAN (__stdcall *RtlFreeHeap)(HANDLE HeapHandle, ULONG Flags, PVOID P)
.idata:00405080                 extrn __imp__RtlFreeHeap@12:dword
.idata:00405080                                         ; CODE XREF: REPLACE::`scalar deleting destructor'(uint)+23↑p
.idata:00405080                                         ; REPLACE::DeallocateThings(void)+B7↑p ...
.idata:00405084                 extrn _ntdll_NULL_THUNK_DATA:byte:4
.idata:00405088 ;
.idata:00405088 ; Imports from ulib.dll
.idata:00405088 ;
.idata:00405088 ; __declspec(dllimport) public: unsigned char __thiscall ARGUMENT_LEXEMIZER::PrepareToParse(class WSTRING *)
.idata:00405088                 extrn __imp_?PrepareToParse@ARGUMENT_LEXEMIZER@@QAEEPAVWSTRING@@@Z:dword
.idata:00405088                                         ; CODE XREF: REPLACE::ParseArguments(WSTRING *,ARRAY *)+C2↑p
.idata:00405088                                         ; DATA XREF: REPLACE::ParseArguments(WSTRING *,ARRAY *)+C2↑r ...
.idata:0040508C ; __declspec(dllimport) public: class WSTRING * __thiscall ARGUMENT_LEXEMIZER::QueryInvalidArgument(void)
.idata:0040508C                 extrn __imp_?QueryInvalidArgument@ARGUMENT_LEXEMIZER@@QAEPAVWSTRING@@XZ:dword
.idata:0040508C                                         ; CODE XREF: REPLACE::ParseArguments(WSTRING *,ARRAY *)+E7↑p
.idata:0040508C                                         ; DATA XREF: REPLACE::ParseArguments(WSTRING *,ARRAY *)+E7↑r
.idata:00405090 ; __declspec(dllimport) public: void __thiscall ARGUMENT_LEXEMIZER::PutSwitches(class WSTRING const *)
.idata:00405090                 extrn __imp_?PutSwitches@ARGUMENT_LEXEMIZER@@QAEXPBVWSTRING@@@Z:dword
.idata:00405090                                         ; CODE XREF: REPLACE::ParseArguments(WSTRING *,ARRAY *)+71↑p
.idata:00405090                                         ; DATA XREF: REPLACE::ParseArguments(WSTRING *,ARRAY *)+71↑r
.idata:00405094 ; __declspec(dllimport) public: void __thiscall ARGUMENT_LEXEMIZER::PutSeparators(char const *)
.idata:00405094                 extrn __imp_?PutSeparators@ARGUMENT_LEXEMIZER@@QAEXPBD@Z:dword
.idata:00405094                                         ; CODE XREF: REPLACE::ParseArguments(WSTRING *,ARRAY *)+90↑p
.idata:00405094                                         ; DATA XREF: REPLACE::ParseArguments(WSTRING *,ARRAY *)+90↑r
.idata:00405098 ; __declspec(dllimport) public: void __thiscall ARGUMENT_LEXEMIZER::PutMultipleSwitch(class WSTRING const *)
.idata:00405098                 extrn __imp_?PutMultipleSwitch@ARGUMENT_LEXEMIZER@@QAEXPBVWSTRING@@@Z:dword
.idata:00405098                                         ; CODE XREF: REPLACE::ParseArguments(WSTRING *,ARRAY *)+5E↑p
.idata:00405098                                         ; DATA XREF: REPLACE::ParseArguments(WSTRING *,ARRAY *)+5E↑r
.idata:0040509C ; __declspec(dllimport) public: unsigned char __thiscall ARGUMENT_LEXEMIZER::DoParsing(class ARRAY *)
.idata:0040509C                 extrn __imp_?DoParsing@ARGUMENT_LEXEMIZER@@QAEEPAVARRAY@@@Z:dword
.idata:0040509C                                         ; CODE XREF: REPLACE::ParseArguments(WSTRING *,ARRAY *)+D5↑p
.idata:0040509C                                         ; DATA XREF: REPLACE::ParseArguments(WSTRING *,ARRAY *)+D5↑r
.idata:004050A0 ; __declspec(dllimport) public: unsigned char __thiscall ARGUMENT_LEXEMIZER::Initialize(class ARRAY *)
.idata:004050A0                 extrn __imp_?Initialize@ARGUMENT_LEXEMIZER@@QAEEPAVARRAY@@@Z:dword
.idata:004050A0                                         ; CODE XREF: REPLACE::ParseArguments(WSTRING *,ARRAY *)+43↑p
.idata:004050A0                                         ; DATA XREF: REPLACE::ParseArguments(WSTRING *,ARRAY *)+43↑r
.idata:004050A4 ; __declspec(dllimport) public: virtual __thiscall ARGUMENT_LEXEMIZER::~ARGUMENT_LEXEMIZER(void)
.idata:004050A4                 extrn __imp_??1ARGUMENT_LEXEMIZER@@UAE@XZ:dword
.idata:004050A4                                         ; CODE XREF: REPLACE::ParseArguments(WSTRING *,ARRAY *)+104↑p
.idata:004050A4                                         ; DATA XREF: REPLACE::ParseArguments(WSTRING *,ARRAY *)+104↑r
.idata:004050A8 ; __declspec(dllimport) public: __thiscall ARGUMENT_LEXEMIZER::ARGUMENT_LEXEMIZER(void)
.idata:004050A8                 extrn __imp_??0ARGUMENT_LEXEMIZER@@QAE@XZ:dword
.idata:004050A8                                         ; CODE XREF: REPLACE::ParseArguments(WSTRING *,ARRAY *)+15↑p
.idata:004050A8                                         ; DATA XREF: REPLACE::ParseArguments(WSTRING *,ARRAY *)+15↑r
.idata:004050AC ; __declspec(dllimport) public: class PATH * __thiscall PATH::QueryPath(void)const
.idata:004050AC                 extrn __imp_?QueryPath@PATH@@QBEPAV1@XZ:dword
.idata:004050AC                                         ; CODE XREF: REPLACE::GetArgumentsCmd(void)+2C7↑p
.idata:004050AC                                         ; DATA XREF: REPLACE::GetArgumentsCmd(void)+2C7↑r
.idata:004050B0 ; __declspec(dllimport) public: class PATH * __thiscall PATH::QueryFullPath(void)const
.idata:004050B0                 extrn __imp_?QueryFullPath@PATH@@QBEPAV1@XZ:dword
.idata:004050B0                                         ; CODE XREF: REPLACE::GetArgumentsCmd(void)+2F7↑p
.idata:004050B0                                         ; DATA XREF: REPLACE::GetArgumentsCmd(void)+2F7↑r
.idata:004050B4 ; __declspec(dllimport) public: unsigned char __thiscall PATH::HasWildCard(void)const
.idata:004050B4                 extrn __imp_?HasWildCard@PATH@@QBEEXZ:dword
.idata:004050B4                                         ; CODE XREF: REPLACE::CheckArgumentConsistency(void):loc_401D66↑p
.idata:004050B4                                         ; DATA XREF: REPLACE::CheckArgumentConsistency(void):loc_401D66↑r
.idata:004050B8 ; __declspec(dllimport) public: unsigned char __thiscall PATH::Initialize(unsigned short const *, unsigned char)
.idata:004050B8                 extrn __imp_?Initialize@PATH@@QAEEPBGE@Z:dword
.idata:004050B8                                         ; CODE XREF: REPLACE::CheckArgumentConsistency(void)+A6↑p
.idata:004050B8                                         ; DATA XREF: REPLACE::CheckArgumentConsistency(void)+A6↑r
.idata:004050BC ; __declspec(dllimport) public: __thiscall PATH::PATH(void)
.idata:004050BC                 extrn __imp_??0PATH@@QAE@XZ:dword
.idata:004050BC                                         ; CODE XREF: REPLACE::CheckArgumentConsistency(void)+89↑p
.idata:004050BC                                         ; REPLACE::DisplayMessageAndExit(ulong,WSTRING const *,ulong)+23↑p ...
.idata:004050C0 ; __declspec(dllimport) public: unsigned char __thiscall WSTRING::Initialize(unsigned short const *, unsigned long)
.idata:004050C0                 extrn __imp_?Initialize@WSTRING@@QAEEPBGK@Z:dword
.idata:004050C0                                         ; CODE XREF: REPLACE::SetArguments(void)+24↑p
.idata:004050C0                                         ; REPLACE::SetArguments(void)+40↑p ...
.idata:004050C4 ; __declspec(dllimport) public: unsigned char __thiscall WSTRING::Initialize(char const *, unsigned long)
.idata:004050C4                 extrn __imp_?Initialize@WSTRING@@QAEEPBDK@Z:dword
.idata:004050C4                                         ; CODE XREF: REPLACE::ParseArguments(WSTRING *,ARRAY *)+A4↑p
.idata:004050C4                                         ; REPLACE::ParseArguments(WSTRING *,ARRAY *)+B3↑p
.idata:004050C4                                         ; DATA XREF: ...
.idata:004050C8 ; __declspec(dllimport) public: virtual void __thiscall OBJECT::DebugDump(unsigned char)const
.idata:004050C8                 extrn __imp_?DebugDump@OBJECT@@UBEXE@Z:dword
.idata:004050C8                                         ; DATA XREF: OBJECT::DebugDump(uchar)↑r
.idata:004050CC ; __declspec(dllimport) public: __thiscall PATH_ARGUMENT::PATH_ARGUMENT(void)
.idata:004050CC                 extrn __imp_??0PATH_ARGUMENT@@QAE@XZ:dword
.idata:004050CC                                         ; CODE XREF: REPLACE::SetArguments(void)+11E↑p
.idata:004050CC                                         ; REPLACE::SetArguments(void)+14C↑p ...
.idata:004050D0 ; __declspec(dllimport) public: virtual __thiscall PATH::~PATH(void)
.idata:004050D0                 extrn __imp_??1PATH@@UAE@XZ:dword
.idata:004050D0                                         ; CODE XREF: REPLACE::GetDirectoryAndPattern(PATH *,FSN_DIRECTORY * *,WSTRING * *)+D7↑p
.idata:004050D0                                         ; REPLACE::AddFiles(FSN_DIRECTORY *)+171↑p ...
.idata:004050D4 ; __declspec(dllimport) const OBJECT::`vftable'
.idata:004050D4                 extrn __imp_??_7OBJECT@@6B@:dword
.idata:004050D4                                         ; DATA XREF: REPLACE::ReplaceFiles(FSN_DIRECTORY *)+151↑r
.idata:004050D8 ; __declspec(dllimport) public: static class FSN_DIRECTORY * __stdcall SYSTEM::QueryDirectory(class PATH const *, unsigned char)
.idata:004050D8                 extrn __imp_?QueryDirectory@SYSTEM@@SGPAVFSN_DIRECTORY@@PBVPATH@@E@Z:dword
.idata:004050D8                                         ; CODE XREF: REPLACE::DoReplace(void)+4A↑p
.idata:004050D8                                         ; REPLACE::GetDirectoryAndPattern(PATH *,FSN_DIRECTORY * *,WSTRING * *)+44↑p ...
.idata:004050DC ; __declspec(dllimport) public: virtual __thiscall OBJECT::~OBJECT(void)
.idata:004050DC                 extrn __imp_??1OBJECT@@UAE@XZ:dword
.idata:004050DC                                         ; CODE XREF: TIMEINFO::`vector deleting destructor'(uint)+8↑p
.idata:004050DC                                         ; DATA XREF: TIMEINFO::`vector deleting destructor'(uint)+8↑r
.idata:004050E0 ; __declspec(dllimport) public: unsigned char __thiscall TIMEINFO::operator<(class TIMEINFO)const
.idata:004050E0                 extrn __imp_??MTIMEINFO@@QBEEV0@@Z:dword
.idata:004050E0                                         ; CODE XREF: REPLACE::ReplaceFiles(FSN_DIRECTORY *)+17F↑p
.idata:004050E0                                         ; DATA XREF: REPLACE::ReplaceFiles(FSN_DIRECTORY *)+17F↑r
.idata:004050E4 ; __declspec(dllimport) __stdcall UlibRealloc(x, x)
.idata:004050E4                 extrn __imp__UlibRealloc@8:dword
.idata:004050E4                                         ; CODE XREF: REPLACE::CopyTheFile(PATH const *,PATH const *)+34↑p
.idata:004050E4                                         ; REPLACE::CopyTheFile(PATH const *,PATH const *)+65↑p
.idata:004050E4                                         ; DATA XREF: ...
.idata:004050E8 ; __declspec(dllimport) public: virtual __thiscall PATH_ARGUMENT::~PATH_ARGUMENT(void)
.idata:004050E8                 extrn __imp_??1PATH_ARGUMENT@@UAE@XZ:dword
.idata:004050E8                                         ; CODE XREF: REPLACE::GetArgumentsCmd(void)+31B↑p
.idata:004050E8                                         ; DATA XREF: REPLACE::GetArgumentsCmd(void)+31B↑r
.idata:004050EC ; __declspec(dllimport) public: class ARRAY * __thiscall FSN_DIRECTORY::QueryFsnodeArray(class FSN_FILTER *)const
.idata:004050EC                 extrn __imp_?QueryFsnodeArray@FSN_DIRECTORY@@QBEPAVARRAY@@PAVFSN_FILTER@@@Z:dword
.idata:004050EC                                         ; CODE XREF: REPLACE::GetFileArray(FSN_DIRECTORY *,WSTRING *)+5D↑p
.idata:004050EC                                         ; DATA XREF: REPLACE::GetFileArray(FSN_DIRECTORY *,WSTRING *)+5D↑r
.idata:004050F0 ; __declspec(dllimport) protected: __thiscall PROGRAM::PROGRAM(void)
.idata:004050F0                 extrn __imp_??0PROGRAM@@IAE@XZ:dword
.idata:004050F0                                         ; CODE XREF: REPLACE::REPLACE(void)+5↑p
.idata:004050F0                                         ; DATA XREF: REPLACE::REPLACE(void)+5↑r
.idata:004050F4 ; __declspec(dllimport) public: virtual void __thiscall PROGRAM::ValidateVersion(unsigned long, unsigned long)const
.idata:004050F4                 extrn __imp_?ValidateVersion@PROGRAM@@UBEXKK@Z:dword
.idata:004050F4                                         ; DATA XREF: PROGRAM::ValidateVersion(ulong,ulong)↑r
.idata:004050F8 ; __declspec(dllimport) public: void __thiscall ARGUMENT_LEXEMIZER::SetCaseSensitive(unsigned char)
.idata:004050F8                 extrn __imp_?SetCaseSensitive@ARGUMENT_LEXEMIZER@@QAEXE@Z:dword
.idata:004050F8                                         ; CODE XREF: REPLACE::ParseArguments(WSTRING *,ARRAY *)+7F↑p
.idata:004050F8                                         ; DATA XREF: REPLACE::ParseArguments(WSTRING *,ARRAY *)+7F↑r
.idata:004050FC ; __declspec(dllimport) public: virtual class STREAM * __thiscall PROGRAM::GetStandardError(void)
.idata:004050FC                 extrn __imp_?GetStandardError@PROGRAM@@UAEPAVSTREAM@@XZ:dword
.idata:004050FC                                         ; DATA XREF: PROGRAM::GetStandardError(void)↑r
.idata:00405100 ; __declspec(dllimport) public: virtual class STREAM * __thiscall PROGRAM::GetStandardOutput(void)
.idata:00405100                 extrn __imp_?GetStandardOutput@PROGRAM@@UAEPAVSTREAM@@XZ:dword
.idata:00405100                                         ; DATA XREF: PROGRAM::GetStandardOutput(void)↑r
.idata:00405104 ; __declspec(dllimport) public: virtual class STREAM * __thiscall PROGRAM::GetStandardInput(void)
.idata:00405104                 extrn __imp_?GetStandardInput@PROGRAM@@UAEPAVSTREAM@@XZ:dword
.idata:00405104                                         ; DATA XREF: PROGRAM::GetStandardInput(void)↑r
.idata:00405108 ; __declspec(dllimport) public: virtual void __thiscall PROGRAM::Fatal(void)const
.idata:00405108                 extrn __imp_?Fatal@PROGRAM@@UBEXXZ:dword
.idata:00405108                                         ; DATA XREF: PROGRAM::Fatal(void)↑r
.idata:0040510C ; __declspec(dllimport) public: virtual void __cdecl PROGRAM::Fatal(unsigned long, unsigned long, char *, ...)const
.idata:0040510C                 extrn __imp_?Fatal@PROGRAM@@UBAXKKPADZZ:dword
.idata:0040510C                                         ; DATA XREF: PROGRAM::Fatal(ulong,ulong,char *,...)↑r
.idata:00405110 ; __declspec(dllimport) public: virtual unsigned char __thiscall PROGRAM::DisplayMessage(unsigned long, enum MESSAGE_TYPE)const
.idata:00405110                 extrn __imp_?DisplayMessage@PROGRAM@@UBEEKW4MESSAGE_TYPE@@@Z:dword
.idata:00405110                                         ; DATA XREF: PROGRAM::DisplayMessage(ulong,MESSAGE_TYPE)↑r
.idata:00405114 ; __declspec(dllimport) public: virtual unsigned char __cdecl PROGRAM::DisplayMessage(unsigned long, enum MESSAGE_TYPE, char *, ...)const
.idata:00405114                 extrn __imp_?DisplayMessage@PROGRAM@@UBAEKW4MESSAGE_TYPE@@PADZZ:dword
.idata:00405114                                         ; DATA XREF: PROGRAM::DisplayMessage(ulong,MESSAGE_TYPE,char *,...)↑r
.idata:00405118 ; __declspec(dllimport) public: virtual __thiscall PROGRAM::~PROGRAM(void)
.idata:00405118                 extrn __imp_??1PROGRAM@@UAE@XZ:dword
.idata:00405118                                         ; DATA XREF: REPLACE::~REPLACE(void)+7F↑r
.idata:0040511C ; __declspec(dllimport) public: unsigned char __thiscall PROGRAM::Initialize(unsigned long, unsigned long, unsigned long)
.idata:0040511C                 extrn __imp_?Initialize@PROGRAM@@QAEEKKK@Z:dword
.idata:0040511C                                         ; CODE XREF: _main+69↑p
.idata:0040511C                                         ; DATA XREF: _main+69↑r
.idata:00405120 ; __declspec(dllimport) public: unsigned char __thiscall CLASS_DESCRIPTOR::Initialize(char const *)
.idata:00405120                 extrn __imp_?Initialize@CLASS_DESCRIPTOR@@QAEEPBD@Z:dword
.idata:00405120                                         ; CODE XREF: _main+4A↑p
.idata:00405120                                         ; DATA XREF: _main+4A↑r
.idata:00405124 ; __declspec(dllimport) public: __thiscall CLASS_DESCRIPTOR::CLASS_DESCRIPTOR(void)
.idata:00405124                 extrn __imp_??0CLASS_DESCRIPTOR@@QAE@XZ:dword
.idata:00405124                                         ; CODE XREF: _main+34↑p
.idata:00405124                                         ; DATA XREF: _main+34↑r
.idata:00405128 ; __declspec(dllimport) public: unsigned char __thiscall FSNODE::SetAttributes(unsigned long, unsigned long *)
.idata:00405128                 extrn __imp_?SetAttributes@FSNODE@@QAEEKPAK@Z:dword
.idata:00405128                                         ; CODE XREF: REPLACE::ReplaceFiles(FSN_DIRECTORY *)+23D↑p
.idata:00405128                                         ; DATA XREF: REPLACE::ReplaceFiles(FSN_DIRECTORY *)+23D↑r
.idata:0040512C ; __declspec(dllimport) public: static unsigned char __stdcall KEYBOARD::GotABreak(void)
.idata:0040512C                 extrn __imp_?GotABreak@KEYBOARD@@SGEXZ:dword
.idata:0040512C                                         ; CODE XREF: REPLACE::DoReplace(void)+85↑p
.idata:0040512C                                         ; REPLACE::Replacer(void *,FSNODE *,PATH *)+5↑p ...
.idata:00405130 ; __declspec(dllimport) public: unsigned char __thiscall KEYBOARD::EnableLineMode(void)
.idata:00405130                 extrn __imp_?EnableLineMode@KEYBOARD@@QAEEXZ:dword
.idata:00405130                                         ; CODE XREF: REPLACE::DoReplace(void)+D6↑p
.idata:00405130                                         ; DATA XREF: REPLACE::DoReplace(void)+D6↑r
.idata:00405134 ; __declspec(dllimport) public: static unsigned char __stdcall KEYBOARD::EnableBreakHandling(void)
.idata:00405134                 extrn __imp_?EnableBreakHandling@KEYBOARD@@SGEXZ:dword
.idata:00405134                                         ; CODE XREF: REPLACE::InitializeThings(void)+8E↑p
.idata:00405134                                         ; DATA XREF: REPLACE::InitializeThings(void)+8E↑r
.idata:00405138 ; __declspec(dllimport) public: unsigned char __thiscall KEYBOARD::DisableLineMode(void)
.idata:00405138                 extrn __imp_?DisableLineMode@KEYBOARD@@QAEEXZ:dword
.idata:00405138                                         ; CODE XREF: REPLACE::DoReplace(void)+9D↑p
.idata:00405138                                         ; DATA XREF: REPLACE::DoReplace(void)+9D↑r
.idata:0040513C ; __declspec(dllimport) public: unsigned char __thiscall KEYBOARD::Initialize(unsigned char, unsigned char)
.idata:0040513C                 extrn __imp_?Initialize@KEYBOARD@@QAEEEE@Z:dword
.idata:0040513C                                         ; CODE XREF: REPLACE::InitializeThings(void)+88↑p
.idata:0040513C                                         ; DATA XREF: REPLACE::InitializeThings(void)+88↑r
.idata:00405140 ; __declspec(dllimport) public: __thiscall KEYBOARD::KEYBOARD(void)
.idata:00405140                 extrn __imp_??0KEYBOARD@@QAE@XZ:dword
.idata:00405140                                         ; CODE XREF: REPLACE::InitializeThings(void)+5E↑p
.idata:00405140                                         ; DATA XREF: REPLACE::InitializeThings(void)+5E↑r
.idata:00405144 ; __declspec(dllimport) public: unsigned char __thiscall PATH::TruncateBase(void)
.idata:00405144                 extrn __imp_?TruncateBase@PATH@@QAEEXZ:dword
.idata:00405144                                         ; CODE XREF: REPLACE::GetDirectoryAndPattern(PATH *,FSN_DIRECTORY * *,WSTRING * *)+A0↑p
.idata:00405144                                         ; REPLACE::AddFiles(FSN_DIRECTORY *)+13A↑p ...
.idata:00405148 ; __declspec(dllimport) public: unsigned char __thiscall PATH::AppendBase(class WSTRING const *, unsigned char)
.idata:00405148                 extrn __imp_?AppendBase@PATH@@QAEEPBVWSTRING@@E@Z:dword
.idata:00405148                                         ; CODE XREF: REPLACE::AddFiles(FSN_DIRECTORY *)+8A↑p
.idata:00405148                                         ; REPLACE::ReplaceFiles(FSN_DIRECTORY *)+B8↑p
.idata:00405148                                         ; DATA XREF: ...
.idata:0040514C ; __declspec(dllimport) public: unsigned char __thiscall PATH::Initialize(class PATH const *, unsigned char)
.idata:0040514C                 extrn __imp_?Initialize@PATH@@QAEEPBV1@E@Z:dword
.idata:0040514C                                         ; CODE XREF: REPLACE::GetDirectoryAndPattern(PATH *,FSN_DIRECTORY * *,WSTRING * *)+94↑p
.idata:0040514C                                         ; REPLACE::AddFiles(FSN_DIRECTORY *)+35↑p ...
.idata:00405150 ; __declspec(dllimport) public: unsigned char __thiscall FSN_FILTER::SetAttributes(unsigned long, unsigned long, unsigned long)
.idata:00405150                 extrn __imp_?SetAttributes@FSN_FILTER@@QAEEKKK@Z:dword
.idata:00405150                                         ; CODE XREF: REPLACE::DoReplace(void)+1AA↑p
.idata:00405150                                         ; REPLACE::GetFileArray(FSN_DIRECTORY *,WSTRING *)+4E↑p
.idata:00405150                                         ; DATA XREF: ...
.idata:00405154 ; __declspec(dllimport) public: unsigned char __thiscall FSN_FILTER::SetFileName(class WSTRING const *)
.idata:00405154                 extrn __imp_?SetFileName@FSN_FILTER@@QAEEPBVWSTRING@@@Z:dword
.idata:00405154                                         ; CODE XREF: REPLACE::GetFileArray(FSN_DIRECTORY *,WSTRING *)+3C↑p
.idata:00405154                                         ; DATA XREF: REPLACE::GetFileArray(FSN_DIRECTORY *,WSTRING *)+3C↑r
.idata:00405158 ; __declspec(dllimport) public: unsigned char __thiscall FSN_FILTER::Initialize(void)
.idata:00405158                 extrn __imp_?Initialize@FSN_FILTER@@QAEEXZ:dword
.idata:00405158                                         ; CODE XREF: REPLACE::DoReplace(void)+19A↑p
.idata:00405158                                         ; REPLACE::GetFileArray(FSN_DIRECTORY *,WSTRING *)+2F↑p
.idata:00405158                                         ; DATA XREF: ...
.idata:0040515C ; __declspec(dllimport) public: virtual __thiscall FSN_FILTER::~FSN_FILTER(void)
.idata:0040515C                 extrn __imp_??1FSN_FILTER@@UAE@XZ:dword
.idata:0040515C                                         ; CODE XREF: REPLACE::DoReplace(void)+1E9↑p
.idata:0040515C                                         ; REPLACE::GetFileArray(FSN_DIRECTORY *,WSTRING *)+6B↑p
.idata:0040515C                                         ; DATA XREF: ...
.idata:00405160 ; __declspec(dllimport) public: __thiscall FSN_FILTER::FSN_FILTER(void)
.idata:00405160                 extrn __imp_??0FSN_FILTER@@QAE@XZ:dword
.idata:00405160                                         ; CODE XREF: REPLACE::DoReplace(void)+20↑p
.idata:00405160                                         ; REPLACE::GetFileArray(FSN_DIRECTORY *,WSTRING *)+23↑p
.idata:00405160                                         ; DATA XREF: ...
.idata:00405164 ; __declspec(dllimport) public: unsigned short * __thiscall WSTRING::QueryWSTR(unsigned long, unsigned long, unsigned short *, unsigned long, unsigned char)const
.idata:00405164                 extrn __imp_?QueryWSTR@WSTRING@@QBEPAGKKPAGKE@Z:dword
.idata:00405164                                         ; CODE XREF: REPLACE::CopyTheFile(PATH const *,PATH const *)+A8↑p
.idata:00405164                                         ; REPLACE::CopyTheFile(PATH const *,PATH const *)+CB↑p
.idata:00405164                                         ; DATA XREF: ...
.idata:00405168 ; __declspec(dllimport) public: class WSTRING * __thiscall WSTRING::QueryString(unsigned long, unsigned long)const
.idata:00405168                 extrn __imp_?QueryString@WSTRING@@QBEPAV1@KK@Z:dword
.idata:00405168                                         ; CODE XREF: PATH::QueryName(void)+1E↑p
.idata:00405168                                         ; REPLACE::GetDirectoryAndPattern(PATH *,FSN_DIRECTORY * *,WSTRING * *)+69↑p
.idata:00405168                                         ; DATA XREF: ...
.idata:0040516C ; __declspec(dllimport) public: unsigned char __thiscall ARGUMENT::IsValueSet(void)
.idata:0040516C                 extrn __imp_?IsValueSet@ARGUMENT@@QAEEXZ:dword
.idata:0040516C                                         ; CODE XREF: REPLACE::GetArgumentsCmd(void)+2B5↑p
.idata:0040516C                                         ; REPLACE::GetArgumentsCmd(void)+2E5↑p
.idata:0040516C                                         ; DATA XREF: ...
.idata:00405170 ; __declspec(dllimport) public: virtual void __thiscall PROGRAM::Usage(void)const
.idata:00405170                 extrn __imp_?Usage@PROGRAM@@UBEXXZ:dword
.idata:00405170                                         ; DATA XREF: PROGRAM::Usage(void)↑r
.idata:00405174 ; __declspec(dllimport) public: static class FSN_FILE * __stdcall SYSTEM::QueryFile(class PATH const *, unsigned char, unsigned char *)
.idata:00405174                 extrn __imp_?QueryFile@SYSTEM@@SGPAVFSN_FILE@@PBVPATH@@EPAE@Z:dword
.idata:00405174                                         ; CODE XREF: REPLACE::CheckArgumentConsistency(void)+CD↑p
.idata:00405174                                         ; REPLACE::AddFiles(FSN_DIRECTORY *)+B1↑p ...
.idata:00405178 ; __declspec(dllimport) public: unsigned char __thiscall PATH_ARGUMENT::Initialize(char *, unsigned char)
.idata:00405178                 extrn __imp_?Initialize@PATH_ARGUMENT@@QAEEPADE@Z:dword
.idata:00405178                                         ; CODE XREF: REPLACE::GetArgumentsCmd(void)+63↑p
.idata:00405178                                         ; REPLACE::GetArgumentsCmd(void)+79↑p ...
.idata:0040517C ; __declspec(dllimport) public: __thiscall FLAG_ARGUMENT::FLAG_ARGUMENT(void)
.idata:0040517C                 extrn __imp_??0FLAG_ARGUMENT@@QAE@XZ:dword
.idata:0040517C                                         ; CODE XREF: REPLACE::SetArguments(void)+17A↑p
.idata:0040517C                                         ; REPLACE::SetArguments(void)+1A8↑p ...
.idata:00405180 ; __declspec(dllimport) public: unsigned char __thiscall FLAG_ARGUMENT::Initialize(class WSTRING *)
.idata:00405180                 extrn __imp_?Initialize@FLAG_ARGUMENT@@QAEEPAVWSTRING@@@Z:dword
.idata:00405180                                         ; CODE XREF: REPLACE::GetArgumentsCmd(void)+AB↑p
.idata:00405180                                         ; REPLACE::GetArgumentsCmd(void)+C6↑p ...
.idata:00405184 ; __declspec(dllimport) public: __thiscall ARRAY::ARRAY(void)
.idata:00405184                 extrn __imp_??0ARRAY@@QAE@XZ:dword
.idata:00405184                                         ; CODE XREF: REPLACE::GetArgumentsCmd(void)+10↑p
.idata:00405184                                         ; REPLACE::ParseArguments(WSTRING *,ARRAY *)+1E↑p
.idata:00405184                                         ; DATA XREF: ...
.idata:00405188 ; __declspec(dllimport) public: virtual __thiscall ARRAY::~ARRAY(void)
.idata:00405188                 extrn __imp_??1ARRAY@@UAE@XZ:dword
.idata:00405188                                         ; CODE XREF: REPLACE::GetArgumentsCmd(void)+324↑p
.idata:00405188                                         ; REPLACE::ParseArguments(WSTRING *,ARRAY *)+F8↑p
.idata:00405188                                         ; DATA XREF: ...
.idata:0040518C ; __declspec(dllimport) public: unsigned char __thiscall ARRAY::Initialize(unsigned long, unsigned long)
.idata:0040518C                 extrn __imp_?Initialize@ARRAY@@QAEEKK@Z:dword
.idata:0040518C                                         ; CODE XREF: REPLACE::GetArgumentsCmd(void)+4B↑p
.idata:0040518C                                         ; REPLACE::ParseArguments(WSTRING *,ARRAY *)+2B↑p
.idata:0040518C                                         ; DATA XREF: ...
.idata:00405190 ; __declspec(dllimport) public: virtual unsigned char __thiscall ARRAY::Put(class OBJECT *)
.idata:00405190                 extrn __imp_?Put@ARRAY@@UAEEPAVOBJECT@@@Z:dword
.idata:00405190                                         ; CODE XREF: REPLACE::GetArgumentsCmd(void)+162↑p
.idata:00405190                                         ; REPLACE::GetArgumentsCmd(void)+179↑p ...
.idata:00405194 ; __declspec(dllimport) public: __thiscall DSTRING::DSTRING(void)
.idata:00405194                 extrn __imp_??0DSTRING@@QAE@XZ:dword
.idata:00405194                                         ; CODE XREF: REPLACE::GetArgumentsCmd(void)+22↑p
.idata:00405194                                         ; REPLACE::REPLACE(void)+17↑p ...
.idata:00405198 ; __declspec(dllimport) public: virtual __thiscall DSTRING::~DSTRING(void)
.idata:00405198                 extrn __imp_??1DSTRING@@UAE@XZ:dword
.idata:00405198                                         ; CODE XREF: REPLACE::GetArgumentsCmd(void)+312↑p
.idata:00405198                                         ; REPLACE::~REPLACE(void)+16↑p ...
.idata:0040519C ; __declspec(dllimport) public: unsigned char __thiscall FSN_DIRECTORY::Traverse(void *, class FSN_FILTER *, class PATH *, unsigned char (__stdcall *)(void *, class FSNODE *, class PATH *))const
.idata:0040519C                 extrn __imp_?Traverse@FSN_DIRECTORY@@QBEEPAXPAVFSN_FILTER@@PAVPATH@@P6GE0PAVFSNODE@@2@Z@Z:dword
.idata:0040519C                                         ; CODE XREF: REPLACE::DoReplace(void)+1C0↑p
.idata:0040519C                                         ; DATA XREF: REPLACE::DoReplace(void)+1C0↑r
.idata:004051A0 ; __declspec(dllimport) public: virtual long __thiscall OBJECT::Compare(class OBJECT const *)const
.idata:004051A0                 extrn __imp_?Compare@OBJECT@@UBEJPBV1@@Z:dword
.idata:004051A0                                         ; DATA XREF: OBJECT::Compare(OBJECT const *)↑r
.idata:004051A4                 extrn _ulib_NULL_THUNK_DATA:byte:4
.idata:004051A4
.idata:004051A8 ; ===========================================================================
.idata:004051A8
.idata:004051A8 ; Segment type: Pure data
.idata:004051A8 ; Segment permissions: Read
.idata:004051A8 _idata          segment para public 'DATA' use32
.idata:004051A8                 assume cs:_idata
.idata:004051A8                 ;org 4051A8h
.idata:004051A8 ___guard_check_icall_fptr dd offset @_guard_check_icall_nop@4
.idata:004051A8                                         ; DATA XREF: .text:00401090↑o
.idata:004051A8                                         ; REPLACE::SetArguments(void)+2C5↑r ...
.idata:004051A8                                         ; _guard_check_icall_nop(x)
.idata:004051AC __IMPORT_DESCRIPTOR_KERNEL32 dd rva off_405210 ; Import Name Table
.idata:004051B0                 dd 0                    ; Time stamp
.idata:004051B4                 dd 0                    ; Forwarder Chain
.idata:004051B8                 dd rva aKernel32Dll     ; DLL Name
.idata:004051BC                 dd rva __imp__GetCommandLineW@0 ; Import Address Table
.idata:004051C0 __IMPORT_DESCRIPTOR_msvcrt dd rva off_405250 ; Import Name Table
.idata:004051C4                 dd 0                    ; Time stamp
.idata:004051C8                 dd 0                    ; Forwarder Chain
.idata:004051CC                 dd rva aMsvcrtDll       ; DLL Name
.idata:004051D0                 dd rva __imp_?terminate@@YAXXZ ; Import Address Table
.idata:004051D4 __IMPORT_DESCRIPTOR_ulib dd rva off_405298 ; Import Name Table
.idata:004051D8                 dd 0                    ; Time stamp
.idata:004051DC                 dd 0                    ; Forwarder Chain
.idata:004051E0                 dd rva aUlibDll         ; DLL Name
.idata:004051E4                 dd rva __imp_?PrepareToParse@ARGUMENT_LEXEMIZER@@QAEEPAVWSTRING@@@Z ; Import Address Table
.idata:004051E8 __IMPORT_DESCRIPTOR_ntdll dd rva off_40528C ; Import Name Table
.idata:004051EC                 dd 0                    ; Time stamp
.idata:004051F0                 dd 0                    ; Forwarder Chain
.idata:004051F4                 dd rva aNtdllDll        ; DLL Name
.idata:004051F8                 dd rva __imp__RtlAllocateHeap@12 ; Import Address Table
.idata:004051FC __NULL_IMPORT_DESCRIPTOR db    0
.idata:004051FD                 db    0
.idata:004051FE                 db    0
.idata:004051FF                 db    0
.idata:00405200                 db    0
.idata:00405201                 db    0
.idata:00405202                 db    0
.idata:00405203                 db    0
.idata:00405204                 db    0
.idata:00405205                 db    0
.idata:00405206                 db    0
.idata:00405207                 db    0
.idata:00405208                 db    0
.idata:00405209                 db    0
.idata:0040520A                 db    0
.idata:0040520B                 db    0
.idata:0040520C                 db    0
.idata:0040520D                 db    0
.idata:0040520E                 db    0
.idata:0040520F                 db    0
.idata:00405210 ;
.idata:00405210 ; Import names for KERNEL32.dll
.idata:00405210 ;
.idata:00405210 off_405210      dd rva word_4053B8      ; DATA XREF: .idata:__IMPORT_DESCRIPTOR_KERNEL32↑o
.idata:00405214                 dd rva word_4053CA
.idata:00405218                 dd rva word_4053DA
.idata:0040521C                 dd rva word_4053F0
.idata:00405220                 dd rva word_405FEC
.idata:00405224                 dd rva word_405FD0
.idata:00405228                 dd rva word_405FC0
.idata:0040522C                 dd rva word_405FA6
.idata:00405230                 dd rva word_405F90
.idata:00405234                 dd rva word_405F7A
.idata:00405238                 dd rva word_405F60
.idata:0040523C                 dd rva word_405F4C
.idata:00405240                 dd rva word_405F2E
.idata:00405244                 dd rva word_405F26
.idata:00405248                 dd rva word_406000
.idata:0040524C                 dd 0
.idata:00405250 ;
.idata:00405250 ; Import names for msvcrt.dll
.idata:00405250 ;
.idata:00405250 off_405250      dd rva word_4054AC      ; DATA XREF: .idata:__IMPORT_DESCRIPTOR_msvcrt↑o
.idata:00405254                 dd rva word_4054C0
.idata:00405258                 dd rva word_4054CE
.idata:0040525C                 dd rva word_405412
.idata:00405260                 dd rva word_405420
.idata:00405264                 dd rva word_405430
.idata:00405268                 dd rva word_40543E
.idata:0040526C                 dd rva word_40544E
.idata:00405270                 dd rva word_405460
.idata:00405274                 dd rva word_405468
.idata:00405278                 dd rva word_405472
.idata:0040527C                 dd rva word_405480
.idata:00405280                 dd rva word_40540A
.idata:00405284                 dd rva word_405494
.idata:00405288                 dd 0
.idata:0040528C ;
.idata:0040528C ; Import names for ntdll.dll
.idata:0040528C ;
.idata:0040528C off_40528C      dd rva word_405EFC      ; DATA XREF: .idata:__IMPORT_DESCRIPTOR_ntdll↑o
.idata:00405290                 dd rva word_405F0E
.idata:00405294                 dd 0
.idata:00405298 ;
.idata:00405298 ; Import names for ulib.dll
.idata:00405298 ;
.idata:00405298 off_405298      dd rva word_4056AA      ; DATA XREF: .idata:__IMPORT_DESCRIPTOR_ulib↑o
.idata:0040529C                 dd rva word_4056E4
.idata:004052A0                 dd rva word_405722
.idata:004052A4                 dd rva word_405758
.idata:004052A8                 dd rva word_405788
.idata:004052AC                 dd rva word_4057C4
.idata:004052B0                 dd rva word_4057F6
.idata:004052B4                 dd rva word_40582A
.idata:004052B8                 dd rva word_40584A
.idata:004052BC                 dd rva word_40586A
.idata:004052C0                 dd rva word_405888
.idata:004052C4                 dd rva word_4058AA
.idata:004052C8                 dd rva word_4058C6
.idata:004052CC                 dd rva word_4058E6
.idata:004052D0                 dd rva word_4058F8
.idata:004052D4                 dd rva word_40591A
.idata:004052D8                 dd rva word_40593C
.idata:004052DC                 dd rva word_40560A
.idata:004052E0                 dd rva word_40597A
.idata:004052E4                 dd rva word_40598C
.idata:004052E8                 dd rva word_40599E
.idata:004052EC                 dd rva word_4059DA
.idata:004052F0                 dd rva word_4059EE
.idata:004052F4                 dd rva word_405A08
.idata:004052F8                 dd rva word_4055EE
.idata:004052FC                 dd rva word_405A66
.idata:00405300                 dd rva word_405AA8
.idata:00405304                 dd rva word_405ABE
.idata:00405308                 dd rva word_40567A
.idata:0040530C                 dd rva word_405AFE
.idata:00405310                 dd rva word_405B2C
.idata:00405314                 dd rva word_405B5C
.idata:00405318                 dd rva word_405B8A
.idata:0040531C                 dd rva word_405BA4
.idata:00405320                 dd rva word_405BC2
.idata:00405324                 dd rva word_405BF6
.idata:00405328                 dd rva word_405C2C
.idata:0040532C                 dd rva word_405C42
.idata:00405330                 dd rva word_405C64
.idata:00405334                 dd rva word_405C8E
.idata:00405338                 dd rva word_405CAC
.idata:0040533C                 dd rva word_405CD0
.idata:00405340                 dd rva word_405CEE
.idata:00405344                 dd rva word_405D12
.idata:00405348                 dd rva word_405D3A
.idata:0040534C                 dd rva word_405D5E
.idata:00405350                 dd rva word_405D80
.idata:00405354                 dd rva word_405D96
.idata:00405358                 dd rva word_405DB4
.idata:0040535C                 dd rva word_405DDC
.idata:00405360                 dd rva word_405DFE
.idata:00405364                 dd rva word_405E26
.idata:00405368                 dd rva word_405E54
.idata:0040536C                 dd rva word_405E76
.idata:00405370                 dd rva word_405E8E
.idata:00405374                 dd rva word_405EA6
.idata:00405378                 dd rva word_405ECC
.idata:0040537C                 dd rva word_40565A
.idata:00405380                 dd rva word_405AE4
.idata:00405384                 dd rva word_405626
.idata:00405388                 dd rva word_4055C6
.idata:0040538C                 dd rva word_4055AA
.idata:00405390                 dd rva word_40557A
.idata:00405394                 dd rva word_405566
.idata:00405398                 dd rva word_405552
.idata:0040539C                 dd rva word_405534
.idata:004053A0                 dd rva word_405514
.idata:004053A4                 dd rva word_4054FE
.idata:004053A8                 dd rva word_4054E8
.idata:004053AC                 dd rva word_405A16
.idata:004053B0                 dd rva word_40595A
.idata:004053B4                 dd 0
.idata:004053B8 word_4053B8     dw 1D3h                 ; DATA XREF: .idata:off_405210↑o
.idata:004053BA                 db 'GetCommandLineW',0
.idata:004053CA word_4053CA     dw 25Ah                 ; DATA XREF: .idata:00405214↑o
.idata:004053CC                 db 'GetLastError',0
.idata:004053D9                 align 2
.idata:004053DA word_4053DA     dw 345h                 ; DATA XREF: .idata:00405218↑o
.idata:004053DC                 db 'HeapSetInformation',0
.idata:004053EF                 align 10h
.idata:004053F0 word_4053F0     dw 0ABh                 ; DATA XREF: .idata:0040521C↑o
.idata:004053F2                 db 'CopyFileW',0
.idata:004053FC aKernel32Dll    db 'KERNEL32.dll',0     ; DATA XREF: .idata:004051B8↑o
.idata:00405409                 align 2
.idata:0040540A word_40540A     dw 4AEh                 ; DATA XREF: .idata:00405280↑o
.idata:0040540C                 db 'exit',0
.idata:00405411                 align 2
.idata:00405412 word_405412     dw 6Fh                  ; DATA XREF: .idata:0040525C↑o
.idata:00405414                 db '_XcptFilter',0
.idata:00405420 word_405420     dw 0C9h                 ; DATA XREF: .idata:00405260↑o
.idata:00405422                 db '__p__commode',0
.idata:0040542F                 align 10h
.idata:00405430 word_405430     dw 111h                 ; DATA XREF: .idata:00405264↑o
.idata:00405432                 db '_amsg_exit',0
.idata:0040543D                 align 2
.idata:0040543E word_40543E     dw 0A1h                 ; DATA XREF: .idata:00405268↑o
.idata:00405440                 db '__getmainargs',0
.idata:0040544E word_40544E     dw 0E2h                 ; DATA XREF: .idata:0040526C↑o
.idata:00405450                 db '__set_app_type',0
.idata:0040545F                 align 10h
.idata:00405460 word_405460     dw 173h                 ; DATA XREF: .idata:00405270↑o
.idata:00405462                 db '_exit',0
.idata:00405468 word_405468     dw 124h                 ; DATA XREF: .idata:00405274↑o
.idata:0040546A                 db '_cexit',0
.idata:00405471                 align 2
.idata:00405472 word_405472     dw 0CEh                 ; DATA XREF: .idata:00405278↑o
.idata:00405474                 db '__p__fmode',0
.idata:0040547F                 align 10h
.idata:00405480 word_405480     dw 0E4h                 ; DATA XREF: .idata:0040527C↑o
.idata:00405482                 db '__setusermatherr',0
.idata:00405493                 align 4
.idata:00405494 word_405494     dw 1E8h                 ; DATA XREF: .idata:00405284↑o
.idata:00405496                 db '_initterm',0
.idata:004054A0 aMsvcrtDll      db 'msvcrt.dll',0       ; DATA XREF: .idata:004051CC↑o
.idata:004054AB                 align 4
.idata:004054AC word_4054AC     dw 35h                  ; DATA XREF: .idata:off_405250↑o
.idata:004054AE                 db '?terminate@@YAXXZ',0
.idata:004054C0 word_4054C0     dw 137h                 ; DATA XREF: .idata:00405254↑o
.idata:004054C2                 db '_controlfp',0
.idata:004054CD                 align 2
.idata:004054CE word_4054CE     dw 16Ah                 ; DATA XREF: .idata:00405258↑o
.idata:004054D0                 db '_except_handler4_common',0
.idata:004054E8 word_4054E8     dw 3Ch                  ; DATA XREF: .idata:004053A8↑o
.idata:004054EA                 db '??1DSTRING@@UAE@XZ',0
.idata:004054FD                 align 2
.idata:004054FE word_4054FE     dw 0Fh                  ; DATA XREF: .idata:004053A4↑o
.idata:00405500                 db '??0DSTRING@@QAE@XZ',0
.idata:00405513                 align 4
.idata:00405514 word_405514     dw 118h                 ; DATA XREF: .idata:004053A0↑o
.idata:00405516                 db '?Put@ARRAY@@UAEEPAVOBJECT@@@Z',0
.idata:00405534 word_405534     dw 0C0h                 ; DATA XREF: .idata:0040539C↑o
.idata:00405536                 db '?Initialize@ARRAY@@QAEEKK@Z',0
.idata:00405552 word_405552     dw 35h                  ; DATA XREF: .idata:00405398↑o
.idata:00405554                 db '??1ARRAY@@UAE@XZ',0
.idata:00405565                 align 2
.idata:00405566 word_405566     dw 2                    ; DATA XREF: .idata:00405394↑o
.idata:00405568                 db '??0ARRAY@@QAE@XZ',0
.idata:00405579                 align 2
.idata:0040557A word_40557A     dw 0CBh                 ; DATA XREF: .idata:00405390↑o
.idata:0040557C                 db '?Initialize@FLAG_ARGUMENT@@QAEEPAVWSTRING@@@Z',0
.idata:004055AA word_4055AA     dw 10h                  ; DATA XREF: .idata:0040538C↑o
.idata:004055AC                 db '??0FLAG_ARGUMENT@@QAE@XZ',0
.idata:004055C5                 align 2
.idata:004055C6 word_4055C6     dw 0DAh                 ; DATA XREF: .idata:00405388↑o
.idata:004055C8                 db '?Initialize@PATH_ARGUMENT@@QAEEPADE@Z',0
.idata:004055EE word_4055EE     dw 49h                  ; DATA XREF: .idata:004052F8↑o
.idata:004055F0                 db '??1PATH_ARGUMENT@@UAE@XZ',0
.idata:00405609                 align 2
.idata:0040560A word_40560A     dw 24h                  ; DATA XREF: .idata:004052DC↑o
.idata:0040560C                 db '??0PATH_ARGUMENT@@QAE@XZ',0
.idata:00405625                 align 2
.idata:00405626 word_405626     dw 12Fh                 ; DATA XREF: .idata:00405384↑o
.idata:00405628                 db '?QueryFile@SYSTEM@@SGPAVFSN_FILE@@PBVPATH@@EPAE@Z',0
.idata:0040565A word_40565A     dw 0FFh                 ; DATA XREF: .idata:0040537C↑o
.idata:0040565C                 db '?IsValueSet@ARGUMENT@@QAEEXZ',0
.idata:00405679                 align 2
.idata:0040567A word_40567A     dw 177h                 ; DATA XREF: .idata:00405308↑o
.idata:0040567C                 db '?SetCaseSensitive@ARGUMENT_LEXEMIZER@@QAEXE@Z',0
.idata:004056AA word_4056AA     dw 117h                 ; DATA XREF: .idata:off_405298↑o
.idata:004056AC                 db '?PrepareToParse@ARGUMENT_LEXEMIZER@@QAEEPAVWSTRING@@@Z',0
.idata:004056E3                 align 4
.idata:004056E4 word_4056E4     dw 135h                 ; DATA XREF: .idata:0040529C↑o
.idata:004056E6                 db '?QueryInvalidArgument@ARGUMENT_LEXEMIZER@@QAEPAVWSTRING@@XZ',0
.idata:00405722 word_405722     dw 122h                 ; DATA XREF: .idata:004052A0↑o
.idata:00405724                 db '?PutSwitches@ARGUMENT_LEXEMIZER@@QAEXPBVWSTRING@@@Z',0
.idata:00405758 word_405758     dw 11Dh                 ; DATA XREF: .idata:004052A4↑o
.idata:0040575A                 db '?PutSeparators@ARGUMENT_LEXEMIZER@@QAEXPBD@Z',0
.idata:00405787                 align 4
.idata:00405788 word_405788     dw 11Ch                 ; DATA XREF: .idata:004052A8↑o
.idata:0040578A                 db '?PutMultipleSwitch@ARGUMENT_LEXEMIZER@@QAEXPBVWSTRING@@@Z',0
.idata:004057C4 word_4057C4     dw 9Ch                  ; DATA XREF: .idata:004052AC↑o
.idata:004057C6                 db '?DoParsing@ARGUMENT_LEXEMIZER@@QAEEPAVARRAY@@@Z',0
.idata:004057F6 word_4057F6     dw 0BFh                 ; DATA XREF: .idata:004052B0↑o
.idata:004057F8                 db '?Initialize@ARGUMENT_LEXEMIZER@@QAEEPAVARRAY@@@Z',0
.idata:00405829                 align 2
.idata:0040582A word_40582A     dw 34h                  ; DATA XREF: .idata:004052B4↑o
.idata:0040582C                 db '??1ARGUMENT_LEXEMIZER@@UAE@XZ',0
.idata:0040584A word_40584A     dw 1                    ; DATA XREF: .idata:004052B8↑o
.idata:0040584C                 db '??0ARGUMENT_LEXEMIZER@@QAE@XZ',0
.idata:0040586A word_40586A     dw 143h                 ; DATA XREF: .idata:004052BC↑o
.idata:0040586C                 db '?QueryPath@PATH@@QBEPAV1@XZ',0
.idata:00405888 word_405888     dw 132h                 ; DATA XREF: .idata:004052C0↑o
.idata:0040588A                 db '?QueryFullPath@PATH@@QBEPAV1@XZ',0
.idata:004058AA word_4058AA     dw 0BEh                 ; DATA XREF: .idata:004052C4↑o
.idata:004058AC                 db '?HasWildCard@PATH@@QBEEXZ',0
.idata:004058C6 word_4058C6     dw 0D7h                 ; DATA XREF: .idata:004052C8↑o
.idata:004058C8                 db '?Initialize@PATH@@QAEEPBGE@Z',0
.idata:004058E5                 align 2
.idata:004058E6 word_4058E6     dw 23h                  ; DATA XREF: .idata:004052CC↑o
.idata:004058E8                 db '??0PATH@@QAE@XZ',0
.idata:004058F8 word_4058F8     dw 0EAh                 ; DATA XREF: .idata:004052D0↑o
.idata:004058FA                 db '?Initialize@WSTRING@@QAEEPBGK@Z',0
.idata:0040591A word_40591A     dw 0E9h                 ; DATA XREF: .idata:004052D4↑o
.idata:0040591C                 db '?Initialize@WSTRING@@QAEEPBDK@Z',0
.idata:0040593C word_40593C     dw 88h                  ; DATA XREF: .idata:004052D8↑o
.idata:0040593E                 db '?DebugDump@OBJECT@@UBEXE@Z',0
.idata:00405959                 align 2
.idata:0040595A word_40595A     dw 7Bh                  ; DATA XREF: .idata:004053B0↑o
.idata:0040595C                 db '?Compare@OBJECT@@UBEJPBV1@@Z',0
.idata:00405979                 align 2
.idata:0040597A word_40597A     dw 48h                  ; DATA XREF: .idata:004052E0↑o
.idata:0040597C                 db '??1PATH@@UAE@XZ',0
.idata:0040598C word_40598C     dw 6Ah                  ; DATA XREF: .idata:004052E4↑o
.idata:0040598E                 db '??_7OBJECT@@6B@',0
.idata:0040599E word_40599E     dw 12Ch                 ; DATA XREF: .idata:004052E8↑o
.idata:004059A0                 db '?QueryDirectory@SYSTEM@@SGPAVFSN_DIRECTORY@@PBVPATH@@E@Z',0
.idata:004059D9                 align 2
.idata:004059DA word_4059DA     dw 47h                  ; DATA XREF: .idata:004052EC↑o
.idata:004059DC                 db '??1OBJECT@@UAE@XZ',0
.idata:004059EE word_4059EE     dw 5Fh                  ; DATA XREF: .idata:004052F0↑o
.idata:004059F0                 db '??MTIMEINFO@@QBEEV0@@Z',0
.idata:00405A07                 align 4
.idata:00405A08 word_405A08     dw 1CEh                 ; DATA XREF: .idata:004052F4↑o
.idata:00405A0A                 db 'UlibRealloc',0
.idata:00405A16 word_405A16     dw 1B6h                 ; DATA XREF: .idata:004053AC↑o
.idata:00405A18                 db '?Traverse@FSN_DIRECTORY@@QBEEPAXPAVFSN_FILTER@@PAVPATH@@P6GE0PAVF'
.idata:00405A18                 db 'SNODE@@2@Z@Z',0
.idata:00405A66 word_405A66     dw 131h                 ; DATA XREF: .idata:004052FC↑o
.idata:00405A68                 db '?QueryFsnodeArray@FSN_DIRECTORY@@QBEPAVARRAY@@PAVFSN_FILTER@@@Z',0
.idata:00405AA8 word_405AA8     dw 26h                  ; DATA XREF: .idata:00405300↑o
.idata:00405AAA                 db '??0PROGRAM@@IAE@XZ',0
.idata:00405ABD                 align 2
.idata:00405ABE word_405ABE     dw 1BFh                 ; DATA XREF: .idata:00405304↑o
.idata:00405AC0                 db '?ValidateVersion@PROGRAM@@UBEXKK@Z',0
.idata:00405AE3                 align 4
.idata:00405AE4 word_405AE4     dw 1BDh                 ; DATA XREF: .idata:00405380↑o
.idata:00405AE6                 db '?Usage@PROGRAM@@UBEXXZ',0
.idata:00405AFD                 align 2
.idata:00405AFE word_405AFE     dw 0B9h                 ; DATA XREF: .idata:0040530C↑o
.idata:00405B00                 db '?GetStandardError@PROGRAM@@UAEPAVSTREAM@@XZ',0
.idata:00405B2C word_405B2C     dw 0BBh                 ; DATA XREF: .idata:00405310↑o
.idata:00405B2E                 db '?GetStandardOutput@PROGRAM@@UAEPAVSTREAM@@XZ',0
.idata:00405B5B                 align 4
.idata:00405B5C word_405B5C     dw 0BAh                 ; DATA XREF: .idata:00405314↑o
.idata:00405B5E                 db '?GetStandardInput@PROGRAM@@UAEPAVSTREAM@@XZ',0
.idata:00405B8A word_405B8A     dw 0A7h                 ; DATA XREF: .idata:00405318↑o
.idata:00405B8C                 db '?Fatal@PROGRAM@@UBEXXZ',0
.idata:00405BA3                 align 4
.idata:00405BA4 word_405BA4     dw 0A6h                 ; DATA XREF: .idata:0040531C↑o
.idata:00405BA6                 db '?Fatal@PROGRAM@@UBAXKKPADZZ',0
.idata:00405BC2 word_405BC2     dw 95h                  ; DATA XREF: .idata:00405320↑o
.idata:00405BC4                 db '?DisplayMessage@PROGRAM@@UBEEKW4MESSAGE_TYPE@@@Z',0
.idata:00405BF5                 align 2
.idata:00405BF6 word_405BF6     dw 94h                  ; DATA XREF: .idata:00405324↑o
.idata:00405BF8                 db '?DisplayMessage@PROGRAM@@UBAEKW4MESSAGE_TYPE@@PADZZ',0
.idata:00405C2C word_405C2C     dw 4Bh                  ; DATA XREF: .idata:00405328↑o
.idata:00405C2E                 db '??1PROGRAM@@UAE@XZ',0
.idata:00405C41                 align 2
.idata:00405C42 word_405C42     dw 0DCh                 ; DATA XREF: .idata:0040532C↑o
.idata:00405C44                 db '?Initialize@PROGRAM@@QAEEKKK@Z',0
.idata:00405C63                 align 4
.idata:00405C64 word_405C64     dw 0C7h                 ; DATA XREF: .idata:00405330↑o
.idata:00405C66                 db '?Initialize@CLASS_DESCRIPTOR@@QAEEPBD@Z',0
.idata:00405C8E word_405C8E     dw 0Bh                  ; DATA XREF: .idata:00405334↑o
.idata:00405C90                 db '??0CLASS_DESCRIPTOR@@QAE@XZ',0
.idata:00405CAC word_405CAC     dw 173h                 ; DATA XREF: .idata:00405338↑o
.idata:00405CAE                 db '?SetAttributes@FSNODE@@QAEEKPAK@Z',0
.idata:00405CD0 word_405CD0     dw 0BDh                 ; DATA XREF: .idata:0040533C↑o
.idata:00405CD2                 db '?GotABreak@KEYBOARD@@SGEXZ',0
.idata:00405CED                 align 2
.idata:00405CEE word_405CEE     dw 0A0h                 ; DATA XREF: .idata:00405340↑o
.idata:00405CF0                 db '?EnableLineMode@KEYBOARD@@QAEEXZ',0
.idata:00405D11                 align 2
.idata:00405D12 word_405D12     dw 9Fh                  ; DATA XREF: .idata:00405344↑o
.idata:00405D14                 db '?EnableBreakHandling@KEYBOARD@@SGEXZ',0
.idata:00405D39                 align 2
.idata:00405D3A word_405D3A     dw 92h                  ; DATA XREF: .idata:00405348↑o
.idata:00405D3C                 db '?DisableLineMode@KEYBOARD@@QAEEXZ',0
.idata:00405D5E word_405D5E     dw 0CFh                 ; DATA XREF: .idata:0040534C↑o
.idata:00405D60                 db '?Initialize@KEYBOARD@@QAEEEE@Z',0
.idata:00405D7F                 align 10h
.idata:00405D80 word_405D80     dw 18h                  ; DATA XREF: .idata:00405350↑o
.idata:00405D82                 db '??0KEYBOARD@@QAE@XZ',0
.idata:00405D96 word_405D96     dw 1B8h                 ; DATA XREF: .idata:00405354↑o
.idata:00405D98                 db '?TruncateBase@PATH@@QAEEXZ',0
.idata:00405DB3                 align 4
.idata:00405DB4 word_405DB4     dw 71h                  ; DATA XREF: .idata:00405358↑o
.idata:00405DB6                 db '?AppendBase@PATH@@QAEEPBVWSTRING@@E@Z',0
.idata:00405DDC word_405DDC     dw 0D8h                 ; DATA XREF: .idata:0040535C↑o
.idata:00405DDE                 db '?Initialize@PATH@@QAEEPBV1@E@Z',0
.idata:00405DFD                 align 2
.idata:00405DFE word_405DFE     dw 174h                 ; DATA XREF: .idata:00405360↑o
.idata:00405E00                 db '?SetAttributes@FSN_FILTER@@QAEEKKK@Z',0
.idata:00405E25                 align 2
.idata:00405E26 word_405E26     dw 181h                 ; DATA XREF: .idata:00405364↑o
.idata:00405E28                 db '?SetFileName@FSN_FILTER@@QAEEPBVWSTRING@@@Z',0
.idata:00405E54 word_405E54     dw 0CCh                 ; DATA XREF: .idata:00405368↑o
.idata:00405E56                 db '?Initialize@FSN_FILTER@@QAEEXZ',0
.idata:00405E75                 align 2
.idata:00405E76 word_405E76     dw 3Dh                  ; DATA XREF: .idata:0040536C↑o
.idata:00405E78                 db '??1FSN_FILTER@@UAE@XZ',0
.idata:00405E8E word_405E8E     dw 11h                  ; DATA XREF: .idata:00405370↑o
.idata:00405E90                 db '??0FSN_FILTER@@QAE@XZ',0
.idata:00405EA6 word_405EA6     dw 154h                 ; DATA XREF: .idata:00405374↑o
.idata:00405EA8                 db '?QueryWSTR@WSTRING@@QBEPAGKKPAGKE@Z',0
.idata:00405ECC word_405ECC     dw 14Dh                 ; DATA XREF: .idata:00405378↑o
.idata:00405ECE                 db '?QueryString@WSTRING@@QBEPAV1@KK@Z',0
.idata:00405EF1                 align 2
.idata:00405EF2 aUlibDll        db 'ulib.dll',0         ; DATA XREF: .idata:004051E0↑o
.idata:00405EFB                 align 4
.idata:00405EFC word_405EFC     dw 2BFh                 ; DATA XREF: .idata:off_40528C↑o
.idata:00405EFE                 db 'RtlAllocateHeap',0
.idata:00405F0E word_405F0E     dw 3C4h                 ; DATA XREF: .idata:00405290↑o
.idata:00405F10                 db 'RtlFreeHeap',0
.idata:00405F1C aNtdllDll       db 'ntdll.dll',0        ; DATA XREF: .idata:004051F4↑o
.idata:00405F26 word_405F26     dw 56Dh                 ; DATA XREF: .idata:00405244↑o
.idata:00405F28                 db 'Sleep',0
.idata:00405F2E word_405F2E     dw 55Eh                 ; DATA XREF: .idata:00405240↑o
.idata:00405F30                 db 'SetUnhandledExceptionFilter',0
.idata:00405F4C word_405F4C     dw 26Eh                 ; DATA XREF: .idata:0040523C↑o
.idata:00405F4E                 db 'GetModuleHandleA',0
.idata:00405F5F                 align 10h
.idata:00405F60 word_405F60     dw 440h                 ; DATA XREF: .idata:00405238↑o
.idata:00405F62                 db 'QueryPerformanceCounter',0
.idata:00405F7A word_405F7A     dw 214h                 ; DATA XREF: .idata:00405234↑o
.idata:00405F7C                 db 'GetCurrentProcessId',0
.idata:00405F90 word_405F90     dw 218h                 ; DATA XREF: .idata:00405230↑o
.idata:00405F92                 db 'GetCurrentThreadId',0
.idata:00405FA5                 align 2
.idata:00405FA6 word_405FA6     dw 2E2h                 ; DATA XREF: .idata:0040522C↑o
.idata:00405FA8                 db 'GetSystemTimeAsFileTime',0
.idata:00405FC0 word_405FC0     dw 300h                 ; DATA XREF: .idata:00405228↑o
.idata:00405FC2                 db 'GetTickCount',0
.idata:00405FCF                 align 10h
.idata:00405FD0 word_405FD0     dw 59Dh                 ; DATA XREF: .idata:00405224↑o
.idata:00405FD2                 db 'UnhandledExceptionFilter',0
.idata:00405FEB                 align 4
.idata:00405FEC word_405FEC     dw 213h                 ; DATA XREF: .idata:00405220↑o
.idata:00405FEE                 db 'GetCurrentProcess',0
.idata:00406000 word_406000     dw 57Ch                 ; DATA XREF: .idata:00405248↑o
.idata:00406002                 db 'TerminateProcess',0
.idata:00406013                 align 1000h
.idata:00406013 _idata          ends
.idata:00406013
.idata:00406013
.idata:00406013                 end _mainCRTStartup
